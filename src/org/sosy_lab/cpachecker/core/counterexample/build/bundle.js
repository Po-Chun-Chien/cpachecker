!function(l){function Z(Z){for(var d,G,W=Z[0],i=Z[1],X=Z[2],u=0,a=[];u<W.length;u++)G=W[u],Object.prototype.hasOwnProperty.call(c,G)&&c[G]&&a.push(c[G][0]),c[G]=0;for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(l[d]=i[d]);for(n&&n(Z);a.length;)a.shift()();return m.push.apply(m,X||[]),b()}function b(){for(var l,Z=0;Z<m.length;Z++){for(var b=m[Z],d=!0,W=1;W<b.length;W++){var i=b[W];0!==c[i]&&(d=!1)}d&&(m.splice(Z--,1),l=G(G.s=b[0]))}return l}var d={},c={1:0},m=[];function G(Z){if(d[Z])return d[Z].exports;var b=d[Z]={i:Z,l:!1,exports:{}};return l[Z].call(b.exports,b,b.exports,G),b.l=!0,b.exports}G.m=l,G.c=d,G.d=function(l,Z,b){G.o(l,Z)||Object.defineProperty(l,Z,{enumerable:!0,get:b})},G.r=function(l){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(l,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(l,"__esModule",{value:!0})},G.t=function(l,Z){if(1&Z&&(l=G(l)),8&Z)return l;if(4&Z&&"object"==typeof l&&l&&l.__esModule)return l;var b=Object.create(null);if(G.r(b),Object.defineProperty(b,"default",{enumerable:!0,value:l}),2&Z&&"string"!=typeof l)for(var d in l)G.d(b,d,function(Z){return l[Z]}.bind(null,d));return b},G.n=function(l){var Z=l&&l.__esModule?function(){return l.default}:function(){return l};return G.d(Z,"a",Z),Z},G.o=function(l,Z){return Object.prototype.hasOwnProperty.call(l,Z)},G.p="";var W=window.webpackJsonp=window.webpackJsonp||[],i=W.push.bind(W);W.push=Z,W=W.slice();for(var X=0;X<W.length;X++)Z(W[X]);var n=i;m.push([21,0]),b()}({17:function(l,Z,b){!function(l){"use strict";function Z(l,Z){return l<Z?-1:l>Z?1:l>=Z?0:NaN}function b(l){return 1===l.length&&(l=function(l){return function(b,d){return Z(l(b),d)}}(l)),{left:function(Z,b,d,c){for(null==d&&(d=0),null==c&&(c=Z.length);d<c;){var m=d+c>>>1;l(Z[m],b)<0?d=m+1:c=m}return d},right:function(Z,b,d,c){for(null==d&&(d=0),null==c&&(c=Z.length);d<c;){var m=d+c>>>1;l(Z[m],b)>0?c=m:d=m+1}return d}}}function d(l,Z){return[l,Z]}function c(l){return null===l?NaN:+l}function m(l,Z){var b,d,m=l.length,G=0,W=-1,i=0,X=0;if(null==Z)for(;++W<m;)isNaN(b=c(l[W]))||(X+=(d=b-i)*(b-(i+=d/++G)));else for(;++W<m;)isNaN(b=c(Z(l[W],W,l)))||(X+=(d=b-i)*(b-(i+=d/++G)));if(G>1)return X/(G-1)}function G(l,Z){var b=m(l,Z);return b?Math.sqrt(b):b}function W(l,Z){var b,d,c,m=l.length,G=-1;if(null==Z){for(;++G<m;)if(null!=(b=l[G])&&b>=b)for(d=c=b;++G<m;)null!=(b=l[G])&&(d>b&&(d=b),c<b&&(c=b))}else for(;++G<m;)if(null!=(b=Z(l[G],G,l))&&b>=b)for(d=c=b;++G<m;)null!=(b=Z(l[G],G,l))&&(d>b&&(d=b),c<b&&(c=b));return[d,c]}function i(l){return function(){return l}}function X(l){return l}function n(l,Z,b){l=+l,Z=+Z,b=(c=arguments.length)<2?(Z=l,l=0,1):c<3?1:+b;for(var d=-1,c=0|Math.max(0,Math.ceil((Z-l)/b)),m=new Array(c);++d<c;)m[d]=l+d*b;return m}function u(l,Z,b){var d,c,m,G,W=-1;if(b=+b,(l=+l)==(Z=+Z)&&b>0)return[l];if((d=Z<l)&&(c=l,l=Z,Z=c),0===(G=a(l,Z,b))||!isFinite(G))return[];if(G>0)for(l=Math.ceil(l/G),Z=Math.floor(Z/G),m=new Array(c=Math.ceil(Z-l+1));++W<c;)m[W]=(l+W)*G;else for(l=Math.floor(l*G),Z=Math.ceil(Z*G),m=new Array(c=Math.ceil(l-Z+1));++W<c;)m[W]=(l-W)/G;return d&&m.reverse(),m}function a(l,Z,b){var d=(Z-l)/Math.max(0,b),c=Math.floor(Math.log(d)/Math.LN10),m=d/Math.pow(10,c);return c>=0?(m>=QX?10:m>=PX?5:m>=DX?2:1)*Math.pow(10,c):-Math.pow(10,-c)/(m>=QX?10:m>=PX?5:m>=DX?2:1)}function V(l,Z,b){var d=Math.abs(Z-l)/Math.max(0,b),c=Math.pow(10,Math.floor(Math.log(d)/Math.LN10)),m=d/c;return m>=QX?c*=10:m>=PX?c*=5:m>=DX&&(c*=2),Z<l?-c:c}function h(l){return Math.ceil(Math.log(l.length)/Math.LN2)+1}function t(l,Z,b){if(null==b&&(b=c),d=l.length){if((Z=+Z)<=0||d<2)return+b(l[0],0,l);if(Z>=1)return+b(l[d-1],d-1,l);var d,m=(d-1)*Z,G=Math.floor(m),W=+b(l[G],G,l);return W+(+b(l[G+1],G+1,l)-W)*(m-G)}}function y(l,Z){var b,d,c=l.length,m=-1;if(null==Z){for(;++m<c;)if(null!=(b=l[m])&&b>=b)for(d=b;++m<c;)null!=(b=l[m])&&b>d&&(d=b)}else for(;++m<c;)if(null!=(b=Z(l[m],m,l))&&b>=b)for(d=b;++m<c;)null!=(b=Z(l[m],m,l))&&b>d&&(d=b);return d}function Y(l){for(var Z,b,d,c=l.length,m=-1,G=0;++m<c;)G+=l[m].length;for(b=new Array(G);--c>=0;)for(Z=(d=l[c]).length;--Z>=0;)b[--G]=d[Z];return b}function e(l,Z){var b,d,c=l.length,m=-1;if(null==Z){for(;++m<c;)if(null!=(b=l[m])&&b>=b)for(d=b;++m<c;)null!=(b=l[m])&&d>b&&(d=b)}else for(;++m<c;)if(null!=(b=Z(l[m],m,l))&&b>=b)for(d=b;++m<c;)null!=(b=Z(l[m],m,l))&&d>b&&(d=b);return d}function p(l){if(!(c=l.length))return[];for(var Z=-1,b=e(l,o),d=new Array(b);++Z<b;)for(var c,m=-1,G=d[Z]=new Array(c);++m<c;)G[m]=l[m][Z];return d}function o(l){return l.length}function s(l){return l}function I(l){return"translate("+(l+.5)+",0)"}function R(l){return"translate(0,"+(l+.5)+")"}function g(){return!this.__axis}function K(l,Z){function b(b){var a=null==c?Z.ticks?Z.ticks.apply(Z,d):Z.domain():c,V=null==m?Z.tickFormat?Z.tickFormat.apply(Z,d):s:m,h=Math.max(G,0)+i,t=Z.range(),y=+t[0]+.5,Y=+t[t.length-1]+.5,e=(Z.bandwidth?function(l){var Z=Math.max(0,l.bandwidth()-1)/2;return l.round()&&(Z=Math.round(Z)),function(b){return+l(b)+Z}}:function(l){return function(Z){return+l(Z)}})(Z.copy()),p=b.selection?b.selection():b,o=p.selectAll(".domain").data([null]),I=p.selectAll(".tick").data(a,Z).order(),R=I.exit(),K=I.enter().append("g").attr("class","tick"),N=I.select("line"),H=I.select("text");o=o.merge(o.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),I=I.merge(K),N=N.merge(K.append("line").attr("stroke","#000").attr(n+"2",X*G)),H=H.merge(K.append("text").attr("fill","#000").attr(n,X*h).attr("dy",l===EX?"0em":l===qX?"0.71em":"0.32em")),b!==p&&(o=o.transition(b),I=I.transition(b),N=N.transition(b),H=H.transition(b),R=R.transition(b).attr("opacity",$X).attr("transform",(function(l){return isFinite(l=e(l))?u(l):this.getAttribute("transform")})),K.attr("opacity",$X).attr("transform",(function(l){var Z=this.parentNode.__axis;return u(Z&&isFinite(Z=Z(l))?Z:e(l))}))),R.remove(),o.attr("d",l===_X||l==OX?"M"+X*W+","+y+"H0.5V"+Y+"H"+X*W:"M"+y+","+X*W+"V0.5H"+Y+"V"+X*W),I.attr("opacity",1).attr("transform",(function(l){return u(e(l))})),N.attr(n+"2",X*G),H.attr(n,X*h).text(V),p.filter(g).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",l===OX?"start":l===_X?"end":"middle"),p.each((function(){this.__axis=e}))}var d=[],c=null,m=null,G=6,W=6,i=3,X=l===EX||l===_X?-1:1,n=l===_X||l===OX?"x":"y",u=l===EX||l===qX?I:R;return b.scale=function(l){return arguments.length?(Z=l,b):Z},b.ticks=function(){return d=AX.call(arguments),b},b.tickArguments=function(l){return arguments.length?(d=null==l?[]:AX.call(l),b):d.slice()},b.tickValues=function(l){return arguments.length?(c=null==l?null:AX.call(l),b):c&&c.slice()},b.tickFormat=function(l){return arguments.length?(m=l,b):m},b.tickSize=function(l){return arguments.length?(G=W=+l,b):G},b.tickSizeInner=function(l){return arguments.length?(G=+l,b):G},b.tickSizeOuter=function(l){return arguments.length?(W=+l,b):W},b.tickPadding=function(l){return arguments.length?(i=+l,b):i},b}function N(){for(var l,Z=0,b=arguments.length,d={};Z<b;++Z){if(!(l=arguments[Z]+"")||l in d)throw new Error("illegal type: "+l);d[l]=[]}return new H(d)}function H(l){this._=l}function x(l,Z,b){for(var d=0,c=l.length;d<c;++d)if(l[d].name===Z){l[d]=ln,l=l.slice(0,d).concat(l.slice(d+1));break}return null!=b&&l.push({name:Z,value:b}),l}function J(l){var Z=l+="",b=Z.indexOf(":");return b>=0&&"xmlns"!==(Z=l.slice(0,b))&&(l=l.slice(b+1)),bn.hasOwnProperty(Z)?{space:bn[Z],local:l}:l}function L(l){var Z=J(l);return(Z.local?function(l){return function(){return this.ownerDocument.createElementNS(l.space,l.local)}}:function(l){return function(){var Z=this.ownerDocument,b=this.namespaceURI;return b===Zn&&Z.documentElement.namespaceURI===Zn?Z.createElement(l):Z.createElementNS(b,l)}})(Z)}function F(){}function C(l){return null==l?F:function(){return this.querySelector(l)}}function S(){return[]}function B(l){return null==l?S:function(){return this.querySelectorAll(l)}}function k(l){return new Array(l.length)}function v(l,Z){this.ownerDocument=l.ownerDocument,this.namespaceURI=l.namespaceURI,this._next=null,this._parent=l,this.__data__=Z}function z(l,Z,b,d,c,m){for(var G,W=0,i=Z.length,X=m.length;W<X;++W)(G=Z[W])?(G.__data__=m[W],d[W]=G):b[W]=new v(l,m[W]);for(;W<i;++W)(G=Z[W])&&(c[W]=G)}function M(l,Z,b,d,c,m,G){var W,i,X,n={},u=Z.length,a=m.length,V=new Array(u);for(W=0;W<u;++W)(i=Z[W])&&(V[W]=X=Wn+G.call(i,i.__data__,W,Z),X in n?c[W]=i:n[X]=i);for(W=0;W<a;++W)(i=n[X=Wn+G.call(l,m[W],W,m)])?(d[W]=i,i.__data__=m[W],n[X]=null):b[W]=new v(l,m[W]);for(W=0;W<u;++W)(i=Z[W])&&n[V[W]]===i&&(c[W]=i)}function r(l,Z){return l<Z?-1:l>Z?1:l>=Z?0:NaN}function T(l){return l.ownerDocument&&l.ownerDocument.defaultView||l.document&&l||l.defaultView}function j(l,Z){return l.style.getPropertyValue(Z)||T(l).getComputedStyle(l,null).getPropertyValue(Z)}function w(l){return l.trim().split(/^|\s+/)}function U(l){return l.classList||new f(l)}function f(l){this._node=l,this._names=w(l.getAttribute("class")||"")}function Q(l,Z){for(var b=U(l),d=-1,c=Z.length;++d<c;)b.add(Z[d])}function P(l,Z){for(var b=U(l),d=-1,c=Z.length;++d<c;)b.remove(Z[d])}function D(){this.textContent=""}function A(){this.innerHTML=""}function E(){this.nextSibling&&this.parentNode.appendChild(this)}function O(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function q(){return null}function _(){var l=this.parentNode;l&&l.removeChild(this)}function $(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function ll(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}function Zl(l,Z,b){return l=bl(l,Z,b),function(Z){var b=Z.relatedTarget;b&&(b===this||8&b.compareDocumentPosition(this))||l.call(this,Z)}}function bl(Z,b,d){return function(c){var m=l.event;l.event=c;try{Z.call(this,this.__data__,b,d)}finally{l.event=m}}}function dl(l){return function(){var Z=this.__on;if(Z){for(var b,d=0,c=-1,m=Z.length;d<m;++d)b=Z[d],l.type&&b.type!==l.type||b.name!==l.name?Z[++c]=b:this.removeEventListener(b.type,b.listener,b.capture);++c?Z.length=c:delete this.__on}}}function cl(l,Z,b){var d=Xn.hasOwnProperty(l.type)?Zl:bl;return function(c,m,G){var W,i=this.__on,X=d(Z,m,G);if(i)for(var n=0,u=i.length;n<u;++n)if((W=i[n]).type===l.type&&W.name===l.name)return this.removeEventListener(W.type,W.listener,W.capture),this.addEventListener(W.type,W.listener=X,W.capture=b),void(W.value=Z);this.addEventListener(l.type,X,b),W={type:l.type,name:l.name,value:Z,listener:X,capture:b},i?i.push(W):this.__on=[W]}}function ml(Z,b,d,c){var m=l.event;Z.sourceEvent=l.event,l.event=Z;try{return b.apply(d,c)}finally{l.event=m}}function Gl(l,Z,b){var d=T(l),c=d.CustomEvent;"function"==typeof c?c=new c(Z,b):(c=d.document.createEvent("Event"),b?(c.initEvent(Z,b.bubbles,b.cancelable),c.detail=b.detail):c.initEvent(Z,!1,!1)),l.dispatchEvent(c)}function Wl(l,Z){this._groups=l,this._parents=Z}function il(){return new Wl([[document.documentElement]],nn)}function Xl(l){return"string"==typeof l?new Wl([[document.querySelector(l)]],[document.documentElement]):new Wl([[l]],nn)}function nl(){return new ul}function ul(){this._="@"+(++un).toString(36)}function al(){for(var Z,b=l.event;Z=b.sourceEvent;)b=Z;return b}function Vl(l,Z){var b=l.ownerSVGElement||l;if(b.createSVGPoint){var d=b.createSVGPoint();return d.x=Z.clientX,d.y=Z.clientY,[(d=d.matrixTransform(l.getScreenCTM().inverse())).x,d.y]}var c=l.getBoundingClientRect();return[Z.clientX-c.left-l.clientLeft,Z.clientY-c.top-l.clientTop]}function hl(l){var Z=al();return Z.changedTouches&&(Z=Z.changedTouches[0]),Vl(l,Z)}function tl(l,Z,b){arguments.length<3&&(b=Z,Z=al().changedTouches);for(var d,c=0,m=Z?Z.length:0;c<m;++c)if((d=Z[c]).identifier===b)return Vl(l,d);return null}function yl(){l.event.stopImmediatePropagation()}function Yl(){l.event.preventDefault(),l.event.stopImmediatePropagation()}function el(l){var Z=l.document.documentElement,b=Xl(l).on("dragstart.drag",Yl,!0);"onselectstart"in Z?b.on("selectstart.drag",Yl,!0):(Z.__noselect=Z.style.MozUserSelect,Z.style.MozUserSelect="none")}function pl(l,Z){var b=l.document.documentElement,d=Xl(l).on("dragstart.drag",null);Z&&(d.on("click.drag",Yl,!0),setTimeout((function(){d.on("click.drag",null)}),0)),"onselectstart"in b?d.on("selectstart.drag",null):(b.style.MozUserSelect=b.__noselect,delete b.__noselect)}function ol(l){return function(){return l}}function sl(l,Z,b,d,c,m,G,W,i,X){this.target=l,this.type=Z,this.subject=b,this.identifier=d,this.active=c,this.x=m,this.y=G,this.dx=W,this.dy=i,this._=X}function Il(){return!l.event.button}function Rl(){return this.parentNode}function gl(Z){return null==Z?{x:l.event.x,y:l.event.y}:Z}function Kl(){return"ontouchstart"in this}function Nl(l,Z,b){l.prototype=Z.prototype=b,b.constructor=l}function Hl(l,Z){var b=Object.create(l.prototype);for(var d in Z)b[d]=Z[d];return b}function xl(){}function Jl(l){var Z;return l=(l+"").trim().toLowerCase(),(Z=tn.exec(l))?new Bl((Z=parseInt(Z[1],16))>>8&15|Z>>4&240,Z>>4&15|240&Z,(15&Z)<<4|15&Z,1):(Z=yn.exec(l))?Ll(parseInt(Z[1],16)):(Z=Yn.exec(l))?new Bl(Z[1],Z[2],Z[3],1):(Z=en.exec(l))?new Bl(255*Z[1]/100,255*Z[2]/100,255*Z[3]/100,1):(Z=pn.exec(l))?Fl(Z[1],Z[2],Z[3],Z[4]):(Z=on.exec(l))?Fl(255*Z[1]/100,255*Z[2]/100,255*Z[3]/100,Z[4]):(Z=sn.exec(l))?vl(Z[1],Z[2]/100,Z[3]/100,1):(Z=In.exec(l))?vl(Z[1],Z[2]/100,Z[3]/100,Z[4]):Rn.hasOwnProperty(l)?Ll(Rn[l]):"transparent"===l?new Bl(NaN,NaN,NaN,0):null}function Ll(l){return new Bl(l>>16&255,l>>8&255,255&l,1)}function Fl(l,Z,b,d){return d<=0&&(l=Z=b=NaN),new Bl(l,Z,b,d)}function Cl(l){return l instanceof xl||(l=Jl(l)),l?new Bl((l=l.rgb()).r,l.g,l.b,l.opacity):new Bl}function Sl(l,Z,b,d){return 1===arguments.length?Cl(l):new Bl(l,Z,b,null==d?1:d)}function Bl(l,Z,b,d){this.r=+l,this.g=+Z,this.b=+b,this.opacity=+d}function kl(l){return((l=Math.max(0,Math.min(255,Math.round(l)||0)))<16?"0":"")+l.toString(16)}function vl(l,Z,b,d){return d<=0?l=Z=b=NaN:b<=0||b>=1?l=Z=NaN:Z<=0&&(l=NaN),new Ml(l,Z,b,d)}function zl(l,Z,b,d){return 1===arguments.length?function(l){if(l instanceof Ml)return new Ml(l.h,l.s,l.l,l.opacity);if(l instanceof xl||(l=Jl(l)),!l)return new Ml;if(l instanceof Ml)return l;var Z=(l=l.rgb()).r/255,b=l.g/255,d=l.b/255,c=Math.min(Z,b,d),m=Math.max(Z,b,d),G=NaN,W=m-c,i=(m+c)/2;return W?(G=Z===m?(b-d)/W+6*(b<d):b===m?(d-Z)/W+2:(Z-b)/W+4,W/=i<.5?m+c:2-m-c,G*=60):W=i>0&&i<1?0:G,new Ml(G,W,i,l.opacity)}(l):new Ml(l,Z,b,null==d?1:d)}function Ml(l,Z,b,d){this.h=+l,this.s=+Z,this.l=+b,this.opacity=+d}function rl(l,Z,b){return 255*(l<60?Z+(b-Z)*l/60:l<180?b:l<240?Z+(b-Z)*(240-l)/60:Z)}function Tl(l){if(l instanceof wl)return new wl(l.l,l.a,l.b,l.opacity);if(l instanceof El){if(isNaN(l.h))return new wl(l.l,0,0,l.opacity);var Z=l.h*gn;return new wl(l.l,Math.cos(Z)*l.c,Math.sin(Z)*l.c,l.opacity)}l instanceof Bl||(l=Cl(l));var b,d,c=Pl(l.r),m=Pl(l.g),G=Pl(l.b),W=Ul((.2225045*c+.7168786*m+.0606169*G)/Hn);return c===m&&m===G?b=d=W:(b=Ul((.4360747*c+.3850649*m+.1430804*G)/Nn),d=Ul((.0139322*c+.0971045*m+.7141733*G)/xn)),new wl(116*W-16,500*(b-W),200*(W-d),l.opacity)}function jl(l,Z,b,d){return 1===arguments.length?Tl(l):new wl(l,Z,b,null==d?1:d)}function wl(l,Z,b,d){this.l=+l,this.a=+Z,this.b=+b,this.opacity=+d}function Ul(l){return l>Cn?Math.pow(l,1/3):l/Fn+Jn}function fl(l){return l>Ln?l*l*l:Fn*(l-Jn)}function Ql(l){return 255*(l<=.0031308?12.92*l:1.055*Math.pow(l,1/2.4)-.055)}function Pl(l){return(l/=255)<=.04045?l/12.92:Math.pow((l+.055)/1.055,2.4)}function Dl(l){if(l instanceof El)return new El(l.h,l.c,l.l,l.opacity);if(l instanceof wl||(l=Tl(l)),0===l.a&&0===l.b)return new El(NaN,0,l.l,l.opacity);var Z=Math.atan2(l.b,l.a)*Kn;return new El(Z<0?Z+360:Z,Math.sqrt(l.a*l.a+l.b*l.b),l.l,l.opacity)}function Al(l,Z,b,d){return 1===arguments.length?Dl(l):new El(l,Z,b,null==d?1:d)}function El(l,Z,b,d){this.h=+l,this.c=+Z,this.l=+b,this.opacity=+d}function Ol(l,Z,b,d){return 1===arguments.length?function(l){if(l instanceof ql)return new ql(l.h,l.s,l.l,l.opacity);l instanceof Bl||(l=Cl(l));var Z=l.r/255,b=l.g/255,d=l.b/255,c=(Mn*d+vn*Z-zn*b)/(Mn+vn-zn),m=d-c,G=(kn*(b-c)-Sn*m)/Bn,W=Math.sqrt(G*G+m*m)/(kn*c*(1-c)),i=W?Math.atan2(G,m)*Kn-120:NaN;return new ql(i<0?i+360:i,W,c,l.opacity)}(l):new ql(l,Z,b,null==d?1:d)}function ql(l,Z,b,d){this.h=+l,this.s=+Z,this.l=+b,this.opacity=+d}function _l(l,Z,b,d,c){var m=l*l,G=m*l;return((1-3*l+3*m-G)*Z+(4-6*m+3*G)*b+(1+3*l+3*m-3*G)*d+G*c)/6}function $l(l){var Z=l.length-1;return function(b){var d=b<=0?b=0:b>=1?(b=1,Z-1):Math.floor(b*Z),c=l[d],m=l[d+1],G=d>0?l[d-1]:2*c-m,W=d<Z-1?l[d+2]:2*m-c;return _l((b-d/Z)*Z,G,c,m,W)}}function lZ(l){var Z=l.length;return function(b){var d=Math.floor(((b%=1)<0?++b:b)*Z),c=l[(d+Z-1)%Z],m=l[d%Z],G=l[(d+1)%Z],W=l[(d+2)%Z];return _l((b-d/Z)*Z,c,m,G,W)}}function ZZ(l){return function(){return l}}function bZ(l,Z){return function(b){return l+b*Z}}function dZ(l,Z){var b=Z-l;return b?bZ(l,b>180||b<-180?b-360*Math.round(b/360):b):ZZ(isNaN(l)?Z:l)}function cZ(l,Z){var b=Z-l;return b?bZ(l,b):ZZ(isNaN(l)?Z:l)}function mZ(l){return function(Z){var b,d,c=Z.length,m=new Array(c),G=new Array(c),W=new Array(c);for(b=0;b<c;++b)d=Sl(Z[b]),m[b]=d.r||0,G[b]=d.g||0,W[b]=d.b||0;return m=l(m),G=l(G),W=l(W),d.opacity=1,function(l){return d.r=m(l),d.g=G(l),d.b=W(l),d+""}}}function GZ(l,Z){var b,d=Z?Z.length:0,c=l?Math.min(d,l.length):0,m=new Array(c),G=new Array(d);for(b=0;b<c;++b)m[b]=uZ(l[b],Z[b]);for(;b<d;++b)G[b]=Z[b];return function(l){for(b=0;b<c;++b)G[b]=m[b](l);return G}}function WZ(l,Z){var b=new Date;return Z-=l=+l,function(d){return b.setTime(l+Z*d),b}}function iZ(l,Z){return Z-=l=+l,function(b){return l+Z*b}}function XZ(l,Z){var b,d={},c={};for(b in null!==l&&"object"==typeof l||(l={}),null!==Z&&"object"==typeof Z||(Z={}),Z)b in l?d[b]=uZ(l[b],Z[b]):c[b]=Z[b];return function(l){for(b in d)c[b]=d[b](l);return c}}function nZ(l,Z){var b,d,c,m=An.lastIndex=En.lastIndex=0,G=-1,W=[],i=[];for(l+="",Z+="";(b=An.exec(l))&&(d=En.exec(Z));)(c=d.index)>m&&(c=Z.slice(m,c),W[G]?W[G]+=c:W[++G]=c),(b=b[0])===(d=d[0])?W[G]?W[G]+=d:W[++G]=d:(W[++G]=null,i.push({i:G,x:iZ(b,d)})),m=En.lastIndex;return m<Z.length&&(c=Z.slice(m),W[G]?W[G]+=c:W[++G]=c),W.length<2?i[0]?function(l){return function(Z){return l(Z)+""}}(i[0].x):function(l){return function(){return l}}(Z):(Z=i.length,function(l){for(var b,d=0;d<Z;++d)W[(b=i[d]).i]=b.x(l);return W.join("")})}function uZ(l,Z){var b,d=typeof Z;return null==Z||"boolean"===d?ZZ(Z):("number"===d?iZ:"string"===d?(b=Jl(Z))?(Z=b,Qn):nZ:Z instanceof Jl?Qn:Z instanceof Date?WZ:Array.isArray(Z)?GZ:"function"!=typeof Z.valueOf&&"function"!=typeof Z.toString||isNaN(Z)?XZ:iZ)(l,Z)}function aZ(l,Z){return Z-=l=+l,function(b){return Math.round(l+Z*b)}}function VZ(l,Z,b,d,c,m){var G,W,i;return(G=Math.sqrt(l*l+Z*Z))&&(l/=G,Z/=G),(i=l*b+Z*d)&&(b-=l*i,d-=Z*i),(W=Math.sqrt(b*b+d*d))&&(b/=W,d/=W,i/=W),l*d<Z*b&&(l=-l,Z=-Z,i=-i,G=-G),{translateX:c,translateY:m,rotate:Math.atan2(Z,l)*On,skewX:Math.atan(i)*On,scaleX:G,scaleY:W}}function hZ(l,Z,b,d){function c(l){return l.length?l.pop()+" ":""}return function(m,G){var W=[],i=[];return m=l(m),G=l(G),function(l,d,c,m,G,W){if(l!==c||d!==m){var i=G.push("translate(",null,Z,null,b);W.push({i:i-4,x:iZ(l,c)},{i:i-2,x:iZ(d,m)})}else(c||m)&&G.push("translate("+c+Z+m+b)}(m.translateX,m.translateY,G.translateX,G.translateY,W,i),function(l,Z,b,m){l!==Z?(l-Z>180?Z+=360:Z-l>180&&(l+=360),m.push({i:b.push(c(b)+"rotate(",null,d)-2,x:iZ(l,Z)})):Z&&b.push(c(b)+"rotate("+Z+d)}(m.rotate,G.rotate,W,i),function(l,Z,b,m){l!==Z?m.push({i:b.push(c(b)+"skewX(",null,d)-2,x:iZ(l,Z)}):Z&&b.push(c(b)+"skewX("+Z+d)}(m.skewX,G.skewX,W,i),function(l,Z,b,d,m,G){if(l!==b||Z!==d){var W=m.push(c(m)+"scale(",null,",",null,")");G.push({i:W-4,x:iZ(l,b)},{i:W-2,x:iZ(Z,d)})}else 1===b&&1===d||m.push(c(m)+"scale("+b+","+d+")")}(m.scaleX,m.scaleY,G.scaleX,G.scaleY,W,i),m=G=null,function(l){for(var Z,b=-1,d=i.length;++b<d;)W[(Z=i[b]).i]=Z.x(l);return W.join("")}}}function tZ(l){return((l=Math.exp(l))+1/l)/2}function yZ(l,Z){var b,d,c=l[0],m=l[1],G=l[2],W=Z[0],i=Z[1],X=Z[2],n=W-c,u=i-m,a=n*n+u*u;if(a<du)d=Math.log(X/G)/lu,b=function(l){return[c+l*n,m+l*u,G*Math.exp(lu*l*d)]};else{var V=Math.sqrt(a),h=(X*X-G*G+bu*a)/(2*G*Zu*V),t=(X*X-G*G-bu*a)/(2*X*Zu*V),y=Math.log(Math.sqrt(h*h+1)-h),Y=Math.log(Math.sqrt(t*t+1)-t);d=(Y-y)/lu,b=function(l){var Z=l*d,b=tZ(y),W=G/(Zu*V)*(b*function(l){return((l=Math.exp(2*l))-1)/(l+1)}(lu*Z+y)-function(l){return((l=Math.exp(l))-1/l)/2}(y));return[c+W*n,m+W*u,G*b/tZ(lu*Z+y)]}}return b.duration=1e3*d,b}function YZ(l){return function(Z,b){var d=l((Z=zl(Z)).h,(b=zl(b)).h),c=cZ(Z.s,b.s),m=cZ(Z.l,b.l),G=cZ(Z.opacity,b.opacity);return function(l){return Z.h=d(l),Z.s=c(l),Z.l=m(l),Z.opacity=G(l),Z+""}}}function eZ(l){return function(Z,b){var d=l((Z=Al(Z)).h,(b=Al(b)).h),c=cZ(Z.c,b.c),m=cZ(Z.l,b.l),G=cZ(Z.opacity,b.opacity);return function(l){return Z.h=d(l),Z.c=c(l),Z.l=m(l),Z.opacity=G(l),Z+""}}}function pZ(l){return function Z(b){function d(Z,d){var c=l((Z=Ol(Z)).h,(d=Ol(d)).h),m=cZ(Z.s,d.s),G=cZ(Z.l,d.l),W=cZ(Z.opacity,d.opacity);return function(l){return Z.h=c(l),Z.s=m(l),Z.l=G(Math.pow(l,b)),Z.opacity=W(l),Z+""}}return b=+b,d.gamma=Z,d}(1)}function oZ(){return tu||(eu(sZ),tu=Yu.now()+yu)}function sZ(){tu=0}function IZ(){this._call=this._time=this._next=null}function RZ(l,Z,b){var d=new IZ;return d.restart(l,Z,b),d}function gZ(){oZ(),++nu;for(var l,Z=Un;Z;)(l=tu-Z._time)>=0&&Z._call.call(null,l),Z=Z._next;--nu}function KZ(){tu=(hu=Yu.now())+yu,nu=uu=0;try{gZ()}finally{nu=0,function(){for(var l,Z,b=Un,d=1/0;b;)b._call?(d>b._time&&(d=b._time),l=b,b=b._next):(Z=b._next,b._next=null,b=l?l._next=Z:Un=Z);fn=l,HZ(d)}(),tu=0}}function NZ(){var l=Yu.now(),Z=l-hu;Z>Vu&&(yu-=Z,hu=l)}function HZ(l){nu||(uu&&(uu=clearTimeout(uu)),l-tu>24?(l<1/0&&(uu=setTimeout(KZ,l-Yu.now()-yu)),au&&(au=clearInterval(au))):(au||(hu=Yu.now(),au=setInterval(NZ,Vu)),nu=1,eu(KZ)))}function xZ(l,Z,b){var d=new IZ;return Z=null==Z?0:+Z,d.restart((function(b){d.stop(),l(b+Z)}),Z,b),d}function JZ(l,Z,b,d,c,m){var G=l.__transition;if(G){if(b in G)return}else l.__transition={};!function(l,Z,b){function d(i){var X,n,u,a;if(b.state!==Iu)return m();for(X in W)if((a=W[X]).name===b.name){if(a.state===gu)return xZ(d);a.state===Ku?(a.state=Hu,a.timer.stop(),a.on.call("interrupt",l,l.__data__,a.index,a.group),delete W[X]):+X<Z&&(a.state=Hu,a.timer.stop(),delete W[X])}if(xZ((function(){b.state===gu&&(b.state=Ku,b.timer.restart(c,b.delay,b.time),c(i))})),b.state=Ru,b.on.call("start",l,l.__data__,b.index,b.group),b.state===Ru){for(b.state=gu,G=new Array(u=b.tween.length),X=0,n=-1;X<u;++X)(a=b.tween[X].value.call(l,l.__data__,b.index,b.group))&&(G[++n]=a);G.length=n+1}}function c(Z){for(var d=Z<b.duration?b.ease.call(null,Z/b.duration):(b.timer.restart(m),b.state=Nu,1),c=-1,W=G.length;++c<W;)G[c].call(null,d);b.state===Nu&&(b.on.call("end",l,l.__data__,b.index,b.group),m())}function m(){for(var d in b.state=Hu,b.timer.stop(),delete W[Z],W)return;delete l.__transition}var G,W=l.__transition;W[Z]=b,b.timer=RZ((function(l){b.state=Iu,b.timer.restart(d,b.delay,b.time),b.delay<=l&&d(l-b.delay)}),0,b.time)}(l,b,{name:Z,index:d,group:c,on:pu,tween:ou,time:m.time,delay:m.delay,duration:m.duration,ease:m.ease,timer:null,state:su})}function LZ(l,Z){var b=CZ(l,Z);if(b.state>su)throw new Error("too late; already scheduled");return b}function FZ(l,Z){var b=CZ(l,Z);if(b.state>Ru)throw new Error("too late; already started");return b}function CZ(l,Z){var b=l.__transition;if(!b||!(b=b[Z]))throw new Error("transition not found");return b}function SZ(l,Z){var b,d,c,m=l.__transition,G=!0;if(m){for(c in Z=null==Z?null:Z+"",m)(b=m[c]).name===Z?(d=b.state>Ru&&b.state<Nu,b.state=Hu,b.timer.stop(),d&&b.on.call("interrupt",l,l.__data__,b.index,b.group),delete m[c]):G=!1;G&&delete l.__transition}}function BZ(l,Z,b){var d=l._id;return l.each((function(){var l=FZ(this,d);(l.value||(l.value={}))[Z]=b.apply(this,arguments)})),function(l){return CZ(l,d).value[Z]}}function kZ(l,Z){var b;return("number"==typeof Z?iZ:Z instanceof Jl?Qn:(b=Jl(Z))?(Z=b,Qn):nZ)(l,Z)}function vZ(l,Z,b,d){this._groups=l,this._parents=Z,this._name=b,this._id=d}function zZ(l){return il().transition(l)}function MZ(){return++Ju}function rZ(l){return((l*=2)<=1?l*l:--l*(2-l)+1)/2}function TZ(l){return((l*=2)<=1?l*l*l:(l-=2)*l*l+2)/2}function jZ(l){return(1-Math.cos(Bu*l))/2}function wZ(l){return((l*=2)<=1?Math.pow(2,10*l-10):2-Math.pow(2,10-10*l))/2}function UZ(l){return((l*=2)<=1?1-Math.sqrt(1-l*l):Math.sqrt(1-(l-=2)*l)+1)/2}function fZ(l){return(l=+l)<vu?Qu*l*l:l<Mu?Qu*(l-=zu)*l+ru:l<ju?Qu*(l-=Tu)*l+wu:Qu*(l-=Uu)*l+fu}function QZ(l,Z){for(var b;!(b=l.__transition)||!(b=b[Z]);)if(!(l=l.parentNode))return $u.time=oZ(),$u;return b}function PZ(l){return function(){return l}}function DZ(){l.event.stopImmediatePropagation()}function AZ(){l.event.preventDefault(),l.event.stopImmediatePropagation()}function EZ(l){return{type:l}}function OZ(){return!l.event.button}function qZ(){var l=this.ownerSVGElement||this;return[[0,0],[l.width.baseVal.value,l.height.baseVal.value]]}function _Z(l){for(;!l.__brush;)if(!(l=l.parentNode))return;return l.__brush}function $Z(l){return l[0][0]===l[1][0]||l[0][1]===l[1][1]}function lb(Z){function b(l){var b=l.property("__brush",W).selectAll(".overlay").data([EZ("overlay")]);b.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",ia.overlay).merge(b).each((function(){var l=_Z(this).extent;Xl(this).attr("x",l[0][0]).attr("y",l[0][1]).attr("width",l[1][0]-l[0][0]).attr("height",l[1][1]-l[0][1])})),l.selectAll(".selection").data([EZ("selection")]).enter().append("rect").attr("class","selection").attr("cursor",ia.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var c=l.selectAll(".handle").data(Z.handles,(function(l){return l.type}));c.exit().remove(),c.enter().append("rect").attr("class",(function(l){return"handle handle--"+l.type})).attr("cursor",(function(l){return ia[l.type]})),l.each(d).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",G)}function d(){var l=Xl(this),Z=_Z(this).selection;Z?(l.selectAll(".selection").style("display",null).attr("x",Z[0][0]).attr("y",Z[0][1]).attr("width",Z[1][0]-Z[0][0]).attr("height",Z[1][1]-Z[0][1]),l.selectAll(".handle").style("display",null).attr("x",(function(l){return"e"===l.type[l.type.length-1]?Z[1][0]-a/2:Z[0][0]-a/2})).attr("y",(function(l){return"s"===l.type[0]?Z[1][1]-a/2:Z[0][1]-a/2})).attr("width",(function(l){return"n"===l.type||"s"===l.type?Z[1][0]-Z[0][0]+a:a})).attr("height",(function(l){return"e"===l.type||"w"===l.type?Z[1][1]-Z[0][1]+a:a}))):l.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(l,Z){return l.__brush.emitter||new m(l,Z)}function m(l,Z){this.that=l,this.args=Z,this.state=l.__brush,this.active=0}function G(){function b(){var l=hl(I);!B||o||s||(Math.abs(l[0]-v[0])>Math.abs(l[1]-v[1])?s=!0:o=!0),v=l,p=!0,AZ(),m()}function m(){var l;switch(Y=v[0]-k[0],e=v[1]-k[1],g){case ba:case Za:K&&(Y=Math.max(L-W,Math.min(C-V,Y)),X=W+Y,h=V+Y),N&&(e=Math.max(F-u,Math.min(S-t,e)),a=u+e,y=t+e);break;case da:K<0?(Y=Math.max(L-W,Math.min(C-W,Y)),X=W+Y,h=V):K>0&&(Y=Math.max(L-V,Math.min(C-V,Y)),X=W,h=V+Y),N<0?(e=Math.max(F-u,Math.min(S-u,e)),a=u+e,y=t):N>0&&(e=Math.max(F-t,Math.min(S-t,e)),a=u,y=t+e);break;case ca:K&&(X=Math.max(L,Math.min(C,W-Y*K)),h=Math.max(L,Math.min(C,V+Y*K))),N&&(a=Math.max(F,Math.min(S,u-e*N)),y=Math.max(F,Math.min(S,t+e*N)))}h<X&&(K*=-1,l=W,W=V,V=l,l=X,X=h,h=l,R in Xa&&r.attr("cursor",ia[R=Xa[R]])),y<a&&(N*=-1,l=u,u=t,t=l,l=a,a=y,y=l,R in na&&r.attr("cursor",ia[R=na[R]])),H.selection&&(J=H.selection),o&&(X=J[0][0],h=J[1][0]),s&&(a=J[0][1],y=J[1][1]),J[0][0]===X&&J[0][1]===a&&J[1][0]===h&&J[1][1]===y||(H.selection=[[X,a],[h,y]],d.call(I),z.brush())}function G(){if(DZ(),l.event.touches){if(l.event.touches.length)return;i&&clearTimeout(i),i=setTimeout((function(){i=null}),500),M.on("touchmove.brush touchend.brush touchcancel.brush",null)}else pl(l.event.view,p),T.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);M.attr("pointer-events","all"),r.attr("cursor",ia.overlay),H.selection&&(J=H.selection),$Z(J)&&(H.selection=null,d.call(I)),z.end()}if(l.event.touches){if(l.event.changedTouches.length<l.event.touches.length)return AZ()}else if(i)return;if(n.apply(this,arguments)){var W,X,u,a,V,h,t,y,Y,e,p,o,s,I=this,R=l.event.target.__data__.type,g="selection"===(l.event.metaKey?R="overlay":R)?Za:l.event.altKey?ca:da,K=Z===Ga?null:ua[R],N=Z===ma?null:aa[R],H=_Z(I),x=H.extent,J=H.selection,L=x[0][0],F=x[0][1],C=x[1][0],S=x[1][1],B=K&&N&&l.event.shiftKey,k=hl(I),v=k,z=c(I,arguments).beforestart();"overlay"===R?H.selection=J=[[W=Z===Ga?L:k[0],u=Z===ma?F:k[1]],[V=Z===Ga?C:W,t=Z===ma?S:u]]:(W=J[0][0],u=J[0][1],V=J[1][0],t=J[1][1]),X=W,a=u,h=V,y=t;var M=Xl(I).attr("pointer-events","none"),r=M.selectAll(".overlay").attr("cursor",ia[R]);if(l.event.touches)M.on("touchmove.brush",b,!0).on("touchend.brush touchcancel.brush",G,!0);else{var T=Xl(l.event.view).on("keydown.brush",(function(){switch(l.event.keyCode){case 16:B=K&&N;break;case 18:g===da&&(K&&(V=h-Y*K,W=X+Y*K),N&&(t=y-e*N,u=a+e*N),g=ca,m());break;case 32:g!==da&&g!==ca||(K<0?V=h-Y:K>0&&(W=X-Y),N<0?t=y-e:N>0&&(u=a-e),g=ba,r.attr("cursor",ia.selection),m());break;default:return}AZ()}),!0).on("keyup.brush",(function(){switch(l.event.keyCode){case 16:B&&(o=s=B=!1,m());break;case 18:g===ca&&(K<0?V=h:K>0&&(W=X),N<0?t=y:N>0&&(u=a),g=da,m());break;case 32:g===ba&&(l.event.altKey?(K&&(V=h-Y*K,W=X+Y*K),N&&(t=y-e*N,u=a+e*N),g=ca):(K<0?V=h:K>0&&(W=X),N<0?t=y:N>0&&(u=a),g=da),r.attr("cursor",ia[R]),m());break;default:return}AZ()}),!0).on("mousemove.brush",b,!0).on("mouseup.brush",G,!0);el(l.event.view)}DZ(),SZ(I),d.call(I),z.start()}}function W(){var l=this.__brush||{selection:null};return l.extent=X.apply(this,arguments),l.dim=Z,l}var i,X=qZ,n=OZ,u=N(b,"start","brush","end"),a=6;return b.move=function(l,b){l.selection?l.on("start.brush",(function(){c(this,arguments).beforestart().start()})).on("interrupt.brush end.brush",(function(){c(this,arguments).end()})).tween("brush",(function(){function l(l){G.selection=1===l&&$Z(X)?null:n(l),d.call(m),W.brush()}var m=this,G=m.__brush,W=c(m,arguments),i=G.selection,X=Z.input("function"==typeof b?b.apply(this,arguments):b,G.extent),n=uZ(i,X);return i&&X?l:l(1)})):l.each((function(){var l=arguments,m=this.__brush,G=Z.input("function"==typeof b?b.apply(this,l):b,m.extent),W=c(this,l).beforestart();SZ(this),m.selection=null==G||$Z(G)?null:G,d.call(this),W.start().brush().end()}))},m.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(l){ml(new function(l,Z,b){this.target=l,this.type=Z,this.selection=b}(b,l,Z.output(this.state.selection)),u.apply,u,[l,this.that,this.args])}},b.extent=function(l){return arguments.length?(X="function"==typeof l?l:PZ([[+l[0][0],+l[0][1]],[+l[1][0],+l[1][1]]]),b):X},b.filter=function(l){return arguments.length?(n="function"==typeof l?l:PZ(!!l),b):n},b.handleSize=function(l){return arguments.length?(a=+l,b):a},b.on=function(){var l=u.on.apply(u,arguments);return l===u?b:l},b}function Zb(l){return function(){return l}}function bb(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function db(){return new bb}function cb(l){return l.source}function mb(l){return l.target}function Gb(l){return l.radius}function Wb(l){return l.startAngle}function ib(l){return l.endAngle}function Xb(){}function nb(l,Z){var b=new Xb;if(l instanceof Xb)l.each((function(l,Z){b.set(Z,l)}));else if(Array.isArray(l)){var d,c=-1,m=l.length;if(null==Z)for(;++c<m;)b.set(c,l[c]);else for(;++c<m;)b.set(Z(d=l[c],c,l),d)}else if(l)for(var G in l)b.set(G,l[G]);return b}function ub(){return{}}function ab(l,Z,b){l[Z]=b}function Vb(){return nb()}function hb(l,Z,b){l.set(Z,b)}function tb(){}function yb(l,Z){var b=new tb;if(l instanceof tb)l.each((function(l){b.add(l)}));else if(l){var d=-1,c=l.length;if(null==Z)for(;++d<c;)b.add(l[d]);else for(;++d<c;)b.add(Z(l[d],d,l))}return b}function Yb(l,Z){return l-Z}function eb(l){return function(){return l}}function pb(l,Z){for(var b,d=-1,c=Z.length;++d<c;)if(b=function(l,Z){for(var b=Z[0],d=Z[1],c=-1,m=0,G=l.length,W=G-1;m<G;W=m++){var i=l[m],X=i[0],n=i[1],u=l[W],a=u[0],V=u[1];if(function(l,Z,b){var d;return function(l,Z,b){return(Z[0]-l[0])*(b[1]-l[1])==(b[0]-l[0])*(Z[1]-l[1])}(l,Z,b)&&function(l,Z,b){return l<=Z&&Z<=b||b<=Z&&Z<=l}(l[d=+(l[0]===Z[0])],b[d],Z[d])}(i,u,Z))return 0;n>d!=V>d&&b<(a-X)*(d-n)/(V-n)+X&&(c=-c)}return c}(l,Z[d]))return b;return 0}function ob(){}function sb(){function l(l){var b=G(l);if(Array.isArray(b))b=b.slice().sort(Yb);else{var d=W(l),c=d[0],m=d[1];b=V(c,m,b),b=n(Math.floor(c/b)*b,Math.floor(m/b)*b,b)}return b.map((function(b){return Z(l,b)}))}function Z(l,Z){var d=[],G=[];return function(l,Z,d){function G(l){var Z,c,m=[l[0][0]+W,l[0][1]+i],G=[l[1][0]+W,l[1][1]+i],X=b(m),n=b(G);(Z=h[X])?(c=V[n])?(delete h[Z.end],delete V[c.start],Z===c?(Z.ring.push(G),d(Z.ring)):V[Z.start]=h[c.end]={start:Z.start,end:c.end,ring:Z.ring.concat(c.ring)}):(delete h[Z.end],Z.ring.push(G),h[Z.end=n]=Z):(Z=V[n])?(c=h[X])?(delete V[Z.start],delete h[c.end],Z===c?(Z.ring.push(G),d(Z.ring)):V[c.start]=h[Z.end]={start:c.start,end:Z.end,ring:c.ring.concat(Z.ring)}):(delete V[Z.start],Z.ring.unshift(m),V[Z.start=X]=Z):V[X]=h[n]={start:X,end:n,ring:[m,G]}}var W,i,X,n,u,a,V=new Array,h=new Array;for(W=i=-1,n=l[0]>=Z,Ka[n<<1].forEach(G);++W<c-1;)X=n,n=l[W+1]>=Z,Ka[X|n<<1].forEach(G);for(Ka[n<<0].forEach(G);++i<m-1;){for(W=-1,n=l[i*c+c]>=Z,u=l[i*c]>=Z,Ka[n<<1|u<<2].forEach(G);++W<c-1;)X=n,n=l[i*c+c+W+1]>=Z,a=u,u=l[i*c+W+1]>=Z,Ka[X|n<<1|u<<2|a<<3].forEach(G);Ka[n|u<<3].forEach(G)}for(W=-1,u=l[i*c]>=Z,Ka[u<<2].forEach(G);++W<c-1;)a=u,u=l[i*c+W+1]>=Z,Ka[u<<2|a<<3].forEach(G);Ka[u<<3].forEach(G)}(l,Z,(function(b){i(b,l,Z),function(l){for(var Z=0,b=l.length,d=l[b-1][1]*l[0][0]-l[b-1][0]*l[0][1];++Z<b;)d+=l[Z-1][1]*l[Z][0]-l[Z-1][0]*l[Z][1];return d}(b)>0?d.push([b]):G.push(b)})),G.forEach((function(l){for(var Z,b=0,c=d.length;b<c;++b)if(-1!==pb((Z=d[b])[0],l))return void Z.push(l)})),{type:"MultiPolygon",value:Z,coordinates:d}}function b(l){return 2*l[0]+l[1]*(c+1)*4}function d(l,Z,b){l.forEach((function(l){var d,G=l[0],W=l[1],i=0|G,X=0|W,n=Z[X*c+i];G>0&&G<c&&i===G&&(d=Z[X*c+i-1],l[0]=G+(b-d)/(n-d)-.5),W>0&&W<m&&X===W&&(d=Z[(X-1)*c+i],l[1]=W+(b-d)/(n-d)-.5)}))}var c=1,m=1,G=h,i=d;return l.contour=Z,l.size=function(Z){if(!arguments.length)return[c,m];var b=Math.ceil(Z[0]),d=Math.ceil(Z[1]);if(!(b>0&&d>0))throw new Error("invalid size");return c=b,m=d,l},l.thresholds=function(Z){return arguments.length?(G="function"==typeof Z?Z:Array.isArray(Z)?eb(ga.call(Z)):eb(Z),l):G},l.smooth=function(Z){return arguments.length?(i=Z?d:ob,l):i===d},l}function Ib(l,Z,b){for(var d=l.width,c=l.height,m=1+(b<<1),G=0;G<c;++G)for(var W=0,i=0;W<d+b;++W)W<d&&(i+=l.data[W+G*d]),W>=b&&(W>=m&&(i-=l.data[W-m+G*d]),Z.data[W-b+G*d]=i/Math.min(W+1,d-1+m-W,m))}function Rb(l,Z,b){for(var d=l.width,c=l.height,m=1+(b<<1),G=0;G<d;++G)for(var W=0,i=0;W<c+b;++W)W<c&&(i+=l.data[G+W*d]),W>=b&&(W>=m&&(i-=l.data[G+(W-m)*d]),Z.data[G+(W-b)*d]=i/Math.min(W+1,c-1+m-W,m))}function gb(l){return l[0]}function Kb(l){return l[1]}function Nb(l){return new Function("d","return {"+l.map((function(l,Z){return JSON.stringify(l)+": d["+Z+"]"})).join(",")+"}")}function Hb(l){function Z(l,Z){function b(){if(X)return Ha;if(n)return n=!1,Na;var Z,b,d=W;if(l.charCodeAt(d)===xa){for(;W++<G&&l.charCodeAt(W)!==xa||l.charCodeAt(++W)===xa;);return(Z=W)>=G?X=!0:(b=l.charCodeAt(W++))===Ja?n=!0:b===La&&(n=!0,l.charCodeAt(W)===Ja&&++W),l.slice(d+1,Z-1).replace(/""/g,'"')}for(;W<G;){if((b=l.charCodeAt(Z=W++))===Ja)n=!0;else if(b===La)n=!0,l.charCodeAt(W)===Ja&&++W;else if(b!==m)continue;return l.slice(d,Z)}return X=!0,l.slice(d,G)}var d,c=[],G=l.length,W=0,i=0,X=G<=0,n=!1;for(l.charCodeAt(G-1)===Ja&&--G,l.charCodeAt(G-1)===La&&--G;(d=b())!==Ha;){for(var u=[];d!==Na&&d!==Ha;)u.push(d),d=b();Z&&null==(u=Z(u,i++))||c.push(u)}return c}function b(Z){return Z.map(d).join(l)}function d(l){return null==l?"":c.test(l+="")?'"'+l.replace(/"/g,'""')+'"':l}var c=new RegExp('["'+l+"\n\r]"),m=l.charCodeAt(0);return{parse:function(l,b){var d,c,m=Z(l,(function(l,Z){if(d)return d(l,Z-1);c=l,d=b?function(l,Z){var b=Nb(l);return function(d,c){return Z(b(d),c,l)}}(l,b):Nb(l)}));return m.columns=c||[],m},parseRows:Z,format:function(Z,b){return null==b&&(b=function(l){var Z=Object.create(null),b=[];return l.forEach((function(l){for(var d in l)d in Z||b.push(Z[d]=d)})),b}(Z)),[b.map(d).join(l)].concat(Z.map((function(Z){return b.map((function(l){return d(Z[l])})).join(l)}))).join("\n")},formatRows:function(l){return l.map(b).join("\n")}}}function xb(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.blob()}function Jb(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.arrayBuffer()}function Lb(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.text()}function Fb(l,Z){return fetch(l,Z).then(Lb)}function Cb(l){return function(Z,b,d){return 2===arguments.length&&"function"==typeof b&&(d=b,b=void 0),Fb(Z,b).then((function(Z){return l(Z,d)}))}}function Sb(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.json()}function Bb(l){return function(Z,b){return Fb(Z,b).then((function(Z){return(new DOMParser).parseFromString(Z,l)}))}}function kb(l){return function(){return l}}function vb(){return 1e-6*(Math.random()-.5)}function zb(l,Z,b,d){if(isNaN(Z)||isNaN(b))return l;var c,m,G,W,i,X,n,u,a,V=l._root,h={data:d},t=l._x0,y=l._y0,Y=l._x1,e=l._y1;if(!V)return l._root=h,l;for(;V.length;)if((X=Z>=(m=(t+Y)/2))?t=m:Y=m,(n=b>=(G=(y+e)/2))?y=G:e=G,c=V,!(V=V[u=n<<1|X]))return c[u]=h,l;if(W=+l._x.call(null,V.data),i=+l._y.call(null,V.data),Z===W&&b===i)return h.next=V,c?c[u]=h:l._root=h,l;do{c=c?c[u]=new Array(4):l._root=new Array(4),(X=Z>=(m=(t+Y)/2))?t=m:Y=m,(n=b>=(G=(y+e)/2))?y=G:e=G}while((u=n<<1|X)==(a=(i>=G)<<1|W>=m));return c[a]=V,c[u]=h,l}function Mb(l,Z,b,d,c){this.node=l,this.x0=Z,this.y0=b,this.x1=d,this.y1=c}function rb(l){return l[0]}function Tb(l){return l[1]}function jb(l,Z,b){var d=new wb(null==Z?rb:Z,null==b?Tb:b,NaN,NaN,NaN,NaN);return null==l?d:d.addAll(l)}function wb(l,Z,b,d,c,m){this._x=l,this._y=Z,this._x0=b,this._y0=d,this._x1=c,this._y1=m,this._root=void 0}function Ub(l){for(var Z={data:l.data},b=Z;l=l.next;)b=b.next={data:l.data};return Z}function fb(l){return l.x+l.vx}function Qb(l){return l.y+l.vy}function Pb(l){return l.index}function Db(l,Z){var b=l.get(Z);if(!b)throw new Error("missing: "+Z);return b}function Ab(l){return l.x}function Eb(l){return l.y}function Ob(l,Z){if((b=(l=Z?l.toExponential(Z-1):l.toExponential()).indexOf("e"))<0)return null;var b,d=l.slice(0,b);return[d.length>1?d[0]+d.slice(2):d,+l.slice(b+1)]}function qb(l){return(l=Ob(Math.abs(l)))?l[1]:NaN}function _b(l){return new $b(l)}function $b(l){if(!(Z=Aa.exec(l)))throw new Error("invalid format: "+l);var Z;this.fill=Z[1]||" ",this.align=Z[2]||">",this.sign=Z[3]||"-",this.symbol=Z[4]||"",this.zero=!!Z[5],this.width=Z[6]&&+Z[6],this.comma=!!Z[7],this.precision=Z[8]&&+Z[8].slice(1),this.trim=!!Z[9],this.type=Z[10]||""}function ld(l,Z){var b=Ob(l,Z);if(!b)return l+"";var d=b[0],c=b[1];return c<0?"0."+new Array(-c).join("0")+d:d.length>c+1?d.slice(0,c+1)+"."+d.slice(c+1):d+new Array(c-d.length+2).join("0")}function Zd(l){return l}function bd(l){function Z(l){function Z(l){var Z,d,G,n=Y,s=e;if("c"===y)s=p(l)+s,l="";else{var I=(l=+l)<0;if(l=p(Math.abs(l),h),t&&(l=function(l){l:for(var Z,b=l.length,d=1,c=-1;d<b;++d)switch(l[d]){case".":c=Z=d;break;case"0":0===c&&(c=d),Z=d;break;default:if(c>0){if(!+l[d])break l;c=0}}return c>0?l.slice(0,c)+l.slice(Z+1):l}(l)),I&&0==+l&&(I=!1),n=(I?"("===X?X:"-":"-"===X||"("===X?"":X)+n,s=("s"===y?_a[8+Ea/3]:"")+s+(I&&"("===X?")":""),o)for(Z=-1,d=l.length;++Z<d;)if(48>(G=l.charCodeAt(Z))||G>57){s=(46===G?c+l.slice(Z+1):l.slice(Z))+s,l=l.slice(0,Z);break}}V&&!u&&(l=b(l,1/0));var R=n.length+l.length+s.length,g=R<a?new Array(a-R+1).join(W):"";switch(V&&u&&(l=b(g+l,g.length?a-s.length:1/0),g=""),i){case"<":l=n+l+s+g;break;case"=":l=n+g+l+s;break;case"^":l=g.slice(0,R=g.length>>1)+n+l+s+g.slice(R);break;default:l=g+n+l+s}return m(l)}var W=(l=_b(l)).fill,i=l.align,X=l.sign,n=l.symbol,u=l.zero,a=l.width,V=l.comma,h=l.precision,t=l.trim,y=l.type;"n"===y?(V=!0,y="g"):qa[y]||(null==h&&(h=12),t=!0,y="g"),(u||"0"===W&&"="===i)&&(u=!0,W="0",i="=");var Y="$"===n?d[0]:"#"===n&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",e="$"===n?d[1]:/[%p]/.test(y)?G:"",p=qa[y],o=/[defgprs%]/.test(y);return h=null==h?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,h)):Math.max(0,Math.min(20,h)),Z.toString=function(){return l+""},Z}var b=l.grouping&&l.thousands?function(l,Z){return function(b,d){for(var c=b.length,m=[],G=0,W=l[0],i=0;c>0&&W>0&&(i+W+1>d&&(W=Math.max(1,d-i)),m.push(b.substring(c-=W,c+W)),!((i+=W+1)>d));)W=l[G=(G+1)%l.length];return m.reverse().join(Z)}}(l.grouping,l.thousands):Zd,d=l.currency,c=l.decimal,m=l.numerals?function(l){return function(Z){return Z.replace(/[0-9]/g,(function(Z){return l[+Z]}))}}(l.numerals):Zd,G=l.percent||"%";return{format:Z,formatPrefix:function(l,b){var d=Z(((l=_b(l)).type="f",l)),c=3*Math.max(-8,Math.min(8,Math.floor(qb(b)/3))),m=Math.pow(10,-c),G=_a[8+c/3];return function(l){return d(m*l)+G}}}}function dd(Z){return Oa=bd(Z),l.format=Oa.format,l.formatPrefix=Oa.formatPrefix,Oa}function cd(l){return Math.max(0,-qb(Math.abs(l)))}function md(l,Z){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(qb(Z)/3)))-qb(Math.abs(l)))}function Gd(l,Z){return l=Math.abs(l),Z=Math.abs(Z)-l,Math.max(0,qb(Z)-qb(l))+1}function Wd(){return new id}function id(){this.reset()}function Xd(l,Z,b){var d=l.s=Z+b,c=d-Z,m=d-c;l.t=Z-m+(b-c)}function nd(l){return l>1?0:l<-1?CV:Math.acos(l)}function ud(l){return l>1?SV:l<-1?-SV:Math.asin(l)}function ad(l){return(l=PV(l/2))*l}function Vd(){}function hd(l,Z){l&&qV.hasOwnProperty(l.type)&&qV[l.type](l,Z)}function td(l,Z,b){var d,c=-1,m=l.length-b;for(Z.lineStart();++c<m;)d=l[c],Z.point(d[0],d[1],d[2]);Z.lineEnd()}function yd(l,Z){var b=-1,d=l.length;for(Z.polygonStart();++b<d;)td(l[b],Z,1);Z.polygonEnd()}function Yd(l,Z){l&&OV.hasOwnProperty(l.type)?OV[l.type](l,Z):hd(l,Z)}function ed(){lh.point=od}function pd(){sd($a,lV)}function od(l,Z){lh.point=sd,$a=l,lV=Z,ZV=l*=zV,bV=jV(Z=(Z*=zV)/2+BV),dV=PV(Z)}function sd(l,Z){Z=(Z*=zV)/2+BV;var b=(l*=zV)-ZV,d=b>=0?1:-1,c=d*b,m=jV(Z),G=PV(Z),W=dV*G,i=bV*m+W*jV(c),X=W*d*PV(c);_V.add(TV(X,i)),ZV=l,bV=m,dV=G}function Id(l){return[TV(l[1],l[0]),ud(l[2])]}function Rd(l){var Z=l[0],b=l[1],d=jV(b);return[d*jV(Z),d*PV(Z),PV(b)]}function gd(l,Z){return l[0]*Z[0]+l[1]*Z[1]+l[2]*Z[2]}function Kd(l,Z){return[l[1]*Z[2]-l[2]*Z[1],l[2]*Z[0]-l[0]*Z[2],l[0]*Z[1]-l[1]*Z[0]]}function Nd(l,Z){l[0]+=Z[0],l[1]+=Z[1],l[2]+=Z[2]}function Hd(l,Z){return[l[0]*Z,l[1]*Z,l[2]*Z]}function xd(l){var Z=AV(l[0]*l[0]+l[1]*l[1]+l[2]*l[2]);l[0]/=Z,l[1]/=Z,l[2]/=Z}function Jd(l,Z){aV.push(VV=[cV=l,GV=l]),Z<mV&&(mV=Z),Z>WV&&(WV=Z)}function Ld(l,Z){var b=Rd([l*zV,Z*zV]);if(uV){var d=Kd(uV,b),c=Kd([d[1],-d[0],0],d);xd(c),c=Id(c);var m,G=l-iV,W=G>0?1:-1,i=c[0]*vV*W,X=MV(G)>180;X^(W*iV<i&&i<W*l)?(m=c[1]*vV)>WV&&(WV=m):X^(W*iV<(i=(i+360)%360-180)&&i<W*l)?(m=-c[1]*vV)<mV&&(mV=m):(Z<mV&&(mV=Z),Z>WV&&(WV=Z)),X?l<iV?vd(cV,l)>vd(cV,GV)&&(GV=l):vd(l,GV)>vd(cV,GV)&&(cV=l):GV>=cV?(l<cV&&(cV=l),l>GV&&(GV=l)):l>iV?vd(cV,l)>vd(cV,GV)&&(GV=l):vd(l,GV)>vd(cV,GV)&&(cV=l)}else aV.push(VV=[cV=l,GV=l]);Z<mV&&(mV=Z),Z>WV&&(WV=Z),uV=b,iV=l}function Fd(){bh.point=Ld}function Cd(){VV[0]=cV,VV[1]=GV,bh.point=Jd,uV=null}function Sd(l,Z){if(uV){var b=l-iV;Zh.add(MV(b)>180?b+(b>0?360:-360):b)}else XV=l,nV=Z;lh.point(l,Z),Ld(l,Z)}function Bd(){lh.lineStart()}function kd(){Sd(XV,nV),lh.lineEnd(),MV(Zh)>FV&&(cV=-(GV=180)),VV[0]=cV,VV[1]=GV,uV=null}function vd(l,Z){return(Z-=l)<0?Z+360:Z}function zd(l,Z){return l[0]-Z[0]}function Md(l,Z){return l[0]<=l[1]?l[0]<=Z&&Z<=l[1]:Z<l[0]||l[1]<Z}function rd(l,Z){l*=zV;var b=jV(Z*=zV);Td(b*jV(l),b*PV(l),PV(Z))}function Td(l,Z,b){yV+=(l-yV)/++hV,YV+=(Z-YV)/hV,eV+=(b-eV)/hV}function jd(){dh.point=wd}function wd(l,Z){l*=zV;var b=jV(Z*=zV);HV=b*jV(l),xV=b*PV(l),JV=PV(Z),dh.point=Ud,Td(HV,xV,JV)}function Ud(l,Z){l*=zV;var b=jV(Z*=zV),d=b*jV(l),c=b*PV(l),m=PV(Z),G=TV(AV((G=xV*m-JV*c)*G+(G=JV*d-HV*m)*G+(G=HV*c-xV*d)*G),HV*d+xV*c+JV*m);tV+=G,pV+=G*(HV+(HV=d)),oV+=G*(xV+(xV=c)),sV+=G*(JV+(JV=m)),Td(HV,xV,JV)}function fd(){dh.point=rd}function Qd(){dh.point=Dd}function Pd(){Ad(KV,NV),dh.point=rd}function Dd(l,Z){KV=l,NV=Z,l*=zV,Z*=zV,dh.point=Ad;var b=jV(Z);HV=b*jV(l),xV=b*PV(l),JV=PV(Z),Td(HV,xV,JV)}function Ad(l,Z){l*=zV;var b=jV(Z*=zV),d=b*jV(l),c=b*PV(l),m=PV(Z),G=xV*m-JV*c,W=JV*d-HV*m,i=HV*c-xV*d,X=AV(G*G+W*W+i*i),n=ud(X),u=X&&-n/X;IV+=u*G,RV+=u*W,gV+=u*i,tV+=n,pV+=n*(HV+(HV=d)),oV+=n*(xV+(xV=c)),sV+=n*(JV+(JV=m)),Td(HV,xV,JV)}function Ed(l){return function(){return l}}function Od(l,Z){function b(b,d){return b=l(b,d),Z(b[0],b[1])}return l.invert&&Z.invert&&(b.invert=function(b,d){return(b=Z.invert(b,d))&&l.invert(b[0],b[1])}),b}function qd(l,Z){return[l>CV?l-kV:l<-CV?l+kV:l,Z]}function _d(l,Z,b){return(l%=kV)?Z||b?Od(lc(l),Zc(Z,b)):lc(l):Z||b?Zc(Z,b):qd}function $d(l){return function(Z,b){return[(Z+=l)>CV?Z-kV:Z<-CV?Z+kV:Z,b]}}function lc(l){var Z=$d(l);return Z.invert=$d(-l),Z}function Zc(l,Z){function b(l,Z){var b=jV(Z),W=jV(l)*b,i=PV(l)*b,X=PV(Z),n=X*d+W*c;return[TV(i*m-n*G,W*d-X*c),ud(n*m+i*G)]}var d=jV(l),c=PV(l),m=jV(Z),G=PV(Z);return b.invert=function(l,Z){var b=jV(Z),W=jV(l)*b,i=PV(l)*b,X=PV(Z),n=X*m-i*G;return[TV(i*m+X*G,W*d+n*c),ud(n*d-W*c)]},b}function bc(l){function Z(Z){return(Z=l(Z[0]*zV,Z[1]*zV))[0]*=vV,Z[1]*=vV,Z}return l=_d(l[0]*zV,l[1]*zV,l.length>2?l[2]*zV:0),Z.invert=function(Z){return(Z=l.invert(Z[0]*zV,Z[1]*zV))[0]*=vV,Z[1]*=vV,Z},Z}function dc(l,Z,b,d,c,m){if(b){var G=jV(Z),W=PV(Z),i=d*b;null==c?(c=Z+d*kV,m=Z-i/2):(c=cc(G,c),m=cc(G,m),(d>0?c<m:c>m)&&(c+=d*kV));for(var X,n=c;d>0?n>m:n<m;n-=i)X=Id([G,-W*jV(n),-W*PV(n)]),l.point(X[0],X[1])}}function cc(l,Z){(Z=Rd(Z))[0]-=l,xd(Z);var b=nd(-Z[1]);return((-Z[2]<0?-b:b)+kV-FV)%kV}function mc(){var l,Z=[];return{point:function(Z,b){l.push([Z,b])},lineStart:function(){Z.push(l=[])},lineEnd:Vd,rejoin:function(){Z.length>1&&Z.push(Z.pop().concat(Z.shift()))},result:function(){var b=Z;return Z=[],l=null,b}}}function Gc(l,Z){return MV(l[0]-Z[0])<FV&&MV(l[1]-Z[1])<FV}function Wc(l,Z,b,d){this.x=l,this.z=Z,this.o=b,this.e=d,this.v=!1,this.n=this.p=null}function ic(l,Z,b,d,c){var m,G,W=[],i=[];if(l.forEach((function(l){if(!((Z=l.length-1)<=0)){var Z,b,d=l[0],G=l[Z];if(Gc(d,G)){for(c.lineStart(),m=0;m<Z;++m)c.point((d=l[m])[0],d[1]);c.lineEnd()}else W.push(b=new Wc(d,l,null,!0)),i.push(b.o=new Wc(d,null,b,!1)),W.push(b=new Wc(G,l,null,!1)),i.push(b.o=new Wc(G,null,b,!0))}})),W.length){for(i.sort(Z),Xc(W),Xc(i),m=0,G=i.length;m<G;++m)i[m].e=b=!b;for(var X,n,u=W[0];;){for(var a=u,V=!0;a.v;)if((a=a.n)===u)return;X=a.z,c.lineStart();do{if(a.v=a.o.v=!0,a.e){if(V)for(m=0,G=X.length;m<G;++m)c.point((n=X[m])[0],n[1]);else d(a.x,a.n.x,1,c);a=a.n}else{if(V)for(X=a.p.z,m=X.length-1;m>=0;--m)c.point((n=X[m])[0],n[1]);else d(a.x,a.p.x,-1,c);a=a.p}X=(a=a.o).z,V=!V}while(!a.v);c.lineEnd()}}}function Xc(l){if(Z=l.length){for(var Z,b,d=0,c=l[0];++d<Z;)c.n=b=l[d],b.p=c,c=b;c.n=b=l[0],b.p=c}}function nc(l,Z){var b=Z[0],d=Z[1],c=PV(d),m=[PV(b),-jV(b),0],G=0,W=0;th.reset(),1===c?d=SV+FV:-1===c&&(d=-SV-FV);for(var i=0,X=l.length;i<X;++i)if(u=(n=l[i]).length)for(var n,u,a=n[u-1],V=a[0],h=a[1]/2+BV,t=PV(h),y=jV(h),Y=0;Y<u;++Y,V=p,t=s,y=I,a=e){var e=n[Y],p=e[0],o=e[1]/2+BV,s=PV(o),I=jV(o),R=p-V,g=R>=0?1:-1,K=g*R,N=K>CV,H=t*s;if(th.add(TV(H*g*PV(K),y*I+H*jV(K))),G+=N?R+g*kV:R,N^V>=b^p>=b){var x=Kd(Rd(a),Rd(e));xd(x);var J=Kd(m,x);xd(J);var L=(N^R>=0?-1:1)*ud(J[2]);(d>L||d===L&&(x[0]||x[1]))&&(W+=N^R>=0?1:-1)}}return(G<-FV||G<FV&&th<-FV)^1&W}function uc(l,Z,b,d){return function(c){function m(Z,b){l(Z,b)&&c.point(Z,b)}function G(l,Z){t.point(l,Z)}function W(){o.point=G,t.lineStart()}function i(){o.point=m,t.lineEnd()}function X(l,Z){h.push([l,Z]),e.point(l,Z)}function n(){e.lineStart(),h=[]}function u(){X(h[0][0],h[0][1]),e.lineEnd();var l,Z,b,d,m=e.clean(),G=y.result(),W=G.length;if(h.pop(),a.push(h),h=null,W)if(1&m){if((Z=(b=G[0]).length-1)>0){for(p||(c.polygonStart(),p=!0),c.lineStart(),l=0;l<Z;++l)c.point((d=b[l])[0],d[1]);c.lineEnd()}}else W>1&&2&m&&G.push(G.pop().concat(G.shift())),V.push(G.filter(ac))}var a,V,h,t=Z(c),y=mc(),e=Z(y),p=!1,o={point:m,lineStart:W,lineEnd:i,polygonStart:function(){o.point=X,o.lineStart=n,o.lineEnd=u,V=[],a=[]},polygonEnd:function(){o.point=m,o.lineStart=W,o.lineEnd=i,V=Y(V);var l=nc(a,d);V.length?(p||(c.polygonStart(),p=!0),ic(V,Vc,l,b,c)):l&&(p||(c.polygonStart(),p=!0),c.lineStart(),b(null,null,1,c),c.lineEnd()),p&&(c.polygonEnd(),p=!1),V=a=null},sphere:function(){c.polygonStart(),c.lineStart(),b(null,null,1,c),c.lineEnd(),c.polygonEnd()}};return o}}function ac(l){return l.length>1}function Vc(l,Z){return((l=l.x)[0]<0?l[1]-SV-FV:SV-l[1])-((Z=Z.x)[0]<0?Z[1]-SV-FV:SV-Z[1])}function hc(l){function Z(l,Z){return jV(l)*jV(Z)>c}function b(l,Z,b){var d=[1,0,0],m=Kd(Rd(l),Rd(Z)),G=gd(m,m),W=m[0],i=G-W*W;if(!i)return!b&&l;var X=c*G/i,n=-c*W/i,u=Kd(d,m),a=Hd(d,X);Nd(a,Hd(m,n));var V=u,h=gd(a,V),t=gd(V,V),y=h*h-t*(gd(a,a)-1);if(!(y<0)){var Y=AV(y),e=Hd(V,(-h-Y)/t);if(Nd(e,a),e=Id(e),!b)return e;var p,o=l[0],s=Z[0],I=l[1],R=Z[1];s<o&&(p=o,o=s,s=p);var g=s-o,K=MV(g-CV)<FV;if(!K&&R<I&&(p=I,I=R,R=p),K||g<FV?K?I+R>0^e[1]<(MV(e[0]-o)<FV?I:R):I<=e[1]&&e[1]<=R:g>CV^(o<=e[0]&&e[0]<=s)){var N=Hd(V,(-h+Y)/t);return Nd(N,a),[e,Id(N)]}}}function d(Z,b){var d=G?l:CV-l,c=0;return Z<-d?c|=1:Z>d&&(c|=2),b<-d?c|=4:b>d&&(c|=8),c}var c=jV(l),m=6*zV,G=c>0,W=MV(c)>FV;return uc(Z,(function(l){var c,m,i,X,n;return{lineStart:function(){X=i=!1,n=1},point:function(u,a){var V,h=[u,a],t=Z(u,a),y=G?t?0:d(u,a):t?d(u+(u<0?CV:-CV),a):0;if(!c&&(X=i=t)&&l.lineStart(),t!==i&&(!(V=b(c,h))||Gc(c,V)||Gc(h,V))&&(h[0]+=FV,h[1]+=FV,t=Z(h[0],h[1])),t!==i)n=0,t?(l.lineStart(),V=b(h,c),l.point(V[0],V[1])):(V=b(c,h),l.point(V[0],V[1]),l.lineEnd()),c=V;else if(W&&c&&G^t){var Y;y&m||!(Y=b(h,c,!0))||(n=0,G?(l.lineStart(),l.point(Y[0][0],Y[0][1]),l.point(Y[1][0],Y[1][1]),l.lineEnd()):(l.point(Y[1][0],Y[1][1]),l.lineEnd(),l.lineStart(),l.point(Y[0][0],Y[0][1])))}!t||c&&Gc(c,h)||l.point(h[0],h[1]),c=h,i=t,m=y},lineEnd:function(){i&&l.lineEnd(),c=null},clean:function(){return n|(X&&i)<<1}}}),(function(Z,b,d,c){dc(c,l,m,d,Z,b)}),G?[0,-l]:[-CV,l-CV])}function tc(l,Z,b,d){function c(c,m){return l<=c&&c<=b&&Z<=m&&m<=d}function m(c,m,W,X){var n=0,u=0;if(null==c||(n=G(c,W))!==(u=G(m,W))||i(c,m)<0^W>0)do{X.point(0===n||3===n?l:b,n>1?d:Z)}while((n=(n+W+4)%4)!==u);else X.point(m[0],m[1])}function G(d,c){return MV(d[0]-l)<FV?c>0?0:3:MV(d[0]-b)<FV?c>0?2:1:MV(d[1]-Z)<FV?c>0?1:0:c>0?3:2}function W(l,Z){return i(l.x,Z.x)}function i(l,Z){var b=G(l,1),d=G(Z,1);return b!==d?b-d:0===b?Z[1]-l[1]:1===b?l[0]-Z[0]:2===b?l[1]-Z[1]:Z[0]-l[0]}return function(G){function i(l,Z){c(l,Z)&&I.point(l,Z)}function X(m,G){var W=c(m,G);if(u&&a.push([m,G]),o)V=m,h=G,t=W,o=!1,W&&(I.lineStart(),I.point(m,G));else if(W&&p)I.point(m,G);else{var i=[y=Math.max(eh,Math.min(Yh,y)),e=Math.max(eh,Math.min(Yh,e))],X=[m=Math.max(eh,Math.min(Yh,m)),G=Math.max(eh,Math.min(Yh,G))];!function(l,Z,b,d,c,m){var G,W=l[0],i=l[1],X=0,n=1,u=Z[0]-W,a=Z[1]-i;if(G=b-W,u||!(G>0)){if(G/=u,u<0){if(G<X)return;G<n&&(n=G)}else if(u>0){if(G>n)return;G>X&&(X=G)}if(G=c-W,u||!(G<0)){if(G/=u,u<0){if(G>n)return;G>X&&(X=G)}else if(u>0){if(G<X)return;G<n&&(n=G)}if(G=d-i,a||!(G>0)){if(G/=a,a<0){if(G<X)return;G<n&&(n=G)}else if(a>0){if(G>n)return;G>X&&(X=G)}if(G=m-i,a||!(G<0)){if(G/=a,a<0){if(G>n)return;G>X&&(X=G)}else if(a>0){if(G<X)return;G<n&&(n=G)}return X>0&&(l[0]=W+X*u,l[1]=i+X*a),n<1&&(Z[0]=W+n*u,Z[1]=i+n*a),!0}}}}}(i,X,l,Z,b,d)?W&&(I.lineStart(),I.point(m,G),s=!1):(p||(I.lineStart(),I.point(i[0],i[1])),I.point(X[0],X[1]),W||I.lineEnd(),s=!1)}y=m,e=G,p=W}var n,u,a,V,h,t,y,e,p,o,s,I=G,R=mc(),g={point:i,lineStart:function(){g.point=X,u&&u.push(a=[]),o=!0,p=!1,y=e=NaN},lineEnd:function(){n&&(X(V,h),t&&p&&R.rejoin(),n.push(R.result())),g.point=i,p&&I.lineEnd()},polygonStart:function(){I=R,n=[],u=[],s=!0},polygonEnd:function(){var Z=function(){for(var Z=0,b=0,c=u.length;b<c;++b)for(var m,G,W=u[b],i=1,X=W.length,n=W[0],a=n[0],V=n[1];i<X;++i)m=a,G=V,a=(n=W[i])[0],V=n[1],G<=d?V>d&&(a-m)*(d-G)>(V-G)*(l-m)&&++Z:V<=d&&(a-m)*(d-G)<(V-G)*(l-m)&&--Z;return Z}(),b=s&&Z,c=(n=Y(n)).length;(b||c)&&(G.polygonStart(),b&&(G.lineStart(),m(null,null,1,G),G.lineEnd()),c&&ic(n,W,Z,m,G),G.polygonEnd()),I=G,n=u=a=null}};return g}}function yc(){oh.point=oh.lineEnd=Vd}function Yc(l,Z){ch=l*=zV,mh=PV(Z*=zV),Gh=jV(Z),oh.point=ec}function ec(l,Z){l*=zV;var b=PV(Z*=zV),d=jV(Z),c=MV(l-ch),m=jV(c),G=d*PV(c),W=Gh*b-mh*d*m,i=mh*b+Gh*d*m;ph.add(TV(AV(G*G+W*W),i)),ch=l,mh=b,Gh=d}function pc(l){return ph.reset(),Yd(l,oh),+ph}function oc(l,Z){return sh[0]=l,sh[1]=Z,pc(Ih)}function sc(l,Z){return!(!l||!gh.hasOwnProperty(l.type))&&gh[l.type](l,Z)}function Ic(l,Z){return 0===oc(l,Z)}function Rc(l,Z){var b=oc(l[0],l[1]);return oc(l[0],Z)+oc(Z,l[1])<=b+FV}function gc(l,Z){return!!nc(l.map(Kc),Nc(Z))}function Kc(l){return(l=l.map(Nc)).pop(),l}function Nc(l){return[l[0]*zV,l[1]*zV]}function Hc(l,Z,b){var d=n(l,Z-FV,b).concat(Z);return function(l){return d.map((function(Z){return[l,Z]}))}}function xc(l,Z,b){var d=n(l,Z-FV,b).concat(Z);return function(l){return d.map((function(Z){return[Z,l]}))}}function Jc(){function l(){return{type:"MultiLineString",coordinates:Z()}}function Z(){return n(wV(m/Y)*Y,c,Y).map(V).concat(n(wV(X/e)*e,i,e).map(h)).concat(n(wV(d/t)*t,b,t).filter((function(l){return MV(l%Y)>FV})).map(u)).concat(n(wV(W/y)*y,G,y).filter((function(l){return MV(l%e)>FV})).map(a))}var b,d,c,m,G,W,i,X,u,a,V,h,t=10,y=t,Y=90,e=360,p=2.5;return l.lines=function(){return Z().map((function(l){return{type:"LineString",coordinates:l}}))},l.outline=function(){return{type:"Polygon",coordinates:[V(m).concat(h(i).slice(1),V(c).reverse().slice(1),h(X).reverse().slice(1))]}},l.extent=function(Z){return arguments.length?l.extentMajor(Z).extentMinor(Z):l.extentMinor()},l.extentMajor=function(Z){return arguments.length?(m=+Z[0][0],c=+Z[1][0],X=+Z[0][1],i=+Z[1][1],m>c&&(Z=m,m=c,c=Z),X>i&&(Z=X,X=i,i=Z),l.precision(p)):[[m,X],[c,i]]},l.extentMinor=function(Z){return arguments.length?(d=+Z[0][0],b=+Z[1][0],W=+Z[0][1],G=+Z[1][1],d>b&&(Z=d,d=b,b=Z),W>G&&(Z=W,W=G,G=Z),l.precision(p)):[[d,W],[b,G]]},l.step=function(Z){return arguments.length?l.stepMajor(Z).stepMinor(Z):l.stepMinor()},l.stepMajor=function(Z){return arguments.length?(Y=+Z[0],e=+Z[1],l):[Y,e]},l.stepMinor=function(Z){return arguments.length?(t=+Z[0],y=+Z[1],l):[t,y]},l.precision=function(Z){return arguments.length?(p=+Z,u=Hc(W,G,90),a=xc(d,b,p),V=Hc(X,i,90),h=xc(m,c,p),l):p},l.extentMajor([[-180,-90+FV],[180,90-FV]]).extentMinor([[-180,-80-FV],[180,80+FV]])}function Lc(l){return l}function Fc(){Hh.point=Cc}function Cc(l,Z){Hh.point=Sc,Wh=Xh=l,ih=nh=Z}function Sc(l,Z){Nh.add(nh*l-Xh*Z),Xh=l,nh=Z}function Bc(){Sc(Wh,ih)}function kc(l,Z){Sh+=l,Bh+=Z,++kh}function vc(){wh.point=zc}function zc(l,Z){wh.point=Mc,kc(Vh=l,hh=Z)}function Mc(l,Z){var b=l-Vh,d=Z-hh,c=AV(b*b+d*d);vh+=c*(Vh+l)/2,zh+=c*(hh+Z)/2,Mh+=c,kc(Vh=l,hh=Z)}function rc(){wh.point=kc}function Tc(){wh.point=wc}function jc(){Uc(uh,ah)}function wc(l,Z){wh.point=Uc,kc(uh=Vh=l,ah=hh=Z)}function Uc(l,Z){var b=l-Vh,d=Z-hh,c=AV(b*b+d*d);vh+=c*(Vh+l)/2,zh+=c*(hh+Z)/2,Mh+=c,rh+=(c=hh*l-Vh*Z)*(Vh+l),Th+=c*(hh+Z),jh+=3*c,kc(Vh=l,hh=Z)}function fc(l){this._context=l}function Qc(l,Z){Eh.point=Pc,fh=Ph=l,Qh=Dh=Z}function Pc(l,Z){Ph-=l,Dh-=Z,Ah.add(AV(Ph*Ph+Dh*Dh)),Ph=l,Dh=Z}function Dc(){this._string=[]}function Ac(l){return"m0,"+l+"a"+l+","+l+" 0 1,1 0,"+-2*l+"a"+l+","+l+" 0 1,1 0,"+2*l+"z"}function Ec(l){return function(Z){var b=new Oc;for(var d in l)b[d]=l[d];return b.stream=Z,b}}function Oc(){}function qc(l,Z,b){var d=l.clipExtent&&l.clipExtent();return l.scale(150).translate([0,0]),null!=d&&l.clipExtent(null),Yd(b,l.stream(Ch)),Z(Ch.result()),null!=d&&l.clipExtent(d),l}function _c(l,Z,b){return qc(l,(function(b){var d=Z[1][0]-Z[0][0],c=Z[1][1]-Z[0][1],m=Math.min(d/(b[1][0]-b[0][0]),c/(b[1][1]-b[0][1])),G=+Z[0][0]+(d-m*(b[1][0]+b[0][0]))/2,W=+Z[0][1]+(c-m*(b[1][1]+b[0][1]))/2;l.scale(150*m).translate([G,W])}),b)}function $c(l,Z,b){return _c(l,[[0,0],Z],b)}function lm(l,Z,b){return qc(l,(function(b){var d=+Z,c=d/(b[1][0]-b[0][0]),m=(d-c*(b[1][0]+b[0][0]))/2,G=-c*b[0][1];l.scale(150*c).translate([m,G])}),b)}function Zm(l,Z,b){return qc(l,(function(b){var d=+Z,c=d/(b[1][1]-b[0][1]),m=-c*b[0][0],G=(d-c*(b[1][1]+b[0][1]))/2;l.scale(150*c).translate([m,G])}),b)}function bm(l,Z){return+Z?function(l,Z){function b(d,c,m,G,W,i,X,n,u,a,V,h,t,y){var Y=X-d,e=n-c,p=Y*Y+e*e;if(p>4*Z&&t--){var o=G+a,s=W+V,I=i+h,R=AV(o*o+s*s+I*I),g=ud(I/=R),K=MV(MV(I)-1)<FV||MV(m-u)<FV?(m+u)/2:TV(s,o),N=l(K,g),H=N[0],x=N[1],J=H-d,L=x-c,F=e*J-Y*L;(F*F/p>Z||MV((Y*J+e*L)/p-.5)>.3||G*a+W*V+i*h<qh)&&(b(d,c,m,G,W,i,H,x,K,o/=R,s/=R,I,t,y),y.point(H,x),b(H,x,K,o,s,I,X,n,u,a,V,h,t,y))}}return function(Z){function d(b,d){b=l(b,d),Z.point(b[0],b[1])}function c(){Y=NaN,I.point=m,Z.lineStart()}function m(d,c){var m=Rd([d,c]),G=l(d,c);b(Y,e,y,p,o,s,Y=G[0],e=G[1],y=d,p=m[0],o=m[1],s=m[2],Oh,Z),Z.point(Y,e)}function G(){I.point=d,Z.lineEnd()}function W(){c(),I.point=i,I.lineEnd=X}function i(l,Z){m(n=l,Z),u=Y,a=e,V=p,h=o,t=s,I.point=m}function X(){b(Y,e,y,p,o,s,u,a,n,V,h,t,Oh,Z),I.lineEnd=G,G()}var n,u,a,V,h,t,y,Y,e,p,o,s,I={point:d,lineStart:c,lineEnd:G,polygonStart:function(){Z.polygonStart(),I.lineStart=W},polygonEnd:function(){Z.polygonEnd(),I.lineStart=c}};return I}}(l,Z):function(l){return Ec({point:function(Z,b){Z=l(Z,b),this.stream.point(Z[0],Z[1])}})}(l)}function dm(l,Z,b,d){function c(l,d){return[W*l-i*d+Z,b-i*l-W*d]}var m=jV(d),G=PV(d),W=m*l,i=G*l,X=m/l,n=G/l,u=(G*b-m*Z)/l,a=(G*Z+m*b)/l;return c.invert=function(l,Z){return[X*l-n*Z+u,a-n*l-X*Z]},c}function cm(l){return mm((function(){return l}))()}function mm(l){function Z(l){return u(l[0]*zV,l[1]*zV)}function b(){var l=dm(h,0,0,I).apply(null,c(Y,e)),Z=(I?dm:function(l,Z,b){function d(d,c){return[Z+l*d,b-l*c]}return d.invert=function(d,c){return[(d-Z)/l,(b-c)/l]},d})(h,t-l[0],y-l[1],I);return m=_d(p,o,s),n=Od(c,Z),u=Od(m,n),X=bm(n,H),d()}function d(){return a=V=null,Z}var c,m,G,W,i,X,n,u,a,V,h=150,t=480,y=250,Y=0,e=0,p=0,o=0,s=0,I=0,R=null,g=yh,K=null,N=Lc,H=.5;return Z.stream=function(l){return a&&V===l?a:a=_h(function(l){return Ec({point:function(Z,b){var d=l(Z,b);return this.stream.point(d[0],d[1])}})}(m)(g(X(N(V=l)))))},Z.preclip=function(l){return arguments.length?(g=l,R=void 0,d()):g},Z.postclip=function(l){return arguments.length?(N=l,K=G=W=i=null,d()):N},Z.clipAngle=function(l){return arguments.length?(g=+l?hc(R=l*zV):(R=null,yh),d()):R*vV},Z.clipExtent=function(l){return arguments.length?(N=null==l?(K=G=W=i=null,Lc):tc(K=+l[0][0],G=+l[0][1],W=+l[1][0],i=+l[1][1]),d()):null==K?null:[[K,G],[W,i]]},Z.scale=function(l){return arguments.length?(h=+l,b()):h},Z.translate=function(l){return arguments.length?(t=+l[0],y=+l[1],b()):[t,y]},Z.center=function(l){return arguments.length?(Y=l[0]%360*zV,e=l[1]%360*zV,b()):[Y*vV,e*vV]},Z.rotate=function(l){return arguments.length?(p=l[0]%360*zV,o=l[1]%360*zV,s=l.length>2?l[2]%360*zV:0,b()):[p*vV,o*vV,s*vV]},Z.angle=function(l){return arguments.length?(I=l%360*zV,b()):I*vV},Z.precision=function(l){return arguments.length?(X=bm(n,H=l*l),d()):AV(H)},Z.fitExtent=function(l,b){return _c(Z,l,b)},Z.fitSize=function(l,b){return $c(Z,l,b)},Z.fitWidth=function(l,b){return lm(Z,l,b)},Z.fitHeight=function(l,b){return Zm(Z,l,b)},function(){return c=l.apply(this,arguments),Z.invert=c.invert&&function(l){return(l=u.invert(l[0],l[1]))&&[l[0]*vV,l[1]*vV]},b()}}function Gm(l){var Z=0,b=CV/3,d=mm(l),c=d(Z,b);return c.parallels=function(l){return arguments.length?d(Z=l[0]*zV,b=l[1]*zV):[Z*vV,b*vV]},c}function Wm(l,Z){function b(l,Z){var b=AV(m-2*c*PV(Z))/c;return[b*PV(l*=c),G-b*jV(l)]}var d=PV(l),c=(d+PV(Z))/2;if(MV(c)<FV)return function(l){function Z(l,Z){return[l*b,PV(Z)/b]}var b=jV(l);return Z.invert=function(l,Z){return[l/b,ud(Z*b)]},Z}(l);var m=1+d*(2*c-d),G=AV(m)/c;return b.invert=function(l,Z){var b=G-Z;return[TV(l,MV(b))/c*DV(b),ud((m-(l*l+b*b)*c*c)/(2*c))]},b}function im(){return Gm(Wm).scale(155.424).center([0,33.6442])}function Xm(){return im().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function nm(l){return function(Z,b){var d=jV(Z),c=jV(b),m=l(d*c);return[m*c*PV(Z),m*PV(b)]}}function um(l){return function(Z,b){var d=AV(Z*Z+b*b),c=l(d),m=PV(c),G=jV(c);return[TV(Z*m,d*G),ud(d&&b*m/d)]}}function am(l,Z){return[l,fV(EV((SV+Z)/2))]}function Vm(l){function Z(){var Z=CV*W(),G=m(bc(m.rotate()).invert([0,0]));return X(null==n?[[G[0]-Z,G[1]-Z],[G[0]+Z,G[1]+Z]]:l===am?[[Math.max(G[0]-Z,n),b],[Math.min(G[0]+Z,d),c]]:[[n,Math.max(G[1]-Z,b)],[d,Math.min(G[1]+Z,c)]])}var b,d,c,m=cm(l),G=m.center,W=m.scale,i=m.translate,X=m.clipExtent,n=null;return m.scale=function(l){return arguments.length?(W(l),Z()):W()},m.translate=function(l){return arguments.length?(i(l),Z()):i()},m.center=function(l){return arguments.length?(G(l),Z()):G()},m.clipExtent=function(l){return arguments.length?(null==l?n=b=d=c=null:(n=+l[0][0],b=+l[0][1],d=+l[1][0],c=+l[1][1]),Z()):null==n?null:[[n,b],[d,c]]},Z()}function hm(l){return EV((SV+l)/2)}function tm(l,Z){function b(l,Z){m>0?Z<-SV+FV&&(Z=-SV+FV):Z>SV-FV&&(Z=SV-FV);var b=m/QV(hm(Z),c);return[b*PV(c*l),m-b*jV(c*l)]}var d=jV(l),c=l===Z?PV(l):fV(d/jV(Z))/fV(hm(Z)/hm(l)),m=d*QV(hm(l),c)/c;return c?(b.invert=function(l,Z){var b=m-Z,d=DV(c)*AV(l*l+b*b);return[TV(l,MV(b))/c*DV(b),2*rV(QV(m/d,1/c))-SV]},b):am}function ym(l,Z){return[l,Z]}function Ym(l,Z){function b(l,Z){var b=m-Z,d=c*l;return[b*PV(d),m-b*jV(d)]}var d=jV(l),c=l===Z?PV(l):(d-jV(Z))/(Z-l),m=d/c+l;return MV(c)<FV?ym:(b.invert=function(l,Z){var b=m-Z;return[TV(l,MV(b))/c*DV(b),m-DV(c)*AV(l*l+b*b)]},b)}function em(l,Z){var b=jV(Z),d=jV(l)*b;return[b*PV(l)/d,PV(Z)/d]}function pm(l,Z,b,d){return 1===l&&1===Z&&0===b&&0===d?Lc:Ec({point:function(c,m){this.stream.point(c*l+b,m*Z+d)}})}function om(l,Z){var b=Z*Z,d=b*b;return[l*(.8707-.131979*b+d*(d*(.003971*b-.001529*d)-.013791)),Z*(1.007226+b*(.015085+d*(.028874*b-.044475-.005916*d)))]}function sm(l,Z){return[jV(Z)*PV(l),PV(Z)]}function Im(l,Z){var b=jV(Z),d=1+jV(l)*b;return[b*PV(l)/d,PV(Z)/d]}function Rm(l,Z){return[fV(EV((SV+Z)/2)),-l]}function gm(l,Z){return l.parent===Z.parent?1:2}function Km(l,Z){return l+Z.x}function Nm(l,Z){return Math.max(l,Z.y)}function Hm(l){var Z=0,b=l.children,d=b&&b.length;if(d)for(;--d>=0;)Z+=b[d].value;else Z=1;l.value=Z}function xm(l,Z){var b,d,c,m,G,W=new Cm(l),i=+l.value&&(W.value=l.value),X=[W];for(null==Z&&(Z=Jm);b=X.pop();)if(i&&(b.value=+b.data.value),(c=Z(b.data))&&(G=c.length))for(b.children=new Array(G),m=G-1;m>=0;--m)X.push(d=b.children[m]=new Cm(c[m])),d.parent=b,d.depth=b.depth+1;return W.eachBefore(Fm)}function Jm(l){return l.children}function Lm(l){l.data=l.data.data}function Fm(l){var Z=0;do{l.height=Z}while((l=l.parent)&&l.height<++Z)}function Cm(l){this.data=l,this.depth=this.height=0,this.parent=null}function Sm(l){for(var Z,b,d=0,c=(l=function(l){for(var Z,b,d=l.length;d;)b=Math.random()*d--|0,Z=l[d],l[d]=l[b],l[b]=Z;return l}(Zt.call(l))).length,m=[];d<c;)Z=l[d],b&&km(b,Z)?++d:(b=function(l){switch(l.length){case 1:return function(l){return{x:l.x,y:l.y,r:l.r}}(l[0]);case 2:return zm(l[0],l[1]);case 3:return Mm(l[0],l[1],l[2])}}(m=function(l,Z){var b,d;if(vm(Z,l))return[Z];for(b=0;b<l.length;++b)if(Bm(Z,l[b])&&vm(zm(l[b],Z),l))return[l[b],Z];for(b=0;b<l.length-1;++b)for(d=b+1;d<l.length;++d)if(Bm(zm(l[b],l[d]),Z)&&Bm(zm(l[b],Z),l[d])&&Bm(zm(l[d],Z),l[b])&&vm(Mm(l[b],l[d],Z),l))return[l[b],l[d],Z];throw new Error}(m,Z)),d=0);return b}function Bm(l,Z){var b=l.r-Z.r,d=Z.x-l.x,c=Z.y-l.y;return b<0||b*b<d*d+c*c}function km(l,Z){var b=l.r-Z.r+1e-6,d=Z.x-l.x,c=Z.y-l.y;return b>0&&b*b>d*d+c*c}function vm(l,Z){for(var b=0;b<Z.length;++b)if(!km(l,Z[b]))return!1;return!0}function zm(l,Z){var b=l.x,d=l.y,c=l.r,m=Z.x,G=Z.y,W=Z.r,i=m-b,X=G-d,n=W-c,u=Math.sqrt(i*i+X*X);return{x:(b+m+i/u*n)/2,y:(d+G+X/u*n)/2,r:(u+c+W)/2}}function Mm(l,Z,b){var d=l.x,c=l.y,m=l.r,G=Z.x,W=Z.y,i=Z.r,X=b.x,n=b.y,u=b.r,a=d-G,V=d-X,h=c-W,t=c-n,y=i-m,Y=u-m,e=d*d+c*c-m*m,p=e-G*G-W*W+i*i,o=e-X*X-n*n+u*u,s=V*h-a*t,I=(h*o-t*p)/(2*s)-d,R=(t*y-h*Y)/s,g=(V*p-a*o)/(2*s)-c,K=(a*Y-V*y)/s,N=R*R+K*K-1,H=2*(m+I*R+g*K),x=I*I+g*g-m*m,J=-(N?(H+Math.sqrt(H*H-4*N*x))/(2*N):x/H);return{x:d+I+R*J,y:c+g+K*J,r:J}}function rm(l,Z,b){var d,c,m,G,W=l.x-Z.x,i=l.y-Z.y,X=W*W+i*i;X?(c=Z.r+b.r,c*=c,G=l.r+b.r,c>(G*=G)?(d=(X+G-c)/(2*X),m=Math.sqrt(Math.max(0,G/X-d*d)),b.x=l.x-d*W-m*i,b.y=l.y-d*i+m*W):(d=(X+c-G)/(2*X),m=Math.sqrt(Math.max(0,c/X-d*d)),b.x=Z.x+d*W-m*i,b.y=Z.y+d*i+m*W)):(b.x=Z.x+b.r,b.y=Z.y)}function Tm(l,Z){var b=l.r+Z.r-1e-6,d=Z.x-l.x,c=Z.y-l.y;return b>0&&b*b>d*d+c*c}function jm(l){var Z=l._,b=l.next._,d=Z.r+b.r,c=(Z.x*b.r+b.x*Z.r)/d,m=(Z.y*b.r+b.y*Z.r)/d;return c*c+m*m}function wm(l){this._=l,this.next=null,this.previous=null}function Um(l){if(!(c=l.length))return 0;var Z,b,d,c,m,G,W,i,X,n,u;if((Z=l[0]).x=0,Z.y=0,!(c>1))return Z.r;if(b=l[1],Z.x=-b.r,b.x=Z.r,b.y=0,!(c>2))return Z.r+b.r;rm(b,Z,d=l[2]),Z=new wm(Z),b=new wm(b),d=new wm(d),Z.next=d.previous=b,b.next=Z.previous=d,d.next=b.previous=Z;l:for(W=3;W<c;++W){rm(Z._,b._,d=l[W]),d=new wm(d),i=b.next,X=Z.previous,n=b._.r,u=Z._.r;do{if(n<=u){if(Tm(i._,d._)){b=i,Z.next=b,b.previous=Z,--W;continue l}n+=i._.r,i=i.next}else{if(Tm(X._,d._)){(Z=X).next=b,b.previous=Z,--W;continue l}u+=X._.r,X=X.previous}}while(i!==X.next);for(d.previous=Z,d.next=b,Z.next=b.previous=b=d,m=jm(Z);(d=d.next)!==b;)(G=jm(d))<m&&(Z=d,m=G);b=Z.next}for(Z=[b._],d=b;(d=d.next)!==b;)Z.push(d._);for(d=Sm(Z),W=0;W<c;++W)(Z=l[W]).x-=d.x,Z.y-=d.y;return d.r}function fm(l){if("function"!=typeof l)throw new Error;return l}function Qm(){return 0}function Pm(l){return function(){return l}}function Dm(l){return Math.sqrt(l.value)}function Am(l){return function(Z){Z.children||(Z.r=Math.max(0,+l(Z)||0))}}function Em(l,Z){return function(b){if(d=b.children){var d,c,m,G=d.length,W=l(b)*Z||0;if(W)for(c=0;c<G;++c)d[c].r+=W;if(m=Um(d),W)for(c=0;c<G;++c)d[c].r-=W;b.r=m+W}}}function Om(l){return function(Z){var b=Z.parent;Z.r*=l,b&&(Z.x=b.x+l*Z.x,Z.y=b.y+l*Z.y)}}function qm(l){l.x0=Math.round(l.x0),l.y0=Math.round(l.y0),l.x1=Math.round(l.x1),l.y1=Math.round(l.y1)}function _m(l,Z,b,d,c){for(var m,G=l.children,W=-1,i=G.length,X=l.value&&(d-Z)/l.value;++W<i;)(m=G[W]).y0=b,m.y1=c,m.x0=Z,m.x1=Z+=m.value*X}function $m(l){return l.id}function lG(l){return l.parentId}function ZG(l,Z){return l.parent===Z.parent?1:2}function bG(l){var Z=l.children;return Z?Z[0]:l.t}function dG(l){var Z=l.children;return Z?Z[Z.length-1]:l.t}function cG(l,Z,b){var d=b/(Z.i-l.i);Z.c-=d,Z.s+=b,l.c+=d,Z.z+=b,Z.m+=b}function mG(l,Z,b){return l.a.parent===Z.parent?l.a:b}function GG(l,Z){this._=l,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=Z}function WG(l,Z,b,d,c){for(var m,G=l.children,W=-1,i=G.length,X=l.value&&(c-b)/l.value;++W<i;)(m=G[W]).x0=Z,m.x1=d,m.y0=b,m.y1=b+=m.value*X}function iG(l,Z,b,d,c,m){for(var G,W,i,X,n,u,a,V,h,t,y,Y=[],e=Z.children,p=0,o=0,s=e.length,I=Z.value;p<s;){i=c-b,X=m-d;do{n=e[o++].value}while(!n&&o<s);for(u=a=n,y=n*n*(t=Math.max(X/i,i/X)/(I*l)),h=Math.max(a/y,y/u);o<s;++o){if(n+=W=e[o].value,W<u&&(u=W),W>a&&(a=W),y=n*n*t,(V=Math.max(a/y,y/u))>h){n-=W;break}h=V}Y.push(G={value:n,dice:i<X,children:e.slice(p,o)}),G.dice?_m(G,b,d,c,I?d+=X*n/I:m):WG(G,b,d,I?b+=i*n/I:c,m),I-=n,p=o}return Y}function XG(l,Z,b){return(Z[0]-l[0])*(b[1]-l[1])-(Z[1]-l[1])*(b[0]-l[0])}function nG(l,Z){return l[0]-Z[0]||l[1]-Z[1]}function uG(l){for(var Z=l.length,b=[0,1],d=2,c=2;c<Z;++c){for(;d>1&&XG(l[b[d-2]],l[b[d-1]],l[c])<=0;)--d;b[d++]=c}return b.slice(0,d)}function aG(){return Math.random()}function VG(l){function Z(Z){var m=Z+"",G=b.get(m);if(!G){if(c!==yt)return c;b.set(m,G=d.push(Z))}return l[(G-1)%l.length]}var b=nb(),d=[],c=yt;return l=null==l?[]:tt.call(l),Z.domain=function(l){if(!arguments.length)return d.slice();d=[],b=nb();for(var c,m,G=-1,W=l.length;++G<W;)b.has(m=(c=l[G])+"")||b.set(m,d.push(c));return Z},Z.range=function(b){return arguments.length?(l=tt.call(b),Z):l.slice()},Z.unknown=function(l){return arguments.length?(c=l,Z):c},Z.copy=function(){return VG().domain(d).range(l).unknown(c)},Z}function hG(){function l(){var l=c().length,d=G[1]<G[0],a=G[d-0],V=G[1-d];Z=(V-a)/Math.max(1,l-i+2*X),W&&(Z=Math.floor(Z)),a+=(V-a-Z*(l-i))*u,b=Z*(1-i),W&&(a=Math.round(a),b=Math.round(b));var h=n(l).map((function(l){return a+Z*l}));return m(d?h.reverse():h)}var Z,b,d=VG().unknown(void 0),c=d.domain,m=d.range,G=[0,1],W=!1,i=0,X=0,u=.5;return delete d.unknown,d.domain=function(Z){return arguments.length?(c(Z),l()):c()},d.range=function(Z){return arguments.length?(G=[+Z[0],+Z[1]],l()):G.slice()},d.rangeRound=function(Z){return G=[+Z[0],+Z[1]],W=!0,l()},d.bandwidth=function(){return b},d.step=function(){return Z},d.round=function(Z){return arguments.length?(W=!!Z,l()):W},d.padding=function(Z){return arguments.length?(i=X=Math.max(0,Math.min(1,Z)),l()):i},d.paddingInner=function(Z){return arguments.length?(i=Math.max(0,Math.min(1,Z)),l()):i},d.paddingOuter=function(Z){return arguments.length?(X=Math.max(0,Math.min(1,Z)),l()):X},d.align=function(Z){return arguments.length?(u=Math.max(0,Math.min(1,Z)),l()):u},d.copy=function(){return hG().domain(c()).range(G).round(W).paddingInner(i).paddingOuter(X).align(u)},l()}function tG(l){return function(){return l}}function yG(l){return+l}function YG(l,Z){return(Z-=l=+l)?function(b){return(b-l)/Z}:tG(Z)}function eG(l,Z,b,d){var c=l[0],m=l[1],G=Z[0],W=Z[1];return m<c?(c=b(m,c),G=d(W,G)):(c=b(c,m),G=d(G,W)),function(l){return G(c(l))}}function pG(l,Z,b,d){var c=Math.min(l.length,Z.length)-1,m=new Array(c),G=new Array(c),W=-1;for(l[c]<l[0]&&(l=l.slice().reverse(),Z=Z.slice().reverse());++W<c;)m[W]=b(l[W],l[W+1]),G[W]=d(Z[W],Z[W+1]);return function(Z){var b=TX(l,Z,1,c)-1;return G[b](m[b](Z))}}function oG(l,Z){return Z.domain(l.domain()).range(l.range()).interpolate(l.interpolate()).clamp(l.clamp())}function sG(l,Z){function b(){return c=Math.min(W.length,i.length)>2?pG:eG,m=G=null,d}function d(Z){return(m||(m=c(W,i,n?function(l){return function(Z,b){var d=l(Z=+Z,b=+b);return function(l){return l<=Z?0:l>=b?1:d(l)}}}(l):l,X)))(+Z)}var c,m,G,W=Yt,i=Yt,X=uZ,n=!1;return d.invert=function(l){return(G||(G=c(i,W,YG,n?function(l){return function(Z,b){var d=l(Z=+Z,b=+b);return function(l){return l<=0?Z:l>=1?b:d(l)}}}(Z):Z)))(+l)},d.domain=function(l){return arguments.length?(W=ht.call(l,yG),b()):W.slice()},d.range=function(l){return arguments.length?(i=tt.call(l),b()):i.slice()},d.rangeRound=function(l){return i=tt.call(l),X=aZ,b()},d.clamp=function(l){return arguments.length?(n=!!l,b()):n},d.interpolate=function(l){return arguments.length?(X=l,b()):X},b()}function IG(Z){var b=Z.domain;return Z.ticks=function(l){var Z=b();return u(Z[0],Z[Z.length-1],null==l?10:l)},Z.tickFormat=function(Z,d){return function(Z,b,d){var c,m=Z[0],G=Z[Z.length-1],W=V(m,G,null==b?10:b);switch((d=_b(null==d?",f":d)).type){case"s":var i=Math.max(Math.abs(m),Math.abs(G));return null!=d.precision||isNaN(c=md(W,i))||(d.precision=c),l.formatPrefix(d,i);case"":case"e":case"g":case"p":case"r":null!=d.precision||isNaN(c=Gd(W,Math.max(Math.abs(m),Math.abs(G))))||(d.precision=c-("e"===d.type));break;case"f":case"%":null!=d.precision||isNaN(c=cd(W))||(d.precision=c-2*("%"===d.type))}return l.format(d)}(b(),Z,d)},Z.nice=function(l){null==l&&(l=10);var d,c=b(),m=0,G=c.length-1,W=c[m],i=c[G];return i<W&&(d=W,W=i,i=d,d=m,m=G,G=d),(d=a(W,i,l))>0?d=a(W=Math.floor(W/d)*d,i=Math.ceil(i/d)*d,l):d<0&&(d=a(W=Math.ceil(W*d)/d,i=Math.floor(i*d)/d,l)),d>0?(c[m]=Math.floor(W/d)*d,c[G]=Math.ceil(i/d)*d,b(c)):d<0&&(c[m]=Math.ceil(W*d)/d,c[G]=Math.floor(i*d)/d,b(c)),Z},Z}function RG(l,Z){var b,d=0,c=(l=l.slice()).length-1,m=l[d],G=l[c];return G<m&&(b=d,d=c,c=b,b=m,m=G,G=b),l[d]=Z.floor(m),l[c]=Z.ceil(G),l}function gG(l,Z){return(Z=Math.log(Z/l))?function(b){return Math.log(b/l)/Z}:tG(Z)}function KG(l,Z){return l<0?function(b){return-Math.pow(-Z,b)*Math.pow(-l,1-b)}:function(b){return Math.pow(Z,b)*Math.pow(l,1-b)}}function NG(l){return isFinite(l)?+("1e"+l):l<0?0:l}function HG(l){return 10===l?NG:l===Math.E?Math.exp:function(Z){return Math.pow(l,Z)}}function xG(l){return l===Math.E?Math.log:10===l&&Math.log10||2===l&&Math.log2||(l=Math.log(l),function(Z){return Math.log(Z)/l})}function JG(l){return function(Z){return-l(-Z)}}function LG(l,Z){return l<0?-Math.pow(-l,Z):Math.pow(l,Z)}function FG(){var l=1,Z=sG((function(Z,b){return(b=LG(b,l)-(Z=LG(Z,l)))?function(d){return(LG(d,l)-Z)/b}:tG(b)}),(function(Z,b){return b=LG(b,l)-(Z=LG(Z,l)),function(d){return LG(Z+b*d,1/l)}})),b=Z.domain;return Z.exponent=function(Z){return arguments.length?(l=+Z,b(b())):l},Z.copy=function(){return oG(Z,FG().exponent(l))},IG(Z)}function CG(l,Z,b,d){function c(Z){return l(Z=new Date(+Z)),Z}return c.floor=c,c.ceil=function(b){return l(b=new Date(b-1)),Z(b,1),l(b),b},c.round=function(l){var Z=c(l),b=c.ceil(l);return l-Z<b-l?Z:b},c.offset=function(l,b){return Z(l=new Date(+l),null==b?1:Math.floor(b)),l},c.range=function(b,d,m){var G,W=[];if(b=c.ceil(b),m=null==m?1:Math.floor(m),!(b<d&&m>0))return W;do{W.push(G=new Date(+b)),Z(b,m),l(b)}while(G<b&&b<d);return W},c.filter=function(b){return CG((function(Z){if(Z>=Z)for(;l(Z),!b(Z);)Z.setTime(Z-1)}),(function(l,d){if(l>=l)if(d<0)for(;++d<=0;)for(;Z(l,-1),!b(l););else for(;--d>=0;)for(;Z(l,1),!b(l););}))},b&&(c.count=function(Z,d){return et.setTime(+Z),pt.setTime(+d),l(et),l(pt),Math.floor(b(et,pt))},c.every=function(l){return l=Math.floor(l),isFinite(l)&&l>0?l>1?c.filter(d?function(Z){return d(Z)%l==0}:function(Z){return c.count(0,Z)%l==0}):c:null}),c}function SG(l){return CG((function(Z){Z.setDate(Z.getDate()-(Z.getDay()+7-l)%7),Z.setHours(0,0,0,0)}),(function(l,Z){l.setDate(l.getDate()+7*Z)}),(function(l,Z){return(Z-l-(Z.getTimezoneOffset()-l.getTimezoneOffset())*It)/Rt}))}function BG(l){return CG((function(Z){Z.setUTCDate(Z.getUTCDate()-(Z.getUTCDay()+7-l)%7),Z.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCDate(l.getUTCDate()+7*Z)}),(function(l,Z){return(Z-l)/Rt}))}function kG(l){if(0<=l.y&&l.y<100){var Z=new Date(-1,l.m,l.d,l.H,l.M,l.S,l.L);return Z.setFullYear(l.y),Z}return new Date(l.y,l.m,l.d,l.H,l.M,l.S,l.L)}function vG(l){if(0<=l.y&&l.y<100){var Z=new Date(Date.UTC(-1,l.m,l.d,l.H,l.M,l.S,l.L));return Z.setUTCFullYear(l.y),Z}return new Date(Date.UTC(l.y,l.m,l.d,l.H,l.M,l.S,l.L))}function zG(l){return{y:l,m:0,d:1,H:0,M:0,S:0,L:0}}function MG(l){function Z(l,Z){return function(b){var d,c,m,G=[],W=-1,i=0,X=l.length;for(b instanceof Date||(b=new Date(+b));++W<X;)37===l.charCodeAt(W)&&(G.push(l.slice(i,W)),null!=(c=sy[d=l.charAt(++W)])?d=l.charAt(++W):c="e"===d?" ":"0",(m=Z[d])&&(d=m(b,c)),G.push(d),i=W+1);return G.push(l.slice(i,W)),G.join("")}}function b(l,Z){return function(b){var c,m,G=zG(1900);if(d(G,l,b+="",0)!=b.length)return null;if("Q"in G)return new Date(G.Q);if("p"in G&&(G.H=G.H%12+12*G.p),"V"in G){if(G.V<1||G.V>53)return null;"w"in G||(G.w=1),"Z"in G?(c=(m=(c=vG(zG(G.y))).getUTCDay())>4||0===m?dy.ceil(c):dy(c),c=ly.offset(c,7*(G.V-1)),G.y=c.getUTCFullYear(),G.m=c.getUTCMonth(),G.d=c.getUTCDate()+(G.w+6)%7):(c=(m=(c=Z(zG(G.y))).getDay())>4||0===m?St.ceil(c):St(c),c=Lt.offset(c,7*(G.V-1)),G.y=c.getFullYear(),G.m=c.getMonth(),G.d=c.getDate()+(G.w+6)%7)}else("W"in G||"U"in G)&&("w"in G||(G.w="u"in G?G.u%7:"W"in G?1:0),m="Z"in G?vG(zG(G.y)).getUTCDay():Z(zG(G.y)).getDay(),G.m=0,G.d="W"in G?(G.w+6)%7+7*G.W-(m+5)%7:G.w+7*G.U-(m+6)%7);return"Z"in G?(G.H+=G.Z/100|0,G.M+=G.Z%100,vG(G)):Z(G)}}function d(l,Z,b,d){for(var c,m,G=0,W=Z.length,i=b.length;G<W;){if(d>=i)return-1;if(37===(c=Z.charCodeAt(G++))){if(c=Z.charAt(G++),!(m=g[c in sy?Z.charAt(G++):c])||(d=m(l,b,d))<0)return-1}else if(c!=b.charCodeAt(d++))return-1}return d}var c=l.dateTime,m=l.date,G=l.time,W=l.periods,i=l.days,X=l.shortDays,n=l.months,u=l.shortMonths,a=jG(W),V=wG(W),h=jG(i),t=wG(i),y=jG(X),Y=wG(X),e=jG(n),p=wG(n),o=jG(u),s=wG(u),I={a:function(l){return X[l.getDay()]},A:function(l){return i[l.getDay()]},b:function(l){return u[l.getMonth()]},B:function(l){return n[l.getMonth()]},c:null,d:iW,e:iW,f:VW,H:XW,I:nW,j:uW,L:aW,m:hW,M:tW,p:function(l){return W[+(l.getHours()>=12)]},Q:UW,s:fW,S:yW,u:YW,U:eW,V:pW,w:oW,W:sW,x:null,X:null,y:IW,Y:RW,Z:gW,"%":wW},R={a:function(l){return X[l.getUTCDay()]},A:function(l){return i[l.getUTCDay()]},b:function(l){return u[l.getUTCMonth()]},B:function(l){return n[l.getUTCMonth()]},c:null,d:KW,e:KW,f:LW,H:NW,I:HW,j:xW,L:JW,m:FW,M:CW,p:function(l){return W[+(l.getUTCHours()>=12)]},Q:UW,s:fW,S:SW,u:BW,U:kW,V:vW,w:zW,W:MW,x:null,X:null,y:rW,Y:TW,Z:jW,"%":wW},g={a:function(l,Z,b){var d=y.exec(Z.slice(b));return d?(l.w=Y[d[0].toLowerCase()],b+d[0].length):-1},A:function(l,Z,b){var d=h.exec(Z.slice(b));return d?(l.w=t[d[0].toLowerCase()],b+d[0].length):-1},b:function(l,Z,b){var d=o.exec(Z.slice(b));return d?(l.m=s[d[0].toLowerCase()],b+d[0].length):-1},B:function(l,Z,b){var d=e.exec(Z.slice(b));return d?(l.m=p[d[0].toLowerCase()],b+d[0].length):-1},c:function(l,Z,b){return d(l,c,Z,b)},d:_G,e:_G,f:cW,H:lW,I:lW,j:$G,L:dW,m:qG,M:ZW,p:function(l,Z,b){var d=a.exec(Z.slice(b));return d?(l.p=V[d[0].toLowerCase()],b+d[0].length):-1},Q:GW,s:WW,S:bW,u:fG,U:QG,V:PG,w:UG,W:DG,x:function(l,Z,b){return d(l,m,Z,b)},X:function(l,Z,b){return d(l,G,Z,b)},y:EG,Y:AG,Z:OG,"%":mW};return I.x=Z(m,I),I.X=Z(G,I),I.c=Z(c,I),R.x=Z(m,R),R.X=Z(G,R),R.c=Z(c,R),{format:function(l){var b=Z(l+="",I);return b.toString=function(){return l},b},parse:function(l){var Z=b(l+="",kG);return Z.toString=function(){return l},Z},utcFormat:function(l){var b=Z(l+="",R);return b.toString=function(){return l},b},utcParse:function(l){var Z=b(l,vG);return Z.toString=function(){return l},Z}}}function rG(l,Z,b){var d=l<0?"-":"",c=(d?-l:l)+"",m=c.length;return d+(m<b?new Array(b-m+1).join(Z)+c:c)}function TG(l){return l.replace(gy,"\\$&")}function jG(l){return new RegExp("^(?:"+l.map(TG).join("|")+")","i")}function wG(l){for(var Z={},b=-1,d=l.length;++b<d;)Z[l[b].toLowerCase()]=b;return Z}function UG(l,Z,b){var d=Iy.exec(Z.slice(b,b+1));return d?(l.w=+d[0],b+d[0].length):-1}function fG(l,Z,b){var d=Iy.exec(Z.slice(b,b+1));return d?(l.u=+d[0],b+d[0].length):-1}function QG(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.U=+d[0],b+d[0].length):-1}function PG(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.V=+d[0],b+d[0].length):-1}function DG(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.W=+d[0],b+d[0].length):-1}function AG(l,Z,b){var d=Iy.exec(Z.slice(b,b+4));return d?(l.y=+d[0],b+d[0].length):-1}function EG(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.y=+d[0]+(+d[0]>68?1900:2e3),b+d[0].length):-1}function OG(l,Z,b){var d=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(Z.slice(b,b+6));return d?(l.Z=d[1]?0:-(d[2]+(d[3]||"00")),b+d[0].length):-1}function qG(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.m=d[0]-1,b+d[0].length):-1}function _G(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.d=+d[0],b+d[0].length):-1}function $G(l,Z,b){var d=Iy.exec(Z.slice(b,b+3));return d?(l.m=0,l.d=+d[0],b+d[0].length):-1}function lW(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.H=+d[0],b+d[0].length):-1}function ZW(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.M=+d[0],b+d[0].length):-1}function bW(l,Z,b){var d=Iy.exec(Z.slice(b,b+2));return d?(l.S=+d[0],b+d[0].length):-1}function dW(l,Z,b){var d=Iy.exec(Z.slice(b,b+3));return d?(l.L=+d[0],b+d[0].length):-1}function cW(l,Z,b){var d=Iy.exec(Z.slice(b,b+6));return d?(l.L=Math.floor(d[0]/1e3),b+d[0].length):-1}function mW(l,Z,b){var d=Ry.exec(Z.slice(b,b+1));return d?b+d[0].length:-1}function GW(l,Z,b){var d=Iy.exec(Z.slice(b));return d?(l.Q=+d[0],b+d[0].length):-1}function WW(l,Z,b){var d=Iy.exec(Z.slice(b));return d?(l.Q=1e3*+d[0],b+d[0].length):-1}function iW(l,Z){return rG(l.getDate(),Z,2)}function XW(l,Z){return rG(l.getHours(),Z,2)}function nW(l,Z){return rG(l.getHours()%12||12,Z,2)}function uW(l,Z){return rG(1+Lt.count(At(l),l),Z,3)}function aW(l,Z){return rG(l.getMilliseconds(),Z,3)}function VW(l,Z){return aW(l,Z)+"000"}function hW(l,Z){return rG(l.getMonth()+1,Z,2)}function tW(l,Z){return rG(l.getMinutes(),Z,2)}function yW(l,Z){return rG(l.getSeconds(),Z,2)}function YW(l){var Z=l.getDay();return 0===Z?7:Z}function eW(l,Z){return rG(Ct.count(At(l),l),Z,2)}function pW(l,Z){var b=l.getDay();return l=b>=4||0===b?vt(l):vt.ceil(l),rG(vt.count(At(l),l)+(4===At(l).getDay()),Z,2)}function oW(l){return l.getDay()}function sW(l,Z){return rG(St.count(At(l),l),Z,2)}function IW(l,Z){return rG(l.getFullYear()%100,Z,2)}function RW(l,Z){return rG(l.getFullYear()%1e4,Z,4)}function gW(l){var Z=l.getTimezoneOffset();return(Z>0?"-":(Z*=-1,"+"))+rG(Z/60|0,"0",2)+rG(Z%60,"0",2)}function KW(l,Z){return rG(l.getUTCDate(),Z,2)}function NW(l,Z){return rG(l.getUTCHours(),Z,2)}function HW(l,Z){return rG(l.getUTCHours()%12||12,Z,2)}function xW(l,Z){return rG(1+ly.count(ey(l),l),Z,3)}function JW(l,Z){return rG(l.getUTCMilliseconds(),Z,3)}function LW(l,Z){return JW(l,Z)+"000"}function FW(l,Z){return rG(l.getUTCMonth()+1,Z,2)}function CW(l,Z){return rG(l.getUTCMinutes(),Z,2)}function SW(l,Z){return rG(l.getUTCSeconds(),Z,2)}function BW(l){var Z=l.getUTCDay();return 0===Z?7:Z}function kW(l,Z){return rG(by.count(ey(l),l),Z,2)}function vW(l,Z){var b=l.getUTCDay();return l=b>=4||0===b?Gy(l):Gy.ceil(l),rG(Gy.count(ey(l),l)+(4===ey(l).getUTCDay()),Z,2)}function zW(l){return l.getUTCDay()}function MW(l,Z){return rG(dy.count(ey(l),l),Z,2)}function rW(l,Z){return rG(l.getUTCFullYear()%100,Z,2)}function TW(l,Z){return rG(l.getUTCFullYear()%1e4,Z,4)}function jW(){return"+0000"}function wW(){return"%"}function UW(l){return+l}function fW(l){return Math.floor(+l/1e3)}function QW(Z){return py=MG(Z),l.timeFormat=py.format,l.timeParse=py.parse,l.utcFormat=py.utcFormat,l.utcParse=py.utcParse,py}function PW(l){return new Date(l)}function DW(l){return l instanceof Date?+l:+new Date(+l)}function AW(l,Z,d,c,m,G,W,i,X){function n(b){return(W(b)<b?y:G(b)<b?Y:m(b)<b?e:c(b)<b?p:Z(b)<b?d(b)<b?o:s:l(b)<b?I:R)(b)}function u(Z,d,c,m){if(null==Z&&(Z=10),"number"==typeof Z){var G=Math.abs(c-d)/Z,W=b((function(l){return l[2]})).right(g,G);W===g.length?(m=V(d/By,c/By,Z),Z=l):W?(m=(W=g[G/g[W-1][2]<g[W][2]/G?W-1:W])[1],Z=W[0]):(m=Math.max(V(d,c,Z),1),Z=i)}return null==m?Z:Z.every(m)}var a=sG(YG,iZ),h=a.invert,t=a.domain,y=X(".%L"),Y=X(":%S"),e=X("%I:%M"),p=X("%I %p"),o=X("%a %d"),s=X("%b %d"),I=X("%B"),R=X("%Y"),g=[[W,1,xy],[W,5,5*xy],[W,15,15*xy],[W,30,30*xy],[G,1,Jy],[G,5,5*Jy],[G,15,15*Jy],[G,30,30*Jy],[m,1,Ly],[m,3,3*Ly],[m,6,6*Ly],[m,12,12*Ly],[c,1,Fy],[c,2,2*Fy],[d,1,Cy],[Z,1,Sy],[Z,3,3*Sy],[l,1,By]];return a.invert=function(l){return new Date(h(l))},a.domain=function(l){return arguments.length?t(ht.call(l,DW)):t().map(PW)},a.ticks=function(l,Z){var b,d=t(),c=d[0],m=d[d.length-1],G=m<c;return G&&(b=c,c=m,m=b),b=(b=u(l,c,m,Z))?b.range(c,m+1):[],G?b.reverse():b},a.tickFormat=function(l,Z){return null==Z?n:X(Z)},a.nice=function(l,Z){var b=t();return(l=u(l,b[0],b[b.length-1],Z))?t(RG(b,l)):a},a.copy=function(){return oG(a,AW(l,Z,d,c,m,G,W,i,X))},a}function EW(l){for(var Z=l.length/6|0,b=new Array(Z),d=0;d<Z;)b[d]="#"+l.slice(6*d,6*++d);return b}function OW(l){return Pn(l[l.length-1])}function qW(l){var Z=l.length;return function(b){return l[Math.max(0,Math.min(Z-1,Math.floor(b*Z)))]}}function _W(l){return function(){return l}}function $W(l){return l>=1?ne:l<=-1?-ne:Math.asin(l)}function li(l){return l.innerRadius}function Zi(l){return l.outerRadius}function bi(l){return l.startAngle}function di(l){return l.endAngle}function ci(l){return l&&l.padAngle}function mi(l,Z,b,d,c,m,G){var W=l-b,i=Z-d,X=(G?m:-m)/We(W*W+i*i),n=X*i,u=-X*W,a=l+n,V=Z+u,h=b+n,t=d+u,y=(a+h)/2,Y=(V+t)/2,e=h-a,p=t-V,o=e*e+p*p,s=c-m,I=a*t-h*V,R=(p<0?-1:1)*We(ce(0,s*s*o-I*I)),g=(I*p-e*R)/o,K=(-I*e-p*R)/o,N=(I*p+e*R)/o,H=(-I*e+p*R)/o,x=g-y,J=K-Y,L=N-y,F=H-Y;return x*x+J*J>L*L+F*F&&(g=N,K=H),{cx:g,cy:K,x01:-n,y01:-u,x11:g*(c/s-1),y11:K*(c/s-1)}}function Gi(l){this._context=l}function Wi(l){return new Gi(l)}function ii(l){return l[0]}function Xi(l){return l[1]}function ni(){function l(l){var W,i,X,n=l.length,u=!1;for(null==c&&(G=m(X=db())),W=0;W<=n;++W)!(W<n&&d(i=l[W],W,l))===u&&((u=!u)?G.lineStart():G.lineEnd()),u&&G.point(+Z(i,W,l),+b(i,W,l));if(X)return G=null,X+""||null}var Z=ii,b=Xi,d=_W(!0),c=null,m=Wi,G=null;return l.x=function(b){return arguments.length?(Z="function"==typeof b?b:_W(+b),l):Z},l.y=function(Z){return arguments.length?(b="function"==typeof Z?Z:_W(+Z),l):b},l.defined=function(Z){return arguments.length?(d="function"==typeof Z?Z:_W(!!Z),l):d},l.curve=function(Z){return arguments.length?(m=Z,null!=c&&(G=m(c)),l):m},l.context=function(Z){return arguments.length?(null==Z?c=G=null:G=m(c=Z),l):c},l}function ui(){function l(l){var Z,n,u,a,V,h=l.length,t=!1,y=new Array(h),Y=new Array(h);for(null==W&&(X=i(V=db())),Z=0;Z<=h;++Z){if(!(Z<h&&G(a=l[Z],Z,l))===t)if(t=!t)n=Z,X.areaStart(),X.lineStart();else{for(X.lineEnd(),X.lineStart(),u=Z-1;u>=n;--u)X.point(y[u],Y[u]);X.lineEnd(),X.areaEnd()}t&&(y[Z]=+b(a,Z,l),Y[Z]=+c(a,Z,l),X.point(d?+d(a,Z,l):y[Z],m?+m(a,Z,l):Y[Z]))}if(V)return X=null,V+""||null}function Z(){return ni().defined(G).curve(i).context(W)}var b=ii,d=null,c=_W(0),m=Xi,G=_W(!0),W=null,i=Wi,X=null;return l.x=function(Z){return arguments.length?(b="function"==typeof Z?Z:_W(+Z),d=null,l):b},l.x0=function(Z){return arguments.length?(b="function"==typeof Z?Z:_W(+Z),l):b},l.x1=function(Z){return arguments.length?(d=null==Z?null:"function"==typeof Z?Z:_W(+Z),l):d},l.y=function(Z){return arguments.length?(c="function"==typeof Z?Z:_W(+Z),m=null,l):c},l.y0=function(Z){return arguments.length?(c="function"==typeof Z?Z:_W(+Z),l):c},l.y1=function(Z){return arguments.length?(m=null==Z?null:"function"==typeof Z?Z:_W(+Z),l):m},l.lineX0=l.lineY0=function(){return Z().x(b).y(c)},l.lineY1=function(){return Z().x(b).y(m)},l.lineX1=function(){return Z().x(d).y(c)},l.defined=function(Z){return arguments.length?(G="function"==typeof Z?Z:_W(!!Z),l):G},l.curve=function(Z){return arguments.length?(i=Z,null!=W&&(X=i(W)),l):i},l.context=function(Z){return arguments.length?(null==Z?W=X=null:X=i(W=Z),l):W},l}function ai(l,Z){return Z<l?-1:Z>l?1:Z>=l?0:NaN}function Vi(l){return l}function hi(l){this._curve=l}function ti(l){function Z(Z){return new hi(l(Z))}return Z._curve=l,Z}function yi(l){var Z=l.curve;return l.angle=l.x,delete l.x,l.radius=l.y,delete l.y,l.curve=function(l){return arguments.length?Z(ti(l)):Z()._curve},l}function Yi(){return yi(ni().curve(ae))}function ei(){var l=ui().curve(ae),Z=l.curve,b=l.lineX0,d=l.lineX1,c=l.lineY0,m=l.lineY1;return l.angle=l.x,delete l.x,l.startAngle=l.x0,delete l.x0,l.endAngle=l.x1,delete l.x1,l.radius=l.y,delete l.y,l.innerRadius=l.y0,delete l.y0,l.outerRadius=l.y1,delete l.y1,l.lineStartAngle=function(){return yi(b())},delete l.lineX0,l.lineEndAngle=function(){return yi(d())},delete l.lineX1,l.lineInnerRadius=function(){return yi(c())},delete l.lineY0,l.lineOuterRadius=function(){return yi(m())},delete l.lineY1,l.curve=function(l){return arguments.length?Z(ti(l)):Z()._curve},l}function pi(l,Z){return[(Z=+Z)*Math.cos(l-=Math.PI/2),Z*Math.sin(l)]}function oi(l){return l.source}function si(l){return l.target}function Ii(l){function Z(){var Z,W=Ve.call(arguments),i=b.apply(this,W),X=d.apply(this,W);if(G||(G=Z=db()),l(G,+c.apply(this,(W[0]=i,W)),+m.apply(this,W),+c.apply(this,(W[0]=X,W)),+m.apply(this,W)),Z)return G=null,Z+""||null}var b=oi,d=si,c=ii,m=Xi,G=null;return Z.source=function(l){return arguments.length?(b=l,Z):b},Z.target=function(l){return arguments.length?(d=l,Z):d},Z.x=function(l){return arguments.length?(c="function"==typeof l?l:_W(+l),Z):c},Z.y=function(l){return arguments.length?(m="function"==typeof l?l:_W(+l),Z):m},Z.context=function(l){return arguments.length?(G=null==l?null:l,Z):G},Z}function Ri(l,Z,b,d,c){l.moveTo(Z,b),l.bezierCurveTo(Z=(Z+d)/2,b,Z,c,d,c)}function gi(l,Z,b,d,c){l.moveTo(Z,b),l.bezierCurveTo(Z,b=(b+c)/2,d,b,d,c)}function Ki(l,Z,b,d,c){var m=pi(Z,b),G=pi(Z,b=(b+c)/2),W=pi(d,b),i=pi(d,c);l.moveTo(m[0],m[1]),l.bezierCurveTo(G[0],G[1],W[0],W[1],i[0],i[1])}function Ni(){}function Hi(l,Z,b){l._context.bezierCurveTo((2*l._x0+l._x1)/3,(2*l._y0+l._y1)/3,(l._x0+2*l._x1)/3,(l._y0+2*l._y1)/3,(l._x0+4*l._x1+Z)/6,(l._y0+4*l._y1+b)/6)}function xi(l){this._context=l}function Ji(l){this._context=l}function Li(l){this._context=l}function Fi(l,Z){this._basis=new xi(l),this._beta=Z}function Ci(l,Z,b){l._context.bezierCurveTo(l._x1+l._k*(l._x2-l._x0),l._y1+l._k*(l._y2-l._y0),l._x2+l._k*(l._x1-Z),l._y2+l._k*(l._y1-b),l._x2,l._y2)}function Si(l,Z){this._context=l,this._k=(1-Z)/6}function Bi(l,Z){this._context=l,this._k=(1-Z)/6}function ki(l,Z){this._context=l,this._k=(1-Z)/6}function vi(l,Z,b){var d=l._x1,c=l._y1,m=l._x2,G=l._y2;if(l._l01_a>ie){var W=2*l._l01_2a+3*l._l01_a*l._l12_a+l._l12_2a,i=3*l._l01_a*(l._l01_a+l._l12_a);d=(d*W-l._x0*l._l12_2a+l._x2*l._l01_2a)/i,c=(c*W-l._y0*l._l12_2a+l._y2*l._l01_2a)/i}if(l._l23_a>ie){var X=2*l._l23_2a+3*l._l23_a*l._l12_a+l._l12_2a,n=3*l._l23_a*(l._l23_a+l._l12_a);m=(m*X+l._x1*l._l23_2a-Z*l._l12_2a)/n,G=(G*X+l._y1*l._l23_2a-b*l._l12_2a)/n}l._context.bezierCurveTo(d,c,m,G,l._x2,l._y2)}function zi(l,Z){this._context=l,this._alpha=Z}function Mi(l,Z){this._context=l,this._alpha=Z}function ri(l,Z){this._context=l,this._alpha=Z}function Ti(l){this._context=l}function ji(l){return l<0?-1:1}function wi(l,Z,b){var d=l._x1-l._x0,c=Z-l._x1,m=(l._y1-l._y0)/(d||c<0&&-0),G=(b-l._y1)/(c||d<0&&-0),W=(m*c+G*d)/(d+c);return(ji(m)+ji(G))*Math.min(Math.abs(m),Math.abs(G),.5*Math.abs(W))||0}function Ui(l,Z){var b=l._x1-l._x0;return b?(3*(l._y1-l._y0)/b-Z)/2:Z}function fi(l,Z,b){var d=l._x0,c=l._y0,m=l._x1,G=l._y1,W=(m-d)/3;l._context.bezierCurveTo(d+W,c+W*Z,m-W,G-W*b,m,G)}function Qi(l){this._context=l}function Pi(l){this._context=new Di(l)}function Di(l){this._context=l}function Ai(l){this._context=l}function Ei(l){var Z,b,d=l.length-1,c=new Array(d),m=new Array(d),G=new Array(d);for(c[0]=0,m[0]=2,G[0]=l[0]+2*l[1],Z=1;Z<d-1;++Z)c[Z]=1,m[Z]=4,G[Z]=4*l[Z]+2*l[Z+1];for(c[d-1]=2,m[d-1]=7,G[d-1]=8*l[d-1]+l[d],Z=1;Z<d;++Z)b=c[Z]/m[Z-1],m[Z]-=b,G[Z]-=b*G[Z-1];for(c[d-1]=G[d-1]/m[d-1],Z=d-2;Z>=0;--Z)c[Z]=(G[Z]-c[Z+1])/m[Z];for(m[d-1]=(l[d]+c[d-1])/2,Z=0;Z<d-1;++Z)m[Z]=2*l[Z+1]-c[Z+1];return[c,m]}function Oi(l,Z){this._context=l,this._t=Z}function qi(l,Z){if((c=l.length)>1)for(var b,d,c,m=1,G=l[Z[0]],W=G.length;m<c;++m)for(d=G,G=l[Z[m]],b=0;b<W;++b)G[b][1]+=G[b][0]=isNaN(d[b][1])?d[b][0]:d[b][1]}function _i(l){for(var Z=l.length,b=new Array(Z);--Z>=0;)b[Z]=Z;return b}function $i(l,Z){return l[Z]}function lX(l){var Z=l.map(ZX);return _i(l).sort((function(l,b){return Z[l]-Z[b]}))}function ZX(l){for(var Z,b=0,d=-1,c=l.length;++d<c;)(Z=+l[d][1])&&(b+=Z);return b}function bX(l){return function(){return l}}function dX(l){return l[0]}function cX(l){return l[1]}function mX(){this._=null}function GX(l){l.U=l.C=l.L=l.R=l.P=l.N=null}function WX(l,Z){var b=Z,d=Z.R,c=b.U;c?c.L===b?c.L=d:c.R=d:l._=d,d.U=c,b.U=d,b.R=d.L,b.R&&(b.R.U=b),d.L=b}function iX(l,Z){var b=Z,d=Z.L,c=b.U;c?c.L===b?c.L=d:c.R=d:l._=d,d.U=c,b.U=d,b.L=d.R,b.L&&(b.L.U=b),d.R=b}function XX(l){for(;l.L;)l=l.L;return l}function nX(l,Z,b,d){var c=[null,null],m=we.push(c)-1;return c.left=l,c.right=Z,b&&aX(c,l,Z,b),d&&aX(c,Z,l,d),Te[l.index].halfedges.push(m),Te[Z.index].halfedges.push(m),c}function uX(l,Z,b){var d=[Z,b];return d.left=l,d}function aX(l,Z,b,d){l[0]||l[1]?l.left===b?l[1]=d:l[0]=d:(l[0]=d,l.left=Z,l.right=b)}function VX(l,Z,b,d,c){var m,G=l[0],W=l[1],i=G[0],X=G[1],n=0,u=1,a=W[0]-i,V=W[1]-X;if(m=Z-i,a||!(m>0)){if(m/=a,a<0){if(m<n)return;m<u&&(u=m)}else if(a>0){if(m>u)return;m>n&&(n=m)}if(m=d-i,a||!(m<0)){if(m/=a,a<0){if(m>u)return;m>n&&(n=m)}else if(a>0){if(m<n)return;m<u&&(u=m)}if(m=b-X,V||!(m>0)){if(m/=V,V<0){if(m<n)return;m<u&&(u=m)}else if(V>0){if(m>u)return;m>n&&(n=m)}if(m=c-X,V||!(m<0)){if(m/=V,V<0){if(m>u)return;m>n&&(n=m)}else if(V>0){if(m<n)return;m<u&&(u=m)}return!(n>0||u<1)||(n>0&&(l[0]=[i+n*a,X+n*V]),u<1&&(l[1]=[i+u*a,X+u*V]),!0)}}}}}function hX(l,Z,b,d,c){var m=l[1];if(m)return!0;var G,W,i=l[0],X=l.left,n=l.right,u=X[0],a=X[1],V=n[0],h=n[1],t=(u+V)/2,y=(a+h)/2;if(h===a){if(t<Z||t>=d)return;if(u>V){if(i){if(i[1]>=c)return}else i=[t,b];m=[t,c]}else{if(i){if(i[1]<b)return}else i=[t,c];m=[t,b]}}else if(W=y-(G=(u-V)/(h-a))*t,G<-1||G>1)if(u>V){if(i){if(i[1]>=c)return}else i=[(b-W)/G,b];m=[(c-W)/G,c]}else{if(i){if(i[1]<b)return}else i=[(c-W)/G,c];m=[(b-W)/G,b]}else if(a<h){if(i){if(i[0]>=d)return}else i=[Z,G*Z+W];m=[d,G*d+W]}else{if(i){if(i[0]<Z)return}else i=[d,G*d+W];m=[Z,G*Z+W]}return l[0]=i,l[1]=m,!0}function tX(l,Z){var b=l.site,d=Z.left,c=Z.right;return b===c&&(c=d,d=b),c?Math.atan2(c[1]-d[1],c[0]-d[0]):(b===d?(d=Z[1],c=Z[0]):(d=Z[0],c=Z[1]),Math.atan2(d[0]-c[0],c[1]-d[1]))}function yX(l,Z){return Z[+(Z.left!==l.site)]}function YX(l,Z){return Z[+(Z.left===l.site)]}function eX(l){var Z=l.P,b=l.N;if(Z&&b){var d=Z.site,c=l.site,m=b.site;if(d!==m){var G=c[0],W=c[1],i=d[0]-G,X=d[1]-W,n=m[0]-G,u=m[1]-W,a=2*(i*u-X*n);if(!(a>=-Pe)){var V=i*i+X*X,h=n*n+u*u,t=(u*V-X*h)/a,y=(i*h-n*V)/a,Y=Ue.pop()||new function(){GX(this),this.x=this.y=this.arc=this.site=this.cy=null};Y.arc=l,Y.site=c,Y.x=t+G,Y.y=(Y.cy=y+W)+Math.sqrt(t*t+y*y),l.circle=Y;for(var e=null,p=je._;p;)if(Y.y<p.y||Y.y===p.y&&Y.x<=p.x){if(!p.L){e=p.P;break}p=p.L}else{if(!p.R){e=p;break}p=p.R}je.insert(e,Y),e||(Me=Y)}}}}function pX(l){var Z=l.circle;Z&&(Z.P||(Me=Z.N),je.remove(Z),Ue.push(Z),GX(Z),l.circle=null)}function oX(l){var Z=fe.pop()||new function(){GX(this),this.edge=this.site=this.circle=null};return Z.site=l,Z}function sX(l){pX(l),re.remove(l),fe.push(l),GX(l)}function IX(l){var Z=l.circle,b=Z.x,d=Z.cy,c=[b,d],m=l.P,G=l.N,W=[l];sX(l);for(var i=m;i.circle&&Math.abs(b-i.circle.x)<Qe&&Math.abs(d-i.circle.cy)<Qe;)m=i.P,W.unshift(i),sX(i),i=m;W.unshift(i),pX(i);for(var X=G;X.circle&&Math.abs(b-X.circle.x)<Qe&&Math.abs(d-X.circle.cy)<Qe;)G=X.N,W.push(X),sX(X),X=G;W.push(X),pX(X);var n,u=W.length;for(n=1;n<u;++n)X=W[n],i=W[n-1],aX(X.edge,i.site,X.site,c);i=W[0],(X=W[u-1]).edge=nX(i.site,X.site,null,c),eX(i),eX(X)}function RX(l){for(var Z,b,d,c,m=l[0],G=l[1],W=re._;W;)if((d=gX(W,G)-m)>Qe)W=W.L;else{if(!((c=m-function(l,Z){var b=l.N;if(b)return gX(b,Z);var d=l.site;return d[1]===Z?d[0]:1/0}(W,G))>Qe)){d>-Qe?(Z=W.P,b=W):c>-Qe?(Z=W,b=W.N):Z=b=W;break}if(!W.R){Z=W;break}W=W.R}!function(l){Te[l.index]={site:l,halfedges:[]}}(l);var i=oX(l);if(re.insert(Z,i),Z||b){if(Z===b)return pX(Z),b=oX(Z.site),re.insert(i,b),i.edge=b.edge=nX(Z.site,i.site),eX(Z),void eX(b);if(b){pX(Z),pX(b);var X=Z.site,n=X[0],u=X[1],a=l[0]-n,V=l[1]-u,h=b.site,t=h[0]-n,y=h[1]-u,Y=2*(a*y-V*t),e=a*a+V*V,p=t*t+y*y,o=[(y*e-V*p)/Y+n,(a*p-t*e)/Y+u];aX(b.edge,X,h,o),i.edge=nX(X,l,null,o),b.edge=nX(l,h,null,o),eX(Z),eX(b)}else i.edge=nX(Z.site,i.site)}}function gX(l,Z){var b=l.site,d=b[0],c=b[1],m=c-Z;if(!m)return d;var G=l.P;if(!G)return-1/0;var W=(b=G.site)[0],i=b[1],X=i-Z;if(!X)return W;var n=W-d,u=1/m-1/X,a=n/X;return u?(-a+Math.sqrt(a*a-2*u*(n*n/(-2*X)-i+X/2+c-m/2)))/u+d:(d+W)/2}function KX(l,Z,b){return(l[0]-b[0])*(Z[1]-l[1])-(l[0]-Z[0])*(b[1]-l[1])}function NX(l,Z){return Z[1]-l[1]||Z[0]-l[0]}function HX(l,Z){var b,d,c,m=l.sort(NX).pop();for(we=[],Te=new Array(l.length),re=new mX,je=new mX;;)if(c=Me,m&&(!c||m[1]<c.y||m[1]===c.y&&m[0]<c.x))m[0]===b&&m[1]===d||(RX(m),b=m[0],d=m[1]),m=l.pop();else{if(!c)break;IX(c.arc)}if(function(){for(var l,Z,b,d,c=0,m=Te.length;c<m;++c)if((l=Te[c])&&(d=(Z=l.halfedges).length)){var G=new Array(d),W=new Array(d);for(b=0;b<d;++b)G[b]=b,W[b]=tX(l,we[Z[b]]);for(G.sort((function(l,Z){return W[Z]-W[l]})),b=0;b<d;++b)W[b]=Z[G[b]];for(b=0;b<d;++b)Z[b]=W[b]}}(),Z){var G=+Z[0][0],W=+Z[0][1],i=+Z[1][0],X=+Z[1][1];(function(l,Z,b,d){for(var c,m=we.length;m--;)hX(c=we[m],l,Z,b,d)&&VX(c,l,Z,b,d)&&(Math.abs(c[0][0]-c[1][0])>Qe||Math.abs(c[0][1]-c[1][1])>Qe)||delete we[m]})(G,W,i,X),function(l,Z,b,d){var c,m,G,W,i,X,n,u,a,V,h,t,y=Te.length,Y=!0;for(c=0;c<y;++c)if(m=Te[c]){for(G=m.site,W=(i=m.halfedges).length;W--;)we[i[W]]||i.splice(W,1);for(W=0,X=i.length;W<X;)h=(V=YX(m,we[i[W]]))[0],t=V[1],u=(n=yX(m,we[i[++W%X]]))[0],a=n[1],(Math.abs(h-u)>Qe||Math.abs(t-a)>Qe)&&(i.splice(W,0,we.push(uX(G,V,Math.abs(h-l)<Qe&&d-t>Qe?[l,Math.abs(u-l)<Qe?a:d]:Math.abs(t-d)<Qe&&b-h>Qe?[Math.abs(a-d)<Qe?u:b,d]:Math.abs(h-b)<Qe&&t-Z>Qe?[b,Math.abs(u-b)<Qe?a:Z]:Math.abs(t-Z)<Qe&&h-l>Qe?[Math.abs(a-Z)<Qe?u:l,Z]:null))-1),++X);X&&(Y=!1)}if(Y){var e,p,o,s=1/0;for(c=0,Y=null;c<y;++c)(m=Te[c])&&(o=(e=(G=m.site)[0]-l)*e+(p=G[1]-Z)*p)<s&&(s=o,Y=m);if(Y){var I=[l,Z],R=[l,d],g=[b,d],K=[b,Z];Y.halfedges.push(we.push(uX(G=Y.site,I,R))-1,we.push(uX(G,R,g))-1,we.push(uX(G,g,K))-1,we.push(uX(G,K,I))-1)}}for(c=0;c<y;++c)(m=Te[c])&&(m.halfedges.length||delete Te[c])}(G,W,i,X)}this.edges=we,this.cells=Te,re=je=we=Te=null}function xX(l){return function(){return l}}function JX(l,Z,b){this.k=l,this.x=Z,this.y=b}function LX(l){return l.__zoom||De}function FX(){l.event.stopImmediatePropagation()}function CX(){l.event.preventDefault(),l.event.stopImmediatePropagation()}function SX(){return!l.event.button}function BX(){var l,Z,b=this;return b instanceof SVGElement?(l=(b=b.ownerSVGElement||b).width.baseVal.value,Z=b.height.baseVal.value):(l=b.clientWidth,Z=b.clientHeight),[[0,0],[l,Z]]}function kX(){return this.__zoom||De}function vX(){return-l.event.deltaY*(l.event.deltaMode?120:1)/500}function zX(){return"ontouchstart"in this}function MX(l,Z,b){var d=l.invertX(Z[0][0])-b[0][0],c=l.invertX(Z[1][0])-b[1][0],m=l.invertY(Z[0][1])-b[0][1],G=l.invertY(Z[1][1])-b[1][1];return l.translate(c>d?(d+c)/2:Math.min(0,d)||Math.max(0,c),G>m?(m+G)/2:Math.min(0,m)||Math.max(0,G))}var rX=b(Z),TX=rX.right,jX=rX.left,wX=Array.prototype,UX=wX.slice,fX=wX.map,QX=Math.sqrt(50),PX=Math.sqrt(10),DX=Math.sqrt(2),AX=Array.prototype.slice,EX=1,OX=2,qX=3,_X=4,$X=1e-6,ln={value:function(){}};H.prototype=N.prototype={constructor:H,on:function(l,Z){var b,d=this._,c=function(l,Z){return l.trim().split(/^|\s+/).map((function(l){var b="",d=l.indexOf(".");if(d>=0&&(b=l.slice(d+1),l=l.slice(0,d)),l&&!Z.hasOwnProperty(l))throw new Error("unknown type: "+l);return{type:l,name:b}}))}(l+"",d),m=-1,G=c.length;if(!(arguments.length<2)){if(null!=Z&&"function"!=typeof Z)throw new Error("invalid callback: "+Z);for(;++m<G;)if(b=(l=c[m]).type)d[b]=x(d[b],l.name,Z);else if(null==Z)for(b in d)d[b]=x(d[b],l.name,null);return this}for(;++m<G;)if((b=(l=c[m]).type)&&(b=function(l,Z){for(var b,d=0,c=l.length;d<c;++d)if((b=l[d]).name===Z)return b.value}(d[b],l.name)))return b},copy:function(){var l={},Z=this._;for(var b in Z)l[b]=Z[b].slice();return new H(l)},call:function(l,Z){if((b=arguments.length-2)>0)for(var b,d,c=new Array(b),m=0;m<b;++m)c[m]=arguments[m+2];if(!this._.hasOwnProperty(l))throw new Error("unknown type: "+l);for(m=0,b=(d=this._[l]).length;m<b;++m)d[m].value.apply(Z,c)},apply:function(l,Z,b){if(!this._.hasOwnProperty(l))throw new Error("unknown type: "+l);for(var d=this._[l],c=0,m=d.length;c<m;++c)d[c].value.apply(Z,b)}};var Zn="http://www.w3.org/1999/xhtml",bn={svg:"http://www.w3.org/2000/svg",xhtml:Zn,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},dn=function(l){return function(){return this.matches(l)}};if("undefined"!=typeof document){var cn=document.documentElement;if(!cn.matches){var mn=cn.webkitMatchesSelector||cn.msMatchesSelector||cn.mozMatchesSelector||cn.oMatchesSelector;dn=function(l){return function(){return mn.call(this,l)}}}}var Gn=dn;v.prototype={constructor:v,appendChild:function(l){return this._parent.insertBefore(l,this._next)},insertBefore:function(l,Z){return this._parent.insertBefore(l,Z)},querySelector:function(l){return this._parent.querySelector(l)},querySelectorAll:function(l){return this._parent.querySelectorAll(l)}};var Wn="$";f.prototype={add:function(l){this._names.indexOf(l)<0&&(this._names.push(l),this._node.setAttribute("class",this._names.join(" ")))},remove:function(l){var Z=this._names.indexOf(l);Z>=0&&(this._names.splice(Z,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(l){return this._names.indexOf(l)>=0}};var Xn={};l.event=null,"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Xn={mouseenter:"mouseover",mouseleave:"mouseout"}));var nn=[null];Wl.prototype=il.prototype={constructor:Wl,select:function(l){"function"!=typeof l&&(l=C(l));for(var Z=this._groups,b=Z.length,d=new Array(b),c=0;c<b;++c)for(var m,G,W=Z[c],i=W.length,X=d[c]=new Array(i),n=0;n<i;++n)(m=W[n])&&(G=l.call(m,m.__data__,n,W))&&("__data__"in m&&(G.__data__=m.__data__),X[n]=G);return new Wl(d,this._parents)},selectAll:function(l){"function"!=typeof l&&(l=B(l));for(var Z=this._groups,b=Z.length,d=[],c=[],m=0;m<b;++m)for(var G,W=Z[m],i=W.length,X=0;X<i;++X)(G=W[X])&&(d.push(l.call(G,G.__data__,X,W)),c.push(G));return new Wl(d,c)},filter:function(l){"function"!=typeof l&&(l=Gn(l));for(var Z=this._groups,b=Z.length,d=new Array(b),c=0;c<b;++c)for(var m,G=Z[c],W=G.length,i=d[c]=[],X=0;X<W;++X)(m=G[X])&&l.call(m,m.__data__,X,G)&&i.push(m);return new Wl(d,this._parents)},data:function(l,Z){if(!l)return V=new Array(this.size()),X=-1,this.each((function(l){V[++X]=l})),V;var b=Z?M:z,d=this._parents,c=this._groups;"function"!=typeof l&&(l=function(l){return function(){return l}}(l));for(var m=c.length,G=new Array(m),W=new Array(m),i=new Array(m),X=0;X<m;++X){var n=d[X],u=c[X],a=u.length,V=l.call(n,n&&n.__data__,X,d),h=V.length,t=W[X]=new Array(h),y=G[X]=new Array(h);b(n,u,t,y,i[X]=new Array(a),V,Z);for(var Y,e,p=0,o=0;p<h;++p)if(Y=t[p]){for(p>=o&&(o=p+1);!(e=y[o])&&++o<h;);Y._next=e||null}}return(G=new Wl(G,d))._enter=W,G._exit=i,G},enter:function(){return new Wl(this._enter||this._groups.map(k),this._parents)},exit:function(){return new Wl(this._exit||this._groups.map(k),this._parents)},merge:function(l){for(var Z=this._groups,b=l._groups,d=Z.length,c=b.length,m=Math.min(d,c),G=new Array(d),W=0;W<m;++W)for(var i,X=Z[W],n=b[W],u=X.length,a=G[W]=new Array(u),V=0;V<u;++V)(i=X[V]||n[V])&&(a[V]=i);for(;W<d;++W)G[W]=Z[W];return new Wl(G,this._parents)},order:function(){for(var l=this._groups,Z=-1,b=l.length;++Z<b;)for(var d,c=l[Z],m=c.length-1,G=c[m];--m>=0;)(d=c[m])&&(G&&G!==d.nextSibling&&G.parentNode.insertBefore(d,G),G=d);return this},sort:function(l){function Z(Z,b){return Z&&b?l(Z.__data__,b.__data__):!Z-!b}l||(l=r);for(var b=this._groups,d=b.length,c=new Array(d),m=0;m<d;++m){for(var G,W=b[m],i=W.length,X=c[m]=new Array(i),n=0;n<i;++n)(G=W[n])&&(X[n]=G);X.sort(Z)}return new Wl(c,this._parents).order()},call:function(){var l=arguments[0];return arguments[0]=this,l.apply(null,arguments),this},nodes:function(){var l=new Array(this.size()),Z=-1;return this.each((function(){l[++Z]=this})),l},node:function(){for(var l=this._groups,Z=0,b=l.length;Z<b;++Z)for(var d=l[Z],c=0,m=d.length;c<m;++c){var G=d[c];if(G)return G}return null},size:function(){var l=0;return this.each((function(){++l})),l},empty:function(){return!this.node()},each:function(l){for(var Z=this._groups,b=0,d=Z.length;b<d;++b)for(var c,m=Z[b],G=0,W=m.length;G<W;++G)(c=m[G])&&l.call(c,c.__data__,G,m);return this},attr:function(l,Z){var b=J(l);if(arguments.length<2){var d=this.node();return b.local?d.getAttributeNS(b.space,b.local):d.getAttribute(b)}return this.each((null==Z?b.local?function(l){return function(){this.removeAttributeNS(l.space,l.local)}}:function(l){return function(){this.removeAttribute(l)}}:"function"==typeof Z?b.local?function(l,Z){return function(){var b=Z.apply(this,arguments);null==b?this.removeAttributeNS(l.space,l.local):this.setAttributeNS(l.space,l.local,b)}}:function(l,Z){return function(){var b=Z.apply(this,arguments);null==b?this.removeAttribute(l):this.setAttribute(l,b)}}:b.local?function(l,Z){return function(){this.setAttributeNS(l.space,l.local,Z)}}:function(l,Z){return function(){this.setAttribute(l,Z)}})(b,Z))},style:function(l,Z,b){return arguments.length>1?this.each((null==Z?function(l){return function(){this.style.removeProperty(l)}}:"function"==typeof Z?function(l,Z,b){return function(){var d=Z.apply(this,arguments);null==d?this.style.removeProperty(l):this.style.setProperty(l,d,b)}}:function(l,Z,b){return function(){this.style.setProperty(l,Z,b)}})(l,Z,null==b?"":b)):j(this.node(),l)},property:function(l,Z){return arguments.length>1?this.each((null==Z?function(l){return function(){delete this[l]}}:"function"==typeof Z?function(l,Z){return function(){var b=Z.apply(this,arguments);null==b?delete this[l]:this[l]=b}}:function(l,Z){return function(){this[l]=Z}})(l,Z)):this.node()[l]},classed:function(l,Z){var b=w(l+"");if(arguments.length<2){for(var d=U(this.node()),c=-1,m=b.length;++c<m;)if(!d.contains(b[c]))return!1;return!0}return this.each(("function"==typeof Z?function(l,Z){return function(){(Z.apply(this,arguments)?Q:P)(this,l)}}:Z?function(l){return function(){Q(this,l)}}:function(l){return function(){P(this,l)}})(b,Z))},text:function(l){return arguments.length?this.each(null==l?D:("function"==typeof l?function(l){return function(){var Z=l.apply(this,arguments);this.textContent=null==Z?"":Z}}:function(l){return function(){this.textContent=l}})(l)):this.node().textContent},html:function(l){return arguments.length?this.each(null==l?A:("function"==typeof l?function(l){return function(){var Z=l.apply(this,arguments);this.innerHTML=null==Z?"":Z}}:function(l){return function(){this.innerHTML=l}})(l)):this.node().innerHTML},raise:function(){return this.each(E)},lower:function(){return this.each(O)},append:function(l){var Z="function"==typeof l?l:L(l);return this.select((function(){return this.appendChild(Z.apply(this,arguments))}))},insert:function(l,Z){var b="function"==typeof l?l:L(l),d=null==Z?q:"function"==typeof Z?Z:C(Z);return this.select((function(){return this.insertBefore(b.apply(this,arguments),d.apply(this,arguments)||null)}))},remove:function(){return this.each(_)},clone:function(l){return this.select(l?ll:$)},datum:function(l){return arguments.length?this.property("__data__",l):this.node().__data__},on:function(l,Z,b){var d,c,m=function(l){return l.trim().split(/^|\s+/).map((function(l){var Z="",b=l.indexOf(".");return b>=0&&(Z=l.slice(b+1),l=l.slice(0,b)),{type:l,name:Z}}))}(l+""),G=m.length;if(!(arguments.length<2)){for(W=Z?cl:dl,null==b&&(b=!1),d=0;d<G;++d)this.each(W(m[d],Z,b));return this}var W=this.node().__on;if(W)for(var i,X=0,n=W.length;X<n;++X)for(d=0,i=W[X];d<G;++d)if((c=m[d]).type===i.type&&c.name===i.name)return i.value},dispatch:function(l,Z){return this.each(("function"==typeof Z?function(l,Z){return function(){return Gl(this,l,Z.apply(this,arguments))}}:function(l,Z){return function(){return Gl(this,l,Z)}})(l,Z))}};var un=0;ul.prototype=nl.prototype={constructor:ul,get:function(l){for(var Z=this._;!(Z in l);)if(!(l=l.parentNode))return;return l[Z]},set:function(l,Z){return l[this._]=Z},remove:function(l){return this._ in l&&delete l[this._]},toString:function(){return this._}},sl.prototype.on=function(){var l=this._.on.apply(this._,arguments);return l===this._?this:l};var an="\\s*([+-]?\\d+)\\s*",Vn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",hn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",tn=/^#([0-9a-f]{3})$/,yn=/^#([0-9a-f]{6})$/,Yn=new RegExp("^rgb\\("+[an,an,an]+"\\)$"),en=new RegExp("^rgb\\("+[hn,hn,hn]+"\\)$"),pn=new RegExp("^rgba\\("+[an,an,an,Vn]+"\\)$"),on=new RegExp("^rgba\\("+[hn,hn,hn,Vn]+"\\)$"),sn=new RegExp("^hsl\\("+[Vn,hn,hn]+"\\)$"),In=new RegExp("^hsla\\("+[Vn,hn,hn,Vn]+"\\)$"),Rn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Nl(xl,Jl,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Nl(Bl,Sl,Hl(xl,{brighter:function(l){return l=null==l?1/.7:Math.pow(1/.7,l),new Bl(this.r*l,this.g*l,this.b*l,this.opacity)},darker:function(l){return l=null==l?.7:Math.pow(.7,l),new Bl(this.r*l,this.g*l,this.b*l,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+kl(this.r)+kl(this.g)+kl(this.b)},toString:function(){var l=this.opacity;return(1===(l=isNaN(l)?1:Math.max(0,Math.min(1,l)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===l?")":", "+l+")")}})),Nl(Ml,zl,Hl(xl,{brighter:function(l){return l=null==l?1/.7:Math.pow(1/.7,l),new Ml(this.h,this.s,this.l*l,this.opacity)},darker:function(l){return l=null==l?.7:Math.pow(.7,l),new Ml(this.h,this.s,this.l*l,this.opacity)},rgb:function(){var l=this.h%360+360*(this.h<0),Z=isNaN(l)||isNaN(this.s)?0:this.s,b=this.l,d=b+(b<.5?b:1-b)*Z,c=2*b-d;return new Bl(rl(l>=240?l-240:l+120,c,d),rl(l,c,d),rl(l<120?l+240:l-120,c,d),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var gn=Math.PI/180,Kn=180/Math.PI,Nn=.96422,Hn=1,xn=.82521,Jn=4/29,Ln=6/29,Fn=3*Ln*Ln,Cn=Ln*Ln*Ln;Nl(wl,jl,Hl(xl,{brighter:function(l){return new wl(this.l+18*(null==l?1:l),this.a,this.b,this.opacity)},darker:function(l){return new wl(this.l-18*(null==l?1:l),this.a,this.b,this.opacity)},rgb:function(){var l=(this.l+16)/116,Z=isNaN(this.a)?l:l+this.a/500,b=isNaN(this.b)?l:l-this.b/200;return new Bl(Ql(3.1338561*(Z=Nn*fl(Z))-1.6168667*(l=Hn*fl(l))-.4906146*(b=xn*fl(b))),Ql(-.9787684*Z+1.9161415*l+.033454*b),Ql(.0719453*Z-.2289914*l+1.4052427*b),this.opacity)}})),Nl(El,Al,Hl(xl,{brighter:function(l){return new El(this.h,this.c,this.l+18*(null==l?1:l),this.opacity)},darker:function(l){return new El(this.h,this.c,this.l-18*(null==l?1:l),this.opacity)},rgb:function(){return Tl(this).rgb()}}));var Sn=-.29227,Bn=-.90649,kn=1.97294,vn=kn*Bn,zn=1.78277*kn,Mn=1.78277*Sn- -.14861*Bn;Nl(ql,Ol,Hl(xl,{brighter:function(l){return l=null==l?1/.7:Math.pow(1/.7,l),new ql(this.h,this.s,this.l*l,this.opacity)},darker:function(l){return l=null==l?.7:Math.pow(.7,l),new ql(this.h,this.s,this.l*l,this.opacity)},rgb:function(){var l=isNaN(this.h)?0:(this.h+120)*gn,Z=+this.l,b=isNaN(this.s)?0:this.s*Z*(1-Z),d=Math.cos(l),c=Math.sin(l);return new Bl(255*(Z+b*(-.14861*d+1.78277*c)),255*(Z+b*(Sn*d+Bn*c)),255*(Z+b*(kn*d)),this.opacity)}}));var rn,Tn,jn,wn,Un,fn,Qn=function l(Z){function b(l,Z){var b=d((l=Sl(l)).r,(Z=Sl(Z)).r),c=d(l.g,Z.g),m=d(l.b,Z.b),G=cZ(l.opacity,Z.opacity);return function(Z){return l.r=b(Z),l.g=c(Z),l.b=m(Z),l.opacity=G(Z),l+""}}var d=function(l){return 1==(l=+l)?cZ:function(Z,b){return b-Z?function(l,Z,b){return l=Math.pow(l,b),Z=Math.pow(Z,b)-l,b=1/b,function(d){return Math.pow(l+d*Z,b)}}(Z,b,l):ZZ(isNaN(Z)?b:Z)}}(Z);return b.gamma=l,b}(1),Pn=mZ($l),Dn=mZ(lZ),An=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,En=new RegExp(An.source,"g"),On=180/Math.PI,qn={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},_n=hZ((function(l){return"none"===l?qn:(rn||(rn=document.createElement("DIV"),Tn=document.documentElement,jn=document.defaultView),rn.style.transform=l,l=jn.getComputedStyle(Tn.appendChild(rn),null).getPropertyValue("transform"),Tn.removeChild(rn),VZ(+(l=l.slice(7,-1).split(","))[0],+l[1],+l[2],+l[3],+l[4],+l[5]))}),"px, ","px)","deg)"),$n=hZ((function(l){return null==l?qn:(wn||(wn=document.createElementNS("http://www.w3.org/2000/svg","g")),wn.setAttribute("transform",l),(l=wn.transform.baseVal.consolidate())?VZ((l=l.matrix).a,l.b,l.c,l.d,l.e,l.f):qn)}),", ",")",")"),lu=Math.SQRT2,Zu=2,bu=4,du=1e-12,cu=YZ(dZ),mu=YZ(cZ),Gu=eZ(dZ),Wu=eZ(cZ),iu=pZ(dZ),Xu=pZ(cZ),nu=0,uu=0,au=0,Vu=1e3,hu=0,tu=0,yu=0,Yu="object"==typeof performance&&performance.now?performance:Date,eu="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(l){setTimeout(l,17)};IZ.prototype=RZ.prototype={constructor:IZ,restart:function(l,Z,b){if("function"!=typeof l)throw new TypeError("callback is not a function");b=(null==b?oZ():+b)+(null==Z?0:+Z),this._next||fn===this||(fn?fn._next=this:Un=this,fn=this),this._call=l,this._time=b,HZ()},stop:function(){this._call&&(this._call=null,this._time=1/0,HZ())}};var pu=N("start","end","interrupt"),ou=[],su=0,Iu=1,Ru=2,gu=3,Ku=4,Nu=5,Hu=6,xu=il.prototype.constructor,Ju=0,Lu=il.prototype;vZ.prototype=zZ.prototype={constructor:vZ,select:function(l){var Z=this._name,b=this._id;"function"!=typeof l&&(l=C(l));for(var d=this._groups,c=d.length,m=new Array(c),G=0;G<c;++G)for(var W,i,X=d[G],n=X.length,u=m[G]=new Array(n),a=0;a<n;++a)(W=X[a])&&(i=l.call(W,W.__data__,a,X))&&("__data__"in W&&(i.__data__=W.__data__),u[a]=i,JZ(u[a],Z,b,a,u,CZ(W,b)));return new vZ(m,this._parents,Z,b)},selectAll:function(l){var Z=this._name,b=this._id;"function"!=typeof l&&(l=B(l));for(var d=this._groups,c=d.length,m=[],G=[],W=0;W<c;++W)for(var i,X=d[W],n=X.length,u=0;u<n;++u)if(i=X[u]){for(var a,V=l.call(i,i.__data__,u,X),h=CZ(i,b),t=0,y=V.length;t<y;++t)(a=V[t])&&JZ(a,Z,b,t,V,h);m.push(V),G.push(i)}return new vZ(m,G,Z,b)},filter:function(l){"function"!=typeof l&&(l=Gn(l));for(var Z=this._groups,b=Z.length,d=new Array(b),c=0;c<b;++c)for(var m,G=Z[c],W=G.length,i=d[c]=[],X=0;X<W;++X)(m=G[X])&&l.call(m,m.__data__,X,G)&&i.push(m);return new vZ(d,this._parents,this._name,this._id)},merge:function(l){if(l._id!==this._id)throw new Error;for(var Z=this._groups,b=l._groups,d=Z.length,c=b.length,m=Math.min(d,c),G=new Array(d),W=0;W<m;++W)for(var i,X=Z[W],n=b[W],u=X.length,a=G[W]=new Array(u),V=0;V<u;++V)(i=X[V]||n[V])&&(a[V]=i);for(;W<d;++W)G[W]=Z[W];return new vZ(G,this._parents,this._name,this._id)},selection:function(){return new xu(this._groups,this._parents)},transition:function(){for(var l=this._name,Z=this._id,b=MZ(),d=this._groups,c=d.length,m=0;m<c;++m)for(var G,W=d[m],i=W.length,X=0;X<i;++X)if(G=W[X]){var n=CZ(G,Z);JZ(G,l,b,X,W,{time:n.time+n.delay+n.duration,delay:0,duration:n.duration,ease:n.ease})}return new vZ(d,this._parents,l,b)},call:Lu.call,nodes:Lu.nodes,node:Lu.node,size:Lu.size,empty:Lu.empty,each:Lu.each,on:function(l,Z){var b=this._id;return arguments.length<2?CZ(this.node(),b).on.on(l):this.each(function(l,Z,b){var d,c,m=function(l){return(l+"").trim().split(/^|\s+/).every((function(l){var Z=l.indexOf(".");return Z>=0&&(l=l.slice(0,Z)),!l||"start"===l}))}(Z)?LZ:FZ;return function(){var G=m(this,l),W=G.on;W!==d&&(c=(d=W).copy()).on(Z,b),G.on=c}}(b,l,Z))},attr:function(l,Z){var b=J(l),d="transform"===b?$n:kZ;return this.attrTween(l,"function"==typeof Z?(b.local?function(l,Z,b){var d,c,m;return function(){var G,W=b(this);if(null!=W)return(G=this.getAttributeNS(l.space,l.local))===W?null:G===d&&W===c?m:m=Z(d=G,c=W);this.removeAttributeNS(l.space,l.local)}}:function(l,Z,b){var d,c,m;return function(){var G,W=b(this);if(null!=W)return(G=this.getAttribute(l))===W?null:G===d&&W===c?m:m=Z(d=G,c=W);this.removeAttribute(l)}})(b,d,BZ(this,"attr."+l,Z)):null==Z?(b.local?function(l){return function(){this.removeAttributeNS(l.space,l.local)}}:function(l){return function(){this.removeAttribute(l)}})(b):(b.local?function(l,Z,b){var d,c;return function(){var m=this.getAttributeNS(l.space,l.local);return m===b?null:m===d?c:c=Z(d=m,b)}}:function(l,Z,b){var d,c;return function(){var m=this.getAttribute(l);return m===b?null:m===d?c:c=Z(d=m,b)}})(b,d,Z+""))},attrTween:function(l,Z){var b="attr."+l;if(arguments.length<2)return(b=this.tween(b))&&b._value;if(null==Z)return this.tween(b,null);if("function"!=typeof Z)throw new Error;var d=J(l);return this.tween(b,(d.local?function(l,Z){function b(){var b=this,d=Z.apply(b,arguments);return d&&function(Z){b.setAttributeNS(l.space,l.local,d(Z))}}return b._value=Z,b}:function(l,Z){function b(){var b=this,d=Z.apply(b,arguments);return d&&function(Z){b.setAttribute(l,d(Z))}}return b._value=Z,b})(d,Z))},style:function(l,Z,b){var d="transform"==(l+="")?_n:kZ;return null==Z?this.styleTween(l,function(l,Z){var b,d,c;return function(){var m=j(this,l),G=(this.style.removeProperty(l),j(this,l));return m===G?null:m===b&&G===d?c:c=Z(b=m,d=G)}}(l,d)).on("end.style."+l,function(l){return function(){this.style.removeProperty(l)}}(l)):this.styleTween(l,"function"==typeof Z?function(l,Z,b){var d,c,m;return function(){var G=j(this,l),W=b(this);return null==W&&(this.style.removeProperty(l),W=j(this,l)),G===W?null:G===d&&W===c?m:m=Z(d=G,c=W)}}(l,d,BZ(this,"style."+l,Z)):function(l,Z,b){var d,c;return function(){var m=j(this,l);return m===b?null:m===d?c:c=Z(d=m,b)}}(l,d,Z+""),b)},styleTween:function(l,Z,b){var d="style."+(l+="");if(arguments.length<2)return(d=this.tween(d))&&d._value;if(null==Z)return this.tween(d,null);if("function"!=typeof Z)throw new Error;return this.tween(d,function(l,Z,b){function d(){var d=this,c=Z.apply(d,arguments);return c&&function(Z){d.style.setProperty(l,c(Z),b)}}return d._value=Z,d}(l,Z,null==b?"":b))},text:function(l){return this.tween("text","function"==typeof l?function(l){return function(){var Z=l(this);this.textContent=null==Z?"":Z}}(BZ(this,"text",l)):function(l){return function(){this.textContent=l}}(null==l?"":l+""))},remove:function(){return this.on("end.remove",function(l){return function(){var Z=this.parentNode;for(var b in this.__transition)if(+b!==l)return;Z&&Z.removeChild(this)}}(this._id))},tween:function(l,Z){var b=this._id;if(l+="",arguments.length<2){for(var d,c=CZ(this.node(),b).tween,m=0,G=c.length;m<G;++m)if((d=c[m]).name===l)return d.value;return null}return this.each((null==Z?function(l,Z){var b,d;return function(){var c=FZ(this,l),m=c.tween;if(m!==b)for(var G=0,W=(d=b=m).length;G<W;++G)if(d[G].name===Z){(d=d.slice()).splice(G,1);break}c.tween=d}}:function(l,Z,b){var d,c;if("function"!=typeof b)throw new Error;return function(){var m=FZ(this,l),G=m.tween;if(G!==d){c=(d=G).slice();for(var W={name:Z,value:b},i=0,X=c.length;i<X;++i)if(c[i].name===Z){c[i]=W;break}i===X&&c.push(W)}m.tween=c}})(b,l,Z))},delay:function(l){var Z=this._id;return arguments.length?this.each(("function"==typeof l?function(l,Z){return function(){LZ(this,l).delay=+Z.apply(this,arguments)}}:function(l,Z){return Z=+Z,function(){LZ(this,l).delay=Z}})(Z,l)):CZ(this.node(),Z).delay},duration:function(l){var Z=this._id;return arguments.length?this.each(("function"==typeof l?function(l,Z){return function(){FZ(this,l).duration=+Z.apply(this,arguments)}}:function(l,Z){return Z=+Z,function(){FZ(this,l).duration=Z}})(Z,l)):CZ(this.node(),Z).duration},ease:function(l){var Z=this._id;return arguments.length?this.each(function(l,Z){if("function"!=typeof Z)throw new Error;return function(){FZ(this,l).ease=Z}}(Z,l)):CZ(this.node(),Z).ease}};var Fu=function l(Z){function b(l){return Math.pow(l,Z)}return Z=+Z,b.exponent=l,b}(3),Cu=function l(Z){function b(l){return 1-Math.pow(1-l,Z)}return Z=+Z,b.exponent=l,b}(3),Su=function l(Z){function b(l){return((l*=2)<=1?Math.pow(l,Z):2-Math.pow(2-l,Z))/2}return Z=+Z,b.exponent=l,b}(3),Bu=Math.PI,ku=Bu/2,vu=4/11,zu=6/11,Mu=8/11,ru=.75,Tu=9/11,ju=10/11,wu=.9375,Uu=21/22,fu=63/64,Qu=1/vu/vu,Pu=function l(Z){function b(l){return l*l*((Z+1)*l-Z)}return Z=+Z,b.overshoot=l,b}(1.70158),Du=function l(Z){function b(l){return--l*l*((Z+1)*l+Z)+1}return Z=+Z,b.overshoot=l,b}(1.70158),Au=function l(Z){function b(l){return((l*=2)<1?l*l*((Z+1)*l-Z):(l-=2)*l*((Z+1)*l+Z)+2)/2}return Z=+Z,b.overshoot=l,b}(1.70158),Eu=2*Math.PI,Ou=function l(Z,b){function d(l){return Z*Math.pow(2,10*--l)*Math.sin((c-l)/b)}var c=Math.asin(1/(Z=Math.max(1,Z)))*(b/=Eu);return d.amplitude=function(Z){return l(Z,b*Eu)},d.period=function(b){return l(Z,b)},d}(1,.3),qu=function l(Z,b){function d(l){return 1-Z*Math.pow(2,-10*(l=+l))*Math.sin((l+c)/b)}var c=Math.asin(1/(Z=Math.max(1,Z)))*(b/=Eu);return d.amplitude=function(Z){return l(Z,b*Eu)},d.period=function(b){return l(Z,b)},d}(1,.3),_u=function l(Z,b){function d(l){return((l=2*l-1)<0?Z*Math.pow(2,10*l)*Math.sin((c-l)/b):2-Z*Math.pow(2,-10*l)*Math.sin((c+l)/b))/2}var c=Math.asin(1/(Z=Math.max(1,Z)))*(b/=Eu);return d.amplitude=function(Z){return l(Z,b*Eu)},d.period=function(b){return l(Z,b)},d}(1,.3),$u={time:null,delay:0,duration:250,ease:TZ};il.prototype.interrupt=function(l){return this.each((function(){SZ(this,l)}))},il.prototype.transition=function(l){var Z,b;l instanceof vZ?(Z=l._id,l=l._name):(Z=MZ(),(b=$u).time=oZ(),l=null==l?null:l+"");for(var d=this._groups,c=d.length,m=0;m<c;++m)for(var G,W=d[m],i=W.length,X=0;X<i;++X)(G=W[X])&&JZ(G,l,Z,X,W,b||QZ(G,Z));return new vZ(d,this._parents,l,Z)};var la=[null],Za={name:"drag"},ba={name:"space"},da={name:"handle"},ca={name:"center"},ma={name:"x",handles:["e","w"].map(EZ),input:function(l,Z){return l&&[[l[0],Z[0][1]],[l[1],Z[1][1]]]},output:function(l){return l&&[l[0][0],l[1][0]]}},Ga={name:"y",handles:["n","s"].map(EZ),input:function(l,Z){return l&&[[Z[0][0],l[0]],[Z[1][0],l[1]]]},output:function(l){return l&&[l[0][1],l[1][1]]}},Wa={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(EZ),input:function(l){return l},output:function(l){return l}},ia={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Xa={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},na={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},ua={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},aa={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1},Va=Math.cos,ha=Math.sin,ta=Math.PI,ya=ta/2,Ya=2*ta,ea=Math.max,pa=Array.prototype.slice,oa=Math.PI,sa=2*oa,Ia=sa-1e-6;bb.prototype=db.prototype={constructor:bb,moveTo:function(l,Z){this._+="M"+(this._x0=this._x1=+l)+","+(this._y0=this._y1=+Z)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(l,Z){this._+="L"+(this._x1=+l)+","+(this._y1=+Z)},quadraticCurveTo:function(l,Z,b,d){this._+="Q"+ +l+","+ +Z+","+(this._x1=+b)+","+(this._y1=+d)},bezierCurveTo:function(l,Z,b,d,c,m){this._+="C"+ +l+","+ +Z+","+ +b+","+ +d+","+(this._x1=+c)+","+(this._y1=+m)},arcTo:function(l,Z,b,d,c){l=+l,Z=+Z,b=+b,d=+d,c=+c;var m=this._x1,G=this._y1,W=b-l,i=d-Z,X=m-l,n=G-Z,u=X*X+n*n;if(c<0)throw new Error("negative radius: "+c);if(null===this._x1)this._+="M"+(this._x1=l)+","+(this._y1=Z);else if(u>1e-6)if(Math.abs(n*W-i*X)>1e-6&&c){var a=b-m,V=d-G,h=W*W+i*i,t=a*a+V*V,y=Math.sqrt(h),Y=Math.sqrt(u),e=c*Math.tan((oa-Math.acos((h+u-t)/(2*y*Y)))/2),p=e/Y,o=e/y;Math.abs(p-1)>1e-6&&(this._+="L"+(l+p*X)+","+(Z+p*n)),this._+="A"+c+","+c+",0,0,"+ +(n*a>X*V)+","+(this._x1=l+o*W)+","+(this._y1=Z+o*i)}else this._+="L"+(this._x1=l)+","+(this._y1=Z)},arc:function(l,Z,b,d,c,m){l=+l,Z=+Z;var G=(b=+b)*Math.cos(d),W=b*Math.sin(d),i=l+G,X=Z+W,n=1^m,u=m?d-c:c-d;if(b<0)throw new Error("negative radius: "+b);null===this._x1?this._+="M"+i+","+X:(Math.abs(this._x1-i)>1e-6||Math.abs(this._y1-X)>1e-6)&&(this._+="L"+i+","+X),b&&(u<0&&(u=u%sa+sa),u>Ia?this._+="A"+b+","+b+",0,1,"+n+","+(l-G)+","+(Z-W)+"A"+b+","+b+",0,1,"+n+","+(this._x1=i)+","+(this._y1=X):u>1e-6&&(this._+="A"+b+","+b+",0,"+ +(u>=oa)+","+n+","+(this._x1=l+b*Math.cos(c))+","+(this._y1=Z+b*Math.sin(c))))},rect:function(l,Z,b,d){this._+="M"+(this._x0=this._x1=+l)+","+(this._y0=this._y1=+Z)+"h"+ +b+"v"+ +d+"h"+-b+"Z"},toString:function(){return this._}},Xb.prototype=nb.prototype={constructor:Xb,has:function(l){return"$"+l in this},get:function(l){return this["$"+l]},set:function(l,Z){return this["$"+l]=Z,this},remove:function(l){var Z="$"+l;return Z in this&&delete this[Z]},clear:function(){for(var l in this)"$"===l[0]&&delete this[l]},keys:function(){var l=[];for(var Z in this)"$"===Z[0]&&l.push(Z.slice(1));return l},values:function(){var l=[];for(var Z in this)"$"===Z[0]&&l.push(this[Z]);return l},entries:function(){var l=[];for(var Z in this)"$"===Z[0]&&l.push({key:Z.slice(1),value:this[Z]});return l},size:function(){var l=0;for(var Z in this)"$"===Z[0]&&++l;return l},empty:function(){for(var l in this)if("$"===l[0])return!1;return!0},each:function(l){for(var Z in this)"$"===Z[0]&&l(this[Z],Z.slice(1),this)}};var Ra=nb.prototype;tb.prototype=yb.prototype={constructor:tb,has:Ra.has,add:function(l){return this["$"+(l+="")]=l,this},remove:Ra.remove,clear:Ra.clear,values:Ra.keys,size:Ra.size,empty:Ra.empty,each:Ra.each};var ga=Array.prototype.slice,Ka=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],Na={},Ha={},xa=34,Ja=10,La=13,Fa=Hb(","),Ca=Fa.parse,Sa=Fa.parseRows,Ba=Fa.format,ka=Fa.formatRows,va=Hb("\t"),za=va.parse,Ma=va.parseRows,ra=va.format,Ta=va.formatRows,ja=Cb(Ca),wa=Cb(za),Ua=Bb("application/xml"),fa=Bb("text/html"),Qa=Bb("image/svg+xml"),Pa=jb.prototype=wb.prototype;Pa.copy=function(){var l,Z,b=new wb(this._x,this._y,this._x0,this._y0,this._x1,this._y1),d=this._root;if(!d)return b;if(!d.length)return b._root=Ub(d),b;for(l=[{source:d,target:b._root=new Array(4)}];d=l.pop();)for(var c=0;c<4;++c)(Z=d.source[c])&&(Z.length?l.push({source:Z,target:d.target[c]=new Array(4)}):d.target[c]=Ub(Z));return b},Pa.add=function(l){var Z=+this._x.call(null,l),b=+this._y.call(null,l);return zb(this.cover(Z,b),Z,b,l)},Pa.addAll=function(l){var Z,b,d,c,m=l.length,G=new Array(m),W=new Array(m),i=1/0,X=1/0,n=-1/0,u=-1/0;for(b=0;b<m;++b)isNaN(d=+this._x.call(null,Z=l[b]))||isNaN(c=+this._y.call(null,Z))||(G[b]=d,W[b]=c,d<i&&(i=d),d>n&&(n=d),c<X&&(X=c),c>u&&(u=c));for(n<i&&(i=this._x0,n=this._x1),u<X&&(X=this._y0,u=this._y1),this.cover(i,X).cover(n,u),b=0;b<m;++b)zb(this,G[b],W[b],l[b]);return this},Pa.cover=function(l,Z){if(isNaN(l=+l)||isNaN(Z=+Z))return this;var b=this._x0,d=this._y0,c=this._x1,m=this._y1;if(isNaN(b))c=(b=Math.floor(l))+1,m=(d=Math.floor(Z))+1;else{if(!(b>l||l>c||d>Z||Z>m))return this;var G,W,i=c-b,X=this._root;switch(W=(Z<(d+m)/2)<<1|l<(b+c)/2){case 0:do{(G=new Array(4))[W]=X,X=G}while(m=d+(i*=2),l>(c=b+i)||Z>m);break;case 1:do{(G=new Array(4))[W]=X,X=G}while(m=d+(i*=2),(b=c-i)>l||Z>m);break;case 2:do{(G=new Array(4))[W]=X,X=G}while(d=m-(i*=2),l>(c=b+i)||d>Z);break;case 3:do{(G=new Array(4))[W]=X,X=G}while(d=m-(i*=2),(b=c-i)>l||d>Z)}this._root&&this._root.length&&(this._root=X)}return this._x0=b,this._y0=d,this._x1=c,this._y1=m,this},Pa.data=function(){var l=[];return this.visit((function(Z){if(!Z.length)do{l.push(Z.data)}while(Z=Z.next)})),l},Pa.extent=function(l){return arguments.length?this.cover(+l[0][0],+l[0][1]).cover(+l[1][0],+l[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Pa.find=function(l,Z,b){var d,c,m,G,W,i,X,n=this._x0,u=this._y0,a=this._x1,V=this._y1,h=[],t=this._root;for(t&&h.push(new Mb(t,n,u,a,V)),null==b?b=1/0:(n=l-b,u=Z-b,a=l+b,V=Z+b,b*=b);i=h.pop();)if(!(!(t=i.node)||(c=i.x0)>a||(m=i.y0)>V||(G=i.x1)<n||(W=i.y1)<u))if(t.length){var y=(c+G)/2,Y=(m+W)/2;h.push(new Mb(t[3],y,Y,G,W),new Mb(t[2],c,Y,y,W),new Mb(t[1],y,m,G,Y),new Mb(t[0],c,m,y,Y)),(X=(Z>=Y)<<1|l>=y)&&(i=h[h.length-1],h[h.length-1]=h[h.length-1-X],h[h.length-1-X]=i)}else{var e=l-+this._x.call(null,t.data),p=Z-+this._y.call(null,t.data),o=e*e+p*p;if(o<b){var s=Math.sqrt(b=o);n=l-s,u=Z-s,a=l+s,V=Z+s,d=t.data}}return d},Pa.remove=function(l){if(isNaN(m=+this._x.call(null,l))||isNaN(G=+this._y.call(null,l)))return this;var Z,b,d,c,m,G,W,i,X,n,u,a,V=this._root,h=this._x0,t=this._y0,y=this._x1,Y=this._y1;if(!V)return this;if(V.length)for(;;){if((X=m>=(W=(h+y)/2))?h=W:y=W,(n=G>=(i=(t+Y)/2))?t=i:Y=i,Z=V,!(V=V[u=n<<1|X]))return this;if(!V.length)break;(Z[u+1&3]||Z[u+2&3]||Z[u+3&3])&&(b=Z,a=u)}for(;V.data!==l;)if(d=V,!(V=V.next))return this;return(c=V.next)&&delete V.next,d?(c?d.next=c:delete d.next,this):Z?(c?Z[u]=c:delete Z[u],(V=Z[0]||Z[1]||Z[2]||Z[3])&&V===(Z[3]||Z[2]||Z[1]||Z[0])&&!V.length&&(b?b[a]=V:this._root=V),this):(this._root=c,this)},Pa.removeAll=function(l){for(var Z=0,b=l.length;Z<b;++Z)this.remove(l[Z]);return this},Pa.root=function(){return this._root},Pa.size=function(){var l=0;return this.visit((function(Z){if(!Z.length)do{++l}while(Z=Z.next)})),l},Pa.visit=function(l){var Z,b,d,c,m,G,W=[],i=this._root;for(i&&W.push(new Mb(i,this._x0,this._y0,this._x1,this._y1));Z=W.pop();)if(!l(i=Z.node,d=Z.x0,c=Z.y0,m=Z.x1,G=Z.y1)&&i.length){var X=(d+m)/2,n=(c+G)/2;(b=i[3])&&W.push(new Mb(b,X,n,m,G)),(b=i[2])&&W.push(new Mb(b,d,n,X,G)),(b=i[1])&&W.push(new Mb(b,X,c,m,n)),(b=i[0])&&W.push(new Mb(b,d,c,X,n))}return this},Pa.visitAfter=function(l){var Z,b=[],d=[];for(this._root&&b.push(new Mb(this._root,this._x0,this._y0,this._x1,this._y1));Z=b.pop();){var c=Z.node;if(c.length){var m,G=Z.x0,W=Z.y0,i=Z.x1,X=Z.y1,n=(G+i)/2,u=(W+X)/2;(m=c[0])&&b.push(new Mb(m,G,W,n,u)),(m=c[1])&&b.push(new Mb(m,n,W,i,u)),(m=c[2])&&b.push(new Mb(m,G,u,n,X)),(m=c[3])&&b.push(new Mb(m,n,u,i,X))}d.push(Z)}for(;Z=d.pop();)l(Z.node,Z.x0,Z.y0,Z.x1,Z.y1);return this},Pa.x=function(l){return arguments.length?(this._x=l,this):this._x},Pa.y=function(l){return arguments.length?(this._y=l,this):this._y};var Da=Math.PI*(3-Math.sqrt(5)),Aa=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;_b.prototype=$b.prototype,$b.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Ea,Oa,qa={"%":function(l,Z){return(100*l).toFixed(Z)},b:function(l){return Math.round(l).toString(2)},c:function(l){return l+""},d:function(l){return Math.round(l).toString(10)},e:function(l,Z){return l.toExponential(Z)},f:function(l,Z){return l.toFixed(Z)},g:function(l,Z){return l.toPrecision(Z)},o:function(l){return Math.round(l).toString(8)},p:function(l,Z){return ld(100*l,Z)},r:ld,s:function(l,Z){var b=Ob(l,Z);if(!b)return l+"";var d=b[0],c=b[1],m=c-(Ea=3*Math.max(-8,Math.min(8,Math.floor(c/3))))+1,G=d.length;return m===G?d:m>G?d+new Array(m-G+1).join("0"):m>0?d.slice(0,m)+"."+d.slice(m):"0."+new Array(1-m).join("0")+Ob(l,Math.max(0,Z+m-1))[0]},X:function(l){return Math.round(l).toString(16).toUpperCase()},x:function(l){return Math.round(l).toString(16)}},_a=["y","z","a","f","p","n","Âµ","m","","k","M","G","T","P","E","Z","Y"];dd({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),id.prototype={constructor:id,reset:function(){this.s=this.t=0},add:function(l){Xd(LV,l,this.t),Xd(this,LV.s,this.s),this.s?this.t+=LV.t:this.s=LV.t},valueOf:function(){return this.s}};var $a,lV,ZV,bV,dV,cV,mV,GV,WV,iV,XV,nV,uV,aV,VV,hV,tV,yV,YV,eV,pV,oV,sV,IV,RV,gV,KV,NV,HV,xV,JV,LV=new id,FV=1e-6,CV=Math.PI,SV=CV/2,BV=CV/4,kV=2*CV,vV=180/CV,zV=CV/180,MV=Math.abs,rV=Math.atan,TV=Math.atan2,jV=Math.cos,wV=Math.ceil,UV=Math.exp,fV=Math.log,QV=Math.pow,PV=Math.sin,DV=Math.sign||function(l){return l>0?1:l<0?-1:0},AV=Math.sqrt,EV=Math.tan,OV={Feature:function(l,Z){hd(l.geometry,Z)},FeatureCollection:function(l,Z){for(var b=l.features,d=-1,c=b.length;++d<c;)hd(b[d].geometry,Z)}},qV={Sphere:function(l,Z){Z.sphere()},Point:function(l,Z){l=l.coordinates,Z.point(l[0],l[1],l[2])},MultiPoint:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)l=b[d],Z.point(l[0],l[1],l[2])},LineString:function(l,Z){td(l.coordinates,Z,0)},MultiLineString:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)td(b[d],Z,0)},Polygon:function(l,Z){yd(l.coordinates,Z)},MultiPolygon:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)yd(b[d],Z)},GeometryCollection:function(l,Z){for(var b=l.geometries,d=-1,c=b.length;++d<c;)hd(b[d],Z)}},_V=Wd(),$V=Wd(),lh={point:Vd,lineStart:Vd,lineEnd:Vd,polygonStart:function(){_V.reset(),lh.lineStart=ed,lh.lineEnd=pd},polygonEnd:function(){var l=+_V;$V.add(l<0?kV+l:l),this.lineStart=this.lineEnd=this.point=Vd},sphere:function(){$V.add(kV)}},Zh=Wd(),bh={point:Jd,lineStart:Fd,lineEnd:Cd,polygonStart:function(){bh.point=Sd,bh.lineStart=Bd,bh.lineEnd=kd,Zh.reset(),lh.polygonStart()},polygonEnd:function(){lh.polygonEnd(),bh.point=Jd,bh.lineStart=Fd,bh.lineEnd=Cd,_V<0?(cV=-(GV=180),mV=-(WV=90)):Zh>FV?WV=90:Zh<-FV&&(mV=-90),VV[0]=cV,VV[1]=GV}},dh={sphere:Vd,point:rd,lineStart:jd,lineEnd:fd,polygonStart:function(){dh.lineStart=Qd,dh.lineEnd=Pd},polygonEnd:function(){dh.lineStart=jd,dh.lineEnd=fd}};qd.invert=qd;var ch,mh,Gh,Wh,ih,Xh,nh,uh,ah,Vh,hh,th=Wd(),yh=uc((function(){return!0}),(function(l){var Z,b=NaN,d=NaN,c=NaN;return{lineStart:function(){l.lineStart(),Z=1},point:function(m,G){var W=m>0?CV:-CV,i=MV(m-b);MV(i-CV)<FV?(l.point(b,d=(d+G)/2>0?SV:-SV),l.point(c,d),l.lineEnd(),l.lineStart(),l.point(W,d),l.point(m,d),Z=0):c!==W&&i>=CV&&(MV(b-c)<FV&&(b-=c*FV),MV(m-W)<FV&&(m-=W*FV),d=function(l,Z,b,d){var c,m,G=PV(l-b);return MV(G)>FV?rV((PV(Z)*(m=jV(d))*PV(b)-PV(d)*(c=jV(Z))*PV(l))/(c*m*G)):(Z+d)/2}(b,d,m,G),l.point(c,d),l.lineEnd(),l.lineStart(),l.point(W,d),Z=0),l.point(b=m,d=G),c=W},lineEnd:function(){l.lineEnd(),b=d=NaN},clean:function(){return 2-Z}}}),(function(l,Z,b,d){var c;if(null==l)c=b*SV,d.point(-CV,c),d.point(0,c),d.point(CV,c),d.point(CV,0),d.point(CV,-c),d.point(0,-c),d.point(-CV,-c),d.point(-CV,0),d.point(-CV,c);else if(MV(l[0]-Z[0])>FV){var m=l[0]<Z[0]?CV:-CV;c=b*m/2,d.point(-m,c),d.point(0,c),d.point(m,c)}else d.point(Z[0],Z[1])}),[-CV,-SV]),Yh=1e9,eh=-Yh,ph=Wd(),oh={sphere:Vd,point:Vd,lineStart:function(){oh.point=Yc,oh.lineEnd=yc},lineEnd:Vd,polygonStart:Vd,polygonEnd:Vd},sh=[null,null],Ih={type:"LineString",coordinates:sh},Rh={Feature:function(l,Z){return sc(l.geometry,Z)},FeatureCollection:function(l,Z){for(var b=l.features,d=-1,c=b.length;++d<c;)if(sc(b[d].geometry,Z))return!0;return!1}},gh={Sphere:function(){return!0},Point:function(l,Z){return Ic(l.coordinates,Z)},MultiPoint:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)if(Ic(b[d],Z))return!0;return!1},LineString:function(l,Z){return Rc(l.coordinates,Z)},MultiLineString:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)if(Rc(b[d],Z))return!0;return!1},Polygon:function(l,Z){return gc(l.coordinates,Z)},MultiPolygon:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)if(gc(b[d],Z))return!0;return!1},GeometryCollection:function(l,Z){for(var b=l.geometries,d=-1,c=b.length;++d<c;)if(sc(b[d],Z))return!0;return!1}},Kh=Wd(),Nh=Wd(),Hh={point:Vd,lineStart:Vd,lineEnd:Vd,polygonStart:function(){Hh.lineStart=Fc,Hh.lineEnd=Bc},polygonEnd:function(){Hh.lineStart=Hh.lineEnd=Hh.point=Vd,Kh.add(MV(Nh)),Nh.reset()},result:function(){var l=Kh/2;return Kh.reset(),l}},xh=1/0,Jh=xh,Lh=-xh,Fh=Lh,Ch={point:function(l,Z){l<xh&&(xh=l),l>Lh&&(Lh=l),Z<Jh&&(Jh=Z),Z>Fh&&(Fh=Z)},lineStart:Vd,lineEnd:Vd,polygonStart:Vd,polygonEnd:Vd,result:function(){var l=[[xh,Jh],[Lh,Fh]];return Lh=Fh=-(Jh=xh=1/0),l}},Sh=0,Bh=0,kh=0,vh=0,zh=0,Mh=0,rh=0,Th=0,jh=0,wh={point:kc,lineStart:vc,lineEnd:rc,polygonStart:function(){wh.lineStart=Tc,wh.lineEnd=jc},polygonEnd:function(){wh.point=kc,wh.lineStart=vc,wh.lineEnd=rc},result:function(){var l=jh?[rh/jh,Th/jh]:Mh?[vh/Mh,zh/Mh]:kh?[Sh/kh,Bh/kh]:[NaN,NaN];return Sh=Bh=kh=vh=zh=Mh=rh=Th=jh=0,l}};fc.prototype={_radius:4.5,pointRadius:function(l){return this._radius=l,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(l,Z){switch(this._point){case 0:this._context.moveTo(l,Z),this._point=1;break;case 1:this._context.lineTo(l,Z);break;default:this._context.moveTo(l+this._radius,Z),this._context.arc(l,Z,this._radius,0,kV)}},result:Vd};var Uh,fh,Qh,Ph,Dh,Ah=Wd(),Eh={point:Vd,lineStart:function(){Eh.point=Qc},lineEnd:function(){Uh&&Pc(fh,Qh),Eh.point=Vd},polygonStart:function(){Uh=!0},polygonEnd:function(){Uh=null},result:function(){var l=+Ah;return Ah.reset(),l}};Dc.prototype={_radius:4.5,_circle:Ac(4.5),pointRadius:function(l){return(l=+l)!==this._radius&&(this._radius=l,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(l,Z){switch(this._point){case 0:this._string.push("M",l,",",Z),this._point=1;break;case 1:this._string.push("L",l,",",Z);break;default:null==this._circle&&(this._circle=Ac(this._radius)),this._string.push("M",l,",",Z,this._circle)}},result:function(){if(this._string.length){var l=this._string.join("");return this._string=[],l}return null}},Oc.prototype={constructor:Oc,point:function(l,Z){this.stream.point(l,Z)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Oh=16,qh=jV(30*zV),_h=Ec({point:function(l,Z){this.stream.point(l*zV,Z*zV)}}),$h=nm((function(l){return AV(2/(1+l))}));$h.invert=um((function(l){return 2*ud(l/2)}));var lt=nm((function(l){return(l=nd(l))&&l/PV(l)}));lt.invert=um((function(l){return l})),am.invert=function(l,Z){return[l,2*rV(UV(Z))-SV]},ym.invert=ym,em.invert=um(rV),om.invert=function(l,Z){var b,d=Z,c=25;do{var m=d*d,G=m*m;d-=b=(d*(1.007226+m*(.015085+G*(.028874*m-.044475-.005916*G)))-Z)/(1.007226+m*(.045255+G*(.259866*m-.311325-.005916*11*G)))}while(MV(b)>FV&&--c>0);return[l/(.8707+(m=d*d)*(m*(m*m*m*(.003971-.001529*m)-.013791)-.131979)),d]},sm.invert=um(ud),Im.invert=um((function(l){return 2*rV(l)})),Rm.invert=function(l,Z){return[-Z,2*rV(UV(l))-SV]},Cm.prototype=xm.prototype={constructor:Cm,count:function(){return this.eachAfter(Hm)},each:function(l){var Z,b,d,c,m=this,G=[m];do{for(Z=G.reverse(),G=[];m=Z.pop();)if(l(m),b=m.children)for(d=0,c=b.length;d<c;++d)G.push(b[d])}while(G.length);return this},eachAfter:function(l){for(var Z,b,d,c=this,m=[c],G=[];c=m.pop();)if(G.push(c),Z=c.children)for(b=0,d=Z.length;b<d;++b)m.push(Z[b]);for(;c=G.pop();)l(c);return this},eachBefore:function(l){for(var Z,b,d=this,c=[d];d=c.pop();)if(l(d),Z=d.children)for(b=Z.length-1;b>=0;--b)c.push(Z[b]);return this},sum:function(l){return this.eachAfter((function(Z){for(var b=+l(Z.data)||0,d=Z.children,c=d&&d.length;--c>=0;)b+=d[c].value;Z.value=b}))},sort:function(l){return this.eachBefore((function(Z){Z.children&&Z.children.sort(l)}))},path:function(l){for(var Z=this,b=function(l,Z){if(l===Z)return l;var b=l.ancestors(),d=Z.ancestors(),c=null;for(l=b.pop(),Z=d.pop();l===Z;)c=l,l=b.pop(),Z=d.pop();return c}(Z,l),d=[Z];Z!==b;)Z=Z.parent,d.push(Z);for(var c=d.length;l!==b;)d.splice(c,0,l),l=l.parent;return d},ancestors:function(){for(var l=this,Z=[l];l=l.parent;)Z.push(l);return Z},descendants:function(){var l=[];return this.each((function(Z){l.push(Z)})),l},leaves:function(){var l=[];return this.eachBefore((function(Z){Z.children||l.push(Z)})),l},links:function(){var l=this,Z=[];return l.each((function(b){b!==l&&Z.push({source:b.parent,target:b})})),Z},copy:function(){return xm(this).eachBefore(Lm)}};var Zt=Array.prototype.slice,bt={depth:-1},dt={};GG.prototype=Object.create(Cm.prototype);var ct=(1+Math.sqrt(5))/2,mt=function l(Z){function b(l,b,d,c,m){iG(Z,l,b,d,c,m)}return b.ratio=function(Z){return l((Z=+Z)>1?Z:1)},b}(ct),Gt=function l(Z){function b(l,b,d,c,m){if((G=l._squarify)&&G.ratio===Z)for(var G,W,i,X,n,u=-1,a=G.length,V=l.value;++u<a;){for(i=(W=G[u]).children,X=W.value=0,n=i.length;X<n;++X)W.value+=i[X].value;W.dice?_m(W,b,d,c,d+=(m-d)*W.value/V):WG(W,b,d,b+=(c-b)*W.value/V,m),V-=W.value}else l._squarify=G=iG(Z,l,b,d,c,m),G.ratio=Z}return b.ratio=function(Z){return l((Z=+Z)>1?Z:1)},b}(ct),Wt=function l(Z){function b(l,b){return l=null==l?0:+l,b=null==b?1:+b,1===arguments.length?(b=l,l=0):b-=l,function(){return Z()*b+l}}return b.source=l,b}(aG),it=function l(Z){function b(l,b){var d,c;return l=null==l?0:+l,b=null==b?1:+b,function(){var m;if(null!=d)m=d,d=null;else do{d=2*Z()-1,m=2*Z()-1,c=d*d+m*m}while(!c||c>1);return l+b*m*Math.sqrt(-2*Math.log(c)/c)}}return b.source=l,b}(aG),Xt=function l(Z){function b(){var l=it.source(Z).apply(this,arguments);return function(){return Math.exp(l())}}return b.source=l,b}(aG),nt=function l(Z){function b(l){return function(){for(var b=0,d=0;d<l;++d)b+=Z();return b}}return b.source=l,b}(aG),ut=function l(Z){function b(l){var b=nt.source(Z)(l);return function(){return b()/l}}return b.source=l,b}(aG),at=function l(Z){function b(l){return function(){return-Math.log(1-Z())/l}}return b.source=l,b}(aG),Vt=Array.prototype,ht=Vt.map,tt=Vt.slice,yt={name:"implicit"},Yt=[0,1],et=new Date,pt=new Date,ot=CG((function(){}),(function(l,Z){l.setTime(+l+Z)}),(function(l,Z){return Z-l}));ot.every=function(l){return l=Math.floor(l),isFinite(l)&&l>0?l>1?CG((function(Z){Z.setTime(Math.floor(Z/l)*l)}),(function(Z,b){Z.setTime(+Z+b*l)}),(function(Z,b){return(b-Z)/l})):ot:null};var st=ot.range,It=6e4,Rt=6048e5,gt=CG((function(l){l.setTime(1e3*Math.floor(l/1e3))}),(function(l,Z){l.setTime(+l+1e3*Z)}),(function(l,Z){return(Z-l)/1e3}),(function(l){return l.getUTCSeconds()})),Kt=gt.range,Nt=CG((function(l){l.setTime(Math.floor(l/It)*It)}),(function(l,Z){l.setTime(+l+Z*It)}),(function(l,Z){return(Z-l)/It}),(function(l){return l.getMinutes()})),Ht=Nt.range,xt=CG((function(l){var Z=l.getTimezoneOffset()*It%36e5;Z<0&&(Z+=36e5),l.setTime(36e5*Math.floor((+l-Z)/36e5)+Z)}),(function(l,Z){l.setTime(+l+36e5*Z)}),(function(l,Z){return(Z-l)/36e5}),(function(l){return l.getHours()})),Jt=xt.range,Lt=CG((function(l){l.setHours(0,0,0,0)}),(function(l,Z){l.setDate(l.getDate()+Z)}),(function(l,Z){return(Z-l-(Z.getTimezoneOffset()-l.getTimezoneOffset())*It)/864e5}),(function(l){return l.getDate()-1})),Ft=Lt.range,Ct=SG(0),St=SG(1),Bt=SG(2),kt=SG(3),vt=SG(4),zt=SG(5),Mt=SG(6),rt=Ct.range,Tt=St.range,jt=Bt.range,wt=kt.range,Ut=vt.range,ft=zt.range,Qt=Mt.range,Pt=CG((function(l){l.setDate(1),l.setHours(0,0,0,0)}),(function(l,Z){l.setMonth(l.getMonth()+Z)}),(function(l,Z){return Z.getMonth()-l.getMonth()+12*(Z.getFullYear()-l.getFullYear())}),(function(l){return l.getMonth()})),Dt=Pt.range,At=CG((function(l){l.setMonth(0,1),l.setHours(0,0,0,0)}),(function(l,Z){l.setFullYear(l.getFullYear()+Z)}),(function(l,Z){return Z.getFullYear()-l.getFullYear()}),(function(l){return l.getFullYear()}));At.every=function(l){return isFinite(l=Math.floor(l))&&l>0?CG((function(Z){Z.setFullYear(Math.floor(Z.getFullYear()/l)*l),Z.setMonth(0,1),Z.setHours(0,0,0,0)}),(function(Z,b){Z.setFullYear(Z.getFullYear()+b*l)})):null};var Et=At.range,Ot=CG((function(l){l.setUTCSeconds(0,0)}),(function(l,Z){l.setTime(+l+Z*It)}),(function(l,Z){return(Z-l)/It}),(function(l){return l.getUTCMinutes()})),qt=Ot.range,_t=CG((function(l){l.setUTCMinutes(0,0,0)}),(function(l,Z){l.setTime(+l+36e5*Z)}),(function(l,Z){return(Z-l)/36e5}),(function(l){return l.getUTCHours()})),$t=_t.range,ly=CG((function(l){l.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCDate(l.getUTCDate()+Z)}),(function(l,Z){return(Z-l)/864e5}),(function(l){return l.getUTCDate()-1})),Zy=ly.range,by=BG(0),dy=BG(1),cy=BG(2),my=BG(3),Gy=BG(4),Wy=BG(5),iy=BG(6),Xy=by.range,ny=dy.range,uy=cy.range,ay=my.range,Vy=Gy.range,hy=Wy.range,ty=iy.range,yy=CG((function(l){l.setUTCDate(1),l.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCMonth(l.getUTCMonth()+Z)}),(function(l,Z){return Z.getUTCMonth()-l.getUTCMonth()+12*(Z.getUTCFullYear()-l.getUTCFullYear())}),(function(l){return l.getUTCMonth()})),Yy=yy.range,ey=CG((function(l){l.setUTCMonth(0,1),l.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCFullYear(l.getUTCFullYear()+Z)}),(function(l,Z){return Z.getUTCFullYear()-l.getUTCFullYear()}),(function(l){return l.getUTCFullYear()}));ey.every=function(l){return isFinite(l=Math.floor(l))&&l>0?CG((function(Z){Z.setUTCFullYear(Math.floor(Z.getUTCFullYear()/l)*l),Z.setUTCMonth(0,1),Z.setUTCHours(0,0,0,0)}),(function(Z,b){Z.setUTCFullYear(Z.getUTCFullYear()+b*l)})):null};var py,oy=ey.range,sy={"-":"",_:" ",0:"0"},Iy=/^\s*\d+/,Ry=/^%/,gy=/[\\^$*+?|[\]().{}]/g;QW({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Ky="%Y-%m-%dT%H:%M:%S.%LZ",Ny=Date.prototype.toISOString?function(l){return l.toISOString()}:l.utcFormat(Ky),Hy=+new Date("2000-01-01T00:00:00.000Z")?function(l){var Z=new Date(l);return isNaN(Z)?null:Z}:l.utcParse(Ky),xy=1e3,Jy=60*xy,Ly=60*Jy,Fy=24*Ly,Cy=7*Fy,Sy=30*Fy,By=365*Fy,ky=EW("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),vy=EW("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),zy=EW("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),My=EW("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),ry=EW("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Ty=EW("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),jy=EW("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),wy=EW("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Uy=EW("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),fy=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(EW),Qy=OW(fy),Py=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(EW),Dy=OW(Py),Ay=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(EW),Ey=OW(Ay),Oy=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(EW),qy=OW(Oy),_y=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(EW),$y=OW(_y),lY=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(EW),ZY=OW(lY),bY=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(EW),dY=OW(bY),cY=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(EW),mY=OW(cY),GY=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(EW),WY=OW(GY),iY=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(EW),XY=OW(iY),nY=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(EW),uY=OW(nY),aY=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(EW),VY=OW(aY),hY=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(EW),tY=OW(hY),yY=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(EW),YY=OW(yY),eY=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(EW),pY=OW(eY),oY=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(EW),sY=OW(oY),IY=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(EW),RY=OW(IY),gY=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(EW),KY=OW(gY),NY=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(EW),HY=OW(NY),xY=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(EW),JY=OW(xY),LY=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(EW),FY=OW(LY),CY=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(EW),SY=OW(CY),BY=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(EW),kY=OW(BY),vY=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(EW),zY=OW(vY),MY=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(EW),rY=OW(MY),TY=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(EW),jY=OW(TY),wY=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(EW),UY=OW(wY),fY=Xu(Ol(300,.5,0),Ol(-240,.5,1)),QY=Xu(Ol(-100,.75,.35),Ol(80,1.5,.8)),PY=Xu(Ol(260,.75,.35),Ol(80,1.5,.8)),DY=Ol(),AY=Sl(),EY=Math.PI/3,OY=2*Math.PI/3,qY=qW(EW("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),_Y=qW(EW("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),$Y=qW(EW("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),le=qW(EW("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),Ze=Math.abs,be=Math.atan2,de=Math.cos,ce=Math.max,me=Math.min,Ge=Math.sin,We=Math.sqrt,ie=1e-12,Xe=Math.PI,ne=Xe/2,ue=2*Xe;Gi.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;default:this._context.lineTo(l,Z)}}};var ae=ti(Wi);hi.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(l,Z){this._curve.point(Z*Math.sin(l),Z*-Math.cos(l))}};var Ve=Array.prototype.slice,he={draw:function(l,Z){var b=Math.sqrt(Z/Xe);l.moveTo(b,0),l.arc(0,0,b,0,ue)}},te={draw:function(l,Z){var b=Math.sqrt(Z/5)/2;l.moveTo(-3*b,-b),l.lineTo(-b,-b),l.lineTo(-b,-3*b),l.lineTo(b,-3*b),l.lineTo(b,-b),l.lineTo(3*b,-b),l.lineTo(3*b,b),l.lineTo(b,b),l.lineTo(b,3*b),l.lineTo(-b,3*b),l.lineTo(-b,b),l.lineTo(-3*b,b),l.closePath()}},ye=Math.sqrt(1/3),Ye=2*ye,ee={draw:function(l,Z){var b=Math.sqrt(Z/Ye),d=b*ye;l.moveTo(0,-b),l.lineTo(d,0),l.lineTo(0,b),l.lineTo(-d,0),l.closePath()}},pe=Math.sin(Xe/10)/Math.sin(7*Xe/10),oe=Math.sin(ue/10)*pe,se=-Math.cos(ue/10)*pe,Ie={draw:function(l,Z){var b=Math.sqrt(.8908130915292852*Z),d=oe*b,c=se*b;l.moveTo(0,-b),l.lineTo(d,c);for(var m=1;m<5;++m){var G=ue*m/5,W=Math.cos(G),i=Math.sin(G);l.lineTo(i*b,-W*b),l.lineTo(W*d-i*c,i*d+W*c)}l.closePath()}},Re={draw:function(l,Z){var b=Math.sqrt(Z),d=-b/2;l.rect(d,d,b,b)}},ge=Math.sqrt(3),Ke={draw:function(l,Z){var b=-Math.sqrt(Z/(3*ge));l.moveTo(0,2*b),l.lineTo(-ge*b,-b),l.lineTo(ge*b,-b),l.closePath()}},Ne=Math.sqrt(3)/2,He=1/Math.sqrt(12),xe=3*(He/2+1),Je={draw:function(l,Z){var b=Math.sqrt(Z/xe),d=b/2,c=b*He,m=d,G=b*He+b,W=-m,i=G;l.moveTo(d,c),l.lineTo(m,G),l.lineTo(W,i),l.lineTo(-.5*d-Ne*c,Ne*d+-.5*c),l.lineTo(-.5*m-Ne*G,Ne*m+-.5*G),l.lineTo(-.5*W-Ne*i,Ne*W+-.5*i),l.lineTo(-.5*d+Ne*c,-.5*c-Ne*d),l.lineTo(-.5*m+Ne*G,-.5*G-Ne*m),l.lineTo(-.5*W+Ne*i,-.5*i-Ne*W),l.closePath()}},Le=[he,te,ee,Re,Ie,Ke,Je];xi.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Hi(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Hi(this,l,Z)}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z}},Ji.prototype={areaStart:Ni,areaEnd:Ni,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._x2=l,this._y2=Z;break;case 1:this._point=2,this._x3=l,this._y3=Z;break;case 2:this._point=3,this._x4=l,this._y4=Z,this._context.moveTo((this._x0+4*this._x1+l)/6,(this._y0+4*this._y1+Z)/6);break;default:Hi(this,l,Z)}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z}},Li.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var b=(this._x0+4*this._x1+l)/6,d=(this._y0+4*this._y1+Z)/6;this._line?this._context.lineTo(b,d):this._context.moveTo(b,d);break;case 3:this._point=4;default:Hi(this,l,Z)}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z}},Fi.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var l=this._x,Z=this._y,b=l.length-1;if(b>0)for(var d,c=l[0],m=Z[0],G=l[b]-c,W=Z[b]-m,i=-1;++i<=b;)d=i/b,this._basis.point(this._beta*l[i]+(1-this._beta)*(c+d*G),this._beta*Z[i]+(1-this._beta)*(m+d*W));this._x=this._y=null,this._basis.lineEnd()},point:function(l,Z){this._x.push(+l),this._y.push(+Z)}};var Fe=function l(Z){function b(l){return 1===Z?new xi(l):new Fi(l,Z)}return b.beta=function(Z){return l(+Z)},b}(.85);Si.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Ci(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2,this._x1=l,this._y1=Z;break;case 2:this._point=3;default:Ci(this,l,Z)}this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var Ce=function l(Z){function b(l){return new Si(l,Z)}return b.tension=function(Z){return l(+Z)},b}(0);Bi.prototype={areaStart:Ni,areaEnd:Ni,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._x3=l,this._y3=Z;break;case 1:this._point=2,this._context.moveTo(this._x4=l,this._y4=Z);break;case 2:this._point=3,this._x5=l,this._y5=Z;break;default:Ci(this,l,Z)}this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var Se=function l(Z){function b(l){return new Bi(l,Z)}return b.tension=function(Z){return l(+Z)},b}(0);ki.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Ci(this,l,Z)}this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var Be=function l(Z){function b(l){return new ki(l,Z)}return b.tension=function(Z){return l(+Z)},b}(0);zi.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){if(l=+l,Z=+Z,this._point){var b=this._x2-l,d=this._y2-Z;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(b*b+d*d,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;break;case 2:this._point=3;default:vi(this,l,Z)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var ke=function l(Z){function b(l){return Z?new zi(l,Z):new Si(l,0)}return b.alpha=function(Z){return l(+Z)},b}(.5);Mi.prototype={areaStart:Ni,areaEnd:Ni,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(l,Z){if(l=+l,Z=+Z,this._point){var b=this._x2-l,d=this._y2-Z;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(b*b+d*d,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=l,this._y3=Z;break;case 1:this._point=2,this._context.moveTo(this._x4=l,this._y4=Z);break;case 2:this._point=3,this._x5=l,this._y5=Z;break;default:vi(this,l,Z)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var ve=function l(Z){function b(l){return Z?new Mi(l,Z):new Bi(l,0)}return b.alpha=function(Z){return l(+Z)},b}(.5);ri.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){if(l=+l,Z=+Z,this._point){var b=this._x2-l,d=this._y2-Z;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(b*b+d*d,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:vi(this,l,Z)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var ze=function l(Z){function b(l){return Z?new ri(l,Z):new ki(l,0)}return b.alpha=function(Z){return l(+Z)},b}(.5);Ti.prototype={areaStart:Ni,areaEnd:Ni,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(l,Z){l=+l,Z=+Z,this._point?this._context.lineTo(l,Z):(this._point=1,this._context.moveTo(l,Z))}},Qi.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:fi(this,this._t0,Ui(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){var b=NaN;if(Z=+Z,(l=+l)!==this._x1||Z!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;break;case 2:this._point=3,fi(this,Ui(this,b=wi(this,l,Z)),b);break;default:fi(this,this._t0,b=wi(this,l,Z))}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z,this._t0=b}}},(Pi.prototype=Object.create(Qi.prototype)).point=function(l,Z){Qi.prototype.point.call(this,Z,l)},Di.prototype={moveTo:function(l,Z){this._context.moveTo(Z,l)},closePath:function(){this._context.closePath()},lineTo:function(l,Z){this._context.lineTo(Z,l)},bezierCurveTo:function(l,Z,b,d,c,m){this._context.bezierCurveTo(Z,l,d,b,m,c)}},Ai.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var l=this._x,Z=this._y,b=l.length;if(b)if(this._line?this._context.lineTo(l[0],Z[0]):this._context.moveTo(l[0],Z[0]),2===b)this._context.lineTo(l[1],Z[1]);else for(var d=Ei(l),c=Ei(Z),m=0,G=1;G<b;++m,++G)this._context.bezierCurveTo(d[0][m],c[0][m],d[1][m],c[1][m],l[G],Z[G]);(this._line||0!==this._line&&1===b)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(l,Z){this._x.push(+l),this._y.push(+Z)}},Oi.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,Z),this._context.lineTo(l,Z);else{var b=this._x*(1-this._t)+l*this._t;this._context.lineTo(b,this._y),this._context.lineTo(b,Z)}}this._x=l,this._y=Z}},mX.prototype={constructor:mX,insert:function(l,Z){var b,d,c;if(l){if(Z.P=l,Z.N=l.N,l.N&&(l.N.P=Z),l.N=Z,l.R){for(l=l.R;l.L;)l=l.L;l.L=Z}else l.R=Z;b=l}else this._?(l=XX(this._),Z.P=null,Z.N=l,l.P=l.L=Z,b=l):(Z.P=Z.N=null,this._=Z,b=null);for(Z.L=Z.R=null,Z.U=b,Z.C=!0,l=Z;b&&b.C;)b===(d=b.U).L?(c=d.R)&&c.C?(b.C=c.C=!1,d.C=!0,l=d):(l===b.R&&(WX(this,b),b=(l=b).U),b.C=!1,d.C=!0,iX(this,d)):(c=d.L)&&c.C?(b.C=c.C=!1,d.C=!0,l=d):(l===b.L&&(iX(this,b),b=(l=b).U),b.C=!1,d.C=!0,WX(this,d)),b=l.U;this._.C=!1},remove:function(l){l.N&&(l.N.P=l.P),l.P&&(l.P.N=l.N),l.N=l.P=null;var Z,b,d,c=l.U,m=l.L,G=l.R;if(b=m?G?XX(G):m:G,c?c.L===l?c.L=b:c.R=b:this._=b,m&&G?(d=b.C,b.C=l.C,b.L=m,m.U=b,b!==G?(c=b.U,b.U=l.U,l=b.R,c.L=l,b.R=G,G.U=b):(b.U=c,c=b,l=b.R)):(d=l.C,l=b),l&&(l.U=c),!d)if(l&&l.C)l.C=!1;else{do{if(l===this._)break;if(l===c.L){if((Z=c.R).C&&(Z.C=!1,c.C=!0,WX(this,c),Z=c.R),Z.L&&Z.L.C||Z.R&&Z.R.C){Z.R&&Z.R.C||(Z.L.C=!1,Z.C=!0,iX(this,Z),Z=c.R),Z.C=c.C,c.C=Z.R.C=!1,WX(this,c),l=this._;break}}else if((Z=c.L).C&&(Z.C=!1,c.C=!0,iX(this,c),Z=c.L),Z.L&&Z.L.C||Z.R&&Z.R.C){Z.L&&Z.L.C||(Z.R.C=!1,Z.C=!0,WX(this,Z),Z=c.L),Z.C=c.C,c.C=Z.L.C=!1,iX(this,c),l=this._;break}Z.C=!0,l=c,c=c.U}while(!l.C);l&&(l.C=!1)}}};var Me,re,Te,je,we,Ue=[],fe=[],Qe=1e-6,Pe=1e-12;HX.prototype={constructor:HX,polygons:function(){var l=this.edges;return this.cells.map((function(Z){var b=Z.halfedges.map((function(b){return yX(Z,l[b])}));return b.data=Z.site.data,b}))},triangles:function(){var l=[],Z=this.edges;return this.cells.forEach((function(b,d){if(m=(c=b.halfedges).length)for(var c,m,G,W=b.site,i=-1,X=Z[c[m-1]],n=X.left===W?X.right:X.left;++i<m;)G=n,n=(X=Z[c[i]]).left===W?X.right:X.left,G&&n&&d<G.index&&d<n.index&&KX(W,G,n)<0&&l.push([W.data,G.data,n.data])})),l},links:function(){return this.edges.filter((function(l){return l.right})).map((function(l){return{source:l.left.data,target:l.right.data}}))},find:function(l,Z,b){for(var d,c,m=this,G=m._found||0,W=m.cells.length;!(c=m.cells[G]);)if(++G>=W)return null;var i=l-c.site[0],X=Z-c.site[1],n=i*i+X*X;do{c=m.cells[d=G],G=null,c.halfedges.forEach((function(b){var d=m.edges[b],W=d.left;if(W!==c.site&&W||(W=d.right)){var i=l-W[0],X=Z-W[1],u=i*i+X*X;u<n&&(n=u,G=W.index)}}))}while(null!==G);return m._found=d,null==b||n<=b*b?c.site:null}},JX.prototype={constructor:JX,scale:function(l){return 1===l?this:new JX(this.k*l,this.x,this.y)},translate:function(l,Z){return 0===l&0===Z?this:new JX(this.k,this.x+this.k*l,this.y+this.k*Z)},apply:function(l){return[l[0]*this.k+this.x,l[1]*this.k+this.y]},applyX:function(l){return l*this.k+this.x},applyY:function(l){return l*this.k+this.y},invert:function(l){return[(l[0]-this.x)/this.k,(l[1]-this.y)/this.k]},invertX:function(l){return(l-this.x)/this.k},invertY:function(l){return(l-this.y)/this.k},rescaleX:function(l){return l.copy().domain(l.range().map(this.invertX,this).map(l.invert,l))},rescaleY:function(l){return l.copy().domain(l.range().map(this.invertY,this).map(l.invert,l))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var De=new JX(1,0,0);LX.prototype=JX.prototype,l.version="5.4.0",l.bisect=TX,l.bisectRight=TX,l.bisectLeft=jX,l.ascending=Z,l.bisector=b,l.cross=function(l,Z,b){var c,m,G,W,i=l.length,X=Z.length,n=new Array(i*X);for(null==b&&(b=d),c=G=0;c<i;++c)for(W=l[c],m=0;m<X;++m,++G)n[G]=b(W,Z[m]);return n},l.descending=function(l,Z){return Z<l?-1:Z>l?1:Z>=l?0:NaN},l.deviation=G,l.extent=W,l.histogram=function(){function l(l){var c,m,G=l.length,W=new Array(G);for(c=0;c<G;++c)W[c]=Z(l[c],c,l);var i=b(W),X=i[0],u=i[1],a=d(W,X,u);Array.isArray(a)||(a=V(X,u,a),a=n(Math.ceil(X/a)*a,Math.floor(u/a)*a,a));for(var h=a.length;a[0]<=X;)a.shift(),--h;for(;a[h-1]>u;)a.pop(),--h;var t,y=new Array(h+1);for(c=0;c<=h;++c)(t=y[c]=[]).x0=c>0?a[c-1]:X,t.x1=c<h?a[c]:u;for(c=0;c<G;++c)X<=(m=W[c])&&m<=u&&y[TX(a,m,0,h)].push(l[c]);return y}var Z=X,b=W,d=h;return l.value=function(b){return arguments.length?(Z="function"==typeof b?b:i(b),l):Z},l.domain=function(Z){return arguments.length?(b="function"==typeof Z?Z:i([Z[0],Z[1]]),l):b},l.thresholds=function(Z){return arguments.length?(d="function"==typeof Z?Z:Array.isArray(Z)?i(UX.call(Z)):i(Z),l):d},l},l.thresholdFreedmanDiaconis=function(l,b,d){return l=fX.call(l,c).sort(Z),Math.ceil((d-b)/(2*(t(l,.75)-t(l,.25))*Math.pow(l.length,-1/3)))},l.thresholdScott=function(l,Z,b){return Math.ceil((b-Z)/(3.5*G(l)*Math.pow(l.length,-1/3)))},l.thresholdSturges=h,l.max=y,l.mean=function(l,Z){var b,d=l.length,m=d,G=-1,W=0;if(null==Z)for(;++G<d;)isNaN(b=c(l[G]))?--m:W+=b;else for(;++G<d;)isNaN(b=c(Z(l[G],G,l)))?--m:W+=b;if(m)return W/m},l.median=function(l,b){var d,m=l.length,G=-1,W=[];if(null==b)for(;++G<m;)isNaN(d=c(l[G]))||W.push(d);else for(;++G<m;)isNaN(d=c(b(l[G],G,l)))||W.push(d);return t(W.sort(Z),.5)},l.merge=Y,l.min=e,l.pairs=function(l,Z){null==Z&&(Z=d);for(var b=0,c=l.length-1,m=l[0],G=new Array(c<0?0:c);b<c;)G[b]=Z(m,m=l[++b]);return G},l.permute=function(l,Z){for(var b=Z.length,d=new Array(b);b--;)d[b]=l[Z[b]];return d},l.quantile=t,l.range=n,l.scan=function(l,b){if(d=l.length){var d,c,m=0,G=0,W=l[G];for(null==b&&(b=Z);++m<d;)(b(c=l[m],W)<0||0!==b(W,W))&&(W=c,G=m);return 0===b(W,W)?G:void 0}},l.shuffle=function(l,Z,b){for(var d,c,m=(null==b?l.length:b)-(Z=null==Z?0:+Z);m;)c=Math.random()*m--|0,d=l[m+Z],l[m+Z]=l[c+Z],l[c+Z]=d;return l},l.sum=function(l,Z){var b,d=l.length,c=-1,m=0;if(null==Z)for(;++c<d;)(b=+l[c])&&(m+=b);else for(;++c<d;)(b=+Z(l[c],c,l))&&(m+=b);return m},l.ticks=u,l.tickIncrement=a,l.tickStep=V,l.transpose=p,l.variance=m,l.zip=function(){return p(arguments)},l.axisTop=function(l){return K(EX,l)},l.axisRight=function(l){return K(OX,l)},l.axisBottom=function(l){return K(qX,l)},l.axisLeft=function(l){return K(_X,l)},l.brush=function(){return lb(Wa)},l.brushX=function(){return lb(ma)},l.brushY=function(){return lb(Ga)},l.brushSelection=function(l){var Z=l.__brush;return Z?Z.dim.output(Z.selection):null},l.chord=function(){function l(l){var m,G,W,i,X,u,a=l.length,V=[],h=n(a),t=[],y=[],Y=y.groups=new Array(a),e=new Array(a*a);for(m=0,X=-1;++X<a;){for(G=0,u=-1;++u<a;)G+=l[X][u];V.push(G),t.push(n(a)),m+=G}for(b&&h.sort((function(l,Z){return b(V[l],V[Z])})),d&&t.forEach((function(Z,b){Z.sort((function(Z,c){return d(l[b][Z],l[b][c])}))})),i=(m=ea(0,Ya-Z*a)/m)?Z:Ya/a,G=0,X=-1;++X<a;){for(W=G,u=-1;++u<a;){var p=h[X],o=t[p][u],s=l[p][o],I=G,R=G+=s*m;e[o*a+p]={index:p,subindex:o,startAngle:I,endAngle:R,value:s}}Y[p]={index:p,startAngle:W,endAngle:G,value:V[p]},G+=i}for(X=-1;++X<a;)for(u=X-1;++u<a;){var g=e[u*a+X],K=e[X*a+u];(g.value||K.value)&&y.push(g.value<K.value?{source:K,target:g}:{source:g,target:K})}return c?y.sort(c):y}var Z=0,b=null,d=null,c=null;return l.padAngle=function(b){return arguments.length?(Z=ea(0,b),l):Z},l.sortGroups=function(Z){return arguments.length?(b=Z,l):b},l.sortSubgroups=function(Z){return arguments.length?(d=Z,l):d},l.sortChords=function(Z){return arguments.length?(null==Z?c=null:(c=function(l){return function(Z,b){return l(Z.source.value+Z.target.value,b.source.value+b.target.value)}}(Z))._=Z,l):c&&c._},l},l.ribbon=function(){function l(){var l,W=pa.call(arguments),i=Z.apply(this,W),X=b.apply(this,W),n=+d.apply(this,(W[0]=i,W)),u=c.apply(this,W)-ya,a=m.apply(this,W)-ya,V=n*Va(u),h=n*ha(u),t=+d.apply(this,(W[0]=X,W)),y=c.apply(this,W)-ya,Y=m.apply(this,W)-ya;if(G||(G=l=db()),G.moveTo(V,h),G.arc(0,0,n,u,a),u===y&&a===Y||(G.quadraticCurveTo(0,0,t*Va(y),t*ha(y)),G.arc(0,0,t,y,Y)),G.quadraticCurveTo(0,0,V,h),G.closePath(),l)return G=null,l+""||null}var Z=cb,b=mb,d=Gb,c=Wb,m=ib,G=null;return l.radius=function(Z){return arguments.length?(d="function"==typeof Z?Z:Zb(+Z),l):d},l.startAngle=function(Z){return arguments.length?(c="function"==typeof Z?Z:Zb(+Z),l):c},l.endAngle=function(Z){return arguments.length?(m="function"==typeof Z?Z:Zb(+Z),l):m},l.source=function(b){return arguments.length?(Z=b,l):Z},l.target=function(Z){return arguments.length?(b=Z,l):b},l.context=function(Z){return arguments.length?(G=null==Z?null:Z,l):G},l},l.nest=function(){function l(d,m,G,W){if(m>=c.length)return null!=Z&&d.sort(Z),null!=b?b(d):d;for(var i,X,n,u=-1,a=d.length,V=c[m++],h=nb(),t=G();++u<a;)(n=h.get(i=V(X=d[u])+""))?n.push(X):h.set(i,[X]);return h.each((function(Z,b){W(t,b,l(Z,m,G,W))})),t}var Z,b,d,c=[],m=[];return d={object:function(Z){return l(Z,0,ub,ab)},map:function(Z){return l(Z,0,Vb,hb)},entries:function(Z){return function l(Z,d){if(++d>c.length)return Z;var G,W=m[d-1];return null!=b&&d>=c.length?G=Z.entries():(G=[],Z.each((function(Z,b){G.push({key:b,values:l(Z,d)})}))),null!=W?G.sort((function(l,Z){return W(l.key,Z.key)})):G}(l(Z,0,Vb,hb),0)},key:function(l){return c.push(l),d},sortKeys:function(l){return m[c.length-1]=l,d},sortValues:function(l){return Z=l,d},rollup:function(l){return b=l,d}}},l.set=yb,l.map=nb,l.keys=function(l){var Z=[];for(var b in l)Z.push(b);return Z},l.values=function(l){var Z=[];for(var b in l)Z.push(l[b]);return Z},l.entries=function(l){var Z=[];for(var b in l)Z.push({key:b,value:l[b]});return Z},l.color=Jl,l.rgb=Sl,l.hsl=zl,l.lab=jl,l.hcl=Al,l.lch=function(l,Z,b,d){return 1===arguments.length?Dl(l):new El(b,Z,l,null==d?1:d)},l.gray=function(l,Z){return new wl(l,0,0,null==Z?1:Z)},l.cubehelix=Ol,l.contours=sb,l.contourDensity=function(){function l(l){var b=new Float32Array(t*Y),d=new Float32Array(t*Y);l.forEach((function(l,Z,d){var c=G(l,Z,d)+h>>a,m=W(l,Z,d)+h>>a;c>=0&&c<t&&m>=0&&m<Y&&++b[c+m*t]})),Ib({width:t,height:Y,data:b},{width:t,height:Y,data:d},u>>a),Rb({width:t,height:Y,data:d},{width:t,height:Y,data:b},u>>a),Ib({width:t,height:Y,data:b},{width:t,height:Y,data:d},u>>a),Rb({width:t,height:Y,data:d},{width:t,height:Y,data:b},u>>a),Ib({width:t,height:Y,data:b},{width:t,height:Y,data:d},u>>a),Rb({width:t,height:Y,data:d},{width:t,height:Y,data:b},u>>a);var c=e(b);if(!Array.isArray(c)){var m=y(b);c=V(0,m,c),(c=n(0,Math.floor(m/c)*c,c)).shift()}return sb().thresholds(c).size([t,Y])(b).map(Z)}function Z(l){return l.value*=Math.pow(2,-2*a),l.coordinates.forEach(b),l}function b(l){l.forEach(d)}function d(l){l.forEach(c)}function c(l){l[0]=l[0]*Math.pow(2,a)-h,l[1]=l[1]*Math.pow(2,a)-h}function m(){return t=i+2*(h=3*u)>>a,Y=X+2*h>>a,l}var G=gb,W=Kb,i=960,X=500,u=20,a=2,h=3*u,t=i+2*h>>a,Y=X+2*h>>a,e=eb(20);return l.x=function(Z){return arguments.length?(G="function"==typeof Z?Z:eb(+Z),l):G},l.y=function(Z){return arguments.length?(W="function"==typeof Z?Z:eb(+Z),l):W},l.size=function(l){if(!arguments.length)return[i,X];var Z=Math.ceil(l[0]),b=Math.ceil(l[1]);if(!(Z>=0||Z>=0))throw new Error("invalid size");return i=Z,X=b,m()},l.cellSize=function(l){if(!arguments.length)return 1<<a;if(!((l=+l)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(l)/Math.LN2),m()},l.thresholds=function(Z){return arguments.length?(e="function"==typeof Z?Z:Array.isArray(Z)?eb(ga.call(Z)):eb(Z),l):e},l.bandwidth=function(l){if(!arguments.length)return Math.sqrt(u*(u+1));if(!((l=+l)>=0))throw new Error("invalid bandwidth");return u=Math.round((Math.sqrt(4*l*l+1)-1)/2),m()},l},l.dispatch=N,l.drag=function(){function Z(l){l.on("mousedown.drag",b).filter(y).on("touchstart.drag",m).on("touchmove.drag",G).on("touchend.drag touchcancel.drag",W).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function b(){if(!a&&V.apply(this,arguments)){var Z=i("mouse",h.apply(this,arguments),hl,this,arguments);Z&&(Xl(l.event.view).on("mousemove.drag",d,!0).on("mouseup.drag",c,!0),el(l.event.view),yl(),u=!1,X=l.event.clientX,n=l.event.clientY,Z("start"))}}function d(){if(Yl(),!u){var Z=l.event.clientX-X,b=l.event.clientY-n;u=Z*Z+b*b>o}Y.mouse("drag")}function c(){Xl(l.event.view).on("mousemove.drag mouseup.drag",null),pl(l.event.view,u),Yl(),Y.mouse("end")}function m(){if(V.apply(this,arguments)){var Z,b,d=l.event.changedTouches,c=h.apply(this,arguments),m=d.length;for(Z=0;Z<m;++Z)(b=i(d[Z].identifier,c,tl,this,arguments))&&(yl(),b("start"))}}function G(){var Z,b,d=l.event.changedTouches,c=d.length;for(Z=0;Z<c;++Z)(b=Y[d[Z].identifier])&&(Yl(),b("drag"))}function W(){var Z,b,d=l.event.changedTouches,c=d.length;for(a&&clearTimeout(a),a=setTimeout((function(){a=null}),500),Z=0;Z<c;++Z)(b=Y[d[Z].identifier])&&(yl(),b("end"))}function i(b,d,c,m,G){var W,i,X,n=c(d,b),u=e.copy();if(ml(new sl(Z,"beforestart",W,b,p,n[0],n[1],0,0,u),(function(){return null!=(l.event.subject=W=t.apply(m,G))&&(i=W.x-n[0]||0,X=W.y-n[1]||0,!0)})))return function l(a){var V,h=n;switch(a){case"start":Y[b]=l,V=p++;break;case"end":delete Y[b],--p;case"drag":n=c(d,b),V=p}ml(new sl(Z,a,W,b,V,n[0]+i,n[1]+X,n[0]-h[0],n[1]-h[1],u),u.apply,u,[a,m,G])}}var X,n,u,a,V=Il,h=Rl,t=gl,y=Kl,Y={},e=N("start","drag","end"),p=0,o=0;return Z.filter=function(l){return arguments.length?(V="function"==typeof l?l:ol(!!l),Z):V},Z.container=function(l){return arguments.length?(h="function"==typeof l?l:ol(l),Z):h},Z.subject=function(l){return arguments.length?(t="function"==typeof l?l:ol(l),Z):t},Z.touchable=function(l){return arguments.length?(y="function"==typeof l?l:ol(!!l),Z):y},Z.on=function(){var l=e.on.apply(e,arguments);return l===e?Z:l},Z.clickDistance=function(l){return arguments.length?(o=(l=+l)*l,Z):Math.sqrt(o)},Z},l.dragDisable=el,l.dragEnable=pl,l.dsvFormat=Hb,l.csvParse=Ca,l.csvParseRows=Sa,l.csvFormat=Ba,l.csvFormatRows=ka,l.tsvParse=za,l.tsvParseRows=Ma,l.tsvFormat=ra,l.tsvFormatRows=Ta,l.easeLinear=function(l){return+l},l.easeQuad=rZ,l.easeQuadIn=function(l){return l*l},l.easeQuadOut=function(l){return l*(2-l)},l.easeQuadInOut=rZ,l.easeCubic=TZ,l.easeCubicIn=function(l){return l*l*l},l.easeCubicOut=function(l){return--l*l*l+1},l.easeCubicInOut=TZ,l.easePoly=Su,l.easePolyIn=Fu,l.easePolyOut=Cu,l.easePolyInOut=Su,l.easeSin=jZ,l.easeSinIn=function(l){return 1-Math.cos(l*ku)},l.easeSinOut=function(l){return Math.sin(l*ku)},l.easeSinInOut=jZ,l.easeExp=wZ,l.easeExpIn=function(l){return Math.pow(2,10*l-10)},l.easeExpOut=function(l){return 1-Math.pow(2,-10*l)},l.easeExpInOut=wZ,l.easeCircle=UZ,l.easeCircleIn=function(l){return 1-Math.sqrt(1-l*l)},l.easeCircleOut=function(l){return Math.sqrt(1- --l*l)},l.easeCircleInOut=UZ,l.easeBounce=fZ,l.easeBounceIn=function(l){return 1-fZ(1-l)},l.easeBounceOut=fZ,l.easeBounceInOut=function(l){return((l*=2)<=1?1-fZ(1-l):fZ(l-1)+1)/2},l.easeBack=Au,l.easeBackIn=Pu,l.easeBackOut=Du,l.easeBackInOut=Au,l.easeElastic=qu,l.easeElasticIn=Ou,l.easeElasticOut=qu,l.easeElasticInOut=_u,l.blob=function(l,Z){return fetch(l,Z).then(xb)},l.buffer=function(l,Z){return fetch(l,Z).then(Jb)},l.dsv=function(l,Z,b,d){3===arguments.length&&"function"==typeof b&&(d=b,b=void 0);var c=Hb(l);return Fb(Z,b).then((function(l){return c.parse(l,d)}))},l.csv=ja,l.tsv=wa,l.image=function(l,Z){return new Promise((function(b,d){var c=new Image;for(var m in Z)c[m]=Z[m];c.onerror=d,c.onload=function(){b(c)},c.src=l}))},l.json=function(l,Z){return fetch(l,Z).then(Sb)},l.text=Fb,l.xml=Ua,l.html=fa,l.svg=Qa,l.forceCenter=function(l,Z){function b(){var b,c,m=d.length,G=0,W=0;for(b=0;b<m;++b)G+=(c=d[b]).x,W+=c.y;for(G=G/m-l,W=W/m-Z,b=0;b<m;++b)(c=d[b]).x-=G,c.y-=W}var d;return null==l&&(l=0),null==Z&&(Z=0),b.initialize=function(l){d=l},b.x=function(Z){return arguments.length?(l=+Z,b):l},b.y=function(l){return arguments.length?(Z=+l,b):Z},b},l.forceCollide=function(l){function Z(){for(var l,Z,d,i,X,n,u,a=c.length,V=0;V<W;++V)for(Z=jb(c,fb,Qb).visitAfter(b),l=0;l<a;++l)d=c[l],n=m[d.index],u=n*n,i=d.x+d.vx,X=d.y+d.vy,Z.visit((function(l,Z,b,c,m){var W=l.data,a=l.r,V=n+a;if(!W)return Z>i+V||c<i-V||b>X+V||m<X-V;if(W.index>d.index){var h=i-W.x-W.vx,t=X-W.y-W.vy,y=h*h+t*t;y<V*V&&(0===h&&(y+=(h=vb())*h),0===t&&(y+=(t=vb())*t),y=(V-(y=Math.sqrt(y)))/y*G,d.vx+=(h*=y)*(V=(a*=a)/(u+a)),d.vy+=(t*=y)*V,W.vx-=h*(V=1-V),W.vy-=t*V)}}))}function b(l){if(l.data)return l.r=m[l.data.index];for(var Z=l.r=0;Z<4;++Z)l[Z]&&l[Z].r>l.r&&(l.r=l[Z].r)}function d(){if(c){var Z,b,d=c.length;for(m=new Array(d),Z=0;Z<d;++Z)b=c[Z],m[b.index]=+l(b,Z,c)}}var c,m,G=1,W=1;return"function"!=typeof l&&(l=kb(null==l?1:+l)),Z.initialize=function(l){c=l,d()},Z.iterations=function(l){return arguments.length?(W=+l,Z):W},Z.strength=function(l){return arguments.length?(G=+l,Z):G},Z.radius=function(b){return arguments.length?(l="function"==typeof b?b:kb(+b),d(),Z):l},Z},l.forceLink=function(l){function Z(Z){for(var b=0,d=l.length;b<V;++b)for(var c,W,i,n,u,a,h,t=0;t<d;++t)W=(c=l[t]).source,n=(i=c.target).x+i.vx-W.x-W.vx||vb(),u=i.y+i.vy-W.y-W.vy||vb(),n*=a=((a=Math.sqrt(n*n+u*u))-G[t])/a*Z*m[t],u*=a,i.vx-=n*(h=X[t]),i.vy-=u*h,W.vx+=n*(h=1-h),W.vy+=u*h}function b(){if(W){var Z,b,u=W.length,a=l.length,V=nb(W,n);for(Z=0,i=new Array(u);Z<a;++Z)(b=l[Z]).index=Z,"object"!=typeof b.source&&(b.source=Db(V,b.source)),"object"!=typeof b.target&&(b.target=Db(V,b.target)),i[b.source.index]=(i[b.source.index]||0)+1,i[b.target.index]=(i[b.target.index]||0)+1;for(Z=0,X=new Array(a);Z<a;++Z)b=l[Z],X[Z]=i[b.source.index]/(i[b.source.index]+i[b.target.index]);m=new Array(a),d(),G=new Array(a),c()}}function d(){if(W)for(var Z=0,b=l.length;Z<b;++Z)m[Z]=+u(l[Z],Z,l)}function c(){if(W)for(var Z=0,b=l.length;Z<b;++Z)G[Z]=+a(l[Z],Z,l)}var m,G,W,i,X,n=Pb,u=function(l){return 1/Math.min(i[l.source.index],i[l.target.index])},a=kb(30),V=1;return null==l&&(l=[]),Z.initialize=function(l){W=l,b()},Z.links=function(d){return arguments.length?(l=d,b(),Z):l},Z.id=function(l){return arguments.length?(n=l,Z):n},Z.iterations=function(l){return arguments.length?(V=+l,Z):V},Z.strength=function(l){return arguments.length?(u="function"==typeof l?l:kb(+l),d(),Z):u},Z.distance=function(l){return arguments.length?(a="function"==typeof l?l:kb(+l),c(),Z):a},Z},l.forceManyBody=function(){function l(l){var Z,W=c.length,i=jb(c,Ab,Eb).visitAfter(b);for(G=l,Z=0;Z<W;++Z)m=c[Z],i.visit(d)}function Z(){if(c){var l,Z,b=c.length;for(W=new Array(b),l=0;l<b;++l)Z=c[l],W[Z.index]=+i(Z,l,c)}}function b(l){var Z,b,d,c,m,G=0,i=0;if(l.length){for(d=c=m=0;m<4;++m)(Z=l[m])&&(b=Math.abs(Z.value))&&(G+=Z.value,i+=b,d+=b*Z.x,c+=b*Z.y);l.x=d/i,l.y=c/i}else{(Z=l).x=Z.data.x,Z.y=Z.data.y;do{G+=W[Z.data.index]}while(Z=Z.next)}l.value=G}function d(l,Z,b,d){if(!l.value)return!0;var c=l.x-m.x,i=l.y-m.y,a=d-Z,V=c*c+i*i;if(a*a/u<V)return V<n&&(0===c&&(V+=(c=vb())*c),0===i&&(V+=(i=vb())*i),V<X&&(V=Math.sqrt(X*V)),m.vx+=c*l.value*G/V,m.vy+=i*l.value*G/V),!0;if(!(l.length||V>=n)){(l.data!==m||l.next)&&(0===c&&(V+=(c=vb())*c),0===i&&(V+=(i=vb())*i),V<X&&(V=Math.sqrt(X*V)));do{l.data!==m&&(a=W[l.data.index]*G/V,m.vx+=c*a,m.vy+=i*a)}while(l=l.next)}}var c,m,G,W,i=kb(-30),X=1,n=1/0,u=.81;return l.initialize=function(l){c=l,Z()},l.strength=function(b){return arguments.length?(i="function"==typeof b?b:kb(+b),Z(),l):i},l.distanceMin=function(Z){return arguments.length?(X=Z*Z,l):Math.sqrt(X)},l.distanceMax=function(Z){return arguments.length?(n=Z*Z,l):Math.sqrt(n)},l.theta=function(Z){return arguments.length?(u=Z*Z,l):Math.sqrt(u)},l},l.forceRadial=function(l,Z,b){function d(l){for(var d=0,c=m.length;d<c;++d){var i=m[d],X=i.x-Z||1e-6,n=i.y-b||1e-6,u=Math.sqrt(X*X+n*n),a=(W[d]-u)*G[d]*l/u;i.vx+=X*a,i.vy+=n*a}}function c(){if(m){var Z,b=m.length;for(G=new Array(b),W=new Array(b),Z=0;Z<b;++Z)W[Z]=+l(m[Z],Z,m),G[Z]=isNaN(W[Z])?0:+i(m[Z],Z,m)}}var m,G,W,i=kb(.1);return"function"!=typeof l&&(l=kb(+l)),null==Z&&(Z=0),null==b&&(b=0),d.initialize=function(l){m=l,c()},d.strength=function(l){return arguments.length?(i="function"==typeof l?l:kb(+l),c(),d):i},d.radius=function(Z){return arguments.length?(l="function"==typeof Z?Z:kb(+Z),c(),d):l},d.x=function(l){return arguments.length?(Z=+l,d):Z},d.y=function(l){return arguments.length?(b=+l,d):b},d},l.forceSimulation=function(l){function Z(){b(),V.call("tick",m),G<W&&(a.stop(),V.call("end",m))}function b(){var Z,b,d=l.length;for(G+=(X-G)*i,u.each((function(l){l(G)})),Z=0;Z<d;++Z)null==(b=l[Z]).fx?b.x+=b.vx*=n:(b.x=b.fx,b.vx=0),null==b.fy?b.y+=b.vy*=n:(b.y=b.fy,b.vy=0)}function d(){for(var Z,b=0,d=l.length;b<d;++b){if((Z=l[b]).index=b,isNaN(Z.x)||isNaN(Z.y)){var c=10*Math.sqrt(b),m=b*Da;Z.x=c*Math.cos(m),Z.y=c*Math.sin(m)}(isNaN(Z.vx)||isNaN(Z.vy))&&(Z.vx=Z.vy=0)}}function c(Z){return Z.initialize&&Z.initialize(l),Z}var m,G=1,W=.001,i=1-Math.pow(W,1/300),X=0,n=.6,u=nb(),a=RZ(Z),V=N("tick","end");return null==l&&(l=[]),d(),m={tick:b,restart:function(){return a.restart(Z),m},stop:function(){return a.stop(),m},nodes:function(Z){return arguments.length?(l=Z,d(),u.each(c),m):l},alpha:function(l){return arguments.length?(G=+l,m):G},alphaMin:function(l){return arguments.length?(W=+l,m):W},alphaDecay:function(l){return arguments.length?(i=+l,m):+i},alphaTarget:function(l){return arguments.length?(X=+l,m):X},velocityDecay:function(l){return arguments.length?(n=1-l,m):1-n},force:function(l,Z){return arguments.length>1?(null==Z?u.remove(l):u.set(l,c(Z)),m):u.get(l)},find:function(Z,b,d){var c,m,G,W,i,X=0,n=l.length;for(null==d?d=1/0:d*=d,X=0;X<n;++X)(G=(c=Z-(W=l[X]).x)*c+(m=b-W.y)*m)<d&&(i=W,d=G);return i},on:function(l,Z){return arguments.length>1?(V.on(l,Z),m):V.on(l)}}},l.forceX=function(l){function Z(l){for(var Z,b=0,G=d.length;b<G;++b)(Z=d[b]).vx+=(m[b]-Z.x)*c[b]*l}function b(){if(d){var Z,b=d.length;for(c=new Array(b),m=new Array(b),Z=0;Z<b;++Z)c[Z]=isNaN(m[Z]=+l(d[Z],Z,d))?0:+G(d[Z],Z,d)}}var d,c,m,G=kb(.1);return"function"!=typeof l&&(l=kb(null==l?0:+l)),Z.initialize=function(l){d=l,b()},Z.strength=function(l){return arguments.length?(G="function"==typeof l?l:kb(+l),b(),Z):G},Z.x=function(d){return arguments.length?(l="function"==typeof d?d:kb(+d),b(),Z):l},Z},l.forceY=function(l){function Z(l){for(var Z,b=0,G=d.length;b<G;++b)(Z=d[b]).vy+=(m[b]-Z.y)*c[b]*l}function b(){if(d){var Z,b=d.length;for(c=new Array(b),m=new Array(b),Z=0;Z<b;++Z)c[Z]=isNaN(m[Z]=+l(d[Z],Z,d))?0:+G(d[Z],Z,d)}}var d,c,m,G=kb(.1);return"function"!=typeof l&&(l=kb(null==l?0:+l)),Z.initialize=function(l){d=l,b()},Z.strength=function(l){return arguments.length?(G="function"==typeof l?l:kb(+l),b(),Z):G},Z.y=function(d){return arguments.length?(l="function"==typeof d?d:kb(+d),b(),Z):l},Z},l.formatDefaultLocale=dd,l.formatLocale=bd,l.formatSpecifier=_b,l.precisionFixed=cd,l.precisionPrefix=md,l.precisionRound=Gd,l.geoArea=function(l){return $V.reset(),Yd(l,lh),2*$V},l.geoBounds=function(l){var Z,b,d,c,m,G,W;if(WV=GV=-(cV=mV=1/0),aV=[],Yd(l,bh),b=aV.length){for(aV.sort(zd),Z=1,m=[d=aV[0]];Z<b;++Z)Md(d,(c=aV[Z])[0])||Md(d,c[1])?(vd(d[0],c[1])>vd(d[0],d[1])&&(d[1]=c[1]),vd(c[0],d[1])>vd(d[0],d[1])&&(d[0]=c[0])):m.push(d=c);for(G=-1/0,Z=0,d=m[b=m.length-1];Z<=b;d=c,++Z)c=m[Z],(W=vd(d[1],c[0]))>G&&(G=W,cV=c[0],GV=d[1])}return aV=VV=null,cV===1/0||mV===1/0?[[NaN,NaN],[NaN,NaN]]:[[cV,mV],[GV,WV]]},l.geoCentroid=function(l){hV=tV=yV=YV=eV=pV=oV=sV=IV=RV=gV=0,Yd(l,dh);var Z=IV,b=RV,d=gV,c=Z*Z+b*b+d*d;return c<1e-12&&(Z=pV,b=oV,d=sV,tV<FV&&(Z=yV,b=YV,d=eV),(c=Z*Z+b*b+d*d)<1e-12)?[NaN,NaN]:[TV(b,Z)*vV,ud(d/AV(c))*vV]},l.geoCircle=function(){function l(){var l=d.apply(this,arguments),W=c.apply(this,arguments)*zV,i=m.apply(this,arguments)*zV;return Z=[],b=_d(-l[0]*zV,-l[1]*zV,0).invert,dc(G,W,i,1),l={type:"Polygon",coordinates:[Z]},Z=b=null,l}var Z,b,d=Ed([0,0]),c=Ed(90),m=Ed(6),G={point:function(l,d){Z.push(l=b(l,d)),l[0]*=vV,l[1]*=vV}};return l.center=function(Z){return arguments.length?(d="function"==typeof Z?Z:Ed([+Z[0],+Z[1]]),l):d},l.radius=function(Z){return arguments.length?(c="function"==typeof Z?Z:Ed(+Z),l):c},l.precision=function(Z){return arguments.length?(m="function"==typeof Z?Z:Ed(+Z),l):m},l},l.geoClipAntimeridian=yh,l.geoClipCircle=hc,l.geoClipExtent=function(){var l,Z,b,d=0,c=0,m=960,G=500;return b={stream:function(b){return l&&Z===b?l:l=tc(d,c,m,G)(Z=b)},extent:function(W){return arguments.length?(d=+W[0][0],c=+W[0][1],m=+W[1][0],G=+W[1][1],l=Z=null,b):[[d,c],[m,G]]}}},l.geoClipRectangle=tc,l.geoContains=function(l,Z){return(l&&Rh.hasOwnProperty(l.type)?Rh[l.type]:sc)(l,Z)},l.geoDistance=oc,l.geoGraticule=Jc,l.geoGraticule10=function(){return Jc()()},l.geoInterpolate=function(l,Z){var b=l[0]*zV,d=l[1]*zV,c=Z[0]*zV,m=Z[1]*zV,G=jV(d),W=PV(d),i=jV(m),X=PV(m),n=G*jV(b),u=G*PV(b),a=i*jV(c),V=i*PV(c),h=2*ud(AV(ad(m-d)+G*i*ad(c-b))),t=PV(h),y=h?function(l){var Z=PV(l*=h)/t,b=PV(h-l)/t,d=b*n+Z*a,c=b*u+Z*V,m=b*W+Z*X;return[TV(c,d)*vV,TV(m,AV(d*d+c*c))*vV]}:function(){return[b*vV,d*vV]};return y.distance=h,y},l.geoLength=pc,l.geoPath=function(l,Z){function b(l){return l&&("function"==typeof m&&c.pointRadius(+m.apply(this,arguments)),Yd(l,d(c))),c.result()}var d,c,m=4.5;return b.area=function(l){return Yd(l,d(Hh)),Hh.result()},b.measure=function(l){return Yd(l,d(Eh)),Eh.result()},b.bounds=function(l){return Yd(l,d(Ch)),Ch.result()},b.centroid=function(l){return Yd(l,d(wh)),wh.result()},b.projection=function(Z){return arguments.length?(d=null==Z?(l=null,Lc):(l=Z).stream,b):l},b.context=function(l){return arguments.length?(c=null==l?(Z=null,new Dc):new fc(Z=l),"function"!=typeof m&&c.pointRadius(m),b):Z},b.pointRadius=function(l){return arguments.length?(m="function"==typeof l?l:(c.pointRadius(+l),+l),b):m},b.projection(l).context(Z)},l.geoAlbers=Xm,l.geoAlbersUsa=function(){function l(l){var Z=l[0],b=l[1];return W=null,c.point(Z,b),W||(m.point(Z,b),W)||(G.point(Z,b),W)}function Z(){return b=d=null,l}var b,d,c,m,G,W,i=Xm(),X=im().rotate([154,0]).center([-2,58.5]).parallels([55,65]),n=im().rotate([157,0]).center([-3,19.9]).parallels([8,18]),u={point:function(l,Z){W=[l,Z]}};return l.invert=function(l){var Z=i.scale(),b=i.translate(),d=(l[0]-b[0])/Z,c=(l[1]-b[1])/Z;return(c>=.12&&c<.234&&d>=-.425&&d<-.214?X:c>=.166&&c<.234&&d>=-.214&&d<-.115?n:i).invert(l)},l.stream=function(l){return b&&d===l?b:b=function(l){var Z=l.length;return{point:function(b,d){for(var c=-1;++c<Z;)l[c].point(b,d)},sphere:function(){for(var b=-1;++b<Z;)l[b].sphere()},lineStart:function(){for(var b=-1;++b<Z;)l[b].lineStart()},lineEnd:function(){for(var b=-1;++b<Z;)l[b].lineEnd()},polygonStart:function(){for(var b=-1;++b<Z;)l[b].polygonStart()},polygonEnd:function(){for(var b=-1;++b<Z;)l[b].polygonEnd()}}}([i.stream(d=l),X.stream(l),n.stream(l)])},l.precision=function(l){return arguments.length?(i.precision(l),X.precision(l),n.precision(l),Z()):i.precision()},l.scale=function(Z){return arguments.length?(i.scale(Z),X.scale(.35*Z),n.scale(Z),l.translate(i.translate())):i.scale()},l.translate=function(l){if(!arguments.length)return i.translate();var b=i.scale(),d=+l[0],W=+l[1];return c=i.translate(l).clipExtent([[d-.455*b,W-.238*b],[d+.455*b,W+.238*b]]).stream(u),m=X.translate([d-.307*b,W+.201*b]).clipExtent([[d-.425*b+FV,W+.12*b+FV],[d-.214*b-FV,W+.234*b-FV]]).stream(u),G=n.translate([d-.205*b,W+.212*b]).clipExtent([[d-.214*b+FV,W+.166*b+FV],[d-.115*b-FV,W+.234*b-FV]]).stream(u),Z()},l.fitExtent=function(Z,b){return _c(l,Z,b)},l.fitSize=function(Z,b){return $c(l,Z,b)},l.fitWidth=function(Z,b){return lm(l,Z,b)},l.fitHeight=function(Z,b){return Zm(l,Z,b)},l.scale(1070)},l.geoAzimuthalEqualArea=function(){return cm($h).scale(124.75).clipAngle(179.999)},l.geoAzimuthalEqualAreaRaw=$h,l.geoAzimuthalEquidistant=function(){return cm(lt).scale(79.4188).clipAngle(179.999)},l.geoAzimuthalEquidistantRaw=lt,l.geoConicConformal=function(){return Gm(tm).scale(109.5).parallels([30,30])},l.geoConicConformalRaw=tm,l.geoConicEqualArea=im,l.geoConicEqualAreaRaw=Wm,l.geoConicEquidistant=function(){return Gm(Ym).scale(131.154).center([0,13.9389])},l.geoConicEquidistantRaw=Ym,l.geoEquirectangular=function(){return cm(ym).scale(152.63)},l.geoEquirectangularRaw=ym,l.geoGnomonic=function(){return cm(em).scale(144.049).clipAngle(60)},l.geoGnomonicRaw=em,l.geoIdentity=function(){function l(){return c=m=null,G}var Z,b,d,c,m,G,W=1,i=0,X=0,n=1,u=1,a=Lc,V=null,h=Lc;return G={stream:function(l){return c&&m===l?c:c=a(h(m=l))},postclip:function(c){return arguments.length?(h=c,V=Z=b=d=null,l()):h},clipExtent:function(c){return arguments.length?(h=null==c?(V=Z=b=d=null,Lc):tc(V=+c[0][0],Z=+c[0][1],b=+c[1][0],d=+c[1][1]),l()):null==V?null:[[V,Z],[b,d]]},scale:function(Z){return arguments.length?(a=pm((W=+Z)*n,W*u,i,X),l()):W},translate:function(Z){return arguments.length?(a=pm(W*n,W*u,i=+Z[0],X=+Z[1]),l()):[i,X]},reflectX:function(Z){return arguments.length?(a=pm(W*(n=Z?-1:1),W*u,i,X),l()):n<0},reflectY:function(Z){return arguments.length?(a=pm(W*n,W*(u=Z?-1:1),i,X),l()):u<0},fitExtent:function(l,Z){return _c(G,l,Z)},fitSize:function(l,Z){return $c(G,l,Z)},fitWidth:function(l,Z){return lm(G,l,Z)},fitHeight:function(l,Z){return Zm(G,l,Z)}}},l.geoProjection=cm,l.geoProjectionMutator=mm,l.geoMercator=function(){return Vm(am).scale(961/kV)},l.geoMercatorRaw=am,l.geoNaturalEarth1=function(){return cm(om).scale(175.295)},l.geoNaturalEarth1Raw=om,l.geoOrthographic=function(){return cm(sm).scale(249.5).clipAngle(90+FV)},l.geoOrthographicRaw=sm,l.geoStereographic=function(){return cm(Im).scale(250).clipAngle(142)},l.geoStereographicRaw=Im,l.geoTransverseMercator=function(){var l=Vm(Rm),Z=l.center,b=l.rotate;return l.center=function(l){return arguments.length?Z([-l[1],l[0]]):[(l=Z())[1],-l[0]]},l.rotate=function(l){return arguments.length?b([l[0],l[1],l.length>2?l[2]+90:90]):[(l=b())[0],l[1],l[2]-90]},b([0,0,90]).scale(159.155)},l.geoTransverseMercatorRaw=Rm,l.geoRotation=bc,l.geoStream=Yd,l.geoTransform=function(l){return{stream:Ec(l)}},l.cluster=function(){function l(l){var m,G=0;l.eachAfter((function(l){var b=l.children;b?(l.x=function(l){return l.reduce(Km,0)/l.length}(b),l.y=function(l){return 1+l.reduce(Nm,0)}(b)):(l.x=m?G+=Z(l,m):0,l.y=0,m=l)}));var W=function(l){for(var Z;Z=l.children;)l=Z[0];return l}(l),i=function(l){for(var Z;Z=l.children;)l=Z[Z.length-1];return l}(l),X=W.x-Z(W,i)/2,n=i.x+Z(i,W)/2;return l.eachAfter(c?function(Z){Z.x=(Z.x-l.x)*b,Z.y=(l.y-Z.y)*d}:function(Z){Z.x=(Z.x-X)/(n-X)*b,Z.y=(1-(l.y?Z.y/l.y:1))*d})}var Z=gm,b=1,d=1,c=!1;return l.separation=function(b){return arguments.length?(Z=b,l):Z},l.size=function(Z){return arguments.length?(c=!1,b=+Z[0],d=+Z[1],l):c?null:[b,d]},l.nodeSize=function(Z){return arguments.length?(c=!0,b=+Z[0],d=+Z[1],l):c?[b,d]:null},l},l.hierarchy=xm,l.pack=function(){function l(l){return l.x=b/2,l.y=d/2,Z?l.eachBefore(Am(Z)).eachAfter(Em(c,.5)).eachBefore(Om(1)):l.eachBefore(Am(Dm)).eachAfter(Em(Qm,1)).eachAfter(Em(c,l.r/Math.min(b,d))).eachBefore(Om(Math.min(b,d)/(2*l.r))),l}var Z=null,b=1,d=1,c=Qm;return l.radius=function(b){return arguments.length?(Z=function(l){return null==l?null:fm(l)}(b),l):Z},l.size=function(Z){return arguments.length?(b=+Z[0],d=+Z[1],l):[b,d]},l.padding=function(Z){return arguments.length?(c="function"==typeof Z?Z:Pm(+Z),l):c},l},l.packSiblings=function(l){return Um(l),l},l.packEnclose=Sm,l.partition=function(){function l(l){var m=l.height+1;return l.x0=l.y0=d,l.x1=Z,l.y1=b/m,l.eachBefore(function(l,Z){return function(b){b.children&&_m(b,b.x0,l*(b.depth+1)/Z,b.x1,l*(b.depth+2)/Z);var c=b.x0,m=b.y0,G=b.x1-d,W=b.y1-d;G<c&&(c=G=(c+G)/2),W<m&&(m=W=(m+W)/2),b.x0=c,b.y0=m,b.x1=G,b.y1=W}}(b,m)),c&&l.eachBefore(qm),l}var Z=1,b=1,d=0,c=!1;return l.round=function(Z){return arguments.length?(c=!!Z,l):c},l.size=function(d){return arguments.length?(Z=+d[0],b=+d[1],l):[Z,b]},l.padding=function(Z){return arguments.length?(d=+Z,l):d},l},l.stratify=function(){function l(l){var d,c,m,G,W,i,X,n=l.length,u=new Array(n),a={};for(c=0;c<n;++c)d=l[c],W=u[c]=new Cm(d),null!=(i=Z(d,c,l))&&(i+="")&&(a[X="$"+(W.id=i)]=X in a?dt:W);for(c=0;c<n;++c)if(W=u[c],null!=(i=b(l[c],c,l))&&(i+="")){if(!(G=a["$"+i]))throw new Error("missing: "+i);if(G===dt)throw new Error("ambiguous: "+i);G.children?G.children.push(W):G.children=[W],W.parent=G}else{if(m)throw new Error("multiple roots");m=W}if(!m)throw new Error("no root");if(m.parent=bt,m.eachBefore((function(l){l.depth=l.parent.depth+1,--n})).eachBefore(Fm),m.parent=null,n>0)throw new Error("cycle");return m}var Z=$m,b=lG;return l.id=function(b){return arguments.length?(Z=fm(b),l):Z},l.parentId=function(Z){return arguments.length?(b=fm(Z),l):b},l},l.tree=function(){function l(l){var i=function(l){for(var Z,b,d,c,m,G=new GG(l,0),W=[G];Z=W.pop();)if(d=Z._.children)for(Z.children=new Array(m=d.length),c=m-1;c>=0;--c)W.push(b=Z.children[c]=new GG(d[c],c)),b.parent=Z;return(G.parent=new GG(null,0)).children=[G],G}(l);if(i.eachAfter(Z),i.parent.m=-i.z,i.eachBefore(b),W)l.eachBefore(d);else{var X=l,n=l,u=l;l.eachBefore((function(l){l.x<X.x&&(X=l),l.x>n.x&&(n=l),l.depth>u.depth&&(u=l)}));var a=X===n?1:c(X,n)/2,V=a-X.x,h=m/(n.x+a+V),t=G/(u.depth||1);l.eachBefore((function(l){l.x=(l.x+V)*h,l.y=l.depth*t}))}return l}function Z(l){var Z=l.children,b=l.parent.children,d=l.i?b[l.i-1]:null;if(Z){!function(l){for(var Z,b=0,d=0,c=l.children,m=c.length;--m>=0;)(Z=c[m]).z+=b,Z.m+=b,b+=Z.s+(d+=Z.c)}(l);var m=(Z[0].z+Z[Z.length-1].z)/2;d?(l.z=d.z+c(l._,d._),l.m=l.z-m):l.z=m}else d&&(l.z=d.z+c(l._,d._));l.parent.A=function(l,Z,b){if(Z){for(var d,m=l,G=l,W=Z,i=m.parent.children[0],X=m.m,n=G.m,u=W.m,a=i.m;W=dG(W),m=bG(m),W&&m;)i=bG(i),(G=dG(G)).a=l,(d=W.z+u-m.z-X+c(W._,m._))>0&&(cG(mG(W,l,b),l,d),X+=d,n+=d),u+=W.m,X+=m.m,a+=i.m,n+=G.m;W&&!dG(G)&&(G.t=W,G.m+=u-n),m&&!bG(i)&&(i.t=m,i.m+=X-a,b=l)}return b}(l,d,l.parent.A||b[0])}function b(l){l._.x=l.z+l.parent.m,l.m+=l.parent.m}function d(l){l.x*=m,l.y=l.depth*G}var c=ZG,m=1,G=1,W=null;return l.separation=function(Z){return arguments.length?(c=Z,l):c},l.size=function(Z){return arguments.length?(W=!1,m=+Z[0],G=+Z[1],l):W?null:[m,G]},l.nodeSize=function(Z){return arguments.length?(W=!0,m=+Z[0],G=+Z[1],l):W?[m,G]:null},l},l.treemap=function(){function l(l){return l.x0=l.y0=0,l.x1=c,l.y1=m,l.eachBefore(Z),G=[0],d&&l.eachBefore(qm),l}function Z(l){var Z=G[l.depth],d=l.x0+Z,c=l.y0+Z,m=l.x1-Z,a=l.y1-Z;m<d&&(d=m=(d+m)/2),a<c&&(c=a=(c+a)/2),l.x0=d,l.y0=c,l.x1=m,l.y1=a,l.children&&(Z=G[l.depth+1]=W(l)/2,d+=u(l)-Z,c+=i(l)-Z,(m-=X(l)-Z)<d&&(d=m=(d+m)/2),(a-=n(l)-Z)<c&&(c=a=(c+a)/2),b(l,d,c,m,a))}var b=mt,d=!1,c=1,m=1,G=[0],W=Qm,i=Qm,X=Qm,n=Qm,u=Qm;return l.round=function(Z){return arguments.length?(d=!!Z,l):d},l.size=function(Z){return arguments.length?(c=+Z[0],m=+Z[1],l):[c,m]},l.tile=function(Z){return arguments.length?(b=fm(Z),l):b},l.padding=function(Z){return arguments.length?l.paddingInner(Z).paddingOuter(Z):l.paddingInner()},l.paddingInner=function(Z){return arguments.length?(W="function"==typeof Z?Z:Pm(+Z),l):W},l.paddingOuter=function(Z){return arguments.length?l.paddingTop(Z).paddingRight(Z).paddingBottom(Z).paddingLeft(Z):l.paddingTop()},l.paddingTop=function(Z){return arguments.length?(i="function"==typeof Z?Z:Pm(+Z),l):i},l.paddingRight=function(Z){return arguments.length?(X="function"==typeof Z?Z:Pm(+Z),l):X},l.paddingBottom=function(Z){return arguments.length?(n="function"==typeof Z?Z:Pm(+Z),l):n},l.paddingLeft=function(Z){return arguments.length?(u="function"==typeof Z?Z:Pm(+Z),l):u},l},l.treemapBinary=function(l,Z,b,d,c){var m,G,W=l.children,i=W.length,X=new Array(i+1);for(X[0]=G=m=0;m<i;++m)X[m+1]=G+=W[m].value;!function l(Z,b,d,c,m,G,i){if(Z>=b-1){var n=W[Z];return n.x0=c,n.y0=m,n.x1=G,void(n.y1=i)}for(var u=X[Z],a=d/2+u,V=Z+1,h=b-1;V<h;){var t=V+h>>>1;X[t]<a?V=t+1:h=t}a-X[V-1]<X[V]-a&&Z+1<V&&--V;var y=X[V]-u,Y=d-y;if(G-c>i-m){var e=(c*Y+G*y)/d;l(Z,V,y,c,m,e,i),l(V,b,Y,e,m,G,i)}else{var p=(m*Y+i*y)/d;l(Z,V,y,c,m,G,p),l(V,b,Y,c,p,G,i)}}(0,i,l.value,Z,b,d,c)},l.treemapDice=_m,l.treemapSlice=WG,l.treemapSliceDice=function(l,Z,b,d,c){(1&l.depth?WG:_m)(l,Z,b,d,c)},l.treemapSquarify=mt,l.treemapResquarify=Gt,l.interpolate=uZ,l.interpolateArray=GZ,l.interpolateBasis=$l,l.interpolateBasisClosed=lZ,l.interpolateDate=WZ,l.interpolateNumber=iZ,l.interpolateObject=XZ,l.interpolateRound=aZ,l.interpolateString=nZ,l.interpolateTransformCss=_n,l.interpolateTransformSvg=$n,l.interpolateZoom=yZ,l.interpolateRgb=Qn,l.interpolateRgbBasis=Pn,l.interpolateRgbBasisClosed=Dn,l.interpolateHsl=cu,l.interpolateHslLong=mu,l.interpolateLab=function(l,Z){var b=cZ((l=jl(l)).l,(Z=jl(Z)).l),d=cZ(l.a,Z.a),c=cZ(l.b,Z.b),m=cZ(l.opacity,Z.opacity);return function(Z){return l.l=b(Z),l.a=d(Z),l.b=c(Z),l.opacity=m(Z),l+""}},l.interpolateHcl=Gu,l.interpolateHclLong=Wu,l.interpolateCubehelix=iu,l.interpolateCubehelixLong=Xu,l.piecewise=function(l,Z){for(var b=0,d=Z.length-1,c=Z[0],m=new Array(d<0?0:d);b<d;)m[b]=l(c,c=Z[++b]);return function(l){var Z=Math.max(0,Math.min(d-1,Math.floor(l*=d)));return m[Z](l-Z)}},l.quantize=function(l,Z){for(var b=new Array(Z),d=0;d<Z;++d)b[d]=l(d/(Z-1));return b},l.path=db,l.polygonArea=function(l){for(var Z,b=-1,d=l.length,c=l[d-1],m=0;++b<d;)Z=c,c=l[b],m+=Z[1]*c[0]-Z[0]*c[1];return m/2},l.polygonCentroid=function(l){for(var Z,b,d=-1,c=l.length,m=0,G=0,W=l[c-1],i=0;++d<c;)Z=W,W=l[d],i+=b=Z[0]*W[1]-W[0]*Z[1],m+=(Z[0]+W[0])*b,G+=(Z[1]+W[1])*b;return[m/(i*=3),G/i]},l.polygonHull=function(l){if((b=l.length)<3)return null;var Z,b,d=new Array(b),c=new Array(b);for(Z=0;Z<b;++Z)d[Z]=[+l[Z][0],+l[Z][1],Z];for(d.sort(nG),Z=0;Z<b;++Z)c[Z]=[d[Z][0],-d[Z][1]];var m=uG(d),G=uG(c),W=G[0]===m[0],i=G[G.length-1]===m[m.length-1],X=[];for(Z=m.length-1;Z>=0;--Z)X.push(l[d[m[Z]][2]]);for(Z=+W;Z<G.length-i;++Z)X.push(l[d[G[Z]][2]]);return X},l.polygonContains=function(l,Z){for(var b,d,c=l.length,m=l[c-1],G=Z[0],W=Z[1],i=m[0],X=m[1],n=!1,u=0;u<c;++u)b=(m=l[u])[0],(d=m[1])>W!=X>W&&G<(i-b)*(W-d)/(X-d)+b&&(n=!n),i=b,X=d;return n},l.polygonLength=function(l){for(var Z,b,d=-1,c=l.length,m=l[c-1],G=m[0],W=m[1],i=0;++d<c;)Z=G,b=W,Z-=G=(m=l[d])[0],b-=W=m[1],i+=Math.sqrt(Z*Z+b*b);return i},l.quadtree=jb,l.randomUniform=Wt,l.randomNormal=it,l.randomLogNormal=Xt,l.randomBates=ut,l.randomIrwinHall=nt,l.randomExponential=at,l.scaleBand=hG,l.scalePoint=function(){return function l(Z){var b=Z.copy;return Z.padding=Z.paddingOuter,delete Z.paddingInner,delete Z.paddingOuter,Z.copy=function(){return l(b())},Z}(hG().paddingInner(1))},l.scaleIdentity=function l(){function Z(l){return+l}var b=[0,1];return Z.invert=Z,Z.domain=Z.range=function(l){return arguments.length?(b=ht.call(l,yG),Z):b.slice()},Z.copy=function(){return l().domain(b)},IG(Z)},l.scaleLinear=function l(){var Z=sG(YG,iZ);return Z.copy=function(){return oG(Z,l())},IG(Z)},l.scaleLog=function Z(){function b(){return G=xG(m),W=HG(m),c()[0]<0&&(G=JG(G),W=JG(W)),d}var d=sG(gG,KG).domain([1,10]),c=d.domain,m=10,G=xG(10),W=HG(10);return d.base=function(l){return arguments.length?(m=+l,b()):m},d.domain=function(l){return arguments.length?(c(l),b()):c()},d.ticks=function(l){var Z,b=c(),d=b[0],i=b[b.length-1];(Z=i<d)&&(V=d,d=i,i=V);var X,n,a,V=G(d),h=G(i),t=null==l?10:+l,y=[];if(!(m%1)&&h-V<t){if(V=Math.round(V)-1,h=Math.round(h)+1,d>0){for(;V<h;++V)for(n=1,X=W(V);n<m;++n)if(!((a=X*n)<d)){if(a>i)break;y.push(a)}}else for(;V<h;++V)for(n=m-1,X=W(V);n>=1;--n)if(!((a=X*n)<d)){if(a>i)break;y.push(a)}}else y=u(V,h,Math.min(h-V,t)).map(W);return Z?y.reverse():y},d.tickFormat=function(Z,b){if(null==b&&(b=10===m?".0e":","),"function"!=typeof b&&(b=l.format(b)),Z===1/0)return b;null==Z&&(Z=10);var c=Math.max(1,m*Z/d.ticks().length);return function(l){var Z=l/W(Math.round(G(l)));return Z*m<m-.5&&(Z*=m),Z<=c?b(l):""}},d.nice=function(){return c(RG(c(),{floor:function(l){return W(Math.floor(G(l)))},ceil:function(l){return W(Math.ceil(G(l)))}}))},d.copy=function(){return oG(d,Z().base(m))},d},l.scaleOrdinal=VG,l.scaleImplicit=yt,l.scalePow=FG,l.scaleSqrt=function(){return FG().exponent(.5)},l.scaleQuantile=function l(){function b(){var l=0,Z=Math.max(1,m.length);for(G=new Array(Z-1);++l<Z;)G[l-1]=t(c,l/Z);return d}function d(l){if(!isNaN(l=+l))return m[TX(G,l)]}var c=[],m=[],G=[];return d.invertExtent=function(l){var Z=m.indexOf(l);return Z<0?[NaN,NaN]:[Z>0?G[Z-1]:c[0],Z<G.length?G[Z]:c[c.length-1]]},d.domain=function(l){if(!arguments.length)return c.slice();c=[];for(var d,m=0,G=l.length;m<G;++m)null==(d=l[m])||isNaN(d=+d)||c.push(d);return c.sort(Z),b()},d.range=function(l){return arguments.length?(m=tt.call(l),b()):m.slice()},d.quantiles=function(){return G.slice()},d.copy=function(){return l().domain(c).range(m)},d},l.scaleQuantize=function l(){function Z(l){if(l<=l)return W[TX(G,l,0,m)]}function b(){var l=-1;for(G=new Array(m);++l<m;)G[l]=((l+1)*c-(l-m)*d)/(m+1);return Z}var d=0,c=1,m=1,G=[.5],W=[0,1];return Z.domain=function(l){return arguments.length?(d=+l[0],c=+l[1],b()):[d,c]},Z.range=function(l){return arguments.length?(m=(W=tt.call(l)).length-1,b()):W.slice()},Z.invertExtent=function(l){var Z=W.indexOf(l);return Z<0?[NaN,NaN]:Z<1?[d,G[0]]:Z>=m?[G[m-1],c]:[G[Z-1],G[Z]]},Z.copy=function(){return l().domain([d,c]).range(W)},IG(Z)},l.scaleThreshold=function l(){function Z(l){if(l<=l)return d[TX(b,l,0,c)]}var b=[.5],d=[0,1],c=1;return Z.domain=function(l){return arguments.length?(b=tt.call(l),c=Math.min(b.length,d.length-1),Z):b.slice()},Z.range=function(l){return arguments.length?(d=tt.call(l),c=Math.min(b.length,d.length-1),Z):d.slice()},Z.invertExtent=function(l){var Z=d.indexOf(l);return[b[Z-1],b[Z]]},Z.copy=function(){return l().domain(b).range(d)},Z},l.scaleTime=function(){return AW(At,Pt,Ct,Lt,xt,Nt,gt,ot,l.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},l.scaleUtc=function(){return AW(ey,yy,by,ly,_t,Ot,gt,ot,l.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])},l.scaleSequential=function l(Z){function b(l){var b=(l-d)/(c-d);return Z(m?Math.max(0,Math.min(1,b)):b)}var d=0,c=1,m=!1;return b.domain=function(l){return arguments.length?(d=+l[0],c=+l[1],b):[d,c]},b.clamp=function(l){return arguments.length?(m=!!l,b):m},b.interpolator=function(l){return arguments.length?(Z=l,b):Z},b.copy=function(){return l(Z).domain([d,c]).clamp(m)},IG(b)},l.schemeCategory10=ky,l.schemeAccent=vy,l.schemeDark2=zy,l.schemePaired=My,l.schemePastel1=ry,l.schemePastel2=Ty,l.schemeSet1=jy,l.schemeSet2=wy,l.schemeSet3=Uy,l.interpolateBrBG=Qy,l.schemeBrBG=fy,l.interpolatePRGn=Dy,l.schemePRGn=Py,l.interpolatePiYG=Ey,l.schemePiYG=Ay,l.interpolatePuOr=qy,l.schemePuOr=Oy,l.interpolateRdBu=$y,l.schemeRdBu=_y,l.interpolateRdGy=ZY,l.schemeRdGy=lY,l.interpolateRdYlBu=dY,l.schemeRdYlBu=bY,l.interpolateRdYlGn=mY,l.schemeRdYlGn=cY,l.interpolateSpectral=WY,l.schemeSpectral=GY,l.interpolateBuGn=XY,l.schemeBuGn=iY,l.interpolateBuPu=uY,l.schemeBuPu=nY,l.interpolateGnBu=VY,l.schemeGnBu=aY,l.interpolateOrRd=tY,l.schemeOrRd=hY,l.interpolatePuBuGn=YY,l.schemePuBuGn=yY,l.interpolatePuBu=pY,l.schemePuBu=eY,l.interpolatePuRd=sY,l.schemePuRd=oY,l.interpolateRdPu=RY,l.schemeRdPu=IY,l.interpolateYlGnBu=KY,l.schemeYlGnBu=gY,l.interpolateYlGn=HY,l.schemeYlGn=NY,l.interpolateYlOrBr=JY,l.schemeYlOrBr=xY,l.interpolateYlOrRd=FY,l.schemeYlOrRd=LY,l.interpolateBlues=SY,l.schemeBlues=CY,l.interpolateGreens=kY,l.schemeGreens=BY,l.interpolateGreys=zY,l.schemeGreys=vY,l.interpolatePurples=rY,l.schemePurples=MY,l.interpolateReds=jY,l.schemeReds=TY,l.interpolateOranges=UY,l.schemeOranges=wY,l.interpolateCubehelixDefault=fY,l.interpolateRainbow=function(l){(l<0||l>1)&&(l-=Math.floor(l));var Z=Math.abs(l-.5);return DY.h=360*l-100,DY.s=1.5-1.5*Z,DY.l=.8-.9*Z,DY+""},l.interpolateWarm=QY,l.interpolateCool=PY,l.interpolateSinebow=function(l){var Z;return l=(.5-l)*Math.PI,AY.r=255*(Z=Math.sin(l))*Z,AY.g=255*(Z=Math.sin(l+EY))*Z,AY.b=255*(Z=Math.sin(l+OY))*Z,AY+""},l.interpolateViridis=qY,l.interpolateMagma=_Y,l.interpolateInferno=$Y,l.interpolatePlasma=le,l.create=function(l){return Xl(L(l).call(document.documentElement))},l.creator=L,l.local=nl,l.matcher=Gn,l.mouse=hl,l.namespace=J,l.namespaces=bn,l.clientPoint=Vl,l.select=Xl,l.selectAll=function(l){return"string"==typeof l?new Wl([document.querySelectorAll(l)],[document.documentElement]):new Wl([null==l?[]:l],nn)},l.selection=il,l.selector=C,l.selectorAll=B,l.style=j,l.touch=tl,l.touches=function(l,Z){null==Z&&(Z=al().touches);for(var b=0,d=Z?Z.length:0,c=new Array(d);b<d;++b)c[b]=Vl(l,Z[b]);return c},l.window=T,l.customEvent=ml,l.arc=function(){function l(){var l,X,n=+Z.apply(this,arguments),u=+b.apply(this,arguments),a=m.apply(this,arguments)-ne,V=G.apply(this,arguments)-ne,h=Ze(V-a),t=V>a;if(i||(i=l=db()),u<n&&(X=u,u=n,n=X),u>ie)if(h>ue-ie)i.moveTo(u*de(a),u*Ge(a)),i.arc(0,0,u,a,V,!t),n>ie&&(i.moveTo(n*de(V),n*Ge(V)),i.arc(0,0,n,V,a,t));else{var y,Y,e=a,p=V,o=a,s=V,I=h,R=h,g=W.apply(this,arguments)/2,K=g>ie&&(c?+c.apply(this,arguments):We(n*n+u*u)),N=me(Ze(u-n)/2,+d.apply(this,arguments)),H=N,x=N;if(K>ie){var J=$W(K/n*Ge(g)),L=$W(K/u*Ge(g));(I-=2*J)>ie?(o+=J*=t?1:-1,s-=J):(I=0,o=s=(a+V)/2),(R-=2*L)>ie?(e+=L*=t?1:-1,p-=L):(R=0,e=p=(a+V)/2)}var F=u*de(e),C=u*Ge(e),S=n*de(s),B=n*Ge(s);if(N>ie){var k=u*de(p),v=u*Ge(p),z=n*de(o),M=n*Ge(o);if(h<Xe){var r=I>ie?function(l,Z,b,d,c,m,G,W){var i=b-l,X=d-Z,n=G-c,u=W-m,a=(n*(Z-m)-u*(l-c))/(u*i-n*X);return[l+a*i,Z+a*X]}(F,C,z,M,k,v,S,B):[S,B],T=F-r[0],j=C-r[1],w=k-r[0],U=v-r[1],f=1/Ge(function(l){return l>1?0:l<-1?Xe:Math.acos(l)}((T*w+j*U)/(We(T*T+j*j)*We(w*w+U*U)))/2),Q=We(r[0]*r[0]+r[1]*r[1]);H=me(N,(n-Q)/(f-1)),x=me(N,(u-Q)/(f+1))}}R>ie?x>ie?(y=mi(z,M,F,C,u,x,t),Y=mi(k,v,S,B,u,x,t),i.moveTo(y.cx+y.x01,y.cy+y.y01),x<N?i.arc(y.cx,y.cy,x,be(y.y01,y.x01),be(Y.y01,Y.x01),!t):(i.arc(y.cx,y.cy,x,be(y.y01,y.x01),be(y.y11,y.x11),!t),i.arc(0,0,u,be(y.cy+y.y11,y.cx+y.x11),be(Y.cy+Y.y11,Y.cx+Y.x11),!t),i.arc(Y.cx,Y.cy,x,be(Y.y11,Y.x11),be(Y.y01,Y.x01),!t))):(i.moveTo(F,C),i.arc(0,0,u,e,p,!t)):i.moveTo(F,C),n>ie&&I>ie?H>ie?(y=mi(S,B,k,v,n,-H,t),Y=mi(F,C,z,M,n,-H,t),i.lineTo(y.cx+y.x01,y.cy+y.y01),H<N?i.arc(y.cx,y.cy,H,be(y.y01,y.x01),be(Y.y01,Y.x01),!t):(i.arc(y.cx,y.cy,H,be(y.y01,y.x01),be(y.y11,y.x11),!t),i.arc(0,0,n,be(y.cy+y.y11,y.cx+y.x11),be(Y.cy+Y.y11,Y.cx+Y.x11),t),i.arc(Y.cx,Y.cy,H,be(Y.y11,Y.x11),be(Y.y01,Y.x01),!t))):i.arc(0,0,n,s,o,t):i.lineTo(S,B)}else i.moveTo(0,0);if(i.closePath(),l)return i=null,l+""||null}var Z=li,b=Zi,d=_W(0),c=null,m=bi,G=di,W=ci,i=null;return l.centroid=function(){var l=(+Z.apply(this,arguments)+ +b.apply(this,arguments))/2,d=(+m.apply(this,arguments)+ +G.apply(this,arguments))/2-Xe/2;return[de(d)*l,Ge(d)*l]},l.innerRadius=function(b){return arguments.length?(Z="function"==typeof b?b:_W(+b),l):Z},l.outerRadius=function(Z){return arguments.length?(b="function"==typeof Z?Z:_W(+Z),l):b},l.cornerRadius=function(Z){return arguments.length?(d="function"==typeof Z?Z:_W(+Z),l):d},l.padRadius=function(Z){return arguments.length?(c=null==Z?null:"function"==typeof Z?Z:_W(+Z),l):c},l.startAngle=function(Z){return arguments.length?(m="function"==typeof Z?Z:_W(+Z),l):m},l.endAngle=function(Z){return arguments.length?(G="function"==typeof Z?Z:_W(+Z),l):G},l.padAngle=function(Z){return arguments.length?(W="function"==typeof Z?Z:_W(+Z),l):W},l.context=function(Z){return arguments.length?(i=null==Z?null:Z,l):i},l},l.area=ui,l.line=ni,l.pie=function(){function l(l){var W,i,X,n,u,a=l.length,V=0,h=new Array(a),t=new Array(a),y=+c.apply(this,arguments),Y=Math.min(ue,Math.max(-ue,m.apply(this,arguments)-y)),e=Math.min(Math.abs(Y)/a,G.apply(this,arguments)),p=e*(Y<0?-1:1);for(W=0;W<a;++W)(u=t[h[W]=W]=+Z(l[W],W,l))>0&&(V+=u);for(null!=b?h.sort((function(l,Z){return b(t[l],t[Z])})):null!=d&&h.sort((function(Z,b){return d(l[Z],l[b])})),W=0,X=V?(Y-a*p)/V:0;W<a;++W,y=n)i=h[W],n=y+((u=t[i])>0?u*X:0)+p,t[i]={data:l[i],index:W,value:u,startAngle:y,endAngle:n,padAngle:e};return t}var Z=Vi,b=ai,d=null,c=_W(0),m=_W(ue),G=_W(0);return l.value=function(b){return arguments.length?(Z="function"==typeof b?b:_W(+b),l):Z},l.sortValues=function(Z){return arguments.length?(b=Z,d=null,l):b},l.sort=function(Z){return arguments.length?(d=Z,b=null,l):d},l.startAngle=function(Z){return arguments.length?(c="function"==typeof Z?Z:_W(+Z),l):c},l.endAngle=function(Z){return arguments.length?(m="function"==typeof Z?Z:_W(+Z),l):m},l.padAngle=function(Z){return arguments.length?(G="function"==typeof Z?Z:_W(+Z),l):G},l},l.areaRadial=ei,l.radialArea=ei,l.lineRadial=Yi,l.radialLine=Yi,l.pointRadial=pi,l.linkHorizontal=function(){return Ii(Ri)},l.linkVertical=function(){return Ii(gi)},l.linkRadial=function(){var l=Ii(Ki);return l.angle=l.x,delete l.x,l.radius=l.y,delete l.y,l},l.symbol=function(){function l(){var l;if(d||(d=l=db()),Z.apply(this,arguments).draw(d,+b.apply(this,arguments)),l)return d=null,l+""||null}var Z=_W(he),b=_W(64),d=null;return l.type=function(b){return arguments.length?(Z="function"==typeof b?b:_W(b),l):Z},l.size=function(Z){return arguments.length?(b="function"==typeof Z?Z:_W(+Z),l):b},l.context=function(Z){return arguments.length?(d=null==Z?null:Z,l):d},l},l.symbols=Le,l.symbolCircle=he,l.symbolCross=te,l.symbolDiamond=ee,l.symbolSquare=Re,l.symbolStar=Ie,l.symbolTriangle=Ke,l.symbolWye=Je,l.curveBasisClosed=function(l){return new Ji(l)},l.curveBasisOpen=function(l){return new Li(l)},l.curveBasis=function(l){return new xi(l)},l.curveBundle=Fe,l.curveCardinalClosed=Se,l.curveCardinalOpen=Be,l.curveCardinal=Ce,l.curveCatmullRomClosed=ve,l.curveCatmullRomOpen=ze,l.curveCatmullRom=ke,l.curveLinearClosed=function(l){return new Ti(l)},l.curveLinear=Wi,l.curveMonotoneX=function(l){return new Qi(l)},l.curveMonotoneY=function(l){return new Pi(l)},l.curveNatural=function(l){return new Ai(l)},l.curveStep=function(l){return new Oi(l,.5)},l.curveStepAfter=function(l){return new Oi(l,1)},l.curveStepBefore=function(l){return new Oi(l,0)},l.stack=function(){function l(l){var m,G,W=Z.apply(this,arguments),i=l.length,X=W.length,n=new Array(X);for(m=0;m<X;++m){for(var u,a=W[m],V=n[m]=new Array(i),h=0;h<i;++h)V[h]=u=[0,+c(l[h],a,h,l)],u.data=l[h];V.key=a}for(m=0,G=b(n);m<X;++m)n[G[m]].index=m;return d(n,G),n}var Z=_W([]),b=_i,d=qi,c=$i;return l.keys=function(b){return arguments.length?(Z="function"==typeof b?b:_W(Ve.call(b)),l):Z},l.value=function(Z){return arguments.length?(c="function"==typeof Z?Z:_W(+Z),l):c},l.order=function(Z){return arguments.length?(b=null==Z?_i:"function"==typeof Z?Z:_W(Ve.call(Z)),l):b},l.offset=function(Z){return arguments.length?(d=null==Z?qi:Z,l):d},l},l.stackOffsetExpand=function(l,Z){if((d=l.length)>0){for(var b,d,c,m=0,G=l[0].length;m<G;++m){for(c=b=0;b<d;++b)c+=l[b][m][1]||0;if(c)for(b=0;b<d;++b)l[b][m][1]/=c}qi(l,Z)}},l.stackOffsetDiverging=function(l,Z){if((W=l.length)>1)for(var b,d,c,m,G,W,i=0,X=l[Z[0]].length;i<X;++i)for(m=G=0,b=0;b<W;++b)(c=(d=l[Z[b]][i])[1]-d[0])>=0?(d[0]=m,d[1]=m+=c):c<0?(d[1]=G,d[0]=G+=c):d[0]=m},l.stackOffsetNone=qi,l.stackOffsetSilhouette=function(l,Z){if((b=l.length)>0){for(var b,d=0,c=l[Z[0]],m=c.length;d<m;++d){for(var G=0,W=0;G<b;++G)W+=l[G][d][1]||0;c[d][1]+=c[d][0]=-W/2}qi(l,Z)}},l.stackOffsetWiggle=function(l,Z){if((c=l.length)>0&&(d=(b=l[Z[0]]).length)>0){for(var b,d,c,m=0,G=1;G<d;++G){for(var W=0,i=0,X=0;W<c;++W){for(var n=l[Z[W]],u=n[G][1]||0,a=(u-(n[G-1][1]||0))/2,V=0;V<W;++V){var h=l[Z[V]];a+=(h[G][1]||0)-(h[G-1][1]||0)}i+=u,X+=a*u}b[G-1][1]+=b[G-1][0]=m,i&&(m-=X/i)}b[G-1][1]+=b[G-1][0]=m,qi(l,Z)}},l.stackOrderAscending=lX,l.stackOrderDescending=function(l){return lX(l).reverse()},l.stackOrderInsideOut=function(l){var Z,b,d=l.length,c=l.map(ZX),m=_i(l).sort((function(l,Z){return c[Z]-c[l]})),G=0,W=0,i=[],X=[];for(Z=0;Z<d;++Z)b=m[Z],G<W?(G+=c[b],i.push(b)):(W+=c[b],X.push(b));return X.reverse().concat(i)},l.stackOrderNone=_i,l.stackOrderReverse=function(l){return _i(l).reverse()},l.timeInterval=CG,l.timeMillisecond=ot,l.timeMilliseconds=st,l.utcMillisecond=ot,l.utcMilliseconds=st,l.timeSecond=gt,l.timeSeconds=Kt,l.utcSecond=gt,l.utcSeconds=Kt,l.timeMinute=Nt,l.timeMinutes=Ht,l.timeHour=xt,l.timeHours=Jt,l.timeDay=Lt,l.timeDays=Ft,l.timeWeek=Ct,l.timeWeeks=rt,l.timeSunday=Ct,l.timeSundays=rt,l.timeMonday=St,l.timeMondays=Tt,l.timeTuesday=Bt,l.timeTuesdays=jt,l.timeWednesday=kt,l.timeWednesdays=wt,l.timeThursday=vt,l.timeThursdays=Ut,l.timeFriday=zt,l.timeFridays=ft,l.timeSaturday=Mt,l.timeSaturdays=Qt,l.timeMonth=Pt,l.timeMonths=Dt,l.timeYear=At,l.timeYears=Et,l.utcMinute=Ot,l.utcMinutes=qt,l.utcHour=_t,l.utcHours=$t,l.utcDay=ly,l.utcDays=Zy,l.utcWeek=by,l.utcWeeks=Xy,l.utcSunday=by,l.utcSundays=Xy,l.utcMonday=dy,l.utcMondays=ny,l.utcTuesday=cy,l.utcTuesdays=uy,l.utcWednesday=my,l.utcWednesdays=ay,l.utcThursday=Gy,l.utcThursdays=Vy,l.utcFriday=Wy,l.utcFridays=hy,l.utcSaturday=iy,l.utcSaturdays=ty,l.utcMonth=yy,l.utcMonths=Yy,l.utcYear=ey,l.utcYears=oy,l.timeFormatDefaultLocale=QW,l.timeFormatLocale=MG,l.isoFormat=Ny,l.isoParse=Hy,l.now=oZ,l.timer=RZ,l.timerFlush=gZ,l.timeout=xZ,l.interval=function(l,Z,b){var d=new IZ,c=Z;return null==Z?(d.restart(l,Z,b),d):(Z=+Z,b=null==b?oZ():+b,d.restart((function m(G){G+=c,d.restart(m,c+=Z,b),l(G)}),Z,b),d)},l.transition=zZ,l.active=function(l,Z){var b,d,c=l.__transition;if(c)for(d in Z=null==Z?null:Z+"",c)if((b=c[d]).state>Iu&&b.name===Z)return new vZ([[l]],la,Z,+d);return null},l.interrupt=SZ,l.voronoi=function(){function l(l){return new HX(l.map((function(d,c){var m=[Math.round(Z(d,c,l)/Qe)*Qe,Math.round(b(d,c,l)/Qe)*Qe];return m.index=c,m.data=d,m})),d)}var Z=dX,b=cX,d=null;return l.polygons=function(Z){return l(Z).polygons()},l.links=function(Z){return l(Z).links()},l.triangles=function(Z){return l(Z).triangles()},l.x=function(b){return arguments.length?(Z="function"==typeof b?b:bX(+b),l):Z},l.y=function(Z){return arguments.length?(b="function"==typeof Z?Z:bX(+Z),l):b},l.extent=function(Z){return arguments.length?(d=null==Z?null:[[+Z[0][0],+Z[0][1]],[+Z[1][0],+Z[1][1]]],l):d&&[[d[0][0],d[0][1]],[d[1][0],d[1][1]]]},l.size=function(Z){return arguments.length?(d=null==Z?null:[[0,0],[+Z[0],+Z[1]]],l):d&&[d[1][0]-d[0][0],d[1][1]-d[0][1]]},l},l.zoom=function(){function Z(l){l.property("__zoom",kX).on("wheel.zoom",i).on("mousedown.zoom",X).on("dblclick.zoom",n).filter(o).on("touchstart.zoom",u).on("touchmove.zoom",a).on("touchend.zoom touchcancel.zoom",V).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function b(l,Z){return(Z=Math.max(s[0],Math.min(s[1],Z)))===l.k?l:new JX(Z,l.x,l.y)}function d(l,Z,b){var d=Z[0]-b[0]*l.k,c=Z[1]-b[1]*l.k;return d===l.x&&c===l.y?l:new JX(l.k,d,c)}function c(l){return[(+l[0][0]+ +l[1][0])/2,(+l[0][1]+ +l[1][1])/2]}function m(l,Z,b){l.on("start.zoom",(function(){G(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){G(this,arguments).end()})).tween("zoom",(function(){var l=arguments,d=G(this,l),m=Y.apply(this,l),W=b||c(m),i=Math.max(m[1][0]-m[0][0],m[1][1]-m[0][1]),X=this.__zoom,n="function"==typeof Z?Z.apply(this,l):Z,u=g(X.invert(W).concat(i/X.k),n.invert(W).concat(i/n.k));return function(l){if(1===l)l=n;else{var Z=u(l),b=i/Z[2];l=new JX(b,W[0]-Z[0]*b,W[1]-Z[1]*b)}d.zoom(null,l)}}))}function G(l,Z){for(var b,d=0,c=K.length;d<c;++d)if((b=K[d]).that===l)return b;return new W(l,Z)}function W(l,Z){this.that=l,this.args=Z,this.index=-1,this.active=0,this.extent=Y.apply(l,Z)}function i(){if(y.apply(this,arguments)){var l=G(this,arguments),Z=this.__zoom,c=Math.max(s[0],Math.min(s[1],Z.k*Math.pow(2,p.apply(this,arguments)))),m=hl(this);if(l.wheel)l.mouse[0][0]===m[0]&&l.mouse[0][1]===m[1]||(l.mouse[1]=Z.invert(l.mouse[0]=m)),clearTimeout(l.wheel);else{if(Z.k===c)return;l.mouse=[m,Z.invert(m)],SZ(this),l.start()}CX(),l.wheel=setTimeout((function(){l.wheel=null,l.end()}),J),l.zoom("mouse",e(d(b(Z,c),l.mouse[0],l.mouse[1]),l.extent,I))}}function X(){if(!t&&y.apply(this,arguments)){var Z=G(this,arguments),b=Xl(l.event.view).on("mousemove.zoom",(function(){if(CX(),!Z.moved){var b=l.event.clientX-m,c=l.event.clientY-W;Z.moved=b*b+c*c>L}Z.zoom("mouse",e(d(Z.that.__zoom,Z.mouse[0]=hl(Z.that),Z.mouse[1]),Z.extent,I))}),!0).on("mouseup.zoom",(function(){b.on("mousemove.zoom mouseup.zoom",null),pl(l.event.view,Z.moved),CX(),Z.end()}),!0),c=hl(this),m=l.event.clientX,W=l.event.clientY;el(l.event.view),FX(),Z.mouse=[c,this.__zoom.invert(c)],SZ(this),Z.start()}}function n(){if(y.apply(this,arguments)){var c=this.__zoom,G=hl(this),W=c.invert(G),i=c.k*(l.event.shiftKey?.5:2),X=e(d(b(c,i),G,W),Y.apply(this,arguments),I);CX(),R>0?Xl(this).transition().duration(R).call(m,X,G):Xl(this).call(Z.transform,X)}}function u(){if(y.apply(this,arguments)){var Z,b,d,c,m=G(this,arguments),W=l.event.changedTouches,i=W.length;for(FX(),b=0;b<i;++b)c=[c=tl(this,W,(d=W[b]).identifier),this.__zoom.invert(c),d.identifier],m.touch0?m.touch1||(m.touch1=c):(m.touch0=c,Z=!0);if(h&&(h=clearTimeout(h),!m.touch1))return m.end(),void((c=Xl(this).on("dblclick.zoom"))&&c.apply(this,arguments));Z&&(h=setTimeout((function(){h=null}),x),SZ(this),m.start())}}function a(){var Z,c,m,W,i=G(this,arguments),X=l.event.changedTouches,n=X.length;for(CX(),h&&(h=clearTimeout(h)),Z=0;Z<n;++Z)m=tl(this,X,(c=X[Z]).identifier),i.touch0&&i.touch0[2]===c.identifier?i.touch0[0]=m:i.touch1&&i.touch1[2]===c.identifier&&(i.touch1[0]=m);if(c=i.that.__zoom,i.touch1){var u=i.touch0[0],a=i.touch0[1],V=i.touch1[0],t=i.touch1[1],y=(y=V[0]-u[0])*y+(y=V[1]-u[1])*y,Y=(Y=t[0]-a[0])*Y+(Y=t[1]-a[1])*Y;c=b(c,Math.sqrt(y/Y)),m=[(u[0]+V[0])/2,(u[1]+V[1])/2],W=[(a[0]+t[0])/2,(a[1]+t[1])/2]}else{if(!i.touch0)return;m=i.touch0[0],W=i.touch0[1]}i.zoom("touch",e(d(c,m,W),i.extent,I))}function V(){var Z,b,d=G(this,arguments),c=l.event.changedTouches,m=c.length;for(FX(),t&&clearTimeout(t),t=setTimeout((function(){t=null}),x),Z=0;Z<m;++Z)b=c[Z],d.touch0&&d.touch0[2]===b.identifier?delete d.touch0:d.touch1&&d.touch1[2]===b.identifier&&delete d.touch1;d.touch1&&!d.touch0&&(d.touch0=d.touch1,delete d.touch1),d.touch0?d.touch0[1]=this.__zoom.invert(d.touch0[0]):d.end()}var h,t,y=SX,Y=BX,e=MX,p=vX,o=zX,s=[0,1/0],I=[[-1/0,-1/0],[1/0,1/0]],R=250,g=yZ,K=[],H=N("start","zoom","end"),x=500,J=150,L=0;return Z.transform=function(l,Z){var b=l.selection?l.selection():l;b.property("__zoom",kX),l!==b?m(l,Z):b.interrupt().each((function(){G(this,arguments).start().zoom(null,"function"==typeof Z?Z.apply(this,arguments):Z).end()}))},Z.scaleBy=function(l,b){Z.scaleTo(l,(function(){return this.__zoom.k*("function"==typeof b?b.apply(this,arguments):b)}))},Z.scaleTo=function(l,m){Z.transform(l,(function(){var l=Y.apply(this,arguments),Z=this.__zoom,G=c(l),W=Z.invert(G),i="function"==typeof m?m.apply(this,arguments):m;return e(d(b(Z,i),G,W),l,I)}))},Z.translateBy=function(l,b,d){Z.transform(l,(function(){return e(this.__zoom.translate("function"==typeof b?b.apply(this,arguments):b,"function"==typeof d?d.apply(this,arguments):d),Y.apply(this,arguments),I)}))},Z.translateTo=function(l,b,d){Z.transform(l,(function(){var l=Y.apply(this,arguments),Z=this.__zoom,m=c(l);return e(De.translate(m[0],m[1]).scale(Z.k).translate("function"==typeof b?-b.apply(this,arguments):-b,"function"==typeof d?-d.apply(this,arguments):-d),l,I)}))},W.prototype={start:function(){return 1==++this.active&&(this.index=K.push(this)-1,this.emit("start")),this},zoom:function(l,Z){return this.mouse&&"mouse"!==l&&(this.mouse[1]=Z.invert(this.mouse[0])),this.touch0&&"touch"!==l&&(this.touch0[1]=Z.invert(this.touch0[0])),this.touch1&&"touch"!==l&&(this.touch1[1]=Z.invert(this.touch1[0])),this.that.__zoom=Z,this.emit("zoom"),this},end:function(){return 0==--this.active&&(K.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(l){ml(new function(l,Z,b){this.target=l,this.type=Z,this.transform=b}(Z,l,this.that.__zoom),H.apply,H,[l,this.that,this.args])}},Z.wheelDelta=function(l){return arguments.length?(p="function"==typeof l?l:xX(+l),Z):p},Z.filter=function(l){return arguments.length?(y="function"==typeof l?l:xX(!!l),Z):y},Z.touchable=function(l){return arguments.length?(o="function"==typeof l?l:xX(!!l),Z):o},Z.extent=function(l){return arguments.length?(Y="function"==typeof l?l:xX([[+l[0][0],+l[0][1]],[+l[1][0],+l[1][1]]]),Z):Y},Z.scaleExtent=function(l){return arguments.length?(s[0]=+l[0],s[1]=+l[1],Z):[s[0],s[1]]},Z.translateExtent=function(l){return arguments.length?(I[0][0]=+l[0][0],I[1][0]=+l[1][0],I[0][1]=+l[0][1],I[1][1]=+l[1][1],Z):[[I[0][0],I[0][1]],[I[1][0],I[1][1]]]},Z.constrain=function(l){return arguments.length?(e=l,Z):e},Z.duration=function(l){return arguments.length?(R=+l,Z):R},Z.interpolate=function(l){return arguments.length?(g=l,Z):g},Z.on=function(){var l=H.on.apply(H,arguments);return l===H?Z:l},Z.clickDistance=function(l){return arguments.length?(L=(l=+l)*l,Z):Math.sqrt(L)},Z},l.zoomTransform=LX,l.zoomIdentity=De,Object.defineProperty(l,"__esModule",{value:!0})}(Z)},18:function(l,Z,b){(function(Z){l.exports=function l(Z,b,d){function c(G,W){if(!b[G]){if(!Z[G]){if(m)return m(G,!0);var i=new Error("Cannot find module '"+G+"'");throw i.code="MODULE_NOT_FOUND",i}var X=b[G]={exports:{}};Z[G][0].call(X.exports,(function(l){return c(Z[G][1][l]||l)}),X,X.exports,l,Z,b,d)}return b[G].exports}for(var m=!1,G=0;G<d.length;G++)c(d[G]);return c}({1:[function(l,Z,b){
/**
 * @license
 * Copyright (c) 2012-2013 Chris Pettitt
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
Z.exports={graphlib:l("./lib/graphlib"),dagre:l("./lib/dagre"),intersect:l("./lib/intersect"),render:l("./lib/render"),util:l("./lib/util"),version:l("./lib/version")}},{"./lib/dagre":8,"./lib/graphlib":9,"./lib/intersect":10,"./lib/render":25,"./lib/util":27,"./lib/version":28}],2:[function(l,Z,b){var d=l("./util");function c(l,Z,b,c){var m=l.append("marker").attr("id",Z).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").style("stroke-width",1).style("stroke-dasharray","1,0");d.applyStyle(m,b[c+"Style"]),b[c+"Class"]&&m.attr("class",b[c+"Class"])}Z.exports={default:c,normal:c,vee:function(l,Z,b,c){var m=l.append("marker").attr("id",Z).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 L 4 5 z").style("stroke-width",1).style("stroke-dasharray","1,0");d.applyStyle(m,b[c+"Style"]),b[c+"Class"]&&m.attr("class",b[c+"Class"])},undirected:function(l,Z,b,c){var m=l.append("marker").attr("id",Z).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 5 L 10 5").style("stroke-width",1).style("stroke-dasharray","1,0");d.applyStyle(m,b[c+"Style"]),b[c+"Class"]&&m.attr("class",b[c+"Class"])}}},{"./util":27}],3:[function(l,Z,b){var d=l("./util"),c=l("./d3"),m=l("./label/add-label");Z.exports=function(l,Z){var b,G=Z.nodes().filter((function(l){return d.isSubgraph(Z,l)})),W=l.selectAll("g.cluster").data(G,(function(l){return l}));return W.selectAll("*").remove(),W.enter().append("g").attr("class","cluster").attr("id",(function(l){return Z.node(l).id})).style("opacity",0),W=l.selectAll("g.cluster"),d.applyTransition(W,Z).style("opacity",1),W.each((function(l){var b=Z.node(l),d=c.select(this);c.select(this).append("rect");var G=d.append("g").attr("class","label");m(G,b,b.clusterLabelPos)})),W.selectAll("rect").each((function(l){var b=Z.node(l),m=c.select(this);d.applyStyle(m,b.style)})),b=W.exit?W.exit():W.selectAll(null),d.applyTransition(b,Z).style("opacity",0).remove(),W}},{"./d3":7,"./label/add-label":18,"./util":27}],4:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./label/add-label"),m=l("./util"),G=l("./d3");Z.exports=function(l,Z){var b,W=l.selectAll("g.edgeLabel").data(Z.edges(),(function(l){return m.edgeToId(l)})).classed("update",!0);return W.exit().remove(),W.enter().append("g").classed("edgeLabel",!0).style("opacity",0),(W=l.selectAll("g.edgeLabel")).each((function(l){var b=G.select(this);b.select(".label").remove();var m=Z.edge(l),W=c(b,Z.edge(l),0,0).classed("label",!0),i=W.node().getBBox();m.labelId&&W.attr("id",m.labelId),d.has(m,"width")||(m.width=i.width),d.has(m,"height")||(m.height=i.height)})),b=W.exit?W.exit():W.selectAll(null),m.applyTransition(b,Z).style("opacity",0).remove(),W}},{"./d3":7,"./label/add-label":18,"./lodash":21,"./util":27}],5:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./intersect/intersect-node"),m=l("./util"),G=l("./d3");function W(l,Z){var b=(G.line||G.svg.line)().x((function(l){return l.x})).y((function(l){return l.y}));return(b.curve||b.interpolate)(l.curve),b(Z)}Z.exports=function(l,Z,b){var i=l.selectAll("g.edgePath").data(Z.edges(),(function(l){return m.edgeToId(l)})).classed("update",!0),X=function(l,Z){var b=l.enter().append("g").attr("class","edgePath").style("opacity",0);return b.append("path").attr("class","path").attr("d",(function(l){var b=Z.edge(l),c=Z.node(l.v).elem;return W(b,d.range(b.points.length).map((function(){return Z=(l=c).getBBox(),{x:(b=l.ownerSVGElement.getScreenCTM().inverse().multiply(l.getScreenCTM()).translate(Z.width/2,Z.height/2)).e,y:b.f};var l,Z,b})))})),b.append("defs"),b}(i,Z);!function(l,Z){var b=l.exit();m.applyTransition(b,Z).style("opacity",0).remove()}(i,Z);var n=void 0!==i.merge?i.merge(X):i;return m.applyTransition(n,Z).style("opacity",1),n.each((function(l){var b=G.select(this),d=Z.edge(l);d.elem=this,d.id&&b.attr("id",d.id),m.applyClass(b,d.class,(b.classed("update")?"update ":"")+"edgePath")})),n.selectAll("path.path").each((function(l){var b=Z.edge(l);b.arrowheadId=d.uniqueId("arrowhead");var i=G.select(this).attr("marker-end",(function(){return"url("+(l=location.href,Z=b.arrowheadId,l.split("#")[0]+"#"+Z+")");var l,Z})).style("fill","none");m.applyTransition(i,Z).attr("d",(function(l){return function(l,Z){var b=l.edge(Z),d=l.node(Z.v),m=l.node(Z.w),G=b.points.slice(1,b.points.length-1);return G.unshift(c(d,G[0])),G.push(c(m,G[G.length-1])),W(b,G)}(Z,l)})),m.applyStyle(i,b.style)})),n.selectAll("defs *").remove(),n.selectAll("defs").each((function(l){var d=Z.edge(l);(0,b[d.arrowhead])(G.select(this),d.arrowheadId,d,"arrowhead")})),n}},{"./d3":7,"./intersect/intersect-node":14,"./lodash":21,"./util":27}],6:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./label/add-label"),m=l("./util"),G=l("./d3");Z.exports=function(l,Z,b){var W,i=Z.nodes().filter((function(l){return!m.isSubgraph(Z,l)})),X=l.selectAll("g.node").data(i,(function(l){return l})).classed("update",!0);return X.exit().remove(),X.enter().append("g").attr("class","node").style("opacity",0),(X=l.selectAll("g.node")).each((function(l){var W=Z.node(l),i=G.select(this);m.applyClass(i,W.class,(i.classed("update")?"update ":"")+"node"),i.select("g.label").remove();var X=i.append("g").attr("class","label"),n=c(X,W),u=b[W.shape],a=d.pick(n.node().getBBox(),"width","height");W.elem=this,W.id&&i.attr("id",W.id),W.labelId&&X.attr("id",W.labelId),d.has(W,"width")&&(a.width=W.width),d.has(W,"height")&&(a.height=W.height),a.width+=W.paddingLeft+W.paddingRight,a.height+=W.paddingTop+W.paddingBottom,X.attr("transform","translate("+(W.paddingLeft-W.paddingRight)/2+","+(W.paddingTop-W.paddingBottom)/2+")");var V=G.select(this);V.select(".label-container").remove();var h=u(V,a,W).classed("label-container",!0);m.applyStyle(h,W.style);var t=h.node().getBBox();W.width=t.width,W.height=t.height})),W=X.exit?X.exit():X.selectAll(null),m.applyTransition(W,Z).style("opacity",0).remove(),X}},{"./d3":7,"./label/add-label":18,"./lodash":21,"./util":27}],7:[function(l,Z,b){var d;if(!d&&"function"==typeof l)try{d=l("d3")}catch(l){}d||(d=window.d3),Z.exports=d},{d3:60}],8:[function(l,Z,b){var d;if("function"==typeof l)try{d=l("dagre")}catch(l){}d||(d=window.dagre),Z.exports=d},{dagre:61}],9:[function(l,Z,b){var d;if("function"==typeof l)try{d=l("graphlib")}catch(l){}d||(d=window.graphlib),Z.exports=d},{graphlib:91}],10:[function(l,Z,b){Z.exports={node:l("./intersect-node"),circle:l("./intersect-circle"),ellipse:l("./intersect-ellipse"),polygon:l("./intersect-polygon"),rect:l("./intersect-rect")}},{"./intersect-circle":11,"./intersect-ellipse":12,"./intersect-node":14,"./intersect-polygon":15,"./intersect-rect":16}],11:[function(l,Z,b){var d=l("./intersect-ellipse");Z.exports=function(l,Z,b){return d(l,Z,Z,b)}},{"./intersect-ellipse":12}],12:[function(l,Z,b){Z.exports=function(l,Z,b,d){var c=l.x,m=l.y,G=c-d.x,W=m-d.y,i=Math.sqrt(Z*Z*W*W+b*b*G*G),X=Math.abs(Z*b*G/i);d.x<c&&(X=-X);var n=Math.abs(Z*b*W/i);return d.y<m&&(n=-n),{x:c+X,y:m+n}}},{}],13:[function(l,Z,b){function d(l,Z){return l*Z>0}Z.exports=function(l,Z,b,c){var m,G,W,i,X,n,u,a,V,h,t,y,Y;if(m=Z.y-l.y,W=l.x-Z.x,X=Z.x*l.y-l.x*Z.y,V=m*b.x+W*b.y+X,h=m*c.x+W*c.y+X,!(0!==V&&0!==h&&d(V,h)||(G=c.y-b.y,i=b.x-c.x,n=c.x*b.y-b.x*c.y,u=G*l.x+i*l.y+n,a=G*Z.x+i*Z.y+n,0!==u&&0!==a&&d(u,a)||0==(t=m*i-G*W))))return y=Math.abs(t/2),{x:(Y=W*n-i*X)<0?(Y-y)/t:(Y+y)/t,y:(Y=G*X-m*n)<0?(Y-y)/t:(Y+y)/t}}},{}],14:[function(l,Z,b){Z.exports=function(l,Z){return l.intersect(Z)}},{}],15:[function(l,Z,b){var d=l("./intersect-line");Z.exports=function(l,Z,b){var c=l.x,m=l.y,G=[],W=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY;Z.forEach((function(l){W=Math.min(W,l.x),i=Math.min(i,l.y)}));for(var X=c-l.width/2-W,n=m-l.height/2-i,u=0;u<Z.length;u++){var a=Z[u],V=Z[u<Z.length-1?u+1:0],h=d(l,b,{x:X+a.x,y:n+a.y},{x:X+V.x,y:n+V.y});h&&G.push(h)}return G.length?(G.length>1&&G.sort((function(l,Z){var d=l.x-b.x,c=l.y-b.y,m=Math.sqrt(d*d+c*c),G=Z.x-b.x,W=Z.y-b.y,i=Math.sqrt(G*G+W*W);return m<i?-1:m===i?0:1})),G[0]):(console.log("NO INTERSECTION FOUND, RETURN NODE CENTER",l),l)}},{"./intersect-line":13}],16:[function(l,Z,b){Z.exports=function(l,Z){var b,d,c=l.x,m=l.y,G=Z.x-c,W=Z.y-m,i=l.width/2,X=l.height/2;return Math.abs(W)*i>Math.abs(G)*X?(W<0&&(X=-X),b=0===W?0:X*G/W,d=X):(G<0&&(i=-i),b=i,d=0===G?0:i*W/G),{x:c+b,y:m+d}}},{}],17:[function(l,Z,b){var d=l("../util");Z.exports=function(l,Z){var b=l.append("foreignObject").attr("width","100000"),c=b.append("xhtml:div");c.attr("xmlns","http://www.w3.org/1999/xhtml");var m=Z.label;switch(typeof m){case"function":c.insert(m);break;case"object":c.insert((function(){return m}));break;default:c.html(m)}d.applyStyle(c,Z.labelStyle),c.style("display","inline-block"),c.style("white-space","nowrap");var G=c.node().getBoundingClientRect();return b.attr("width",G.width).attr("height",G.height),b}},{"../util":27}],18:[function(l,Z,b){var d=l("./add-text-label"),c=l("./add-html-label"),m=l("./add-svg-label");Z.exports=function(l,Z,b){var G=Z.label,W=l.append("g");"svg"===Z.labelType?m(W,Z):"string"!=typeof G||"html"===Z.labelType?c(W,Z):d(W,Z);var i,X=W.node().getBBox();switch(b){case"top":i=-Z.height/2;break;case"bottom":i=Z.height/2-X.height;break;default:i=-X.height/2}return W.attr("transform","translate("+-X.width/2+","+i+")"),W}},{"./add-html-label":17,"./add-svg-label":19,"./add-text-label":20}],19:[function(l,Z,b){var d=l("../util");Z.exports=function(l,Z){var b=l;return b.node().appendChild(Z.label),d.applyStyle(b,Z.labelStyle),b}},{"../util":27}],20:[function(l,Z,b){var d=l("../util");Z.exports=function(l,Z){for(var b=l.append("text"),c=function(l){for(var Z,b="",d=!1,c=0;c<l.length;++c)if(Z=l[c],d){switch(Z){case"n":b+="\n";break;default:b+=Z}d=!1}else"\\"===Z?d=!0:b+=Z;return b}(Z.label).split("\n"),m=0;m<c.length;m++)b.append("tspan").attr("xml:space","preserve").attr("dy","1em").attr("x","1").text(c[m]);return d.applyStyle(b,Z.labelStyle),b}},{"../util":27}],21:[function(l,Z,b){var d;if("function"==typeof l)try{d={defaults:l("lodash/defaults"),each:l("lodash/each"),isFunction:l("lodash/isFunction"),isPlainObject:l("lodash/isPlainObject"),pick:l("lodash/pick"),has:l("lodash/has"),range:l("lodash/range"),uniqueId:l("lodash/uniqueId")}}catch(l){}d||(d=window._),Z.exports=d},{"lodash/defaults":289,"lodash/each":290,"lodash/has":299,"lodash/isFunction":308,"lodash/isPlainObject":313,"lodash/pick":331,"lodash/range":333,"lodash/uniqueId":346}],22:[function(l,Z,b){"use strict";var d=l("./util"),c=l("./d3");Z.exports=function(l,Z){var b=l.filter((function(){return!c.select(this).classed("update")}));function m(l){var b=Z.node(l);return"translate("+b.x+","+b.y+")"}b.attr("transform",m),d.applyTransition(l,Z).style("opacity",1).attr("transform",m),d.applyTransition(b.selectAll("rect"),Z).attr("width",(function(l){return Z.node(l).width})).attr("height",(function(l){return Z.node(l).height})).attr("x",(function(l){return-Z.node(l).width/2})).attr("y",(function(l){return-Z.node(l).height/2}))}},{"./d3":7,"./util":27}],23:[function(l,Z,b){"use strict";var d=l("./util"),c=l("./d3"),m=l("./lodash");Z.exports=function(l,Z){function b(l){var b=Z.edge(l);return m.has(b,"x")?"translate("+b.x+","+b.y+")":""}l.filter((function(){return!c.select(this).classed("update")})).attr("transform",b),d.applyTransition(l,Z).style("opacity",1).attr("transform",b)}},{"./d3":7,"./lodash":21,"./util":27}],24:[function(l,Z,b){"use strict";var d=l("./util"),c=l("./d3");Z.exports=function(l,Z){function b(l){var b=Z.node(l);return"translate("+b.x+","+b.y+")"}l.filter((function(){return!c.select(this).classed("update")})).attr("transform",b),d.applyTransition(l,Z).style("opacity",1).attr("transform",b)}},{"./d3":7,"./util":27}],25:[function(l,Z,b){var d=l("./lodash"),c=l("./d3"),m=l("./dagre").layout;Z.exports=function(){var Z=l("./create-nodes"),b=l("./create-clusters"),c=l("./create-edge-labels"),X=l("./create-edge-paths"),n=l("./position-nodes"),u=l("./position-edge-labels"),a=l("./position-clusters"),V=l("./shapes"),h=l("./arrows"),t=function(l,t){!function(l){l.nodes().forEach((function(Z){var b=l.node(Z);d.has(b,"label")||l.children(Z).length||(b.label=Z),d.has(b,"paddingX")&&d.defaults(b,{paddingLeft:b.paddingX,paddingRight:b.paddingX}),d.has(b,"paddingY")&&d.defaults(b,{paddingTop:b.paddingY,paddingBottom:b.paddingY}),d.has(b,"padding")&&d.defaults(b,{paddingLeft:b.padding,paddingRight:b.padding,paddingTop:b.padding,paddingBottom:b.padding}),d.defaults(b,G),d.each(["paddingLeft","paddingRight","paddingTop","paddingBottom"],(function(l){b[l]=Number(b[l])})),d.has(b,"width")&&(b._prevWidth=b.width),d.has(b,"height")&&(b._prevHeight=b.height)})),l.edges().forEach((function(Z){var b=l.edge(Z);d.has(b,"label")||(b.label=""),d.defaults(b,W)}))}(t);var y=i(l,"output"),Y=i(y,"clusters"),e=i(y,"edgePaths"),p=c(i(y,"edgeLabels"),t),o=Z(i(y,"nodes"),t,V);m(t),n(o,t),u(p,t),X(e,t,h);var s=b(Y,t);a(s,t),function(l){d.each(l.nodes(),(function(Z){var b=l.node(Z);d.has(b,"_prevWidth")?b.width=b._prevWidth:delete b.width,d.has(b,"_prevHeight")?b.height=b._prevHeight:delete b.height,delete b._prevWidth,delete b._prevHeight}))}(t)};return t.createNodes=function(l){return arguments.length?(Z=l,t):Z},t.createClusters=function(l){return arguments.length?(b=l,t):b},t.createEdgeLabels=function(l){return arguments.length?(c=l,t):c},t.createEdgePaths=function(l){return arguments.length?(X=l,t):X},t.shapes=function(l){return arguments.length?(V=l,t):V},t.arrows=function(l){return arguments.length?(h=l,t):h},t};var G={paddingLeft:10,paddingRight:10,paddingTop:10,paddingBottom:10,rx:0,ry:0,shape:"rect"},W={arrowhead:"normal",curve:c.curveLinear};function i(l,Z){var b=l.select("g."+Z);return b.empty()&&(b=l.append("g").attr("class",Z)),b}},{"./arrows":2,"./create-clusters":3,"./create-edge-labels":4,"./create-edge-paths":5,"./create-nodes":6,"./d3":7,"./dagre":8,"./lodash":21,"./position-clusters":22,"./position-edge-labels":23,"./position-nodes":24,"./shapes":26}],26:[function(l,Z,b){"use strict";var d=l("./intersect/intersect-rect"),c=l("./intersect/intersect-ellipse"),m=l("./intersect/intersect-circle"),G=l("./intersect/intersect-polygon");Z.exports={rect:function(l,Z,b){var c=l.insert("rect",":first-child").attr("rx",b.rx).attr("ry",b.ry).attr("x",-Z.width/2).attr("y",-Z.height/2).attr("width",Z.width).attr("height",Z.height);return b.intersect=function(l){return d(b,l)},c},ellipse:function(l,Z,b){var d=Z.width/2,m=Z.height/2,G=l.insert("ellipse",":first-child").attr("x",-Z.width/2).attr("y",-Z.height/2).attr("rx",d).attr("ry",m);return b.intersect=function(l){return c(b,d,m,l)},G},circle:function(l,Z,b){var d=Math.max(Z.width,Z.height)/2,c=l.insert("circle",":first-child").attr("x",-Z.width/2).attr("y",-Z.height/2).attr("r",d);return b.intersect=function(l){return m(b,d,l)},c},diamond:function(l,Z,b){var d=Z.width*Math.SQRT2/2,c=Z.height*Math.SQRT2/2,m=[{x:0,y:-c},{x:-d,y:0},{x:0,y:c},{x:d,y:0}],W=l.insert("polygon",":first-child").attr("points",m.map((function(l){return l.x+","+l.y})).join(" "));return b.intersect=function(l){return G(b,m,l)},W}}},{"./intersect/intersect-circle":11,"./intersect/intersect-ellipse":12,"./intersect/intersect-polygon":15,"./intersect/intersect-rect":16}],27:[function(l,Z,b){var d=l("./lodash");Z.exports={isSubgraph:function(l,Z){return!!l.children(Z).length},edgeToId:function(l){return m(l.v)+":"+m(l.w)+":"+m(l.name)},applyStyle:function(l,Z){Z&&l.attr("style",Z)},applyClass:function(l,Z,b){Z&&l.attr("class",Z).attr("class",b+" "+l.attr("class"))},applyTransition:function(l,Z){var b=Z.graph();if(d.isPlainObject(b)){var c=b.transition;if(d.isFunction(c))return c(l)}return l}};var c=/:/g;function m(l){return l?String(l).replace(c,"\\:"):""}},{"./lodash":21}],28:[function(l,Z,b){Z.exports="0.6.4"},{}],29:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:l.d3=l.d3||{})}(this,(function(l){"use strict";function Z(l,Z){return l<Z?-1:l>Z?1:l>=Z?0:NaN}function b(l){return 1===l.length&&(l=function(l){return function(b,d){return Z(l(b),d)}}(l)),{left:function(Z,b,d,c){for(null==d&&(d=0),null==c&&(c=Z.length);d<c;){var m=d+c>>>1;l(Z[m],b)<0?d=m+1:c=m}return d},right:function(Z,b,d,c){for(null==d&&(d=0),null==c&&(c=Z.length);d<c;){var m=d+c>>>1;l(Z[m],b)>0?c=m:d=m+1}return d}}}var d=b(Z),c=d.right,m=d.left;function G(l,Z){return[l,Z]}function W(l){return null===l?NaN:+l}function i(l,Z){var b,d,c=l.length,m=0,G=-1,i=0,X=0;if(null==Z)for(;++G<c;)isNaN(b=W(l[G]))||(X+=(d=b-i)*(b-(i+=d/++m)));else for(;++G<c;)isNaN(b=W(Z(l[G],G,l)))||(X+=(d=b-i)*(b-(i+=d/++m)));if(m>1)return X/(m-1)}function X(l,Z){var b=i(l,Z);return b?Math.sqrt(b):b}function n(l,Z){var b,d,c,m=l.length,G=-1;if(null==Z){for(;++G<m;)if(null!=(b=l[G])&&b>=b)for(d=c=b;++G<m;)null!=(b=l[G])&&(d>b&&(d=b),c<b&&(c=b))}else for(;++G<m;)if(null!=(b=Z(l[G],G,l))&&b>=b)for(d=c=b;++G<m;)null!=(b=Z(l[G],G,l))&&(d>b&&(d=b),c<b&&(c=b));return[d,c]}var u=Array.prototype,a=u.slice,V=u.map;function h(l){return function(){return l}}function t(l){return l}function y(l,Z,b){l=+l,Z=+Z,b=(c=arguments.length)<2?(Z=l,l=0,1):c<3?1:+b;for(var d=-1,c=0|Math.max(0,Math.ceil((Z-l)/b)),m=new Array(c);++d<c;)m[d]=l+d*b;return m}var Y=Math.sqrt(50),e=Math.sqrt(10),p=Math.sqrt(2);function o(l,Z,b){var d=(Z-l)/Math.max(0,b),c=Math.floor(Math.log(d)/Math.LN10),m=d/Math.pow(10,c);return c>=0?(m>=Y?10:m>=e?5:m>=p?2:1)*Math.pow(10,c):-Math.pow(10,-c)/(m>=Y?10:m>=e?5:m>=p?2:1)}function s(l,Z,b){var d=Math.abs(Z-l)/Math.max(0,b),c=Math.pow(10,Math.floor(Math.log(d)/Math.LN10)),m=d/c;return m>=Y?c*=10:m>=e?c*=5:m>=p&&(c*=2),Z<l?-c:c}function I(l){return Math.ceil(Math.log(l.length)/Math.LN2)+1}function R(l,Z,b){if(null==b&&(b=W),d=l.length){if((Z=+Z)<=0||d<2)return+b(l[0],0,l);if(Z>=1)return+b(l[d-1],d-1,l);var d,c=(d-1)*Z,m=Math.floor(c),G=+b(l[m],m,l);return G+(+b(l[m+1],m+1,l)-G)*(c-m)}}function g(l,Z){var b,d,c=l.length,m=-1;if(null==Z){for(;++m<c;)if(null!=(b=l[m])&&b>=b)for(d=b;++m<c;)null!=(b=l[m])&&d>b&&(d=b)}else for(;++m<c;)if(null!=(b=Z(l[m],m,l))&&b>=b)for(d=b;++m<c;)null!=(b=Z(l[m],m,l))&&d>b&&(d=b);return d}function K(l){if(!(c=l.length))return[];for(var Z=-1,b=g(l,N),d=new Array(b);++Z<b;)for(var c,m=-1,G=d[Z]=new Array(c);++m<c;)G[m]=l[m][Z];return d}function N(l){return l.length}l.bisect=c,l.bisectRight=c,l.bisectLeft=m,l.ascending=Z,l.bisector=b,l.cross=function(l,Z,b){var d,c,m,W,i=l.length,X=Z.length,n=new Array(i*X);for(null==b&&(b=G),d=m=0;d<i;++d)for(W=l[d],c=0;c<X;++c,++m)n[m]=b(W,Z[c]);return n},l.descending=function(l,Z){return Z<l?-1:Z>l?1:Z>=l?0:NaN},l.deviation=X,l.extent=n,l.histogram=function(){var l=t,Z=n,b=I;function d(d){var m,G,W=d.length,i=new Array(W);for(m=0;m<W;++m)i[m]=l(d[m],m,d);var X=Z(i),n=X[0],u=X[1],a=b(i,n,u);Array.isArray(a)||(a=s(n,u,a),a=y(Math.ceil(n/a)*a,u,a));for(var V=a.length;a[0]<=n;)a.shift(),--V;for(;a[V-1]>u;)a.pop(),--V;var h,t=new Array(V+1);for(m=0;m<=V;++m)(h=t[m]=[]).x0=m>0?a[m-1]:n,h.x1=m<V?a[m]:u;for(m=0;m<W;++m)n<=(G=i[m])&&G<=u&&t[c(a,G,0,V)].push(d[m]);return t}return d.value=function(Z){return arguments.length?(l="function"==typeof Z?Z:h(Z),d):l},d.domain=function(l){return arguments.length?(Z="function"==typeof l?l:h([l[0],l[1]]),d):Z},d.thresholds=function(l){return arguments.length?(b="function"==typeof l?l:Array.isArray(l)?h(a.call(l)):h(l),d):b},d},l.thresholdFreedmanDiaconis=function(l,b,d){return l=V.call(l,W).sort(Z),Math.ceil((d-b)/(2*(R(l,.75)-R(l,.25))*Math.pow(l.length,-1/3)))},l.thresholdScott=function(l,Z,b){return Math.ceil((b-Z)/(3.5*X(l)*Math.pow(l.length,-1/3)))},l.thresholdSturges=I,l.max=function(l,Z){var b,d,c=l.length,m=-1;if(null==Z){for(;++m<c;)if(null!=(b=l[m])&&b>=b)for(d=b;++m<c;)null!=(b=l[m])&&b>d&&(d=b)}else for(;++m<c;)if(null!=(b=Z(l[m],m,l))&&b>=b)for(d=b;++m<c;)null!=(b=Z(l[m],m,l))&&b>d&&(d=b);return d},l.mean=function(l,Z){var b,d=l.length,c=d,m=-1,G=0;if(null==Z)for(;++m<d;)isNaN(b=W(l[m]))?--c:G+=b;else for(;++m<d;)isNaN(b=W(Z(l[m],m,l)))?--c:G+=b;if(c)return G/c},l.median=function(l,b){var d,c=l.length,m=-1,G=[];if(null==b)for(;++m<c;)isNaN(d=W(l[m]))||G.push(d);else for(;++m<c;)isNaN(d=W(b(l[m],m,l)))||G.push(d);return R(G.sort(Z),.5)},l.merge=function(l){for(var Z,b,d,c=l.length,m=-1,G=0;++m<c;)G+=l[m].length;for(b=new Array(G);--c>=0;)for(Z=(d=l[c]).length;--Z>=0;)b[--G]=d[Z];return b},l.min=g,l.pairs=function(l,Z){null==Z&&(Z=G);for(var b=0,d=l.length-1,c=l[0],m=new Array(d<0?0:d);b<d;)m[b]=Z(c,c=l[++b]);return m},l.permute=function(l,Z){for(var b=Z.length,d=new Array(b);b--;)d[b]=l[Z[b]];return d},l.quantile=R,l.range=y,l.scan=function(l,b){if(d=l.length){var d,c,m=0,G=0,W=l[G];for(null==b&&(b=Z);++m<d;)(b(c=l[m],W)<0||0!==b(W,W))&&(W=c,G=m);return 0===b(W,W)?G:void 0}},l.shuffle=function(l,Z,b){for(var d,c,m=(null==b?l.length:b)-(Z=null==Z?0:+Z);m;)c=Math.random()*m--|0,d=l[m+Z],l[m+Z]=l[c+Z],l[c+Z]=d;return l},l.sum=function(l,Z){var b,d=l.length,c=-1,m=0;if(null==Z)for(;++c<d;)(b=+l[c])&&(m+=b);else for(;++c<d;)(b=+Z(l[c],c,l))&&(m+=b);return m},l.ticks=function(l,Z,b){var d,c,m,G,W=-1;if(b=+b,(l=+l)==(Z=+Z)&&b>0)return[l];if((d=Z<l)&&(c=l,l=Z,Z=c),0===(G=o(l,Z,b))||!isFinite(G))return[];if(G>0)for(l=Math.ceil(l/G),Z=Math.floor(Z/G),m=new Array(c=Math.ceil(Z-l+1));++W<c;)m[W]=(l+W)*G;else for(l=Math.floor(l*G),Z=Math.ceil(Z*G),m=new Array(c=Math.ceil(l-Z+1));++W<c;)m[W]=(l-W)/G;return d&&m.reverse(),m},l.tickIncrement=o,l.tickStep=s,l.transpose=K,l.variance=i,l.zip=function(){return K(arguments)},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],30:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:l.d3=l.d3||{})}(this,(function(l){"use strict";var Z=Array.prototype.slice;function b(l){return l}function d(l){return"translate("+(l+.5)+",0)"}function c(l){return"translate(0,"+(l+.5)+")"}function m(l){return function(Z){return+l(Z)}}function G(l){var Z=Math.max(0,l.bandwidth()-1)/2;return l.round()&&(Z=Math.round(Z)),function(b){return+l(b)+Z}}function W(){return!this.__axis}function i(l,i){var X=[],n=null,u=null,a=6,V=6,h=3,t=1===l||4===l?-1:1,y=4===l||2===l?"x":"y",Y=1===l||3===l?d:c;function e(Z){var d=null==n?i.ticks?i.ticks.apply(i,X):i.domain():n,c=null==u?i.tickFormat?i.tickFormat.apply(i,X):b:u,e=Math.max(a,0)+h,p=i.range(),o=+p[0]+.5,s=+p[p.length-1]+.5,I=(i.bandwidth?G:m)(i.copy()),R=Z.selection?Z.selection():Z,g=R.selectAll(".domain").data([null]),K=R.selectAll(".tick").data(d,i).order(),N=K.exit(),H=K.enter().append("g").attr("class","tick"),x=K.select("line"),J=K.select("text");g=g.merge(g.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),K=K.merge(H),x=x.merge(H.append("line").attr("stroke","currentColor").attr(y+"2",t*a)),J=J.merge(H.append("text").attr("fill","currentColor").attr(y,t*e).attr("dy",1===l?"0em":3===l?"0.71em":"0.32em")),Z!==R&&(g=g.transition(Z),K=K.transition(Z),x=x.transition(Z),J=J.transition(Z),N=N.transition(Z).attr("opacity",1e-6).attr("transform",(function(l){return isFinite(l=I(l))?Y(l):this.getAttribute("transform")})),H.attr("opacity",1e-6).attr("transform",(function(l){var Z=this.parentNode.__axis;return Y(Z&&isFinite(Z=Z(l))?Z:I(l))}))),N.remove(),g.attr("d",4===l||2==l?V?"M"+t*V+","+o+"H0.5V"+s+"H"+t*V:"M0.5,"+o+"V"+s:V?"M"+o+","+t*V+"V0.5H"+s+"V"+t*V:"M"+o+",0.5H"+s),K.attr("opacity",1).attr("transform",(function(l){return Y(I(l))})),x.attr(y+"2",t*a),J.attr(y,t*e).text(c),R.filter(W).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===l?"start":4===l?"end":"middle"),R.each((function(){this.__axis=I}))}return e.scale=function(l){return arguments.length?(i=l,e):i},e.ticks=function(){return X=Z.call(arguments),e},e.tickArguments=function(l){return arguments.length?(X=null==l?[]:Z.call(l),e):X.slice()},e.tickValues=function(l){return arguments.length?(n=null==l?null:Z.call(l),e):n&&n.slice()},e.tickFormat=function(l){return arguments.length?(u=l,e):u},e.tickSize=function(l){return arguments.length?(a=V=+l,e):a},e.tickSizeInner=function(l){return arguments.length?(a=+l,e):a},e.tickSizeOuter=function(l){return arguments.length?(V=+l,e):V},e.tickPadding=function(l){return arguments.length?(h=+l,e):h},e}l.axisTop=function(l){return i(1,l)},l.axisRight=function(l){return i(2,l)},l.axisBottom=function(l){return i(3,l)},l.axisLeft=function(l){return i(4,l)},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],31:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-dispatch"),l("d3-drag"),l("d3-interpolate"),l("d3-selection"),l("d3-transition")):c((d=d||self).d3=d.d3||{},d.d3,d.d3,d.d3,d.d3,d.d3)}(this,(function(l,Z,b,d,c,m){"use strict";function G(l){return function(){return l}}function W(l,Z,b){this.target=l,this.type=Z,this.selection=b}function i(){c.event.stopImmediatePropagation()}function X(){c.event.preventDefault(),c.event.stopImmediatePropagation()}var n={name:"drag"},u={name:"space"},a={name:"handle"},V={name:"center"};function h(l){return[+l[0],+l[1]]}function t(l){return[h(l[0]),h(l[1])]}function y(l){return function(Z){return c.touch(Z,c.event.touches,l)}}var Y={name:"x",handles:["w","e"].map(K),input:function(l,Z){return null==l?null:[[+l[0],Z[0][1]],[+l[1],Z[1][1]]]},output:function(l){return l&&[l[0][0],l[1][0]]}},e={name:"y",handles:["n","s"].map(K),input:function(l,Z){return null==l?null:[[Z[0][0],+l[0]],[Z[1][0],+l[1]]]},output:function(l){return l&&[l[0][1],l[1][1]]}},p={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(K),input:function(l){return null==l?null:t(l)},output:function(l){return l}},o={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},s={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},I={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},R={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},g={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function K(l){return{type:l}}function N(){return!c.event.ctrlKey&&!c.event.button}function H(){var l=this.ownerSVGElement||this;return l.hasAttribute("viewBox")?[[(l=l.viewBox.baseVal).x,l.y],[l.x+l.width,l.y+l.height]]:[[0,0],[l.width.baseVal.value,l.height.baseVal.value]]}function x(){return navigator.maxTouchPoints||"ontouchstart"in this}function J(l){for(;!l.__brush;)if(!(l=l.parentNode))return;return l.__brush}function L(l){return l[0][0]===l[1][0]||l[0][1]===l[1][1]}function F(l){var h,p=H,F=N,C=x,S=!0,B=Z.dispatch("start","brush","end"),k=6;function v(Z){var b=Z.property("__brush",U).selectAll(".overlay").data([K("overlay")]);b.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",o.overlay).merge(b).each((function(){var l=J(this).extent;c.select(this).attr("x",l[0][0]).attr("y",l[0][1]).attr("width",l[1][0]-l[0][0]).attr("height",l[1][1]-l[0][1])})),Z.selectAll(".selection").data([K("selection")]).enter().append("rect").attr("class","selection").attr("cursor",o.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var d=Z.selectAll(".handle").data(l.handles,(function(l){return l.type}));d.exit().remove(),d.enter().append("rect").attr("class",(function(l){return"handle handle--"+l.type})).attr("cursor",(function(l){return o[l.type]})),Z.each(z).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",T).filter(C).on("touchstart.brush",T).on("touchmove.brush",j).on("touchend.brush touchcancel.brush",w).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function z(){var l=c.select(this),Z=J(this).selection;Z?(l.selectAll(".selection").style("display",null).attr("x",Z[0][0]).attr("y",Z[0][1]).attr("width",Z[1][0]-Z[0][0]).attr("height",Z[1][1]-Z[0][1]),l.selectAll(".handle").style("display",null).attr("x",(function(l){return"e"===l.type[l.type.length-1]?Z[1][0]-k/2:Z[0][0]-k/2})).attr("y",(function(l){return"s"===l.type[0]?Z[1][1]-k/2:Z[0][1]-k/2})).attr("width",(function(l){return"n"===l.type||"s"===l.type?Z[1][0]-Z[0][0]+k:k})).attr("height",(function(l){return"e"===l.type||"w"===l.type?Z[1][1]-Z[0][1]+k:k}))):l.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function M(l,Z,b){return!b&&l.__brush.emitter||new r(l,Z)}function r(l,Z){this.that=l,this.args=Z,this.state=l.__brush,this.active=0}function T(){if((!h||c.event.touches)&&F.apply(this,arguments)){var Z,d,G,W,t,p,K,N,H,x,C,B=this,k=c.event.target.__data__.type,v="selection"===(S&&c.event.metaKey?k="overlay":k)?n:S&&c.event.altKey?V:a,r=l===e?null:R[k],T=l===Y?null:g[k],j=J(B),w=j.extent,U=j.selection,f=w[0][0],Q=w[0][1],P=w[1][0],D=w[1][1],A=0,E=0,O=r&&T&&S&&c.event.shiftKey,q=c.event.touches?y(c.event.changedTouches[0].identifier):c.mouse,_=q(B),$=_,ll=M(B,arguments,!0).beforestart();"overlay"===k?(U&&(H=!0),j.selection=U=[[Z=l===e?f:_[0],G=l===Y?Q:_[1]],[t=l===e?P:Z,K=l===Y?D:G]]):(Z=U[0][0],G=U[0][1],t=U[1][0],K=U[1][1]),d=Z,W=G,p=t,N=K;var Zl=c.select(B).attr("pointer-events","none"),bl=Zl.selectAll(".overlay").attr("cursor",o[k]);if(c.event.touches)ll.moved=cl,ll.ended=Gl;else{var dl=c.select(c.event.view).on("mousemove.brush",cl,!0).on("mouseup.brush",Gl,!0);S&&dl.on("keydown.brush",Wl,!0).on("keyup.brush",il,!0),b.dragDisable(c.event.view)}i(),m.interrupt(B),z.call(B),ll.start()}function cl(){var l=q(B);!O||x||C||(Math.abs(l[0]-$[0])>Math.abs(l[1]-$[1])?C=!0:x=!0),$=l,H=!0,X(),ml()}function ml(){var l;switch(A=$[0]-_[0],E=$[1]-_[1],v){case u:case n:r&&(A=Math.max(f-Z,Math.min(P-t,A)),d=Z+A,p=t+A),T&&(E=Math.max(Q-G,Math.min(D-K,E)),W=G+E,N=K+E);break;case a:r<0?(A=Math.max(f-Z,Math.min(P-Z,A)),d=Z+A,p=t):r>0&&(A=Math.max(f-t,Math.min(P-t,A)),d=Z,p=t+A),T<0?(E=Math.max(Q-G,Math.min(D-G,E)),W=G+E,N=K):T>0&&(E=Math.max(Q-K,Math.min(D-K,E)),W=G,N=K+E);break;case V:r&&(d=Math.max(f,Math.min(P,Z-A*r)),p=Math.max(f,Math.min(P,t+A*r))),T&&(W=Math.max(Q,Math.min(D,G-E*T)),N=Math.max(Q,Math.min(D,K+E*T)))}p<d&&(r*=-1,l=Z,Z=t,t=l,l=d,d=p,p=l,k in s&&bl.attr("cursor",o[k=s[k]])),N<W&&(T*=-1,l=G,G=K,K=l,l=W,W=N,N=l,k in I&&bl.attr("cursor",o[k=I[k]])),j.selection&&(U=j.selection),x&&(d=U[0][0],p=U[1][0]),C&&(W=U[0][1],N=U[1][1]),U[0][0]===d&&U[0][1]===W&&U[1][0]===p&&U[1][1]===N||(j.selection=[[d,W],[p,N]],z.call(B),ll.brush())}function Gl(){if(i(),c.event.touches){if(c.event.touches.length)return;h&&clearTimeout(h),h=setTimeout((function(){h=null}),500)}else b.dragEnable(c.event.view,H),dl.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);Zl.attr("pointer-events","all"),bl.attr("cursor",o.overlay),j.selection&&(U=j.selection),L(U)&&(j.selection=null,z.call(B)),ll.end()}function Wl(){switch(c.event.keyCode){case 16:O=r&&T;break;case 18:v===a&&(r&&(t=p-A*r,Z=d+A*r),T&&(K=N-E*T,G=W+E*T),v=V,ml());break;case 32:v!==a&&v!==V||(r<0?t=p-A:r>0&&(Z=d-A),T<0?K=N-E:T>0&&(G=W-E),v=u,bl.attr("cursor",o.selection),ml());break;default:return}X()}function il(){switch(c.event.keyCode){case 16:O&&(x=C=O=!1,ml());break;case 18:v===V&&(r<0?t=p:r>0&&(Z=d),T<0?K=N:T>0&&(G=W),v=a,ml());break;case 32:v===u&&(c.event.altKey?(r&&(t=p-A*r,Z=d+A*r),T&&(K=N-E*T,G=W+E*T),v=V):(r<0?t=p:r>0&&(Z=d),T<0?K=N:T>0&&(G=W),v=a),bl.attr("cursor",o[k]),ml());break;default:return}X()}}function j(){M(this,arguments).moved()}function w(){M(this,arguments).ended()}function U(){var Z=this.__brush||{selection:null};return Z.extent=t(p.apply(this,arguments)),Z.dim=l,Z}return v.move=function(Z,b){Z.selection?Z.on("start.brush",(function(){M(this,arguments).beforestart().start()})).on("interrupt.brush end.brush",(function(){M(this,arguments).end()})).tween("brush",(function(){var Z=this,c=Z.__brush,m=M(Z,arguments),G=c.selection,W=l.input("function"==typeof b?b.apply(this,arguments):b,c.extent),i=d.interpolate(G,W);function X(l){c.selection=1===l&&null===W?null:i(l),z.call(Z),m.brush()}return null!==G&&null!==W?X:X(1)})):Z.each((function(){var Z=this,d=arguments,c=Z.__brush,G=l.input("function"==typeof b?b.apply(Z,d):b,c.extent),W=M(Z,d).beforestart();m.interrupt(Z),c.selection=null===G?null:G,z.call(Z),W.start().brush().end()}))},v.clear=function(l){v.move(l,null)},r.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting?(this.starting=!1,this.emit("start")):this.emit("brush"),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(Z){c.customEvent(new W(v,Z,l.output(this.state.selection)),B.apply,B,[Z,this.that,this.args])}},v.extent=function(l){return arguments.length?(p="function"==typeof l?l:G(t(l)),v):p},v.filter=function(l){return arguments.length?(F="function"==typeof l?l:G(!!l),v):F},v.touchable=function(l){return arguments.length?(C="function"==typeof l?l:G(!!l),v):C},v.handleSize=function(l){return arguments.length?(k=+l,v):k},v.keyModifiers=function(l){return arguments.length?(S=!!l,v):S},v.on=function(){var l=B.on.apply(B,arguments);return l===B?v:l},v}l.brush=function(){return F(p)},l.brushSelection=function(l){var Z=l.__brush;return Z?Z.dim.output(Z.selection):null},l.brushX=function(){return F(Y)},l.brushY=function(){return F(e)},Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-dispatch":36,"d3-drag":37,"d3-interpolate":45,"d3-selection":52,"d3-transition":57}],32:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-array"),l("d3-path")):c(d.d3=d.d3||{},d.d3,d.d3)}(this,(function(l,Z,b){"use strict";var d=Math.cos,c=Math.sin,m=Math.PI,G=m/2,W=2*m,i=Math.max;function X(l){return function(Z,b){return l(Z.source.value+Z.target.value,b.source.value+b.target.value)}}var n=Array.prototype.slice;function u(l){return function(){return l}}function a(l){return l.source}function V(l){return l.target}function h(l){return l.radius}function t(l){return l.startAngle}function y(l){return l.endAngle}l.chord=function(){var l=0,b=null,d=null,c=null;function m(m){var G,X,n,u,a,V,h=m.length,t=[],y=Z.range(h),Y=[],e=[],p=e.groups=new Array(h),o=new Array(h*h);for(G=0,a=-1;++a<h;){for(X=0,V=-1;++V<h;)X+=m[a][V];t.push(X),Y.push(Z.range(h)),G+=X}for(b&&y.sort((function(l,Z){return b(t[l],t[Z])})),d&&Y.forEach((function(l,Z){l.sort((function(l,b){return d(m[Z][l],m[Z][b])}))})),u=(G=i(0,W-l*h)/G)?l:W/h,X=0,a=-1;++a<h;){for(n=X,V=-1;++V<h;){var s=y[a],I=Y[s][V],R=m[s][I],g=X,K=X+=R*G;o[I*h+s]={index:s,subindex:I,startAngle:g,endAngle:K,value:R}}p[s]={index:s,startAngle:n,endAngle:X,value:t[s]},X+=u}for(a=-1;++a<h;)for(V=a-1;++V<h;){var N=o[V*h+a],H=o[a*h+V];(N.value||H.value)&&e.push(N.value<H.value?{source:H,target:N}:{source:N,target:H})}return c?e.sort(c):e}return m.padAngle=function(Z){return arguments.length?(l=i(0,Z),m):l},m.sortGroups=function(l){return arguments.length?(b=l,m):b},m.sortSubgroups=function(l){return arguments.length?(d=l,m):d},m.sortChords=function(l){return arguments.length?(null==l?c=null:(c=X(l))._=l,m):c&&c._},m},l.ribbon=function(){var l=a,Z=V,m=h,W=t,i=y,X=null;function Y(){var u,a=n.call(arguments),V=l.apply(this,a),h=Z.apply(this,a),t=+m.apply(this,(a[0]=V,a)),y=W.apply(this,a)-G,Y=i.apply(this,a)-G,e=t*d(y),p=t*c(y),o=+m.apply(this,(a[0]=h,a)),s=W.apply(this,a)-G,I=i.apply(this,a)-G;if(X||(X=u=b.path()),X.moveTo(e,p),X.arc(0,0,t,y,Y),y===s&&Y===I||(X.quadraticCurveTo(0,0,o*d(s),o*c(s)),X.arc(0,0,o,s,I)),X.quadraticCurveTo(0,0,e,p),X.closePath(),u)return X=null,u+""||null}return Y.radius=function(l){return arguments.length?(m="function"==typeof l?l:u(+l),Y):m},Y.startAngle=function(l){return arguments.length?(W="function"==typeof l?l:u(+l),Y):W},Y.endAngle=function(l){return arguments.length?(i="function"==typeof l?l:u(+l),Y):i},Y.source=function(Z){return arguments.length?(l=Z,Y):l},Y.target=function(l){return arguments.length?(Z=l,Y):Z},Y.context=function(l){return arguments.length?(X=null==l?null:l,Y):X},Y},Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-array":29,"d3-path":46}],33:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:l.d3=l.d3||{})}(this,(function(l){"use strict";function Z(){}function b(l,b){var d=new Z;if(l instanceof Z)l.each((function(l,Z){d.set(Z,l)}));else if(Array.isArray(l)){var c,m=-1,G=l.length;if(null==b)for(;++m<G;)d.set(m,l[m]);else for(;++m<G;)d.set(b(c=l[m],m,l),c)}else if(l)for(var W in l)d.set(W,l[W]);return d}function d(){return{}}function c(l,Z,b){l[Z]=b}function m(){return b()}function G(l,Z,b){l.set(Z,b)}function W(){}Z.prototype=b.prototype={constructor:Z,has:function(l){return"$"+l in this},get:function(l){return this["$"+l]},set:function(l,Z){return this["$"+l]=Z,this},remove:function(l){var Z="$"+l;return Z in this&&delete this[Z]},clear:function(){for(var l in this)"$"===l[0]&&delete this[l]},keys:function(){var l=[];for(var Z in this)"$"===Z[0]&&l.push(Z.slice(1));return l},values:function(){var l=[];for(var Z in this)"$"===Z[0]&&l.push(this[Z]);return l},entries:function(){var l=[];for(var Z in this)"$"===Z[0]&&l.push({key:Z.slice(1),value:this[Z]});return l},size:function(){var l=0;for(var Z in this)"$"===Z[0]&&++l;return l},empty:function(){for(var l in this)if("$"===l[0])return!1;return!0},each:function(l){for(var Z in this)"$"===Z[0]&&l(this[Z],Z.slice(1),this)}};var i=b.prototype;function X(l,Z){var b=new W;if(l instanceof W)l.each((function(l){b.add(l)}));else if(l){var d=-1,c=l.length;if(null==Z)for(;++d<c;)b.add(l[d]);else for(;++d<c;)b.add(Z(l[d],d,l))}return b}W.prototype=X.prototype={constructor:W,has:i.has,add:function(l){return this["$"+(l+="")]=l,this},remove:i.remove,clear:i.clear,values:i.keys,size:i.size,empty:i.empty,each:i.each},l.nest=function(){var l,Z,W,i=[],X=[];function n(d,c,m,G){if(c>=i.length)return null!=l&&d.sort(l),null!=Z?Z(d):d;for(var W,X,u,a=-1,V=d.length,h=i[c++],t=b(),y=m();++a<V;)(u=t.get(W=h(X=d[a])+""))?u.push(X):t.set(W,[X]);return t.each((function(l,Z){G(y,Z,n(l,c,m,G))})),y}return W={object:function(l){return n(l,0,d,c)},map:function(l){return n(l,0,m,G)},entries:function(l){return function l(b,d){if(++d>i.length)return b;var c,m=X[d-1];return null!=Z&&d>=i.length?c=b.entries():(c=[],b.each((function(Z,b){c.push({key:b,values:l(Z,d)})}))),null!=m?c.sort((function(l,Z){return m(l.key,Z.key)})):c}(n(l,0,m,G),0)},key:function(l){return i.push(l),W},sortKeys:function(l){return X[i.length-1]=l,W},sortValues:function(Z){return l=Z,W},rollup:function(l){return Z=l,W}}},l.set=X,l.map=b,l.keys=function(l){var Z=[];for(var b in l)Z.push(b);return Z},l.values=function(l){var Z=[];for(var b in l)Z.push(l[b]);return Z},l.entries=function(l){var Z=[];for(var b in l)Z.push({key:b,value:l[b]});return Z},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],34:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";function Z(l,Z,b){l.prototype=Z.prototype=b,b.constructor=l}function b(l,Z){var b=Object.create(l.prototype);for(var d in Z)b[d]=Z[d];return b}function d(){}var c="\\s*([+-]?\\d+)\\s*",m="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",G="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",W=/^#([0-9a-f]{3,8})$/,i=new RegExp("^rgb\\("+[c,c,c]+"\\)$"),X=new RegExp("^rgb\\("+[G,G,G]+"\\)$"),n=new RegExp("^rgba\\("+[c,c,c,m]+"\\)$"),u=new RegExp("^rgba\\("+[G,G,G,m]+"\\)$"),a=new RegExp("^hsl\\("+[m,G,G]+"\\)$"),V=new RegExp("^hsla\\("+[m,G,G,m]+"\\)$"),h={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function t(){return this.rgb().formatHex()}function y(){return this.rgb().formatRgb()}function Y(l){var Z,b;return l=(l+"").trim().toLowerCase(),(Z=W.exec(l))?(b=Z[1].length,Z=parseInt(Z[1],16),6===b?e(Z):3===b?new I(Z>>8&15|Z>>4&240,Z>>4&15|240&Z,(15&Z)<<4|15&Z,1):8===b?new I(Z>>24&255,Z>>16&255,Z>>8&255,(255&Z)/255):4===b?new I(Z>>12&15|Z>>8&240,Z>>8&15|Z>>4&240,Z>>4&15|240&Z,((15&Z)<<4|15&Z)/255):null):(Z=i.exec(l))?new I(Z[1],Z[2],Z[3],1):(Z=X.exec(l))?new I(255*Z[1]/100,255*Z[2]/100,255*Z[3]/100,1):(Z=n.exec(l))?p(Z[1],Z[2],Z[3],Z[4]):(Z=u.exec(l))?p(255*Z[1]/100,255*Z[2]/100,255*Z[3]/100,Z[4]):(Z=a.exec(l))?N(Z[1],Z[2]/100,Z[3]/100,1):(Z=V.exec(l))?N(Z[1],Z[2]/100,Z[3]/100,Z[4]):h.hasOwnProperty(l)?e(h[l]):"transparent"===l?new I(NaN,NaN,NaN,0):null}function e(l){return new I(l>>16&255,l>>8&255,255&l,1)}function p(l,Z,b,d){return d<=0&&(l=Z=b=NaN),new I(l,Z,b,d)}function o(l){return l instanceof d||(l=Y(l)),l?new I((l=l.rgb()).r,l.g,l.b,l.opacity):new I}function s(l,Z,b,d){return 1===arguments.length?o(l):new I(l,Z,b,null==d?1:d)}function I(l,Z,b,d){this.r=+l,this.g=+Z,this.b=+b,this.opacity=+d}function R(){return"#"+K(this.r)+K(this.g)+K(this.b)}function g(){var l=this.opacity;return(1===(l=isNaN(l)?1:Math.max(0,Math.min(1,l)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===l?")":", "+l+")")}function K(l){return((l=Math.max(0,Math.min(255,Math.round(l)||0)))<16?"0":"")+l.toString(16)}function N(l,Z,b,d){return d<=0?l=Z=b=NaN:b<=0||b>=1?l=Z=NaN:Z<=0&&(l=NaN),new J(l,Z,b,d)}function H(l){if(l instanceof J)return new J(l.h,l.s,l.l,l.opacity);if(l instanceof d||(l=Y(l)),!l)return new J;if(l instanceof J)return l;var Z=(l=l.rgb()).r/255,b=l.g/255,c=l.b/255,m=Math.min(Z,b,c),G=Math.max(Z,b,c),W=NaN,i=G-m,X=(G+m)/2;return i?(W=Z===G?(b-c)/i+6*(b<c):b===G?(c-Z)/i+2:(Z-b)/i+4,i/=X<.5?G+m:2-G-m,W*=60):i=X>0&&X<1?0:W,new J(W,i,X,l.opacity)}function x(l,Z,b,d){return 1===arguments.length?H(l):new J(l,Z,b,null==d?1:d)}function J(l,Z,b,d){this.h=+l,this.s=+Z,this.l=+b,this.opacity=+d}function L(l,Z,b){return 255*(l<60?Z+(b-Z)*l/60:l<180?b:l<240?Z+(b-Z)*(240-l)/60:Z)}Z(d,Y,{copy:function(l){return Object.assign(new this.constructor,this,l)},displayable:function(){return this.rgb().displayable()},hex:t,formatHex:t,formatHsl:function(){return H(this).formatHsl()},formatRgb:y,toString:y}),Z(I,s,b(d,{brighter:function(l){return l=null==l?1/.7:Math.pow(1/.7,l),new I(this.r*l,this.g*l,this.b*l,this.opacity)},darker:function(l){return l=null==l?.7:Math.pow(.7,l),new I(this.r*l,this.g*l,this.b*l,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:R,formatHex:R,formatRgb:g,toString:g})),Z(J,x,b(d,{brighter:function(l){return l=null==l?1/.7:Math.pow(1/.7,l),new J(this.h,this.s,this.l*l,this.opacity)},darker:function(l){return l=null==l?.7:Math.pow(.7,l),new J(this.h,this.s,this.l*l,this.opacity)},rgb:function(){var l=this.h%360+360*(this.h<0),Z=isNaN(l)||isNaN(this.s)?0:this.s,b=this.l,d=b+(b<.5?b:1-b)*Z,c=2*b-d;return new I(L(l>=240?l-240:l+120,c,d),L(l,c,d),L(l<120?l+240:l-120,c,d),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var l=this.opacity;return(1===(l=isNaN(l)?1:Math.max(0,Math.min(1,l)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===l?")":", "+l+")")}}));var F=Math.PI/180,C=180/Math.PI,S=6/29,B=3*S*S;function k(l){if(l instanceof z)return new z(l.l,l.a,l.b,l.opacity);if(l instanceof f)return Q(l);l instanceof I||(l=o(l));var Z,b,d=j(l.r),c=j(l.g),m=j(l.b),G=M((.2225045*d+.7168786*c+.0606169*m)/1);return d===c&&c===m?Z=b=G:(Z=M((.4360747*d+.3850649*c+.1430804*m)/.96422),b=M((.0139322*d+.0971045*c+.7141733*m)/.82521)),new z(116*G-16,500*(Z-G),200*(G-b),l.opacity)}function v(l,Z,b,d){return 1===arguments.length?k(l):new z(l,Z,b,null==d?1:d)}function z(l,Z,b,d){this.l=+l,this.a=+Z,this.b=+b,this.opacity=+d}function M(l){return l>.008856451679035631?Math.pow(l,1/3):l/B+4/29}function r(l){return l>S?l*l*l:B*(l-4/29)}function T(l){return 255*(l<=.0031308?12.92*l:1.055*Math.pow(l,1/2.4)-.055)}function j(l){return(l/=255)<=.04045?l/12.92:Math.pow((l+.055)/1.055,2.4)}function w(l){if(l instanceof f)return new f(l.h,l.c,l.l,l.opacity);if(l instanceof z||(l=k(l)),0===l.a&&0===l.b)return new f(NaN,0<l.l&&l.l<100?0:NaN,l.l,l.opacity);var Z=Math.atan2(l.b,l.a)*C;return new f(Z<0?Z+360:Z,Math.sqrt(l.a*l.a+l.b*l.b),l.l,l.opacity)}function U(l,Z,b,d){return 1===arguments.length?w(l):new f(l,Z,b,null==d?1:d)}function f(l,Z,b,d){this.h=+l,this.c=+Z,this.l=+b,this.opacity=+d}function Q(l){if(isNaN(l.h))return new z(l.l,0,0,l.opacity);var Z=l.h*F;return new z(l.l,Math.cos(Z)*l.c,Math.sin(Z)*l.c,l.opacity)}Z(z,v,b(d,{brighter:function(l){return new z(this.l+18*(null==l?1:l),this.a,this.b,this.opacity)},darker:function(l){return new z(this.l-18*(null==l?1:l),this.a,this.b,this.opacity)},rgb:function(){var l=(this.l+16)/116,Z=isNaN(this.a)?l:l+this.a/500,b=isNaN(this.b)?l:l-this.b/200;return new I(T(3.1338561*(Z=.96422*r(Z))-1.6168667*(l=1*r(l))-.4906146*(b=.82521*r(b))),T(-.9787684*Z+1.9161415*l+.033454*b),T(.0719453*Z-.2289914*l+1.4052427*b),this.opacity)}})),Z(f,U,b(d,{brighter:function(l){return new f(this.h,this.c,this.l+18*(null==l?1:l),this.opacity)},darker:function(l){return new f(this.h,this.c,this.l-18*(null==l?1:l),this.opacity)},rgb:function(){return Q(this).rgb()}}));var P=-.14861,D=1.78277,A=-.29227,E=-.90649,O=1.97294,q=O*E,_=O*D,$=D*A-E*P;function ll(l){if(l instanceof bl)return new bl(l.h,l.s,l.l,l.opacity);l instanceof I||(l=o(l));var Z=l.r/255,b=l.g/255,d=l.b/255,c=($*d+q*Z-_*b)/($+q-_),m=d-c,G=(O*(b-c)-A*m)/E,W=Math.sqrt(G*G+m*m)/(O*c*(1-c)),i=W?Math.atan2(G,m)*C-120:NaN;return new bl(i<0?i+360:i,W,c,l.opacity)}function Zl(l,Z,b,d){return 1===arguments.length?ll(l):new bl(l,Z,b,null==d?1:d)}function bl(l,Z,b,d){this.h=+l,this.s=+Z,this.l=+b,this.opacity=+d}Z(bl,Zl,b(d,{brighter:function(l){return l=null==l?1/.7:Math.pow(1/.7,l),new bl(this.h,this.s,this.l*l,this.opacity)},darker:function(l){return l=null==l?.7:Math.pow(.7,l),new bl(this.h,this.s,this.l*l,this.opacity)},rgb:function(){var l=isNaN(this.h)?0:(this.h+120)*F,Z=+this.l,b=isNaN(this.s)?0:this.s*Z*(1-Z),d=Math.cos(l),c=Math.sin(l);return new I(255*(Z+b*(P*d+D*c)),255*(Z+b*(A*d+E*c)),255*(Z+b*(O*d)),this.opacity)}})),l.color=Y,l.cubehelix=Zl,l.gray=function(l,Z){return new z(l,0,0,null==Z?1:Z)},l.hcl=U,l.hsl=x,l.lab=v,l.lch=function(l,Z,b,d){return 1===arguments.length?w(l):new f(b,Z,l,null==d?1:d)},l.rgb=s,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],35:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-array")):c(d.d3=d.d3||{},d.d3)}(this,(function(l,Z){"use strict";var b=Array.prototype.slice;function d(l,Z){return l-Z}function c(l){return function(){return l}}function m(l,Z){for(var b,d=-1,c=Z.length;++d<c;)if(b=G(l,Z[d]))return b;return 0}function G(l,Z){for(var b=Z[0],d=Z[1],c=-1,m=0,G=l.length,i=G-1;m<G;i=m++){var X=l[m],n=X[0],u=X[1],a=l[i],V=a[0],h=a[1];if(W(X,a,Z))return 0;u>d!=h>d&&b<(V-n)*(d-u)/(h-u)+n&&(c=-c)}return c}function W(l,Z,b){var d,c,m,G;return function(l,Z,b){return(Z[0]-l[0])*(b[1]-l[1])==(b[0]-l[0])*(Z[1]-l[1])}(l,Z,b)&&(c=l[d=+(l[0]===Z[0])],m=b[d],G=Z[d],c<=m&&m<=G||G<=m&&m<=c)}function i(){}var X=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function n(){var l=1,G=1,W=Z.thresholdSturges,n=h;function u(l){var b=W(l);if(Array.isArray(b))b=b.slice().sort(d);else{var c=Z.extent(l),m=c[0],G=c[1];b=Z.tickStep(m,G,b),b=Z.range(Math.floor(m/b)*b,Math.floor(G/b)*b,b)}return b.map((function(Z){return a(l,Z)}))}function a(Z,b){var d=[],c=[];return function(Z,b,d){var c,m,W,i,n,u,a=new Array,h=new Array;for(c=m=-1,i=Z[0]>=b,X[i<<1].forEach(t);++c<l-1;)W=i,i=Z[c+1]>=b,X[W|i<<1].forEach(t);for(X[i<<0].forEach(t);++m<G-1;){for(c=-1,i=Z[m*l+l]>=b,n=Z[m*l]>=b,X[i<<1|n<<2].forEach(t);++c<l-1;)W=i,i=Z[m*l+l+c+1]>=b,u=n,n=Z[m*l+c+1]>=b,X[W|i<<1|n<<2|u<<3].forEach(t);X[i|n<<3].forEach(t)}for(c=-1,n=Z[m*l]>=b,X[n<<2].forEach(t);++c<l-1;)u=n,n=Z[m*l+c+1]>=b,X[n<<2|u<<3].forEach(t);function t(l){var Z,b,G=[l[0][0]+c,l[0][1]+m],W=[l[1][0]+c,l[1][1]+m],i=V(G),X=V(W);(Z=h[i])?(b=a[X])?(delete h[Z.end],delete a[b.start],Z===b?(Z.ring.push(W),d(Z.ring)):a[Z.start]=h[b.end]={start:Z.start,end:b.end,ring:Z.ring.concat(b.ring)}):(delete h[Z.end],Z.ring.push(W),h[Z.end=X]=Z):(Z=a[X])?(b=h[i])?(delete a[Z.start],delete h[b.end],Z===b?(Z.ring.push(W),d(Z.ring)):a[b.start]=h[Z.end]={start:b.start,end:Z.end,ring:b.ring.concat(Z.ring)}):(delete a[Z.start],Z.ring.unshift(G),a[Z.start=i]=Z):a[i]=h[X]={start:i,end:X,ring:[G,W]}}X[n<<3].forEach(t)}(Z,b,(function(l){n(l,Z,b),function(l){for(var Z=0,b=l.length,d=l[b-1][1]*l[0][0]-l[b-1][0]*l[0][1];++Z<b;)d+=l[Z-1][1]*l[Z][0]-l[Z-1][0]*l[Z][1];return d}(l)>0?d.push([l]):c.push(l)})),c.forEach((function(l){for(var Z,b=0,c=d.length;b<c;++b)if(-1!==m((Z=d[b])[0],l))return void Z.push(l)})),{type:"MultiPolygon",value:b,coordinates:d}}function V(Z){return 2*Z[0]+Z[1]*(l+1)*4}function h(Z,b,d){Z.forEach((function(Z){var c,m=Z[0],W=Z[1],i=0|m,X=0|W,n=b[X*l+i];m>0&&m<l&&i===m&&(c=b[X*l+i-1],Z[0]=m+(d-c)/(n-c)-.5),W>0&&W<G&&X===W&&(c=b[(X-1)*l+i],Z[1]=W+(d-c)/(n-c)-.5)}))}return u.contour=a,u.size=function(Z){if(!arguments.length)return[l,G];var b=Math.ceil(Z[0]),d=Math.ceil(Z[1]);if(!(b>0&&d>0))throw new Error("invalid size");return l=b,G=d,u},u.thresholds=function(l){return arguments.length?(W="function"==typeof l?l:Array.isArray(l)?c(b.call(l)):c(l),u):W},u.smooth=function(l){return arguments.length?(n=l?h:i,u):n===h},u}function u(l,Z,b){for(var d=l.width,c=l.height,m=1+(b<<1),G=0;G<c;++G)for(var W=0,i=0;W<d+b;++W)W<d&&(i+=l.data[W+G*d]),W>=b&&(W>=m&&(i-=l.data[W-m+G*d]),Z.data[W-b+G*d]=i/Math.min(W+1,d-1+m-W,m))}function a(l,Z,b){for(var d=l.width,c=l.height,m=1+(b<<1),G=0;G<d;++G)for(var W=0,i=0;W<c+b;++W)W<c&&(i+=l.data[G+W*d]),W>=b&&(W>=m&&(i-=l.data[G+(W-m)*d]),Z.data[G+(W-b)*d]=i/Math.min(W+1,c-1+m-W,m))}function V(l){return l[0]}function h(l){return l[1]}function t(){return 1}l.contours=n,l.contourDensity=function(){var l=V,d=h,m=t,G=960,W=500,i=20,X=2,y=3*i,Y=G+2*y>>X,e=W+2*y>>X,p=c(20);function o(b){var c=new Float32Array(Y*e),G=new Float32Array(Y*e);b.forEach((function(Z,b,G){var W=+l(Z,b,G)+y>>X,i=+d(Z,b,G)+y>>X,n=+m(Z,b,G);W>=0&&W<Y&&i>=0&&i<e&&(c[W+i*Y]+=n)})),u({width:Y,height:e,data:c},{width:Y,height:e,data:G},i>>X),a({width:Y,height:e,data:G},{width:Y,height:e,data:c},i>>X),u({width:Y,height:e,data:c},{width:Y,height:e,data:G},i>>X),a({width:Y,height:e,data:G},{width:Y,height:e,data:c},i>>X),u({width:Y,height:e,data:c},{width:Y,height:e,data:G},i>>X),a({width:Y,height:e,data:G},{width:Y,height:e,data:c},i>>X);var W=p(c);if(!Array.isArray(W)){var V=Z.max(c);W=Z.tickStep(0,V,W),(W=Z.range(0,Math.floor(V/W)*W,W)).shift()}return n().thresholds(W).size([Y,e])(c).map(s)}function s(l){return l.value*=Math.pow(2,-2*X),l.coordinates.forEach(I),l}function I(l){l.forEach(R)}function R(l){l.forEach(g)}function g(l){l[0]=l[0]*Math.pow(2,X)-y,l[1]=l[1]*Math.pow(2,X)-y}function K(){return Y=G+2*(y=3*i)>>X,e=W+2*y>>X,o}return o.x=function(Z){return arguments.length?(l="function"==typeof Z?Z:c(+Z),o):l},o.y=function(l){return arguments.length?(d="function"==typeof l?l:c(+l),o):d},o.weight=function(l){return arguments.length?(m="function"==typeof l?l:c(+l),o):m},o.size=function(l){if(!arguments.length)return[G,W];var Z=Math.ceil(l[0]),b=Math.ceil(l[1]);if(!(Z>=0||Z>=0))throw new Error("invalid size");return G=Z,W=b,K()},o.cellSize=function(l){if(!arguments.length)return 1<<X;if(!((l=+l)>=1))throw new Error("invalid cell size");return X=Math.floor(Math.log(l)/Math.LN2),K()},o.thresholds=function(l){return arguments.length?(p="function"==typeof l?l:Array.isArray(l)?c(b.call(l)):c(l),o):p},o.bandwidth=function(l){if(!arguments.length)return Math.sqrt(i*(i+1));if(!((l=+l)>=0))throw new Error("invalid bandwidth");return i=Math.round((Math.sqrt(4*l*l+1)-1)/2),K()},o},Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-array":29}],36:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";var Z={value:function(){}};function b(){for(var l,Z=0,b=arguments.length,c={};Z<b;++Z){if(!(l=arguments[Z]+"")||l in c||/[\s.]/.test(l))throw new Error("illegal type: "+l);c[l]=[]}return new d(c)}function d(l){this._=l}function c(l,Z){return l.trim().split(/^|\s+/).map((function(l){var b="",d=l.indexOf(".");if(d>=0&&(b=l.slice(d+1),l=l.slice(0,d)),l&&!Z.hasOwnProperty(l))throw new Error("unknown type: "+l);return{type:l,name:b}}))}function m(l,Z){for(var b,d=0,c=l.length;d<c;++d)if((b=l[d]).name===Z)return b.value}function G(l,b,d){for(var c=0,m=l.length;c<m;++c)if(l[c].name===b){l[c]=Z,l=l.slice(0,c).concat(l.slice(c+1));break}return null!=d&&l.push({name:b,value:d}),l}d.prototype=b.prototype={constructor:d,on:function(l,Z){var b,d=this._,W=c(l+"",d),i=-1,X=W.length;if(!(arguments.length<2)){if(null!=Z&&"function"!=typeof Z)throw new Error("invalid callback: "+Z);for(;++i<X;)if(b=(l=W[i]).type)d[b]=G(d[b],l.name,Z);else if(null==Z)for(b in d)d[b]=G(d[b],l.name,null);return this}for(;++i<X;)if((b=(l=W[i]).type)&&(b=m(d[b],l.name)))return b},copy:function(){var l={},Z=this._;for(var b in Z)l[b]=Z[b].slice();return new d(l)},call:function(l,Z){if((b=arguments.length-2)>0)for(var b,d,c=new Array(b),m=0;m<b;++m)c[m]=arguments[m+2];if(!this._.hasOwnProperty(l))throw new Error("unknown type: "+l);for(m=0,b=(d=this._[l]).length;m<b;++m)d[m].value.apply(Z,c)},apply:function(l,Z,b){if(!this._.hasOwnProperty(l))throw new Error("unknown type: "+l);for(var d=this._[l],c=0,m=d.length;c<m;++c)d[c].value.apply(Z,b)}},l.dispatch=b,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],37:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-dispatch"),l("d3-selection")):c((d=d||self).d3=d.d3||{},d.d3,d.d3)}(this,(function(l,Z,b){"use strict";function d(){b.event.stopImmediatePropagation()}function c(){b.event.preventDefault(),b.event.stopImmediatePropagation()}function m(l){var Z=l.document.documentElement,d=b.select(l).on("dragstart.drag",c,!0);"onselectstart"in Z?d.on("selectstart.drag",c,!0):(Z.__noselect=Z.style.MozUserSelect,Z.style.MozUserSelect="none")}function G(l,Z){var d=l.document.documentElement,m=b.select(l).on("dragstart.drag",null);Z&&(m.on("click.drag",c,!0),setTimeout((function(){m.on("click.drag",null)}),0)),"onselectstart"in d?m.on("selectstart.drag",null):(d.style.MozUserSelect=d.__noselect,delete d.__noselect)}function W(l){return function(){return l}}function i(l,Z,b,d,c,m,G,W,i,X){this.target=l,this.type=Z,this.subject=b,this.identifier=d,this.active=c,this.x=m,this.y=G,this.dx=W,this.dy=i,this._=X}function X(){return!b.event.ctrlKey&&!b.event.button}function n(){return this.parentNode}function u(l){return null==l?{x:b.event.x,y:b.event.y}:l}function a(){return navigator.maxTouchPoints||"ontouchstart"in this}i.prototype.on=function(){var l=this._.on.apply(this._,arguments);return l===this._?this:l},l.drag=function(){var l,V,h,t,y=X,Y=n,e=u,p=a,o={},s=Z.dispatch("start","drag","end"),I=0,R=0;function g(l){l.on("mousedown.drag",K).filter(p).on("touchstart.drag",x).on("touchmove.drag",J).on("touchend.drag touchcancel.drag",L).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function K(){if(!t&&y.apply(this,arguments)){var Z=F("mouse",Y.apply(this,arguments),b.mouse,this,arguments);Z&&(b.select(b.event.view).on("mousemove.drag",N,!0).on("mouseup.drag",H,!0),m(b.event.view),d(),h=!1,l=b.event.clientX,V=b.event.clientY,Z("start"))}}function N(){if(c(),!h){var Z=b.event.clientX-l,d=b.event.clientY-V;h=Z*Z+d*d>R}o.mouse("drag")}function H(){b.select(b.event.view).on("mousemove.drag mouseup.drag",null),G(b.event.view,h),c(),o.mouse("end")}function x(){if(y.apply(this,arguments)){var l,Z,c=b.event.changedTouches,m=Y.apply(this,arguments),G=c.length;for(l=0;l<G;++l)(Z=F(c[l].identifier,m,b.touch,this,arguments))&&(d(),Z("start"))}}function J(){var l,Z,d=b.event.changedTouches,m=d.length;for(l=0;l<m;++l)(Z=o[d[l].identifier])&&(c(),Z("drag"))}function L(){var l,Z,c=b.event.changedTouches,m=c.length;for(t&&clearTimeout(t),t=setTimeout((function(){t=null}),500),l=0;l<m;++l)(Z=o[c[l].identifier])&&(d(),Z("end"))}function F(l,Z,d,c,m){var G,W,X,n=d(Z,l),u=s.copy();if(b.customEvent(new i(g,"beforestart",G,l,I,n[0],n[1],0,0,u),(function(){return null!=(b.event.subject=G=e.apply(c,m))&&(W=G.x-n[0]||0,X=G.y-n[1]||0,!0)})))return function a(V){var h,t=n;switch(V){case"start":o[l]=a,h=I++;break;case"end":delete o[l],--I;case"drag":n=d(Z,l),h=I}b.customEvent(new i(g,V,G,l,h,n[0]+W,n[1]+X,n[0]-t[0],n[1]-t[1],u),u.apply,u,[V,c,m])}}return g.filter=function(l){return arguments.length?(y="function"==typeof l?l:W(!!l),g):y},g.container=function(l){return arguments.length?(Y="function"==typeof l?l:W(l),g):Y},g.subject=function(l){return arguments.length?(e="function"==typeof l?l:W(l),g):e},g.touchable=function(l){return arguments.length?(p="function"==typeof l?l:W(!!l),g):p},g.on=function(){var l=s.on.apply(s,arguments);return l===s?g:l},g.clickDistance=function(l){return arguments.length?(R=(l=+l)*l,g):Math.sqrt(R)},g},l.dragDisable=m,l.dragEnable=G,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-dispatch":36,"d3-selection":52}],38:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";var Z={},b={};function d(l){return new Function("d","return {"+l.map((function(l,Z){return JSON.stringify(l)+": d["+Z+'] || ""'})).join(",")+"}")}function c(l){var Z=Object.create(null),b=[];return l.forEach((function(l){for(var d in l)d in Z||b.push(Z[d]=d)})),b}function m(l,Z){var b=l+"",d=b.length;return d<Z?new Array(Z-d+1).join(0)+b:b}function G(l){var Z,b=l.getUTCHours(),d=l.getUTCMinutes(),c=l.getUTCSeconds(),G=l.getUTCMilliseconds();return isNaN(l)?"Invalid Date":((Z=l.getUTCFullYear())<0?"-"+m(-Z,6):Z>9999?"+"+m(Z,6):m(Z,4))+"-"+m(l.getUTCMonth()+1,2)+"-"+m(l.getUTCDate(),2)+(G?"T"+m(b,2)+":"+m(d,2)+":"+m(c,2)+"."+m(G,3)+"Z":c?"T"+m(b,2)+":"+m(d,2)+":"+m(c,2)+"Z":d||b?"T"+m(b,2)+":"+m(d,2)+"Z":"")}function W(l){var m=new RegExp('["'+l+"\n\r]"),W=l.charCodeAt(0);function i(l,d){var c,m=[],G=l.length,i=0,X=0,n=G<=0,u=!1;function a(){if(n)return b;if(u)return u=!1,Z;var d,c,m=i;if(34===l.charCodeAt(m)){for(;i++<G&&34!==l.charCodeAt(i)||34===l.charCodeAt(++i););return(d=i)>=G?n=!0:10===(c=l.charCodeAt(i++))?u=!0:13===c&&(u=!0,10===l.charCodeAt(i)&&++i),l.slice(m+1,d-1).replace(/""/g,'"')}for(;i<G;){if(10===(c=l.charCodeAt(d=i++)))u=!0;else if(13===c)u=!0,10===l.charCodeAt(i)&&++i;else if(c!==W)continue;return l.slice(m,d)}return n=!0,l.slice(m,G)}for(10===l.charCodeAt(G-1)&&--G,13===l.charCodeAt(G-1)&&--G;(c=a())!==b;){for(var V=[];c!==Z&&c!==b;)V.push(c),c=a();d&&null==(V=d(V,X++))||m.push(V)}return m}function X(Z,b){return Z.map((function(Z){return b.map((function(l){return u(Z[l])})).join(l)}))}function n(Z){return Z.map(u).join(l)}function u(l){return null==l?"":l instanceof Date?G(l):m.test(l+="")?'"'+l.replace(/"/g,'""')+'"':l}return{parse:function(l,Z){var b,c,m=i(l,(function(l,m){if(b)return b(l,m-1);c=l,b=Z?function(l,Z){var b=d(l);return function(d,c){return Z(b(d),c,l)}}(l,Z):d(l)}));return m.columns=c||[],m},parseRows:i,format:function(Z,b){return null==b&&(b=c(Z)),[b.map(u).join(l)].concat(X(Z,b)).join("\n")},formatBody:function(l,Z){return null==Z&&(Z=c(l)),X(l,Z).join("\n")},formatRows:function(l){return l.map(n).join("\n")},formatRow:n,formatValue:u}}var i=W(","),X=i.parse,n=i.parseRows,u=i.format,a=i.formatBody,V=i.formatRows,h=i.formatRow,t=i.formatValue,y=W("\t"),Y=y.parse,e=y.parseRows,p=y.format,o=y.formatBody,s=y.formatRows,I=y.formatRow,R=y.formatValue,g=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();l.autoType=function(l){for(var Z in l){var b,d,c=l[Z].trim();if(c)if("true"===c)c=!0;else if("false"===c)c=!1;else if("NaN"===c)c=NaN;else if(isNaN(b=+c)){if(!(d=c.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;g&&d[4]&&!d[7]&&(c=c.replace(/-/g,"/").replace(/T/," ")),c=new Date(c)}else c=b;else c=null;l[Z]=c}return l},l.csvFormat=u,l.csvFormatBody=a,l.csvFormatRow=h,l.csvFormatRows=V,l.csvFormatValue=t,l.csvParse=X,l.csvParseRows=n,l.dsvFormat=W,l.tsvFormat=p,l.tsvFormatBody=o,l.tsvFormatRow=I,l.tsvFormatRows=s,l.tsvFormatValue=R,l.tsvParse=Y,l.tsvParseRows=e,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],39:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";function Z(l){return((l*=2)<=1?l*l:--l*(2-l)+1)/2}function b(l){return((l*=2)<=1?l*l*l:(l-=2)*l*l+2)/2}var d=function l(Z){function b(l){return Math.pow(l,Z)}return Z=+Z,b.exponent=l,b}(3),c=function l(Z){function b(l){return 1-Math.pow(1-l,Z)}return Z=+Z,b.exponent=l,b}(3),m=function l(Z){function b(l){return((l*=2)<=1?Math.pow(l,Z):2-Math.pow(2-l,Z))/2}return Z=+Z,b.exponent=l,b}(3),G=Math.PI,W=G/2;function i(l){return(1-Math.cos(G*l))/2}function X(l){return((l*=2)<=1?Math.pow(2,10*l-10):2-Math.pow(2,10-10*l))/2}function n(l){return((l*=2)<=1?1-Math.sqrt(1-l*l):Math.sqrt(1-(l-=2)*l)+1)/2}var u=7.5625;function a(l){return(l=+l)<4/11?u*l*l:l<8/11?u*(l-=6/11)*l+3/4:l<10/11?u*(l-=9/11)*l+15/16:u*(l-=21/22)*l+63/64}var V=function l(Z){function b(l){return l*l*((Z+1)*l-Z)}return Z=+Z,b.overshoot=l,b}(1.70158),h=function l(Z){function b(l){return--l*l*((Z+1)*l+Z)+1}return Z=+Z,b.overshoot=l,b}(1.70158),t=function l(Z){function b(l){return((l*=2)<1?l*l*((Z+1)*l-Z):(l-=2)*l*((Z+1)*l+Z)+2)/2}return Z=+Z,b.overshoot=l,b}(1.70158),y=2*Math.PI,Y=function l(Z,b){var d=Math.asin(1/(Z=Math.max(1,Z)))*(b/=y);function c(l){return Z*Math.pow(2,10*--l)*Math.sin((d-l)/b)}return c.amplitude=function(Z){return l(Z,b*y)},c.period=function(b){return l(Z,b)},c}(1,.3),e=function l(Z,b){var d=Math.asin(1/(Z=Math.max(1,Z)))*(b/=y);function c(l){return 1-Z*Math.pow(2,-10*(l=+l))*Math.sin((l+d)/b)}return c.amplitude=function(Z){return l(Z,b*y)},c.period=function(b){return l(Z,b)},c}(1,.3),p=function l(Z,b){var d=Math.asin(1/(Z=Math.max(1,Z)))*(b/=y);function c(l){return((l=2*l-1)<0?Z*Math.pow(2,10*l)*Math.sin((d-l)/b):2-Z*Math.pow(2,-10*l)*Math.sin((d+l)/b))/2}return c.amplitude=function(Z){return l(Z,b*y)},c.period=function(b){return l(Z,b)},c}(1,.3);l.easeBack=t,l.easeBackIn=V,l.easeBackInOut=t,l.easeBackOut=h,l.easeBounce=a,l.easeBounceIn=function(l){return 1-a(1-l)},l.easeBounceInOut=function(l){return((l*=2)<=1?1-a(1-l):a(l-1)+1)/2},l.easeBounceOut=a,l.easeCircle=n,l.easeCircleIn=function(l){return 1-Math.sqrt(1-l*l)},l.easeCircleInOut=n,l.easeCircleOut=function(l){return Math.sqrt(1- --l*l)},l.easeCubic=b,l.easeCubicIn=function(l){return l*l*l},l.easeCubicInOut=b,l.easeCubicOut=function(l){return--l*l*l+1},l.easeElastic=e,l.easeElasticIn=Y,l.easeElasticInOut=p,l.easeElasticOut=e,l.easeExp=X,l.easeExpIn=function(l){return Math.pow(2,10*l-10)},l.easeExpInOut=X,l.easeExpOut=function(l){return 1-Math.pow(2,-10*l)},l.easeLinear=function(l){return+l},l.easePoly=m,l.easePolyIn=d,l.easePolyInOut=m,l.easePolyOut=c,l.easeQuad=Z,l.easeQuadIn=function(l){return l*l},l.easeQuadInOut=Z,l.easeQuadOut=function(l){return l*(2-l)},l.easeSin=i,l.easeSinIn=function(l){return 1-Math.cos(l*W)},l.easeSinInOut=i,l.easeSinOut=function(l){return Math.sin(l*W)},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],40:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-dsv")):c(d.d3=d.d3||{},d.d3)}(this,(function(l,Z){"use strict";function b(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.blob()}function d(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.arrayBuffer()}function c(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.text()}function m(l,Z){return fetch(l,Z).then(c)}function G(l){return function(Z,b,d){return 2===arguments.length&&"function"==typeof b&&(d=b,b=void 0),m(Z,b).then((function(Z){return l(Z,d)}))}}var W=G(Z.csvParse),i=G(Z.tsvParse);function X(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);return l.json()}function n(l){return function(Z,b){return m(Z,b).then((function(Z){return(new DOMParser).parseFromString(Z,l)}))}}var u=n("application/xml"),a=n("text/html"),V=n("image/svg+xml");l.blob=function(l,Z){return fetch(l,Z).then(b)},l.buffer=function(l,Z){return fetch(l,Z).then(d)},l.dsv=function(l,b,d,c){3===arguments.length&&"function"==typeof d&&(c=d,d=void 0);var G=Z.dsvFormat(l);return m(b,d).then((function(l){return G.parse(l,c)}))},l.csv=W,l.tsv=i,l.image=function(l,Z){return new Promise((function(b,d){var c=new Image;for(var m in Z)c[m]=Z[m];c.onerror=d,c.onload=function(){b(c)},c.src=l}))},l.json=function(l,Z){return fetch(l,Z).then(X)},l.text=m,l.xml=u,l.html=a,l.svg=V,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-dsv":38}],41:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-quadtree"),l("d3-collection"),l("d3-dispatch"),l("d3-timer")):c(d.d3=d.d3||{},d.d3,d.d3,d.d3,d.d3)}(this,(function(l,Z,b,d,c){"use strict";function m(l){return function(){return l}}function G(){return 1e-6*(Math.random()-.5)}function W(l){return l.x+l.vx}function i(l){return l.y+l.vy}function X(l){return l.index}function n(l,Z){var b=l.get(Z);if(!b)throw new Error("missing: "+Z);return b}function u(l){return l.x}function a(l){return l.y}var V=Math.PI*(3-Math.sqrt(5));l.forceCenter=function(l,Z){var b;function d(){var d,c,m=b.length,G=0,W=0;for(d=0;d<m;++d)G+=(c=b[d]).x,W+=c.y;for(G=G/m-l,W=W/m-Z,d=0;d<m;++d)(c=b[d]).x-=G,c.y-=W}return null==l&&(l=0),null==Z&&(Z=0),d.initialize=function(l){b=l},d.x=function(Z){return arguments.length?(l=+Z,d):l},d.y=function(l){return arguments.length?(Z=+l,d):Z},d},l.forceCollide=function(l){var b,d,c=1,X=1;function n(){for(var l,m,n,a,V,h,t,y=b.length,Y=0;Y<X;++Y)for(m=Z.quadtree(b,W,i).visitAfter(u),l=0;l<y;++l)n=b[l],h=d[n.index],t=h*h,a=n.x+n.vx,V=n.y+n.vy,m.visit(e);function e(l,Z,b,d,m){var W=l.data,i=l.r,X=h+i;if(!W)return Z>a+X||d<a-X||b>V+X||m<V-X;if(W.index>n.index){var u=a-W.x-W.vx,y=V-W.y-W.vy,Y=u*u+y*y;Y<X*X&&(0===u&&(Y+=(u=G())*u),0===y&&(Y+=(y=G())*y),Y=(X-(Y=Math.sqrt(Y)))/Y*c,n.vx+=(u*=Y)*(X=(i*=i)/(t+i)),n.vy+=(y*=Y)*X,W.vx-=u*(X=1-X),W.vy-=y*X)}}}function u(l){if(l.data)return l.r=d[l.data.index];for(var Z=l.r=0;Z<4;++Z)l[Z]&&l[Z].r>l.r&&(l.r=l[Z].r)}function a(){if(b){var Z,c,m=b.length;for(d=new Array(m),Z=0;Z<m;++Z)c=b[Z],d[c.index]=+l(c,Z,b)}}return"function"!=typeof l&&(l=m(null==l?1:+l)),n.initialize=function(l){b=l,a()},n.iterations=function(l){return arguments.length?(X=+l,n):X},n.strength=function(l){return arguments.length?(c=+l,n):c},n.radius=function(Z){return arguments.length?(l="function"==typeof Z?Z:m(+Z),a(),n):l},n},l.forceLink=function(l){var Z,d,c,W,i,u=X,a=function(l){return 1/Math.min(W[l.source.index],W[l.target.index])},V=m(30),h=1;function t(b){for(var c=0,m=l.length;c<h;++c)for(var W,X,n,u,a,V,t,y=0;y<m;++y)X=(W=l[y]).source,u=(n=W.target).x+n.vx-X.x-X.vx||G(),a=n.y+n.vy-X.y-X.vy||G(),u*=V=((V=Math.sqrt(u*u+a*a))-d[y])/V*b*Z[y],a*=V,n.vx-=u*(t=i[y]),n.vy-=a*t,X.vx+=u*(t=1-t),X.vy+=a*t}function y(){if(c){var m,G,X=c.length,a=l.length,V=b.map(c,u);for(m=0,W=new Array(X);m<a;++m)(G=l[m]).index=m,"object"!=typeof G.source&&(G.source=n(V,G.source)),"object"!=typeof G.target&&(G.target=n(V,G.target)),W[G.source.index]=(W[G.source.index]||0)+1,W[G.target.index]=(W[G.target.index]||0)+1;for(m=0,i=new Array(a);m<a;++m)G=l[m],i[m]=W[G.source.index]/(W[G.source.index]+W[G.target.index]);Z=new Array(a),Y(),d=new Array(a),e()}}function Y(){if(c)for(var b=0,d=l.length;b<d;++b)Z[b]=+a(l[b],b,l)}function e(){if(c)for(var Z=0,b=l.length;Z<b;++Z)d[Z]=+V(l[Z],Z,l)}return null==l&&(l=[]),t.initialize=function(l){c=l,y()},t.links=function(Z){return arguments.length?(l=Z,y(),t):l},t.id=function(l){return arguments.length?(u=l,t):u},t.iterations=function(l){return arguments.length?(h=+l,t):h},t.strength=function(l){return arguments.length?(a="function"==typeof l?l:m(+l),Y(),t):a},t.distance=function(l){return arguments.length?(V="function"==typeof l?l:m(+l),e(),t):V},t},l.forceManyBody=function(){var l,b,d,c,W=m(-30),i=1,X=1/0,n=.81;function V(c){var m,G=l.length,W=Z.quadtree(l,u,a).visitAfter(t);for(d=c,m=0;m<G;++m)b=l[m],W.visit(y)}function h(){if(l){var Z,b,d=l.length;for(c=new Array(d),Z=0;Z<d;++Z)b=l[Z],c[b.index]=+W(b,Z,l)}}function t(l){var Z,b,d,m,G,W=0,i=0;if(l.length){for(d=m=G=0;G<4;++G)(Z=l[G])&&(b=Math.abs(Z.value))&&(W+=Z.value,i+=b,d+=b*Z.x,m+=b*Z.y);l.x=d/i,l.y=m/i}else{(Z=l).x=Z.data.x,Z.y=Z.data.y;do{W+=c[Z.data.index]}while(Z=Z.next)}l.value=W}function y(l,Z,m,W){if(!l.value)return!0;var u=l.x-b.x,a=l.y-b.y,V=W-Z,h=u*u+a*a;if(V*V/n<h)return h<X&&(0===u&&(h+=(u=G())*u),0===a&&(h+=(a=G())*a),h<i&&(h=Math.sqrt(i*h)),b.vx+=u*l.value*d/h,b.vy+=a*l.value*d/h),!0;if(!(l.length||h>=X)){(l.data!==b||l.next)&&(0===u&&(h+=(u=G())*u),0===a&&(h+=(a=G())*a),h<i&&(h=Math.sqrt(i*h)));do{l.data!==b&&(V=c[l.data.index]*d/h,b.vx+=u*V,b.vy+=a*V)}while(l=l.next)}}return V.initialize=function(Z){l=Z,h()},V.strength=function(l){return arguments.length?(W="function"==typeof l?l:m(+l),h(),V):W},V.distanceMin=function(l){return arguments.length?(i=l*l,V):Math.sqrt(i)},V.distanceMax=function(l){return arguments.length?(X=l*l,V):Math.sqrt(X)},V.theta=function(l){return arguments.length?(n=l*l,V):Math.sqrt(n)},V},l.forceRadial=function(l,Z,b){var d,c,G,W=m(.1);function i(l){for(var m=0,W=d.length;m<W;++m){var i=d[m],X=i.x-Z||1e-6,n=i.y-b||1e-6,u=Math.sqrt(X*X+n*n),a=(G[m]-u)*c[m]*l/u;i.vx+=X*a,i.vy+=n*a}}function X(){if(d){var Z,b=d.length;for(c=new Array(b),G=new Array(b),Z=0;Z<b;++Z)G[Z]=+l(d[Z],Z,d),c[Z]=isNaN(G[Z])?0:+W(d[Z],Z,d)}}return"function"!=typeof l&&(l=m(+l)),null==Z&&(Z=0),null==b&&(b=0),i.initialize=function(l){d=l,X()},i.strength=function(l){return arguments.length?(W="function"==typeof l?l:m(+l),X(),i):W},i.radius=function(Z){return arguments.length?(l="function"==typeof Z?Z:m(+Z),X(),i):l},i.x=function(l){return arguments.length?(Z=+l,i):Z},i.y=function(l){return arguments.length?(b=+l,i):b},i},l.forceSimulation=function(l){var Z,m=1,G=.001,W=1-Math.pow(G,1/300),i=0,X=.6,n=b.map(),u=c.timer(h),a=d.dispatch("tick","end");function h(){t(),a.call("tick",Z),m<G&&(u.stop(),a.call("end",Z))}function t(b){var d,c,G=l.length;void 0===b&&(b=1);for(var u=0;u<b;++u)for(m+=(i-m)*W,n.each((function(l){l(m)})),d=0;d<G;++d)null==(c=l[d]).fx?c.x+=c.vx*=X:(c.x=c.fx,c.vx=0),null==c.fy?c.y+=c.vy*=X:(c.y=c.fy,c.vy=0);return Z}function y(){for(var Z,b=0,d=l.length;b<d;++b){if((Z=l[b]).index=b,null!=Z.fx&&(Z.x=Z.fx),null!=Z.fy&&(Z.y=Z.fy),isNaN(Z.x)||isNaN(Z.y)){var c=10*Math.sqrt(b),m=b*V;Z.x=c*Math.cos(m),Z.y=c*Math.sin(m)}(isNaN(Z.vx)||isNaN(Z.vy))&&(Z.vx=Z.vy=0)}}function Y(Z){return Z.initialize&&Z.initialize(l),Z}return null==l&&(l=[]),y(),Z={tick:t,restart:function(){return u.restart(h),Z},stop:function(){return u.stop(),Z},nodes:function(b){return arguments.length?(l=b,y(),n.each(Y),Z):l},alpha:function(l){return arguments.length?(m=+l,Z):m},alphaMin:function(l){return arguments.length?(G=+l,Z):G},alphaDecay:function(l){return arguments.length?(W=+l,Z):+W},alphaTarget:function(l){return arguments.length?(i=+l,Z):i},velocityDecay:function(l){return arguments.length?(X=1-l,Z):1-X},force:function(l,b){return arguments.length>1?(null==b?n.remove(l):n.set(l,Y(b)),Z):n.get(l)},find:function(Z,b,d){var c,m,G,W,i,X=0,n=l.length;for(null==d?d=1/0:d*=d,X=0;X<n;++X)(G=(c=Z-(W=l[X]).x)*c+(m=b-W.y)*m)<d&&(i=W,d=G);return i},on:function(l,b){return arguments.length>1?(a.on(l,b),Z):a.on(l)}}},l.forceX=function(l){var Z,b,d,c=m(.1);function G(l){for(var c,m=0,G=Z.length;m<G;++m)(c=Z[m]).vx+=(d[m]-c.x)*b[m]*l}function W(){if(Z){var m,G=Z.length;for(b=new Array(G),d=new Array(G),m=0;m<G;++m)b[m]=isNaN(d[m]=+l(Z[m],m,Z))?0:+c(Z[m],m,Z)}}return"function"!=typeof l&&(l=m(null==l?0:+l)),G.initialize=function(l){Z=l,W()},G.strength=function(l){return arguments.length?(c="function"==typeof l?l:m(+l),W(),G):c},G.x=function(Z){return arguments.length?(l="function"==typeof Z?Z:m(+Z),W(),G):l},G},l.forceY=function(l){var Z,b,d,c=m(.1);function G(l){for(var c,m=0,G=Z.length;m<G;++m)(c=Z[m]).vy+=(d[m]-c.y)*b[m]*l}function W(){if(Z){var m,G=Z.length;for(b=new Array(G),d=new Array(G),m=0;m<G;++m)b[m]=isNaN(d[m]=+l(Z[m],m,Z))?0:+c(Z[m],m,Z)}}return"function"!=typeof l&&(l=m(null==l?0:+l)),G.initialize=function(l){Z=l,W()},G.strength=function(l){return arguments.length?(c="function"==typeof l?l:m(+l),W(),G):c},G.y=function(Z){return arguments.length?(l="function"==typeof Z?Z:m(+Z),W(),G):l},G},Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-collection":33,"d3-dispatch":36,"d3-quadtree":48,"d3-timer":56}],42:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";function Z(l,Z){if((b=(l=Z?l.toExponential(Z-1):l.toExponential()).indexOf("e"))<0)return null;var b,d=l.slice(0,b);return[d.length>1?d[0]+d.slice(2):d,+l.slice(b+1)]}function b(l){return(l=Z(Math.abs(l)))?l[1]:NaN}var d,c=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function m(l){if(!(Z=c.exec(l)))throw new Error("invalid format: "+l);var Z;return new G({fill:Z[1],align:Z[2],sign:Z[3],symbol:Z[4],zero:Z[5],width:Z[6],comma:Z[7],precision:Z[8]&&Z[8].slice(1),trim:Z[9],type:Z[10]})}function G(l){this.fill=void 0===l.fill?" ":l.fill+"",this.align=void 0===l.align?">":l.align+"",this.sign=void 0===l.sign?"-":l.sign+"",this.symbol=void 0===l.symbol?"":l.symbol+"",this.zero=!!l.zero,this.width=void 0===l.width?void 0:+l.width,this.comma=!!l.comma,this.precision=void 0===l.precision?void 0:+l.precision,this.trim=!!l.trim,this.type=void 0===l.type?"":l.type+""}function W(l,b){var d=Z(l,b);if(!d)return l+"";var c=d[0],m=d[1];return m<0?"0."+new Array(-m).join("0")+c:c.length>m+1?c.slice(0,m+1)+"."+c.slice(m+1):c+new Array(m-c.length+2).join("0")}m.prototype=G.prototype,G.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var i={"%":function(l,Z){return(100*l).toFixed(Z)},b:function(l){return Math.round(l).toString(2)},c:function(l){return l+""},d:function(l){return Math.round(l).toString(10)},e:function(l,Z){return l.toExponential(Z)},f:function(l,Z){return l.toFixed(Z)},g:function(l,Z){return l.toPrecision(Z)},o:function(l){return Math.round(l).toString(8)},p:function(l,Z){return W(100*l,Z)},r:W,s:function(l,b){var c=Z(l,b);if(!c)return l+"";var m=c[0],G=c[1],W=G-(d=3*Math.max(-8,Math.min(8,Math.floor(G/3))))+1,i=m.length;return W===i?m:W>i?m+new Array(W-i+1).join("0"):W>0?m.slice(0,W)+"."+m.slice(W):"0."+new Array(1-W).join("0")+Z(l,Math.max(0,b+W-1))[0]},X:function(l){return Math.round(l).toString(16).toUpperCase()},x:function(l){return Math.round(l).toString(16)}};function X(l){return l}var n,u=Array.prototype.map,a=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function V(l){var Z,c,G=void 0===l.grouping||void 0===l.thousands?X:(Z=u.call(l.grouping,Number),c=l.thousands+"",function(l,b){for(var d=l.length,m=[],G=0,W=Z[0],i=0;d>0&&W>0&&(i+W+1>b&&(W=Math.max(1,b-i)),m.push(l.substring(d-=W,d+W)),!((i+=W+1)>b));)W=Z[G=(G+1)%Z.length];return m.reverse().join(c)}),W=void 0===l.currency?"":l.currency[0]+"",n=void 0===l.currency?"":l.currency[1]+"",V=void 0===l.decimal?".":l.decimal+"",h=void 0===l.numerals?X:function(l){return function(Z){return Z.replace(/[0-9]/g,(function(Z){return l[+Z]}))}}(u.call(l.numerals,String)),t=void 0===l.percent?"%":l.percent+"",y=void 0===l.minus?"-":l.minus+"",Y=void 0===l.nan?"NaN":l.nan+"";function e(l){var Z=(l=m(l)).fill,b=l.align,c=l.sign,X=l.symbol,u=l.zero,e=l.width,p=l.comma,o=l.precision,s=l.trim,I=l.type;"n"===I?(p=!0,I="g"):i[I]||(void 0===o&&(o=12),s=!0,I="g"),(u||"0"===Z&&"="===b)&&(u=!0,Z="0",b="=");var R="$"===X?W:"#"===X&&/[boxX]/.test(I)?"0"+I.toLowerCase():"",g="$"===X?n:/[%p]/.test(I)?t:"",K=i[I],N=/[defgprs%]/.test(I);function H(l){var m,W,i,X=R,n=g;if("c"===I)n=K(l)+n,l="";else{var t=(l=+l)<0;if(l=isNaN(l)?Y:K(Math.abs(l),o),s&&(l=function(l){l:for(var Z,b=l.length,d=1,c=-1;d<b;++d)switch(l[d]){case".":c=Z=d;break;case"0":0===c&&(c=d),Z=d;break;default:if(c>0){if(!+l[d])break l;c=0}}return c>0?l.slice(0,c)+l.slice(Z+1):l}(l)),t&&0==+l&&(t=!1),X=(t?"("===c?c:y:"-"===c||"("===c?"":c)+X,n=("s"===I?a[8+d/3]:"")+n+(t&&"("===c?")":""),N)for(m=-1,W=l.length;++m<W;)if(48>(i=l.charCodeAt(m))||i>57){n=(46===i?V+l.slice(m+1):l.slice(m))+n,l=l.slice(0,m);break}}p&&!u&&(l=G(l,1/0));var H=X.length+l.length+n.length,x=H<e?new Array(e-H+1).join(Z):"";switch(p&&u&&(l=G(x+l,x.length?e-n.length:1/0),x=""),b){case"<":l=X+l+n+x;break;case"=":l=X+x+l+n;break;case"^":l=x.slice(0,H=x.length>>1)+X+l+n+x.slice(H);break;default:l=x+X+l+n}return h(l)}return o=void 0===o?6:/[gprs]/.test(I)?Math.max(1,Math.min(21,o)):Math.max(0,Math.min(20,o)),H.toString=function(){return l+""},H}return{format:e,formatPrefix:function(l,Z){var d=e(((l=m(l)).type="f",l)),c=3*Math.max(-8,Math.min(8,Math.floor(b(Z)/3))),G=Math.pow(10,-c),W=a[8+c/3];return function(l){return d(G*l)+W}}}}function h(Z){return n=V(Z),l.format=n.format,l.formatPrefix=n.formatPrefix,n}h({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"}),l.FormatSpecifier=G,l.formatDefaultLocale=h,l.formatLocale=V,l.formatSpecifier=m,l.precisionFixed=function(l){return Math.max(0,-b(Math.abs(l)))},l.precisionPrefix=function(l,Z){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(b(Z)/3)))-b(Math.abs(l)))},l.precisionRound=function(l,Z){return l=Math.abs(l),Z=Math.abs(Z)-l,Math.max(0,b(Z)-b(l))+1},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],43:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-array")):c((d=d||self).d3=d.d3||{},d.d3)}(this,(function(l,Z){"use strict";function b(){return new d}function d(){this.reset()}d.prototype={constructor:d,reset:function(){this.s=this.t=0},add:function(l){m(c,l,this.t),m(this,c.s,this.s),this.s?this.t+=c.t:this.s=c.t},valueOf:function(){return this.s}};var c=new d;function m(l,Z,b){var d=l.s=Z+b,c=d-Z,m=d-c;l.t=Z-m+(b-c)}var G=1e-6,W=Math.PI,i=W/2,X=W/4,n=2*W,u=180/W,a=W/180,V=Math.abs,h=Math.atan,t=Math.atan2,y=Math.cos,Y=Math.ceil,e=Math.exp,p=Math.log,o=Math.pow,s=Math.sin,I=Math.sign||function(l){return l>0?1:l<0?-1:0},R=Math.sqrt,g=Math.tan;function K(l){return l>1?0:l<-1?W:Math.acos(l)}function N(l){return l>1?i:l<-1?-i:Math.asin(l)}function H(l){return(l=s(l/2))*l}function x(){}function J(l,Z){l&&F.hasOwnProperty(l.type)&&F[l.type](l,Z)}var L={Feature:function(l,Z){J(l.geometry,Z)},FeatureCollection:function(l,Z){for(var b=l.features,d=-1,c=b.length;++d<c;)J(b[d].geometry,Z)}},F={Sphere:function(l,Z){Z.sphere()},Point:function(l,Z){l=l.coordinates,Z.point(l[0],l[1],l[2])},MultiPoint:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)l=b[d],Z.point(l[0],l[1],l[2])},LineString:function(l,Z){C(l.coordinates,Z,0)},MultiLineString:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)C(b[d],Z,0)},Polygon:function(l,Z){S(l.coordinates,Z)},MultiPolygon:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)S(b[d],Z)},GeometryCollection:function(l,Z){for(var b=l.geometries,d=-1,c=b.length;++d<c;)J(b[d],Z)}};function C(l,Z,b){var d,c=-1,m=l.length-b;for(Z.lineStart();++c<m;)d=l[c],Z.point(d[0],d[1],d[2]);Z.lineEnd()}function S(l,Z){var b=-1,d=l.length;for(Z.polygonStart();++b<d;)C(l[b],Z,1);Z.polygonEnd()}function B(l,Z){l&&L.hasOwnProperty(l.type)?L[l.type](l,Z):J(l,Z)}var k,v,z,M,r,T=b(),j=b(),w={point:x,lineStart:x,lineEnd:x,polygonStart:function(){T.reset(),w.lineStart=U,w.lineEnd=f},polygonEnd:function(){var l=+T;j.add(l<0?n+l:l),this.lineStart=this.lineEnd=this.point=x},sphere:function(){j.add(n)}};function U(){w.point=Q}function f(){P(k,v)}function Q(l,Z){w.point=P,k=l,v=Z,z=l*=a,M=y(Z=(Z*=a)/2+X),r=s(Z)}function P(l,Z){var b=(l*=a)-z,d=b>=0?1:-1,c=d*b,m=y(Z=(Z*=a)/2+X),G=s(Z),W=r*G,i=M*m+W*y(c),n=W*d*s(c);T.add(t(n,i)),z=l,M=m,r=G}function D(l){return[t(l[1],l[0]),N(l[2])]}function A(l){var Z=l[0],b=l[1],d=y(b);return[d*y(Z),d*s(Z),s(b)]}function E(l,Z){return l[0]*Z[0]+l[1]*Z[1]+l[2]*Z[2]}function O(l,Z){return[l[1]*Z[2]-l[2]*Z[1],l[2]*Z[0]-l[0]*Z[2],l[0]*Z[1]-l[1]*Z[0]]}function q(l,Z){l[0]+=Z[0],l[1]+=Z[1],l[2]+=Z[2]}function _(l,Z){return[l[0]*Z,l[1]*Z,l[2]*Z]}function $(l){var Z=R(l[0]*l[0]+l[1]*l[1]+l[2]*l[2]);l[0]/=Z,l[1]/=Z,l[2]/=Z}var ll,Zl,bl,dl,cl,ml,Gl,Wl,il,Xl,nl,ul,al,Vl,hl,tl,yl,Yl,el,pl,ol,sl,Il,Rl,gl,Kl,Nl=b(),Hl={point:xl,lineStart:Ll,lineEnd:Fl,polygonStart:function(){Hl.point=Cl,Hl.lineStart=Sl,Hl.lineEnd=Bl,Nl.reset(),w.polygonStart()},polygonEnd:function(){w.polygonEnd(),Hl.point=xl,Hl.lineStart=Ll,Hl.lineEnd=Fl,T<0?(ll=-(bl=180),Zl=-(dl=90)):Nl>G?dl=90:Nl<-G&&(Zl=-90),Xl[0]=ll,Xl[1]=bl},sphere:function(){ll=-(bl=180),Zl=-(dl=90)}};function xl(l,Z){il.push(Xl=[ll=l,bl=l]),Z<Zl&&(Zl=Z),Z>dl&&(dl=Z)}function Jl(l,Z){var b=A([l*a,Z*a]);if(Wl){var d=O(Wl,b),c=O([d[1],-d[0],0],d);$(c),c=D(c);var m,G=l-cl,W=G>0?1:-1,i=c[0]*u*W,X=V(G)>180;X^(W*cl<i&&i<W*l)?(m=c[1]*u)>dl&&(dl=m):X^(W*cl<(i=(i+360)%360-180)&&i<W*l)?(m=-c[1]*u)<Zl&&(Zl=m):(Z<Zl&&(Zl=Z),Z>dl&&(dl=Z)),X?l<cl?kl(ll,l)>kl(ll,bl)&&(bl=l):kl(l,bl)>kl(ll,bl)&&(ll=l):bl>=ll?(l<ll&&(ll=l),l>bl&&(bl=l)):l>cl?kl(ll,l)>kl(ll,bl)&&(bl=l):kl(l,bl)>kl(ll,bl)&&(ll=l)}else il.push(Xl=[ll=l,bl=l]);Z<Zl&&(Zl=Z),Z>dl&&(dl=Z),Wl=b,cl=l}function Ll(){Hl.point=Jl}function Fl(){Xl[0]=ll,Xl[1]=bl,Hl.point=xl,Wl=null}function Cl(l,Z){if(Wl){var b=l-cl;Nl.add(V(b)>180?b+(b>0?360:-360):b)}else ml=l,Gl=Z;w.point(l,Z),Jl(l,Z)}function Sl(){w.lineStart()}function Bl(){Cl(ml,Gl),w.lineEnd(),V(Nl)>G&&(ll=-(bl=180)),Xl[0]=ll,Xl[1]=bl,Wl=null}function kl(l,Z){return(Z-=l)<0?Z+360:Z}function vl(l,Z){return l[0]-Z[0]}function zl(l,Z){return l[0]<=l[1]?l[0]<=Z&&Z<=l[1]:Z<l[0]||l[1]<Z}var Ml={sphere:x,point:rl,lineStart:jl,lineEnd:fl,polygonStart:function(){Ml.lineStart=Ql,Ml.lineEnd=Pl},polygonEnd:function(){Ml.lineStart=jl,Ml.lineEnd=fl}};function rl(l,Z){l*=a;var b=y(Z*=a);Tl(b*y(l),b*s(l),s(Z))}function Tl(l,Z,b){++nl,al+=(l-al)/nl,Vl+=(Z-Vl)/nl,hl+=(b-hl)/nl}function jl(){Ml.point=wl}function wl(l,Z){l*=a;var b=y(Z*=a);Rl=b*y(l),gl=b*s(l),Kl=s(Z),Ml.point=Ul,Tl(Rl,gl,Kl)}function Ul(l,Z){l*=a;var b=y(Z*=a),d=b*y(l),c=b*s(l),m=s(Z),G=t(R((G=gl*m-Kl*c)*G+(G=Kl*d-Rl*m)*G+(G=Rl*c-gl*d)*G),Rl*d+gl*c+Kl*m);ul+=G,tl+=G*(Rl+(Rl=d)),yl+=G*(gl+(gl=c)),Yl+=G*(Kl+(Kl=m)),Tl(Rl,gl,Kl)}function fl(){Ml.point=rl}function Ql(){Ml.point=Dl}function Pl(){Al(sl,Il),Ml.point=rl}function Dl(l,Z){sl=l,Il=Z,l*=a,Z*=a,Ml.point=Al;var b=y(Z);Rl=b*y(l),gl=b*s(l),Kl=s(Z),Tl(Rl,gl,Kl)}function Al(l,Z){l*=a;var b=y(Z*=a),d=b*y(l),c=b*s(l),m=s(Z),G=gl*m-Kl*c,W=Kl*d-Rl*m,i=Rl*c-gl*d,X=R(G*G+W*W+i*i),n=N(X),u=X&&-n/X;el+=u*G,pl+=u*W,ol+=u*i,ul+=n,tl+=n*(Rl+(Rl=d)),yl+=n*(gl+(gl=c)),Yl+=n*(Kl+(Kl=m)),Tl(Rl,gl,Kl)}function El(l){return function(){return l}}function Ol(l,Z){function b(b,d){return b=l(b,d),Z(b[0],b[1])}return l.invert&&Z.invert&&(b.invert=function(b,d){return(b=Z.invert(b,d))&&l.invert(b[0],b[1])}),b}function ql(l,Z){return[V(l)>W?l+Math.round(-l/n)*n:l,Z]}function _l(l,Z,b){return(l%=n)?Z||b?Ol(lZ(l),ZZ(Z,b)):lZ(l):Z||b?ZZ(Z,b):ql}function $l(l){return function(Z,b){return[(Z+=l)>W?Z-n:Z<-W?Z+n:Z,b]}}function lZ(l){var Z=$l(l);return Z.invert=$l(-l),Z}function ZZ(l,Z){var b=y(l),d=s(l),c=y(Z),m=s(Z);function G(l,Z){var G=y(Z),W=y(l)*G,i=s(l)*G,X=s(Z),n=X*b+W*d;return[t(i*c-n*m,W*b-X*d),N(n*c+i*m)]}return G.invert=function(l,Z){var G=y(Z),W=y(l)*G,i=s(l)*G,X=s(Z),n=X*c-i*m;return[t(i*c+X*m,W*b+n*d),N(n*b-W*d)]},G}function bZ(l){function Z(Z){return(Z=l(Z[0]*a,Z[1]*a))[0]*=u,Z[1]*=u,Z}return l=_l(l[0]*a,l[1]*a,l.length>2?l[2]*a:0),Z.invert=function(Z){return(Z=l.invert(Z[0]*a,Z[1]*a))[0]*=u,Z[1]*=u,Z},Z}function dZ(l,Z,b,d,c,m){if(b){var G=y(Z),W=s(Z),i=d*b;null==c?(c=Z+d*n,m=Z-i/2):(c=cZ(G,c),m=cZ(G,m),(d>0?c<m:c>m)&&(c+=d*n));for(var X,u=c;d>0?u>m:u<m;u-=i)X=D([G,-W*y(u),-W*s(u)]),l.point(X[0],X[1])}}function cZ(l,Z){(Z=A(Z))[0]-=l,$(Z);var b=K(-Z[1]);return((-Z[2]<0?-b:b)+n-G)%n}function mZ(){var l,Z=[];return{point:function(Z,b){l.push([Z,b])},lineStart:function(){Z.push(l=[])},lineEnd:x,rejoin:function(){Z.length>1&&Z.push(Z.pop().concat(Z.shift()))},result:function(){var b=Z;return Z=[],l=null,b}}}function GZ(l,Z){return V(l[0]-Z[0])<G&&V(l[1]-Z[1])<G}function WZ(l,Z,b,d){this.x=l,this.z=Z,this.o=b,this.e=d,this.v=!1,this.n=this.p=null}function iZ(l,Z,b,d,c){var m,G,W=[],i=[];if(l.forEach((function(l){if(!((Z=l.length-1)<=0)){var Z,b,d=l[0],G=l[Z];if(GZ(d,G)){for(c.lineStart(),m=0;m<Z;++m)c.point((d=l[m])[0],d[1]);c.lineEnd()}else W.push(b=new WZ(d,l,null,!0)),i.push(b.o=new WZ(d,null,b,!1)),W.push(b=new WZ(G,l,null,!1)),i.push(b.o=new WZ(G,null,b,!0))}})),W.length){for(i.sort(Z),XZ(W),XZ(i),m=0,G=i.length;m<G;++m)i[m].e=b=!b;for(var X,n,u=W[0];;){for(var a=u,V=!0;a.v;)if((a=a.n)===u)return;X=a.z,c.lineStart();do{if(a.v=a.o.v=!0,a.e){if(V)for(m=0,G=X.length;m<G;++m)c.point((n=X[m])[0],n[1]);else d(a.x,a.n.x,1,c);a=a.n}else{if(V)for(X=a.p.z,m=X.length-1;m>=0;--m)c.point((n=X[m])[0],n[1]);else d(a.x,a.p.x,-1,c);a=a.p}X=(a=a.o).z,V=!V}while(!a.v);c.lineEnd()}}}function XZ(l){if(Z=l.length){for(var Z,b,d=0,c=l[0];++d<Z;)c.n=b=l[d],b.p=c,c=b;c.n=b=l[0],b.p=c}}ql.invert=ql;var nZ=b();function uZ(l){return V(l[0])<=W?l[0]:I(l[0])*((V(l[0])+W)%n-W)}function aZ(l,Z){var b=uZ(Z),d=Z[1],c=s(d),m=[s(b),-y(b),0],u=0,a=0;nZ.reset(),1===c?d=i+G:-1===c&&(d=-i-G);for(var V=0,h=l.length;V<h;++V)if(e=(Y=l[V]).length)for(var Y,e,p=Y[e-1],o=uZ(p),I=p[1]/2+X,R=s(I),g=y(I),K=0;K<e;++K,o=x,R=L,g=F,p=H){var H=Y[K],x=uZ(H),J=H[1]/2+X,L=s(J),F=y(J),C=x-o,S=C>=0?1:-1,B=S*C,k=B>W,v=R*L;if(nZ.add(t(v*S*s(B),g*F+v*y(B))),u+=k?C+S*n:C,k^o>=b^x>=b){var z=O(A(p),A(H));$(z);var M=O(m,z);$(M);var r=(k^C>=0?-1:1)*N(M[2]);(d>r||d===r&&(z[0]||z[1]))&&(a+=k^C>=0?1:-1)}}return(u<-G||u<G&&nZ<-G)^1&a}function VZ(l,b,d,c){return function(m){var G,W,i,X=b(m),n=mZ(),u=b(n),a=!1,V={point:h,lineStart:y,lineEnd:Y,polygonStart:function(){V.point=e,V.lineStart=p,V.lineEnd=o,W=[],G=[]},polygonEnd:function(){V.point=h,V.lineStart=y,V.lineEnd=Y,W=Z.merge(W);var l=aZ(G,c);W.length?(a||(m.polygonStart(),a=!0),iZ(W,tZ,l,d,m)):l&&(a||(m.polygonStart(),a=!0),m.lineStart(),d(null,null,1,m),m.lineEnd()),a&&(m.polygonEnd(),a=!1),W=G=null},sphere:function(){m.polygonStart(),m.lineStart(),d(null,null,1,m),m.lineEnd(),m.polygonEnd()}};function h(Z,b){l(Z,b)&&m.point(Z,b)}function t(l,Z){X.point(l,Z)}function y(){V.point=t,X.lineStart()}function Y(){V.point=h,X.lineEnd()}function e(l,Z){i.push([l,Z]),u.point(l,Z)}function p(){u.lineStart(),i=[]}function o(){e(i[0][0],i[0][1]),u.lineEnd();var l,Z,b,d,c=u.clean(),X=n.result(),V=X.length;if(i.pop(),G.push(i),i=null,V)if(1&c){if((Z=(b=X[0]).length-1)>0){for(a||(m.polygonStart(),a=!0),m.lineStart(),l=0;l<Z;++l)m.point((d=b[l])[0],d[1]);m.lineEnd()}}else V>1&&2&c&&X.push(X.pop().concat(X.shift())),W.push(X.filter(hZ))}return V}}function hZ(l){return l.length>1}function tZ(l,Z){return((l=l.x)[0]<0?l[1]-i-G:i-l[1])-((Z=Z.x)[0]<0?Z[1]-i-G:i-Z[1])}var yZ=VZ((function(){return!0}),(function(l){var Z,b=NaN,d=NaN,c=NaN;return{lineStart:function(){l.lineStart(),Z=1},point:function(m,X){var n=m>0?W:-W,u=V(m-b);V(u-W)<G?(l.point(b,d=(d+X)/2>0?i:-i),l.point(c,d),l.lineEnd(),l.lineStart(),l.point(n,d),l.point(m,d),Z=0):c!==n&&u>=W&&(V(b-c)<G&&(b-=c*G),V(m-n)<G&&(m-=n*G),d=function(l,Z,b,d){var c,m,W=s(l-b);return V(W)>G?h((s(Z)*(m=y(d))*s(b)-s(d)*(c=y(Z))*s(l))/(c*m*W)):(Z+d)/2}(b,d,m,X),l.point(c,d),l.lineEnd(),l.lineStart(),l.point(n,d),Z=0),l.point(b=m,d=X),c=n},lineEnd:function(){l.lineEnd(),b=d=NaN},clean:function(){return 2-Z}}}),(function(l,Z,b,d){var c;if(null==l)c=b*i,d.point(-W,c),d.point(0,c),d.point(W,c),d.point(W,0),d.point(W,-c),d.point(0,-c),d.point(-W,-c),d.point(-W,0),d.point(-W,c);else if(V(l[0]-Z[0])>G){var m=l[0]<Z[0]?W:-W;c=b*m/2,d.point(-m,c),d.point(0,c),d.point(m,c)}else d.point(Z[0],Z[1])}),[-W,-i]);function YZ(l){var Z=y(l),b=6*a,d=Z>0,c=V(Z)>G;function m(l,b){return y(l)*y(b)>Z}function i(l,b,d){var c=[1,0,0],m=O(A(l),A(b)),i=E(m,m),X=m[0],n=i-X*X;if(!n)return!d&&l;var u=Z*i/n,a=-Z*X/n,h=O(c,m),t=_(c,u);q(t,_(m,a));var y=h,Y=E(t,y),e=E(y,y),p=Y*Y-e*(E(t,t)-1);if(!(p<0)){var o=R(p),s=_(y,(-Y-o)/e);if(q(s,t),s=D(s),!d)return s;var I,g=l[0],K=b[0],N=l[1],H=b[1];K<g&&(I=g,g=K,K=I);var x=K-g,J=V(x-W)<G;if(!J&&H<N&&(I=N,N=H,H=I),J||x<G?J?N+H>0^s[1]<(V(s[0]-g)<G?N:H):N<=s[1]&&s[1]<=H:x>W^(g<=s[0]&&s[0]<=K)){var L=_(y,(-Y+o)/e);return q(L,t),[s,D(L)]}}}function X(Z,b){var c=d?l:W-l,m=0;return Z<-c?m|=1:Z>c&&(m|=2),b<-c?m|=4:b>c&&(m|=8),m}return VZ(m,(function(l){var Z,b,n,u,a;return{lineStart:function(){u=n=!1,a=1},point:function(V,h){var t,y=[V,h],Y=m(V,h),e=d?Y?0:X(V,h):Y?X(V+(V<0?W:-W),h):0;if(!Z&&(u=n=Y)&&l.lineStart(),Y!==n&&(!(t=i(Z,y))||GZ(Z,t)||GZ(y,t))&&(y[0]+=G,y[1]+=G,Y=m(y[0],y[1])),Y!==n)a=0,Y?(l.lineStart(),t=i(y,Z),l.point(t[0],t[1])):(t=i(Z,y),l.point(t[0],t[1]),l.lineEnd()),Z=t;else if(c&&Z&&d^Y){var p;e&b||!(p=i(y,Z,!0))||(a=0,d?(l.lineStart(),l.point(p[0][0],p[0][1]),l.point(p[1][0],p[1][1]),l.lineEnd()):(l.point(p[1][0],p[1][1]),l.lineEnd(),l.lineStart(),l.point(p[0][0],p[0][1])))}!Y||Z&&GZ(Z,y)||l.point(y[0],y[1]),Z=y,n=Y,b=e},lineEnd:function(){n&&l.lineEnd(),Z=null},clean:function(){return a|(u&&n)<<1}}}),(function(Z,d,c,m){dZ(m,l,b,c,Z,d)}),d?[0,-l]:[-W,l-W])}function eZ(l,b,d,c){function m(Z,m){return l<=Z&&Z<=d&&b<=m&&m<=c}function W(Z,m,G,W){var X=0,u=0;if(null==Z||(X=i(Z,G))!==(u=i(m,G))||n(Z,m)<0^G>0)do{W.point(0===X||3===X?l:d,X>1?c:b)}while((X=(X+G+4)%4)!==u);else W.point(m[0],m[1])}function i(Z,c){return V(Z[0]-l)<G?c>0?0:3:V(Z[0]-d)<G?c>0?2:1:V(Z[1]-b)<G?c>0?1:0:c>0?3:2}function X(l,Z){return n(l.x,Z.x)}function n(l,Z){var b=i(l,1),d=i(Z,1);return b!==d?b-d:0===b?Z[1]-l[1]:1===b?l[0]-Z[0]:2===b?l[1]-Z[1]:Z[0]-l[0]}return function(G){var i,n,u,a,V,h,t,y,Y,e,p,o=G,s=mZ(),I={point:R,lineStart:function(){I.point=g,n&&n.push(u=[]),e=!0,Y=!1,t=y=NaN},lineEnd:function(){i&&(g(a,V),h&&Y&&s.rejoin(),i.push(s.result())),I.point=R,Y&&o.lineEnd()},polygonStart:function(){o=s,i=[],n=[],p=!0},polygonEnd:function(){var b=function(){for(var Z=0,b=0,d=n.length;b<d;++b)for(var m,G,W=n[b],i=1,X=W.length,u=W[0],a=u[0],V=u[1];i<X;++i)m=a,G=V,u=W[i],a=u[0],V=u[1],G<=c?V>c&&(a-m)*(c-G)>(V-G)*(l-m)&&++Z:V<=c&&(a-m)*(c-G)<(V-G)*(l-m)&&--Z;return Z}(),d=p&&b,m=(i=Z.merge(i)).length;(d||m)&&(G.polygonStart(),d&&(G.lineStart(),W(null,null,1,G),G.lineEnd()),m&&iZ(i,X,b,W,G),G.polygonEnd()),o=G,i=n=u=null}};function R(l,Z){m(l,Z)&&o.point(l,Z)}function g(Z,G){var W=m(Z,G);if(n&&u.push([Z,G]),e)a=Z,V=G,h=W,e=!1,W&&(o.lineStart(),o.point(Z,G));else if(W&&Y)o.point(Z,G);else{var i=[t=Math.max(-1e9,Math.min(1e9,t)),y=Math.max(-1e9,Math.min(1e9,y))],X=[Z=Math.max(-1e9,Math.min(1e9,Z)),G=Math.max(-1e9,Math.min(1e9,G))];!function(l,Z,b,d,c,m){var G,W=l[0],i=l[1],X=0,n=1,u=Z[0]-W,a=Z[1]-i;if(G=b-W,u||!(G>0)){if(G/=u,u<0){if(G<X)return;G<n&&(n=G)}else if(u>0){if(G>n)return;G>X&&(X=G)}if(G=c-W,u||!(G<0)){if(G/=u,u<0){if(G>n)return;G>X&&(X=G)}else if(u>0){if(G<X)return;G<n&&(n=G)}if(G=d-i,a||!(G>0)){if(G/=a,a<0){if(G<X)return;G<n&&(n=G)}else if(a>0){if(G>n)return;G>X&&(X=G)}if(G=m-i,a||!(G<0)){if(G/=a,a<0){if(G>n)return;G>X&&(X=G)}else if(a>0){if(G<X)return;G<n&&(n=G)}return X>0&&(l[0]=W+X*u,l[1]=i+X*a),n<1&&(Z[0]=W+n*u,Z[1]=i+n*a),!0}}}}}(i,X,l,b,d,c)?W&&(o.lineStart(),o.point(Z,G),p=!1):(Y||(o.lineStart(),o.point(i[0],i[1])),o.point(X[0],X[1]),W||o.lineEnd(),p=!1)}t=Z,y=G,Y=W}return I}}var pZ,oZ,sZ,IZ=b(),RZ={sphere:x,point:x,lineStart:function(){RZ.point=KZ,RZ.lineEnd=gZ},lineEnd:x,polygonStart:x,polygonEnd:x};function gZ(){RZ.point=RZ.lineEnd=x}function KZ(l,Z){pZ=l*=a,oZ=s(Z*=a),sZ=y(Z),RZ.point=NZ}function NZ(l,Z){l*=a;var b=s(Z*=a),d=y(Z),c=V(l-pZ),m=y(c),G=d*s(c),W=sZ*b-oZ*d*m,i=oZ*b+sZ*d*m;IZ.add(t(R(G*G+W*W),i)),pZ=l,oZ=b,sZ=d}function HZ(l){return IZ.reset(),B(l,RZ),+IZ}var xZ=[null,null],JZ={type:"LineString",coordinates:xZ};function LZ(l,Z){return xZ[0]=l,xZ[1]=Z,HZ(JZ)}var FZ={Feature:function(l,Z){return SZ(l.geometry,Z)},FeatureCollection:function(l,Z){for(var b=l.features,d=-1,c=b.length;++d<c;)if(SZ(b[d].geometry,Z))return!0;return!1}},CZ={Sphere:function(){return!0},Point:function(l,Z){return BZ(l.coordinates,Z)},MultiPoint:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)if(BZ(b[d],Z))return!0;return!1},LineString:function(l,Z){return kZ(l.coordinates,Z)},MultiLineString:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)if(kZ(b[d],Z))return!0;return!1},Polygon:function(l,Z){return vZ(l.coordinates,Z)},MultiPolygon:function(l,Z){for(var b=l.coordinates,d=-1,c=b.length;++d<c;)if(vZ(b[d],Z))return!0;return!1},GeometryCollection:function(l,Z){for(var b=l.geometries,d=-1,c=b.length;++d<c;)if(SZ(b[d],Z))return!0;return!1}};function SZ(l,Z){return!(!l||!CZ.hasOwnProperty(l.type))&&CZ[l.type](l,Z)}function BZ(l,Z){return 0===LZ(l,Z)}function kZ(l,Z){for(var b,d,c,m=0,G=l.length;m<G;m++){if(0===(d=LZ(l[m],Z)))return!0;if(m>0&&(c=LZ(l[m],l[m-1]))>0&&b<=c&&d<=c&&(b+d-c)*(1-Math.pow((b-d)/c,2))<1e-12*c)return!0;b=d}return!1}function vZ(l,Z){return!!aZ(l.map(zZ),MZ(Z))}function zZ(l){return(l=l.map(MZ)).pop(),l}function MZ(l){return[l[0]*a,l[1]*a]}function rZ(l,b,d){var c=Z.range(l,b-G,d).concat(b);return function(l){return c.map((function(Z){return[l,Z]}))}}function TZ(l,b,d){var c=Z.range(l,b-G,d).concat(b);return function(l){return c.map((function(Z){return[Z,l]}))}}function jZ(){var l,b,d,c,m,W,i,X,n,u,a,h,t=10,y=t,e=90,p=360,o=2.5;function s(){return{type:"MultiLineString",coordinates:I()}}function I(){return Z.range(Y(c/e)*e,d,e).map(a).concat(Z.range(Y(X/p)*p,i,p).map(h)).concat(Z.range(Y(b/t)*t,l,t).filter((function(l){return V(l%e)>G})).map(n)).concat(Z.range(Y(W/y)*y,m,y).filter((function(l){return V(l%p)>G})).map(u))}return s.lines=function(){return I().map((function(l){return{type:"LineString",coordinates:l}}))},s.outline=function(){return{type:"Polygon",coordinates:[a(c).concat(h(i).slice(1),a(d).reverse().slice(1),h(X).reverse().slice(1))]}},s.extent=function(l){return arguments.length?s.extentMajor(l).extentMinor(l):s.extentMinor()},s.extentMajor=function(l){return arguments.length?(c=+l[0][0],d=+l[1][0],X=+l[0][1],i=+l[1][1],c>d&&(l=c,c=d,d=l),X>i&&(l=X,X=i,i=l),s.precision(o)):[[c,X],[d,i]]},s.extentMinor=function(Z){return arguments.length?(b=+Z[0][0],l=+Z[1][0],W=+Z[0][1],m=+Z[1][1],b>l&&(Z=b,b=l,l=Z),W>m&&(Z=W,W=m,m=Z),s.precision(o)):[[b,W],[l,m]]},s.step=function(l){return arguments.length?s.stepMajor(l).stepMinor(l):s.stepMinor()},s.stepMajor=function(l){return arguments.length?(e=+l[0],p=+l[1],s):[e,p]},s.stepMinor=function(l){return arguments.length?(t=+l[0],y=+l[1],s):[t,y]},s.precision=function(Z){return arguments.length?(o=+Z,n=rZ(W,m,90),u=TZ(b,l,o),a=rZ(X,i,90),h=TZ(c,d,o),s):o},s.extentMajor([[-180,-90+G],[180,90-G]]).extentMinor([[-180,-80-G],[180,80+G]])}function wZ(l){return l}var UZ,fZ,QZ,PZ,DZ=b(),AZ=b(),EZ={point:x,lineStart:x,lineEnd:x,polygonStart:function(){EZ.lineStart=OZ,EZ.lineEnd=$Z},polygonEnd:function(){EZ.lineStart=EZ.lineEnd=EZ.point=x,DZ.add(V(AZ)),AZ.reset()},result:function(){var l=DZ/2;return DZ.reset(),l}};function OZ(){EZ.point=qZ}function qZ(l,Z){EZ.point=_Z,UZ=QZ=l,fZ=PZ=Z}function _Z(l,Z){AZ.add(PZ*l-QZ*Z),QZ=l,PZ=Z}function $Z(){_Z(UZ,fZ)}var lb,Zb,bb,db,cb=1/0,mb=cb,Gb=-cb,Wb=Gb,ib={point:function(l,Z){l<cb&&(cb=l),l>Gb&&(Gb=l),Z<mb&&(mb=Z),Z>Wb&&(Wb=Z)},lineStart:x,lineEnd:x,polygonStart:x,polygonEnd:x,result:function(){var l=[[cb,mb],[Gb,Wb]];return Gb=Wb=-(mb=cb=1/0),l}},Xb=0,nb=0,ub=0,ab=0,Vb=0,hb=0,tb=0,yb=0,Yb=0,eb={point:pb,lineStart:ob,lineEnd:Rb,polygonStart:function(){eb.lineStart=gb,eb.lineEnd=Kb},polygonEnd:function(){eb.point=pb,eb.lineStart=ob,eb.lineEnd=Rb},result:function(){var l=Yb?[tb/Yb,yb/Yb]:hb?[ab/hb,Vb/hb]:ub?[Xb/ub,nb/ub]:[NaN,NaN];return Xb=nb=ub=ab=Vb=hb=tb=yb=Yb=0,l}};function pb(l,Z){Xb+=l,nb+=Z,++ub}function ob(){eb.point=sb}function sb(l,Z){eb.point=Ib,pb(bb=l,db=Z)}function Ib(l,Z){var b=l-bb,d=Z-db,c=R(b*b+d*d);ab+=c*(bb+l)/2,Vb+=c*(db+Z)/2,hb+=c,pb(bb=l,db=Z)}function Rb(){eb.point=pb}function gb(){eb.point=Nb}function Kb(){Hb(lb,Zb)}function Nb(l,Z){eb.point=Hb,pb(lb=bb=l,Zb=db=Z)}function Hb(l,Z){var b=l-bb,d=Z-db,c=R(b*b+d*d);ab+=c*(bb+l)/2,Vb+=c*(db+Z)/2,hb+=c,tb+=(c=db*l-bb*Z)*(bb+l),yb+=c*(db+Z),Yb+=3*c,pb(bb=l,db=Z)}function xb(l){this._context=l}xb.prototype={_radius:4.5,pointRadius:function(l){return this._radius=l,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(l,Z){switch(this._point){case 0:this._context.moveTo(l,Z),this._point=1;break;case 1:this._context.lineTo(l,Z);break;default:this._context.moveTo(l+this._radius,Z),this._context.arc(l,Z,this._radius,0,n)}},result:x};var Jb,Lb,Fb,Cb,Sb,Bb=b(),kb={point:x,lineStart:function(){kb.point=vb},lineEnd:function(){Jb&&zb(Lb,Fb),kb.point=x},polygonStart:function(){Jb=!0},polygonEnd:function(){Jb=null},result:function(){var l=+Bb;return Bb.reset(),l}};function vb(l,Z){kb.point=zb,Lb=Cb=l,Fb=Sb=Z}function zb(l,Z){Cb-=l,Sb-=Z,Bb.add(R(Cb*Cb+Sb*Sb)),Cb=l,Sb=Z}function Mb(){this._string=[]}function rb(l){return"m0,"+l+"a"+l+","+l+" 0 1,1 0,"+-2*l+"a"+l+","+l+" 0 1,1 0,"+2*l+"z"}function Tb(l){return function(Z){var b=new jb;for(var d in l)b[d]=l[d];return b.stream=Z,b}}function jb(){}function wb(l,Z,b){var d=l.clipExtent&&l.clipExtent();return l.scale(150).translate([0,0]),null!=d&&l.clipExtent(null),B(b,l.stream(ib)),Z(ib.result()),null!=d&&l.clipExtent(d),l}function Ub(l,Z,b){return wb(l,(function(b){var d=Z[1][0]-Z[0][0],c=Z[1][1]-Z[0][1],m=Math.min(d/(b[1][0]-b[0][0]),c/(b[1][1]-b[0][1])),G=+Z[0][0]+(d-m*(b[1][0]+b[0][0]))/2,W=+Z[0][1]+(c-m*(b[1][1]+b[0][1]))/2;l.scale(150*m).translate([G,W])}),b)}function fb(l,Z,b){return Ub(l,[[0,0],Z],b)}function Qb(l,Z,b){return wb(l,(function(b){var d=+Z,c=d/(b[1][0]-b[0][0]),m=(d-c*(b[1][0]+b[0][0]))/2,G=-c*b[0][1];l.scale(150*c).translate([m,G])}),b)}function Pb(l,Z,b){return wb(l,(function(b){var d=+Z,c=d/(b[1][1]-b[0][1]),m=-c*b[0][0],G=(d-c*(b[1][1]+b[0][1]))/2;l.scale(150*c).translate([m,G])}),b)}Mb.prototype={_radius:4.5,_circle:rb(4.5),pointRadius:function(l){return(l=+l)!==this._radius&&(this._radius=l,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(l,Z){switch(this._point){case 0:this._string.push("M",l,",",Z),this._point=1;break;case 1:this._string.push("L",l,",",Z);break;default:null==this._circle&&(this._circle=rb(this._radius)),this._string.push("M",l,",",Z,this._circle)}},result:function(){if(this._string.length){var l=this._string.join("");return this._string=[],l}return null}},jb.prototype={constructor:jb,point:function(l,Z){this.stream.point(l,Z)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Db=y(30*a);function Ab(l,Z){return+Z?function(l,Z){function b(d,c,m,W,i,X,n,u,a,h,y,Y,e,p){var o=n-d,s=u-c,I=o*o+s*s;if(I>4*Z&&e--){var g=W+h,K=i+y,H=X+Y,x=R(g*g+K*K+H*H),J=N(H/=x),L=V(V(H)-1)<G||V(m-a)<G?(m+a)/2:t(K,g),F=l(L,J),C=F[0],S=F[1],B=C-d,k=S-c,v=s*B-o*k;(v*v/I>Z||V((o*B+s*k)/I-.5)>.3||W*h+i*y+X*Y<Db)&&(b(d,c,m,W,i,X,C,S,L,g/=x,K/=x,H,e,p),p.point(C,S),b(C,S,L,g,K,H,n,u,a,h,y,Y,e,p))}}return function(Z){var d,c,m,G,W,i,X,n,u,a,V,h,t={point:y,lineStart:Y,lineEnd:p,polygonStart:function(){Z.polygonStart(),t.lineStart=o},polygonEnd:function(){Z.polygonEnd(),t.lineStart=Y}};function y(b,d){b=l(b,d),Z.point(b[0],b[1])}function Y(){n=NaN,t.point=e,Z.lineStart()}function e(d,c){var m=A([d,c]),G=l(d,c);b(n,u,X,a,V,h,n=G[0],u=G[1],X=d,a=m[0],V=m[1],h=m[2],16,Z),Z.point(n,u)}function p(){t.point=y,Z.lineEnd()}function o(){Y(),t.point=s,t.lineEnd=I}function s(l,Z){e(d=l,Z),c=n,m=u,G=a,W=V,i=h,t.point=e}function I(){b(n,u,X,a,V,h,c,m,d,G,W,i,16,Z),t.lineEnd=p,p()}return t}}(l,Z):function(l){return Tb({point:function(Z,b){Z=l(Z,b),this.stream.point(Z[0],Z[1])}})}(l)}var Eb=Tb({point:function(l,Z){this.stream.point(l*a,Z*a)}});function Ob(l,Z,b){function d(d,c){return[Z+l*d,b-l*c]}return d.invert=function(d,c){return[(d-Z)/l,(b-c)/l]},d}function qb(l,Z,b,d){var c=y(d),m=s(d),G=c*l,W=m*l,i=c/l,X=m/l,n=(m*b-c*Z)/l,u=(m*Z+c*b)/l;function a(l,d){return[G*l-W*d+Z,b-W*l-G*d]}return a.invert=function(l,Z){return[i*l-X*Z+n,u-X*l-i*Z]},a}function _b(l){return $b((function(){return l}))()}function $b(l){var Z,b,d,c,m,G,W,i,X,n,V=150,h=480,t=250,y=0,Y=0,e=0,p=0,o=0,s=0,I=null,g=yZ,K=null,N=wZ,H=.5;function x(l){return i(l[0]*a,l[1]*a)}function J(l){return(l=i.invert(l[0],l[1]))&&[l[0]*u,l[1]*u]}function L(){var l=qb(V,0,0,s).apply(null,Z(y,Y)),d=(s?qb:Ob)(V,h-l[0],t-l[1],s);return b=_l(e,p,o),W=Ol(Z,d),i=Ol(b,W),G=Ab(W,H),F()}function F(){return X=n=null,x}return x.stream=function(l){return X&&n===l?X:X=Eb(function(l){return Tb({point:function(Z,b){var d=l(Z,b);return this.stream.point(d[0],d[1])}})}(b)(g(G(N(n=l)))))},x.preclip=function(l){return arguments.length?(g=l,I=void 0,F()):g},x.postclip=function(l){return arguments.length?(N=l,K=d=c=m=null,F()):N},x.clipAngle=function(l){return arguments.length?(g=+l?YZ(I=l*a):(I=null,yZ),F()):I*u},x.clipExtent=function(l){return arguments.length?(N=null==l?(K=d=c=m=null,wZ):eZ(K=+l[0][0],d=+l[0][1],c=+l[1][0],m=+l[1][1]),F()):null==K?null:[[K,d],[c,m]]},x.scale=function(l){return arguments.length?(V=+l,L()):V},x.translate=function(l){return arguments.length?(h=+l[0],t=+l[1],L()):[h,t]},x.center=function(l){return arguments.length?(y=l[0]%360*a,Y=l[1]%360*a,L()):[y*u,Y*u]},x.rotate=function(l){return arguments.length?(e=l[0]%360*a,p=l[1]%360*a,o=l.length>2?l[2]%360*a:0,L()):[e*u,p*u,o*u]},x.angle=function(l){return arguments.length?(s=l%360*a,L()):s*u},x.precision=function(l){return arguments.length?(G=Ab(W,H=l*l),F()):R(H)},x.fitExtent=function(l,Z){return Ub(x,l,Z)},x.fitSize=function(l,Z){return fb(x,l,Z)},x.fitWidth=function(l,Z){return Qb(x,l,Z)},x.fitHeight=function(l,Z){return Pb(x,l,Z)},function(){return Z=l.apply(this,arguments),x.invert=Z.invert&&J,L()}}function ld(l){var Z=0,b=W/3,d=$b(l),c=d(Z,b);return c.parallels=function(l){return arguments.length?d(Z=l[0]*a,b=l[1]*a):[Z*u,b*u]},c}function Zd(l,Z){var b=s(l),d=(b+s(Z))/2;if(V(d)<G)return function(l){var Z=y(l);function b(l,b){return[l*Z,s(b)/Z]}return b.invert=function(l,b){return[l/Z,N(b*Z)]},b}(l);var c=1+b*(2*d-b),m=R(c)/d;function W(l,Z){var b=R(c-2*d*s(Z))/d;return[b*s(l*=d),m-b*y(l)]}return W.invert=function(l,Z){var b=m-Z;return[t(l,V(b))/d*I(b),N((c-(l*l+b*b)*d*d)/(2*d))]},W}function bd(){return ld(Zd).scale(155.424).center([0,33.6442])}function dd(){return bd().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function cd(l){return function(Z,b){var d=y(Z),c=y(b),m=l(d*c);return[m*c*s(Z),m*s(b)]}}function md(l){return function(Z,b){var d=R(Z*Z+b*b),c=l(d),m=s(c),G=y(c);return[t(Z*m,d*G),N(d&&b*m/d)]}}var Gd=cd((function(l){return R(2/(1+l))}));Gd.invert=md((function(l){return 2*N(l/2)}));var Wd=cd((function(l){return(l=K(l))&&l/s(l)}));function id(l,Z){return[l,p(g((i+Z)/2))]}function Xd(l){var Z,b,d,c=_b(l),m=c.center,G=c.scale,i=c.translate,X=c.clipExtent,n=null;function u(){var m=W*G(),i=c(bZ(c.rotate()).invert([0,0]));return X(null==n?[[i[0]-m,i[1]-m],[i[0]+m,i[1]+m]]:l===id?[[Math.max(i[0]-m,n),Z],[Math.min(i[0]+m,b),d]]:[[n,Math.max(i[1]-m,Z)],[b,Math.min(i[1]+m,d)]])}return c.scale=function(l){return arguments.length?(G(l),u()):G()},c.translate=function(l){return arguments.length?(i(l),u()):i()},c.center=function(l){return arguments.length?(m(l),u()):m()},c.clipExtent=function(l){return arguments.length?(null==l?n=Z=b=d=null:(n=+l[0][0],Z=+l[0][1],b=+l[1][0],d=+l[1][1]),u()):null==n?null:[[n,Z],[b,d]]},u()}function nd(l){return g((i+l)/2)}function ud(l,Z){var b=y(l),d=l===Z?s(l):p(b/y(Z))/p(nd(Z)/nd(l)),c=b*o(nd(l),d)/d;if(!d)return id;function m(l,Z){c>0?Z<-i+G&&(Z=-i+G):Z>i-G&&(Z=i-G);var b=c/o(nd(Z),d);return[b*s(d*l),c-b*y(d*l)]}return m.invert=function(l,Z){var b=c-Z,m=I(d)*R(l*l+b*b);return[t(l,V(b))/d*I(b),2*h(o(c/m,1/d))-i]},m}function ad(l,Z){return[l,Z]}function Vd(l,Z){var b=y(l),d=l===Z?s(l):(b-y(Z))/(Z-l),c=b/d+l;if(V(d)<G)return ad;function m(l,Z){var b=c-Z,m=d*l;return[b*s(m),c-b*y(m)]}return m.invert=function(l,Z){var b=c-Z;return[t(l,V(b))/d*I(b),c-I(d)*R(l*l+b*b)]},m}Wd.invert=md((function(l){return l})),id.invert=function(l,Z){return[l,2*h(e(Z))-i]},ad.invert=ad;var hd=1.340264,td=-.081106,yd=893e-6,Yd=.003796,ed=R(3)/2;function pd(l,Z){var b=N(ed*s(Z)),d=b*b,c=d*d*d;return[l*y(b)/(ed*(hd+3*td*d+c*(7*yd+9*Yd*d))),b*(hd+td*d+c*(yd+Yd*d))]}function od(l,Z){var b=y(Z),d=y(l)*b;return[b*s(l)/d,s(Z)/d]}function sd(l,Z,b,d){return 1===l&&1===Z&&0===b&&0===d?wZ:Tb({point:function(c,m){this.stream.point(c*l+b,m*Z+d)}})}function Id(l,Z){var b=Z*Z,d=b*b;return[l*(.8707-.131979*b+d*(d*(.003971*b-.001529*d)-.013791)),Z*(1.007226+b*(.015085+d*(.028874*b-.044475-.005916*d)))]}function Rd(l,Z){return[y(Z)*s(l),s(Z)]}function gd(l,Z){var b=y(Z),d=1+y(l)*b;return[b*s(l)/d,s(Z)/d]}function Kd(l,Z){return[p(g((i+Z)/2)),-l]}pd.invert=function(l,Z){for(var b,d=Z,c=d*d,m=c*c*c,G=0;G<12&&(m=(c=(d-=b=(d*(hd+td*c+m*(yd+Yd*c))-Z)/(hd+3*td*c+m*(7*yd+9*Yd*c)))*d)*c*c,!(V(b)<1e-12));++G);return[ed*l*(hd+3*td*c+m*(7*yd+9*Yd*c))/y(d),N(s(d)/ed)]},od.invert=md(h),Id.invert=function(l,Z){var b,d=Z,c=25;do{var m=d*d,W=m*m;d-=b=(d*(1.007226+m*(.015085+W*(.028874*m-.044475-.005916*W)))-Z)/(1.007226+m*(.045255+W*(.259866*m-.311325-.005916*11*W)))}while(V(b)>G&&--c>0);return[l/(.8707+(m=d*d)*(m*(m*m*m*(.003971-.001529*m)-.013791)-.131979)),d]},Rd.invert=md(N),gd.invert=md((function(l){return 2*h(l)})),Kd.invert=function(l,Z){return[-Z,2*h(e(l))-i]},l.geoAlbers=dd,l.geoAlbersUsa=function(){var l,Z,b,d,c,m,W=dd(),i=bd().rotate([154,0]).center([-2,58.5]).parallels([55,65]),X=bd().rotate([157,0]).center([-3,19.9]).parallels([8,18]),n={point:function(l,Z){m=[l,Z]}};function u(l){var Z=l[0],G=l[1];return m=null,b.point(Z,G),m||(d.point(Z,G),m)||(c.point(Z,G),m)}function a(){return l=Z=null,u}return u.invert=function(l){var Z=W.scale(),b=W.translate(),d=(l[0]-b[0])/Z,c=(l[1]-b[1])/Z;return(c>=.12&&c<.234&&d>=-.425&&d<-.214?i:c>=.166&&c<.234&&d>=-.214&&d<-.115?X:W).invert(l)},u.stream=function(b){return l&&Z===b?l:(d=[W.stream(Z=b),i.stream(b),X.stream(b)],c=d.length,l={point:function(l,Z){for(var b=-1;++b<c;)d[b].point(l,Z)},sphere:function(){for(var l=-1;++l<c;)d[l].sphere()},lineStart:function(){for(var l=-1;++l<c;)d[l].lineStart()},lineEnd:function(){for(var l=-1;++l<c;)d[l].lineEnd()},polygonStart:function(){for(var l=-1;++l<c;)d[l].polygonStart()},polygonEnd:function(){for(var l=-1;++l<c;)d[l].polygonEnd()}});var d,c},u.precision=function(l){return arguments.length?(W.precision(l),i.precision(l),X.precision(l),a()):W.precision()},u.scale=function(l){return arguments.length?(W.scale(l),i.scale(.35*l),X.scale(l),u.translate(W.translate())):W.scale()},u.translate=function(l){if(!arguments.length)return W.translate();var Z=W.scale(),m=+l[0],u=+l[1];return b=W.translate(l).clipExtent([[m-.455*Z,u-.238*Z],[m+.455*Z,u+.238*Z]]).stream(n),d=i.translate([m-.307*Z,u+.201*Z]).clipExtent([[m-.425*Z+G,u+.12*Z+G],[m-.214*Z-G,u+.234*Z-G]]).stream(n),c=X.translate([m-.205*Z,u+.212*Z]).clipExtent([[m-.214*Z+G,u+.166*Z+G],[m-.115*Z-G,u+.234*Z-G]]).stream(n),a()},u.fitExtent=function(l,Z){return Ub(u,l,Z)},u.fitSize=function(l,Z){return fb(u,l,Z)},u.fitWidth=function(l,Z){return Qb(u,l,Z)},u.fitHeight=function(l,Z){return Pb(u,l,Z)},u.scale(1070)},l.geoArea=function(l){return j.reset(),B(l,w),2*j},l.geoAzimuthalEqualArea=function(){return _b(Gd).scale(124.75).clipAngle(179.999)},l.geoAzimuthalEqualAreaRaw=Gd,l.geoAzimuthalEquidistant=function(){return _b(Wd).scale(79.4188).clipAngle(179.999)},l.geoAzimuthalEquidistantRaw=Wd,l.geoBounds=function(l){var Z,b,d,c,m,G,W;if(dl=bl=-(ll=Zl=1/0),il=[],B(l,Hl),b=il.length){for(il.sort(vl),Z=1,m=[d=il[0]];Z<b;++Z)zl(d,(c=il[Z])[0])||zl(d,c[1])?(kl(d[0],c[1])>kl(d[0],d[1])&&(d[1]=c[1]),kl(c[0],d[1])>kl(d[0],d[1])&&(d[0]=c[0])):m.push(d=c);for(G=-1/0,Z=0,d=m[b=m.length-1];Z<=b;d=c,++Z)c=m[Z],(W=kl(d[1],c[0]))>G&&(G=W,ll=c[0],bl=d[1])}return il=Xl=null,ll===1/0||Zl===1/0?[[NaN,NaN],[NaN,NaN]]:[[ll,Zl],[bl,dl]]},l.geoCentroid=function(l){nl=ul=al=Vl=hl=tl=yl=Yl=el=pl=ol=0,B(l,Ml);var Z=el,b=pl,d=ol,c=Z*Z+b*b+d*d;return c<1e-12&&(Z=tl,b=yl,d=Yl,ul<G&&(Z=al,b=Vl,d=hl),(c=Z*Z+b*b+d*d)<1e-12)?[NaN,NaN]:[t(b,Z)*u,N(d/R(c))*u]},l.geoCircle=function(){var l,Z,b=El([0,0]),d=El(90),c=El(6),m={point:function(b,d){l.push(b=Z(b,d)),b[0]*=u,b[1]*=u}};function G(){var G=b.apply(this,arguments),W=d.apply(this,arguments)*a,i=c.apply(this,arguments)*a;return l=[],Z=_l(-G[0]*a,-G[1]*a,0).invert,dZ(m,W,i,1),G={type:"Polygon",coordinates:[l]},l=Z=null,G}return G.center=function(l){return arguments.length?(b="function"==typeof l?l:El([+l[0],+l[1]]),G):b},G.radius=function(l){return arguments.length?(d="function"==typeof l?l:El(+l),G):d},G.precision=function(l){return arguments.length?(c="function"==typeof l?l:El(+l),G):c},G},l.geoClipAntimeridian=yZ,l.geoClipCircle=YZ,l.geoClipExtent=function(){var l,Z,b,d=0,c=0,m=960,G=500;return b={stream:function(b){return l&&Z===b?l:l=eZ(d,c,m,G)(Z=b)},extent:function(W){return arguments.length?(d=+W[0][0],c=+W[0][1],m=+W[1][0],G=+W[1][1],l=Z=null,b):[[d,c],[m,G]]}}},l.geoClipRectangle=eZ,l.geoConicConformal=function(){return ld(ud).scale(109.5).parallels([30,30])},l.geoConicConformalRaw=ud,l.geoConicEqualArea=bd,l.geoConicEqualAreaRaw=Zd,l.geoConicEquidistant=function(){return ld(Vd).scale(131.154).center([0,13.9389])},l.geoConicEquidistantRaw=Vd,l.geoContains=function(l,Z){return(l&&FZ.hasOwnProperty(l.type)?FZ[l.type]:SZ)(l,Z)},l.geoDistance=LZ,l.geoEqualEarth=function(){return _b(pd).scale(177.158)},l.geoEqualEarthRaw=pd,l.geoEquirectangular=function(){return _b(ad).scale(152.63)},l.geoEquirectangularRaw=ad,l.geoGnomonic=function(){return _b(od).scale(144.049).clipAngle(60)},l.geoGnomonicRaw=od,l.geoGraticule=jZ,l.geoGraticule10=function(){return jZ()()},l.geoIdentity=function(){var l,Z,b,d,c,m,G=1,W=0,i=0,X=1,n=1,u=wZ,a=null,V=wZ;function h(){return d=c=null,m}return m={stream:function(l){return d&&c===l?d:d=u(V(c=l))},postclip:function(d){return arguments.length?(V=d,a=l=Z=b=null,h()):V},clipExtent:function(d){return arguments.length?(V=null==d?(a=l=Z=b=null,wZ):eZ(a=+d[0][0],l=+d[0][1],Z=+d[1][0],b=+d[1][1]),h()):null==a?null:[[a,l],[Z,b]]},scale:function(l){return arguments.length?(u=sd((G=+l)*X,G*n,W,i),h()):G},translate:function(l){return arguments.length?(u=sd(G*X,G*n,W=+l[0],i=+l[1]),h()):[W,i]},reflectX:function(l){return arguments.length?(u=sd(G*(X=l?-1:1),G*n,W,i),h()):X<0},reflectY:function(l){return arguments.length?(u=sd(G*X,G*(n=l?-1:1),W,i),h()):n<0},fitExtent:function(l,Z){return Ub(m,l,Z)},fitSize:function(l,Z){return fb(m,l,Z)},fitWidth:function(l,Z){return Qb(m,l,Z)},fitHeight:function(l,Z){return Pb(m,l,Z)}}},l.geoInterpolate=function(l,Z){var b=l[0]*a,d=l[1]*a,c=Z[0]*a,m=Z[1]*a,G=y(d),W=s(d),i=y(m),X=s(m),n=G*y(b),V=G*s(b),h=i*y(c),Y=i*s(c),e=2*N(R(H(m-d)+G*i*H(c-b))),p=s(e),o=e?function(l){var Z=s(l*=e)/p,b=s(e-l)/p,d=b*n+Z*h,c=b*V+Z*Y,m=b*W+Z*X;return[t(c,d)*u,t(m,R(d*d+c*c))*u]}:function(){return[b*u,d*u]};return o.distance=e,o},l.geoLength=HZ,l.geoMercator=function(){return Xd(id).scale(961/n)},l.geoMercatorRaw=id,l.geoNaturalEarth1=function(){return _b(Id).scale(175.295)},l.geoNaturalEarth1Raw=Id,l.geoOrthographic=function(){return _b(Rd).scale(249.5).clipAngle(90+G)},l.geoOrthographicRaw=Rd,l.geoPath=function(l,Z){var b,d,c=4.5;function m(l){return l&&("function"==typeof c&&d.pointRadius(+c.apply(this,arguments)),B(l,b(d))),d.result()}return m.area=function(l){return B(l,b(EZ)),EZ.result()},m.measure=function(l){return B(l,b(kb)),kb.result()},m.bounds=function(l){return B(l,b(ib)),ib.result()},m.centroid=function(l){return B(l,b(eb)),eb.result()},m.projection=function(Z){return arguments.length?(b=null==Z?(l=null,wZ):(l=Z).stream,m):l},m.context=function(l){return arguments.length?(d=null==l?(Z=null,new Mb):new xb(Z=l),"function"!=typeof c&&d.pointRadius(c),m):Z},m.pointRadius=function(l){return arguments.length?(c="function"==typeof l?l:(d.pointRadius(+l),+l),m):c},m.projection(l).context(Z)},l.geoProjection=_b,l.geoProjectionMutator=$b,l.geoRotation=bZ,l.geoStereographic=function(){return _b(gd).scale(250).clipAngle(142)},l.geoStereographicRaw=gd,l.geoStream=B,l.geoTransform=function(l){return{stream:Tb(l)}},l.geoTransverseMercator=function(){var l=Xd(Kd),Z=l.center,b=l.rotate;return l.center=function(l){return arguments.length?Z([-l[1],l[0]]):[(l=Z())[1],-l[0]]},l.rotate=function(l){return arguments.length?b([l[0],l[1],l.length>2?l[2]+90:90]):[(l=b())[0],l[1],l[2]-90]},b([0,0,90]).scale(159.155)},l.geoTransverseMercatorRaw=Kd,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-array":29}],44:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";function Z(l,Z){return l.parent===Z.parent?1:2}function b(l,Z){return l+Z.x}function d(l,Z){return Math.max(l,Z.y)}function c(l){var Z=0,b=l.children,d=b&&b.length;if(d)for(;--d>=0;)Z+=b[d].value;else Z=1;l.value=Z}function m(l,Z){var b,d,c,m,W,n=new X(l),u=+l.value&&(n.value=l.value),a=[n];for(null==Z&&(Z=G);b=a.pop();)if(u&&(b.value=+b.data.value),(c=Z(b.data))&&(W=c.length))for(b.children=new Array(W),m=W-1;m>=0;--m)a.push(d=b.children[m]=new X(c[m])),d.parent=b,d.depth=b.depth+1;return n.eachBefore(i)}function G(l){return l.children}function W(l){l.data=l.data.data}function i(l){var Z=0;do{l.height=Z}while((l=l.parent)&&l.height<++Z)}function X(l){this.data=l,this.depth=this.height=0,this.parent=null}X.prototype=m.prototype={constructor:X,count:function(){return this.eachAfter(c)},each:function(l){var Z,b,d,c,m=this,G=[m];do{for(Z=G.reverse(),G=[];m=Z.pop();)if(l(m),b=m.children)for(d=0,c=b.length;d<c;++d)G.push(b[d])}while(G.length);return this},eachAfter:function(l){for(var Z,b,d,c=this,m=[c],G=[];c=m.pop();)if(G.push(c),Z=c.children)for(b=0,d=Z.length;b<d;++b)m.push(Z[b]);for(;c=G.pop();)l(c);return this},eachBefore:function(l){for(var Z,b,d=this,c=[d];d=c.pop();)if(l(d),Z=d.children)for(b=Z.length-1;b>=0;--b)c.push(Z[b]);return this},sum:function(l){return this.eachAfter((function(Z){for(var b=+l(Z.data)||0,d=Z.children,c=d&&d.length;--c>=0;)b+=d[c].value;Z.value=b}))},sort:function(l){return this.eachBefore((function(Z){Z.children&&Z.children.sort(l)}))},path:function(l){for(var Z=this,b=function(l,Z){if(l===Z)return l;var b=l.ancestors(),d=Z.ancestors(),c=null;for(l=b.pop(),Z=d.pop();l===Z;)c=l,l=b.pop(),Z=d.pop();return c}(Z,l),d=[Z];Z!==b;)Z=Z.parent,d.push(Z);for(var c=d.length;l!==b;)d.splice(c,0,l),l=l.parent;return d},ancestors:function(){for(var l=this,Z=[l];l=l.parent;)Z.push(l);return Z},descendants:function(){var l=[];return this.each((function(Z){l.push(Z)})),l},leaves:function(){var l=[];return this.eachBefore((function(Z){Z.children||l.push(Z)})),l},links:function(){var l=this,Z=[];return l.each((function(b){b!==l&&Z.push({source:b.parent,target:b})})),Z},copy:function(){return m(this).eachBefore(W)}};var n=Array.prototype.slice;function u(l){for(var Z,b,d=0,c=(l=function(l){for(var Z,b,d=l.length;d;)b=Math.random()*d--|0,Z=l[d],l[d]=l[b],l[b]=Z;return l}(n.call(l))).length,m=[];d<c;)Z=l[d],b&&h(b,Z)?++d:(b=y(m=a(m,Z)),d=0);return b}function a(l,Z){var b,d;if(t(Z,l))return[Z];for(b=0;b<l.length;++b)if(V(Z,l[b])&&t(Y(l[b],Z),l))return[l[b],Z];for(b=0;b<l.length-1;++b)for(d=b+1;d<l.length;++d)if(V(Y(l[b],l[d]),Z)&&V(Y(l[b],Z),l[d])&&V(Y(l[d],Z),l[b])&&t(e(l[b],l[d],Z),l))return[l[b],l[d],Z];throw new Error}function V(l,Z){var b=l.r-Z.r,d=Z.x-l.x,c=Z.y-l.y;return b<0||b*b<d*d+c*c}function h(l,Z){var b=l.r-Z.r+1e-6,d=Z.x-l.x,c=Z.y-l.y;return b>0&&b*b>d*d+c*c}function t(l,Z){for(var b=0;b<Z.length;++b)if(!h(l,Z[b]))return!1;return!0}function y(l){switch(l.length){case 1:return{x:(Z=l[0]).x,y:Z.y,r:Z.r};case 2:return Y(l[0],l[1]);case 3:return e(l[0],l[1],l[2])}var Z}function Y(l,Z){var b=l.x,d=l.y,c=l.r,m=Z.x,G=Z.y,W=Z.r,i=m-b,X=G-d,n=W-c,u=Math.sqrt(i*i+X*X);return{x:(b+m+i/u*n)/2,y:(d+G+X/u*n)/2,r:(u+c+W)/2}}function e(l,Z,b){var d=l.x,c=l.y,m=l.r,G=Z.x,W=Z.y,i=Z.r,X=b.x,n=b.y,u=b.r,a=d-G,V=d-X,h=c-W,t=c-n,y=i-m,Y=u-m,e=d*d+c*c-m*m,p=e-G*G-W*W+i*i,o=e-X*X-n*n+u*u,s=V*h-a*t,I=(h*o-t*p)/(2*s)-d,R=(t*y-h*Y)/s,g=(V*p-a*o)/(2*s)-c,K=(a*Y-V*y)/s,N=R*R+K*K-1,H=2*(m+I*R+g*K),x=I*I+g*g-m*m,J=-(N?(H+Math.sqrt(H*H-4*N*x))/(2*N):x/H);return{x:d+I+R*J,y:c+g+K*J,r:J}}function p(l,Z,b){var d,c,m,G,W=l.x-Z.x,i=l.y-Z.y,X=W*W+i*i;X?(c=Z.r+b.r,c*=c,G=l.r+b.r,c>(G*=G)?(d=(X+G-c)/(2*X),m=Math.sqrt(Math.max(0,G/X-d*d)),b.x=l.x-d*W-m*i,b.y=l.y-d*i+m*W):(d=(X+c-G)/(2*X),m=Math.sqrt(Math.max(0,c/X-d*d)),b.x=Z.x+d*W-m*i,b.y=Z.y+d*i+m*W)):(b.x=Z.x+b.r,b.y=Z.y)}function o(l,Z){var b=l.r+Z.r-1e-6,d=Z.x-l.x,c=Z.y-l.y;return b>0&&b*b>d*d+c*c}function s(l){var Z=l._,b=l.next._,d=Z.r+b.r,c=(Z.x*b.r+b.x*Z.r)/d,m=(Z.y*b.r+b.y*Z.r)/d;return c*c+m*m}function I(l){this._=l,this.next=null,this.previous=null}function R(l){if(!(c=l.length))return 0;var Z,b,d,c,m,G,W,i,X,n,a;if((Z=l[0]).x=0,Z.y=0,!(c>1))return Z.r;if(b=l[1],Z.x=-b.r,b.x=Z.r,b.y=0,!(c>2))return Z.r+b.r;p(b,Z,d=l[2]),Z=new I(Z),b=new I(b),d=new I(d),Z.next=d.previous=b,b.next=Z.previous=d,d.next=b.previous=Z;l:for(W=3;W<c;++W){p(Z._,b._,d=l[W]),d=new I(d),i=b.next,X=Z.previous,n=b._.r,a=Z._.r;do{if(n<=a){if(o(i._,d._)){b=i,Z.next=b,b.previous=Z,--W;continue l}n+=i._.r,i=i.next}else{if(o(X._,d._)){(Z=X).next=b,b.previous=Z,--W;continue l}a+=X._.r,X=X.previous}}while(i!==X.next);for(d.previous=Z,d.next=b,Z.next=b.previous=b=d,m=s(Z);(d=d.next)!==b;)(G=s(d))<m&&(Z=d,m=G);b=Z.next}for(Z=[b._],d=b;(d=d.next)!==b;)Z.push(d._);for(d=u(Z),W=0;W<c;++W)(Z=l[W]).x-=d.x,Z.y-=d.y;return d.r}function g(l){return null==l?null:K(l)}function K(l){if("function"!=typeof l)throw new Error;return l}function N(){return 0}function H(l){return function(){return l}}function x(l){return Math.sqrt(l.value)}function J(l){return function(Z){Z.children||(Z.r=Math.max(0,+l(Z)||0))}}function L(l,Z){return function(b){if(d=b.children){var d,c,m,G=d.length,W=l(b)*Z||0;if(W)for(c=0;c<G;++c)d[c].r+=W;if(m=R(d),W)for(c=0;c<G;++c)d[c].r-=W;b.r=m+W}}}function F(l){return function(Z){var b=Z.parent;Z.r*=l,b&&(Z.x=b.x+l*Z.x,Z.y=b.y+l*Z.y)}}function C(l){l.x0=Math.round(l.x0),l.y0=Math.round(l.y0),l.x1=Math.round(l.x1),l.y1=Math.round(l.y1)}function S(l,Z,b,d,c){for(var m,G=l.children,W=-1,i=G.length,X=l.value&&(d-Z)/l.value;++W<i;)(m=G[W]).y0=b,m.y1=c,m.x0=Z,m.x1=Z+=m.value*X}var B={depth:-1},k={};function v(l){return l.id}function z(l){return l.parentId}function M(l,Z){return l.parent===Z.parent?1:2}function r(l){var Z=l.children;return Z?Z[0]:l.t}function T(l){var Z=l.children;return Z?Z[Z.length-1]:l.t}function j(l,Z,b){var d=b/(Z.i-l.i);Z.c-=d,Z.s+=b,l.c+=d,Z.z+=b,Z.m+=b}function w(l,Z,b){return l.a.parent===Z.parent?l.a:b}function U(l,Z){this._=l,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=Z}function f(l,Z,b,d,c){for(var m,G=l.children,W=-1,i=G.length,X=l.value&&(c-b)/l.value;++W<i;)(m=G[W]).x0=Z,m.x1=d,m.y0=b,m.y1=b+=m.value*X}U.prototype=Object.create(X.prototype);var Q=(1+Math.sqrt(5))/2;function P(l,Z,b,d,c,m){for(var G,W,i,X,n,u,a,V,h,t,y,Y=[],e=Z.children,p=0,o=0,s=e.length,I=Z.value;p<s;){i=c-b,X=m-d;do{n=e[o++].value}while(!n&&o<s);for(u=a=n,y=n*n*(t=Math.max(X/i,i/X)/(I*l)),h=Math.max(a/y,y/u);o<s;++o){if(n+=W=e[o].value,W<u&&(u=W),W>a&&(a=W),y=n*n*t,(V=Math.max(a/y,y/u))>h){n-=W;break}h=V}Y.push(G={value:n,dice:i<X,children:e.slice(p,o)}),G.dice?S(G,b,d,c,I?d+=X*n/I:m):f(G,b,d,I?b+=i*n/I:c,m),I-=n,p=o}return Y}var D=function l(Z){function b(l,b,d,c,m){P(Z,l,b,d,c,m)}return b.ratio=function(Z){return l((Z=+Z)>1?Z:1)},b}(Q),A=function l(Z){function b(l,b,d,c,m){if((G=l._squarify)&&G.ratio===Z)for(var G,W,i,X,n,u=-1,a=G.length,V=l.value;++u<a;){for(i=(W=G[u]).children,X=W.value=0,n=i.length;X<n;++X)W.value+=i[X].value;W.dice?S(W,b,d,c,d+=(m-d)*W.value/V):f(W,b,d,b+=(c-b)*W.value/V,m),V-=W.value}else l._squarify=G=P(Z,l,b,d,c,m),G.ratio=Z}return b.ratio=function(Z){return l((Z=+Z)>1?Z:1)},b}(Q);l.cluster=function(){var l=Z,c=1,m=1,G=!1;function W(Z){var W,i=0;Z.eachAfter((function(Z){var c=Z.children;c?(Z.x=function(l){return l.reduce(b,0)/l.length}(c),Z.y=function(l){return 1+l.reduce(d,0)}(c)):(Z.x=W?i+=l(Z,W):0,Z.y=0,W=Z)}));var X=function(l){for(var Z;Z=l.children;)l=Z[0];return l}(Z),n=function(l){for(var Z;Z=l.children;)l=Z[Z.length-1];return l}(Z),u=X.x-l(X,n)/2,a=n.x+l(n,X)/2;return Z.eachAfter(G?function(l){l.x=(l.x-Z.x)*c,l.y=(Z.y-l.y)*m}:function(l){l.x=(l.x-u)/(a-u)*c,l.y=(1-(Z.y?l.y/Z.y:1))*m})}return W.separation=function(Z){return arguments.length?(l=Z,W):l},W.size=function(l){return arguments.length?(G=!1,c=+l[0],m=+l[1],W):G?null:[c,m]},W.nodeSize=function(l){return arguments.length?(G=!0,c=+l[0],m=+l[1],W):G?[c,m]:null},W},l.hierarchy=m,l.pack=function(){var l=null,Z=1,b=1,d=N;function c(c){return c.x=Z/2,c.y=b/2,l?c.eachBefore(J(l)).eachAfter(L(d,.5)).eachBefore(F(1)):c.eachBefore(J(x)).eachAfter(L(N,1)).eachAfter(L(d,c.r/Math.min(Z,b))).eachBefore(F(Math.min(Z,b)/(2*c.r))),c}return c.radius=function(Z){return arguments.length?(l=g(Z),c):l},c.size=function(l){return arguments.length?(Z=+l[0],b=+l[1],c):[Z,b]},c.padding=function(l){return arguments.length?(d="function"==typeof l?l:H(+l),c):d},c},l.packEnclose=u,l.packSiblings=function(l){return R(l),l},l.partition=function(){var l=1,Z=1,b=0,d=!1;function c(c){var m=c.height+1;return c.x0=c.y0=b,c.x1=l,c.y1=Z/m,c.eachBefore(function(l,Z){return function(d){d.children&&S(d,d.x0,l*(d.depth+1)/Z,d.x1,l*(d.depth+2)/Z);var c=d.x0,m=d.y0,G=d.x1-b,W=d.y1-b;G<c&&(c=G=(c+G)/2),W<m&&(m=W=(m+W)/2),d.x0=c,d.y0=m,d.x1=G,d.y1=W}}(Z,m)),d&&c.eachBefore(C),c}return c.round=function(l){return arguments.length?(d=!!l,c):d},c.size=function(b){return arguments.length?(l=+b[0],Z=+b[1],c):[l,Z]},c.padding=function(l){return arguments.length?(b=+l,c):b},c},l.stratify=function(){var l=v,Z=z;function b(b){var d,c,m,G,W,n,u,a=b.length,V=new Array(a),h={};for(c=0;c<a;++c)d=b[c],W=V[c]=new X(d),null!=(n=l(d,c,b))&&(n+="")&&(h[u="$"+(W.id=n)]=u in h?k:W);for(c=0;c<a;++c)if(W=V[c],null!=(n=Z(b[c],c,b))&&(n+="")){if(!(G=h["$"+n]))throw new Error("missing: "+n);if(G===k)throw new Error("ambiguous: "+n);G.children?G.children.push(W):G.children=[W],W.parent=G}else{if(m)throw new Error("multiple roots");m=W}if(!m)throw new Error("no root");if(m.parent=B,m.eachBefore((function(l){l.depth=l.parent.depth+1,--a})).eachBefore(i),m.parent=null,a>0)throw new Error("cycle");return m}return b.id=function(Z){return arguments.length?(l=K(Z),b):l},b.parentId=function(l){return arguments.length?(Z=K(l),b):Z},b},l.tree=function(){var l=M,Z=1,b=1,d=null;function c(c){var i=function(l){for(var Z,b,d,c,m,G=new U(l,0),W=[G];Z=W.pop();)if(d=Z._.children)for(Z.children=new Array(m=d.length),c=m-1;c>=0;--c)W.push(b=Z.children[c]=new U(d[c],c)),b.parent=Z;return(G.parent=new U(null,0)).children=[G],G}(c);if(i.eachAfter(m),i.parent.m=-i.z,i.eachBefore(G),d)c.eachBefore(W);else{var X=c,n=c,u=c;c.eachBefore((function(l){l.x<X.x&&(X=l),l.x>n.x&&(n=l),l.depth>u.depth&&(u=l)}));var a=X===n?1:l(X,n)/2,V=a-X.x,h=Z/(n.x+a+V),t=b/(u.depth||1);c.eachBefore((function(l){l.x=(l.x+V)*h,l.y=l.depth*t}))}return c}function m(Z){var b=Z.children,d=Z.parent.children,c=Z.i?d[Z.i-1]:null;if(b){!function(l){for(var Z,b=0,d=0,c=l.children,m=c.length;--m>=0;)(Z=c[m]).z+=b,Z.m+=b,b+=Z.s+(d+=Z.c)}(Z);var m=(b[0].z+b[b.length-1].z)/2;c?(Z.z=c.z+l(Z._,c._),Z.m=Z.z-m):Z.z=m}else c&&(Z.z=c.z+l(Z._,c._));Z.parent.A=function(Z,b,d){if(b){for(var c,m=Z,G=Z,W=b,i=m.parent.children[0],X=m.m,n=G.m,u=W.m,a=i.m;W=T(W),m=r(m),W&&m;)i=r(i),(G=T(G)).a=Z,(c=W.z+u-m.z-X+l(W._,m._))>0&&(j(w(W,Z,d),Z,c),X+=c,n+=c),u+=W.m,X+=m.m,a+=i.m,n+=G.m;W&&!T(G)&&(G.t=W,G.m+=u-n),m&&!r(i)&&(i.t=m,i.m+=X-a,d=Z)}return d}(Z,c,Z.parent.A||d[0])}function G(l){l._.x=l.z+l.parent.m,l.m+=l.parent.m}function W(l){l.x*=Z,l.y=l.depth*b}return c.separation=function(Z){return arguments.length?(l=Z,c):l},c.size=function(l){return arguments.length?(d=!1,Z=+l[0],b=+l[1],c):d?null:[Z,b]},c.nodeSize=function(l){return arguments.length?(d=!0,Z=+l[0],b=+l[1],c):d?[Z,b]:null},c},l.treemap=function(){var l=D,Z=!1,b=1,d=1,c=[0],m=N,G=N,W=N,i=N,X=N;function n(l){return l.x0=l.y0=0,l.x1=b,l.y1=d,l.eachBefore(u),c=[0],Z&&l.eachBefore(C),l}function u(Z){var b=c[Z.depth],d=Z.x0+b,n=Z.y0+b,u=Z.x1-b,a=Z.y1-b;u<d&&(d=u=(d+u)/2),a<n&&(n=a=(n+a)/2),Z.x0=d,Z.y0=n,Z.x1=u,Z.y1=a,Z.children&&(b=c[Z.depth+1]=m(Z)/2,d+=X(Z)-b,n+=G(Z)-b,(u-=W(Z)-b)<d&&(d=u=(d+u)/2),(a-=i(Z)-b)<n&&(n=a=(n+a)/2),l(Z,d,n,u,a))}return n.round=function(l){return arguments.length?(Z=!!l,n):Z},n.size=function(l){return arguments.length?(b=+l[0],d=+l[1],n):[b,d]},n.tile=function(Z){return arguments.length?(l=K(Z),n):l},n.padding=function(l){return arguments.length?n.paddingInner(l).paddingOuter(l):n.paddingInner()},n.paddingInner=function(l){return arguments.length?(m="function"==typeof l?l:H(+l),n):m},n.paddingOuter=function(l){return arguments.length?n.paddingTop(l).paddingRight(l).paddingBottom(l).paddingLeft(l):n.paddingTop()},n.paddingTop=function(l){return arguments.length?(G="function"==typeof l?l:H(+l),n):G},n.paddingRight=function(l){return arguments.length?(W="function"==typeof l?l:H(+l),n):W},n.paddingBottom=function(l){return arguments.length?(i="function"==typeof l?l:H(+l),n):i},n.paddingLeft=function(l){return arguments.length?(X="function"==typeof l?l:H(+l),n):X},n},l.treemapBinary=function(l,Z,b,d,c){var m,G,W=l.children,i=W.length,X=new Array(i+1);for(X[0]=G=m=0;m<i;++m)X[m+1]=G+=W[m].value;!function l(Z,b,d,c,m,G,i){if(Z>=b-1){var n=W[Z];return n.x0=c,n.y0=m,n.x1=G,void(n.y1=i)}for(var u=X[Z],a=d/2+u,V=Z+1,h=b-1;V<h;){var t=V+h>>>1;X[t]<a?V=t+1:h=t}a-X[V-1]<X[V]-a&&Z+1<V&&--V;var y=X[V]-u,Y=d-y;if(G-c>i-m){var e=(c*Y+G*y)/d;l(Z,V,y,c,m,e,i),l(V,b,Y,e,m,G,i)}else{var p=(m*Y+i*y)/d;l(Z,V,y,c,m,G,p),l(V,b,Y,c,p,G,i)}}(0,i,l.value,Z,b,d,c)},l.treemapDice=S,l.treemapResquarify=A,l.treemapSlice=f,l.treemapSliceDice=function(l,Z,b,d,c){(1&l.depth?f:S)(l,Z,b,d,c)},l.treemapSquarify=D,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],45:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-color")):c((d=d||self).d3=d.d3||{},d.d3)}(this,(function(l,Z){"use strict";function b(l,Z,b,d,c){var m=l*l,G=m*l;return((1-3*l+3*m-G)*Z+(4-6*m+3*G)*b+(1+3*l+3*m-3*G)*d+G*c)/6}function d(l){var Z=l.length-1;return function(d){var c=d<=0?d=0:d>=1?(d=1,Z-1):Math.floor(d*Z),m=l[c],G=l[c+1],W=c>0?l[c-1]:2*m-G,i=c<Z-1?l[c+2]:2*G-m;return b((d-c/Z)*Z,W,m,G,i)}}function c(l){var Z=l.length;return function(d){var c=Math.floor(((d%=1)<0?++d:d)*Z),m=l[(c+Z-1)%Z],G=l[c%Z],W=l[(c+1)%Z],i=l[(c+2)%Z];return b((d-c/Z)*Z,m,G,W,i)}}function m(l){return function(){return l}}function G(l,Z){return function(b){return l+b*Z}}function W(l,Z){var b=Z-l;return b?G(l,b>180||b<-180?b-360*Math.round(b/360):b):m(isNaN(l)?Z:l)}function i(l){return 1==(l=+l)?X:function(Z,b){return b-Z?function(l,Z,b){return l=Math.pow(l,b),Z=Math.pow(Z,b)-l,b=1/b,function(d){return Math.pow(l+d*Z,b)}}(Z,b,l):m(isNaN(Z)?b:Z)}}function X(l,Z){var b=Z-l;return b?G(l,b):m(isNaN(l)?Z:l)}var n=function l(b){var d=i(b);function c(l,b){var c=d((l=Z.rgb(l)).r,(b=Z.rgb(b)).r),m=d(l.g,b.g),G=d(l.b,b.b),W=X(l.opacity,b.opacity);return function(Z){return l.r=c(Z),l.g=m(Z),l.b=G(Z),l.opacity=W(Z),l+""}}return c.gamma=l,c}(1);function u(l){return function(b){var d,c,m=b.length,G=new Array(m),W=new Array(m),i=new Array(m);for(d=0;d<m;++d)c=Z.rgb(b[d]),G[d]=c.r||0,W[d]=c.g||0,i[d]=c.b||0;return G=l(G),W=l(W),i=l(i),c.opacity=1,function(l){return c.r=G(l),c.g=W(l),c.b=i(l),c+""}}}var a=u(d),V=u(c);function h(l,Z){Z||(Z=[]);var b,d=l?Math.min(Z.length,l.length):0,c=Z.slice();return function(m){for(b=0;b<d;++b)c[b]=l[b]*(1-m)+Z[b]*m;return c}}function t(l){return ArrayBuffer.isView(l)&&!(l instanceof DataView)}function y(l,Z){var b,d=Z?Z.length:0,c=l?Math.min(d,l.length):0,m=new Array(c),G=new Array(d);for(b=0;b<c;++b)m[b]=R(l[b],Z[b]);for(;b<d;++b)G[b]=Z[b];return function(l){for(b=0;b<c;++b)G[b]=m[b](l);return G}}function Y(l,Z){var b=new Date;return l=+l,Z=+Z,function(d){return b.setTime(l*(1-d)+Z*d),b}}function e(l,Z){return l=+l,Z=+Z,function(b){return l*(1-b)+Z*b}}function p(l,Z){var b,d={},c={};for(b in null!==l&&"object"==typeof l||(l={}),null!==Z&&"object"==typeof Z||(Z={}),Z)b in l?d[b]=R(l[b],Z[b]):c[b]=Z[b];return function(l){for(b in d)c[b]=d[b](l);return c}}var o=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,s=new RegExp(o.source,"g");function I(l,Z){var b,d,c,m=o.lastIndex=s.lastIndex=0,G=-1,W=[],i=[];for(l+="",Z+="";(b=o.exec(l))&&(d=s.exec(Z));)(c=d.index)>m&&(c=Z.slice(m,c),W[G]?W[G]+=c:W[++G]=c),(b=b[0])===(d=d[0])?W[G]?W[G]+=d:W[++G]=d:(W[++G]=null,i.push({i:G,x:e(b,d)})),m=s.lastIndex;return m<Z.length&&(c=Z.slice(m),W[G]?W[G]+=c:W[++G]=c),W.length<2?i[0]?function(l){return function(Z){return l(Z)+""}}(i[0].x):function(l){return function(){return l}}(Z):(Z=i.length,function(l){for(var b,d=0;d<Z;++d)W[(b=i[d]).i]=b.x(l);return W.join("")})}function R(l,b){var d,c=typeof b;return null==b||"boolean"===c?m(b):("number"===c?e:"string"===c?(d=Z.color(b))?(b=d,n):I:b instanceof Z.color?n:b instanceof Date?Y:t(b)?h:Array.isArray(b)?y:"function"!=typeof b.valueOf&&"function"!=typeof b.toString||isNaN(b)?p:e)(l,b)}var g,K,N,H,x=180/Math.PI,J={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function L(l,Z,b,d,c,m){var G,W,i;return(G=Math.sqrt(l*l+Z*Z))&&(l/=G,Z/=G),(i=l*b+Z*d)&&(b-=l*i,d-=Z*i),(W=Math.sqrt(b*b+d*d))&&(b/=W,d/=W,i/=W),l*d<Z*b&&(l=-l,Z=-Z,i=-i,G=-G),{translateX:c,translateY:m,rotate:Math.atan2(Z,l)*x,skewX:Math.atan(i)*x,scaleX:G,scaleY:W}}function F(l,Z,b,d){function c(l){return l.length?l.pop()+" ":""}return function(m,G){var W=[],i=[];return m=l(m),G=l(G),function(l,d,c,m,G,W){if(l!==c||d!==m){var i=G.push("translate(",null,Z,null,b);W.push({i:i-4,x:e(l,c)},{i:i-2,x:e(d,m)})}else(c||m)&&G.push("translate("+c+Z+m+b)}(m.translateX,m.translateY,G.translateX,G.translateY,W,i),function(l,Z,b,m){l!==Z?(l-Z>180?Z+=360:Z-l>180&&(l+=360),m.push({i:b.push(c(b)+"rotate(",null,d)-2,x:e(l,Z)})):Z&&b.push(c(b)+"rotate("+Z+d)}(m.rotate,G.rotate,W,i),function(l,Z,b,m){l!==Z?m.push({i:b.push(c(b)+"skewX(",null,d)-2,x:e(l,Z)}):Z&&b.push(c(b)+"skewX("+Z+d)}(m.skewX,G.skewX,W,i),function(l,Z,b,d,m,G){if(l!==b||Z!==d){var W=m.push(c(m)+"scale(",null,",",null,")");G.push({i:W-4,x:e(l,b)},{i:W-2,x:e(Z,d)})}else 1===b&&1===d||m.push(c(m)+"scale("+b+","+d+")")}(m.scaleX,m.scaleY,G.scaleX,G.scaleY,W,i),m=G=null,function(l){for(var Z,b=-1,d=i.length;++b<d;)W[(Z=i[b]).i]=Z.x(l);return W.join("")}}}var C=F((function(l){return"none"===l?J:(g||(g=document.createElement("DIV"),K=document.documentElement,N=document.defaultView),g.style.transform=l,l=N.getComputedStyle(K.appendChild(g),null).getPropertyValue("transform"),K.removeChild(g),L(+(l=l.slice(7,-1).split(","))[0],+l[1],+l[2],+l[3],+l[4],+l[5]))}),"px, ","px)","deg)"),S=F((function(l){return null==l?J:(H||(H=document.createElementNS("http://www.w3.org/2000/svg","g")),H.setAttribute("transform",l),(l=H.transform.baseVal.consolidate())?L((l=l.matrix).a,l.b,l.c,l.d,l.e,l.f):J)}),", ",")",")"),B=Math.SQRT2;function k(l){return((l=Math.exp(l))+1/l)/2}function v(l){return function(b,d){var c=l((b=Z.hsl(b)).h,(d=Z.hsl(d)).h),m=X(b.s,d.s),G=X(b.l,d.l),W=X(b.opacity,d.opacity);return function(l){return b.h=c(l),b.s=m(l),b.l=G(l),b.opacity=W(l),b+""}}}var z=v(W),M=v(X);function r(l){return function(b,d){var c=l((b=Z.hcl(b)).h,(d=Z.hcl(d)).h),m=X(b.c,d.c),G=X(b.l,d.l),W=X(b.opacity,d.opacity);return function(l){return b.h=c(l),b.c=m(l),b.l=G(l),b.opacity=W(l),b+""}}}var T=r(W),j=r(X);function w(l){return function b(d){function c(b,c){var m=l((b=Z.cubehelix(b)).h,(c=Z.cubehelix(c)).h),G=X(b.s,c.s),W=X(b.l,c.l),i=X(b.opacity,c.opacity);return function(l){return b.h=m(l),b.s=G(l),b.l=W(Math.pow(l,d)),b.opacity=i(l),b+""}}return d=+d,c.gamma=b,c}(1)}var U=w(W),f=w(X);l.interpolate=R,l.interpolateArray=function(l,Z){return(t(Z)?h:y)(l,Z)},l.interpolateBasis=d,l.interpolateBasisClosed=c,l.interpolateCubehelix=U,l.interpolateCubehelixLong=f,l.interpolateDate=Y,l.interpolateDiscrete=function(l){var Z=l.length;return function(b){return l[Math.max(0,Math.min(Z-1,Math.floor(b*Z)))]}},l.interpolateHcl=T,l.interpolateHclLong=j,l.interpolateHsl=z,l.interpolateHslLong=M,l.interpolateHue=function(l,Z){var b=W(+l,+Z);return function(l){var Z=b(l);return Z-360*Math.floor(Z/360)}},l.interpolateLab=function(l,b){var d=X((l=Z.lab(l)).l,(b=Z.lab(b)).l),c=X(l.a,b.a),m=X(l.b,b.b),G=X(l.opacity,b.opacity);return function(Z){return l.l=d(Z),l.a=c(Z),l.b=m(Z),l.opacity=G(Z),l+""}},l.interpolateNumber=e,l.interpolateNumberArray=h,l.interpolateObject=p,l.interpolateRgb=n,l.interpolateRgbBasis=a,l.interpolateRgbBasisClosed=V,l.interpolateRound=function(l,Z){return l=+l,Z=+Z,function(b){return Math.round(l*(1-b)+Z*b)}},l.interpolateString=I,l.interpolateTransformCss=C,l.interpolateTransformSvg=S,l.interpolateZoom=function(l,Z){var b,d,c=l[0],m=l[1],G=l[2],W=Z[0],i=Z[1],X=Z[2],n=W-c,u=i-m,a=n*n+u*u;if(a<1e-12)d=Math.log(X/G)/B,b=function(l){return[c+l*n,m+l*u,G*Math.exp(B*l*d)]};else{var V=Math.sqrt(a),h=(X*X-G*G+4*a)/(2*G*2*V),t=(X*X-G*G-4*a)/(2*X*2*V),y=Math.log(Math.sqrt(h*h+1)-h),Y=Math.log(Math.sqrt(t*t+1)-t);d=(Y-y)/B,b=function(l){var Z,b=l*d,W=k(y),i=G/(2*V)*(W*(Z=B*b+y,((Z=Math.exp(2*Z))-1)/(Z+1))-function(l){return((l=Math.exp(l))-1/l)/2}(y));return[c+i*n,m+i*u,G*W/k(B*b+y)]}}return b.duration=1e3*d,b},l.piecewise=function(l,Z){for(var b=0,d=Z.length-1,c=Z[0],m=new Array(d<0?0:d);b<d;)m[b]=l(c,c=Z[++b]);return function(l){var Z=Math.max(0,Math.min(d-1,Math.floor(l*=d)));return m[Z](l-Z)}},l.quantize=function(l,Z){for(var b=new Array(Z),d=0;d<Z;++d)b[d]=l(d/(Z-1));return b},Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-color":34}],46:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";var Z=Math.PI,b=2*Z,d=b-1e-6;function c(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function m(){return new c}c.prototype=m.prototype={constructor:c,moveTo:function(l,Z){this._+="M"+(this._x0=this._x1=+l)+","+(this._y0=this._y1=+Z)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(l,Z){this._+="L"+(this._x1=+l)+","+(this._y1=+Z)},quadraticCurveTo:function(l,Z,b,d){this._+="Q"+ +l+","+ +Z+","+(this._x1=+b)+","+(this._y1=+d)},bezierCurveTo:function(l,Z,b,d,c,m){this._+="C"+ +l+","+ +Z+","+ +b+","+ +d+","+(this._x1=+c)+","+(this._y1=+m)},arcTo:function(l,b,d,c,m){l=+l,b=+b,d=+d,c=+c,m=+m;var G=this._x1,W=this._y1,i=d-l,X=c-b,n=G-l,u=W-b,a=n*n+u*u;if(m<0)throw new Error("negative radius: "+m);if(null===this._x1)this._+="M"+(this._x1=l)+","+(this._y1=b);else if(a>1e-6)if(Math.abs(u*i-X*n)>1e-6&&m){var V=d-G,h=c-W,t=i*i+X*X,y=V*V+h*h,Y=Math.sqrt(t),e=Math.sqrt(a),p=m*Math.tan((Z-Math.acos((t+a-y)/(2*Y*e)))/2),o=p/e,s=p/Y;Math.abs(o-1)>1e-6&&(this._+="L"+(l+o*n)+","+(b+o*u)),this._+="A"+m+","+m+",0,0,"+ +(u*V>n*h)+","+(this._x1=l+s*i)+","+(this._y1=b+s*X)}else this._+="L"+(this._x1=l)+","+(this._y1=b)},arc:function(l,c,m,G,W,i){l=+l,c=+c,i=!!i;var X=(m=+m)*Math.cos(G),n=m*Math.sin(G),u=l+X,a=c+n,V=1^i,h=i?G-W:W-G;if(m<0)throw new Error("negative radius: "+m);null===this._x1?this._+="M"+u+","+a:(Math.abs(this._x1-u)>1e-6||Math.abs(this._y1-a)>1e-6)&&(this._+="L"+u+","+a),m&&(h<0&&(h=h%b+b),h>d?this._+="A"+m+","+m+",0,1,"+V+","+(l-X)+","+(c-n)+"A"+m+","+m+",0,1,"+V+","+(this._x1=u)+","+(this._y1=a):h>1e-6&&(this._+="A"+m+","+m+",0,"+ +(h>=Z)+","+V+","+(this._x1=l+m*Math.cos(W))+","+(this._y1=c+m*Math.sin(W))))},rect:function(l,Z,b,d){this._+="M"+(this._x0=this._x1=+l)+","+(this._y0=this._y1=+Z)+"h"+ +b+"v"+ +d+"h"+-b+"Z"},toString:function(){return this._}},l.path=m,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],47:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";function Z(l,Z){return l[0]-Z[0]||l[1]-Z[1]}function b(l){for(var Z,b,d,c=l.length,m=[0,1],G=2,W=2;W<c;++W){for(;G>1&&(Z=l[m[G-2]],b=l[m[G-1]],d=l[W],(b[0]-Z[0])*(d[1]-Z[1])-(b[1]-Z[1])*(d[0]-Z[0])<=0);)--G;m[G++]=W}return m.slice(0,G)}l.polygonArea=function(l){for(var Z,b=-1,d=l.length,c=l[d-1],m=0;++b<d;)Z=c,c=l[b],m+=Z[1]*c[0]-Z[0]*c[1];return m/2},l.polygonCentroid=function(l){for(var Z,b,d=-1,c=l.length,m=0,G=0,W=l[c-1],i=0;++d<c;)Z=W,W=l[d],i+=b=Z[0]*W[1]-W[0]*Z[1],m+=(Z[0]+W[0])*b,G+=(Z[1]+W[1])*b;return[m/(i*=3),G/i]},l.polygonContains=function(l,Z){for(var b,d,c=l.length,m=l[c-1],G=Z[0],W=Z[1],i=m[0],X=m[1],n=!1,u=0;u<c;++u)b=(m=l[u])[0],(d=m[1])>W!=X>W&&G<(i-b)*(W-d)/(X-d)+b&&(n=!n),i=b,X=d;return n},l.polygonHull=function(l){if((c=l.length)<3)return null;var d,c,m=new Array(c),G=new Array(c);for(d=0;d<c;++d)m[d]=[+l[d][0],+l[d][1],d];for(m.sort(Z),d=0;d<c;++d)G[d]=[m[d][0],-m[d][1]];var W=b(m),i=b(G),X=i[0]===W[0],n=i[i.length-1]===W[W.length-1],u=[];for(d=W.length-1;d>=0;--d)u.push(l[m[W[d]][2]]);for(d=+X;d<i.length-n;++d)u.push(l[m[i[d]][2]]);return u},l.polygonLength=function(l){for(var Z,b,d=-1,c=l.length,m=l[c-1],G=m[0],W=m[1],i=0;++d<c;)Z=G,b=W,Z-=G=(m=l[d])[0],b-=W=m[1],i+=Math.sqrt(Z*Z+b*b);return i},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],48:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";function Z(l,Z,b,d){if(isNaN(Z)||isNaN(b))return l;var c,m,G,W,i,X,n,u,a,V=l._root,h={data:d},t=l._x0,y=l._y0,Y=l._x1,e=l._y1;if(!V)return l._root=h,l;for(;V.length;)if((X=Z>=(m=(t+Y)/2))?t=m:Y=m,(n=b>=(G=(y+e)/2))?y=G:e=G,c=V,!(V=V[u=n<<1|X]))return c[u]=h,l;if(W=+l._x.call(null,V.data),i=+l._y.call(null,V.data),Z===W&&b===i)return h.next=V,c?c[u]=h:l._root=h,l;do{c=c?c[u]=new Array(4):l._root=new Array(4),(X=Z>=(m=(t+Y)/2))?t=m:Y=m,(n=b>=(G=(y+e)/2))?y=G:e=G}while((u=n<<1|X)==(a=(i>=G)<<1|W>=m));return c[a]=V,c[u]=h,l}function b(l,Z,b,d,c){this.node=l,this.x0=Z,this.y0=b,this.x1=d,this.y1=c}function d(l){return l[0]}function c(l){return l[1]}function m(l,Z,b){var m=new G(null==Z?d:Z,null==b?c:b,NaN,NaN,NaN,NaN);return null==l?m:m.addAll(l)}function G(l,Z,b,d,c,m){this._x=l,this._y=Z,this._x0=b,this._y0=d,this._x1=c,this._y1=m,this._root=void 0}function W(l){for(var Z={data:l.data},b=Z;l=l.next;)b=b.next={data:l.data};return Z}var i=m.prototype=G.prototype;i.copy=function(){var l,Z,b=new G(this._x,this._y,this._x0,this._y0,this._x1,this._y1),d=this._root;if(!d)return b;if(!d.length)return b._root=W(d),b;for(l=[{source:d,target:b._root=new Array(4)}];d=l.pop();)for(var c=0;c<4;++c)(Z=d.source[c])&&(Z.length?l.push({source:Z,target:d.target[c]=new Array(4)}):d.target[c]=W(Z));return b},i.add=function(l){var b=+this._x.call(null,l),d=+this._y.call(null,l);return Z(this.cover(b,d),b,d,l)},i.addAll=function(l){var b,d,c,m,G=l.length,W=new Array(G),i=new Array(G),X=1/0,n=1/0,u=-1/0,a=-1/0;for(d=0;d<G;++d)isNaN(c=+this._x.call(null,b=l[d]))||isNaN(m=+this._y.call(null,b))||(W[d]=c,i[d]=m,c<X&&(X=c),c>u&&(u=c),m<n&&(n=m),m>a&&(a=m));if(X>u||n>a)return this;for(this.cover(X,n).cover(u,a),d=0;d<G;++d)Z(this,W[d],i[d],l[d]);return this},i.cover=function(l,Z){if(isNaN(l=+l)||isNaN(Z=+Z))return this;var b=this._x0,d=this._y0,c=this._x1,m=this._y1;if(isNaN(b))c=(b=Math.floor(l))+1,m=(d=Math.floor(Z))+1;else{for(var G,W,i=c-b,X=this._root;b>l||l>=c||d>Z||Z>=m;)switch(W=(Z<d)<<1|l<b,(G=new Array(4))[W]=X,X=G,i*=2,W){case 0:c=b+i,m=d+i;break;case 1:b=c-i,m=d+i;break;case 2:c=b+i,d=m-i;break;case 3:b=c-i,d=m-i}this._root&&this._root.length&&(this._root=X)}return this._x0=b,this._y0=d,this._x1=c,this._y1=m,this},i.data=function(){var l=[];return this.visit((function(Z){if(!Z.length)do{l.push(Z.data)}while(Z=Z.next)})),l},i.extent=function(l){return arguments.length?this.cover(+l[0][0],+l[0][1]).cover(+l[1][0],+l[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},i.find=function(l,Z,d){var c,m,G,W,i,X,n,u=this._x0,a=this._y0,V=this._x1,h=this._y1,t=[],y=this._root;for(y&&t.push(new b(y,u,a,V,h)),null==d?d=1/0:(u=l-d,a=Z-d,V=l+d,h=Z+d,d*=d);X=t.pop();)if(!(!(y=X.node)||(m=X.x0)>V||(G=X.y0)>h||(W=X.x1)<u||(i=X.y1)<a))if(y.length){var Y=(m+W)/2,e=(G+i)/2;t.push(new b(y[3],Y,e,W,i),new b(y[2],m,e,Y,i),new b(y[1],Y,G,W,e),new b(y[0],m,G,Y,e)),(n=(Z>=e)<<1|l>=Y)&&(X=t[t.length-1],t[t.length-1]=t[t.length-1-n],t[t.length-1-n]=X)}else{var p=l-+this._x.call(null,y.data),o=Z-+this._y.call(null,y.data),s=p*p+o*o;if(s<d){var I=Math.sqrt(d=s);u=l-I,a=Z-I,V=l+I,h=Z+I,c=y.data}}return c},i.remove=function(l){if(isNaN(m=+this._x.call(null,l))||isNaN(G=+this._y.call(null,l)))return this;var Z,b,d,c,m,G,W,i,X,n,u,a,V=this._root,h=this._x0,t=this._y0,y=this._x1,Y=this._y1;if(!V)return this;if(V.length)for(;;){if((X=m>=(W=(h+y)/2))?h=W:y=W,(n=G>=(i=(t+Y)/2))?t=i:Y=i,Z=V,!(V=V[u=n<<1|X]))return this;if(!V.length)break;(Z[u+1&3]||Z[u+2&3]||Z[u+3&3])&&(b=Z,a=u)}for(;V.data!==l;)if(d=V,!(V=V.next))return this;return(c=V.next)&&delete V.next,d?(c?d.next=c:delete d.next,this):Z?(c?Z[u]=c:delete Z[u],(V=Z[0]||Z[1]||Z[2]||Z[3])&&V===(Z[3]||Z[2]||Z[1]||Z[0])&&!V.length&&(b?b[a]=V:this._root=V),this):(this._root=c,this)},i.removeAll=function(l){for(var Z=0,b=l.length;Z<b;++Z)this.remove(l[Z]);return this},i.root=function(){return this._root},i.size=function(){var l=0;return this.visit((function(Z){if(!Z.length)do{++l}while(Z=Z.next)})),l},i.visit=function(l){var Z,d,c,m,G,W,i=[],X=this._root;for(X&&i.push(new b(X,this._x0,this._y0,this._x1,this._y1));Z=i.pop();)if(!l(X=Z.node,c=Z.x0,m=Z.y0,G=Z.x1,W=Z.y1)&&X.length){var n=(c+G)/2,u=(m+W)/2;(d=X[3])&&i.push(new b(d,n,u,G,W)),(d=X[2])&&i.push(new b(d,c,u,n,W)),(d=X[1])&&i.push(new b(d,n,m,G,u)),(d=X[0])&&i.push(new b(d,c,m,n,u))}return this},i.visitAfter=function(l){var Z,d=[],c=[];for(this._root&&d.push(new b(this._root,this._x0,this._y0,this._x1,this._y1));Z=d.pop();){var m=Z.node;if(m.length){var G,W=Z.x0,i=Z.y0,X=Z.x1,n=Z.y1,u=(W+X)/2,a=(i+n)/2;(G=m[0])&&d.push(new b(G,W,i,u,a)),(G=m[1])&&d.push(new b(G,u,i,X,a)),(G=m[2])&&d.push(new b(G,W,a,u,n)),(G=m[3])&&d.push(new b(G,u,a,X,n))}c.push(Z)}for(;Z=c.pop();)l(Z.node,Z.x0,Z.y0,Z.x1,Z.y1);return this},i.x=function(l){return arguments.length?(this._x=l,this):this._x},i.y=function(l){return arguments.length?(this._y=l,this):this._y},l.quadtree=m,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],49:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:l.d3=l.d3||{})}(this,(function(l){"use strict";function Z(){return Math.random()}var b=function l(Z){function b(l,b){return l=null==l?0:+l,b=null==b?1:+b,1===arguments.length?(b=l,l=0):b-=l,function(){return Z()*b+l}}return b.source=l,b}(Z),d=function l(Z){function b(l,b){var d,c;return l=null==l?0:+l,b=null==b?1:+b,function(){var m;if(null!=d)m=d,d=null;else do{d=2*Z()-1,m=2*Z()-1,c=d*d+m*m}while(!c||c>1);return l+b*m*Math.sqrt(-2*Math.log(c)/c)}}return b.source=l,b}(Z),c=function l(Z){function b(){var l=d.source(Z).apply(this,arguments);return function(){return Math.exp(l())}}return b.source=l,b}(Z),m=function l(Z){function b(l){return function(){for(var b=0,d=0;d<l;++d)b+=Z();return b}}return b.source=l,b}(Z),G=function l(Z){function b(l){var b=m.source(Z)(l);return function(){return b()/l}}return b.source=l,b}(Z),W=function l(Z){function b(l){return function(){return-Math.log(1-Z())/l}}return b.source=l,b}(Z);l.randomUniform=b,l.randomNormal=d,l.randomLogNormal=c,l.randomBates=G,l.randomIrwinHall=m,l.randomExponential=W,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],50:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-interpolate"),l("d3-color")):c((d=d||self).d3=d.d3||{},d.d3,d.d3)}(this,(function(l,Z,b){"use strict";function d(l){for(var Z=l.length/6|0,b=new Array(Z),d=0;d<Z;)b[d]="#"+l.slice(6*d,6*++d);return b}var c=d("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),m=d("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),G=d("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),W=d("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),i=d("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),X=d("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),n=d("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),u=d("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),a=d("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),V=d("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");function h(l){return Z.interpolateRgbBasis(l[l.length-1])}var t=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(d),y=h(t),Y=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(d),e=h(Y),p=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(d),o=h(p),s=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(d),I=h(s),R=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(d),g=h(R),K=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(d),N=h(K),H=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(d),x=h(H),J=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(d),L=h(J),F=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(d),C=h(F),S=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(d),B=h(S),k=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(d),v=h(k),z=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(d),M=h(z),r=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(d),T=h(r),j=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(d),w=h(j),U=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(d),f=h(U),Q=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(d),P=h(Q),D=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(d),A=h(D),E=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(d),O=h(E),q=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(d),_=h(q),$=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(d),ll=h($),Zl=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(d),bl=h(Zl),dl=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(d),cl=h(dl),ml=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(d),Gl=h(ml),Wl=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(d),il=h(Wl),Xl=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(d),nl=h(Xl),ul=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(d),al=h(ul),Vl=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(d),hl=h(Vl),tl=Z.interpolateCubehelixLong(b.cubehelix(300,.5,0),b.cubehelix(-240,.5,1)),yl=Z.interpolateCubehelixLong(b.cubehelix(-100,.75,.35),b.cubehelix(80,1.5,.8)),Yl=Z.interpolateCubehelixLong(b.cubehelix(260,.75,.35),b.cubehelix(80,1.5,.8)),el=b.cubehelix(),pl=b.rgb(),ol=Math.PI/3,sl=2*Math.PI/3;function Il(l){var Z=l.length;return function(b){return l[Math.max(0,Math.min(Z-1,Math.floor(b*Z)))]}}var Rl=Il(d("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),gl=Il(d("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Kl=Il(d("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Nl=Il(d("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));l.interpolateBlues=cl,l.interpolateBrBG=y,l.interpolateBuGn=B,l.interpolateBuPu=v,l.interpolateCividis=function(l){return l=Math.max(0,Math.min(1,l)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-l*(35.34-l*(2381.73-l*(6402.7-l*(7024.72-2710.57*l)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+l*(170.73+l*(52.82-l*(131.46-l*(176.58-67.37*l)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+l*(442.36-l*(2482.43-l*(6167.24-l*(6614.94-2475.67*l)))))))+")"},l.interpolateCool=Yl,l.interpolateCubehelixDefault=tl,l.interpolateGnBu=M,l.interpolateGreens=Gl,l.interpolateGreys=il,l.interpolateInferno=Kl,l.interpolateMagma=gl,l.interpolateOrRd=T,l.interpolateOranges=hl,l.interpolatePRGn=e,l.interpolatePiYG=o,l.interpolatePlasma=Nl,l.interpolatePuBu=f,l.interpolatePuBuGn=w,l.interpolatePuOr=I,l.interpolatePuRd=P,l.interpolatePurples=nl,l.interpolateRainbow=function(l){(l<0||l>1)&&(l-=Math.floor(l));var Z=Math.abs(l-.5);return el.h=360*l-100,el.s=1.5-1.5*Z,el.l=.8-.9*Z,el+""},l.interpolateRdBu=g,l.interpolateRdGy=N,l.interpolateRdPu=A,l.interpolateRdYlBu=x,l.interpolateRdYlGn=L,l.interpolateReds=al,l.interpolateSinebow=function(l){var Z;return l=(.5-l)*Math.PI,pl.r=255*(Z=Math.sin(l))*Z,pl.g=255*(Z=Math.sin(l+ol))*Z,pl.b=255*(Z=Math.sin(l+sl))*Z,pl+""},l.interpolateSpectral=C,l.interpolateTurbo=function(l){return l=Math.max(0,Math.min(1,l)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+l*(1172.33-l*(10793.56-l*(33300.12-l*(38394.49-14825.05*l)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+l*(557.33+l*(1225.33-l*(3574.96-l*(1073.77+707.56*l)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+l*(3211.1-l*(15327.97-l*(27814-l*(22569.18-6838.66*l)))))))+")"},l.interpolateViridis=Rl,l.interpolateWarm=yl,l.interpolateYlGn=_,l.interpolateYlGnBu=O,l.interpolateYlOrBr=ll,l.interpolateYlOrRd=bl,l.schemeAccent=m,l.schemeBlues=dl,l.schemeBrBG=t,l.schemeBuGn=S,l.schemeBuPu=k,l.schemeCategory10=c,l.schemeDark2=G,l.schemeGnBu=z,l.schemeGreens=ml,l.schemeGreys=Wl,l.schemeOrRd=r,l.schemeOranges=Vl,l.schemePRGn=Y,l.schemePaired=W,l.schemePastel1=i,l.schemePastel2=X,l.schemePiYG=p,l.schemePuBu=U,l.schemePuBuGn=j,l.schemePuOr=s,l.schemePuRd=Q,l.schemePurples=Xl,l.schemeRdBu=R,l.schemeRdGy=K,l.schemeRdPu=D,l.schemeRdYlBu=H,l.schemeRdYlGn=J,l.schemeReds=ul,l.schemeSet1=n,l.schemeSet2=u,l.schemeSet3=a,l.schemeSpectral=F,l.schemeTableau10=V,l.schemeYlGn=q,l.schemeYlGnBu=E,l.schemeYlOrBr=$,l.schemeYlOrRd=Zl,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-color":34,"d3-interpolate":45}],51:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-collection"),l("d3-array"),l("d3-interpolate"),l("d3-format"),l("d3-time"),l("d3-time-format")):c(d.d3=d.d3||{},d.d3,d.d3,d.d3,d.d3,d.d3,d.d3)}(this,(function(l,Z,b,d,c,m,G){"use strict";function W(l,Z){switch(arguments.length){case 0:break;case 1:this.range(l);break;default:this.range(Z).domain(l)}return this}function i(l,Z){switch(arguments.length){case 0:break;case 1:this.interpolator(l);break;default:this.interpolator(Z).domain(l)}return this}var X=Array.prototype,n=X.map,u=X.slice,a={name:"implicit"};function V(){var l=Z.map(),b=[],d=[],c=a;function m(Z){var m=Z+"",G=l.get(m);if(!G){if(c!==a)return c;l.set(m,G=b.push(Z))}return d[(G-1)%d.length]}return m.domain=function(d){if(!arguments.length)return b.slice();b=[],l=Z.map();for(var c,G,W=-1,i=d.length;++W<i;)l.has(G=(c=d[W])+"")||l.set(G,b.push(c));return m},m.range=function(l){return arguments.length?(d=u.call(l),m):d.slice()},m.unknown=function(l){return arguments.length?(c=l,m):c},m.copy=function(){return V(b,d).unknown(c)},W.apply(m,arguments),m}function h(){var l,Z,d=V().unknown(void 0),c=d.domain,m=d.range,G=[0,1],i=!1,X=0,n=0,u=.5;function a(){var d=c().length,W=G[1]<G[0],a=G[W-0],V=G[1-W];l=(V-a)/Math.max(1,d-X+2*n),i&&(l=Math.floor(l)),a+=(V-a-l*(d-X))*u,Z=l*(1-X),i&&(a=Math.round(a),Z=Math.round(Z));var h=b.range(d).map((function(Z){return a+l*Z}));return m(W?h.reverse():h)}return delete d.unknown,d.domain=function(l){return arguments.length?(c(l),a()):c()},d.range=function(l){return arguments.length?(G=[+l[0],+l[1]],a()):G.slice()},d.rangeRound=function(l){return G=[+l[0],+l[1]],i=!0,a()},d.bandwidth=function(){return Z},d.step=function(){return l},d.round=function(l){return arguments.length?(i=!!l,a()):i},d.padding=function(l){return arguments.length?(X=Math.min(1,n=+l),a()):X},d.paddingInner=function(l){return arguments.length?(X=Math.min(1,l),a()):X},d.paddingOuter=function(l){return arguments.length?(n=+l,a()):n},d.align=function(l){return arguments.length?(u=Math.max(0,Math.min(1,l)),a()):u},d.copy=function(){return h(c(),G).round(i).paddingInner(X).paddingOuter(n).align(u)},W.apply(a(),arguments)}function t(l){var Z=l.copy;return l.padding=l.paddingOuter,delete l.paddingInner,delete l.paddingOuter,l.copy=function(){return t(Z())},l}function y(l){return+l}var Y=[0,1];function e(l){return l}function p(l,Z){return(Z-=l=+l)?function(b){return(b-l)/Z}:(b=isNaN(Z)?NaN:.5,function(){return b});var b}function o(l){var Z,b=l[0],d=l[l.length-1];return b>d&&(Z=b,b=d,d=Z),function(l){return Math.max(b,Math.min(d,l))}}function s(l,Z,b){var d=l[0],c=l[1],m=Z[0],G=Z[1];return c<d?(d=p(c,d),m=b(G,m)):(d=p(d,c),m=b(m,G)),function(l){return m(d(l))}}function I(l,Z,d){var c=Math.min(l.length,Z.length)-1,m=new Array(c),G=new Array(c),W=-1;for(l[c]<l[0]&&(l=l.slice().reverse(),Z=Z.slice().reverse());++W<c;)m[W]=p(l[W],l[W+1]),G[W]=d(Z[W],Z[W+1]);return function(Z){var d=b.bisect(l,Z,1,c)-1;return G[d](m[d](Z))}}function R(l,Z){return Z.domain(l.domain()).range(l.range()).interpolate(l.interpolate()).clamp(l.clamp()).unknown(l.unknown())}function g(){var l,Z,b,c,m,G,W=Y,i=Y,X=d.interpolate,a=e;function V(){return c=Math.min(W.length,i.length)>2?I:s,m=G=null,h}function h(Z){return isNaN(Z=+Z)?b:(m||(m=c(W.map(l),i,X)))(l(a(Z)))}return h.invert=function(b){return a(Z((G||(G=c(i,W.map(l),d.interpolateNumber)))(b)))},h.domain=function(l){return arguments.length?(W=n.call(l,y),a===e||(a=o(W)),V()):W.slice()},h.range=function(l){return arguments.length?(i=u.call(l),V()):i.slice()},h.rangeRound=function(l){return i=u.call(l),X=d.interpolateRound,V()},h.clamp=function(l){return arguments.length?(a=l?o(W):e,h):a!==e},h.interpolate=function(l){return arguments.length?(X=l,V()):X},h.unknown=function(l){return arguments.length?(b=l,h):b},function(b,d){return l=b,Z=d,V()}}function K(l,Z){return g()(l,Z)}function N(l,Z,d,m){var G,W=b.tickStep(l,Z,d);switch((m=c.formatSpecifier(null==m?",f":m)).type){case"s":var i=Math.max(Math.abs(l),Math.abs(Z));return null!=m.precision||isNaN(G=c.precisionPrefix(W,i))||(m.precision=G),c.formatPrefix(m,i);case"":case"e":case"g":case"p":case"r":null!=m.precision||isNaN(G=c.precisionRound(W,Math.max(Math.abs(l),Math.abs(Z))))||(m.precision=G-("e"===m.type));break;case"f":case"%":null!=m.precision||isNaN(G=c.precisionFixed(W))||(m.precision=G-2*("%"===m.type))}return c.format(m)}function H(l){var Z=l.domain;return l.ticks=function(l){var d=Z();return b.ticks(d[0],d[d.length-1],null==l?10:l)},l.tickFormat=function(l,b){var d=Z();return N(d[0],d[d.length-1],null==l?10:l,b)},l.nice=function(d){null==d&&(d=10);var c,m=Z(),G=0,W=m.length-1,i=m[G],X=m[W];return X<i&&(c=i,i=X,X=c,c=G,G=W,W=c),(c=b.tickIncrement(i,X,d))>0?(i=Math.floor(i/c)*c,X=Math.ceil(X/c)*c,c=b.tickIncrement(i,X,d)):c<0&&(i=Math.ceil(i*c)/c,X=Math.floor(X*c)/c,c=b.tickIncrement(i,X,d)),c>0?(m[G]=Math.floor(i/c)*c,m[W]=Math.ceil(X/c)*c,Z(m)):c<0&&(m[G]=Math.ceil(i*c)/c,m[W]=Math.floor(X*c)/c,Z(m)),l},l}function x(l,Z){var b,d=0,c=(l=l.slice()).length-1,m=l[d],G=l[c];return G<m&&(b=d,d=c,c=b,b=m,m=G,G=b),l[d]=Z.floor(m),l[c]=Z.ceil(G),l}function J(l){return Math.log(l)}function L(l){return Math.exp(l)}function F(l){return-Math.log(-l)}function C(l){return-Math.exp(-l)}function S(l){return isFinite(l)?+("1e"+l):l<0?0:l}function B(l){return function(Z){return-l(-Z)}}function k(l){var Z,d,m=l(J,L),G=m.domain,W=10;function i(){return Z=function(l){return l===Math.E?Math.log:10===l&&Math.log10||2===l&&Math.log2||(l=Math.log(l),function(Z){return Math.log(Z)/l})}(W),d=function(l){return 10===l?S:l===Math.E?Math.exp:function(Z){return Math.pow(l,Z)}}(W),G()[0]<0?(Z=B(Z),d=B(d),l(F,C)):l(J,L),m}return m.base=function(l){return arguments.length?(W=+l,i()):W},m.domain=function(l){return arguments.length?(G(l),i()):G()},m.ticks=function(l){var c,m=G(),i=m[0],X=m[m.length-1];(c=X<i)&&(V=i,i=X,X=V);var n,u,a,V=Z(i),h=Z(X),t=null==l?10:+l,y=[];if(!(W%1)&&h-V<t){if(V=Math.round(V)-1,h=Math.round(h)+1,i>0){for(;V<h;++V)for(u=1,n=d(V);u<W;++u)if(!((a=n*u)<i)){if(a>X)break;y.push(a)}}else for(;V<h;++V)for(u=W-1,n=d(V);u>=1;--u)if(!((a=n*u)<i)){if(a>X)break;y.push(a)}}else y=b.ticks(V,h,Math.min(h-V,t)).map(d);return c?y.reverse():y},m.tickFormat=function(l,b){if(null==b&&(b=10===W?".0e":","),"function"!=typeof b&&(b=c.format(b)),l===1/0)return b;null==l&&(l=10);var G=Math.max(1,W*l/m.ticks().length);return function(l){var c=l/d(Math.round(Z(l)));return c*W<W-.5&&(c*=W),c<=G?b(l):""}},m.nice=function(){return G(x(G(),{floor:function(l){return d(Math.floor(Z(l)))},ceil:function(l){return d(Math.ceil(Z(l)))}}))},m}function v(l){return function(Z){return Math.sign(Z)*Math.log1p(Math.abs(Z/l))}}function z(l){return function(Z){return Math.sign(Z)*Math.expm1(Math.abs(Z))*l}}function M(l){var Z=1,b=l(v(Z),z(Z));return b.constant=function(b){return arguments.length?l(v(Z=+b),z(Z)):Z},H(b)}function r(l){return function(Z){return Z<0?-Math.pow(-Z,l):Math.pow(Z,l)}}function T(l){return l<0?-Math.sqrt(-l):Math.sqrt(l)}function j(l){return l<0?-l*l:l*l}function w(l){var Z=l(e,e),b=1;function d(){return 1===b?l(e,e):.5===b?l(T,j):l(r(b),r(1/b))}return Z.exponent=function(l){return arguments.length?(b=+l,d()):b},H(Z)}function U(){var l=w(g());return l.copy=function(){return R(l,U()).exponent(l.exponent())},W.apply(l,arguments),l}function f(l){return new Date(l)}function Q(l){return l instanceof Date?+l:+new Date(+l)}function P(l,Z,d,c,m,G,W,i,X){var u=K(e,e),a=u.invert,V=u.domain,h=X(".%L"),t=X(":%S"),y=X("%I:%M"),Y=X("%I %p"),p=X("%a %d"),o=X("%b %d"),s=X("%B"),I=X("%Y"),g=[[W,1,1e3],[W,5,5e3],[W,15,15e3],[W,30,3e4],[G,1,6e4],[G,5,3e5],[G,15,9e5],[G,30,18e5],[m,1,36e5],[m,3,108e5],[m,6,216e5],[m,12,432e5],[c,1,864e5],[c,2,1728e5],[d,1,6048e5],[Z,1,2592e6],[Z,3,7776e6],[l,1,31536e6]];function N(b){return(W(b)<b?h:G(b)<b?t:m(b)<b?y:c(b)<b?Y:Z(b)<b?d(b)<b?p:o:l(b)<b?s:I)(b)}function H(Z,d,c,m){if(null==Z&&(Z=10),"number"==typeof Z){var G=Math.abs(c-d)/Z,W=b.bisector((function(l){return l[2]})).right(g,G);W===g.length?(m=b.tickStep(d/31536e6,c/31536e6,Z),Z=l):W?(m=(W=g[G/g[W-1][2]<g[W][2]/G?W-1:W])[1],Z=W[0]):(m=Math.max(b.tickStep(d,c,Z),1),Z=i)}return null==m?Z:Z.every(m)}return u.invert=function(l){return new Date(a(l))},u.domain=function(l){return arguments.length?V(n.call(l,Q)):V().map(f)},u.ticks=function(l,Z){var b,d=V(),c=d[0],m=d[d.length-1],G=m<c;return G&&(b=c,c=m,m=b),b=(b=H(l,c,m,Z))?b.range(c,m+1):[],G?b.reverse():b},u.tickFormat=function(l,Z){return null==Z?N:X(Z)},u.nice=function(l,Z){var b=V();return(l=H(l,b[0],b[b.length-1],Z))?V(x(b,l)):u},u.copy=function(){return R(u,P(l,Z,d,c,m,G,W,i,X))},u}function D(){var l,Z,b,d,c,m=0,G=1,W=e,i=!1;function X(Z){return isNaN(Z=+Z)?c:W(0===b?.5:(Z=(d(Z)-l)*b,i?Math.max(0,Math.min(1,Z)):Z))}return X.domain=function(c){return arguments.length?(l=d(m=+c[0]),Z=d(G=+c[1]),b=l===Z?0:1/(Z-l),X):[m,G]},X.clamp=function(l){return arguments.length?(i=!!l,X):i},X.interpolator=function(l){return arguments.length?(W=l,X):W},X.unknown=function(l){return arguments.length?(c=l,X):c},function(c){return d=c,l=c(m),Z=c(G),b=l===Z?0:1/(Z-l),X}}function A(l,Z){return Z.domain(l.domain()).interpolator(l.interpolator()).clamp(l.clamp()).unknown(l.unknown())}function E(){var l=w(D());return l.copy=function(){return A(l,E()).exponent(l.exponent())},i.apply(l,arguments)}function O(){var l,Z,b,d,c,m,G,W=0,i=.5,X=1,n=e,u=!1;function a(l){return isNaN(l=+l)?G:(l=.5+((l=+m(l))-Z)*(l<Z?d:c),n(u?Math.max(0,Math.min(1,l)):l))}return a.domain=function(G){return arguments.length?(l=m(W=+G[0]),Z=m(i=+G[1]),b=m(X=+G[2]),d=l===Z?0:.5/(Z-l),c=Z===b?0:.5/(b-Z),a):[W,i,X]},a.clamp=function(l){return arguments.length?(u=!!l,a):u},a.interpolator=function(l){return arguments.length?(n=l,a):n},a.unknown=function(l){return arguments.length?(G=l,a):G},function(G){return m=G,l=G(W),Z=G(i),b=G(X),d=l===Z?0:.5/(Z-l),c=Z===b?0:.5/(b-Z),a}}function q(){var l=w(O());return l.copy=function(){return A(l,q()).exponent(l.exponent())},i.apply(l,arguments)}l.scaleBand=h,l.scalePoint=function(){return t(h.apply(null,arguments).paddingInner(1))},l.scaleIdentity=function l(Z){var b;function d(l){return isNaN(l=+l)?b:l}return d.invert=d,d.domain=d.range=function(l){return arguments.length?(Z=n.call(l,y),d):Z.slice()},d.unknown=function(l){return arguments.length?(b=l,d):b},d.copy=function(){return l(Z).unknown(b)},Z=arguments.length?n.call(Z,y):[0,1],H(d)},l.scaleLinear=function l(){var Z=K(e,e);return Z.copy=function(){return R(Z,l())},W.apply(Z,arguments),H(Z)},l.scaleLog=function l(){var Z=k(g()).domain([1,10]);return Z.copy=function(){return R(Z,l()).base(Z.base())},W.apply(Z,arguments),Z},l.scaleSymlog=function l(){var Z=M(g());return Z.copy=function(){return R(Z,l()).constant(Z.constant())},W.apply(Z,arguments)},l.scaleOrdinal=V,l.scaleImplicit=a,l.scalePow=U,l.scaleSqrt=function(){return U.apply(null,arguments).exponent(.5)},l.scaleQuantile=function l(){var Z,d=[],c=[],m=[];function G(){var l=0,Z=Math.max(1,c.length);for(m=new Array(Z-1);++l<Z;)m[l-1]=b.quantile(d,l/Z);return i}function i(l){return isNaN(l=+l)?Z:c[b.bisect(m,l)]}return i.invertExtent=function(l){var Z=c.indexOf(l);return Z<0?[NaN,NaN]:[Z>0?m[Z-1]:d[0],Z<m.length?m[Z]:d[d.length-1]]},i.domain=function(l){if(!arguments.length)return d.slice();d=[];for(var Z,c=0,m=l.length;c<m;++c)null==(Z=l[c])||isNaN(Z=+Z)||d.push(Z);return d.sort(b.ascending),G()},i.range=function(l){return arguments.length?(c=u.call(l),G()):c.slice()},i.unknown=function(l){return arguments.length?(Z=l,i):Z},i.quantiles=function(){return m.slice()},i.copy=function(){return l().domain(d).range(c).unknown(Z)},W.apply(i,arguments)},l.scaleQuantize=function l(){var Z,d=0,c=1,m=1,G=[.5],i=[0,1];function X(l){return l<=l?i[b.bisect(G,l,0,m)]:Z}function n(){var l=-1;for(G=new Array(m);++l<m;)G[l]=((l+1)*c-(l-m)*d)/(m+1);return X}return X.domain=function(l){return arguments.length?(d=+l[0],c=+l[1],n()):[d,c]},X.range=function(l){return arguments.length?(m=(i=u.call(l)).length-1,n()):i.slice()},X.invertExtent=function(l){var Z=i.indexOf(l);return Z<0?[NaN,NaN]:Z<1?[d,G[0]]:Z>=m?[G[m-1],c]:[G[Z-1],G[Z]]},X.unknown=function(l){return arguments.length?(Z=l,X):X},X.thresholds=function(){return G.slice()},X.copy=function(){return l().domain([d,c]).range(i).unknown(Z)},W.apply(H(X),arguments)},l.scaleThreshold=function l(){var Z,d=[.5],c=[0,1],m=1;function G(l){return l<=l?c[b.bisect(d,l,0,m)]:Z}return G.domain=function(l){return arguments.length?(d=u.call(l),m=Math.min(d.length,c.length-1),G):d.slice()},G.range=function(l){return arguments.length?(c=u.call(l),m=Math.min(d.length,c.length-1),G):c.slice()},G.invertExtent=function(l){var Z=c.indexOf(l);return[d[Z-1],d[Z]]},G.unknown=function(l){return arguments.length?(Z=l,G):Z},G.copy=function(){return l().domain(d).range(c).unknown(Z)},W.apply(G,arguments)},l.scaleTime=function(){return W.apply(P(m.timeYear,m.timeMonth,m.timeWeek,m.timeDay,m.timeHour,m.timeMinute,m.timeSecond,m.timeMillisecond,G.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},l.scaleUtc=function(){return W.apply(P(m.utcYear,m.utcMonth,m.utcWeek,m.utcDay,m.utcHour,m.utcMinute,m.utcSecond,m.utcMillisecond,G.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)},l.scaleSequential=function l(){var Z=H(D()(e));return Z.copy=function(){return A(Z,l())},i.apply(Z,arguments)},l.scaleSequentialLog=function l(){var Z=k(D()).domain([1,10]);return Z.copy=function(){return A(Z,l()).base(Z.base())},i.apply(Z,arguments)},l.scaleSequentialPow=E,l.scaleSequentialSqrt=function(){return E.apply(null,arguments).exponent(.5)},l.scaleSequentialSymlog=function l(){var Z=M(D());return Z.copy=function(){return A(Z,l()).constant(Z.constant())},i.apply(Z,arguments)},l.scaleSequentialQuantile=function l(){var Z=[],d=e;function c(l){if(!isNaN(l=+l))return d((b.bisect(Z,l)-1)/(Z.length-1))}return c.domain=function(l){if(!arguments.length)return Z.slice();Z=[];for(var d,m=0,G=l.length;m<G;++m)null==(d=l[m])||isNaN(d=+d)||Z.push(d);return Z.sort(b.ascending),c},c.interpolator=function(l){return arguments.length?(d=l,c):d},c.copy=function(){return l(d).domain(Z)},i.apply(c,arguments)},l.scaleDiverging=function l(){var Z=H(O()(e));return Z.copy=function(){return A(Z,l())},i.apply(Z,arguments)},l.scaleDivergingLog=function l(){var Z=k(O()).domain([.1,1,10]);return Z.copy=function(){return A(Z,l()).base(Z.base())},i.apply(Z,arguments)},l.scaleDivergingPow=q,l.scaleDivergingSqrt=function(){return q.apply(null,arguments).exponent(.5)},l.scaleDivergingSymlog=function l(){var Z=M(O());return Z.copy=function(){return A(Z,l()).constant(Z.constant())},i.apply(Z,arguments)},l.tickFormat=N,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-array":29,"d3-collection":33,"d3-format":42,"d3-interpolate":45,"d3-time":55,"d3-time-format":54}],52:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";var Z="http://www.w3.org/1999/xhtml",b={svg:"http://www.w3.org/2000/svg",xhtml:Z,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function d(l){var Z=l+="",d=Z.indexOf(":");return d>=0&&"xmlns"!==(Z=l.slice(0,d))&&(l=l.slice(d+1)),b.hasOwnProperty(Z)?{space:b[Z],local:l}:l}function c(l){return function(){var b=this.ownerDocument,d=this.namespaceURI;return d===Z&&b.documentElement.namespaceURI===Z?b.createElement(l):b.createElementNS(d,l)}}function m(l){return function(){return this.ownerDocument.createElementNS(l.space,l.local)}}function G(l){var Z=d(l);return(Z.local?m:c)(Z)}function W(){}function i(l){return null==l?W:function(){return this.querySelector(l)}}function X(){return[]}function n(l){return null==l?X:function(){return this.querySelectorAll(l)}}function u(l){return function(){return this.matches(l)}}function a(l){return new Array(l.length)}function V(l,Z){this.ownerDocument=l.ownerDocument,this.namespaceURI=l.namespaceURI,this._next=null,this._parent=l,this.__data__=Z}function h(l,Z,b,d,c,m){for(var G,W=0,i=Z.length,X=m.length;W<X;++W)(G=Z[W])?(G.__data__=m[W],d[W]=G):b[W]=new V(l,m[W]);for(;W<i;++W)(G=Z[W])&&(c[W]=G)}function t(l,Z,b,d,c,m,G){var W,i,X,n={},u=Z.length,a=m.length,h=new Array(u);for(W=0;W<u;++W)(i=Z[W])&&(h[W]=X="$"+G.call(i,i.__data__,W,Z),X in n?c[W]=i:n[X]=i);for(W=0;W<a;++W)(i=n[X="$"+G.call(l,m[W],W,m)])?(d[W]=i,i.__data__=m[W],n[X]=null):b[W]=new V(l,m[W]);for(W=0;W<u;++W)(i=Z[W])&&n[h[W]]===i&&(c[W]=i)}function y(l,Z){return l<Z?-1:l>Z?1:l>=Z?0:NaN}function Y(l){return function(){this.removeAttribute(l)}}function e(l){return function(){this.removeAttributeNS(l.space,l.local)}}function p(l,Z){return function(){this.setAttribute(l,Z)}}function o(l,Z){return function(){this.setAttributeNS(l.space,l.local,Z)}}function s(l,Z){return function(){var b=Z.apply(this,arguments);null==b?this.removeAttribute(l):this.setAttribute(l,b)}}function I(l,Z){return function(){var b=Z.apply(this,arguments);null==b?this.removeAttributeNS(l.space,l.local):this.setAttributeNS(l.space,l.local,b)}}function R(l){return l.ownerDocument&&l.ownerDocument.defaultView||l.document&&l||l.defaultView}function g(l){return function(){this.style.removeProperty(l)}}function K(l,Z,b){return function(){this.style.setProperty(l,Z,b)}}function N(l,Z,b){return function(){var d=Z.apply(this,arguments);null==d?this.style.removeProperty(l):this.style.setProperty(l,d,b)}}function H(l,Z){return l.style.getPropertyValue(Z)||R(l).getComputedStyle(l,null).getPropertyValue(Z)}function x(l){return function(){delete this[l]}}function J(l,Z){return function(){this[l]=Z}}function L(l,Z){return function(){var b=Z.apply(this,arguments);null==b?delete this[l]:this[l]=b}}function F(l){return l.trim().split(/^|\s+/)}function C(l){return l.classList||new S(l)}function S(l){this._node=l,this._names=F(l.getAttribute("class")||"")}function B(l,Z){for(var b=C(l),d=-1,c=Z.length;++d<c;)b.add(Z[d])}function k(l,Z){for(var b=C(l),d=-1,c=Z.length;++d<c;)b.remove(Z[d])}function v(l){return function(){B(this,l)}}function z(l){return function(){k(this,l)}}function M(l,Z){return function(){(Z.apply(this,arguments)?B:k)(this,l)}}function r(){this.textContent=""}function T(l){return function(){this.textContent=l}}function j(l){return function(){var Z=l.apply(this,arguments);this.textContent=null==Z?"":Z}}function w(){this.innerHTML=""}function U(l){return function(){this.innerHTML=l}}function f(l){return function(){var Z=l.apply(this,arguments);this.innerHTML=null==Z?"":Z}}function Q(){this.nextSibling&&this.parentNode.appendChild(this)}function P(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function D(){return null}function A(){var l=this.parentNode;l&&l.removeChild(this)}function E(){var l=this.cloneNode(!1),Z=this.parentNode;return Z?Z.insertBefore(l,this.nextSibling):l}function O(){var l=this.cloneNode(!0),Z=this.parentNode;return Z?Z.insertBefore(l,this.nextSibling):l}V.prototype={constructor:V,appendChild:function(l){return this._parent.insertBefore(l,this._next)},insertBefore:function(l,Z){return this._parent.insertBefore(l,Z)},querySelector:function(l){return this._parent.querySelector(l)},querySelectorAll:function(l){return this._parent.querySelectorAll(l)}},S.prototype={add:function(l){this._names.indexOf(l)<0&&(this._names.push(l),this._node.setAttribute("class",this._names.join(" ")))},remove:function(l){var Z=this._names.indexOf(l);Z>=0&&(this._names.splice(Z,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(l){return this._names.indexOf(l)>=0}};var q={};function _(l,Z,b){return l=$(l,Z,b),function(Z){var b=Z.relatedTarget;b&&(b===this||8&b.compareDocumentPosition(this))||l.call(this,Z)}}function $(Z,b,d){return function(c){var m=l.event;l.event=c;try{Z.call(this,this.__data__,b,d)}finally{l.event=m}}}function ll(l){return l.trim().split(/^|\s+/).map((function(l){var Z="",b=l.indexOf(".");return b>=0&&(Z=l.slice(b+1),l=l.slice(0,b)),{type:l,name:Z}}))}function Zl(l){return function(){var Z=this.__on;if(Z){for(var b,d=0,c=-1,m=Z.length;d<m;++d)b=Z[d],l.type&&b.type!==l.type||b.name!==l.name?Z[++c]=b:this.removeEventListener(b.type,b.listener,b.capture);++c?Z.length=c:delete this.__on}}}function bl(l,Z,b){var d=q.hasOwnProperty(l.type)?_:$;return function(c,m,G){var W,i=this.__on,X=d(Z,m,G);if(i)for(var n=0,u=i.length;n<u;++n)if((W=i[n]).type===l.type&&W.name===l.name)return this.removeEventListener(W.type,W.listener,W.capture),this.addEventListener(W.type,W.listener=X,W.capture=b),void(W.value=Z);this.addEventListener(l.type,X,b),W={type:l.type,name:l.name,value:Z,listener:X,capture:b},i?i.push(W):this.__on=[W]}}function dl(l,Z,b){var d=R(l),c=d.CustomEvent;"function"==typeof c?c=new c(Z,b):(c=d.document.createEvent("Event"),b?(c.initEvent(Z,b.bubbles,b.cancelable),c.detail=b.detail):c.initEvent(Z,!1,!1)),l.dispatchEvent(c)}function cl(l,Z){return function(){return dl(this,l,Z)}}function ml(l,Z){return function(){return dl(this,l,Z.apply(this,arguments))}}l.event=null,"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(q={mouseenter:"mouseover",mouseleave:"mouseout"}));var Gl=[null];function Wl(l,Z){this._groups=l,this._parents=Z}function il(){return new Wl([[document.documentElement]],Gl)}function Xl(l){return"string"==typeof l?new Wl([[document.querySelector(l)]],[document.documentElement]):new Wl([[l]],Gl)}Wl.prototype=il.prototype={constructor:Wl,select:function(l){"function"!=typeof l&&(l=i(l));for(var Z=this._groups,b=Z.length,d=new Array(b),c=0;c<b;++c)for(var m,G,W=Z[c],X=W.length,n=d[c]=new Array(X),u=0;u<X;++u)(m=W[u])&&(G=l.call(m,m.__data__,u,W))&&("__data__"in m&&(G.__data__=m.__data__),n[u]=G);return new Wl(d,this._parents)},selectAll:function(l){"function"!=typeof l&&(l=n(l));for(var Z=this._groups,b=Z.length,d=[],c=[],m=0;m<b;++m)for(var G,W=Z[m],i=W.length,X=0;X<i;++X)(G=W[X])&&(d.push(l.call(G,G.__data__,X,W)),c.push(G));return new Wl(d,c)},filter:function(l){"function"!=typeof l&&(l=u(l));for(var Z=this._groups,b=Z.length,d=new Array(b),c=0;c<b;++c)for(var m,G=Z[c],W=G.length,i=d[c]=[],X=0;X<W;++X)(m=G[X])&&l.call(m,m.__data__,X,G)&&i.push(m);return new Wl(d,this._parents)},data:function(l,Z){if(!l)return y=new Array(this.size()),n=-1,this.each((function(l){y[++n]=l})),y;var b,d=Z?t:h,c=this._parents,m=this._groups;"function"!=typeof l&&(b=l,l=function(){return b});for(var G=m.length,W=new Array(G),i=new Array(G),X=new Array(G),n=0;n<G;++n){var u=c[n],a=m[n],V=a.length,y=l.call(u,u&&u.__data__,n,c),Y=y.length,e=i[n]=new Array(Y),p=W[n]=new Array(Y);d(u,a,e,p,X[n]=new Array(V),y,Z);for(var o,s,I=0,R=0;I<Y;++I)if(o=e[I]){for(I>=R&&(R=I+1);!(s=p[R])&&++R<Y;);o._next=s||null}}return(W=new Wl(W,c))._enter=i,W._exit=X,W},enter:function(){return new Wl(this._enter||this._groups.map(a),this._parents)},exit:function(){return new Wl(this._exit||this._groups.map(a),this._parents)},join:function(l,Z,b){var d=this.enter(),c=this,m=this.exit();return d="function"==typeof l?l(d):d.append(l+""),null!=Z&&(c=Z(c)),null==b?m.remove():b(m),d&&c?d.merge(c).order():c},merge:function(l){for(var Z=this._groups,b=l._groups,d=Z.length,c=b.length,m=Math.min(d,c),G=new Array(d),W=0;W<m;++W)for(var i,X=Z[W],n=b[W],u=X.length,a=G[W]=new Array(u),V=0;V<u;++V)(i=X[V]||n[V])&&(a[V]=i);for(;W<d;++W)G[W]=Z[W];return new Wl(G,this._parents)},order:function(){for(var l=this._groups,Z=-1,b=l.length;++Z<b;)for(var d,c=l[Z],m=c.length-1,G=c[m];--m>=0;)(d=c[m])&&(G&&4^d.compareDocumentPosition(G)&&G.parentNode.insertBefore(d,G),G=d);return this},sort:function(l){function Z(Z,b){return Z&&b?l(Z.__data__,b.__data__):!Z-!b}l||(l=y);for(var b=this._groups,d=b.length,c=new Array(d),m=0;m<d;++m){for(var G,W=b[m],i=W.length,X=c[m]=new Array(i),n=0;n<i;++n)(G=W[n])&&(X[n]=G);X.sort(Z)}return new Wl(c,this._parents).order()},call:function(){var l=arguments[0];return arguments[0]=this,l.apply(null,arguments),this},nodes:function(){var l=new Array(this.size()),Z=-1;return this.each((function(){l[++Z]=this})),l},node:function(){for(var l=this._groups,Z=0,b=l.length;Z<b;++Z)for(var d=l[Z],c=0,m=d.length;c<m;++c){var G=d[c];if(G)return G}return null},size:function(){var l=0;return this.each((function(){++l})),l},empty:function(){return!this.node()},each:function(l){for(var Z=this._groups,b=0,d=Z.length;b<d;++b)for(var c,m=Z[b],G=0,W=m.length;G<W;++G)(c=m[G])&&l.call(c,c.__data__,G,m);return this},attr:function(l,Z){var b=d(l);if(arguments.length<2){var c=this.node();return b.local?c.getAttributeNS(b.space,b.local):c.getAttribute(b)}return this.each((null==Z?b.local?e:Y:"function"==typeof Z?b.local?I:s:b.local?o:p)(b,Z))},style:function(l,Z,b){return arguments.length>1?this.each((null==Z?g:"function"==typeof Z?N:K)(l,Z,null==b?"":b)):H(this.node(),l)},property:function(l,Z){return arguments.length>1?this.each((null==Z?x:"function"==typeof Z?L:J)(l,Z)):this.node()[l]},classed:function(l,Z){var b=F(l+"");if(arguments.length<2){for(var d=C(this.node()),c=-1,m=b.length;++c<m;)if(!d.contains(b[c]))return!1;return!0}return this.each(("function"==typeof Z?M:Z?v:z)(b,Z))},text:function(l){return arguments.length?this.each(null==l?r:("function"==typeof l?j:T)(l)):this.node().textContent},html:function(l){return arguments.length?this.each(null==l?w:("function"==typeof l?f:U)(l)):this.node().innerHTML},raise:function(){return this.each(Q)},lower:function(){return this.each(P)},append:function(l){var Z="function"==typeof l?l:G(l);return this.select((function(){return this.appendChild(Z.apply(this,arguments))}))},insert:function(l,Z){var b="function"==typeof l?l:G(l),d=null==Z?D:"function"==typeof Z?Z:i(Z);return this.select((function(){return this.insertBefore(b.apply(this,arguments),d.apply(this,arguments)||null)}))},remove:function(){return this.each(A)},clone:function(l){return this.select(l?O:E)},datum:function(l){return arguments.length?this.property("__data__",l):this.node().__data__},on:function(l,Z,b){var d,c,m=ll(l+""),G=m.length;if(!(arguments.length<2)){for(W=Z?bl:Zl,null==b&&(b=!1),d=0;d<G;++d)this.each(W(m[d],Z,b));return this}var W=this.node().__on;if(W)for(var i,X=0,n=W.length;X<n;++X)for(d=0,i=W[X];d<G;++d)if((c=m[d]).type===i.type&&c.name===i.name)return i.value},dispatch:function(l,Z){return this.each(("function"==typeof Z?ml:cl)(l,Z))}};var nl=0;function ul(){return new al}function al(){this._="@"+(++nl).toString(36)}function Vl(){for(var Z,b=l.event;Z=b.sourceEvent;)b=Z;return b}function hl(l,Z){var b=l.ownerSVGElement||l;if(b.createSVGPoint){var d=b.createSVGPoint();return d.x=Z.clientX,d.y=Z.clientY,[(d=d.matrixTransform(l.getScreenCTM().inverse())).x,d.y]}var c=l.getBoundingClientRect();return[Z.clientX-c.left-l.clientLeft,Z.clientY-c.top-l.clientTop]}al.prototype=ul.prototype={constructor:al,get:function(l){for(var Z=this._;!(Z in l);)if(!(l=l.parentNode))return;return l[Z]},set:function(l,Z){return l[this._]=Z},remove:function(l){return this._ in l&&delete l[this._]},toString:function(){return this._}},l.clientPoint=hl,l.create=function(l){return Xl(G(l).call(document.documentElement))},l.creator=G,l.customEvent=function(Z,b,d,c){var m=l.event;Z.sourceEvent=l.event,l.event=Z;try{return b.apply(d,c)}finally{l.event=m}},l.local=ul,l.matcher=u,l.mouse=function(l){var Z=Vl();return Z.changedTouches&&(Z=Z.changedTouches[0]),hl(l,Z)},l.namespace=d,l.namespaces=b,l.select=Xl,l.selectAll=function(l){return"string"==typeof l?new Wl([document.querySelectorAll(l)],[document.documentElement]):new Wl([null==l?[]:l],Gl)},l.selection=il,l.selector=i,l.selectorAll=n,l.style=H,l.touch=function(l,Z,b){arguments.length<3&&(b=Z,Z=Vl().changedTouches);for(var d,c=0,m=Z?Z.length:0;c<m;++c)if((d=Z[c]).identifier===b)return hl(l,d);return null},l.touches=function(l,Z){null==Z&&(Z=Vl().touches);for(var b=0,d=Z?Z.length:0,c=new Array(d);b<d;++b)c[b]=hl(l,Z[b]);return c},l.window=R,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],53:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-path")):c((d=d||self).d3=d.d3||{},d.d3)}(this,(function(l,Z){"use strict";function b(l){return function(){return l}}var d=Math.abs,c=Math.atan2,m=Math.cos,G=Math.max,W=Math.min,i=Math.sin,X=Math.sqrt,n=Math.PI,u=n/2,a=2*n;function V(l){return l>1?0:l<-1?n:Math.acos(l)}function h(l){return l>=1?u:l<=-1?-u:Math.asin(l)}function t(l){return l.innerRadius}function y(l){return l.outerRadius}function Y(l){return l.startAngle}function e(l){return l.endAngle}function p(l){return l&&l.padAngle}function o(l,Z,b,d,c,m,G,W){var i=b-l,X=d-Z,n=G-c,u=W-m,a=u*i-n*X;if(!(a*a<1e-12))return[l+(a=(n*(Z-m)-u*(l-c))/a)*i,Z+a*X]}function s(l,Z,b,d,c,m,W){var i=l-b,n=Z-d,u=(W?m:-m)/X(i*i+n*n),a=u*n,V=-u*i,h=l+a,t=Z+V,y=b+a,Y=d+V,e=(h+y)/2,p=(t+Y)/2,o=y-h,s=Y-t,I=o*o+s*s,R=c-m,g=h*Y-y*t,K=(s<0?-1:1)*X(G(0,R*R*I-g*g)),N=(g*s-o*K)/I,H=(-g*o-s*K)/I,x=(g*s+o*K)/I,J=(-g*o+s*K)/I,L=N-e,F=H-p,C=x-e,S=J-p;return L*L+F*F>C*C+S*S&&(N=x,H=J),{cx:N,cy:H,x01:-a,y01:-V,x11:N*(c/R-1),y11:H*(c/R-1)}}function I(l){this._context=l}function R(l){return new I(l)}function g(l){return l[0]}function K(l){return l[1]}function N(){var l=g,d=K,c=b(!0),m=null,G=R,W=null;function i(b){var i,X,n,u=b.length,a=!1;for(null==m&&(W=G(n=Z.path())),i=0;i<=u;++i)!(i<u&&c(X=b[i],i,b))===a&&((a=!a)?W.lineStart():W.lineEnd()),a&&W.point(+l(X,i,b),+d(X,i,b));if(n)return W=null,n+""||null}return i.x=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(+Z),i):l},i.y=function(l){return arguments.length?(d="function"==typeof l?l:b(+l),i):d},i.defined=function(l){return arguments.length?(c="function"==typeof l?l:b(!!l),i):c},i.curve=function(l){return arguments.length?(G=l,null!=m&&(W=G(m)),i):G},i.context=function(l){return arguments.length?(null==l?m=W=null:W=G(m=l),i):m},i}function H(){var l=g,d=null,c=b(0),m=K,G=b(!0),W=null,i=R,X=null;function n(b){var n,u,a,V,h,t=b.length,y=!1,Y=new Array(t),e=new Array(t);for(null==W&&(X=i(h=Z.path())),n=0;n<=t;++n){if(!(n<t&&G(V=b[n],n,b))===y)if(y=!y)u=n,X.areaStart(),X.lineStart();else{for(X.lineEnd(),X.lineStart(),a=n-1;a>=u;--a)X.point(Y[a],e[a]);X.lineEnd(),X.areaEnd()}y&&(Y[n]=+l(V,n,b),e[n]=+c(V,n,b),X.point(d?+d(V,n,b):Y[n],m?+m(V,n,b):e[n]))}if(h)return X=null,h+""||null}function u(){return N().defined(G).curve(i).context(W)}return n.x=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(+Z),d=null,n):l},n.x0=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(+Z),n):l},n.x1=function(l){return arguments.length?(d=null==l?null:"function"==typeof l?l:b(+l),n):d},n.y=function(l){return arguments.length?(c="function"==typeof l?l:b(+l),m=null,n):c},n.y0=function(l){return arguments.length?(c="function"==typeof l?l:b(+l),n):c},n.y1=function(l){return arguments.length?(m=null==l?null:"function"==typeof l?l:b(+l),n):m},n.lineX0=n.lineY0=function(){return u().x(l).y(c)},n.lineY1=function(){return u().x(l).y(m)},n.lineX1=function(){return u().x(d).y(c)},n.defined=function(l){return arguments.length?(G="function"==typeof l?l:b(!!l),n):G},n.curve=function(l){return arguments.length?(i=l,null!=W&&(X=i(W)),n):i},n.context=function(l){return arguments.length?(null==l?W=X=null:X=i(W=l),n):W},n}function x(l,Z){return Z<l?-1:Z>l?1:Z>=l?0:NaN}function J(l){return l}I.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;default:this._context.lineTo(l,Z)}}};var L=C(R);function F(l){this._curve=l}function C(l){function Z(Z){return new F(l(Z))}return Z._curve=l,Z}function S(l){var Z=l.curve;return l.angle=l.x,delete l.x,l.radius=l.y,delete l.y,l.curve=function(l){return arguments.length?Z(C(l)):Z()._curve},l}function B(){return S(N().curve(L))}function k(){var l=H().curve(L),Z=l.curve,b=l.lineX0,d=l.lineX1,c=l.lineY0,m=l.lineY1;return l.angle=l.x,delete l.x,l.startAngle=l.x0,delete l.x0,l.endAngle=l.x1,delete l.x1,l.radius=l.y,delete l.y,l.innerRadius=l.y0,delete l.y0,l.outerRadius=l.y1,delete l.y1,l.lineStartAngle=function(){return S(b())},delete l.lineX0,l.lineEndAngle=function(){return S(d())},delete l.lineX1,l.lineInnerRadius=function(){return S(c())},delete l.lineY0,l.lineOuterRadius=function(){return S(m())},delete l.lineY1,l.curve=function(l){return arguments.length?Z(C(l)):Z()._curve},l}function v(l,Z){return[(Z=+Z)*Math.cos(l-=Math.PI/2),Z*Math.sin(l)]}F.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(l,Z){this._curve.point(Z*Math.sin(l),Z*-Math.cos(l))}};var z=Array.prototype.slice;function M(l){return l.source}function r(l){return l.target}function T(l){var d=M,c=r,m=g,G=K,W=null;function i(){var b,i=z.call(arguments),X=d.apply(this,i),n=c.apply(this,i);if(W||(W=b=Z.path()),l(W,+m.apply(this,(i[0]=X,i)),+G.apply(this,i),+m.apply(this,(i[0]=n,i)),+G.apply(this,i)),b)return W=null,b+""||null}return i.source=function(l){return arguments.length?(d=l,i):d},i.target=function(l){return arguments.length?(c=l,i):c},i.x=function(l){return arguments.length?(m="function"==typeof l?l:b(+l),i):m},i.y=function(l){return arguments.length?(G="function"==typeof l?l:b(+l),i):G},i.context=function(l){return arguments.length?(W=null==l?null:l,i):W},i}function j(l,Z,b,d,c){l.moveTo(Z,b),l.bezierCurveTo(Z=(Z+d)/2,b,Z,c,d,c)}function w(l,Z,b,d,c){l.moveTo(Z,b),l.bezierCurveTo(Z,b=(b+c)/2,d,b,d,c)}function U(l,Z,b,d,c){var m=v(Z,b),G=v(Z,b=(b+c)/2),W=v(d,b),i=v(d,c);l.moveTo(m[0],m[1]),l.bezierCurveTo(G[0],G[1],W[0],W[1],i[0],i[1])}var f={draw:function(l,Z){var b=Math.sqrt(Z/n);l.moveTo(b,0),l.arc(0,0,b,0,a)}},Q={draw:function(l,Z){var b=Math.sqrt(Z/5)/2;l.moveTo(-3*b,-b),l.lineTo(-b,-b),l.lineTo(-b,-3*b),l.lineTo(b,-3*b),l.lineTo(b,-b),l.lineTo(3*b,-b),l.lineTo(3*b,b),l.lineTo(b,b),l.lineTo(b,3*b),l.lineTo(-b,3*b),l.lineTo(-b,b),l.lineTo(-3*b,b),l.closePath()}},P=Math.sqrt(1/3),D=2*P,A={draw:function(l,Z){var b=Math.sqrt(Z/D),d=b*P;l.moveTo(0,-b),l.lineTo(d,0),l.lineTo(0,b),l.lineTo(-d,0),l.closePath()}},E=Math.sin(n/10)/Math.sin(7*n/10),O=Math.sin(a/10)*E,q=-Math.cos(a/10)*E,_={draw:function(l,Z){var b=Math.sqrt(.8908130915292852*Z),d=O*b,c=q*b;l.moveTo(0,-b),l.lineTo(d,c);for(var m=1;m<5;++m){var G=a*m/5,W=Math.cos(G),i=Math.sin(G);l.lineTo(i*b,-W*b),l.lineTo(W*d-i*c,i*d+W*c)}l.closePath()}},$={draw:function(l,Z){var b=Math.sqrt(Z),d=-b/2;l.rect(d,d,b,b)}},ll=Math.sqrt(3),Zl={draw:function(l,Z){var b=-Math.sqrt(Z/(3*ll));l.moveTo(0,2*b),l.lineTo(-ll*b,-b),l.lineTo(ll*b,-b),l.closePath()}},bl=-.5,dl=Math.sqrt(3)/2,cl=1/Math.sqrt(12),ml=3*(cl/2+1),Gl={draw:function(l,Z){var b=Math.sqrt(Z/ml),d=b/2,c=b*cl,m=d,G=b*cl+b,W=-m,i=G;l.moveTo(d,c),l.lineTo(m,G),l.lineTo(W,i),l.lineTo(bl*d-dl*c,dl*d+bl*c),l.lineTo(bl*m-dl*G,dl*m+bl*G),l.lineTo(bl*W-dl*i,dl*W+bl*i),l.lineTo(bl*d+dl*c,bl*c-dl*d),l.lineTo(bl*m+dl*G,bl*G-dl*m),l.lineTo(bl*W+dl*i,bl*i-dl*W),l.closePath()}},Wl=[f,Q,A,$,_,Zl,Gl];function il(){}function Xl(l,Z,b){l._context.bezierCurveTo((2*l._x0+l._x1)/3,(2*l._y0+l._y1)/3,(l._x0+2*l._x1)/3,(l._y0+2*l._y1)/3,(l._x0+4*l._x1+Z)/6,(l._y0+4*l._y1+b)/6)}function nl(l){this._context=l}function ul(l){this._context=l}function al(l){this._context=l}function Vl(l,Z){this._basis=new nl(l),this._beta=Z}nl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Xl(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Xl(this,l,Z)}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z}},ul.prototype={areaStart:il,areaEnd:il,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._x2=l,this._y2=Z;break;case 1:this._point=2,this._x3=l,this._y3=Z;break;case 2:this._point=3,this._x4=l,this._y4=Z,this._context.moveTo((this._x0+4*this._x1+l)/6,(this._y0+4*this._y1+Z)/6);break;default:Xl(this,l,Z)}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z}},al.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var b=(this._x0+4*this._x1+l)/6,d=(this._y0+4*this._y1+Z)/6;this._line?this._context.lineTo(b,d):this._context.moveTo(b,d);break;case 3:this._point=4;default:Xl(this,l,Z)}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z}},Vl.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var l=this._x,Z=this._y,b=l.length-1;if(b>0)for(var d,c=l[0],m=Z[0],G=l[b]-c,W=Z[b]-m,i=-1;++i<=b;)d=i/b,this._basis.point(this._beta*l[i]+(1-this._beta)*(c+d*G),this._beta*Z[i]+(1-this._beta)*(m+d*W));this._x=this._y=null,this._basis.lineEnd()},point:function(l,Z){this._x.push(+l),this._y.push(+Z)}};var hl=function l(Z){function b(l){return 1===Z?new nl(l):new Vl(l,Z)}return b.beta=function(Z){return l(+Z)},b}(.85);function tl(l,Z,b){l._context.bezierCurveTo(l._x1+l._k*(l._x2-l._x0),l._y1+l._k*(l._y2-l._y0),l._x2+l._k*(l._x1-Z),l._y2+l._k*(l._y1-b),l._x2,l._y2)}function yl(l,Z){this._context=l,this._k=(1-Z)/6}yl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:tl(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2,this._x1=l,this._y1=Z;break;case 2:this._point=3;default:tl(this,l,Z)}this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var Yl=function l(Z){function b(l){return new yl(l,Z)}return b.tension=function(Z){return l(+Z)},b}(0);function el(l,Z){this._context=l,this._k=(1-Z)/6}el.prototype={areaStart:il,areaEnd:il,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._x3=l,this._y3=Z;break;case 1:this._point=2,this._context.moveTo(this._x4=l,this._y4=Z);break;case 2:this._point=3,this._x5=l,this._y5=Z;break;default:tl(this,l,Z)}this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var pl=function l(Z){function b(l){return new el(l,Z)}return b.tension=function(Z){return l(+Z)},b}(0);function ol(l,Z){this._context=l,this._k=(1-Z)/6}ol.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:tl(this,l,Z)}this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var sl=function l(Z){function b(l){return new ol(l,Z)}return b.tension=function(Z){return l(+Z)},b}(0);function Il(l,Z,b){var d=l._x1,c=l._y1,m=l._x2,G=l._y2;if(l._l01_a>1e-12){var W=2*l._l01_2a+3*l._l01_a*l._l12_a+l._l12_2a,i=3*l._l01_a*(l._l01_a+l._l12_a);d=(d*W-l._x0*l._l12_2a+l._x2*l._l01_2a)/i,c=(c*W-l._y0*l._l12_2a+l._y2*l._l01_2a)/i}if(l._l23_a>1e-12){var X=2*l._l23_2a+3*l._l23_a*l._l12_a+l._l12_2a,n=3*l._l23_a*(l._l23_a+l._l12_a);m=(m*X+l._x1*l._l23_2a-Z*l._l12_2a)/n,G=(G*X+l._y1*l._l23_2a-b*l._l12_2a)/n}l._context.bezierCurveTo(d,c,m,G,l._x2,l._y2)}function Rl(l,Z){this._context=l,this._alpha=Z}Rl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){if(l=+l,Z=+Z,this._point){var b=this._x2-l,d=this._y2-Z;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(b*b+d*d,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;break;case 2:this._point=3;default:Il(this,l,Z)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var gl=function l(Z){function b(l){return Z?new Rl(l,Z):new yl(l,0)}return b.alpha=function(Z){return l(+Z)},b}(.5);function Kl(l,Z){this._context=l,this._alpha=Z}Kl.prototype={areaStart:il,areaEnd:il,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(l,Z){if(l=+l,Z=+Z,this._point){var b=this._x2-l,d=this._y2-Z;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(b*b+d*d,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=l,this._y3=Z;break;case 1:this._point=2,this._context.moveTo(this._x4=l,this._y4=Z);break;case 2:this._point=3,this._x5=l,this._y5=Z;break;default:Il(this,l,Z)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var Nl=function l(Z){function b(l){return Z?new Kl(l,Z):new el(l,0)}return b.alpha=function(Z){return l(+Z)},b}(.5);function Hl(l,Z){this._context=l,this._alpha=Z}Hl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){if(l=+l,Z=+Z,this._point){var b=this._x2-l,d=this._y2-Z;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(b*b+d*d,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Il(this,l,Z)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=l,this._y0=this._y1,this._y1=this._y2,this._y2=Z}};var xl=function l(Z){function b(l){return Z?new Hl(l,Z):new ol(l,0)}return b.alpha=function(Z){return l(+Z)},b}(.5);function Jl(l){this._context=l}function Ll(l){return l<0?-1:1}function Fl(l,Z,b){var d=l._x1-l._x0,c=Z-l._x1,m=(l._y1-l._y0)/(d||c<0&&-0),G=(b-l._y1)/(c||d<0&&-0),W=(m*c+G*d)/(d+c);return(Ll(m)+Ll(G))*Math.min(Math.abs(m),Math.abs(G),.5*Math.abs(W))||0}function Cl(l,Z){var b=l._x1-l._x0;return b?(3*(l._y1-l._y0)/b-Z)/2:Z}function Sl(l,Z,b){var d=l._x0,c=l._y0,m=l._x1,G=l._y1,W=(m-d)/3;l._context.bezierCurveTo(d+W,c+W*Z,m-W,G-W*b,m,G)}function Bl(l){this._context=l}function kl(l){this._context=new vl(l)}function vl(l){this._context=l}function zl(l){this._context=l}function Ml(l){var Z,b,d=l.length-1,c=new Array(d),m=new Array(d),G=new Array(d);for(c[0]=0,m[0]=2,G[0]=l[0]+2*l[1],Z=1;Z<d-1;++Z)c[Z]=1,m[Z]=4,G[Z]=4*l[Z]+2*l[Z+1];for(c[d-1]=2,m[d-1]=7,G[d-1]=8*l[d-1]+l[d],Z=1;Z<d;++Z)b=c[Z]/m[Z-1],m[Z]-=b,G[Z]-=b*G[Z-1];for(c[d-1]=G[d-1]/m[d-1],Z=d-2;Z>=0;--Z)c[Z]=(G[Z]-c[Z+1])/m[Z];for(m[d-1]=(l[d]+c[d-1])/2,Z=0;Z<d-1;++Z)m[Z]=2*l[Z+1]-c[Z+1];return[c,m]}function rl(l,Z){this._context=l,this._t=Z}function Tl(l,Z){if((c=l.length)>1)for(var b,d,c,m=1,G=l[Z[0]],W=G.length;m<c;++m)for(d=G,G=l[Z[m]],b=0;b<W;++b)G[b][1]+=G[b][0]=isNaN(d[b][1])?d[b][0]:d[b][1]}function jl(l){for(var Z=l.length,b=new Array(Z);--Z>=0;)b[Z]=Z;return b}function wl(l,Z){return l[Z]}function Ul(l){var Z=l.map(fl);return jl(l).sort((function(l,b){return Z[l]-Z[b]}))}function fl(l){for(var Z,b=-1,d=0,c=l.length,m=-1/0;++b<c;)(Z=+l[b][1])>m&&(m=Z,d=b);return d}function Ql(l){var Z=l.map(Pl);return jl(l).sort((function(l,b){return Z[l]-Z[b]}))}function Pl(l){for(var Z,b=0,d=-1,c=l.length;++d<c;)(Z=+l[d][1])&&(b+=Z);return b}Jl.prototype={areaStart:il,areaEnd:il,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(l,Z){l=+l,Z=+Z,this._point?this._context.lineTo(l,Z):(this._point=1,this._context.moveTo(l,Z))}},Bl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Sl(this,this._t0,Cl(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(l,Z){var b=NaN;if(Z=+Z,(l=+l)!==this._x1||Z!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;break;case 2:this._point=3,Sl(this,Cl(this,b=Fl(this,l,Z)),b);break;default:Sl(this,this._t0,b=Fl(this,l,Z))}this._x0=this._x1,this._x1=l,this._y0=this._y1,this._y1=Z,this._t0=b}}},(kl.prototype=Object.create(Bl.prototype)).point=function(l,Z){Bl.prototype.point.call(this,Z,l)},vl.prototype={moveTo:function(l,Z){this._context.moveTo(Z,l)},closePath:function(){this._context.closePath()},lineTo:function(l,Z){this._context.lineTo(Z,l)},bezierCurveTo:function(l,Z,b,d,c,m){this._context.bezierCurveTo(Z,l,d,b,m,c)}},zl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var l=this._x,Z=this._y,b=l.length;if(b)if(this._line?this._context.lineTo(l[0],Z[0]):this._context.moveTo(l[0],Z[0]),2===b)this._context.lineTo(l[1],Z[1]);else for(var d=Ml(l),c=Ml(Z),m=0,G=1;G<b;++m,++G)this._context.bezierCurveTo(d[0][m],c[0][m],d[1][m],c[1][m],l[G],Z[G]);(this._line||0!==this._line&&1===b)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(l,Z){this._x.push(+l),this._y.push(+Z)}},rl.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(l,Z){switch(l=+l,Z=+Z,this._point){case 0:this._point=1,this._line?this._context.lineTo(l,Z):this._context.moveTo(l,Z);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,Z),this._context.lineTo(l,Z);else{var b=this._x*(1-this._t)+l*this._t;this._context.lineTo(b,this._y),this._context.lineTo(b,Z)}}this._x=l,this._y=Z}},l.arc=function(){var l=t,G=y,I=b(0),R=null,g=Y,K=e,N=p,H=null;function x(){var b,t,y=+l.apply(this,arguments),Y=+G.apply(this,arguments),e=g.apply(this,arguments)-u,p=K.apply(this,arguments)-u,x=d(p-e),J=p>e;if(H||(H=b=Z.path()),Y<y&&(t=Y,Y=y,y=t),Y>1e-12)if(x>a-1e-12)H.moveTo(Y*m(e),Y*i(e)),H.arc(0,0,Y,e,p,!J),y>1e-12&&(H.moveTo(y*m(p),y*i(p)),H.arc(0,0,y,p,e,J));else{var L,F,C=e,S=p,B=e,k=p,v=x,z=x,M=N.apply(this,arguments)/2,r=M>1e-12&&(R?+R.apply(this,arguments):X(y*y+Y*Y)),T=W(d(Y-y)/2,+I.apply(this,arguments)),j=T,w=T;if(r>1e-12){var U=h(r/y*i(M)),f=h(r/Y*i(M));(v-=2*U)>1e-12?(B+=U*=J?1:-1,k-=U):(v=0,B=k=(e+p)/2),(z-=2*f)>1e-12?(C+=f*=J?1:-1,S-=f):(z=0,C=S=(e+p)/2)}var Q=Y*m(C),P=Y*i(C),D=y*m(k),A=y*i(k);if(T>1e-12){var E,O=Y*m(S),q=Y*i(S),_=y*m(B),$=y*i(B);if(x<n&&(E=o(Q,P,_,$,O,q,D,A))){var ll=Q-E[0],Zl=P-E[1],bl=O-E[0],dl=q-E[1],cl=1/i(V((ll*bl+Zl*dl)/(X(ll*ll+Zl*Zl)*X(bl*bl+dl*dl)))/2),ml=X(E[0]*E[0]+E[1]*E[1]);j=W(T,(y-ml)/(cl-1)),w=W(T,(Y-ml)/(cl+1))}}z>1e-12?w>1e-12?(L=s(_,$,Q,P,Y,w,J),F=s(O,q,D,A,Y,w,J),H.moveTo(L.cx+L.x01,L.cy+L.y01),w<T?H.arc(L.cx,L.cy,w,c(L.y01,L.x01),c(F.y01,F.x01),!J):(H.arc(L.cx,L.cy,w,c(L.y01,L.x01),c(L.y11,L.x11),!J),H.arc(0,0,Y,c(L.cy+L.y11,L.cx+L.x11),c(F.cy+F.y11,F.cx+F.x11),!J),H.arc(F.cx,F.cy,w,c(F.y11,F.x11),c(F.y01,F.x01),!J))):(H.moveTo(Q,P),H.arc(0,0,Y,C,S,!J)):H.moveTo(Q,P),y>1e-12&&v>1e-12?j>1e-12?(L=s(D,A,O,q,y,-j,J),F=s(Q,P,_,$,y,-j,J),H.lineTo(L.cx+L.x01,L.cy+L.y01),j<T?H.arc(L.cx,L.cy,j,c(L.y01,L.x01),c(F.y01,F.x01),!J):(H.arc(L.cx,L.cy,j,c(L.y01,L.x01),c(L.y11,L.x11),!J),H.arc(0,0,y,c(L.cy+L.y11,L.cx+L.x11),c(F.cy+F.y11,F.cx+F.x11),J),H.arc(F.cx,F.cy,j,c(F.y11,F.x11),c(F.y01,F.x01),!J))):H.arc(0,0,y,k,B,J):H.lineTo(D,A)}else H.moveTo(0,0);if(H.closePath(),b)return H=null,b+""||null}return x.centroid=function(){var Z=(+l.apply(this,arguments)+ +G.apply(this,arguments))/2,b=(+g.apply(this,arguments)+ +K.apply(this,arguments))/2-n/2;return[m(b)*Z,i(b)*Z]},x.innerRadius=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(+Z),x):l},x.outerRadius=function(l){return arguments.length?(G="function"==typeof l?l:b(+l),x):G},x.cornerRadius=function(l){return arguments.length?(I="function"==typeof l?l:b(+l),x):I},x.padRadius=function(l){return arguments.length?(R=null==l?null:"function"==typeof l?l:b(+l),x):R},x.startAngle=function(l){return arguments.length?(g="function"==typeof l?l:b(+l),x):g},x.endAngle=function(l){return arguments.length?(K="function"==typeof l?l:b(+l),x):K},x.padAngle=function(l){return arguments.length?(N="function"==typeof l?l:b(+l),x):N},x.context=function(l){return arguments.length?(H=null==l?null:l,x):H},x},l.area=H,l.areaRadial=k,l.curveBasis=function(l){return new nl(l)},l.curveBasisClosed=function(l){return new ul(l)},l.curveBasisOpen=function(l){return new al(l)},l.curveBundle=hl,l.curveCardinal=Yl,l.curveCardinalClosed=pl,l.curveCardinalOpen=sl,l.curveCatmullRom=gl,l.curveCatmullRomClosed=Nl,l.curveCatmullRomOpen=xl,l.curveLinear=R,l.curveLinearClosed=function(l){return new Jl(l)},l.curveMonotoneX=function(l){return new Bl(l)},l.curveMonotoneY=function(l){return new kl(l)},l.curveNatural=function(l){return new zl(l)},l.curveStep=function(l){return new rl(l,.5)},l.curveStepAfter=function(l){return new rl(l,1)},l.curveStepBefore=function(l){return new rl(l,0)},l.line=N,l.lineRadial=B,l.linkHorizontal=function(){return T(j)},l.linkRadial=function(){var l=T(U);return l.angle=l.x,delete l.x,l.radius=l.y,delete l.y,l},l.linkVertical=function(){return T(w)},l.pie=function(){var l=J,Z=x,d=null,c=b(0),m=b(a),G=b(0);function W(b){var W,i,X,n,u,V=b.length,h=0,t=new Array(V),y=new Array(V),Y=+c.apply(this,arguments),e=Math.min(a,Math.max(-a,m.apply(this,arguments)-Y)),p=Math.min(Math.abs(e)/V,G.apply(this,arguments)),o=p*(e<0?-1:1);for(W=0;W<V;++W)(u=y[t[W]=W]=+l(b[W],W,b))>0&&(h+=u);for(null!=Z?t.sort((function(l,b){return Z(y[l],y[b])})):null!=d&&t.sort((function(l,Z){return d(b[l],b[Z])})),W=0,X=h?(e-V*o)/h:0;W<V;++W,Y=n)i=t[W],n=Y+((u=y[i])>0?u*X:0)+o,y[i]={data:b[i],index:W,value:u,startAngle:Y,endAngle:n,padAngle:p};return y}return W.value=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(+Z),W):l},W.sortValues=function(l){return arguments.length?(Z=l,d=null,W):Z},W.sort=function(l){return arguments.length?(d=l,Z=null,W):d},W.startAngle=function(l){return arguments.length?(c="function"==typeof l?l:b(+l),W):c},W.endAngle=function(l){return arguments.length?(m="function"==typeof l?l:b(+l),W):m},W.padAngle=function(l){return arguments.length?(G="function"==typeof l?l:b(+l),W):G},W},l.pointRadial=v,l.radialArea=k,l.radialLine=B,l.stack=function(){var l=b([]),Z=jl,d=Tl,c=wl;function m(b){var m,G,W=l.apply(this,arguments),i=b.length,X=W.length,n=new Array(X);for(m=0;m<X;++m){for(var u,a=W[m],V=n[m]=new Array(i),h=0;h<i;++h)V[h]=u=[0,+c(b[h],a,h,b)],u.data=b[h];V.key=a}for(m=0,G=Z(n);m<X;++m)n[G[m]].index=m;return d(n,G),n}return m.keys=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(z.call(Z)),m):l},m.value=function(l){return arguments.length?(c="function"==typeof l?l:b(+l),m):c},m.order=function(l){return arguments.length?(Z=null==l?jl:"function"==typeof l?l:b(z.call(l)),m):Z},m.offset=function(l){return arguments.length?(d=null==l?Tl:l,m):d},m},l.stackOffsetDiverging=function(l,Z){if((W=l.length)>0)for(var b,d,c,m,G,W,i=0,X=l[Z[0]].length;i<X;++i)for(m=G=0,b=0;b<W;++b)(c=(d=l[Z[b]][i])[1]-d[0])>0?(d[0]=m,d[1]=m+=c):c<0?(d[1]=G,d[0]=G+=c):(d[0]=0,d[1]=c)},l.stackOffsetExpand=function(l,Z){if((d=l.length)>0){for(var b,d,c,m=0,G=l[0].length;m<G;++m){for(c=b=0;b<d;++b)c+=l[b][m][1]||0;if(c)for(b=0;b<d;++b)l[b][m][1]/=c}Tl(l,Z)}},l.stackOffsetNone=Tl,l.stackOffsetSilhouette=function(l,Z){if((b=l.length)>0){for(var b,d=0,c=l[Z[0]],m=c.length;d<m;++d){for(var G=0,W=0;G<b;++G)W+=l[G][d][1]||0;c[d][1]+=c[d][0]=-W/2}Tl(l,Z)}},l.stackOffsetWiggle=function(l,Z){if((c=l.length)>0&&(d=(b=l[Z[0]]).length)>0){for(var b,d,c,m=0,G=1;G<d;++G){for(var W=0,i=0,X=0;W<c;++W){for(var n=l[Z[W]],u=n[G][1]||0,a=(u-(n[G-1][1]||0))/2,V=0;V<W;++V){var h=l[Z[V]];a+=(h[G][1]||0)-(h[G-1][1]||0)}i+=u,X+=a*u}b[G-1][1]+=b[G-1][0]=m,i&&(m-=X/i)}b[G-1][1]+=b[G-1][0]=m,Tl(l,Z)}},l.stackOrderAppearance=Ul,l.stackOrderAscending=Ql,l.stackOrderDescending=function(l){return Ql(l).reverse()},l.stackOrderInsideOut=function(l){var Z,b,d=l.length,c=l.map(Pl),m=Ul(l),G=0,W=0,i=[],X=[];for(Z=0;Z<d;++Z)b=m[Z],G<W?(G+=c[b],i.push(b)):(W+=c[b],X.push(b));return X.reverse().concat(i)},l.stackOrderNone=jl,l.stackOrderReverse=function(l){return jl(l).reverse()},l.symbol=function(){var l=b(f),d=b(64),c=null;function m(){var b;if(c||(c=b=Z.path()),l.apply(this,arguments).draw(c,+d.apply(this,arguments)),b)return c=null,b+""||null}return m.type=function(Z){return arguments.length?(l="function"==typeof Z?Z:b(Z),m):l},m.size=function(l){return arguments.length?(d="function"==typeof l?l:b(+l),m):d},m.context=function(l){return arguments.length?(c=null==l?null:l,m):c},m},l.symbolCircle=f,l.symbolCross=Q,l.symbolDiamond=A,l.symbolSquare=$,l.symbolStar=_,l.symbolTriangle=Zl,l.symbolWye=Gl,l.symbols=Wl,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-path":46}],54:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-time")):c((d=d||self).d3=d.d3||{},d.d3)}(this,(function(l,Z){"use strict";function b(l){if(0<=l.y&&l.y<100){var Z=new Date(-1,l.m,l.d,l.H,l.M,l.S,l.L);return Z.setFullYear(l.y),Z}return new Date(l.y,l.m,l.d,l.H,l.M,l.S,l.L)}function d(l){if(0<=l.y&&l.y<100){var Z=new Date(Date.UTC(-1,l.m,l.d,l.H,l.M,l.S,l.L));return Z.setUTCFullYear(l.y),Z}return new Date(Date.UTC(l.y,l.m,l.d,l.H,l.M,l.S,l.L))}function c(l,Z,b){return{y:l,m:Z,d:b,H:0,M:0,S:0,L:0}}function m(l){var m=l.dateTime,G=l.date,i=l.time,X=l.periods,n=l.days,u=l.shortDays,a=l.months,el=l.shortMonths,pl=V(X),ol=h(X),sl=V(n),Il=h(n),Rl=V(u),gl=h(u),Kl=V(a),Nl=h(a),Hl=V(el),xl=h(el),Jl={a:function(l){return u[l.getDay()]},A:function(l){return n[l.getDay()]},b:function(l){return el[l.getMonth()]},B:function(l){return a[l.getMonth()]},c:null,d:k,e:k,f:T,H:v,I:z,j:M,L:r,m:j,M:w,p:function(l){return X[+(l.getHours()>=12)]},q:function(l){return 1+~~(l.getMonth()/3)},Q:yl,s:Yl,S:U,u:f,U:Q,V:P,w:D,W:A,x:null,X:null,y:E,Y:O,Z:q,"%":tl},Ll={a:function(l){return u[l.getUTCDay()]},A:function(l){return n[l.getUTCDay()]},b:function(l){return el[l.getUTCMonth()]},B:function(l){return a[l.getUTCMonth()]},c:null,d:_,e:_,f:dl,H:$,I:ll,j:Zl,L:bl,m:cl,M:ml,p:function(l){return X[+(l.getUTCHours()>=12)]},q:function(l){return 1+~~(l.getUTCMonth()/3)},Q:yl,s:Yl,S:Gl,u:Wl,U:il,V:Xl,w:nl,W:ul,x:null,X:null,y:al,Y:Vl,Z:hl,"%":tl},Fl={a:function(l,Z,b){var d=Rl.exec(Z.slice(b));return d?(l.w=gl[d[0].toLowerCase()],b+d[0].length):-1},A:function(l,Z,b){var d=sl.exec(Z.slice(b));return d?(l.w=Il[d[0].toLowerCase()],b+d[0].length):-1},b:function(l,Z,b){var d=Hl.exec(Z.slice(b));return d?(l.m=xl[d[0].toLowerCase()],b+d[0].length):-1},B:function(l,Z,b){var d=Kl.exec(Z.slice(b));return d?(l.m=Nl[d[0].toLowerCase()],b+d[0].length):-1},c:function(l,Z,b){return Bl(l,m,Z,b)},d:K,e:K,f:F,H:H,I:H,j:N,L:L,m:g,M:x,p:function(l,Z,b){var d=pl.exec(Z.slice(b));return d?(l.p=ol[d[0].toLowerCase()],b+d[0].length):-1},q:R,Q:S,s:B,S:J,u:y,U:Y,V:e,w:t,W:p,x:function(l,Z,b){return Bl(l,G,Z,b)},X:function(l,Z,b){return Bl(l,i,Z,b)},y:s,Y:o,Z:I,"%":C};function Cl(l,Z){return function(b){var d,c,m,G=[],i=-1,X=0,n=l.length;for(b instanceof Date||(b=new Date(+b));++i<n;)37===l.charCodeAt(i)&&(G.push(l.slice(X,i)),null!=(c=W[d=l.charAt(++i)])?d=l.charAt(++i):c="e"===d?" ":"0",(m=Z[d])&&(d=m(b,c)),G.push(d),X=i+1);return G.push(l.slice(X,i)),G.join("")}}function Sl(l,m){return function(G){var W,i,X=c(1900,void 0,1);if(Bl(X,l,G+="",0)!=G.length)return null;if("Q"in X)return new Date(X.Q);if("s"in X)return new Date(1e3*X.s+("L"in X?X.L:0));if(m&&!("Z"in X)&&(X.Z=0),"p"in X&&(X.H=X.H%12+12*X.p),void 0===X.m&&(X.m="q"in X?X.q:0),"V"in X){if(X.V<1||X.V>53)return null;"w"in X||(X.w=1),"Z"in X?(i=(W=d(c(X.y,0,1))).getUTCDay(),W=i>4||0===i?Z.utcMonday.ceil(W):Z.utcMonday(W),W=Z.utcDay.offset(W,7*(X.V-1)),X.y=W.getUTCFullYear(),X.m=W.getUTCMonth(),X.d=W.getUTCDate()+(X.w+6)%7):(i=(W=b(c(X.y,0,1))).getDay(),W=i>4||0===i?Z.timeMonday.ceil(W):Z.timeMonday(W),W=Z.timeDay.offset(W,7*(X.V-1)),X.y=W.getFullYear(),X.m=W.getMonth(),X.d=W.getDate()+(X.w+6)%7)}else("W"in X||"U"in X)&&("w"in X||(X.w="u"in X?X.u%7:"W"in X?1:0),i="Z"in X?d(c(X.y,0,1)).getUTCDay():b(c(X.y,0,1)).getDay(),X.m=0,X.d="W"in X?(X.w+6)%7+7*X.W-(i+5)%7:X.w+7*X.U-(i+6)%7);return"Z"in X?(X.H+=X.Z/100|0,X.M+=X.Z%100,d(X)):b(X)}}function Bl(l,Z,b,d){for(var c,m,G=0,i=Z.length,X=b.length;G<i;){if(d>=X)return-1;if(37===(c=Z.charCodeAt(G++))){if(c=Z.charAt(G++),!(m=Fl[c in W?Z.charAt(G++):c])||(d=m(l,b,d))<0)return-1}else if(c!=b.charCodeAt(d++))return-1}return d}return Jl.x=Cl(G,Jl),Jl.X=Cl(i,Jl),Jl.c=Cl(m,Jl),Ll.x=Cl(G,Ll),Ll.X=Cl(i,Ll),Ll.c=Cl(m,Ll),{format:function(l){var Z=Cl(l+="",Jl);return Z.toString=function(){return l},Z},parse:function(l){var Z=Sl(l+="",!1);return Z.toString=function(){return l},Z},utcFormat:function(l){var Z=Cl(l+="",Ll);return Z.toString=function(){return l},Z},utcParse:function(l){var Z=Sl(l+="",!0);return Z.toString=function(){return l},Z}}}var G,W={"-":"",_:" ",0:"0"},i=/^\s*\d+/,X=/^%/,n=/[\\^$*+?|[\]().{}]/g;function u(l,Z,b){var d=l<0?"-":"",c=(d?-l:l)+"",m=c.length;return d+(m<b?new Array(b-m+1).join(Z)+c:c)}function a(l){return l.replace(n,"\\$&")}function V(l){return new RegExp("^(?:"+l.map(a).join("|")+")","i")}function h(l){for(var Z={},b=-1,d=l.length;++b<d;)Z[l[b].toLowerCase()]=b;return Z}function t(l,Z,b){var d=i.exec(Z.slice(b,b+1));return d?(l.w=+d[0],b+d[0].length):-1}function y(l,Z,b){var d=i.exec(Z.slice(b,b+1));return d?(l.u=+d[0],b+d[0].length):-1}function Y(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.U=+d[0],b+d[0].length):-1}function e(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.V=+d[0],b+d[0].length):-1}function p(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.W=+d[0],b+d[0].length):-1}function o(l,Z,b){var d=i.exec(Z.slice(b,b+4));return d?(l.y=+d[0],b+d[0].length):-1}function s(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.y=+d[0]+(+d[0]>68?1900:2e3),b+d[0].length):-1}function I(l,Z,b){var d=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(Z.slice(b,b+6));return d?(l.Z=d[1]?0:-(d[2]+(d[3]||"00")),b+d[0].length):-1}function R(l,Z,b){var d=i.exec(Z.slice(b,b+1));return d?(l.q=3*d[0]-3,b+d[0].length):-1}function g(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.m=d[0]-1,b+d[0].length):-1}function K(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.d=+d[0],b+d[0].length):-1}function N(l,Z,b){var d=i.exec(Z.slice(b,b+3));return d?(l.m=0,l.d=+d[0],b+d[0].length):-1}function H(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.H=+d[0],b+d[0].length):-1}function x(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.M=+d[0],b+d[0].length):-1}function J(l,Z,b){var d=i.exec(Z.slice(b,b+2));return d?(l.S=+d[0],b+d[0].length):-1}function L(l,Z,b){var d=i.exec(Z.slice(b,b+3));return d?(l.L=+d[0],b+d[0].length):-1}function F(l,Z,b){var d=i.exec(Z.slice(b,b+6));return d?(l.L=Math.floor(d[0]/1e3),b+d[0].length):-1}function C(l,Z,b){var d=X.exec(Z.slice(b,b+1));return d?b+d[0].length:-1}function S(l,Z,b){var d=i.exec(Z.slice(b));return d?(l.Q=+d[0],b+d[0].length):-1}function B(l,Z,b){var d=i.exec(Z.slice(b));return d?(l.s=+d[0],b+d[0].length):-1}function k(l,Z){return u(l.getDate(),Z,2)}function v(l,Z){return u(l.getHours(),Z,2)}function z(l,Z){return u(l.getHours()%12||12,Z,2)}function M(l,b){return u(1+Z.timeDay.count(Z.timeYear(l),l),b,3)}function r(l,Z){return u(l.getMilliseconds(),Z,3)}function T(l,Z){return r(l,Z)+"000"}function j(l,Z){return u(l.getMonth()+1,Z,2)}function w(l,Z){return u(l.getMinutes(),Z,2)}function U(l,Z){return u(l.getSeconds(),Z,2)}function f(l){var Z=l.getDay();return 0===Z?7:Z}function Q(l,b){return u(Z.timeSunday.count(Z.timeYear(l)-1,l),b,2)}function P(l,b){var d=l.getDay();return l=d>=4||0===d?Z.timeThursday(l):Z.timeThursday.ceil(l),u(Z.timeThursday.count(Z.timeYear(l),l)+(4===Z.timeYear(l).getDay()),b,2)}function D(l){return l.getDay()}function A(l,b){return u(Z.timeMonday.count(Z.timeYear(l)-1,l),b,2)}function E(l,Z){return u(l.getFullYear()%100,Z,2)}function O(l,Z){return u(l.getFullYear()%1e4,Z,4)}function q(l){var Z=l.getTimezoneOffset();return(Z>0?"-":(Z*=-1,"+"))+u(Z/60|0,"0",2)+u(Z%60,"0",2)}function _(l,Z){return u(l.getUTCDate(),Z,2)}function $(l,Z){return u(l.getUTCHours(),Z,2)}function ll(l,Z){return u(l.getUTCHours()%12||12,Z,2)}function Zl(l,b){return u(1+Z.utcDay.count(Z.utcYear(l),l),b,3)}function bl(l,Z){return u(l.getUTCMilliseconds(),Z,3)}function dl(l,Z){return bl(l,Z)+"000"}function cl(l,Z){return u(l.getUTCMonth()+1,Z,2)}function ml(l,Z){return u(l.getUTCMinutes(),Z,2)}function Gl(l,Z){return u(l.getUTCSeconds(),Z,2)}function Wl(l){var Z=l.getUTCDay();return 0===Z?7:Z}function il(l,b){return u(Z.utcSunday.count(Z.utcYear(l)-1,l),b,2)}function Xl(l,b){var d=l.getUTCDay();return l=d>=4||0===d?Z.utcThursday(l):Z.utcThursday.ceil(l),u(Z.utcThursday.count(Z.utcYear(l),l)+(4===Z.utcYear(l).getUTCDay()),b,2)}function nl(l){return l.getUTCDay()}function ul(l,b){return u(Z.utcMonday.count(Z.utcYear(l)-1,l),b,2)}function al(l,Z){return u(l.getUTCFullYear()%100,Z,2)}function Vl(l,Z){return u(l.getUTCFullYear()%1e4,Z,4)}function hl(){return"+0000"}function tl(){return"%"}function yl(l){return+l}function Yl(l){return Math.floor(+l/1e3)}function el(Z){return G=m(Z),l.timeFormat=G.format,l.timeParse=G.parse,l.utcFormat=G.utcFormat,l.utcParse=G.utcParse,G}el({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var pl=Date.prototype.toISOString?function(l){return l.toISOString()}:l.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ"),ol=+new Date("2000-01-01T00:00:00.000Z")?function(l){var Z=new Date(l);return isNaN(Z)?null:Z}:l.utcParse("%Y-%m-%dT%H:%M:%S.%LZ");l.isoFormat=pl,l.isoParse=ol,l.timeFormatDefaultLocale=el,l.timeFormatLocale=m,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-time":55}],55:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";var Z=new Date,b=new Date;function d(l,c,m,G){function W(Z){return l(Z=0===arguments.length?new Date:new Date(+Z)),Z}return W.floor=function(Z){return l(Z=new Date(+Z)),Z},W.ceil=function(Z){return l(Z=new Date(Z-1)),c(Z,1),l(Z),Z},W.round=function(l){var Z=W(l),b=W.ceil(l);return l-Z<b-l?Z:b},W.offset=function(l,Z){return c(l=new Date(+l),null==Z?1:Math.floor(Z)),l},W.range=function(Z,b,d){var m,G=[];if(Z=W.ceil(Z),d=null==d?1:Math.floor(d),!(Z<b&&d>0))return G;do{G.push(m=new Date(+Z)),c(Z,d),l(Z)}while(m<Z&&Z<b);return G},W.filter=function(Z){return d((function(b){if(b>=b)for(;l(b),!Z(b);)b.setTime(b-1)}),(function(l,b){if(l>=l)if(b<0)for(;++b<=0;)for(;c(l,-1),!Z(l););else for(;--b>=0;)for(;c(l,1),!Z(l););}))},m&&(W.count=function(d,c){return Z.setTime(+d),b.setTime(+c),l(Z),l(b),Math.floor(m(Z,b))},W.every=function(l){return l=Math.floor(l),isFinite(l)&&l>0?l>1?W.filter(G?function(Z){return G(Z)%l==0}:function(Z){return W.count(0,Z)%l==0}):W:null}),W}var c=d((function(){}),(function(l,Z){l.setTime(+l+Z)}),(function(l,Z){return Z-l}));c.every=function(l){return l=Math.floor(l),isFinite(l)&&l>0?l>1?d((function(Z){Z.setTime(Math.floor(Z/l)*l)}),(function(Z,b){Z.setTime(+Z+b*l)}),(function(Z,b){return(b-Z)/l})):c:null};var m=c.range,G=d((function(l){l.setTime(l-l.getMilliseconds())}),(function(l,Z){l.setTime(+l+1e3*Z)}),(function(l,Z){return(Z-l)/1e3}),(function(l){return l.getUTCSeconds()})),W=G.range,i=d((function(l){l.setTime(l-l.getMilliseconds()-1e3*l.getSeconds())}),(function(l,Z){l.setTime(+l+6e4*Z)}),(function(l,Z){return(Z-l)/6e4}),(function(l){return l.getMinutes()})),X=i.range,n=d((function(l){l.setTime(l-l.getMilliseconds()-1e3*l.getSeconds()-6e4*l.getMinutes())}),(function(l,Z){l.setTime(+l+36e5*Z)}),(function(l,Z){return(Z-l)/36e5}),(function(l){return l.getHours()})),u=n.range,a=d((function(l){l.setHours(0,0,0,0)}),(function(l,Z){l.setDate(l.getDate()+Z)}),(function(l,Z){return(Z-l-6e4*(Z.getTimezoneOffset()-l.getTimezoneOffset()))/864e5}),(function(l){return l.getDate()-1})),V=a.range;function h(l){return d((function(Z){Z.setDate(Z.getDate()-(Z.getDay()+7-l)%7),Z.setHours(0,0,0,0)}),(function(l,Z){l.setDate(l.getDate()+7*Z)}),(function(l,Z){return(Z-l-6e4*(Z.getTimezoneOffset()-l.getTimezoneOffset()))/6048e5}))}var t=h(0),y=h(1),Y=h(2),e=h(3),p=h(4),o=h(5),s=h(6),I=t.range,R=y.range,g=Y.range,K=e.range,N=p.range,H=o.range,x=s.range,J=d((function(l){l.setDate(1),l.setHours(0,0,0,0)}),(function(l,Z){l.setMonth(l.getMonth()+Z)}),(function(l,Z){return Z.getMonth()-l.getMonth()+12*(Z.getFullYear()-l.getFullYear())}),(function(l){return l.getMonth()})),L=J.range,F=d((function(l){l.setMonth(0,1),l.setHours(0,0,0,0)}),(function(l,Z){l.setFullYear(l.getFullYear()+Z)}),(function(l,Z){return Z.getFullYear()-l.getFullYear()}),(function(l){return l.getFullYear()}));F.every=function(l){return isFinite(l=Math.floor(l))&&l>0?d((function(Z){Z.setFullYear(Math.floor(Z.getFullYear()/l)*l),Z.setMonth(0,1),Z.setHours(0,0,0,0)}),(function(Z,b){Z.setFullYear(Z.getFullYear()+b*l)})):null};var C=F.range,S=d((function(l){l.setUTCSeconds(0,0)}),(function(l,Z){l.setTime(+l+6e4*Z)}),(function(l,Z){return(Z-l)/6e4}),(function(l){return l.getUTCMinutes()})),B=S.range,k=d((function(l){l.setUTCMinutes(0,0,0)}),(function(l,Z){l.setTime(+l+36e5*Z)}),(function(l,Z){return(Z-l)/36e5}),(function(l){return l.getUTCHours()})),v=k.range,z=d((function(l){l.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCDate(l.getUTCDate()+Z)}),(function(l,Z){return(Z-l)/864e5}),(function(l){return l.getUTCDate()-1})),M=z.range;function r(l){return d((function(Z){Z.setUTCDate(Z.getUTCDate()-(Z.getUTCDay()+7-l)%7),Z.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCDate(l.getUTCDate()+7*Z)}),(function(l,Z){return(Z-l)/6048e5}))}var T=r(0),j=r(1),w=r(2),U=r(3),f=r(4),Q=r(5),P=r(6),D=T.range,A=j.range,E=w.range,O=U.range,q=f.range,_=Q.range,$=P.range,ll=d((function(l){l.setUTCDate(1),l.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCMonth(l.getUTCMonth()+Z)}),(function(l,Z){return Z.getUTCMonth()-l.getUTCMonth()+12*(Z.getUTCFullYear()-l.getUTCFullYear())}),(function(l){return l.getUTCMonth()})),Zl=ll.range,bl=d((function(l){l.setUTCMonth(0,1),l.setUTCHours(0,0,0,0)}),(function(l,Z){l.setUTCFullYear(l.getUTCFullYear()+Z)}),(function(l,Z){return Z.getUTCFullYear()-l.getUTCFullYear()}),(function(l){return l.getUTCFullYear()}));bl.every=function(l){return isFinite(l=Math.floor(l))&&l>0?d((function(Z){Z.setUTCFullYear(Math.floor(Z.getUTCFullYear()/l)*l),Z.setUTCMonth(0,1),Z.setUTCHours(0,0,0,0)}),(function(Z,b){Z.setUTCFullYear(Z.getUTCFullYear()+b*l)})):null};var dl=bl.range;l.timeDay=a,l.timeDays=V,l.timeFriday=o,l.timeFridays=H,l.timeHour=n,l.timeHours=u,l.timeInterval=d,l.timeMillisecond=c,l.timeMilliseconds=m,l.timeMinute=i,l.timeMinutes=X,l.timeMonday=y,l.timeMondays=R,l.timeMonth=J,l.timeMonths=L,l.timeSaturday=s,l.timeSaturdays=x,l.timeSecond=G,l.timeSeconds=W,l.timeSunday=t,l.timeSundays=I,l.timeThursday=p,l.timeThursdays=N,l.timeTuesday=Y,l.timeTuesdays=g,l.timeWednesday=e,l.timeWednesdays=K,l.timeWeek=t,l.timeWeeks=I,l.timeYear=F,l.timeYears=C,l.utcDay=z,l.utcDays=M,l.utcFriday=Q,l.utcFridays=_,l.utcHour=k,l.utcHours=v,l.utcMillisecond=c,l.utcMilliseconds=m,l.utcMinute=S,l.utcMinutes=B,l.utcMonday=j,l.utcMondays=A,l.utcMonth=ll,l.utcMonths=Zl,l.utcSaturday=P,l.utcSaturdays=$,l.utcSecond=G,l.utcSeconds=W,l.utcSunday=T,l.utcSundays=D,l.utcThursday=f,l.utcThursdays=q,l.utcTuesday=w,l.utcTuesdays=E,l.utcWednesday=U,l.utcWednesdays=O,l.utcWeek=T,l.utcWeeks=D,l.utcYear=bl,l.utcYears=dl,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],56:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:(l=l||self).d3=l.d3||{})}(this,(function(l){"use strict";var Z,b,d=0,c=0,m=0,G=0,W=0,i=0,X="object"==typeof performance&&performance.now?performance:Date,n="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(l){setTimeout(l,17)};function u(){return W||(n(a),W=X.now()+i)}function a(){W=0}function V(){this._call=this._time=this._next=null}function h(l,Z,b){var d=new V;return d.restart(l,Z,b),d}function t(){u(),++d;for(var l,b=Z;b;)(l=W-b._time)>=0&&b._call.call(null,l),b=b._next;--d}function y(){W=(G=X.now())+i,d=c=0;try{t()}finally{d=0,function(){for(var l,d,c=Z,m=1/0;c;)c._call?(m>c._time&&(m=c._time),l=c,c=c._next):(d=c._next,c._next=null,c=l?l._next=d:Z=d);b=l,e(m)}(),W=0}}function Y(){var l=X.now(),Z=l-G;Z>1e3&&(i-=Z,G=l)}function e(l){d||(c&&(c=clearTimeout(c)),l-W>24?(l<1/0&&(c=setTimeout(y,l-X.now()-i)),m&&(m=clearInterval(m))):(m||(G=X.now(),m=setInterval(Y,1e3)),d=1,n(y)))}V.prototype=h.prototype={constructor:V,restart:function(l,d,c){if("function"!=typeof l)throw new TypeError("callback is not a function");c=(null==c?u():+c)+(null==d?0:+d),this._next||b===this||(b?b._next=this:Z=this,b=this),this._call=l,this._time=c,e()},stop:function(){this._call&&(this._call=null,this._time=1/0,e())}},l.interval=function(l,Z,b){var d=new V,c=Z;return null==Z?(d.restart(l,Z,b),d):(Z=+Z,b=null==b?u():+b,d.restart((function m(G){G+=c,d.restart(m,c+=Z,b),l(G)}),Z,b),d)},l.now=u,l.timeout=function(l,Z,b){var d=new V;return Z=null==Z?0:+Z,d.restart((function(b){d.stop(),l(b+Z)}),Z,b),d},l.timer=h,l.timerFlush=t,Object.defineProperty(l,"__esModule",{value:!0})}))},{}],57:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-selection"),l("d3-dispatch"),l("d3-timer"),l("d3-interpolate"),l("d3-color"),l("d3-ease")):c((d=d||self).d3=d.d3||{},d.d3,d.d3,d.d3,d.d3,d.d3,d.d3)}(this,(function(l,Z,b,d,c,m,G){"use strict";var W=b.dispatch("start","end","cancel","interrupt"),i=[];function X(l,Z,b,c,m,G){var X=l.__transition;if(X){if(b in X)return}else l.__transition={};!function(l,Z,b){var c,m=l.__transition;function G(X){var n,u,a,V;if(1!==b.state)return i();for(n in m)if((V=m[n]).name===b.name){if(3===V.state)return d.timeout(G);4===V.state?(V.state=6,V.timer.stop(),V.on.call("interrupt",l,l.__data__,V.index,V.group),delete m[n]):+n<Z&&(V.state=6,V.timer.stop(),V.on.call("cancel",l,l.__data__,V.index,V.group),delete m[n])}if(d.timeout((function(){3===b.state&&(b.state=4,b.timer.restart(W,b.delay,b.time),W(X))})),b.state=2,b.on.call("start",l,l.__data__,b.index,b.group),2===b.state){for(b.state=3,c=new Array(a=b.tween.length),n=0,u=-1;n<a;++n)(V=b.tween[n].value.call(l,l.__data__,b.index,b.group))&&(c[++u]=V);c.length=u+1}}function W(Z){for(var d=Z<b.duration?b.ease.call(null,Z/b.duration):(b.timer.restart(i),b.state=5,1),m=-1,G=c.length;++m<G;)c[m].call(l,d);5===b.state&&(b.on.call("end",l,l.__data__,b.index,b.group),i())}function i(){for(var d in b.state=6,b.timer.stop(),delete m[Z],m)return;delete l.__transition}m[Z]=b,b.timer=d.timer((function(l){b.state=1,b.timer.restart(G,b.delay,b.time),b.delay<=l&&G(l-b.delay)}),0,b.time)}(l,b,{name:Z,index:c,group:m,on:W,tween:i,time:G.time,delay:G.delay,duration:G.duration,ease:G.ease,timer:null,state:0})}function n(l,Z){var b=a(l,Z);if(b.state>0)throw new Error("too late; already scheduled");return b}function u(l,Z){var b=a(l,Z);if(b.state>3)throw new Error("too late; already running");return b}function a(l,Z){var b=l.__transition;if(!b||!(b=b[Z]))throw new Error("transition not found");return b}function V(l,Z){var b,d,c,m=l.__transition,G=!0;if(m){for(c in Z=null==Z?null:Z+"",m)(b=m[c]).name===Z?(d=b.state>2&&b.state<5,b.state=6,b.timer.stop(),b.on.call(d?"interrupt":"cancel",l,l.__data__,b.index,b.group),delete m[c]):G=!1;G&&delete l.__transition}}function h(l,Z){var b,d;return function(){var c=u(this,l),m=c.tween;if(m!==b)for(var G=0,W=(d=b=m).length;G<W;++G)if(d[G].name===Z){(d=d.slice()).splice(G,1);break}c.tween=d}}function t(l,Z,b){var d,c;if("function"!=typeof b)throw new Error;return function(){var m=u(this,l),G=m.tween;if(G!==d){c=(d=G).slice();for(var W={name:Z,value:b},i=0,X=c.length;i<X;++i)if(c[i].name===Z){c[i]=W;break}i===X&&c.push(W)}m.tween=c}}function y(l,Z,b){var d=l._id;return l.each((function(){var l=u(this,d);(l.value||(l.value={}))[Z]=b.apply(this,arguments)})),function(l){return a(l,d).value[Z]}}function Y(l,Z){var b;return("number"==typeof Z?c.interpolateNumber:Z instanceof m.color?c.interpolateRgb:(b=m.color(Z))?(Z=b,c.interpolateRgb):c.interpolateString)(l,Z)}function e(l){return function(){this.removeAttribute(l)}}function p(l){return function(){this.removeAttributeNS(l.space,l.local)}}function o(l,Z,b){var d,c,m=b+"";return function(){var G=this.getAttribute(l);return G===m?null:G===d?c:c=Z(d=G,b)}}function s(l,Z,b){var d,c,m=b+"";return function(){var G=this.getAttributeNS(l.space,l.local);return G===m?null:G===d?c:c=Z(d=G,b)}}function I(l,Z,b){var d,c,m;return function(){var G,W,i=b(this);if(null!=i)return(G=this.getAttribute(l))===(W=i+"")?null:G===d&&W===c?m:(c=W,m=Z(d=G,i));this.removeAttribute(l)}}function R(l,Z,b){var d,c,m;return function(){var G,W,i=b(this);if(null!=i)return(G=this.getAttributeNS(l.space,l.local))===(W=i+"")?null:G===d&&W===c?m:(c=W,m=Z(d=G,i));this.removeAttributeNS(l.space,l.local)}}function g(l,Z){return function(b){this.setAttribute(l,Z.call(this,b))}}function K(l,Z){return function(b){this.setAttributeNS(l.space,l.local,Z.call(this,b))}}function N(l,Z){var b,d;function c(){var c=Z.apply(this,arguments);return c!==d&&(b=(d=c)&&K(l,c)),b}return c._value=Z,c}function H(l,Z){var b,d;function c(){var c=Z.apply(this,arguments);return c!==d&&(b=(d=c)&&g(l,c)),b}return c._value=Z,c}function x(l,Z){return function(){n(this,l).delay=+Z.apply(this,arguments)}}function J(l,Z){return Z=+Z,function(){n(this,l).delay=Z}}function L(l,Z){return function(){u(this,l).duration=+Z.apply(this,arguments)}}function F(l,Z){return Z=+Z,function(){u(this,l).duration=Z}}function C(l,Z){if("function"!=typeof Z)throw new Error;return function(){u(this,l).ease=Z}}function S(l,Z,b){var d,c,m=function(l){return(l+"").trim().split(/^|\s+/).every((function(l){var Z=l.indexOf(".");return Z>=0&&(l=l.slice(0,Z)),!l||"start"===l}))}(Z)?n:u;return function(){var G=m(this,l),W=G.on;W!==d&&(c=(d=W).copy()).on(Z,b),G.on=c}}var B=Z.selection.prototype.constructor;function k(l){return function(){this.style.removeProperty(l)}}function v(l,Z,b){return function(d){this.style.setProperty(l,Z.call(this,d),b)}}function z(l,Z,b){var d,c;function m(){var m=Z.apply(this,arguments);return m!==c&&(d=(c=m)&&v(l,m,b)),d}return m._value=Z,m}function M(l){return function(Z){this.textContent=l.call(this,Z)}}function r(l){var Z,b;function d(){var d=l.apply(this,arguments);return d!==b&&(Z=(b=d)&&M(d)),Z}return d._value=l,d}var T=0;function j(l,Z,b,d){this._groups=l,this._parents=Z,this._name=b,this._id=d}function w(l){return Z.selection().transition(l)}function U(){return++T}var f=Z.selection.prototype;j.prototype=w.prototype={constructor:j,select:function(l){var b=this._name,d=this._id;"function"!=typeof l&&(l=Z.selector(l));for(var c=this._groups,m=c.length,G=new Array(m),W=0;W<m;++W)for(var i,n,u=c[W],V=u.length,h=G[W]=new Array(V),t=0;t<V;++t)(i=u[t])&&(n=l.call(i,i.__data__,t,u))&&("__data__"in i&&(n.__data__=i.__data__),h[t]=n,X(h[t],b,d,t,h,a(i,d)));return new j(G,this._parents,b,d)},selectAll:function(l){var b=this._name,d=this._id;"function"!=typeof l&&(l=Z.selectorAll(l));for(var c=this._groups,m=c.length,G=[],W=[],i=0;i<m;++i)for(var n,u=c[i],V=u.length,h=0;h<V;++h)if(n=u[h]){for(var t,y=l.call(n,n.__data__,h,u),Y=a(n,d),e=0,p=y.length;e<p;++e)(t=y[e])&&X(t,b,d,e,y,Y);G.push(y),W.push(n)}return new j(G,W,b,d)},filter:function(l){"function"!=typeof l&&(l=Z.matcher(l));for(var b=this._groups,d=b.length,c=new Array(d),m=0;m<d;++m)for(var G,W=b[m],i=W.length,X=c[m]=[],n=0;n<i;++n)(G=W[n])&&l.call(G,G.__data__,n,W)&&X.push(G);return new j(c,this._parents,this._name,this._id)},merge:function(l){if(l._id!==this._id)throw new Error;for(var Z=this._groups,b=l._groups,d=Z.length,c=b.length,m=Math.min(d,c),G=new Array(d),W=0;W<m;++W)for(var i,X=Z[W],n=b[W],u=X.length,a=G[W]=new Array(u),V=0;V<u;++V)(i=X[V]||n[V])&&(a[V]=i);for(;W<d;++W)G[W]=Z[W];return new j(G,this._parents,this._name,this._id)},selection:function(){return new B(this._groups,this._parents)},transition:function(){for(var l=this._name,Z=this._id,b=U(),d=this._groups,c=d.length,m=0;m<c;++m)for(var G,W=d[m],i=W.length,n=0;n<i;++n)if(G=W[n]){var u=a(G,Z);X(G,l,b,n,W,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new j(d,this._parents,l,b)},call:f.call,nodes:f.nodes,node:f.node,size:f.size,empty:f.empty,each:f.each,on:function(l,Z){var b=this._id;return arguments.length<2?a(this.node(),b).on.on(l):this.each(S(b,l,Z))},attr:function(l,b){var d=Z.namespace(l),m="transform"===d?c.interpolateTransformSvg:Y;return this.attrTween(l,"function"==typeof b?(d.local?R:I)(d,m,y(this,"attr."+l,b)):null==b?(d.local?p:e)(d):(d.local?s:o)(d,m,b))},attrTween:function(l,b){var d="attr."+l;if(arguments.length<2)return(d=this.tween(d))&&d._value;if(null==b)return this.tween(d,null);if("function"!=typeof b)throw new Error;var c=Z.namespace(l);return this.tween(d,(c.local?N:H)(c,b))},style:function(l,b,d){var m="transform"==(l+="")?c.interpolateTransformCss:Y;return null==b?this.styleTween(l,function(l,b){var d,c,m;return function(){var G=Z.style(this,l),W=(this.style.removeProperty(l),Z.style(this,l));return G===W?null:G===d&&W===c?m:m=b(d=G,c=W)}}(l,m)).on("end.style."+l,k(l)):"function"==typeof b?this.styleTween(l,function(l,b,d){var c,m,G;return function(){var W=Z.style(this,l),i=d(this),X=i+"";return null==i&&(this.style.removeProperty(l),X=i=Z.style(this,l)),W===X?null:W===c&&X===m?G:(m=X,G=b(c=W,i))}}(l,m,y(this,"style."+l,b))).each(function(l,Z){var b,d,c,m,G="style."+Z,W="end."+G;return function(){var i=u(this,l),X=i.on,n=null==i.value[G]?m||(m=k(Z)):void 0;X===b&&c===n||(d=(b=X).copy()).on(W,c=n),i.on=d}}(this._id,l)):this.styleTween(l,function(l,b,d){var c,m,G=d+"";return function(){var W=Z.style(this,l);return W===G?null:W===c?m:m=b(c=W,d)}}(l,m,b),d).on("end.style."+l,null)},styleTween:function(l,Z,b){var d="style."+(l+="");if(arguments.length<2)return(d=this.tween(d))&&d._value;if(null==Z)return this.tween(d,null);if("function"!=typeof Z)throw new Error;return this.tween(d,z(l,Z,null==b?"":b))},text:function(l){return this.tween("text","function"==typeof l?function(l){return function(){var Z=l(this);this.textContent=null==Z?"":Z}}(y(this,"text",l)):function(l){return function(){this.textContent=l}}(null==l?"":l+""))},textTween:function(l){var Z="text";if(arguments.length<1)return(Z=this.tween(Z))&&Z._value;if(null==l)return this.tween(Z,null);if("function"!=typeof l)throw new Error;return this.tween(Z,r(l))},remove:function(){return this.on("end.remove",function(l){return function(){var Z=this.parentNode;for(var b in this.__transition)if(+b!==l)return;Z&&Z.removeChild(this)}}(this._id))},tween:function(l,Z){var b=this._id;if(l+="",arguments.length<2){for(var d,c=a(this.node(),b).tween,m=0,G=c.length;m<G;++m)if((d=c[m]).name===l)return d.value;return null}return this.each((null==Z?h:t)(b,l,Z))},delay:function(l){var Z=this._id;return arguments.length?this.each(("function"==typeof l?x:J)(Z,l)):a(this.node(),Z).delay},duration:function(l){var Z=this._id;return arguments.length?this.each(("function"==typeof l?L:F)(Z,l)):a(this.node(),Z).duration},ease:function(l){var Z=this._id;return arguments.length?this.each(C(Z,l)):a(this.node(),Z).ease},end:function(){var l,Z,b=this,d=b._id,c=b.size();return new Promise((function(m,G){var W={value:G},i={value:function(){0==--c&&m()}};b.each((function(){var b=u(this,d),c=b.on;c!==l&&((Z=(l=c).copy())._.cancel.push(W),Z._.interrupt.push(W),Z._.end.push(i)),b.on=Z}))}))}};var Q={time:null,delay:0,duration:250,ease:G.easeCubicInOut};function P(l,Z){for(var b;!(b=l.__transition)||!(b=b[Z]);)if(!(l=l.parentNode))return Q.time=d.now(),Q;return b}Z.selection.prototype.interrupt=function(l){return this.each((function(){V(this,l)}))},Z.selection.prototype.transition=function(l){var Z,b;l instanceof j?(Z=l._id,l=l._name):(Z=U(),(b=Q).time=d.now(),l=null==l?null:l+"");for(var c=this._groups,m=c.length,G=0;G<m;++G)for(var W,i=c[G],n=i.length,u=0;u<n;++u)(W=i[u])&&X(W,l,Z,u,i,b||P(W,Z));return new j(c,this._parents,l,Z)};var D=[null];l.active=function(l,Z){var b,d,c=l.__transition;if(c)for(d in Z=null==Z?null:Z+"",c)if((b=c[d]).state>1&&b.name===Z)return new j([[l]],D,Z,+d);return null},l.interrupt=V,l.transition=w,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-color":34,"d3-dispatch":36,"d3-ease":39,"d3-interpolate":45,"d3-selection":52,"d3-timer":56}],58:[function(l,Z,b){!function(l,d){d("object"==typeof b&&void 0!==Z?b:l.d3=l.d3||{})}(this,(function(l){"use strict";function Z(l){return function(){return l}}function b(l){return l[0]}function d(l){return l[1]}function c(){this._=null}function m(l){l.U=l.C=l.L=l.R=l.P=l.N=null}function G(l,Z){var b=Z,d=Z.R,c=b.U;c?c.L===b?c.L=d:c.R=d:l._=d,d.U=c,b.U=d,b.R=d.L,b.R&&(b.R.U=b),d.L=b}function W(l,Z){var b=Z,d=Z.L,c=b.U;c?c.L===b?c.L=d:c.R=d:l._=d,d.U=c,b.U=d,b.L=d.R,b.L&&(b.L.U=b),d.R=b}function i(l){for(;l.L;)l=l.L;return l}function X(l,Z,b,d){var c=[null,null],m=S.push(c)-1;return c.left=l,c.right=Z,b&&u(c,l,Z,b),d&&u(c,Z,l,d),F[l.index].halfedges.push(m),F[Z.index].halfedges.push(m),c}function n(l,Z,b){var d=[Z,b];return d.left=l,d}function u(l,Z,b,d){l[0]||l[1]?l.left===b?l[1]=d:l[0]=d:(l[0]=d,l.left=Z,l.right=b)}function a(l,Z,b,d,c){var m,G=l[0],W=l[1],i=G[0],X=G[1],n=0,u=1,a=W[0]-i,V=W[1]-X;if(m=Z-i,a||!(m>0)){if(m/=a,a<0){if(m<n)return;m<u&&(u=m)}else if(a>0){if(m>u)return;m>n&&(n=m)}if(m=d-i,a||!(m<0)){if(m/=a,a<0){if(m>u)return;m>n&&(n=m)}else if(a>0){if(m<n)return;m<u&&(u=m)}if(m=b-X,V||!(m>0)){if(m/=V,V<0){if(m<n)return;m<u&&(u=m)}else if(V>0){if(m>u)return;m>n&&(n=m)}if(m=c-X,V||!(m<0)){if(m/=V,V<0){if(m>u)return;m>n&&(n=m)}else if(V>0){if(m<n)return;m<u&&(u=m)}return!(n>0||u<1)||(n>0&&(l[0]=[i+n*a,X+n*V]),u<1&&(l[1]=[i+u*a,X+u*V]),!0)}}}}}function V(l,Z,b,d,c){var m=l[1];if(m)return!0;var G,W,i=l[0],X=l.left,n=l.right,u=X[0],a=X[1],V=n[0],h=n[1],t=(u+V)/2,y=(a+h)/2;if(h===a){if(t<Z||t>=d)return;if(u>V){if(i){if(i[1]>=c)return}else i=[t,b];m=[t,c]}else{if(i){if(i[1]<b)return}else i=[t,c];m=[t,b]}}else if(W=y-(G=(u-V)/(h-a))*t,G<-1||G>1)if(u>V){if(i){if(i[1]>=c)return}else i=[(b-W)/G,b];m=[(c-W)/G,c]}else{if(i){if(i[1]<b)return}else i=[(c-W)/G,c];m=[(b-W)/G,b]}else if(a<h){if(i){if(i[0]>=d)return}else i=[Z,G*Z+W];m=[d,G*d+W]}else{if(i){if(i[0]<Z)return}else i=[d,G*d+W];m=[Z,G*Z+W]}return l[0]=i,l[1]=m,!0}function h(l,Z){var b=l.site,d=Z.left,c=Z.right;return b===c&&(c=d,d=b),c?Math.atan2(c[1]-d[1],c[0]-d[0]):(b===d?(d=Z[1],c=Z[0]):(d=Z[0],c=Z[1]),Math.atan2(d[0]-c[0],c[1]-d[1]))}function t(l,Z){return Z[+(Z.left!==l.site)]}function y(l,Z){return Z[+(Z.left===l.site)]}c.prototype={constructor:c,insert:function(l,Z){var b,d,c;if(l){if(Z.P=l,Z.N=l.N,l.N&&(l.N.P=Z),l.N=Z,l.R){for(l=l.R;l.L;)l=l.L;l.L=Z}else l.R=Z;b=l}else this._?(l=i(this._),Z.P=null,Z.N=l,l.P=l.L=Z,b=l):(Z.P=Z.N=null,this._=Z,b=null);for(Z.L=Z.R=null,Z.U=b,Z.C=!0,l=Z;b&&b.C;)b===(d=b.U).L?(c=d.R)&&c.C?(b.C=c.C=!1,d.C=!0,l=d):(l===b.R&&(G(this,b),b=(l=b).U),b.C=!1,d.C=!0,W(this,d)):(c=d.L)&&c.C?(b.C=c.C=!1,d.C=!0,l=d):(l===b.L&&(W(this,b),b=(l=b).U),b.C=!1,d.C=!0,G(this,d)),b=l.U;this._.C=!1},remove:function(l){l.N&&(l.N.P=l.P),l.P&&(l.P.N=l.N),l.N=l.P=null;var Z,b,d,c=l.U,m=l.L,X=l.R;if(b=m?X?i(X):m:X,c?c.L===l?c.L=b:c.R=b:this._=b,m&&X?(d=b.C,b.C=l.C,b.L=m,m.U=b,b!==X?(c=b.U,b.U=l.U,l=b.R,c.L=l,b.R=X,X.U=b):(b.U=c,c=b,l=b.R)):(d=l.C,l=b),l&&(l.U=c),!d)if(l&&l.C)l.C=!1;else{do{if(l===this._)break;if(l===c.L){if((Z=c.R).C&&(Z.C=!1,c.C=!0,G(this,c),Z=c.R),Z.L&&Z.L.C||Z.R&&Z.R.C){Z.R&&Z.R.C||(Z.L.C=!1,Z.C=!0,W(this,Z),Z=c.R),Z.C=c.C,c.C=Z.R.C=!1,G(this,c),l=this._;break}}else if((Z=c.L).C&&(Z.C=!1,c.C=!0,W(this,c),Z=c.L),Z.L&&Z.L.C||Z.R&&Z.R.C){Z.L&&Z.L.C||(Z.R.C=!1,Z.C=!0,G(this,Z),Z=c.L),Z.C=c.C,c.C=Z.L.C=!1,W(this,c),l=this._;break}Z.C=!0,l=c,c=c.U}while(!l.C);l&&(l.C=!1)}}};var Y,e=[];function p(){m(this),this.x=this.y=this.arc=this.site=this.cy=null}function o(l){var Z=l.P,b=l.N;if(Z&&b){var d=Z.site,c=l.site,m=b.site;if(d!==m){var G=c[0],W=c[1],i=d[0]-G,X=d[1]-W,n=m[0]-G,u=m[1]-W,a=2*(i*u-X*n);if(!(a>=-k)){var V=i*i+X*X,h=n*n+u*u,t=(u*V-X*h)/a,y=(i*h-n*V)/a,o=e.pop()||new p;o.arc=l,o.site=c,o.x=t+G,o.y=(o.cy=y+W)+Math.sqrt(t*t+y*y),l.circle=o;for(var s=null,I=C._;I;)if(o.y<I.y||o.y===I.y&&o.x<=I.x){if(!I.L){s=I.P;break}I=I.L}else{if(!I.R){s=I;break}I=I.R}C.insert(s,o),s||(Y=o)}}}}function s(l){var Z=l.circle;Z&&(Z.P||(Y=Z.N),C.remove(Z),e.push(Z),m(Z),l.circle=null)}var I=[];function R(){m(this),this.edge=this.site=this.circle=null}function g(l){var Z=I.pop()||new R;return Z.site=l,Z}function K(l){s(l),L.remove(l),I.push(l),m(l)}function N(l){var Z=l.circle,b=Z.x,d=Z.cy,c=[b,d],m=l.P,G=l.N,W=[l];K(l);for(var i=m;i.circle&&Math.abs(b-i.circle.x)<B&&Math.abs(d-i.circle.cy)<B;)m=i.P,W.unshift(i),K(i),i=m;W.unshift(i),s(i);for(var n=G;n.circle&&Math.abs(b-n.circle.x)<B&&Math.abs(d-n.circle.cy)<B;)G=n.N,W.push(n),K(n),n=G;W.push(n),s(n);var a,V=W.length;for(a=1;a<V;++a)n=W[a],i=W[a-1],u(n.edge,i.site,n.site,c);i=W[0],(n=W[V-1]).edge=X(i.site,n.site,null,c),o(i),o(n)}function H(l){for(var Z,b,d,c,m=l[0],G=l[1],W=L._;W;)if((d=x(W,G)-m)>B)W=W.L;else{if(!((c=m-J(W,G))>B)){d>-B?(Z=W.P,b=W):c>-B?(Z=W,b=W.N):Z=b=W;break}if(!W.R){Z=W;break}W=W.R}!function(l){F[l.index]={site:l,halfedges:[]}}(l);var i=g(l);if(L.insert(Z,i),Z||b){if(Z===b)return s(Z),b=g(Z.site),L.insert(i,b),i.edge=b.edge=X(Z.site,i.site),o(Z),void o(b);if(b){s(Z),s(b);var n=Z.site,a=n[0],V=n[1],h=l[0]-a,t=l[1]-V,y=b.site,Y=y[0]-a,e=y[1]-V,p=2*(h*e-t*Y),I=h*h+t*t,R=Y*Y+e*e,K=[(e*I-t*R)/p+a,(h*R-Y*I)/p+V];u(b.edge,n,y,K),i.edge=X(n,l,null,K),b.edge=X(l,y,null,K),o(Z),o(b)}else i.edge=X(Z.site,i.site)}}function x(l,Z){var b=l.site,d=b[0],c=b[1],m=c-Z;if(!m)return d;var G=l.P;if(!G)return-1/0;var W=(b=G.site)[0],i=b[1],X=i-Z;if(!X)return W;var n=W-d,u=1/m-1/X,a=n/X;return u?(-a+Math.sqrt(a*a-2*u*(n*n/(-2*X)-i+X/2+c-m/2)))/u+d:(d+W)/2}function J(l,Z){var b=l.N;if(b)return x(b,Z);var d=l.site;return d[1]===Z?d[0]:1/0}var L,F,C,S,B=1e-6,k=1e-12;function v(l,Z){return Z[1]-l[1]||Z[0]-l[0]}function z(l,Z){var b,d,m,G=l.sort(v).pop();for(S=[],F=new Array(l.length),L=new c,C=new c;;)if(m=Y,G&&(!m||G[1]<m.y||G[1]===m.y&&G[0]<m.x))G[0]===b&&G[1]===d||(H(G),b=G[0],d=G[1]),G=l.pop();else{if(!m)break;N(m.arc)}if(function(){for(var l,Z,b,d,c=0,m=F.length;c<m;++c)if((l=F[c])&&(d=(Z=l.halfedges).length)){var G=new Array(d),W=new Array(d);for(b=0;b<d;++b)G[b]=b,W[b]=h(l,S[Z[b]]);for(G.sort((function(l,Z){return W[Z]-W[l]})),b=0;b<d;++b)W[b]=Z[G[b]];for(b=0;b<d;++b)Z[b]=W[b]}}(),Z){var W=+Z[0][0],i=+Z[0][1],X=+Z[1][0],u=+Z[1][1];!function(l,Z,b,d){for(var c,m=S.length;m--;)V(c=S[m],l,Z,b,d)&&a(c,l,Z,b,d)&&(Math.abs(c[0][0]-c[1][0])>B||Math.abs(c[0][1]-c[1][1])>B)||delete S[m]}(W,i,X,u),function(l,Z,b,d){var c,m,G,W,i,X,u,a,V,h,Y,e,p=F.length,o=!0;for(c=0;c<p;++c)if(m=F[c]){for(G=m.site,W=(i=m.halfedges).length;W--;)S[i[W]]||i.splice(W,1);for(W=0,X=i.length;W<X;)Y=(h=y(m,S[i[W]]))[0],e=h[1],a=(u=t(m,S[i[++W%X]]))[0],V=u[1],(Math.abs(Y-a)>B||Math.abs(e-V)>B)&&(i.splice(W,0,S.push(n(G,h,Math.abs(Y-l)<B&&d-e>B?[l,Math.abs(a-l)<B?V:d]:Math.abs(e-d)<B&&b-Y>B?[Math.abs(V-d)<B?a:b,d]:Math.abs(Y-b)<B&&e-Z>B?[b,Math.abs(a-b)<B?V:Z]:Math.abs(e-Z)<B&&Y-l>B?[Math.abs(V-Z)<B?a:l,Z]:null))-1),++X);X&&(o=!1)}if(o){var s,I,R,g=1/0;for(c=0,o=null;c<p;++c)(m=F[c])&&(R=(s=(G=m.site)[0]-l)*s+(I=G[1]-Z)*I)<g&&(g=R,o=m);if(o){var K=[l,Z],N=[l,d],H=[b,d],x=[b,Z];o.halfedges.push(S.push(n(G=o.site,K,N))-1,S.push(n(G,N,H))-1,S.push(n(G,H,x))-1,S.push(n(G,x,K))-1)}}for(c=0;c<p;++c)(m=F[c])&&(m.halfedges.length||delete F[c])}(W,i,X,u)}this.edges=S,this.cells=F,L=C=S=F=null}z.prototype={constructor:z,polygons:function(){var l=this.edges;return this.cells.map((function(Z){var b=Z.halfedges.map((function(b){return t(Z,l[b])}));return b.data=Z.site.data,b}))},triangles:function(){var l=[],Z=this.edges;return this.cells.forEach((function(b,d){if(m=(c=b.halfedges).length)for(var c,m,G,W,i,X,n=b.site,u=-1,a=Z[c[m-1]],V=a.left===n?a.right:a.left;++u<m;)G=V,V=(a=Z[c[u]]).left===n?a.right:a.left,G&&V&&d<G.index&&d<V.index&&(i=G,X=V,((W=n)[0]-X[0])*(i[1]-W[1])-(W[0]-i[0])*(X[1]-W[1])<0)&&l.push([n.data,G.data,V.data])})),l},links:function(){return this.edges.filter((function(l){return l.right})).map((function(l){return{source:l.left.data,target:l.right.data}}))},find:function(l,Z,b){for(var d,c,m=this,G=m._found||0,W=m.cells.length;!(c=m.cells[G]);)if(++G>=W)return null;var i=l-c.site[0],X=Z-c.site[1],n=i*i+X*X;do{c=m.cells[d=G],G=null,c.halfedges.forEach((function(b){var d=m.edges[b],W=d.left;if(W!==c.site&&W||(W=d.right)){var i=l-W[0],X=Z-W[1],u=i*i+X*X;u<n&&(n=u,G=W.index)}}))}while(null!==G);return m._found=d,null==b||n<=b*b?c.site:null}},l.voronoi=function(){var l=b,c=d,m=null;function G(Z){return new z(Z.map((function(b,d){var m=[Math.round(l(b,d,Z)/B)*B,Math.round(c(b,d,Z)/B)*B];return m.index=d,m.data=b,m})),m)}return G.polygons=function(l){return G(l).polygons()},G.links=function(l){return G(l).links()},G.triangles=function(l){return G(l).triangles()},G.x=function(b){return arguments.length?(l="function"==typeof b?b:Z(+b),G):l},G.y=function(l){return arguments.length?(c="function"==typeof l?l:Z(+l),G):c},G.extent=function(l){return arguments.length?(m=null==l?null:[[+l[0][0],+l[0][1]],[+l[1][0],+l[1][1]]],G):m&&[[m[0][0],m[0][1]],[m[1][0],m[1][1]]]},G.size=function(l){return arguments.length?(m=null==l?null:[[0,0],[+l[0],+l[1]]],G):m&&[m[1][0]-m[0][0],m[1][1]-m[0][1]]},G},Object.defineProperty(l,"__esModule",{value:!0})}))},{}],59:[function(l,Z,b){!function(d,c){"object"==typeof b&&void 0!==Z?c(b,l("d3-dispatch"),l("d3-drag"),l("d3-interpolate"),l("d3-selection"),l("d3-transition")):c((d=d||self).d3=d.d3||{},d.d3,d.d3,d.d3,d.d3,d.d3)}(this,(function(l,Z,b,d,c,m){"use strict";function G(l){return function(){return l}}function W(l,Z,b){this.target=l,this.type=Z,this.transform=b}function i(l,Z,b){this.k=l,this.x=Z,this.y=b}i.prototype={constructor:i,scale:function(l){return 1===l?this:new i(this.k*l,this.x,this.y)},translate:function(l,Z){return 0===l&0===Z?this:new i(this.k,this.x+this.k*l,this.y+this.k*Z)},apply:function(l){return[l[0]*this.k+this.x,l[1]*this.k+this.y]},applyX:function(l){return l*this.k+this.x},applyY:function(l){return l*this.k+this.y},invert:function(l){return[(l[0]-this.x)/this.k,(l[1]-this.y)/this.k]},invertX:function(l){return(l-this.x)/this.k},invertY:function(l){return(l-this.y)/this.k},rescaleX:function(l){return l.copy().domain(l.range().map(this.invertX,this).map(l.invert,l))},rescaleY:function(l){return l.copy().domain(l.range().map(this.invertY,this).map(l.invert,l))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var X=new i(1,0,0);function n(l){for(;!l.__zoom;)if(!(l=l.parentNode))return X;return l.__zoom}function u(){c.event.stopImmediatePropagation()}function a(){c.event.preventDefault(),c.event.stopImmediatePropagation()}function V(){return!c.event.ctrlKey&&!c.event.button}function h(){var l=this;return l instanceof SVGElement?(l=l.ownerSVGElement||l).hasAttribute("viewBox")?[[(l=l.viewBox.baseVal).x,l.y],[l.x+l.width,l.y+l.height]]:[[0,0],[l.width.baseVal.value,l.height.baseVal.value]]:[[0,0],[l.clientWidth,l.clientHeight]]}function t(){return this.__zoom||X}function y(){return-c.event.deltaY*(1===c.event.deltaMode?.05:c.event.deltaMode?1:.002)}function Y(){return navigator.maxTouchPoints||"ontouchstart"in this}function e(l,Z,b){var d=l.invertX(Z[0][0])-b[0][0],c=l.invertX(Z[1][0])-b[1][0],m=l.invertY(Z[0][1])-b[0][1],G=l.invertY(Z[1][1])-b[1][1];return l.translate(c>d?(d+c)/2:Math.min(0,d)||Math.max(0,c),G>m?(m+G)/2:Math.min(0,m)||Math.max(0,G))}n.prototype=i.prototype,l.zoom=function(){var l,n,p=V,o=h,s=e,I=y,R=Y,g=[0,1/0],K=[[-1/0,-1/0],[1/0,1/0]],N=250,H=d.interpolateZoom,x=Z.dispatch("start","zoom","end"),J=0;function L(l){l.property("__zoom",t).on("wheel.zoom",z).on("mousedown.zoom",M).on("dblclick.zoom",r).filter(R).on("touchstart.zoom",T).on("touchmove.zoom",j).on("touchend.zoom touchcancel.zoom",w).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function F(l,Z){return(Z=Math.max(g[0],Math.min(g[1],Z)))===l.k?l:new i(Z,l.x,l.y)}function C(l,Z,b){var d=Z[0]-b[0]*l.k,c=Z[1]-b[1]*l.k;return d===l.x&&c===l.y?l:new i(l.k,d,c)}function S(l){return[(+l[0][0]+ +l[1][0])/2,(+l[0][1]+ +l[1][1])/2]}function B(l,Z,b){l.on("start.zoom",(function(){k(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){k(this,arguments).end()})).tween("zoom",(function(){var l=this,d=arguments,c=k(l,d),m=o.apply(l,d),G=null==b?S(m):"function"==typeof b?b.apply(l,d):b,W=Math.max(m[1][0]-m[0][0],m[1][1]-m[0][1]),X=l.__zoom,n="function"==typeof Z?Z.apply(l,d):Z,u=H(X.invert(G).concat(W/X.k),n.invert(G).concat(W/n.k));return function(l){if(1===l)l=n;else{var Z=u(l),b=W/Z[2];l=new i(b,G[0]-Z[0]*b,G[1]-Z[1]*b)}c.zoom(null,l)}}))}function k(l,Z,b){return!b&&l.__zooming||new v(l,Z)}function v(l,Z){this.that=l,this.args=Z,this.active=0,this.extent=o.apply(l,Z),this.taps=0}function z(){if(p.apply(this,arguments)){var l=k(this,arguments),Z=this.__zoom,b=Math.max(g[0],Math.min(g[1],Z.k*Math.pow(2,I.apply(this,arguments)))),d=c.mouse(this);if(l.wheel)l.mouse[0][0]===d[0]&&l.mouse[0][1]===d[1]||(l.mouse[1]=Z.invert(l.mouse[0]=d)),clearTimeout(l.wheel);else{if(Z.k===b)return;l.mouse=[d,Z.invert(d)],m.interrupt(this),l.start()}a(),l.wheel=setTimeout(G,150),l.zoom("mouse",s(C(F(Z,b),l.mouse[0],l.mouse[1]),l.extent,K))}function G(){l.wheel=null,l.end()}}function M(){if(!n&&p.apply(this,arguments)){var l=k(this,arguments,!0),Z=c.select(c.event.view).on("mousemove.zoom",i,!0).on("mouseup.zoom",X,!0),d=c.mouse(this),G=c.event.clientX,W=c.event.clientY;b.dragDisable(c.event.view),u(),l.mouse=[d,this.__zoom.invert(d)],m.interrupt(this),l.start()}function i(){if(a(),!l.moved){var Z=c.event.clientX-G,b=c.event.clientY-W;l.moved=Z*Z+b*b>J}l.zoom("mouse",s(C(l.that.__zoom,l.mouse[0]=c.mouse(l.that),l.mouse[1]),l.extent,K))}function X(){Z.on("mousemove.zoom mouseup.zoom",null),b.dragEnable(c.event.view,l.moved),a(),l.end()}}function r(){if(p.apply(this,arguments)){var l=this.__zoom,Z=c.mouse(this),b=l.invert(Z),d=l.k*(c.event.shiftKey?.5:2),m=s(C(F(l,d),Z,b),o.apply(this,arguments),K);a(),N>0?c.select(this).transition().duration(N).call(B,m,Z):c.select(this).call(L.transform,m)}}function T(){if(p.apply(this,arguments)){var Z,b,d,G,W=c.event.touches,i=W.length,X=k(this,arguments,c.event.changedTouches.length===i);for(u(),b=0;b<i;++b)d=W[b],G=[G=c.touch(this,W,d.identifier),this.__zoom.invert(G),d.identifier],X.touch0?X.touch1||X.touch0[2]===G[2]||(X.touch1=G,X.taps=0):(X.touch0=G,Z=!0,X.taps=1+!!l);l&&(l=clearTimeout(l)),Z&&(X.taps<2&&(l=setTimeout((function(){l=null}),500)),m.interrupt(this),X.start())}}function j(){if(this.__zooming){var Z,b,d,m,G=k(this,arguments),W=c.event.changedTouches,i=W.length;for(a(),l&&(l=clearTimeout(l)),G.taps=0,Z=0;Z<i;++Z)b=W[Z],d=c.touch(this,W,b.identifier),G.touch0&&G.touch0[2]===b.identifier?G.touch0[0]=d:G.touch1&&G.touch1[2]===b.identifier&&(G.touch1[0]=d);if(b=G.that.__zoom,G.touch1){var X=G.touch0[0],n=G.touch0[1],u=G.touch1[0],V=G.touch1[1],h=(h=u[0]-X[0])*h+(h=u[1]-X[1])*h,t=(t=V[0]-n[0])*t+(t=V[1]-n[1])*t;b=F(b,Math.sqrt(h/t)),d=[(X[0]+u[0])/2,(X[1]+u[1])/2],m=[(n[0]+V[0])/2,(n[1]+V[1])/2]}else{if(!G.touch0)return;d=G.touch0[0],m=G.touch0[1]}G.zoom("touch",s(C(b,d,m),G.extent,K))}}function w(){if(this.__zooming){var l,Z,b=k(this,arguments),d=c.event.changedTouches,m=d.length;for(u(),n&&clearTimeout(n),n=setTimeout((function(){n=null}),500),l=0;l<m;++l)Z=d[l],b.touch0&&b.touch0[2]===Z.identifier?delete b.touch0:b.touch1&&b.touch1[2]===Z.identifier&&delete b.touch1;if(b.touch1&&!b.touch0&&(b.touch0=b.touch1,delete b.touch1),b.touch0)b.touch0[1]=this.__zoom.invert(b.touch0[0]);else if(b.end(),2===b.taps){var G=c.select(this).on("dblclick.zoom");G&&G.apply(this,arguments)}}}return L.transform=function(l,Z,b){var d=l.selection?l.selection():l;d.property("__zoom",t),l!==d?B(l,Z,b):d.interrupt().each((function(){k(this,arguments).start().zoom(null,"function"==typeof Z?Z.apply(this,arguments):Z).end()}))},L.scaleBy=function(l,Z,b){L.scaleTo(l,(function(){var l=this.__zoom.k,b="function"==typeof Z?Z.apply(this,arguments):Z;return l*b}),b)},L.scaleTo=function(l,Z,b){L.transform(l,(function(){var l=o.apply(this,arguments),d=this.__zoom,c=null==b?S(l):"function"==typeof b?b.apply(this,arguments):b,m=d.invert(c),G="function"==typeof Z?Z.apply(this,arguments):Z;return s(C(F(d,G),c,m),l,K)}),b)},L.translateBy=function(l,Z,b){L.transform(l,(function(){return s(this.__zoom.translate("function"==typeof Z?Z.apply(this,arguments):Z,"function"==typeof b?b.apply(this,arguments):b),o.apply(this,arguments),K)}))},L.translateTo=function(l,Z,b,d){L.transform(l,(function(){var l=o.apply(this,arguments),c=this.__zoom,m=null==d?S(l):"function"==typeof d?d.apply(this,arguments):d;return s(X.translate(m[0],m[1]).scale(c.k).translate("function"==typeof Z?-Z.apply(this,arguments):-Z,"function"==typeof b?-b.apply(this,arguments):-b),l,K)}),d)},v.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(l,Z){return this.mouse&&"mouse"!==l&&(this.mouse[1]=Z.invert(this.mouse[0])),this.touch0&&"touch"!==l&&(this.touch0[1]=Z.invert(this.touch0[0])),this.touch1&&"touch"!==l&&(this.touch1[1]=Z.invert(this.touch1[0])),this.that.__zoom=Z,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(l){c.customEvent(new W(L,l,this.that.__zoom),x.apply,x,[l,this.that,this.args])}},L.wheelDelta=function(l){return arguments.length?(I="function"==typeof l?l:G(+l),L):I},L.filter=function(l){return arguments.length?(p="function"==typeof l?l:G(!!l),L):p},L.touchable=function(l){return arguments.length?(R="function"==typeof l?l:G(!!l),L):R},L.extent=function(l){return arguments.length?(o="function"==typeof l?l:G([[+l[0][0],+l[0][1]],[+l[1][0],+l[1][1]]]),L):o},L.scaleExtent=function(l){return arguments.length?(g[0]=+l[0],g[1]=+l[1],L):[g[0],g[1]]},L.translateExtent=function(l){return arguments.length?(K[0][0]=+l[0][0],K[1][0]=+l[1][0],K[0][1]=+l[0][1],K[1][1]=+l[1][1],L):[[K[0][0],K[0][1]],[K[1][0],K[1][1]]]},L.constrain=function(l){return arguments.length?(s=l,L):s},L.duration=function(l){return arguments.length?(N=+l,L):N},L.interpolate=function(l){return arguments.length?(H=l,L):H},L.on=function(){var l=x.on.apply(x,arguments);return l===x?L:l},L.clickDistance=function(l){return arguments.length?(J=(l=+l)*l,L):Math.sqrt(J)},L},l.zoomIdentity=X,l.zoomTransform=n,Object.defineProperty(l,"__esModule",{value:!0})}))},{"d3-dispatch":36,"d3-drag":37,"d3-interpolate":45,"d3-selection":52,"d3-transition":57}],60:[function(l,Z,b){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var d=l("d3-array"),c=l("d3-axis"),m=l("d3-brush"),G=l("d3-chord"),W=l("d3-collection"),i=l("d3-color"),X=l("d3-contour"),n=l("d3-dispatch"),u=l("d3-drag"),a=l("d3-dsv"),V=l("d3-ease"),h=l("d3-fetch"),t=l("d3-force"),y=l("d3-format"),Y=l("d3-geo"),e=l("d3-hierarchy"),p=l("d3-interpolate"),o=l("d3-path"),s=l("d3-polygon"),I=l("d3-quadtree"),R=l("d3-random"),g=l("d3-scale"),K=l("d3-scale-chromatic"),N=l("d3-selection"),H=l("d3-shape"),x=l("d3-time"),J=l("d3-time-format"),L=l("d3-timer"),F=l("d3-transition"),C=l("d3-voronoi"),S=l("d3-zoom");Object.keys(d).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return d[l]}})})),Object.keys(c).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return c[l]}})})),Object.keys(m).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return m[l]}})})),Object.keys(G).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return G[l]}})})),Object.keys(W).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return W[l]}})})),Object.keys(i).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return i[l]}})})),Object.keys(X).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return X[l]}})})),Object.keys(n).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return n[l]}})})),Object.keys(u).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return u[l]}})})),Object.keys(a).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return a[l]}})})),Object.keys(V).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return V[l]}})})),Object.keys(h).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return h[l]}})})),Object.keys(t).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return t[l]}})})),Object.keys(y).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return y[l]}})})),Object.keys(Y).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return Y[l]}})})),Object.keys(e).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return e[l]}})})),Object.keys(p).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return p[l]}})})),Object.keys(o).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return o[l]}})})),Object.keys(s).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return s[l]}})})),Object.keys(I).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return I[l]}})})),Object.keys(R).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return R[l]}})})),Object.keys(g).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return g[l]}})})),Object.keys(K).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return K[l]}})})),Object.keys(N).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return N[l]}})})),Object.keys(H).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return H[l]}})})),Object.keys(x).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return x[l]}})})),Object.keys(J).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return J[l]}})})),Object.keys(L).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return L[l]}})})),Object.keys(F).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return F[l]}})})),Object.keys(C).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return C[l]}})})),Object.keys(S).forEach((function(l){"default"!==l&&Object.defineProperty(b,l,{enumerable:!0,get:function(){return S[l]}})})),b.version="5.14.2"},{"d3-array":29,"d3-axis":30,"d3-brush":31,"d3-chord":32,"d3-collection":33,"d3-color":34,"d3-contour":35,"d3-dispatch":36,"d3-drag":37,"d3-dsv":38,"d3-ease":39,"d3-fetch":40,"d3-force":41,"d3-format":42,"d3-geo":43,"d3-hierarchy":44,"d3-interpolate":45,"d3-path":46,"d3-polygon":47,"d3-quadtree":48,"d3-random":49,"d3-scale":51,"d3-scale-chromatic":50,"d3-selection":52,"d3-shape":53,"d3-time":55,"d3-time-format":54,"d3-timer":56,"d3-transition":57,"d3-voronoi":58,"d3-zoom":59}],61:[function(l,Z,b){Z.exports={graphlib:l("./lib/graphlib"),layout:l("./lib/layout"),debug:l("./lib/debug"),util:{time:l("./lib/util").time,notime:l("./lib/util").notime},version:l("./lib/version")}},{"./lib/debug":66,"./lib/graphlib":67,"./lib/layout":69,"./lib/util":89,"./lib/version":90}],62:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./greedy-fas");Z.exports={run:function(l){var Z="greedy"===l.graph().acyclicer?c(l,function(l){return function(Z){return l.edge(Z).weight}}(l)):function(l){var Z=[],b={},c={};return d.forEach(l.nodes(),(function m(G){d.has(c,G)||(c[G]=!0,b[G]=!0,d.forEach(l.outEdges(G),(function(l){d.has(b,l.w)?Z.push(l):m(l.w)})),delete b[G])})),Z}(l);d.forEach(Z,(function(Z){var b=l.edge(Z);l.removeEdge(Z),b.forwardName=Z.name,b.reversed=!0,l.setEdge(Z.w,Z.v,b,d.uniqueId("rev"))}))},undo:function(l){d.forEach(l.edges(),(function(Z){var b=l.edge(Z);if(b.reversed){l.removeEdge(Z);var d=b.forwardName;delete b.reversed,delete b.forwardName,l.setEdge(Z.w,Z.v,b,d)}}))}}},{"./greedy-fas":68,"./lodash":70}],63:[function(l,Z,b){var d=l("./lodash"),c=l("./util");function m(l,Z,b,d,m,G){var W={width:0,height:0,rank:G,borderType:Z},i=m[Z][G-1],X=c.addDummyNode(l,"border",W,b);m[Z][G]=X,l.setParent(X,d),i&&l.setEdge(i,X,{weight:1})}Z.exports=function(l){d.forEach(l.children(),(function Z(b){var c=l.children(b),G=l.node(b);if(c.length&&d.forEach(c,Z),d.has(G,"minRank")){G.borderLeft=[],G.borderRight=[];for(var W=G.minRank,i=G.maxRank+1;W<i;++W)m(l,"borderLeft","_bl",b,G,W),m(l,"borderRight","_br",b,G,W)}}))}},{"./lodash":70,"./util":89}],64:[function(l,Z,b){"use strict";var d=l("./lodash");function c(l){d.forEach(l.nodes(),(function(Z){m(l.node(Z))})),d.forEach(l.edges(),(function(Z){m(l.edge(Z))}))}function m(l){var Z=l.width;l.width=l.height,l.height=Z}function G(l){l.y=-l.y}function W(l){var Z=l.x;l.x=l.y,l.y=Z}Z.exports={adjust:function(l){var Z=l.graph().rankdir.toLowerCase();"lr"!==Z&&"rl"!==Z||c(l)},undo:function(l){var Z=l.graph().rankdir.toLowerCase();"bt"!==Z&&"rl"!==Z||function(l){d.forEach(l.nodes(),(function(Z){G(l.node(Z))})),d.forEach(l.edges(),(function(Z){var b=l.edge(Z);d.forEach(b.points,G),d.has(b,"y")&&G(b)}))}(l),"lr"!==Z&&"rl"!==Z||(function(l){d.forEach(l.nodes(),(function(Z){W(l.node(Z))})),d.forEach(l.edges(),(function(Z){var b=l.edge(Z);d.forEach(b.points,W),d.has(b,"x")&&W(b)}))}(l),c(l))}}},{"./lodash":70}],65:[function(l,Z,b){function d(){var l={};l._next=l._prev=l,this._sentinel=l}function c(l){l._prev._next=l._next,l._next._prev=l._prev,delete l._next,delete l._prev}function m(l,Z){if("_next"!==l&&"_prev"!==l)return Z}Z.exports=d,d.prototype.dequeue=function(){var l=this._sentinel,Z=l._prev;if(Z!==l)return c(Z),Z},d.prototype.enqueue=function(l){var Z=this._sentinel;l._prev&&l._next&&c(l),l._next=Z._next,Z._next._prev=l,Z._next=l,l._prev=Z},d.prototype.toString=function(){for(var l=[],Z=this._sentinel,b=Z._prev;b!==Z;)l.push(JSON.stringify(b,m)),b=b._prev;return"["+l.join(", ")+"]"}},{}],66:[function(l,Z,b){var d=l("./lodash"),c=l("./util"),m=l("./graphlib").Graph;Z.exports={debugOrdering:function(l){var Z=c.buildLayerMatrix(l),b=new m({compound:!0,multigraph:!0}).setGraph({});return d.forEach(l.nodes(),(function(Z){b.setNode(Z,{label:Z}),b.setParent(Z,"layer"+l.node(Z).rank)})),d.forEach(l.edges(),(function(l){b.setEdge(l.v,l.w,{},l.name)})),d.forEach(Z,(function(l,Z){var c="layer"+Z;b.setNode(c,{rank:"same"}),d.reduce(l,(function(l,Z){return b.setEdge(l,Z,{style:"invis"}),Z}))})),b}}},{"./graphlib":67,"./lodash":70,"./util":89}],67:[function(l,Z,b){var d;if("function"==typeof l)try{d=l("graphlib")}catch(l){}d||(d=window.graphlib),Z.exports=d},{graphlib:91}],68:[function(l,Z,b){var d=l("./lodash"),c=l("./graphlib").Graph,m=l("./data/list");Z.exports=function(l,Z){if(l.nodeCount()<=1)return[];var b=function(l,Z){var b=new c,G=0,W=0;d.forEach(l.nodes(),(function(l){b.setNode(l,{v:l,in:0,out:0})})),d.forEach(l.edges(),(function(l){var d=b.edge(l.v,l.w)||0,c=Z(l),m=d+c;b.setEdge(l.v,l.w,m),W=Math.max(W,b.node(l.v).out+=c),G=Math.max(G,b.node(l.w).in+=c)}));var X=d.range(W+G+3).map((function(){return new m})),n=G+1;return d.forEach(b.nodes(),(function(l){i(X,n,b.node(l))})),{graph:b,buckets:X,zeroIdx:n}}(l,Z||G),X=function(l,Z,b){for(var d,c=[],m=Z[Z.length-1],G=Z[0];l.nodeCount();){for(;d=G.dequeue();)W(l,Z,b,d);for(;d=m.dequeue();)W(l,Z,b,d);if(l.nodeCount())for(var i=Z.length-2;i>0;--i)if(d=Z[i].dequeue()){c=c.concat(W(l,Z,b,d,!0));break}}return c}(b.graph,b.buckets,b.zeroIdx);return d.flatten(d.map(X,(function(Z){return l.outEdges(Z.v,Z.w)})),!0)};var G=d.constant(1);function W(l,Z,b,c,m){var G=m?[]:void 0;return d.forEach(l.inEdges(c.v),(function(d){var c=l.edge(d),W=l.node(d.v);m&&G.push({v:d.v,w:d.w}),W.out-=c,i(Z,b,W)})),d.forEach(l.outEdges(c.v),(function(d){var c=l.edge(d),m=d.w,G=l.node(m);G.in-=c,i(Z,b,G)})),l.removeNode(c.v),G}function i(l,Z,b){b.out?b.in?l[b.out-b.in+Z].enqueue(b):l[l.length-1].enqueue(b):l[0].enqueue(b)}},{"./data/list":65,"./graphlib":67,"./lodash":70}],69:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./acyclic"),m=l("./normalize"),G=l("./rank"),W=l("./util").normalizeRanks,i=l("./parent-dummy-chains"),X=l("./util").removeEmptyRanks,n=l("./nesting-graph"),u=l("./add-border-segments"),a=l("./coordinate-system"),V=l("./order"),h=l("./position"),t=l("./util"),y=l("./graphlib").Graph;Z.exports=function(l,Z){var b=Z&&Z.debugTiming?t.time:t.notime;b("layout",(function(){var Z=b("  buildLayoutGraph",(function(){return function(l){var Z=new y({multigraph:!0,compound:!0}),b=N(l.graph());return Z.setGraph(d.merge({},e,K(b,Y),d.pick(b,p))),d.forEach(l.nodes(),(function(b){var c=N(l.node(b));Z.setNode(b,d.defaults(K(c,o),s)),Z.setParent(b,l.parent(b))})),d.forEach(l.edges(),(function(b){var c=N(l.edge(b));Z.setEdge(b,d.merge({},R,K(c,I),d.pick(c,g)))})),Z}(l)}));b("  runLayout",(function(){!function(l,Z){Z("    makeSpaceForEdgeLabels",(function(){!function(l){var Z=l.graph();Z.ranksep/=2,d.forEach(l.edges(),(function(b){var d=l.edge(b);d.minlen*=2,"c"!==d.labelpos.toLowerCase()&&("TB"===Z.rankdir||"BT"===Z.rankdir?d.width+=d.labeloffset:d.height+=d.labeloffset)}))}(l)})),Z("    removeSelfEdges",(function(){!function(l){d.forEach(l.edges(),(function(Z){if(Z.v===Z.w){var b=l.node(Z.v);b.selfEdges||(b.selfEdges=[]),b.selfEdges.push({e:Z,label:l.edge(Z)}),l.removeEdge(Z)}}))}(l)})),Z("    acyclic",(function(){c.run(l)})),Z("    nestingGraph.run",(function(){n.run(l)})),Z("    rank",(function(){G(t.asNonCompoundGraph(l))})),Z("    injectEdgeLabelProxies",(function(){!function(l){d.forEach(l.edges(),(function(Z){var b=l.edge(Z);if(b.width&&b.height){var d=l.node(Z.v),c={rank:(l.node(Z.w).rank-d.rank)/2+d.rank,e:Z};t.addDummyNode(l,"edge-proxy",c,"_ep")}}))}(l)})),Z("    removeEmptyRanks",(function(){X(l)})),Z("    nestingGraph.cleanup",(function(){n.cleanup(l)})),Z("    normalizeRanks",(function(){W(l)})),Z("    assignRankMinMax",(function(){!function(l){var Z=0;d.forEach(l.nodes(),(function(b){var c=l.node(b);c.borderTop&&(c.minRank=l.node(c.borderTop).rank,c.maxRank=l.node(c.borderBottom).rank,Z=d.max(Z,c.maxRank))})),l.graph().maxRank=Z}(l)})),Z("    removeEdgeLabelProxies",(function(){!function(l){d.forEach(l.nodes(),(function(Z){var b=l.node(Z);"edge-proxy"===b.dummy&&(l.edge(b.e).labelRank=b.rank,l.removeNode(Z))}))}(l)})),Z("    normalize.run",(function(){m.run(l)})),Z("    parentDummyChains",(function(){i(l)})),Z("    addBorderSegments",(function(){u(l)})),Z("    order",(function(){V(l)})),Z("    insertSelfEdges",(function(){!function(l){var Z=t.buildLayerMatrix(l);d.forEach(Z,(function(Z){var b=0;d.forEach(Z,(function(Z,c){var m=l.node(Z);m.order=c+b,d.forEach(m.selfEdges,(function(Z){t.addDummyNode(l,"selfedge",{width:Z.label.width,height:Z.label.height,rank:m.rank,order:c+ ++b,e:Z.e,label:Z.label},"_se")})),delete m.selfEdges}))}))}(l)})),Z("    adjustCoordinateSystem",(function(){a.adjust(l)})),Z("    position",(function(){h(l)})),Z("    positionSelfEdges",(function(){!function(l){d.forEach(l.nodes(),(function(Z){var b=l.node(Z);if("selfedge"===b.dummy){var d=l.node(b.e.v),c=d.x+d.width/2,m=d.y,G=b.x-c,W=d.height/2;l.setEdge(b.e,b.label),l.removeNode(Z),b.label.points=[{x:c+2*G/3,y:m-W},{x:c+5*G/6,y:m-W},{x:c+G,y:m},{x:c+5*G/6,y:m+W},{x:c+2*G/3,y:m+W}],b.label.x=b.x,b.label.y=b.y}}))}(l)})),Z("    removeBorderNodes",(function(){!function(l){d.forEach(l.nodes(),(function(Z){if(l.children(Z).length){var b=l.node(Z),c=l.node(b.borderTop),m=l.node(b.borderBottom),G=l.node(d.last(b.borderLeft)),W=l.node(d.last(b.borderRight));b.width=Math.abs(W.x-G.x),b.height=Math.abs(m.y-c.y),b.x=G.x+b.width/2,b.y=c.y+b.height/2}})),d.forEach(l.nodes(),(function(Z){"border"===l.node(Z).dummy&&l.removeNode(Z)}))}(l)})),Z("    normalize.undo",(function(){m.undo(l)})),Z("    fixupEdgeLabelCoords",(function(){!function(l){d.forEach(l.edges(),(function(Z){var b=l.edge(Z);if(d.has(b,"x"))switch("l"!==b.labelpos&&"r"!==b.labelpos||(b.width-=b.labeloffset),b.labelpos){case"l":b.x-=b.width/2+b.labeloffset;break;case"r":b.x+=b.width/2+b.labeloffset}}))}(l)})),Z("    undoCoordinateSystem",(function(){a.undo(l)})),Z("    translateGraph",(function(){!function(l){var Z=Number.POSITIVE_INFINITY,b=0,c=Number.POSITIVE_INFINITY,m=0,G=l.graph(),W=G.marginx||0,i=G.marginy||0;function X(l){var d=l.x,G=l.y,W=l.width,i=l.height;Z=Math.min(Z,d-W/2),b=Math.max(b,d+W/2),c=Math.min(c,G-i/2),m=Math.max(m,G+i/2)}d.forEach(l.nodes(),(function(Z){X(l.node(Z))})),d.forEach(l.edges(),(function(Z){var b=l.edge(Z);d.has(b,"x")&&X(b)})),Z-=W,c-=i,d.forEach(l.nodes(),(function(b){var d=l.node(b);d.x-=Z,d.y-=c})),d.forEach(l.edges(),(function(b){var m=l.edge(b);d.forEach(m.points,(function(l){l.x-=Z,l.y-=c})),d.has(m,"x")&&(m.x-=Z),d.has(m,"y")&&(m.y-=c)})),G.width=b-Z+W,G.height=m-c+i}(l)})),Z("    assignNodeIntersects",(function(){!function(l){d.forEach(l.edges(),(function(Z){var b,d,c=l.edge(Z),m=l.node(Z.v),G=l.node(Z.w);c.points?(b=c.points[0],d=c.points[c.points.length-1]):(c.points=[],b=G,d=m),c.points.unshift(t.intersectRect(m,b)),c.points.push(t.intersectRect(G,d))}))}(l)})),Z("    reversePoints",(function(){!function(l){d.forEach(l.edges(),(function(Z){var b=l.edge(Z);b.reversed&&b.points.reverse()}))}(l)})),Z("    acyclic.undo",(function(){c.undo(l)}))}(Z,b)})),b("  updateInputGraph",(function(){!function(l,Z){d.forEach(l.nodes(),(function(b){var d=l.node(b),c=Z.node(b);d&&(d.x=c.x,d.y=c.y,Z.children(b).length&&(d.width=c.width,d.height=c.height))})),d.forEach(l.edges(),(function(b){var c=l.edge(b),m=Z.edge(b);c.points=m.points,d.has(m,"x")&&(c.x=m.x,c.y=m.y)})),l.graph().width=Z.graph().width,l.graph().height=Z.graph().height}(l,Z)}))}))};var Y=["nodesep","edgesep","ranksep","marginx","marginy"],e={ranksep:50,edgesep:20,nodesep:50,rankdir:"tb"},p=["acyclicer","ranker","rankdir","align"],o=["width","height"],s={width:0,height:0},I=["minlen","weight","width","height","labeloffset"],R={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"},g=["labelpos"];function K(l,Z){return d.mapValues(d.pick(l,Z),Number)}function N(l){var Z={};return d.forEach(l,(function(l,b){Z[b.toLowerCase()]=l})),Z}},{"./acyclic":62,"./add-border-segments":63,"./coordinate-system":64,"./graphlib":67,"./lodash":70,"./nesting-graph":71,"./normalize":72,"./order":77,"./parent-dummy-chains":82,"./position":84,"./rank":86,"./util":89}],70:[function(l,Z,b){var d;if("function"==typeof l)try{d={cloneDeep:l("lodash/cloneDeep"),constant:l("lodash/constant"),defaults:l("lodash/defaults"),each:l("lodash/each"),filter:l("lodash/filter"),find:l("lodash/find"),flatten:l("lodash/flatten"),forEach:l("lodash/forEach"),forIn:l("lodash/forIn"),has:l("lodash/has"),isUndefined:l("lodash/isUndefined"),last:l("lodash/last"),map:l("lodash/map"),mapValues:l("lodash/mapValues"),max:l("lodash/max"),merge:l("lodash/merge"),min:l("lodash/min"),minBy:l("lodash/minBy"),now:l("lodash/now"),pick:l("lodash/pick"),range:l("lodash/range"),reduce:l("lodash/reduce"),sortBy:l("lodash/sortBy"),uniqueId:l("lodash/uniqueId"),values:l("lodash/values"),zipObject:l("lodash/zipObject")}}catch(l){}d||(d=window._),Z.exports=d},{"lodash/cloneDeep":287,"lodash/constant":288,"lodash/defaults":289,"lodash/each":290,"lodash/filter":292,"lodash/find":293,"lodash/flatten":295,"lodash/forEach":296,"lodash/forIn":297,"lodash/has":299,"lodash/isUndefined":318,"lodash/last":321,"lodash/map":322,"lodash/mapValues":323,"lodash/max":324,"lodash/merge":326,"lodash/min":327,"lodash/minBy":328,"lodash/now":330,"lodash/pick":331,"lodash/range":333,"lodash/reduce":334,"lodash/sortBy":336,"lodash/uniqueId":346,"lodash/values":347,"lodash/zipObject":348}],71:[function(l,Z,b){var d=l("./lodash"),c=l("./util");Z.exports={run:function(l){var Z=c.addDummyNode(l,"root",{},"_root"),b=function(l){var Z={};return d.forEach(l.children(),(function(b){!function b(c,m){var G=l.children(c);G&&G.length&&d.forEach(G,(function(l){b(l,m+1)})),Z[c]=m}(b,1)})),Z}(l),m=d.max(d.values(b))-1,G=2*m+1;l.graph().nestingRoot=Z,d.forEach(l.edges(),(function(Z){l.edge(Z).minlen*=G}));var W=function(l){return d.reduce(l.edges(),(function(Z,b){return Z+l.edge(b).weight}),0)}(l)+1;d.forEach(l.children(),(function(i){!function l(Z,b,m,G,W,i,X){var n=Z.children(X);if(n.length){var u=c.addBorderNode(Z,"_bt"),a=c.addBorderNode(Z,"_bb"),V=Z.node(X);Z.setParent(u,X),V.borderTop=u,Z.setParent(a,X),V.borderBottom=a,d.forEach(n,(function(d){l(Z,b,m,G,W,i,d);var c=Z.node(d),n=c.borderTop?c.borderTop:d,V=c.borderBottom?c.borderBottom:d,h=c.borderTop?G:2*G,t=n!==V?1:W-i[X]+1;Z.setEdge(u,n,{weight:h,minlen:t,nestingEdge:!0}),Z.setEdge(V,a,{weight:h,minlen:t,nestingEdge:!0})})),Z.parent(X)||Z.setEdge(b,u,{weight:0,minlen:W+i[X]})}else X!==b&&Z.setEdge(b,X,{weight:0,minlen:m})}(l,Z,G,W,m,b,i)})),l.graph().nodeRankFactor=G},cleanup:function(l){var Z=l.graph();l.removeNode(Z.nestingRoot),delete Z.nestingRoot,d.forEach(l.edges(),(function(Z){l.edge(Z).nestingEdge&&l.removeEdge(Z)}))}}},{"./lodash":70,"./util":89}],72:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./util");Z.exports={run:function(l){l.graph().dummyChains=[],d.forEach(l.edges(),(function(Z){!function(l,Z){var b,d,m,G=Z.v,W=l.node(G).rank,i=Z.w,X=l.node(i).rank,n=Z.name,u=l.edge(Z),a=u.labelRank;if(X!==W+1){for(l.removeEdge(Z),m=0,++W;W<X;++m,++W)u.points=[],d={width:0,height:0,edgeLabel:u,edgeObj:Z,rank:W},b=c.addDummyNode(l,"edge",d,"_d"),W===a&&(d.width=u.width,d.height=u.height,d.dummy="edge-label",d.labelpos=u.labelpos),l.setEdge(G,b,{weight:u.weight},n),0===m&&l.graph().dummyChains.push(b),G=b;l.setEdge(G,i,{weight:u.weight},n)}}(l,Z)}))},undo:function(l){d.forEach(l.graph().dummyChains,(function(Z){var b,d=l.node(Z),c=d.edgeLabel;for(l.setEdge(d.edgeObj,c);d.dummy;)b=l.successors(Z)[0],l.removeNode(Z),c.points.push({x:d.x,y:d.y}),"edge-label"===d.dummy&&(c.x=d.x,c.y=d.y,c.width=d.width,c.height=d.height),Z=b,d=l.node(Z)}))}}},{"./lodash":70,"./util":89}],73:[function(l,Z,b){var d=l("../lodash");Z.exports=function(l,Z,b){var c,m={};d.forEach(b,(function(b){for(var d,G,W=l.parent(b);W;){if((d=l.parent(W))?(G=m[d],m[d]=W):(G=c,c=W),G&&G!==W)return void Z.setEdge(G,W);W=d}}))}},{"../lodash":70}],74:[function(l,Z,b){var d=l("../lodash");Z.exports=function(l,Z){return d.map(Z,(function(Z){var b=l.inEdges(Z);if(b.length){var c=d.reduce(b,(function(Z,b){var d=l.edge(b),c=l.node(b.v);return{sum:Z.sum+d.weight*c.order,weight:Z.weight+d.weight}}),{sum:0,weight:0});return{v:Z,barycenter:c.sum/c.weight,weight:c.weight}}return{v:Z}}))}},{"../lodash":70}],75:[function(l,Z,b){var d=l("../lodash"),c=l("../graphlib").Graph;Z.exports=function(l,Z,b){var m=function(l){for(var Z;l.hasNode(Z=d.uniqueId("_root")););return Z}(l),G=new c({compound:!0}).setGraph({root:m}).setDefaultNodeLabel((function(Z){return l.node(Z)}));return d.forEach(l.nodes(),(function(c){var W=l.node(c),i=l.parent(c);(W.rank===Z||W.minRank<=Z&&Z<=W.maxRank)&&(G.setNode(c),G.setParent(c,i||m),d.forEach(l[b](c),(function(Z){var b=Z.v===c?Z.w:Z.v,m=G.edge(b,c),W=d.isUndefined(m)?0:m.weight;G.setEdge(b,c,{weight:l.edge(Z).weight+W})})),d.has(W,"minRank")&&G.setNode(c,{borderLeft:W.borderLeft[Z],borderRight:W.borderRight[Z]}))})),G}},{"../graphlib":67,"../lodash":70}],76:[function(l,Z,b){"use strict";var d=l("../lodash");function c(l,Z,b){for(var c=d.zipObject(b,d.map(b,(function(l,Z){return Z}))),m=d.flatten(d.map(Z,(function(Z){return d.sortBy(d.map(l.outEdges(Z),(function(Z){return{pos:c[Z.w],weight:l.edge(Z).weight}})),"pos")})),!0),G=1;G<b.length;)G<<=1;var W=2*G-1;G-=1;var i=d.map(new Array(W),(function(){return 0})),X=0;return d.forEach(m.forEach((function(l){var Z=l.pos+G;i[Z]+=l.weight;for(var b=0;Z>0;)Z%2&&(b+=i[Z+1]),i[Z=Z-1>>1]+=l.weight;X+=l.weight*b}))),X}Z.exports=function(l,Z){for(var b=0,d=1;d<Z.length;++d)b+=c(l,Z[d-1],Z[d]);return b}},{"../lodash":70}],77:[function(l,Z,b){"use strict";var d=l("../lodash"),c=l("./init-order"),m=l("./cross-count"),G=l("./sort-subgraph"),W=l("./build-layer-graph"),i=l("./add-subgraph-constraints"),X=l("../graphlib").Graph,n=l("../util");function u(l,Z,b){return d.map(Z,(function(Z){return W(l,Z,b)}))}function a(l,Z){var b=new X;d.forEach(l,(function(l){var c=l.graph().root,m=G(l,c,b,Z);d.forEach(m.vs,(function(Z,b){l.node(Z).order=b})),i(l,b,m.vs)}))}function V(l,Z){d.forEach(Z,(function(Z){d.forEach(Z,(function(Z,b){l.node(Z).order=b}))}))}Z.exports=function(l){var Z=n.maxRank(l),b=u(l,d.range(1,Z+1),"inEdges"),G=u(l,d.range(Z-1,-1,-1),"outEdges"),W=c(l);V(l,W);for(var i,X=Number.POSITIVE_INFINITY,h=0,t=0;t<4;++h,++t){a(h%2?b:G,h%4>=2),W=n.buildLayerMatrix(l);var y=m(l,W);y<X&&(t=0,i=d.cloneDeep(W),X=y)}V(l,i)}},{"../graphlib":67,"../lodash":70,"../util":89,"./add-subgraph-constraints":73,"./build-layer-graph":75,"./cross-count":76,"./init-order":78,"./sort-subgraph":80}],78:[function(l,Z,b){"use strict";var d=l("../lodash");Z.exports=function(l){var Z={},b=d.filter(l.nodes(),(function(Z){return!l.children(Z).length})),c=d.max(d.map(b,(function(Z){return l.node(Z).rank}))),m=d.map(d.range(c+1),(function(){return[]})),G=d.sortBy(b,(function(Z){return l.node(Z).rank}));return d.forEach(G,(function b(c){if(!d.has(Z,c)){Z[c]=!0;var G=l.node(c);m[G.rank].push(c),d.forEach(l.successors(c),b)}})),m}},{"../lodash":70}],79:[function(l,Z,b){"use strict";var d=l("../lodash");Z.exports=function(l,Z){var b={};return d.forEach(l,(function(l,Z){var c=b[l.v]={indegree:0,in:[],out:[],vs:[l.v],i:Z};d.isUndefined(l.barycenter)||(c.barycenter=l.barycenter,c.weight=l.weight)})),d.forEach(Z.edges(),(function(l){var Z=b[l.v],c=b[l.w];d.isUndefined(Z)||d.isUndefined(c)||(c.indegree++,Z.out.push(b[l.w]))})),function(l){var Z=[];function b(l){return function(Z){var b,c,m,G;Z.merged||(d.isUndefined(Z.barycenter)||d.isUndefined(l.barycenter)||Z.barycenter>=l.barycenter)&&(c=Z,m=0,G=0,(b=l).weight&&(m+=b.barycenter*b.weight,G+=b.weight),c.weight&&(m+=c.barycenter*c.weight,G+=c.weight),b.vs=c.vs.concat(b.vs),b.barycenter=m/G,b.weight=G,b.i=Math.min(c.i,b.i),c.merged=!0)}}function c(Z){return function(b){b.in.push(Z),0==--b.indegree&&l.push(b)}}for(;l.length;){var m=l.pop();Z.push(m),d.forEach(m.in.reverse(),b(m)),d.forEach(m.out,c(m))}return d.map(d.filter(Z,(function(l){return!l.merged})),(function(l){return d.pick(l,["vs","i","barycenter","weight"])}))}(d.filter(b,(function(l){return!l.indegree})))}},{"../lodash":70}],80:[function(l,Z,b){var d=l("../lodash"),c=l("./barycenter"),m=l("./resolve-conflicts"),G=l("./sort");Z.exports=function l(Z,b,W,i){var X=Z.children(b),n=Z.node(b),u=n?n.borderLeft:void 0,a=n?n.borderRight:void 0,V={};u&&(X=d.filter(X,(function(l){return l!==u&&l!==a})));var h=c(Z,X);d.forEach(h,(function(b){if(Z.children(b.v).length){var c=l(Z,b.v,W,i);V[b.v]=c,d.has(c,"barycenter")&&(m=b,G=c,d.isUndefined(m.barycenter)?(m.barycenter=G.barycenter,m.weight=G.weight):(m.barycenter=(m.barycenter*m.weight+G.barycenter*G.weight)/(m.weight+G.weight),m.weight+=G.weight))}var m,G}));var t=m(h,W);!function(l,Z){d.forEach(l,(function(l){l.vs=d.flatten(l.vs.map((function(l){return Z[l]?Z[l].vs:l})),!0)}))}(t,V);var y=G(t,i);if(u&&(y.vs=d.flatten([u,y.vs,a],!0),Z.predecessors(u).length)){var Y=Z.node(Z.predecessors(u)[0]),e=Z.node(Z.predecessors(a)[0]);d.has(y,"barycenter")||(y.barycenter=0,y.weight=0),y.barycenter=(y.barycenter*y.weight+Y.order+e.order)/(y.weight+2),y.weight+=2}return y}},{"../lodash":70,"./barycenter":74,"./resolve-conflicts":79,"./sort":81}],81:[function(l,Z,b){var d=l("../lodash"),c=l("../util");function m(l,Z,b){for(var c;Z.length&&(c=d.last(Z)).i<=b;)Z.pop(),l.push(c.vs),b++;return b}Z.exports=function(l,Z){var b,G=c.partition(l,(function(l){return d.has(l,"barycenter")})),W=G.lhs,i=d.sortBy(G.rhs,(function(l){return-l.i})),X=[],n=0,u=0,a=0;W.sort((b=!!Z,function(l,Z){return l.barycenter<Z.barycenter?-1:l.barycenter>Z.barycenter?1:b?Z.i-l.i:l.i-Z.i})),a=m(X,i,a),d.forEach(W,(function(l){a+=l.vs.length,X.push(l.vs),n+=l.barycenter*l.weight,u+=l.weight,a=m(X,i,a)}));var V={vs:d.flatten(X,!0)};return u&&(V.barycenter=n/u,V.weight=u),V}},{"../lodash":70,"../util":89}],82:[function(l,Z,b){var d=l("./lodash");Z.exports=function(l){var Z=function(l){var Z={},b=0;return d.forEach(l.children(),(function c(m){var G=b;d.forEach(l.children(m),c),Z[m]={low:G,lim:b++}})),Z}(l);d.forEach(l.graph().dummyChains,(function(b){for(var d=l.node(b),c=d.edgeObj,m=function(l,Z,b,d){var c,m,G=[],W=[],i=Math.min(Z[b].low,Z[d].low),X=Math.max(Z[b].lim,Z[d].lim);c=b;do{c=l.parent(c),G.push(c)}while(c&&(Z[c].low>i||X>Z[c].lim));for(m=c,c=d;(c=l.parent(c))!==m;)W.push(c);return{path:G.concat(W.reverse()),lca:m}}(l,Z,c.v,c.w),G=m.path,W=m.lca,i=0,X=G[i],n=!0;b!==c.w;){if(d=l.node(b),n){for(;(X=G[i])!==W&&l.node(X).maxRank<d.rank;)i++;X===W&&(n=!1)}if(!n){for(;i<G.length-1&&l.node(X=G[i+1]).minRank<=d.rank;)i++;X=G[i]}l.setParent(b,X),b=l.successors(b)[0]}}))}},{"./lodash":70}],83:[function(l,Z,b){"use strict";var d=l("../lodash"),c=l("../graphlib").Graph,m=l("../util");function G(l,Z){var b={};return d.reduce(Z,(function(Z,c){var m=0,G=0,W=Z.length,X=d.last(c);return d.forEach(c,(function(Z,n){var u=function(l,Z){if(l.node(Z).dummy)return d.find(l.predecessors(Z),(function(Z){return l.node(Z).dummy}))}(l,Z),a=u?l.node(u).order:W;(u||Z===X)&&(d.forEach(c.slice(G,n+1),(function(Z){d.forEach(l.predecessors(Z),(function(d){var c=l.node(d),G=c.order;!(G<m||a<G)||c.dummy&&l.node(Z).dummy||i(b,d,Z)}))})),G=n+1,m=a)})),c})),b}function W(l,Z){var b={};function c(Z,c,m,G,W){var X;d.forEach(d.range(c,m),(function(c){X=Z[c],l.node(X).dummy&&d.forEach(l.predecessors(X),(function(Z){var d=l.node(Z);d.dummy&&(d.order<G||d.order>W)&&i(b,Z,X)}))}))}return d.reduce(Z,(function(Z,b){var m,G=-1,W=0;return d.forEach(b,(function(d,i){if("border"===l.node(d).dummy){var X=l.predecessors(d);X.length&&(m=l.node(X[0]).order,c(b,W,i,G,m),W=i,G=m)}c(b,W,b.length,m,Z.length)})),b})),b}function i(l,Z,b){if(Z>b){var d=Z;Z=b,b=d}var c=l[Z];c||(l[Z]=c={}),c[b]=!0}function X(l,Z,b){if(Z>b){var c=Z;Z=b,b=c}return d.has(l[Z],b)}function n(l,Z,b,c){var m={},G={},W={};return d.forEach(Z,(function(l){d.forEach(l,(function(l,Z){m[l]=l,G[l]=l,W[l]=Z}))})),d.forEach(Z,(function(l){var Z=-1;d.forEach(l,(function(l){var i=c(l);if(i.length)for(var n=((i=d.sortBy(i,(function(l){return W[l]}))).length-1)/2,u=Math.floor(n),a=Math.ceil(n);u<=a;++u){var V=i[u];G[l]===l&&Z<W[V]&&!X(b,l,V)&&(G[V]=l,G[l]=m[l]=m[V],Z=W[V])}}))})),{root:m,align:G}}function u(l,Z,b,m,G){var W={},i=function(l,Z,b,m){var G=new c,W=l.graph(),i=function(l,Z,b){return function(c,m,G){var W,i=c.node(m),X=c.node(G),n=0;if(n+=i.width/2,d.has(i,"labelpos"))switch(i.labelpos.toLowerCase()){case"l":W=-i.width/2;break;case"r":W=i.width/2}if(W&&(n+=b?W:-W),W=0,n+=(i.dummy?Z:l)/2,n+=(X.dummy?Z:l)/2,n+=X.width/2,d.has(X,"labelpos"))switch(X.labelpos.toLowerCase()){case"l":W=X.width/2;break;case"r":W=-X.width/2}return W&&(n+=b?W:-W),W=0,n}}(W.nodesep,W.edgesep,m);return d.forEach(Z,(function(Z){var c;d.forEach(Z,(function(Z){var d=b[Z];if(G.setNode(d),c){var m=b[c],W=G.edge(m,d);G.setEdge(m,d,Math.max(i(l,Z,c),W||0))}c=Z}))})),G}(l,Z,b,G),X=G?"borderLeft":"borderRight";function n(l,Z){for(var b=i.nodes(),d=b.pop(),c={};d;)c[d]?l(d):(c[d]=!0,b.push(d),b=b.concat(Z(d))),d=b.pop()}return n((function(l){W[l]=i.inEdges(l).reduce((function(l,Z){return Math.max(l,W[Z.v]+i.edge(Z))}),0)}),i.predecessors.bind(i)),n((function(Z){var b=i.outEdges(Z).reduce((function(l,Z){return Math.min(l,W[Z.w]-i.edge(Z))}),Number.POSITIVE_INFINITY),d=l.node(Z);b!==Number.POSITIVE_INFINITY&&d.borderType!==X&&(W[Z]=Math.max(W[Z],b))}),i.successors.bind(i)),d.forEach(m,(function(l){W[l]=W[b[l]]})),W}function a(l,Z){return d.minBy(d.values(Z),(function(Z){var b=Number.NEGATIVE_INFINITY,c=Number.POSITIVE_INFINITY;return d.forIn(Z,(function(Z,d){var m=function(l,Z){return l.node(Z).width}(l,d)/2;b=Math.max(Z+m,b),c=Math.min(Z-m,c)})),b-c}))}function V(l,Z){var b=d.values(Z),c=d.min(b),m=d.max(b);d.forEach(["u","d"],(function(b){d.forEach(["l","r"],(function(G){var W,i=b+G,X=l[i];if(X!==Z){var n=d.values(X);(W="l"===G?c-d.min(n):m-d.max(n))&&(l[i]=d.mapValues(X,(function(l){return l+W})))}}))}))}function h(l,Z){return d.mapValues(l.ul,(function(b,c){if(Z)return l[Z.toLowerCase()][c];var m=d.sortBy(d.map(l,c));return(m[1]+m[2])/2}))}Z.exports={positionX:function(l){var Z,b=m.buildLayerMatrix(l),c=d.merge(G(l,b),W(l,b)),i={};d.forEach(["u","d"],(function(m){Z="u"===m?b:d.values(b).reverse(),d.forEach(["l","r"],(function(b){"r"===b&&(Z=d.map(Z,(function(l){return d.values(l).reverse()})));var G=("u"===m?l.predecessors:l.successors).bind(l),W=n(0,Z,c,G),X=u(l,Z,W.root,W.align,"r"===b);"r"===b&&(X=d.mapValues(X,(function(l){return-l}))),i[m+b]=X}))}));var X=a(l,i);return V(i,X),h(i,l.graph().align)},findType1Conflicts:G,findType2Conflicts:W,addConflict:i,hasConflict:X,verticalAlignment:n,horizontalCompaction:u,alignCoordinates:V,findSmallestWidthAlignment:a,balance:h}},{"../graphlib":67,"../lodash":70,"../util":89}],84:[function(l,Z,b){"use strict";var d=l("../lodash"),c=l("../util"),m=l("./bk").positionX;Z.exports=function(l){(function(l){var Z=c.buildLayerMatrix(l),b=l.graph().ranksep,m=0;d.forEach(Z,(function(Z){var c=d.max(d.map(Z,(function(Z){return l.node(Z).height})));d.forEach(Z,(function(Z){l.node(Z).y=m+c/2})),m+=c+b}))})(l=c.asNonCompoundGraph(l)),d.forEach(m(l),(function(Z,b){l.node(b).x=Z}))}},{"../lodash":70,"../util":89,"./bk":83}],85:[function(l,Z,b){"use strict";var d=l("../lodash"),c=l("../graphlib").Graph,m=l("./util").slack;function G(l,Z){return d.forEach(l.nodes(),(function b(c){d.forEach(Z.nodeEdges(c),(function(d){var G=d.v,W=c===G?d.w:G;l.hasNode(W)||m(Z,d)||(l.setNode(W,{}),l.setEdge(c,W,{}),b(W))}))})),l.nodeCount()}function W(l,Z){return d.minBy(Z.edges(),(function(b){if(l.hasNode(b.v)!==l.hasNode(b.w))return m(Z,b)}))}function i(l,Z,b){d.forEach(l.nodes(),(function(l){Z.node(l).rank+=b}))}Z.exports=function(l){var Z,b,d=new c({directed:!1}),X=l.nodes()[0],n=l.nodeCount();for(d.setNode(X,{});G(d,l)<n;)Z=W(d,l),b=d.hasNode(Z.v)?m(l,Z):-m(l,Z),i(d,l,b);return d}},{"../graphlib":67,"../lodash":70,"./util":88}],86:[function(l,Z,b){"use strict";var d=l("./util").longestPath,c=l("./feasible-tree"),m=l("./network-simplex");Z.exports=function(l){switch(l.graph().ranker){case"network-simplex":W(l);break;case"tight-tree":!function(l){d(l),c(l)}(l);break;case"longest-path":G(l);break;default:W(l)}};var G=d;function W(l){m(l)}},{"./feasible-tree":85,"./network-simplex":87,"./util":88}],87:[function(l,Z,b){"use strict";var d=l("../lodash"),c=l("./feasible-tree"),m=l("./util").slack,G=l("./util").longestPath,W=l("../graphlib").alg.preorder,i=l("../graphlib").alg.postorder,X=l("../util").simplify;function n(l){l=X(l),G(l);var Z,b=c(l);for(V(b),u(b,l);Z=t(b);)Y(b,l,Z,y(b,l,Z))}function u(l,Z){var b=i(l,l.nodes());b=b.slice(0,b.length-1),d.forEach(b,(function(b){!function(l,Z,b){var d=l.node(b).parent;l.edge(b,d).cutvalue=a(l,Z,b)}(l,Z,b)}))}function a(l,Z,b){var c=l.node(b).parent,m=!0,G=Z.edge(b,c),W=0;return G||(m=!1,G=Z.edge(c,b)),W=G.weight,d.forEach(Z.nodeEdges(b),(function(d){var G,i,X=d.v===b,n=X?d.w:d.v;if(n!==c){var u=X===m,a=Z.edge(d).weight;if(W+=u?a:-a,G=b,i=n,l.hasEdge(G,i)){var V=l.edge(b,n).cutvalue;W+=u?-V:V}}})),W}function V(l,Z){arguments.length<2&&(Z=l.nodes()[0]),h(l,{},1,Z)}function h(l,Z,b,c,m){var G=b,W=l.node(c);return Z[c]=!0,d.forEach(l.neighbors(c),(function(m){d.has(Z,m)||(b=h(l,Z,b,m,c))})),W.low=G,W.lim=b++,m?W.parent=m:delete W.parent,b}function t(l){return d.find(l.edges(),(function(Z){return l.edge(Z).cutvalue<0}))}function y(l,Z,b){var c=b.v,G=b.w;Z.hasEdge(c,G)||(c=b.w,G=b.v);var W=l.node(c),i=l.node(G),X=W,n=!1;W.lim>i.lim&&(X=i,n=!0);var u=d.filter(Z.edges(),(function(Z){return n===e(0,l.node(Z.v),X)&&n!==e(0,l.node(Z.w),X)}));return d.minBy(u,(function(l){return m(Z,l)}))}function Y(l,Z,b,c){var m=b.v,G=b.w;l.removeEdge(m,G),l.setEdge(c.v,c.w,{}),V(l),u(l,Z),function(l,Z){var b=d.find(l.nodes(),(function(l){return!Z.node(l).parent})),c=W(l,b);c=c.slice(1),d.forEach(c,(function(b){var d=l.node(b).parent,c=Z.edge(b,d),m=!1;c||(c=Z.edge(d,b),m=!0),Z.node(b).rank=Z.node(d).rank+(m?c.minlen:-c.minlen)}))}(l,Z)}function e(l,Z,b){return b.low<=Z.lim&&Z.lim<=b.lim}Z.exports=n,n.initLowLimValues=V,n.initCutValues=u,n.calcCutValue=a,n.leaveEdge=t,n.enterEdge=y,n.exchangeEdges=Y},{"../graphlib":67,"../lodash":70,"../util":89,"./feasible-tree":85,"./util":88}],88:[function(l,Z,b){"use strict";var d=l("../lodash");Z.exports={longestPath:function(l){var Z={};d.forEach(l.sources(),(function b(c){var m=l.node(c);if(d.has(Z,c))return m.rank;Z[c]=!0;var G=d.min(d.map(l.outEdges(c),(function(Z){return b(Z.w)-l.edge(Z).minlen})));return G!==Number.POSITIVE_INFINITY&&null!=G||(G=0),m.rank=G}))},slack:function(l,Z){return l.node(Z.w).rank-l.node(Z.v).rank-l.edge(Z).minlen}}},{"../lodash":70}],89:[function(l,Z,b){"use strict";var d=l("./lodash"),c=l("./graphlib").Graph;function m(l,Z,b,c){var m;do{m=d.uniqueId(c)}while(l.hasNode(m));return b.dummy=Z,l.setNode(m,b),m}function G(l){return d.max(d.map(l.nodes(),(function(Z){var b=l.node(Z).rank;if(!d.isUndefined(b))return b})))}Z.exports={addDummyNode:m,simplify:function(l){var Z=(new c).setGraph(l.graph());return d.forEach(l.nodes(),(function(b){Z.setNode(b,l.node(b))})),d.forEach(l.edges(),(function(b){var d=Z.edge(b.v,b.w)||{weight:0,minlen:1},c=l.edge(b);Z.setEdge(b.v,b.w,{weight:d.weight+c.weight,minlen:Math.max(d.minlen,c.minlen)})})),Z},asNonCompoundGraph:function(l){var Z=new c({multigraph:l.isMultigraph()}).setGraph(l.graph());return d.forEach(l.nodes(),(function(b){l.children(b).length||Z.setNode(b,l.node(b))})),d.forEach(l.edges(),(function(b){Z.setEdge(b,l.edge(b))})),Z},successorWeights:function(l){var Z=d.map(l.nodes(),(function(Z){var b={};return d.forEach(l.outEdges(Z),(function(Z){b[Z.w]=(b[Z.w]||0)+l.edge(Z).weight})),b}));return d.zipObject(l.nodes(),Z)},predecessorWeights:function(l){var Z=d.map(l.nodes(),(function(Z){var b={};return d.forEach(l.inEdges(Z),(function(Z){b[Z.v]=(b[Z.v]||0)+l.edge(Z).weight})),b}));return d.zipObject(l.nodes(),Z)},intersectRect:function(l,Z){var b,d,c=l.x,m=l.y,G=Z.x-c,W=Z.y-m,i=l.width/2,X=l.height/2;if(!G&&!W)throw new Error("Not possible to find intersection inside of the rectangle");return Math.abs(W)*i>Math.abs(G)*X?(W<0&&(X=-X),b=X*G/W,d=X):(G<0&&(i=-i),b=i,d=i*W/G),{x:c+b,y:m+d}},buildLayerMatrix:function(l){var Z=d.map(d.range(G(l)+1),(function(){return[]}));return d.forEach(l.nodes(),(function(b){var c=l.node(b),m=c.rank;d.isUndefined(m)||(Z[m][c.order]=b)})),Z},normalizeRanks:function(l){var Z=d.min(d.map(l.nodes(),(function(Z){return l.node(Z).rank})));d.forEach(l.nodes(),(function(b){var c=l.node(b);d.has(c,"rank")&&(c.rank-=Z)}))},removeEmptyRanks:function(l){var Z=d.min(d.map(l.nodes(),(function(Z){return l.node(Z).rank}))),b=[];d.forEach(l.nodes(),(function(d){var c=l.node(d).rank-Z;b[c]||(b[c]=[]),b[c].push(d)}));var c=0,m=l.graph().nodeRankFactor;d.forEach(b,(function(Z,b){d.isUndefined(Z)&&b%m!=0?--c:c&&d.forEach(Z,(function(Z){l.node(Z).rank+=c}))}))},addBorderNode:function(l,Z,b,d){var c={width:0,height:0};return arguments.length>=4&&(c.rank=b,c.order=d),m(l,"border",c,Z)},maxRank:G,partition:function(l,Z){var b={lhs:[],rhs:[]};return d.forEach(l,(function(l){Z(l)?b.lhs.push(l):b.rhs.push(l)})),b},time:function(l,Z){var b=d.now();try{return Z()}finally{console.log(l+" time: "+(d.now()-b)+"ms")}},notime:function(l,Z){return Z()}}},{"./graphlib":67,"./lodash":70}],90:[function(l,Z,b){Z.exports="0.8.5"},{}],91:[function(l,Z,b){var d=l("./lib");Z.exports={Graph:d.Graph,json:l("./lib/json"),alg:l("./lib/alg"),version:d.version}},{"./lib":107,"./lib/alg":98,"./lib/json":108}],92:[function(l,Z,b){var d=l("../lodash");Z.exports=function(l){var Z,b={},c=[];function m(c){d.has(b,c)||(b[c]=!0,Z.push(c),d.each(l.successors(c),m),d.each(l.predecessors(c),m))}return d.each(l.nodes(),(function(l){Z=[],m(l),Z.length&&c.push(Z)})),c}},{"../lodash":109}],93:[function(l,Z,b){var d=l("../lodash");Z.exports=function(l,Z,b){d.isArray(Z)||(Z=[Z]);var c=(l.isDirected()?l.successors:l.neighbors).bind(l),m=[],G={};return d.each(Z,(function(Z){if(!l.hasNode(Z))throw new Error("Graph does not have node: "+Z);!function l(Z,b,c,m,G,W){d.has(m,b)||(m[b]=!0,c||W.push(b),d.each(G(b),(function(b){l(Z,b,c,m,G,W)})),c&&W.push(b))}(l,Z,"post"===b,G,c,m)})),m}},{"../lodash":109}],94:[function(l,Z,b){var d=l("./dijkstra"),c=l("../lodash");Z.exports=function(l,Z,b){return c.transform(l.nodes(),(function(c,m){c[m]=d(l,m,Z,b)}),{})}},{"../lodash":109,"./dijkstra":95}],95:[function(l,Z,b){var d=l("../lodash"),c=l("../data/priority-queue");Z.exports=function(l,Z,b,d){return function(l,Z,b,d){var m,G,W={},i=new c,X=function(l){var Z=l.v!==m?l.v:l.w,d=W[Z],c=b(l),X=G.distance+c;if(c<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+l+" Weight: "+c);X<d.distance&&(d.distance=X,d.predecessor=m,i.decrease(Z,X))};for(l.nodes().forEach((function(l){var b=l===Z?0:Number.POSITIVE_INFINITY;W[l]={distance:b},i.add(l,b)}));i.size()>0&&(m=i.removeMin(),(G=W[m]).distance!==Number.POSITIVE_INFINITY);)d(m).forEach(X);return W}(l,String(Z),b||m,d||function(Z){return l.outEdges(Z)})};var m=d.constant(1)},{"../data/priority-queue":105,"../lodash":109}],96:[function(l,Z,b){var d=l("../lodash"),c=l("./tarjan");Z.exports=function(l){return d.filter(c(l),(function(Z){return Z.length>1||1===Z.length&&l.hasEdge(Z[0],Z[0])}))}},{"../lodash":109,"./tarjan":103}],97:[function(l,Z,b){var d=l("../lodash");Z.exports=function(l,Z,b){return function(l,Z,b){var d={},c=l.nodes();return c.forEach((function(l){d[l]={},d[l][l]={distance:0},c.forEach((function(Z){l!==Z&&(d[l][Z]={distance:Number.POSITIVE_INFINITY})})),b(l).forEach((function(b){var c=b.v===l?b.w:b.v,m=Z(b);d[l][c]={distance:m,predecessor:l}}))})),c.forEach((function(l){var Z=d[l];c.forEach((function(b){var m=d[b];c.forEach((function(b){var d=m[l],c=Z[b],G=m[b],W=d.distance+c.distance;W<G.distance&&(G.distance=W,G.predecessor=c.predecessor)}))}))})),d}(l,Z||c,b||function(Z){return l.outEdges(Z)})};var c=d.constant(1)},{"../lodash":109}],98:[function(l,Z,b){Z.exports={components:l("./components"),dijkstra:l("./dijkstra"),dijkstraAll:l("./dijkstra-all"),findCycles:l("./find-cycles"),floydWarshall:l("./floyd-warshall"),isAcyclic:l("./is-acyclic"),postorder:l("./postorder"),preorder:l("./preorder"),prim:l("./prim"),tarjan:l("./tarjan"),topsort:l("./topsort")}},{"./components":92,"./dijkstra":95,"./dijkstra-all":94,"./find-cycles":96,"./floyd-warshall":97,"./is-acyclic":99,"./postorder":100,"./preorder":101,"./prim":102,"./tarjan":103,"./topsort":104}],99:[function(l,Z,b){var d=l("./topsort");Z.exports=function(l){try{d(l)}catch(l){if(l instanceof d.CycleException)return!1;throw l}return!0}},{"./topsort":104}],100:[function(l,Z,b){var d=l("./dfs");Z.exports=function(l,Z){return d(l,Z,"post")}},{"./dfs":93}],101:[function(l,Z,b){var d=l("./dfs");Z.exports=function(l,Z){return d(l,Z,"pre")}},{"./dfs":93}],102:[function(l,Z,b){var d=l("../lodash"),c=l("../graph"),m=l("../data/priority-queue");Z.exports=function(l,Z){var b,G=new c,W={},i=new m;function X(l){var d=l.v===b?l.w:l.v,c=i.priority(d);if(void 0!==c){var m=Z(l);m<c&&(W[d]=b,i.decrease(d,m))}}if(0===l.nodeCount())return G;d.each(l.nodes(),(function(l){i.add(l,Number.POSITIVE_INFINITY),G.setNode(l)})),i.decrease(l.nodes()[0],0);for(var n=!1;i.size()>0;){if(b=i.removeMin(),d.has(W,b))G.setEdge(b,W[b]);else{if(n)throw new Error("Input graph is not connected: "+l);n=!0}l.nodeEdges(b).forEach(X)}return G}},{"../data/priority-queue":105,"../graph":106,"../lodash":109}],103:[function(l,Z,b){var d=l("../lodash");Z.exports=function(l){var Z=0,b=[],c={},m=[];return l.nodes().forEach((function(G){d.has(c,G)||function G(W){var i=c[W]={onStack:!0,lowlink:Z,index:Z++};if(b.push(W),l.successors(W).forEach((function(l){d.has(c,l)?c[l].onStack&&(i.lowlink=Math.min(i.lowlink,c[l].index)):(G(l),i.lowlink=Math.min(i.lowlink,c[l].lowlink))})),i.lowlink===i.index){var X,n=[];do{X=b.pop(),c[X].onStack=!1,n.push(X)}while(W!==X);m.push(n)}}(G)})),m}},{"../lodash":109}],104:[function(l,Z,b){var d=l("../lodash");function c(l){var Z={},b={},c=[];if(d.each(l.sinks(),(function G(W){if(d.has(b,W))throw new m;d.has(Z,W)||(b[W]=!0,Z[W]=!0,d.each(l.predecessors(W),G),delete b[W],c.push(W))})),d.size(Z)!==l.nodeCount())throw new m;return c}function m(){}Z.exports=c,c.CycleException=m,m.prototype=new Error},{"../lodash":109}],105:[function(l,Z,b){var d=l("../lodash");function c(){this._arr=[],this._keyIndices={}}Z.exports=c,c.prototype.size=function(){return this._arr.length},c.prototype.keys=function(){return this._arr.map((function(l){return l.key}))},c.prototype.has=function(l){return d.has(this._keyIndices,l)},c.prototype.priority=function(l){var Z=this._keyIndices[l];if(void 0!==Z)return this._arr[Z].priority},c.prototype.min=function(){if(0===this.size())throw new Error("Queue underflow");return this._arr[0].key},c.prototype.add=function(l,Z){var b=this._keyIndices;if(l=String(l),!d.has(b,l)){var c=this._arr,m=c.length;return b[l]=m,c.push({key:l,priority:Z}),this._decrease(m),!0}return!1},c.prototype.removeMin=function(){this._swap(0,this._arr.length-1);var l=this._arr.pop();return delete this._keyIndices[l.key],this._heapify(0),l.key},c.prototype.decrease=function(l,Z){var b=this._keyIndices[l];if(Z>this._arr[b].priority)throw new Error("New priority is greater than current priority. Key: "+l+" Old: "+this._arr[b].priority+" New: "+Z);this._arr[b].priority=Z,this._decrease(b)},c.prototype._heapify=function(l){var Z=this._arr,b=2*l,d=b+1,c=l;b<Z.length&&(c=Z[b].priority<Z[c].priority?b:c,d<Z.length&&(c=Z[d].priority<Z[c].priority?d:c),c!==l&&(this._swap(l,c),this._heapify(c)))},c.prototype._decrease=function(l){for(var Z,b=this._arr,d=b[l].priority;0!==l&&!(b[Z=l>>1].priority<d);)this._swap(l,Z),l=Z},c.prototype._swap=function(l,Z){var b=this._arr,d=this._keyIndices,c=b[l],m=b[Z];b[l]=m,b[Z]=c,d[m.key]=l,d[c.key]=Z}},{"../lodash":109}],106:[function(l,Z,b){"use strict";var d=l("./lodash");function c(l){this._isDirected=!d.has(l,"directed")||l.directed,this._isMultigraph=!!d.has(l,"multigraph")&&l.multigraph,this._isCompound=!!d.has(l,"compound")&&l.compound,this._label=void 0,this._defaultNodeLabelFn=d.constant(void 0),this._defaultEdgeLabelFn=d.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children["\0"]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function m(l,Z){l[Z]?l[Z]++:l[Z]=1}function G(l,Z){--l[Z]||delete l[Z]}function W(l,Z,b,c){var m=""+Z,G=""+b;if(!l&&m>G){var W=m;m=G,G=W}return m+""+G+""+(d.isUndefined(c)?"\0":c)}function i(l,Z,b,d){var c=""+Z,m=""+b;if(!l&&c>m){var G=c;c=m,m=G}var W={v:c,w:m};return d&&(W.name=d),W}function X(l,Z){return W(l,Z.v,Z.w,Z.name)}Z.exports=c,c.prototype._nodeCount=0,c.prototype._edgeCount=0,c.prototype.isDirected=function(){return this._isDirected},c.prototype.isMultigraph=function(){return this._isMultigraph},c.prototype.isCompound=function(){return this._isCompound},c.prototype.setGraph=function(l){return this._label=l,this},c.prototype.graph=function(){return this._label},c.prototype.setDefaultNodeLabel=function(l){return d.isFunction(l)||(l=d.constant(l)),this._defaultNodeLabelFn=l,this},c.prototype.nodeCount=function(){return this._nodeCount},c.prototype.nodes=function(){return d.keys(this._nodes)},c.prototype.sources=function(){var l=this;return d.filter(this.nodes(),(function(Z){return d.isEmpty(l._in[Z])}))},c.prototype.sinks=function(){var l=this;return d.filter(this.nodes(),(function(Z){return d.isEmpty(l._out[Z])}))},c.prototype.setNodes=function(l,Z){var b=arguments,c=this;return d.each(l,(function(l){b.length>1?c.setNode(l,Z):c.setNode(l)})),this},c.prototype.setNode=function(l,Z){return d.has(this._nodes,l)?(arguments.length>1&&(this._nodes[l]=Z),this):(this._nodes[l]=arguments.length>1?Z:this._defaultNodeLabelFn(l),this._isCompound&&(this._parent[l]="\0",this._children[l]={},this._children["\0"][l]=!0),this._in[l]={},this._preds[l]={},this._out[l]={},this._sucs[l]={},++this._nodeCount,this)},c.prototype.node=function(l){return this._nodes[l]},c.prototype.hasNode=function(l){return d.has(this._nodes,l)},c.prototype.removeNode=function(l){var Z=this;if(d.has(this._nodes,l)){var b=function(l){Z.removeEdge(Z._edgeObjs[l])};delete this._nodes[l],this._isCompound&&(this._removeFromParentsChildList(l),delete this._parent[l],d.each(this.children(l),(function(l){Z.setParent(l)})),delete this._children[l]),d.each(d.keys(this._in[l]),b),delete this._in[l],delete this._preds[l],d.each(d.keys(this._out[l]),b),delete this._out[l],delete this._sucs[l],--this._nodeCount}return this},c.prototype.setParent=function(l,Z){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(d.isUndefined(Z))Z="\0";else{for(var b=Z+="";!d.isUndefined(b);b=this.parent(b))if(b===l)throw new Error("Setting "+Z+" as parent of "+l+" would create a cycle");this.setNode(Z)}return this.setNode(l),this._removeFromParentsChildList(l),this._parent[l]=Z,this._children[Z][l]=!0,this},c.prototype._removeFromParentsChildList=function(l){delete this._children[this._parent[l]][l]},c.prototype.parent=function(l){if(this._isCompound){var Z=this._parent[l];if("\0"!==Z)return Z}},c.prototype.children=function(l){if(d.isUndefined(l)&&(l="\0"),this._isCompound){var Z=this._children[l];if(Z)return d.keys(Z)}else{if("\0"===l)return this.nodes();if(this.hasNode(l))return[]}},c.prototype.predecessors=function(l){var Z=this._preds[l];if(Z)return d.keys(Z)},c.prototype.successors=function(l){var Z=this._sucs[l];if(Z)return d.keys(Z)},c.prototype.neighbors=function(l){var Z=this.predecessors(l);if(Z)return d.union(Z,this.successors(l))},c.prototype.isLeaf=function(l){return 0===(this.isDirected()?this.successors(l):this.neighbors(l)).length},c.prototype.filterNodes=function(l){var Z=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});Z.setGraph(this.graph());var b=this;d.each(this._nodes,(function(b,d){l(d)&&Z.setNode(d,b)})),d.each(this._edgeObjs,(function(l){Z.hasNode(l.v)&&Z.hasNode(l.w)&&Z.setEdge(l,b.edge(l))}));var c={};return this._isCompound&&d.each(Z.nodes(),(function(l){Z.setParent(l,function l(d){var m=b.parent(d);return void 0===m||Z.hasNode(m)?(c[d]=m,m):m in c?c[m]:l(m)}(l))})),Z},c.prototype.setDefaultEdgeLabel=function(l){return d.isFunction(l)||(l=d.constant(l)),this._defaultEdgeLabelFn=l,this},c.prototype.edgeCount=function(){return this._edgeCount},c.prototype.edges=function(){return d.values(this._edgeObjs)},c.prototype.setPath=function(l,Z){var b=this,c=arguments;return d.reduce(l,(function(l,d){return c.length>1?b.setEdge(l,d,Z):b.setEdge(l,d),d})),this},c.prototype.setEdge=function(){var l,Z,b,c,G=!1,X=arguments[0];"object"==typeof X&&null!==X&&"v"in X?(l=X.v,Z=X.w,b=X.name,2===arguments.length&&(c=arguments[1],G=!0)):(l=X,Z=arguments[1],b=arguments[3],arguments.length>2&&(c=arguments[2],G=!0)),l=""+l,Z=""+Z,d.isUndefined(b)||(b=""+b);var n=W(this._isDirected,l,Z,b);if(d.has(this._edgeLabels,n))return G&&(this._edgeLabels[n]=c),this;if(!d.isUndefined(b)&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(l),this.setNode(Z),this._edgeLabels[n]=G?c:this._defaultEdgeLabelFn(l,Z,b);var u=i(this._isDirected,l,Z,b);return l=u.v,Z=u.w,Object.freeze(u),this._edgeObjs[n]=u,m(this._preds[Z],l),m(this._sucs[l],Z),this._in[Z][n]=u,this._out[l][n]=u,this._edgeCount++,this},c.prototype.edge=function(l,Z,b){var d=1===arguments.length?X(this._isDirected,arguments[0]):W(this._isDirected,l,Z,b);return this._edgeLabels[d]},c.prototype.hasEdge=function(l,Z,b){var c=1===arguments.length?X(this._isDirected,arguments[0]):W(this._isDirected,l,Z,b);return d.has(this._edgeLabels,c)},c.prototype.removeEdge=function(l,Z,b){var d=1===arguments.length?X(this._isDirected,arguments[0]):W(this._isDirected,l,Z,b),c=this._edgeObjs[d];return c&&(l=c.v,Z=c.w,delete this._edgeLabels[d],delete this._edgeObjs[d],G(this._preds[Z],l),G(this._sucs[l],Z),delete this._in[Z][d],delete this._out[l][d],this._edgeCount--),this},c.prototype.inEdges=function(l,Z){var b=this._in[l];if(b){var c=d.values(b);return Z?d.filter(c,(function(l){return l.v===Z})):c}},c.prototype.outEdges=function(l,Z){var b=this._out[l];if(b){var c=d.values(b);return Z?d.filter(c,(function(l){return l.w===Z})):c}},c.prototype.nodeEdges=function(l,Z){var b=this.inEdges(l,Z);if(b)return b.concat(this.outEdges(l,Z))}},{"./lodash":109}],107:[function(l,Z,b){Z.exports={Graph:l("./graph"),version:l("./version")}},{"./graph":106,"./version":110}],108:[function(l,Z,b){var d=l("./lodash"),c=l("./graph");function m(l){return d.map(l.nodes(),(function(Z){var b=l.node(Z),c=l.parent(Z),m={v:Z};return d.isUndefined(b)||(m.value=b),d.isUndefined(c)||(m.parent=c),m}))}function G(l){return d.map(l.edges(),(function(Z){var b=l.edge(Z),c={v:Z.v,w:Z.w};return d.isUndefined(Z.name)||(c.name=Z.name),d.isUndefined(b)||(c.value=b),c}))}Z.exports={write:function(l){var Z={options:{directed:l.isDirected(),multigraph:l.isMultigraph(),compound:l.isCompound()},nodes:m(l),edges:G(l)};return d.isUndefined(l.graph())||(Z.value=d.clone(l.graph())),Z},read:function(l){var Z=new c(l.options).setGraph(l.value);return d.each(l.nodes,(function(l){Z.setNode(l.v,l.value),l.parent&&Z.setParent(l.v,l.parent)})),d.each(l.edges,(function(l){Z.setEdge({v:l.v,w:l.w,name:l.name},l.value)})),Z}}},{"./graph":106,"./lodash":109}],109:[function(l,Z,b){var d;if("function"==typeof l)try{d={clone:l("lodash/clone"),constant:l("lodash/constant"),each:l("lodash/each"),filter:l("lodash/filter"),has:l("lodash/has"),isArray:l("lodash/isArray"),isEmpty:l("lodash/isEmpty"),isFunction:l("lodash/isFunction"),isUndefined:l("lodash/isUndefined"),keys:l("lodash/keys"),map:l("lodash/map"),reduce:l("lodash/reduce"),size:l("lodash/size"),transform:l("lodash/transform"),union:l("lodash/union"),values:l("lodash/values")}}catch(l){}d||(d=window._),Z.exports=d},{"lodash/clone":286,"lodash/constant":288,"lodash/each":290,"lodash/filter":292,"lodash/has":299,"lodash/isArray":303,"lodash/isEmpty":307,"lodash/isFunction":308,"lodash/isUndefined":318,"lodash/keys":319,"lodash/map":322,"lodash/reduce":334,"lodash/size":335,"lodash/transform":344,"lodash/union":345,"lodash/values":347}],110:[function(l,Z,b){Z.exports="2.1.8"},{}],111:[function(l,Z,b){var d=l("./_getNative")(l("./_root"),"DataView");Z.exports=d},{"./_getNative":223,"./_root":268}],112:[function(l,Z,b){var d=l("./_hashClear"),c=l("./_hashDelete"),m=l("./_hashGet"),G=l("./_hashHas"),W=l("./_hashSet");function i(l){var Z=-1,b=null==l?0:l.length;for(this.clear();++Z<b;){var d=l[Z];this.set(d[0],d[1])}}i.prototype.clear=d,i.prototype.delete=c,i.prototype.get=m,i.prototype.has=G,i.prototype.set=W,Z.exports=i},{"./_hashClear":232,"./_hashDelete":233,"./_hashGet":234,"./_hashHas":235,"./_hashSet":236}],113:[function(l,Z,b){var d=l("./_listCacheClear"),c=l("./_listCacheDelete"),m=l("./_listCacheGet"),G=l("./_listCacheHas"),W=l("./_listCacheSet");function i(l){var Z=-1,b=null==l?0:l.length;for(this.clear();++Z<b;){var d=l[Z];this.set(d[0],d[1])}}i.prototype.clear=d,i.prototype.delete=c,i.prototype.get=m,i.prototype.has=G,i.prototype.set=W,Z.exports=i},{"./_listCacheClear":248,"./_listCacheDelete":249,"./_listCacheGet":250,"./_listCacheHas":251,"./_listCacheSet":252}],114:[function(l,Z,b){var d=l("./_getNative")(l("./_root"),"Map");Z.exports=d},{"./_getNative":223,"./_root":268}],115:[function(l,Z,b){var d=l("./_mapCacheClear"),c=l("./_mapCacheDelete"),m=l("./_mapCacheGet"),G=l("./_mapCacheHas"),W=l("./_mapCacheSet");function i(l){var Z=-1,b=null==l?0:l.length;for(this.clear();++Z<b;){var d=l[Z];this.set(d[0],d[1])}}i.prototype.clear=d,i.prototype.delete=c,i.prototype.get=m,i.prototype.has=G,i.prototype.set=W,Z.exports=i},{"./_mapCacheClear":253,"./_mapCacheDelete":254,"./_mapCacheGet":255,"./_mapCacheHas":256,"./_mapCacheSet":257}],116:[function(l,Z,b){var d=l("./_getNative")(l("./_root"),"Promise");Z.exports=d},{"./_getNative":223,"./_root":268}],117:[function(l,Z,b){var d=l("./_getNative")(l("./_root"),"Set");Z.exports=d},{"./_getNative":223,"./_root":268}],118:[function(l,Z,b){var d=l("./_MapCache"),c=l("./_setCacheAdd"),m=l("./_setCacheHas");function G(l){var Z=-1,b=null==l?0:l.length;for(this.__data__=new d;++Z<b;)this.add(l[Z])}G.prototype.add=G.prototype.push=c,G.prototype.has=m,Z.exports=G},{"./_MapCache":115,"./_setCacheAdd":270,"./_setCacheHas":271}],119:[function(l,Z,b){var d=l("./_ListCache"),c=l("./_stackClear"),m=l("./_stackDelete"),G=l("./_stackGet"),W=l("./_stackHas"),i=l("./_stackSet");function X(l){var Z=this.__data__=new d(l);this.size=Z.size}X.prototype.clear=c,X.prototype.delete=m,X.prototype.get=G,X.prototype.has=W,X.prototype.set=i,Z.exports=X},{"./_ListCache":113,"./_stackClear":275,"./_stackDelete":276,"./_stackGet":277,"./_stackHas":278,"./_stackSet":279}],120:[function(l,Z,b){var d=l("./_root").Symbol;Z.exports=d},{"./_root":268}],121:[function(l,Z,b){var d=l("./_root").Uint8Array;Z.exports=d},{"./_root":268}],122:[function(l,Z,b){var d=l("./_getNative")(l("./_root"),"WeakMap");Z.exports=d},{"./_getNative":223,"./_root":268}],123:[function(l,Z,b){Z.exports=function(l,Z,b){switch(b.length){case 0:return l.call(Z);case 1:return l.call(Z,b[0]);case 2:return l.call(Z,b[0],b[1]);case 3:return l.call(Z,b[0],b[1],b[2])}return l.apply(Z,b)}},{}],124:[function(l,Z,b){Z.exports=function(l,Z){for(var b=-1,d=null==l?0:l.length;++b<d&&!1!==Z(l[b],b,l););return l}},{}],125:[function(l,Z,b){Z.exports=function(l,Z){for(var b=-1,d=null==l?0:l.length,c=0,m=[];++b<d;){var G=l[b];Z(G,b,l)&&(m[c++]=G)}return m}},{}],126:[function(l,Z,b){var d=l("./_baseIndexOf");Z.exports=function(l,Z){return!(null==l||!l.length)&&d(l,Z,0)>-1}},{"./_baseIndexOf":155}],127:[function(l,Z,b){Z.exports=function(l,Z,b){for(var d=-1,c=null==l?0:l.length;++d<c;)if(b(Z,l[d]))return!0;return!1}},{}],128:[function(l,Z,b){var d=l("./_baseTimes"),c=l("./isArguments"),m=l("./isArray"),G=l("./isBuffer"),W=l("./_isIndex"),i=l("./isTypedArray"),X=Object.prototype.hasOwnProperty;Z.exports=function(l,Z){var b=m(l),n=!b&&c(l),u=!b&&!n&&G(l),a=!b&&!n&&!u&&i(l),V=b||n||u||a,h=V?d(l.length,String):[],t=h.length;for(var y in l)!Z&&!X.call(l,y)||V&&("length"==y||u&&("offset"==y||"parent"==y)||a&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||W(y,t))||h.push(y);return h}},{"./_baseTimes":185,"./_isIndex":241,"./isArguments":302,"./isArray":303,"./isBuffer":306,"./isTypedArray":317}],129:[function(l,Z,b){Z.exports=function(l,Z){for(var b=-1,d=null==l?0:l.length,c=Array(d);++b<d;)c[b]=Z(l[b],b,l);return c}},{}],130:[function(l,Z,b){Z.exports=function(l,Z){for(var b=-1,d=Z.length,c=l.length;++b<d;)l[c+b]=Z[b];return l}},{}],131:[function(l,Z,b){Z.exports=function(l,Z,b,d){var c=-1,m=null==l?0:l.length;for(d&&m&&(b=l[++c]);++c<m;)b=Z(b,l[c],c,l);return b}},{}],132:[function(l,Z,b){Z.exports=function(l,Z){for(var b=-1,d=null==l?0:l.length;++b<d;)if(Z(l[b],b,l))return!0;return!1}},{}],133:[function(l,Z,b){var d=l("./_baseProperty")("length");Z.exports=d},{"./_baseProperty":177}],134:[function(l,Z,b){var d=l("./_baseAssignValue"),c=l("./eq");Z.exports=function(l,Z,b){(void 0!==b&&!c(l[Z],b)||void 0===b&&!(Z in l))&&d(l,Z,b)}},{"./_baseAssignValue":139,"./eq":291}],135:[function(l,Z,b){var d=l("./_baseAssignValue"),c=l("./eq"),m=Object.prototype.hasOwnProperty;Z.exports=function(l,Z,b){var G=l[Z];m.call(l,Z)&&c(G,b)&&(void 0!==b||Z in l)||d(l,Z,b)}},{"./_baseAssignValue":139,"./eq":291}],136:[function(l,Z,b){var d=l("./eq");Z.exports=function(l,Z){for(var b=l.length;b--;)if(d(l[b][0],Z))return b;return-1}},{"./eq":291}],137:[function(l,Z,b){var d=l("./_copyObject"),c=l("./keys");Z.exports=function(l,Z){return l&&d(Z,c(Z),l)}},{"./_copyObject":203,"./keys":319}],138:[function(l,Z,b){var d=l("./_copyObject"),c=l("./keysIn");Z.exports=function(l,Z){return l&&d(Z,c(Z),l)}},{"./_copyObject":203,"./keysIn":320}],139:[function(l,Z,b){var d=l("./_defineProperty");Z.exports=function(l,Z,b){"__proto__"==Z&&d?d(l,Z,{configurable:!0,enumerable:!0,value:b,writable:!0}):l[Z]=b}},{"./_defineProperty":213}],140:[function(l,Z,b){var d=l("./_Stack"),c=l("./_arrayEach"),m=l("./_assignValue"),G=l("./_baseAssign"),W=l("./_baseAssignIn"),i=l("./_cloneBuffer"),X=l("./_copyArray"),n=l("./_copySymbols"),u=l("./_copySymbolsIn"),a=l("./_getAllKeys"),V=l("./_getAllKeysIn"),h=l("./_getTag"),t=l("./_initCloneArray"),y=l("./_initCloneByTag"),Y=l("./_initCloneObject"),e=l("./isArray"),p=l("./isBuffer"),o=l("./isMap"),s=l("./isObject"),I=l("./isSet"),R=l("./keys"),g={};g["[object Arguments]"]=g["[object Array]"]=g["[object ArrayBuffer]"]=g["[object DataView]"]=g["[object Boolean]"]=g["[object Date]"]=g["[object Float32Array]"]=g["[object Float64Array]"]=g["[object Int8Array]"]=g["[object Int16Array]"]=g["[object Int32Array]"]=g["[object Map]"]=g["[object Number]"]=g["[object Object]"]=g["[object RegExp]"]=g["[object Set]"]=g["[object String]"]=g["[object Symbol]"]=g["[object Uint8Array]"]=g["[object Uint8ClampedArray]"]=g["[object Uint16Array]"]=g["[object Uint32Array]"]=!0,g["[object Error]"]=g["[object Function]"]=g["[object WeakMap]"]=!1,Z.exports=function l(Z,b,K,N,H,x){var J,L=1&b,F=2&b,C=4&b;if(K&&(J=H?K(Z,N,H,x):K(Z)),void 0!==J)return J;if(!s(Z))return Z;var S=e(Z);if(S){if(J=t(Z),!L)return X(Z,J)}else{var B=h(Z),k="[object Function]"==B||"[object GeneratorFunction]"==B;if(p(Z))return i(Z,L);if("[object Object]"==B||"[object Arguments]"==B||k&&!H){if(J=F||k?{}:Y(Z),!L)return F?u(Z,W(J,Z)):n(Z,G(J,Z))}else{if(!g[B])return H?Z:{};J=y(Z,B,L)}}x||(x=new d);var v=x.get(Z);if(v)return v;x.set(Z,J),I(Z)?Z.forEach((function(d){J.add(l(d,b,K,d,Z,x))})):o(Z)&&Z.forEach((function(d,c){J.set(c,l(d,b,K,c,Z,x))}));var z=C?F?V:a:F?keysIn:R,M=S?void 0:z(Z);return c(M||Z,(function(d,c){M&&(d=Z[c=d]),m(J,c,l(d,b,K,c,Z,x))})),J}},{"./_Stack":119,"./_arrayEach":124,"./_assignValue":135,"./_baseAssign":137,"./_baseAssignIn":138,"./_cloneBuffer":195,"./_copyArray":202,"./_copySymbols":204,"./_copySymbolsIn":205,"./_getAllKeys":219,"./_getAllKeysIn":220,"./_getTag":228,"./_initCloneArray":237,"./_initCloneByTag":238,"./_initCloneObject":239,"./isArray":303,"./isBuffer":306,"./isMap":310,"./isObject":311,"./isSet":314,"./keys":319}],141:[function(l,Z,b){var d=l("./isObject"),c=Object.create,m=function(){function l(){}return function(Z){if(!d(Z))return{};if(c)return c(Z);l.prototype=Z;var b=new l;return l.prototype=void 0,b}}();Z.exports=m},{"./isObject":311}],142:[function(l,Z,b){var d=l("./_baseForOwn"),c=l("./_createBaseEach")(d);Z.exports=c},{"./_baseForOwn":148,"./_createBaseEach":208}],143:[function(l,Z,b){var d=l("./isSymbol");Z.exports=function(l,Z,b){for(var c=-1,m=l.length;++c<m;){var G=l[c],W=Z(G);if(null!=W&&(void 0===i?W==W&&!d(W):b(W,i)))var i=W,X=G}return X}},{"./isSymbol":316}],144:[function(l,Z,b){var d=l("./_baseEach");Z.exports=function(l,Z){var b=[];return d(l,(function(l,d,c){Z(l,d,c)&&b.push(l)})),b}},{"./_baseEach":142}],145:[function(l,Z,b){Z.exports=function(l,Z,b,d){for(var c=l.length,m=b+(d?1:-1);d?m--:++m<c;)if(Z(l[m],m,l))return m;return-1}},{}],146:[function(l,Z,b){var d=l("./_arrayPush"),c=l("./_isFlattenable");Z.exports=function l(Z,b,m,G,W){var i=-1,X=Z.length;for(m||(m=c),W||(W=[]);++i<X;){var n=Z[i];b>0&&m(n)?b>1?l(n,b-1,m,G,W):d(W,n):G||(W[W.length]=n)}return W}},{"./_arrayPush":130,"./_isFlattenable":240}],147:[function(l,Z,b){var d=l("./_createBaseFor")();Z.exports=d},{"./_createBaseFor":209}],148:[function(l,Z,b){var d=l("./_baseFor"),c=l("./keys");Z.exports=function(l,Z){return l&&d(l,Z,c)}},{"./_baseFor":147,"./keys":319}],149:[function(l,Z,b){var d=l("./_castPath"),c=l("./_toKey");Z.exports=function(l,Z){for(var b=0,m=(Z=d(Z,l)).length;null!=l&&b<m;)l=l[c(Z[b++])];return b&&b==m?l:void 0}},{"./_castPath":193,"./_toKey":283}],150:[function(l,Z,b){var d=l("./_arrayPush"),c=l("./isArray");Z.exports=function(l,Z,b){var m=Z(l);return c(l)?m:d(m,b(l))}},{"./_arrayPush":130,"./isArray":303}],151:[function(l,Z,b){var d=l("./_Symbol"),c=l("./_getRawTag"),m=l("./_objectToString"),G=d?d.toStringTag:void 0;Z.exports=function(l){return null==l?void 0===l?"[object Undefined]":"[object Null]":G&&G in Object(l)?c(l):m(l)}},{"./_Symbol":120,"./_getRawTag":225,"./_objectToString":265}],152:[function(l,Z,b){Z.exports=function(l,Z){return l>Z}},{}],153:[function(l,Z,b){var d=Object.prototype.hasOwnProperty;Z.exports=function(l,Z){return null!=l&&d.call(l,Z)}},{}],154:[function(l,Z,b){Z.exports=function(l,Z){return null!=l&&Z in Object(l)}},{}],155:[function(l,Z,b){var d=l("./_baseFindIndex"),c=l("./_baseIsNaN"),m=l("./_strictIndexOf");Z.exports=function(l,Z,b){return Z==Z?m(l,Z,b):d(l,c,b)}},{"./_baseFindIndex":145,"./_baseIsNaN":161,"./_strictIndexOf":280}],156:[function(l,Z,b){var d=l("./_baseGetTag"),c=l("./isObjectLike");Z.exports=function(l){return c(l)&&"[object Arguments]"==d(l)}},{"./_baseGetTag":151,"./isObjectLike":312}],157:[function(l,Z,b){var d=l("./_baseIsEqualDeep"),c=l("./isObjectLike");Z.exports=function l(Z,b,m,G,W){return Z===b||(null==Z||null==b||!c(Z)&&!c(b)?Z!=Z&&b!=b:d(Z,b,m,G,l,W))}},{"./_baseIsEqualDeep":158,"./isObjectLike":312}],158:[function(l,Z,b){var d=l("./_Stack"),c=l("./_equalArrays"),m=l("./_equalByTag"),G=l("./_equalObjects"),W=l("./_getTag"),i=l("./isArray"),X=l("./isBuffer"),n=l("./isTypedArray"),u="[object Object]",a=Object.prototype.hasOwnProperty;Z.exports=function(l,Z,b,V,h,t){var y=i(l),Y=i(Z),e=y?"[object Array]":W(l),p=Y?"[object Array]":W(Z),o=(e="[object Arguments]"==e?u:e)==u,s=(p="[object Arguments]"==p?u:p)==u,I=e==p;if(I&&X(l)){if(!X(Z))return!1;y=!0,o=!1}if(I&&!o)return t||(t=new d),y||n(l)?c(l,Z,b,V,h,t):m(l,Z,e,b,V,h,t);if(!(1&b)){var R=o&&a.call(l,"__wrapped__"),g=s&&a.call(Z,"__wrapped__");if(R||g){var K=R?l.value():l,N=g?Z.value():Z;return t||(t=new d),h(K,N,b,V,t)}}return!!I&&(t||(t=new d),G(l,Z,b,V,h,t))}},{"./_Stack":119,"./_equalArrays":214,"./_equalByTag":215,"./_equalObjects":216,"./_getTag":228,"./isArray":303,"./isBuffer":306,"./isTypedArray":317}],159:[function(l,Z,b){var d=l("./_getTag"),c=l("./isObjectLike");Z.exports=function(l){return c(l)&&"[object Map]"==d(l)}},{"./_getTag":228,"./isObjectLike":312}],160:[function(l,Z,b){var d=l("./_Stack"),c=l("./_baseIsEqual");Z.exports=function(l,Z,b,m){var G=b.length,W=G,i=!m;if(null==l)return!W;for(l=Object(l);G--;){var X=b[G];if(i&&X[2]?X[1]!==l[X[0]]:!(X[0]in l))return!1}for(;++G<W;){var n=(X=b[G])[0],u=l[n],a=X[1];if(i&&X[2]){if(void 0===u&&!(n in l))return!1}else{var V=new d;if(m)var h=m(u,a,n,l,Z,V);if(!(void 0===h?c(a,u,3,m,V):h))return!1}}return!0}},{"./_Stack":119,"./_baseIsEqual":157}],161:[function(l,Z,b){Z.exports=function(l){return l!=l}},{}],162:[function(l,Z,b){var d=l("./isFunction"),c=l("./_isMasked"),m=l("./isObject"),G=l("./_toSource"),W=/^\[object .+?Constructor\]$/,i=Function.prototype,X=Object.prototype,n=i.toString,u=X.hasOwnProperty,a=RegExp("^"+n.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");Z.exports=function(l){return!(!m(l)||c(l))&&(d(l)?a:W).test(G(l))}},{"./_isMasked":245,"./_toSource":284,"./isFunction":308,"./isObject":311}],163:[function(l,Z,b){var d=l("./_getTag"),c=l("./isObjectLike");Z.exports=function(l){return c(l)&&"[object Set]"==d(l)}},{"./_getTag":228,"./isObjectLike":312}],164:[function(l,Z,b){var d=l("./_baseGetTag"),c=l("./isLength"),m=l("./isObjectLike"),G={};G["[object Float32Array]"]=G["[object Float64Array]"]=G["[object Int8Array]"]=G["[object Int16Array]"]=G["[object Int32Array]"]=G["[object Uint8Array]"]=G["[object Uint8ClampedArray]"]=G["[object Uint16Array]"]=G["[object Uint32Array]"]=!0,G["[object Arguments]"]=G["[object Array]"]=G["[object ArrayBuffer]"]=G["[object Boolean]"]=G["[object DataView]"]=G["[object Date]"]=G["[object Error]"]=G["[object Function]"]=G["[object Map]"]=G["[object Number]"]=G["[object Object]"]=G["[object RegExp]"]=G["[object Set]"]=G["[object String]"]=G["[object WeakMap]"]=!1,Z.exports=function(l){return m(l)&&c(l.length)&&!!G[d(l)]}},{"./_baseGetTag":151,"./isLength":309,"./isObjectLike":312}],165:[function(l,Z,b){var d=l("./_baseMatches"),c=l("./_baseMatchesProperty"),m=l("./identity"),G=l("./isArray"),W=l("./property");Z.exports=function(l){return"function"==typeof l?l:null==l?m:"object"==typeof l?G(l)?c(l[0],l[1]):d(l):W(l)}},{"./_baseMatches":170,"./_baseMatchesProperty":171,"./identity":301,"./isArray":303,"./property":332}],166:[function(l,Z,b){var d=l("./_isPrototype"),c=l("./_nativeKeys"),m=Object.prototype.hasOwnProperty;Z.exports=function(l){if(!d(l))return c(l);var Z=[];for(var b in Object(l))m.call(l,b)&&"constructor"!=b&&Z.push(b);return Z}},{"./_isPrototype":246,"./_nativeKeys":262}],167:[function(l,Z,b){var d=l("./isObject"),c=l("./_isPrototype"),m=l("./_nativeKeysIn"),G=Object.prototype.hasOwnProperty;Z.exports=function(l){if(!d(l))return m(l);var Z=c(l),b=[];for(var W in l)("constructor"!=W||!Z&&G.call(l,W))&&b.push(W);return b}},{"./_isPrototype":246,"./_nativeKeysIn":263,"./isObject":311}],168:[function(l,Z,b){Z.exports=function(l,Z){return l<Z}},{}],169:[function(l,Z,b){var d=l("./_baseEach"),c=l("./isArrayLike");Z.exports=function(l,Z){var b=-1,m=c(l)?Array(l.length):[];return d(l,(function(l,d,c){m[++b]=Z(l,d,c)})),m}},{"./_baseEach":142,"./isArrayLike":304}],170:[function(l,Z,b){var d=l("./_baseIsMatch"),c=l("./_getMatchData"),m=l("./_matchesStrictComparable");Z.exports=function(l){var Z=c(l);return 1==Z.length&&Z[0][2]?m(Z[0][0],Z[0][1]):function(b){return b===l||d(b,l,Z)}}},{"./_baseIsMatch":160,"./_getMatchData":222,"./_matchesStrictComparable":259}],171:[function(l,Z,b){var d=l("./_baseIsEqual"),c=l("./get"),m=l("./hasIn"),G=l("./_isKey"),W=l("./_isStrictComparable"),i=l("./_matchesStrictComparable"),X=l("./_toKey");Z.exports=function(l,Z){return G(l)&&W(Z)?i(X(l),Z):function(b){var G=c(b,l);return void 0===G&&G===Z?m(b,l):d(Z,G,3)}}},{"./_baseIsEqual":157,"./_isKey":243,"./_isStrictComparable":247,"./_matchesStrictComparable":259,"./_toKey":283,"./get":298,"./hasIn":300}],172:[function(l,Z,b){var d=l("./_Stack"),c=l("./_assignMergeValue"),m=l("./_baseFor"),G=l("./_baseMergeDeep"),W=l("./isObject"),i=l("./keysIn"),X=l("./_safeGet");Z.exports=function l(Z,b,n,u,a){Z!==b&&m(b,(function(m,i){if(a||(a=new d),W(m))G(Z,b,i,n,l,u,a);else{var V=u?u(X(Z,i),m,i+"",Z,b,a):void 0;void 0===V&&(V=m),c(Z,i,V)}}),i)}},{"./_Stack":119,"./_assignMergeValue":134,"./_baseFor":147,"./_baseMergeDeep":173,"./_safeGet":269,"./isObject":311,"./keysIn":320}],173:[function(l,Z,b){var d=l("./_assignMergeValue"),c=l("./_cloneBuffer"),m=l("./_cloneTypedArray"),G=l("./_copyArray"),W=l("./_initCloneObject"),i=l("./isArguments"),X=l("./isArray"),n=l("./isArrayLikeObject"),u=l("./isBuffer"),a=l("./isFunction"),V=l("./isObject"),h=l("./isPlainObject"),t=l("./isTypedArray"),y=l("./_safeGet"),Y=l("./toPlainObject");Z.exports=function(l,Z,b,e,p,o,s){var I=y(l,b),R=y(Z,b),g=s.get(R);if(g)d(l,b,g);else{var K=o?o(I,R,b+"",l,Z,s):void 0,N=void 0===K;if(N){var H=X(R),x=!H&&u(R),J=!H&&!x&&t(R);K=R,H||x||J?X(I)?K=I:n(I)?K=G(I):x?(N=!1,K=c(R,!0)):J?(N=!1,K=m(R,!0)):K=[]:h(R)||i(R)?(K=I,i(I)?K=Y(I):V(I)&&!a(I)||(K=W(R))):N=!1}N&&(s.set(R,K),p(K,R,e,o,s),s.delete(R)),d(l,b,K)}}},{"./_assignMergeValue":134,"./_cloneBuffer":195,"./_cloneTypedArray":199,"./_copyArray":202,"./_initCloneObject":239,"./_safeGet":269,"./isArguments":302,"./isArray":303,"./isArrayLikeObject":305,"./isBuffer":306,"./isFunction":308,"./isObject":311,"./isPlainObject":313,"./isTypedArray":317,"./toPlainObject":342}],174:[function(l,Z,b){var d=l("./_arrayMap"),c=l("./_baseIteratee"),m=l("./_baseMap"),G=l("./_baseSortBy"),W=l("./_baseUnary"),i=l("./_compareMultiple"),X=l("./identity");Z.exports=function(l,Z,b){var n=-1;Z=d(Z.length?Z:[X],W(c));var u=m(l,(function(l,b,c){return{criteria:d(Z,(function(Z){return Z(l)})),index:++n,value:l}}));return G(u,(function(l,Z){return i(l,Z,b)}))}},{"./_arrayMap":129,"./_baseIteratee":165,"./_baseMap":169,"./_baseSortBy":184,"./_baseUnary":187,"./_compareMultiple":201,"./identity":301}],175:[function(l,Z,b){var d=l("./_basePickBy"),c=l("./hasIn");Z.exports=function(l,Z){return d(l,Z,(function(Z,b){return c(l,b)}))}},{"./_basePickBy":176,"./hasIn":300}],176:[function(l,Z,b){var d=l("./_baseGet"),c=l("./_baseSet"),m=l("./_castPath");Z.exports=function(l,Z,b){for(var G=-1,W=Z.length,i={};++G<W;){var X=Z[G],n=d(l,X);b(n,X)&&c(i,m(X,l),n)}return i}},{"./_baseGet":149,"./_baseSet":182,"./_castPath":193}],177:[function(l,Z,b){Z.exports=function(l){return function(Z){return null==Z?void 0:Z[l]}}},{}],178:[function(l,Z,b){var d=l("./_baseGet");Z.exports=function(l){return function(Z){return d(Z,l)}}},{"./_baseGet":149}],179:[function(l,Z,b){var d=Math.ceil,c=Math.max;Z.exports=function(l,Z,b,m){for(var G=-1,W=c(d((Z-l)/(b||1)),0),i=Array(W);W--;)i[m?W:++G]=l,l+=b;return i}},{}],180:[function(l,Z,b){Z.exports=function(l,Z,b,d,c){return c(l,(function(l,c,m){b=d?(d=!1,l):Z(b,l,c,m)})),b}},{}],181:[function(l,Z,b){var d=l("./identity"),c=l("./_overRest"),m=l("./_setToString");Z.exports=function(l,Z){return m(c(l,Z,d),l+"")}},{"./_overRest":267,"./_setToString":273,"./identity":301}],182:[function(l,Z,b){var d=l("./_assignValue"),c=l("./_castPath"),m=l("./_isIndex"),G=l("./isObject"),W=l("./_toKey");Z.exports=function(l,Z,b,i){if(!G(l))return l;for(var X=-1,n=(Z=c(Z,l)).length,u=n-1,a=l;null!=a&&++X<n;){var V=W(Z[X]),h=b;if(X!=u){var t=a[V];void 0===(h=i?i(t,V,a):void 0)&&(h=G(t)?t:m(Z[X+1])?[]:{})}d(a,V,h),a=a[V]}return l}},{"./_assignValue":135,"./_castPath":193,"./_isIndex":241,"./_toKey":283,"./isObject":311}],183:[function(l,Z,b){var d=l("./constant"),c=l("./_defineProperty"),m=l("./identity"),G=c?function(l,Z){return c(l,"toString",{configurable:!0,enumerable:!1,value:d(Z),writable:!0})}:m;Z.exports=G},{"./_defineProperty":213,"./constant":288,"./identity":301}],184:[function(l,Z,b){Z.exports=function(l,Z){var b=l.length;for(l.sort(Z);b--;)l[b]=l[b].value;return l}},{}],185:[function(l,Z,b){Z.exports=function(l,Z){for(var b=-1,d=Array(l);++b<l;)d[b]=Z(b);return d}},{}],186:[function(l,Z,b){var d=l("./_Symbol"),c=l("./_arrayMap"),m=l("./isArray"),G=l("./isSymbol"),W=d?d.prototype:void 0,i=W?W.toString:void 0;Z.exports=function l(Z){if("string"==typeof Z)return Z;if(m(Z))return c(Z,l)+"";if(G(Z))return i?i.call(Z):"";var b=Z+"";return"0"==b&&1/Z==-1/0?"-0":b}},{"./_Symbol":120,"./_arrayMap":129,"./isArray":303,"./isSymbol":316}],187:[function(l,Z,b){Z.exports=function(l){return function(Z){return l(Z)}}},{}],188:[function(l,Z,b){var d=l("./_SetCache"),c=l("./_arrayIncludes"),m=l("./_arrayIncludesWith"),G=l("./_cacheHas"),W=l("./_createSet"),i=l("./_setToArray");Z.exports=function(l,Z,b){var X=-1,n=c,u=l.length,a=!0,V=[],h=V;if(b)a=!1,n=m;else if(u>=200){var t=Z?null:W(l);if(t)return i(t);a=!1,n=G,h=new d}else h=Z?[]:V;l:for(;++X<u;){var y=l[X],Y=Z?Z(y):y;if(y=b||0!==y?y:0,a&&Y==Y){for(var e=h.length;e--;)if(h[e]===Y)continue l;Z&&h.push(Y),V.push(y)}else n(h,Y,b)||(h!==V&&h.push(Y),V.push(y))}return V}},{"./_SetCache":118,"./_arrayIncludes":126,"./_arrayIncludesWith":127,"./_cacheHas":191,"./_createSet":212,"./_setToArray":272}],189:[function(l,Z,b){var d=l("./_arrayMap");Z.exports=function(l,Z){return d(Z,(function(Z){return l[Z]}))}},{"./_arrayMap":129}],190:[function(l,Z,b){Z.exports=function(l,Z,b){for(var d=-1,c=l.length,m=Z.length,G={};++d<c;){var W=d<m?Z[d]:void 0;b(G,l[d],W)}return G}},{}],191:[function(l,Z,b){Z.exports=function(l,Z){return l.has(Z)}},{}],192:[function(l,Z,b){var d=l("./identity");Z.exports=function(l){return"function"==typeof l?l:d}},{"./identity":301}],193:[function(l,Z,b){var d=l("./isArray"),c=l("./_isKey"),m=l("./_stringToPath"),G=l("./toString");Z.exports=function(l,Z){return d(l)?l:c(l,Z)?[l]:m(G(l))}},{"./_isKey":243,"./_stringToPath":282,"./isArray":303,"./toString":343}],194:[function(l,Z,b){var d=l("./_Uint8Array");Z.exports=function(l){var Z=new l.constructor(l.byteLength);return new d(Z).set(new d(l)),Z}},{"./_Uint8Array":121}],195:[function(l,Z,b){var d=l("./_root"),c="object"==typeof b&&b&&!b.nodeType&&b,m=c&&"object"==typeof Z&&Z&&!Z.nodeType&&Z,G=m&&m.exports===c?d.Buffer:void 0,W=G?G.allocUnsafe:void 0;Z.exports=function(l,Z){if(Z)return l.slice();var b=l.length,d=W?W(b):new l.constructor(b);return l.copy(d),d}},{"./_root":268}],196:[function(l,Z,b){var d=l("./_cloneArrayBuffer");Z.exports=function(l,Z){var b=Z?d(l.buffer):l.buffer;return new l.constructor(b,l.byteOffset,l.byteLength)}},{"./_cloneArrayBuffer":194}],197:[function(l,Z,b){var d=/\w*$/;Z.exports=function(l){var Z=new l.constructor(l.source,d.exec(l));return Z.lastIndex=l.lastIndex,Z}},{}],198:[function(l,Z,b){var d=l("./_Symbol"),c=d?d.prototype:void 0,m=c?c.valueOf:void 0;Z.exports=function(l){return m?Object(m.call(l)):{}}},{"./_Symbol":120}],199:[function(l,Z,b){var d=l("./_cloneArrayBuffer");Z.exports=function(l,Z){var b=Z?d(l.buffer):l.buffer;return new l.constructor(b,l.byteOffset,l.length)}},{"./_cloneArrayBuffer":194}],200:[function(l,Z,b){var d=l("./isSymbol");Z.exports=function(l,Z){if(l!==Z){var b=void 0!==l,c=null===l,m=l==l,G=d(l),W=void 0!==Z,i=null===Z,X=Z==Z,n=d(Z);if(!i&&!n&&!G&&l>Z||G&&W&&X&&!i&&!n||c&&W&&X||!b&&X||!m)return 1;if(!c&&!G&&!n&&l<Z||n&&b&&m&&!c&&!G||i&&b&&m||!W&&m||!X)return-1}return 0}},{"./isSymbol":316}],201:[function(l,Z,b){var d=l("./_compareAscending");Z.exports=function(l,Z,b){for(var c=-1,m=l.criteria,G=Z.criteria,W=m.length,i=b.length;++c<W;){var X=d(m[c],G[c]);if(X)return c>=i?X:X*("desc"==b[c]?-1:1)}return l.index-Z.index}},{"./_compareAscending":200}],202:[function(l,Z,b){Z.exports=function(l,Z){var b=-1,d=l.length;for(Z||(Z=Array(d));++b<d;)Z[b]=l[b];return Z}},{}],203:[function(l,Z,b){var d=l("./_assignValue"),c=l("./_baseAssignValue");Z.exports=function(l,Z,b,m){var G=!b;b||(b={});for(var W=-1,i=Z.length;++W<i;){var X=Z[W],n=m?m(b[X],l[X],X,b,l):void 0;void 0===n&&(n=l[X]),G?c(b,X,n):d(b,X,n)}return b}},{"./_assignValue":135,"./_baseAssignValue":139}],204:[function(l,Z,b){var d=l("./_copyObject"),c=l("./_getSymbols");Z.exports=function(l,Z){return d(l,c(l),Z)}},{"./_copyObject":203,"./_getSymbols":226}],205:[function(l,Z,b){var d=l("./_copyObject"),c=l("./_getSymbolsIn");Z.exports=function(l,Z){return d(l,c(l),Z)}},{"./_copyObject":203,"./_getSymbolsIn":227}],206:[function(l,Z,b){var d=l("./_root")["__core-js_shared__"];Z.exports=d},{"./_root":268}],207:[function(l,Z,b){var d=l("./_baseRest"),c=l("./_isIterateeCall");Z.exports=function(l){return d((function(Z,b){var d=-1,m=b.length,G=m>1?b[m-1]:void 0,W=m>2?b[2]:void 0;for(G=l.length>3&&"function"==typeof G?(m--,G):void 0,W&&c(b[0],b[1],W)&&(G=m<3?void 0:G,m=1),Z=Object(Z);++d<m;){var i=b[d];i&&l(Z,i,d,G)}return Z}))}},{"./_baseRest":181,"./_isIterateeCall":242}],208:[function(l,Z,b){var d=l("./isArrayLike");Z.exports=function(l,Z){return function(b,c){if(null==b)return b;if(!d(b))return l(b,c);for(var m=b.length,G=Z?m:-1,W=Object(b);(Z?G--:++G<m)&&!1!==c(W[G],G,W););return b}}},{"./isArrayLike":304}],209:[function(l,Z,b){Z.exports=function(l){return function(Z,b,d){for(var c=-1,m=Object(Z),G=d(Z),W=G.length;W--;){var i=G[l?W:++c];if(!1===b(m[i],i,m))break}return Z}}},{}],210:[function(l,Z,b){var d=l("./_baseIteratee"),c=l("./isArrayLike"),m=l("./keys");Z.exports=function(l){return function(Z,b,G){var W=Object(Z);if(!c(Z)){var i=d(b,3);Z=m(Z),b=function(l){return i(W[l],l,W)}}var X=l(Z,b,G);return X>-1?W[i?Z[X]:X]:void 0}}},{"./_baseIteratee":165,"./isArrayLike":304,"./keys":319}],211:[function(l,Z,b){var d=l("./_baseRange"),c=l("./_isIterateeCall"),m=l("./toFinite");Z.exports=function(l){return function(Z,b,G){return G&&"number"!=typeof G&&c(Z,b,G)&&(b=G=void 0),Z=m(Z),void 0===b?(b=Z,Z=0):b=m(b),G=void 0===G?Z<b?1:-1:m(G),d(Z,b,G,l)}}},{"./_baseRange":179,"./_isIterateeCall":242,"./toFinite":339}],212:[function(l,Z,b){var d=l("./_Set"),c=l("./noop"),m=l("./_setToArray"),G=d&&1/m(new d([,-0]))[1]==1/0?function(l){return new d(l)}:c;Z.exports=G},{"./_Set":117,"./_setToArray":272,"./noop":329}],213:[function(l,Z,b){var d=l("./_getNative"),c=function(){try{var l=d(Object,"defineProperty");return l({},"",{}),l}catch(l){}}();Z.exports=c},{"./_getNative":223}],214:[function(l,Z,b){var d=l("./_SetCache"),c=l("./_arraySome"),m=l("./_cacheHas");Z.exports=function(l,Z,b,G,W,i){var X=1&b,n=l.length,u=Z.length;if(n!=u&&!(X&&u>n))return!1;var a=i.get(l);if(a&&i.get(Z))return a==Z;var V=-1,h=!0,t=2&b?new d:void 0;for(i.set(l,Z),i.set(Z,l);++V<n;){var y=l[V],Y=Z[V];if(G)var e=X?G(Y,y,V,Z,l,i):G(y,Y,V,l,Z,i);if(void 0!==e){if(e)continue;h=!1;break}if(t){if(!c(Z,(function(l,Z){if(!m(t,Z)&&(y===l||W(y,l,b,G,i)))return t.push(Z)}))){h=!1;break}}else if(y!==Y&&!W(y,Y,b,G,i)){h=!1;break}}return i.delete(l),i.delete(Z),h}},{"./_SetCache":118,"./_arraySome":132,"./_cacheHas":191}],215:[function(l,Z,b){var d=l("./_Symbol"),c=l("./_Uint8Array"),m=l("./eq"),G=l("./_equalArrays"),W=l("./_mapToArray"),i=l("./_setToArray"),X=d?d.prototype:void 0,n=X?X.valueOf:void 0;Z.exports=function(l,Z,b,d,X,u,a){switch(b){case"[object DataView]":if(l.byteLength!=Z.byteLength||l.byteOffset!=Z.byteOffset)return!1;l=l.buffer,Z=Z.buffer;case"[object ArrayBuffer]":return!(l.byteLength!=Z.byteLength||!u(new c(l),new c(Z)));case"[object Boolean]":case"[object Date]":case"[object Number]":return m(+l,+Z);case"[object Error]":return l.name==Z.name&&l.message==Z.message;case"[object RegExp]":case"[object String]":return l==Z+"";case"[object Map]":var V=W;case"[object Set]":var h=1&d;if(V||(V=i),l.size!=Z.size&&!h)return!1;var t=a.get(l);if(t)return t==Z;d|=2,a.set(l,Z);var y=G(V(l),V(Z),d,X,u,a);return a.delete(l),y;case"[object Symbol]":if(n)return n.call(l)==n.call(Z)}return!1}},{"./_Symbol":120,"./_Uint8Array":121,"./_equalArrays":214,"./_mapToArray":258,"./_setToArray":272,"./eq":291}],216:[function(l,Z,b){var d=l("./_getAllKeys"),c=Object.prototype.hasOwnProperty;Z.exports=function(l,Z,b,m,G,W){var i=1&b,X=d(l),n=X.length;if(n!=d(Z).length&&!i)return!1;for(var u=n;u--;){var a=X[u];if(!(i?a in Z:c.call(Z,a)))return!1}var V=W.get(l);if(V&&W.get(Z))return V==Z;var h=!0;W.set(l,Z),W.set(Z,l);for(var t=i;++u<n;){var y=l[a=X[u]],Y=Z[a];if(m)var e=i?m(Y,y,a,Z,l,W):m(y,Y,a,l,Z,W);if(!(void 0===e?y===Y||G(y,Y,b,m,W):e)){h=!1;break}t||(t="constructor"==a)}if(h&&!t){var p=l.constructor,o=Z.constructor;p==o||!("constructor"in l)||!("constructor"in Z)||"function"==typeof p&&p instanceof p&&"function"==typeof o&&o instanceof o||(h=!1)}return W.delete(l),W.delete(Z),h}},{"./_getAllKeys":219}],217:[function(l,Z,b){var d=l("./flatten"),c=l("./_overRest"),m=l("./_setToString");Z.exports=function(l){return m(c(l,void 0,d),l+"")}},{"./_overRest":267,"./_setToString":273,"./flatten":295}],218:[function(l,b,d){(function(l){var Z="object"==typeof l&&l&&l.Object===Object&&l;b.exports=Z}).call(this,void 0!==Z?Z:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],219:[function(l,Z,b){var d=l("./_baseGetAllKeys"),c=l("./_getSymbols"),m=l("./keys");Z.exports=function(l){return d(l,m,c)}},{"./_baseGetAllKeys":150,"./_getSymbols":226,"./keys":319}],220:[function(l,Z,b){var d=l("./_baseGetAllKeys"),c=l("./_getSymbolsIn"),m=l("./keysIn");Z.exports=function(l){return d(l,m,c)}},{"./_baseGetAllKeys":150,"./_getSymbolsIn":227,"./keysIn":320}],221:[function(l,Z,b){var d=l("./_isKeyable");Z.exports=function(l,Z){var b=l.__data__;return d(Z)?b["string"==typeof Z?"string":"hash"]:b.map}},{"./_isKeyable":244}],222:[function(l,Z,b){var d=l("./_isStrictComparable"),c=l("./keys");Z.exports=function(l){for(var Z=c(l),b=Z.length;b--;){var m=Z[b],G=l[m];Z[b]=[m,G,d(G)]}return Z}},{"./_isStrictComparable":247,"./keys":319}],223:[function(l,Z,b){var d=l("./_baseIsNative"),c=l("./_getValue");Z.exports=function(l,Z){var b=c(l,Z);return d(b)?b:void 0}},{"./_baseIsNative":162,"./_getValue":229}],224:[function(l,Z,b){var d=l("./_overArg")(Object.getPrototypeOf,Object);Z.exports=d},{"./_overArg":266}],225:[function(l,Z,b){var d=l("./_Symbol"),c=Object.prototype,m=c.hasOwnProperty,G=c.toString,W=d?d.toStringTag:void 0;Z.exports=function(l){var Z=m.call(l,W),b=l[W];try{l[W]=void 0;var d=!0}catch(l){}var c=G.call(l);return d&&(Z?l[W]=b:delete l[W]),c}},{"./_Symbol":120}],226:[function(l,Z,b){var d=l("./_arrayFilter"),c=l("./stubArray"),m=Object.prototype.propertyIsEnumerable,G=Object.getOwnPropertySymbols,W=G?function(l){return null==l?[]:(l=Object(l),d(G(l),(function(Z){return m.call(l,Z)})))}:c;Z.exports=W},{"./_arrayFilter":125,"./stubArray":337}],227:[function(l,Z,b){var d=l("./_arrayPush"),c=l("./_getPrototype"),m=l("./_getSymbols"),G=l("./stubArray"),W=Object.getOwnPropertySymbols?function(l){for(var Z=[];l;)d(Z,m(l)),l=c(l);return Z}:G;Z.exports=W},{"./_arrayPush":130,"./_getPrototype":224,"./_getSymbols":226,"./stubArray":337}],228:[function(l,Z,b){var d=l("./_DataView"),c=l("./_Map"),m=l("./_Promise"),G=l("./_Set"),W=l("./_WeakMap"),i=l("./_baseGetTag"),X=l("./_toSource"),n=X(d),u=X(c),a=X(m),V=X(G),h=X(W),t=i;(d&&"[object DataView]"!=t(new d(new ArrayBuffer(1)))||c&&"[object Map]"!=t(new c)||m&&"[object Promise]"!=t(m.resolve())||G&&"[object Set]"!=t(new G)||W&&"[object WeakMap]"!=t(new W))&&(t=function(l){var Z=i(l),b="[object Object]"==Z?l.constructor:void 0,d=b?X(b):"";if(d)switch(d){case n:return"[object DataView]";case u:return"[object Map]";case a:return"[object Promise]";case V:return"[object Set]";case h:return"[object WeakMap]"}return Z}),Z.exports=t},{"./_DataView":111,"./_Map":114,"./_Promise":116,"./_Set":117,"./_WeakMap":122,"./_baseGetTag":151,"./_toSource":284}],229:[function(l,Z,b){Z.exports=function(l,Z){return null==l?void 0:l[Z]}},{}],230:[function(l,Z,b){var d=l("./_castPath"),c=l("./isArguments"),m=l("./isArray"),G=l("./_isIndex"),W=l("./isLength"),i=l("./_toKey");Z.exports=function(l,Z,b){for(var X=-1,n=(Z=d(Z,l)).length,u=!1;++X<n;){var a=i(Z[X]);if(!(u=null!=l&&b(l,a)))break;l=l[a]}return u||++X!=n?u:!!(n=null==l?0:l.length)&&W(n)&&G(a,n)&&(m(l)||c(l))}},{"./_castPath":193,"./_isIndex":241,"./_toKey":283,"./isArguments":302,"./isArray":303,"./isLength":309}],231:[function(l,Z,b){var d=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");Z.exports=function(l){return d.test(l)}},{}],232:[function(l,Z,b){var d=l("./_nativeCreate");Z.exports=function(){this.__data__=d?d(null):{},this.size=0}},{"./_nativeCreate":261}],233:[function(l,Z,b){Z.exports=function(l){var Z=this.has(l)&&delete this.__data__[l];return this.size-=Z?1:0,Z}},{}],234:[function(l,Z,b){var d=l("./_nativeCreate"),c=Object.prototype.hasOwnProperty;Z.exports=function(l){var Z=this.__data__;if(d){var b=Z[l];return"__lodash_hash_undefined__"===b?void 0:b}return c.call(Z,l)?Z[l]:void 0}},{"./_nativeCreate":261}],235:[function(l,Z,b){var d=l("./_nativeCreate"),c=Object.prototype.hasOwnProperty;Z.exports=function(l){var Z=this.__data__;return d?void 0!==Z[l]:c.call(Z,l)}},{"./_nativeCreate":261}],236:[function(l,Z,b){var d=l("./_nativeCreate");Z.exports=function(l,Z){var b=this.__data__;return this.size+=this.has(l)?0:1,b[l]=d&&void 0===Z?"__lodash_hash_undefined__":Z,this}},{"./_nativeCreate":261}],237:[function(l,Z,b){var d=Object.prototype.hasOwnProperty;Z.exports=function(l){var Z=l.length,b=new l.constructor(Z);return Z&&"string"==typeof l[0]&&d.call(l,"index")&&(b.index=l.index,b.input=l.input),b}},{}],238:[function(l,Z,b){var d=l("./_cloneArrayBuffer"),c=l("./_cloneDataView"),m=l("./_cloneRegExp"),G=l("./_cloneSymbol"),W=l("./_cloneTypedArray");Z.exports=function(l,Z,b){var i=l.constructor;switch(Z){case"[object ArrayBuffer]":return d(l);case"[object Boolean]":case"[object Date]":return new i(+l);case"[object DataView]":return c(l,b);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return W(l,b);case"[object Map]":return new i;case"[object Number]":case"[object String]":return new i(l);case"[object RegExp]":return m(l);case"[object Set]":return new i;case"[object Symbol]":return G(l)}}},{"./_cloneArrayBuffer":194,"./_cloneDataView":196,"./_cloneRegExp":197,"./_cloneSymbol":198,"./_cloneTypedArray":199}],239:[function(l,Z,b){var d=l("./_baseCreate"),c=l("./_getPrototype"),m=l("./_isPrototype");Z.exports=function(l){return"function"!=typeof l.constructor||m(l)?{}:d(c(l))}},{"./_baseCreate":141,"./_getPrototype":224,"./_isPrototype":246}],240:[function(l,Z,b){var d=l("./_Symbol"),c=l("./isArguments"),m=l("./isArray"),G=d?d.isConcatSpreadable:void 0;Z.exports=function(l){return m(l)||c(l)||!!(G&&l&&l[G])}},{"./_Symbol":120,"./isArguments":302,"./isArray":303}],241:[function(l,Z,b){var d=/^(?:0|[1-9]\d*)$/;Z.exports=function(l,Z){var b=typeof l;return!!(Z=null==Z?9007199254740991:Z)&&("number"==b||"symbol"!=b&&d.test(l))&&l>-1&&l%1==0&&l<Z}},{}],242:[function(l,Z,b){var d=l("./eq"),c=l("./isArrayLike"),m=l("./_isIndex"),G=l("./isObject");Z.exports=function(l,Z,b){if(!G(b))return!1;var W=typeof Z;return!!("number"==W?c(b)&&m(Z,b.length):"string"==W&&Z in b)&&d(b[Z],l)}},{"./_isIndex":241,"./eq":291,"./isArrayLike":304,"./isObject":311}],243:[function(l,Z,b){var d=l("./isArray"),c=l("./isSymbol"),m=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,G=/^\w*$/;Z.exports=function(l,Z){if(d(l))return!1;var b=typeof l;return!("number"!=b&&"symbol"!=b&&"boolean"!=b&&null!=l&&!c(l))||G.test(l)||!m.test(l)||null!=Z&&l in Object(Z)}},{"./isArray":303,"./isSymbol":316}],244:[function(l,Z,b){Z.exports=function(l){var Z=typeof l;return"string"==Z||"number"==Z||"symbol"==Z||"boolean"==Z?"__proto__"!==l:null===l}},{}],245:[function(l,Z,b){var d,c=l("./_coreJsData"),m=(d=/[^.]+$/.exec(c&&c.keys&&c.keys.IE_PROTO||""))?"Symbol(src)_1."+d:"";Z.exports=function(l){return!!m&&m in l}},{"./_coreJsData":206}],246:[function(l,Z,b){var d=Object.prototype;Z.exports=function(l){var Z=l&&l.constructor;return l===("function"==typeof Z&&Z.prototype||d)}},{}],247:[function(l,Z,b){var d=l("./isObject");Z.exports=function(l){return l==l&&!d(l)}},{"./isObject":311}],248:[function(l,Z,b){Z.exports=function(){this.__data__=[],this.size=0}},{}],249:[function(l,Z,b){var d=l("./_assocIndexOf"),c=Array.prototype.splice;Z.exports=function(l){var Z=this.__data__,b=d(Z,l);return!(b<0||(b==Z.length-1?Z.pop():c.call(Z,b,1),--this.size,0))}},{"./_assocIndexOf":136}],250:[function(l,Z,b){var d=l("./_assocIndexOf");Z.exports=function(l){var Z=this.__data__,b=d(Z,l);return b<0?void 0:Z[b][1]}},{"./_assocIndexOf":136}],251:[function(l,Z,b){var d=l("./_assocIndexOf");Z.exports=function(l){return d(this.__data__,l)>-1}},{"./_assocIndexOf":136}],252:[function(l,Z,b){var d=l("./_assocIndexOf");Z.exports=function(l,Z){var b=this.__data__,c=d(b,l);return c<0?(++this.size,b.push([l,Z])):b[c][1]=Z,this}},{"./_assocIndexOf":136}],253:[function(l,Z,b){var d=l("./_Hash"),c=l("./_ListCache"),m=l("./_Map");Z.exports=function(){this.size=0,this.__data__={hash:new d,map:new(m||c),string:new d}}},{"./_Hash":112,"./_ListCache":113,"./_Map":114}],254:[function(l,Z,b){var d=l("./_getMapData");Z.exports=function(l){var Z=d(this,l).delete(l);return this.size-=Z?1:0,Z}},{"./_getMapData":221}],255:[function(l,Z,b){var d=l("./_getMapData");Z.exports=function(l){return d(this,l).get(l)}},{"./_getMapData":221}],256:[function(l,Z,b){var d=l("./_getMapData");Z.exports=function(l){return d(this,l).has(l)}},{"./_getMapData":221}],257:[function(l,Z,b){var d=l("./_getMapData");Z.exports=function(l,Z){var b=d(this,l),c=b.size;return b.set(l,Z),this.size+=b.size==c?0:1,this}},{"./_getMapData":221}],258:[function(l,Z,b){Z.exports=function(l){var Z=-1,b=Array(l.size);return l.forEach((function(l,d){b[++Z]=[d,l]})),b}},{}],259:[function(l,Z,b){Z.exports=function(l,Z){return function(b){return null!=b&&b[l]===Z&&(void 0!==Z||l in Object(b))}}},{}],260:[function(l,Z,b){var d=l("./memoize");Z.exports=function(l){var Z=d(l,(function(l){return 500===b.size&&b.clear(),l})),b=Z.cache;return Z}},{"./memoize":325}],261:[function(l,Z,b){var d=l("./_getNative")(Object,"create");Z.exports=d},{"./_getNative":223}],262:[function(l,Z,b){var d=l("./_overArg")(Object.keys,Object);Z.exports=d},{"./_overArg":266}],263:[function(l,Z,b){Z.exports=function(l){var Z=[];if(null!=l)for(var b in Object(l))Z.push(b);return Z}},{}],264:[function(l,Z,b){var d=l("./_freeGlobal"),c="object"==typeof b&&b&&!b.nodeType&&b,m=c&&"object"==typeof Z&&Z&&!Z.nodeType&&Z,G=m&&m.exports===c&&d.process,W=function(){try{var l=m&&m.require&&m.require("util").types;return l||G&&G.binding&&G.binding("util")}catch(l){}}();Z.exports=W},{"./_freeGlobal":218}],265:[function(l,Z,b){var d=Object.prototype.toString;Z.exports=function(l){return d.call(l)}},{}],266:[function(l,Z,b){Z.exports=function(l,Z){return function(b){return l(Z(b))}}},{}],267:[function(l,Z,b){var d=l("./_apply"),c=Math.max;Z.exports=function(l,Z,b){return Z=c(void 0===Z?l.length-1:Z,0),function(){for(var m=arguments,G=-1,W=c(m.length-Z,0),i=Array(W);++G<W;)i[G]=m[Z+G];G=-1;for(var X=Array(Z+1);++G<Z;)X[G]=m[G];return X[Z]=b(i),d(l,this,X)}}},{"./_apply":123}],268:[function(l,Z,b){var d=l("./_freeGlobal"),c="object"==typeof self&&self&&self.Object===Object&&self,m=d||c||Function("return this")();Z.exports=m},{"./_freeGlobal":218}],269:[function(l,Z,b){Z.exports=function(l,Z){if(("constructor"!==Z||"function"!=typeof l[Z])&&"__proto__"!=Z)return l[Z]}},{}],270:[function(l,Z,b){Z.exports=function(l){return this.__data__.set(l,"__lodash_hash_undefined__"),this}},{}],271:[function(l,Z,b){Z.exports=function(l){return this.__data__.has(l)}},{}],272:[function(l,Z,b){Z.exports=function(l){var Z=-1,b=Array(l.size);return l.forEach((function(l){b[++Z]=l})),b}},{}],273:[function(l,Z,b){var d=l("./_baseSetToString"),c=l("./_shortOut")(d);Z.exports=c},{"./_baseSetToString":183,"./_shortOut":274}],274:[function(l,Z,b){var d=Date.now;Z.exports=function(l){var Z=0,b=0;return function(){var c=d(),m=16-(c-b);if(b=c,m>0){if(++Z>=800)return arguments[0]}else Z=0;return l.apply(void 0,arguments)}}},{}],275:[function(l,Z,b){var d=l("./_ListCache");Z.exports=function(){this.__data__=new d,this.size=0}},{"./_ListCache":113}],276:[function(l,Z,b){Z.exports=function(l){var Z=this.__data__,b=Z.delete(l);return this.size=Z.size,b}},{}],277:[function(l,Z,b){Z.exports=function(l){return this.__data__.get(l)}},{}],278:[function(l,Z,b){Z.exports=function(l){return this.__data__.has(l)}},{}],279:[function(l,Z,b){var d=l("./_ListCache"),c=l("./_Map"),m=l("./_MapCache");Z.exports=function(l,Z){var b=this.__data__;if(b instanceof d){var G=b.__data__;if(!c||G.length<199)return G.push([l,Z]),this.size=++b.size,this;b=this.__data__=new m(G)}return b.set(l,Z),this.size=b.size,this}},{"./_ListCache":113,"./_Map":114,"./_MapCache":115}],280:[function(l,Z,b){Z.exports=function(l,Z,b){for(var d=b-1,c=l.length;++d<c;)if(l[d]===Z)return d;return-1}},{}],281:[function(l,Z,b){var d=l("./_asciiSize"),c=l("./_hasUnicode"),m=l("./_unicodeSize");Z.exports=function(l){return c(l)?m(l):d(l)}},{"./_asciiSize":133,"./_hasUnicode":231,"./_unicodeSize":285}],282:[function(l,Z,b){var d=l("./_memoizeCapped"),c=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,m=/\\(\\)?/g,G=d((function(l){var Z=[];return 46===l.charCodeAt(0)&&Z.push(""),l.replace(c,(function(l,b,d,c){Z.push(d?c.replace(m,"$1"):b||l)})),Z}));Z.exports=G},{"./_memoizeCapped":260}],283:[function(l,Z,b){var d=l("./isSymbol");Z.exports=function(l){if("string"==typeof l||d(l))return l;var Z=l+"";return"0"==Z&&1/l==-1/0?"-0":Z}},{"./isSymbol":316}],284:[function(l,Z,b){var d=Function.prototype.toString;Z.exports=function(l){if(null!=l){try{return d.call(l)}catch(l){}try{return l+""}catch(l){}}return""}},{}],285:[function(l,Z,b){var d="[\\ud800-\\udfff]",c="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",m="\\ud83c[\\udffb-\\udfff]",G="[^\\ud800-\\udfff]",W="(?:\\ud83c[\\udde6-\\uddff]){2}",i="[\\ud800-\\udbff][\\udc00-\\udfff]",X="(?:"+c+"|"+m+")?",n="[\\ufe0e\\ufe0f]?"+X+"(?:\\u200d(?:"+[G,W,i].join("|")+")[\\ufe0e\\ufe0f]?"+X+")*",u="(?:"+[G+c+"?",c,W,i,d].join("|")+")",a=RegExp(m+"(?="+m+")|"+u+n,"g");Z.exports=function(l){for(var Z=a.lastIndex=0;a.test(l);)++Z;return Z}},{}],286:[function(l,Z,b){var d=l("./_baseClone");Z.exports=function(l){return d(l,4)}},{"./_baseClone":140}],287:[function(l,Z,b){var d=l("./_baseClone");Z.exports=function(l){return d(l,5)}},{"./_baseClone":140}],288:[function(l,Z,b){Z.exports=function(l){return function(){return l}}},{}],289:[function(l,Z,b){var d=l("./_baseRest"),c=l("./eq"),m=l("./_isIterateeCall"),G=l("./keysIn"),W=Object.prototype,i=W.hasOwnProperty,X=d((function(l,Z){l=Object(l);var b=-1,d=Z.length,X=d>2?Z[2]:void 0;for(X&&m(Z[0],Z[1],X)&&(d=1);++b<d;)for(var n=Z[b],u=G(n),a=-1,V=u.length;++a<V;){var h=u[a],t=l[h];(void 0===t||c(t,W[h])&&!i.call(l,h))&&(l[h]=n[h])}return l}));Z.exports=X},{"./_baseRest":181,"./_isIterateeCall":242,"./eq":291,"./keysIn":320}],290:[function(l,Z,b){Z.exports=l("./forEach")},{"./forEach":296}],291:[function(l,Z,b){Z.exports=function(l,Z){return l===Z||l!=l&&Z!=Z}},{}],292:[function(l,Z,b){var d=l("./_arrayFilter"),c=l("./_baseFilter"),m=l("./_baseIteratee"),G=l("./isArray");Z.exports=function(l,Z){return(G(l)?d:c)(l,m(Z,3))}},{"./_arrayFilter":125,"./_baseFilter":144,"./_baseIteratee":165,"./isArray":303}],293:[function(l,Z,b){var d=l("./_createFind")(l("./findIndex"));Z.exports=d},{"./_createFind":210,"./findIndex":294}],294:[function(l,Z,b){var d=l("./_baseFindIndex"),c=l("./_baseIteratee"),m=l("./toInteger"),G=Math.max;Z.exports=function(l,Z,b){var W=null==l?0:l.length;if(!W)return-1;var i=null==b?0:m(b);return i<0&&(i=G(W+i,0)),d(l,c(Z,3),i)}},{"./_baseFindIndex":145,"./_baseIteratee":165,"./toInteger":340}],295:[function(l,Z,b){var d=l("./_baseFlatten");Z.exports=function(l){return null!=l&&l.length?d(l,1):[]}},{"./_baseFlatten":146}],296:[function(l,Z,b){var d=l("./_arrayEach"),c=l("./_baseEach"),m=l("./_castFunction"),G=l("./isArray");Z.exports=function(l,Z){return(G(l)?d:c)(l,m(Z))}},{"./_arrayEach":124,"./_baseEach":142,"./_castFunction":192,"./isArray":303}],297:[function(l,Z,b){var d=l("./_baseFor"),c=l("./_castFunction"),m=l("./keysIn");Z.exports=function(l,Z){return null==l?l:d(l,c(Z),m)}},{"./_baseFor":147,"./_castFunction":192,"./keysIn":320}],298:[function(l,Z,b){var d=l("./_baseGet");Z.exports=function(l,Z,b){var c=null==l?void 0:d(l,Z);return void 0===c?b:c}},{"./_baseGet":149}],299:[function(l,Z,b){var d=l("./_baseHas"),c=l("./_hasPath");Z.exports=function(l,Z){return null!=l&&c(l,Z,d)}},{"./_baseHas":153,"./_hasPath":230}],300:[function(l,Z,b){var d=l("./_baseHasIn"),c=l("./_hasPath");Z.exports=function(l,Z){return null!=l&&c(l,Z,d)}},{"./_baseHasIn":154,"./_hasPath":230}],301:[function(l,Z,b){Z.exports=function(l){return l}},{}],302:[function(l,Z,b){var d=l("./_baseIsArguments"),c=l("./isObjectLike"),m=Object.prototype,G=m.hasOwnProperty,W=m.propertyIsEnumerable,i=d(function(){return arguments}())?d:function(l){return c(l)&&G.call(l,"callee")&&!W.call(l,"callee")};Z.exports=i},{"./_baseIsArguments":156,"./isObjectLike":312}],303:[function(l,Z,b){var d=Array.isArray;Z.exports=d},{}],304:[function(l,Z,b){var d=l("./isFunction"),c=l("./isLength");Z.exports=function(l){return null!=l&&c(l.length)&&!d(l)}},{"./isFunction":308,"./isLength":309}],305:[function(l,Z,b){var d=l("./isArrayLike"),c=l("./isObjectLike");Z.exports=function(l){return c(l)&&d(l)}},{"./isArrayLike":304,"./isObjectLike":312}],306:[function(l,Z,b){var d=l("./_root"),c=l("./stubFalse"),m="object"==typeof b&&b&&!b.nodeType&&b,G=m&&"object"==typeof Z&&Z&&!Z.nodeType&&Z,W=G&&G.exports===m?d.Buffer:void 0,i=(W?W.isBuffer:void 0)||c;Z.exports=i},{"./_root":268,"./stubFalse":338}],307:[function(l,Z,b){var d=l("./_baseKeys"),c=l("./_getTag"),m=l("./isArguments"),G=l("./isArray"),W=l("./isArrayLike"),i=l("./isBuffer"),X=l("./_isPrototype"),n=l("./isTypedArray"),u=Object.prototype.hasOwnProperty;Z.exports=function(l){if(null==l)return!0;if(W(l)&&(G(l)||"string"==typeof l||"function"==typeof l.splice||i(l)||n(l)||m(l)))return!l.length;var Z=c(l);if("[object Map]"==Z||"[object Set]"==Z)return!l.size;if(X(l))return!d(l).length;for(var b in l)if(u.call(l,b))return!1;return!0}},{"./_baseKeys":166,"./_getTag":228,"./_isPrototype":246,"./isArguments":302,"./isArray":303,"./isArrayLike":304,"./isBuffer":306,"./isTypedArray":317}],308:[function(l,Z,b){var d=l("./_baseGetTag"),c=l("./isObject");Z.exports=function(l){if(!c(l))return!1;var Z=d(l);return"[object Function]"==Z||"[object GeneratorFunction]"==Z||"[object AsyncFunction]"==Z||"[object Proxy]"==Z}},{"./_baseGetTag":151,"./isObject":311}],309:[function(l,Z,b){Z.exports=function(l){return"number"==typeof l&&l>-1&&l%1==0&&l<=9007199254740991}},{}],310:[function(l,Z,b){var d=l("./_baseIsMap"),c=l("./_baseUnary"),m=l("./_nodeUtil"),G=m&&m.isMap,W=G?c(G):d;Z.exports=W},{"./_baseIsMap":159,"./_baseUnary":187,"./_nodeUtil":264}],311:[function(l,Z,b){Z.exports=function(l){var Z=typeof l;return null!=l&&("object"==Z||"function"==Z)}},{}],312:[function(l,Z,b){Z.exports=function(l){return null!=l&&"object"==typeof l}},{}],313:[function(l,Z,b){var d=l("./_baseGetTag"),c=l("./_getPrototype"),m=l("./isObjectLike"),G=Function.prototype,W=Object.prototype,i=G.toString,X=W.hasOwnProperty,n=i.call(Object);Z.exports=function(l){if(!m(l)||"[object Object]"!=d(l))return!1;var Z=c(l);if(null===Z)return!0;var b=X.call(Z,"constructor")&&Z.constructor;return"function"==typeof b&&b instanceof b&&i.call(b)==n}},{"./_baseGetTag":151,"./_getPrototype":224,"./isObjectLike":312}],314:[function(l,Z,b){var d=l("./_baseIsSet"),c=l("./_baseUnary"),m=l("./_nodeUtil"),G=m&&m.isSet,W=G?c(G):d;Z.exports=W},{"./_baseIsSet":163,"./_baseUnary":187,"./_nodeUtil":264}],315:[function(l,Z,b){var d=l("./_baseGetTag"),c=l("./isArray"),m=l("./isObjectLike");Z.exports=function(l){return"string"==typeof l||!c(l)&&m(l)&&"[object String]"==d(l)}},{"./_baseGetTag":151,"./isArray":303,"./isObjectLike":312}],316:[function(l,Z,b){var d=l("./_baseGetTag"),c=l("./isObjectLike");Z.exports=function(l){return"symbol"==typeof l||c(l)&&"[object Symbol]"==d(l)}},{"./_baseGetTag":151,"./isObjectLike":312}],317:[function(l,Z,b){var d=l("./_baseIsTypedArray"),c=l("./_baseUnary"),m=l("./_nodeUtil"),G=m&&m.isTypedArray,W=G?c(G):d;Z.exports=W},{"./_baseIsTypedArray":164,"./_baseUnary":187,"./_nodeUtil":264}],318:[function(l,Z,b){Z.exports=function(l){return void 0===l}},{}],319:[function(l,Z,b){var d=l("./_arrayLikeKeys"),c=l("./_baseKeys"),m=l("./isArrayLike");Z.exports=function(l){return m(l)?d(l):c(l)}},{"./_arrayLikeKeys":128,"./_baseKeys":166,"./isArrayLike":304}],320:[function(l,Z,b){var d=l("./_arrayLikeKeys"),c=l("./_baseKeysIn"),m=l("./isArrayLike");Z.exports=function(l){return m(l)?d(l,!0):c(l)}},{"./_arrayLikeKeys":128,"./_baseKeysIn":167,"./isArrayLike":304}],321:[function(l,Z,b){Z.exports=function(l){var Z=null==l?0:l.length;return Z?l[Z-1]:void 0}},{}],322:[function(l,Z,b){var d=l("./_arrayMap"),c=l("./_baseIteratee"),m=l("./_baseMap"),G=l("./isArray");Z.exports=function(l,Z){return(G(l)?d:m)(l,c(Z,3))}},{"./_arrayMap":129,"./_baseIteratee":165,"./_baseMap":169,"./isArray":303}],323:[function(l,Z,b){var d=l("./_baseAssignValue"),c=l("./_baseForOwn"),m=l("./_baseIteratee");Z.exports=function(l,Z){var b={};return Z=m(Z,3),c(l,(function(l,c,m){d(b,c,Z(l,c,m))})),b}},{"./_baseAssignValue":139,"./_baseForOwn":148,"./_baseIteratee":165}],324:[function(l,Z,b){var d=l("./_baseExtremum"),c=l("./_baseGt"),m=l("./identity");Z.exports=function(l){return l&&l.length?d(l,m,c):void 0}},{"./_baseExtremum":143,"./_baseGt":152,"./identity":301}],325:[function(l,Z,b){var d=l("./_MapCache");function c(l,Z){if("function"!=typeof l||null!=Z&&"function"!=typeof Z)throw new TypeError("Expected a function");var b=function(){var d=arguments,c=Z?Z.apply(this,d):d[0],m=b.cache;if(m.has(c))return m.get(c);var G=l.apply(this,d);return b.cache=m.set(c,G)||m,G};return b.cache=new(c.Cache||d),b}c.Cache=d,Z.exports=c},{"./_MapCache":115}],326:[function(l,Z,b){var d=l("./_baseMerge"),c=l("./_createAssigner")((function(l,Z,b){d(l,Z,b)}));Z.exports=c},{"./_baseMerge":172,"./_createAssigner":207}],327:[function(l,Z,b){var d=l("./_baseExtremum"),c=l("./_baseLt"),m=l("./identity");Z.exports=function(l){return l&&l.length?d(l,m,c):void 0}},{"./_baseExtremum":143,"./_baseLt":168,"./identity":301}],328:[function(l,Z,b){var d=l("./_baseExtremum"),c=l("./_baseIteratee"),m=l("./_baseLt");Z.exports=function(l,Z){return l&&l.length?d(l,c(Z,2),m):void 0}},{"./_baseExtremum":143,"./_baseIteratee":165,"./_baseLt":168}],329:[function(l,Z,b){Z.exports=function(){}},{}],330:[function(l,Z,b){var d=l("./_root");Z.exports=function(){return d.Date.now()}},{"./_root":268}],331:[function(l,Z,b){var d=l("./_basePick"),c=l("./_flatRest")((function(l,Z){return null==l?{}:d(l,Z)}));Z.exports=c},{"./_basePick":175,"./_flatRest":217}],332:[function(l,Z,b){var d=l("./_baseProperty"),c=l("./_basePropertyDeep"),m=l("./_isKey"),G=l("./_toKey");Z.exports=function(l){return m(l)?d(G(l)):c(l)}},{"./_baseProperty":177,"./_basePropertyDeep":178,"./_isKey":243,"./_toKey":283}],333:[function(l,Z,b){var d=l("./_createRange")();Z.exports=d},{"./_createRange":211}],334:[function(l,Z,b){var d=l("./_arrayReduce"),c=l("./_baseEach"),m=l("./_baseIteratee"),G=l("./_baseReduce"),W=l("./isArray");Z.exports=function(l,Z,b){var i=W(l)?d:G,X=arguments.length<3;return i(l,m(Z,4),b,X,c)}},{"./_arrayReduce":131,"./_baseEach":142,"./_baseIteratee":165,"./_baseReduce":180,"./isArray":303}],335:[function(l,Z,b){var d=l("./_baseKeys"),c=l("./_getTag"),m=l("./isArrayLike"),G=l("./isString"),W=l("./_stringSize");Z.exports=function(l){if(null==l)return 0;if(m(l))return G(l)?W(l):l.length;var Z=c(l);return"[object Map]"==Z||"[object Set]"==Z?l.size:d(l).length}},{"./_baseKeys":166,"./_getTag":228,"./_stringSize":281,"./isArrayLike":304,"./isString":315}],336:[function(l,Z,b){var d=l("./_baseFlatten"),c=l("./_baseOrderBy"),m=l("./_baseRest"),G=l("./_isIterateeCall"),W=m((function(l,Z){if(null==l)return[];var b=Z.length;return b>1&&G(l,Z[0],Z[1])?Z=[]:b>2&&G(Z[0],Z[1],Z[2])&&(Z=[Z[0]]),c(l,d(Z,1),[])}));Z.exports=W},{"./_baseFlatten":146,"./_baseOrderBy":174,"./_baseRest":181,"./_isIterateeCall":242}],337:[function(l,Z,b){Z.exports=function(){return[]}},{}],338:[function(l,Z,b){Z.exports=function(){return!1}},{}],339:[function(l,Z,b){var d=l("./toNumber");Z.exports=function(l){return l?(l=d(l))===1/0||l===-1/0?17976931348623157e292*(l<0?-1:1):l==l?l:0:0===l?l:0}},{"./toNumber":341}],340:[function(l,Z,b){var d=l("./toFinite");Z.exports=function(l){var Z=d(l),b=Z%1;return Z==Z?b?Z-b:Z:0}},{"./toFinite":339}],341:[function(l,Z,b){var d=l("./isObject"),c=l("./isSymbol"),m=/^\s+|\s+$/g,G=/^[-+]0x[0-9a-f]+$/i,W=/^0b[01]+$/i,i=/^0o[0-7]+$/i,X=parseInt;Z.exports=function(l){if("number"==typeof l)return l;if(c(l))return NaN;if(d(l)){var Z="function"==typeof l.valueOf?l.valueOf():l;l=d(Z)?Z+"":Z}if("string"!=typeof l)return 0===l?l:+l;l=l.replace(m,"");var b=W.test(l);return b||i.test(l)?X(l.slice(2),b?2:8):G.test(l)?NaN:+l}},{"./isObject":311,"./isSymbol":316}],342:[function(l,Z,b){var d=l("./_copyObject"),c=l("./keysIn");Z.exports=function(l){return d(l,c(l))}},{"./_copyObject":203,"./keysIn":320}],343:[function(l,Z,b){var d=l("./_baseToString");Z.exports=function(l){return null==l?"":d(l)}},{"./_baseToString":186}],344:[function(l,Z,b){var d=l("./_arrayEach"),c=l("./_baseCreate"),m=l("./_baseForOwn"),G=l("./_baseIteratee"),W=l("./_getPrototype"),i=l("./isArray"),X=l("./isBuffer"),n=l("./isFunction"),u=l("./isObject"),a=l("./isTypedArray");Z.exports=function(l,Z,b){var V=i(l),h=V||X(l)||a(l);if(Z=G(Z,4),null==b){var t=l&&l.constructor;b=h?V?new t:[]:u(l)&&n(t)?c(W(l)):{}}return(h?d:m)(l,(function(l,d,c){return Z(b,l,d,c)})),b}},{"./_arrayEach":124,"./_baseCreate":141,"./_baseForOwn":148,"./_baseIteratee":165,"./_getPrototype":224,"./isArray":303,"./isBuffer":306,"./isFunction":308,"./isObject":311,"./isTypedArray":317}],345:[function(l,Z,b){var d=l("./_baseFlatten"),c=l("./_baseRest"),m=l("./_baseUniq"),G=l("./isArrayLikeObject"),W=c((function(l){return m(d(l,1,G,!0))}));Z.exports=W},{"./_baseFlatten":146,"./_baseRest":181,"./_baseUniq":188,"./isArrayLikeObject":305}],346:[function(l,Z,b){var d=l("./toString"),c=0;Z.exports=function(l){var Z=++c;return d(l)+Z}},{"./toString":343}],347:[function(l,Z,b){var d=l("./_baseValues"),c=l("./keys");Z.exports=function(l){return null==l?[]:d(l,c(l))}},{"./_baseValues":189,"./keys":319}],348:[function(l,Z,b){var d=l("./_assignValue"),c=l("./_baseZipObject");Z.exports=function(l,Z){return c(l||[],Z||[],d)}},{"./_assignValue":135,"./_baseZipObject":190}]},{},[1])(1)}).call(this,b(3))},19:function(l){l.exports=JSON.parse('{"cfaJson":{"functionNames":["main"],"functionCallEdges":{},"combinedNodes":{"10":[12,13,14,15,16,17],"30":[31,2,3,4]},"combinedNodesLabels":{"10":"10 int __CPAchecker_TMP_0 = i;\\n12 i = i + 1;\\n13 __CPAchecker_TMP_0;\\n14 int __CPAchecker_TMP_1 = a;\\n15 a = a + 1;\\n16 __CPAchecker_TMP_1;\\n17 ","30":"30 int main();\\n31 Function start dummy edge\\n2 int i = 0;\\n3 int a = 0;\\n4 while"},"mergedNodes":[31,2,3,4,12,13,14,15,16,17],"errorPath":[{"val":"","file":"<none>","importance":0,"line":0,"argelem":0,"source":1,"target":30,"desc":"INIT GLOBAL VARS"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":9,"argelem":5,"source":30,"target":31,"desc":"int main();"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":7,"source":31,"target":2,"desc":"Function start dummy edge"},{"val":"i == 0;\\n","file":"doc/examples/example_bug.c","importance":1,"line":10,"argelem":8,"source":2,"target":3,"desc":"int i = 0;"},{"val":"a == 0;\\n","file":"doc/examples/example_bug.c","importance":1,"line":11,"argelem":14,"source":3,"target":4,"desc":"int a = 0;"},{"val":"","file":"doc/examples/example_bug.c","importance":1,"line":13,"argelem":17,"source":4,"target":5,"desc":"while"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":19,"source":5,"target":6,"desc":""},{"val":"i == 0;\\ni == 0;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":21,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":25,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 1;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":27,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":29,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":30,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 1;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":31,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":33,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":34,"source":17,"target":8,"desc":""},{"val":"i == 1;\\na == 1;\\ni == 1;\\na == 1;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":35,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":37,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":151,"source":5,"target":6,"desc":""},{"val":"i == 1;\\ni == 1;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":152,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":153,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 2;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":154,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":155,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":156,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 2;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":158,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":159,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":160,"source":17,"target":8,"desc":""},{"val":"i == 2;\\na == 2;\\ni == 2;\\na == 2;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":161,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":162,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":252,"source":5,"target":6,"desc":""},{"val":"i == 2;\\ni == 2;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":253,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":255,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 3;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":256,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":257,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":258,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 3;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":260,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":261,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":262,"source":17,"target":8,"desc":""},{"val":"i == 3;\\na == 3;\\ni == 3;\\na == 3;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":263,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":264,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":377,"source":5,"target":6,"desc":""},{"val":"i == 3;\\ni == 3;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":378,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":379,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 4;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":380,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":381,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":382,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 4;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":384,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":385,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":386,"source":17,"target":8,"desc":""},{"val":"i == 4;\\na == 4;\\ni == 4;\\na == 4;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":387,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":388,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":526,"source":5,"target":6,"desc":""},{"val":"i == 4;\\ni == 4;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":527,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":528,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 5;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":529,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":530,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":531,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 5;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":532,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":533,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":534,"source":17,"target":8,"desc":""},{"val":"i == 5;\\na == 5;\\ni == 5;\\na == 5;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":536,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":537,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":686,"source":5,"target":6,"desc":""},{"val":"i == 5;\\ni == 5;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":687,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":689,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 6;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":690,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":691,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":692,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 6;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":693,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":694,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":695,"source":17,"target":8,"desc":""},{"val":"i == 6;\\na == 6;\\ni == 6;\\na == 6;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":696,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":698,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":870,"source":5,"target":6,"desc":""},{"val":"i == 6;\\ni == 6;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":871,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":872,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 7;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":873,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":874,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":875,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 7;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":876,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":877,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":878,"source":17,"target":8,"desc":""},{"val":"i == 7;\\na == 7;\\ni == 7;\\na == 7;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":879,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":880,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":1081,"source":5,"target":6,"desc":""},{"val":"i == 7;\\ni == 7;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":1082,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":1083,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 8;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":1084,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":1085,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":1087,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 8;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":1088,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":1089,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":1090,"source":17,"target":8,"desc":""},{"val":"i == 8;\\na == 8;\\ni == 8;\\na == 8;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":1091,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":1092,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":1339,"source":5,"target":6,"desc":""},{"val":"i == 8;\\ni == 8;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":1340,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":1341,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 9;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":1342,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":1343,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":1344,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 9;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":1345,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":1347,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":1348,"source":17,"target":8,"desc":""},{"val":"i == 9;\\na == 9;\\ni == 9;\\na == 9;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":1349,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":1350,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":1716,"source":5,"target":6,"desc":""},{"val":"i == 9;\\ni == 9;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":1717,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":1719,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 10;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":1720,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":1721,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":1722,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 10;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":1723,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":1725,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":1726,"source":17,"target":8,"desc":""},{"val":"i == 10;\\na == 10;\\ni == 10;\\na == 10;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":1727,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":1728,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":2041,"source":5,"target":6,"desc":""},{"val":"i == 10;\\ni == 10;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":2042,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":2043,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 11;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":2044,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":2046,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":2047,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 11;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":2048,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":2049,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":2050,"source":17,"target":8,"desc":""},{"val":"i == 11;\\na == 11;\\ni == 11;\\na == 11;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":2051,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":2052,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":2362,"source":5,"target":6,"desc":""},{"val":"i == 11;\\ni == 11;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":2363,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":2364,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 12;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":2365,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":2366,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":2367,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 12;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":2368,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":2369,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":2370,"source":17,"target":8,"desc":""},{"val":"i == 12;\\na == 12;\\ni == 12;\\na == 12;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":2371,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":2372,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":2721,"source":5,"target":6,"desc":""},{"val":"i == 12;\\ni == 12;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":2722,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":2726,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 13;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":2729,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":2733,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":2735,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 13;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":2736,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":2740,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":2741,"source":17,"target":8,"desc":""},{"val":"i == 13;\\na == 13;\\ni == 13;\\na == 13;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":2743,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":2746,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":3255,"source":5,"target":6,"desc":""},{"val":"i == 13;\\ni == 13;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":3256,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":3257,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 14;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":3258,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":3259,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":3260,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 14;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":3261,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":3262,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":3263,"source":17,"target":8,"desc":""},{"val":"i == 14;\\na == 14;\\ni == 14;\\na == 14;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":3264,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":3265,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":3601,"source":5,"target":6,"desc":""},{"val":"i == 14;\\ni == 14;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":3602,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":3603,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 15;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":3604,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":3605,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":3606,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 15;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":3607,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":3608,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":3609,"source":17,"target":8,"desc":""},{"val":"i == 15;\\na == 15;\\ni == 15;\\na == 15;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":3610,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":3611,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":3969,"source":5,"target":6,"desc":""},{"val":"i == 15;\\ni == 15;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":3970,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":3971,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 16;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":3972,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":3973,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":3974,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 16;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":3975,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":3976,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":3977,"source":17,"target":8,"desc":""},{"val":"i == 16;\\na == 16;\\ni == 16;\\na == 16;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":3978,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":3979,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":4359,"source":5,"target":6,"desc":""},{"val":"i == 16;\\ni == 16;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":4360,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":4361,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 17;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":4362,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":4363,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":4364,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 17;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":4365,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":4366,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":4367,"source":17,"target":8,"desc":""},{"val":"i == 17;\\na == 17;\\ni == 17;\\na == 17;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":4368,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":4369,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":4771,"source":5,"target":6,"desc":""},{"val":"i == 17;\\ni == 17;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":4772,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":4773,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 18;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":4774,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":4775,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":4776,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 18;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":4777,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":4778,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":4779,"source":17,"target":8,"desc":""},{"val":"i == 18;\\na == 18;\\ni == 18;\\na == 18;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":4780,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":4781,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":5205,"source":5,"target":6,"desc":""},{"val":"i == 18;\\ni == 18;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":5206,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":5207,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 19;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":5208,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":5209,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":5210,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 19;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":5211,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":5212,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":5213,"source":17,"target":8,"desc":""},{"val":"i == 19;\\na == 19;\\ni == 19;\\na == 19;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":5214,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":5215,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":5661,"source":5,"target":6,"desc":""},{"val":"i == 19;\\ni == 19;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":5662,"source":6,"target":10,"desc":"[!(i == 20)]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":5663,"source":10,"target":12,"desc":"int __CPAchecker_TMP_0 = i;"},{"val":"i == 20;\\n","file":"doc/examples/example_bug.c","importance":1,"line":17,"argelem":5664,"source":12,"target":13,"desc":"i = i + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":17,"argelem":5665,"source":13,"target":14,"desc":"__CPAchecker_TMP_0;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":5666,"source":14,"target":15,"desc":"int __CPAchecker_TMP_1 = a;"},{"val":"a == 20;\\n","file":"doc/examples/example_bug.c","importance":1,"line":18,"argelem":5667,"source":15,"target":16,"desc":"a = a + 1;"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":18,"argelem":5668,"source":16,"target":17,"desc":"__CPAchecker_TMP_1;"},{"val":"","file":"<none>","importance":0,"line":0,"argelem":5669,"source":17,"target":8,"desc":""},{"val":"i == 20;\\na == 20;\\ni == 20;\\na == 20;","file":"doc/examples/example_bug.c","importance":1,"line":21,"argelem":5670,"source":8,"target":18,"desc":"[!(i != a)]"},{"val":"","file":"<none>","importance":1,"line":0,"argelem":5671,"source":18,"target":5,"desc":""},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":13,"argelem":6139,"source":5,"target":6,"desc":""},{"val":"i == 20;\\ni == 20;","file":"doc/examples/example_bug.c","importance":1,"line":14,"argelem":6140,"source":6,"target":9,"desc":"[i == 20]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":15,"argelem":6141,"source":9,"target":21,"desc":"Goto: LOOPEND"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":26,"argelem":6142,"source":21,"target":22,"desc":"Label: LOOPEND"},{"val":"a == 20;\\na == 20;","file":"doc/examples/example_bug.c","importance":1,"line":28,"argelem":6143,"source":22,"target":24,"desc":"[a != 19]"},{"val":"","file":"doc/examples/example_bug.c","importance":0,"line":29,"argelem":6144,"source":24,"target":27,"desc":"Goto: ERROR"}],"nodes":[{"func":"main","loop":false,"index":0,"rpid":0,"type":"exit"},{"func":"main","loop":false,"index":1,"rpid":25,"type":"entry"},{"func":"main","loop":false,"index":2,"rpid":22,"type":""},{"func":"main","loop":false,"index":3,"rpid":21,"type":""},{"func":"main","loop":false,"index":4,"rpid":20,"type":""},{"func":"main","loop":true,"index":5,"rpid":19,"type":""},{"func":"main","loop":false,"index":6,"rpid":18,"type":""},{"func":"main","loop":false,"index":8,"rpid":10,"type":""},{"func":"main","loop":false,"index":9,"rpid":7,"type":""},{"func":"main","loop":false,"index":10,"rpid":17,"type":""},{"func":"main","loop":false,"index":12,"rpid":16,"type":""},{"func":"main","loop":false,"index":13,"rpid":15,"type":""},{"func":"main","loop":false,"index":14,"rpid":14,"type":""},{"func":"main","loop":false,"index":15,"rpid":13,"type":""},{"func":"main","loop":false,"index":16,"rpid":12,"type":""},{"func":"main","loop":false,"index":17,"rpid":11,"type":""},{"func":"main","loop":false,"index":18,"rpid":9,"type":""},{"func":"main","loop":false,"index":19,"rpid":8,"type":""},{"func":"main","loop":false,"index":21,"rpid":6,"type":""},{"func":"main","loop":false,"index":22,"rpid":5,"type":""},{"func":"main","loop":false,"index":23,"rpid":4,"type":""},{"func":"main","loop":false,"index":24,"rpid":3,"type":""},{"func":"main","loop":false,"index":27,"rpid":2,"type":""},{"func":"main","loop":false,"index":28,"rpid":1,"type":""},{"func":"main","loop":false,"index":30,"rpid":24,"type":""},{"func":"main","loop":false,"index":31,"rpid":23,"type":""}],"edges":[{"file":"doc/examples/example_bug.c","line":34,"source":28,"type":"ReturnStatementEdge","stmt":"return -1;","target":0},{"file":"doc/examples/example_bug.c","line":11,"source":3,"type":"DeclarationEdge","stmt":"int a = 0;","target":4},{"file":"doc/examples/example_bug.c","line":17,"source":12,"type":"StatementEdge","stmt":"i = i + 1;","target":13},{"file":"doc/examples/example_bug.c","line":13,"source":5,"type":"BlankEdge","stmt":"","target":6},{"file":"doc/examples/example_bug.c","line":14,"source":6,"type":"AssumeEdge","stmt":"[!(i == 20)]","target":10},{"file":"doc/examples/example_bug.c","line":22,"source":19,"type":"BlankEdge","stmt":"Goto: ERROR","target":27},{"file":"<none>","line":0,"source":17,"type":"BlankEdge","stmt":"","target":8},{"file":"<none>","line":0,"source":18,"type":"BlankEdge","stmt":"","target":5},{"file":"doc/examples/example_bug.c","line":15,"source":9,"type":"BlankEdge","stmt":"Goto: LOOPEND","target":21},{"file":"doc/examples/example_bug.c","line":33,"source":27,"type":"BlankEdge","stmt":"Label: ERROR","target":28},{"file":"doc/examples/example_bug.c","line":18,"source":16,"type":"StatementEdge","stmt":"__CPAchecker_TMP_1;","target":17},{"file":"doc/examples/example_bug.c","line":28,"source":22,"type":"AssumeEdge","stmt":"[!(a != 19)]","target":23},{"file":"doc/examples/example_bug.c","line":28,"source":22,"type":"AssumeEdge","stmt":"[a != 19]","target":24},{"file":"<none>","line":0,"source":31,"type":"BlankEdge","stmt":"Function start dummy edge","target":2},{"file":"doc/examples/example_bug.c","line":17,"source":10,"type":"DeclarationEdge","stmt":"int __CPAchecker_TMP_0 = i;","target":12},{"file":"doc/examples/example_bug.c","line":32,"source":23,"type":"ReturnStatementEdge","stmt":"return 0;","target":0},{"file":"doc/examples/example_bug.c","line":10,"source":2,"type":"DeclarationEdge","stmt":"int i = 0;","target":3},{"file":"doc/examples/example_bug.c","line":18,"source":15,"type":"StatementEdge","stmt":"a = a + 1;","target":16},{"file":"doc/examples/example_bug.c","line":13,"source":4,"type":"BlankEdge","stmt":"while","target":5},{"file":"doc/examples/example_bug.c","line":26,"source":21,"type":"BlankEdge","stmt":"Label: LOOPEND","target":22},{"file":"doc/examples/example_bug.c","line":14,"source":6,"type":"AssumeEdge","stmt":"[i == 20]","target":9},{"file":"doc/examples/example_bug.c","line":9,"source":30,"type":"DeclarationEdge","stmt":"int main();","target":31},{"file":"doc/examples/example_bug.c","line":17,"source":13,"type":"StatementEdge","stmt":"__CPAchecker_TMP_0;","target":14},{"file":"doc/examples/example_bug.c","line":18,"source":14,"type":"DeclarationEdge","stmt":"int __CPAchecker_TMP_1 = a;","target":15},{"file":"<none>","line":0,"source":1,"type":"BlankEdge","stmt":"INIT GLOBAL VARS","target":30},{"file":"doc/examples/example_bug.c","line":21,"source":8,"type":"AssumeEdge","stmt":"[!(i != a)]","target":18},{"file":"doc/examples/example_bug.c","line":21,"source":8,"type":"AssumeEdge","stmt":"[i != a]","target":19},{"file":"doc/examples/example_bug.c","line":29,"source":24,"type":"BlankEdge","stmt":"Goto: ERROR","target":27}]},"argJson":{"nodes":[{"func":"main","index":0,"label":"0 @ N1\\nmain entry\\nAbstractionState: ABS0: true\\\\n ValueAnalysisState: []\\\\","type":"highlighted"},{"func":"main","index":2048,"label":"2048 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":6144,"label":"6144 @ N24\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":2049,"label":"2049 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":2050,"label":"2050 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":6146,"label":"6146 @ N27\\nmain\\nAbstractionState: ABS481: true\\\\n ValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\\\\","type":"target"},{"func":"main","index":2051,"label":"2051 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":2052,"label":"2052 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":5,"label":"5 @ N30\\nmain\\nValueAnalysisState: []\\\\","type":""},{"func":"main","index":7,"label":"7 @ N31\\nmain\\nValueAnalysisState: []\\\\","type":""},{"func":"main","index":8,"label":"8 @ N2\\nmain\\nValueAnalysisState: []\\\\","type":""},{"func":"main","index":14,"label":"14 @ N3\\nmain\\nValueAnalysisState: [main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":526,"label":"526 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":527,"label":"527 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":528,"label":"528 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":17,"label":"17 @ N4\\nmain\\nValueAnalysisState: [main::a=NumericValue [number=0] (int), main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":529,"label":"529 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":3601,"label":"3601 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":530,"label":"530 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3602,"label":"3602 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":19,"label":"19 @ N5\\nmain\\nValueAnalysisState: [main::a=NumericValue [number=0] (int), main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":531,"label":"531 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3603,"label":"3603 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":532,"label":"532 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3604,"label":"3604 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":21,"label":"21 @ N6\\nmain\\nValueAnalysisState: [main::a=NumericValue [number=0] (int), main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":533,"label":"533 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3605,"label":"3605 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":534,"label":"534 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3606,"label":"3606 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":3607,"label":"3607 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":536,"label":"536 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3608,"label":"3608 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":25,"label":"25 @ N10\\nmain\\nValueAnalysisState: [main::a=NumericValue [number=0] (int), main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":537,"label":"537 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3609,"label":"3609 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":3610,"label":"3610 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":27,"label":"27 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::a=NumericValue [number=0] (int), main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":3611,"label":"3611 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":29,"label":"29 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::a=NumericValue [number=0] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5661,"label":"5661 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":30,"label":"30 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::a=NumericValue [number=0] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5662,"label":"5662 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":31,"label":"31 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=0] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5663,"label":"5663 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5664,"label":"5664 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":33,"label":"33 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5665,"label":"5665 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":34,"label":"34 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5666,"label":"5666 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":35,"label":"35 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5667,"label":"5667 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":5668,"label":"5668 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":37,"label":"37 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":5669,"label":"5669 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":5670,"label":"5670 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":5671,"label":"5671 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":1081,"label":"1081 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":1082,"label":"1082 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":1083,"label":"1083 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":1084,"label":"1084 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":1085,"label":"1085 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":1087,"label":"1087 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":1088,"label":"1088 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":1089,"label":"1089 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":1090,"label":"1090 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":1091,"label":"1091 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":1092,"label":"1092 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":5205,"label":"5205 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":5206,"label":"5206 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":5207,"label":"5207 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":5208,"label":"5208 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":5209,"label":"5209 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5210,"label":"5210 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5211,"label":"5211 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5212,"label":"5212 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5213,"label":"5213 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5214,"label":"5214 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":5215,"label":"5215 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""},{"func":"main","index":151,"label":"151 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":152,"label":"152 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":153,"label":"153 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":154,"label":"154 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":155,"label":"155 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":156,"label":"156 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":158,"label":"158 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":159,"label":"159 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":160,"label":"160 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":161,"label":"161 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":2721,"label":"2721 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":162,"label":"162 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":2722,"label":"2722 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":4771,"label":"4771 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4772,"label":"4772 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4773,"label":"4773 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":2726,"label":"2726 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":4774,"label":"4774 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4775,"label":"4775 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":4776,"label":"4776 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":2729,"label":"2729 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":4777,"label":"4777 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":4778,"label":"4778 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":4779,"label":"4779 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":4780,"label":"4780 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":2733,"label":"2733 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":4781,"label":"4781 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":686,"label":"686 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":687,"label":"687 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":2735,"label":"2735 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":2736,"label":"2736 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":689,"label":"689 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":690,"label":"690 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":691,"label":"691 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":692,"label":"692 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":1716,"label":"1716 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2740,"label":"2740 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":693,"label":"693 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":1717,"label":"1717 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2741,"label":"2741 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":694,"label":"694 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":695,"label":"695 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":1719,"label":"1719 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2743,"label":"2743 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":3255,"label":"3255 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":696,"label":"696 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":1720,"label":"1720 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":3256,"label":"3256 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":1721,"label":"1721 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":3257,"label":"3257 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":698,"label":"698 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":1722,"label":"1722 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":2746,"label":"2746 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":3258,"label":"3258 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":1723,"label":"1723 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":3259,"label":"3259 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":3260,"label":"3260 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":1725,"label":"1725 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":3261,"label":"3261 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":1726,"label":"1726 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":3262,"label":"3262 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":1727,"label":"1727 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":3263,"label":"3263 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":1728,"label":"1728 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":3264,"label":"3264 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":3265,"label":"3265 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":252,"label":"252 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":253,"label":"253 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":255,"label":"255 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":256,"label":"256 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":257,"label":"257 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":258,"label":"258 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":260,"label":"260 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":261,"label":"261 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":262,"label":"262 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":263,"label":"263 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":4359,"label":"4359 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":264,"label":"264 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":4360,"label":"4360 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":4361,"label":"4361 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":4362,"label":"4362 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":4363,"label":"4363 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4364,"label":"4364 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4365,"label":"4365 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4366,"label":"4366 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4367,"label":"4367 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4368,"label":"4368 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":4369,"label":"4369 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":2362,"label":"2362 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":1339,"label":"1339 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":2363,"label":"2363 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":1340,"label":"1340 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":2364,"label":"2364 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":1341,"label":"1341 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":2365,"label":"2365 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":1342,"label":"1342 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":2366,"label":"2366 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":1343,"label":"1343 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2367,"label":"2367 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":1344,"label":"1344 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2368,"label":"2368 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":1345,"label":"1345 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2369,"label":"2369 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":2370,"label":"2370 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":1347,"label":"1347 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2371,"label":"2371 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":1348,"label":"1348 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":2372,"label":"2372 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":1349,"label":"1349 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":1350,"label":"1350 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":870,"label":"870 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":871,"label":"871 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":872,"label":"872 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":873,"label":"873 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":874,"label":"874 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":875,"label":"875 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":876,"label":"876 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":877,"label":"877 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":878,"label":"878 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":879,"label":"879 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":880,"label":"880 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":377,"label":"377 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":378,"label":"378 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":379,"label":"379 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":380,"label":"380 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":381,"label":"381 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":382,"label":"382 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":384,"label":"384 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":385,"label":"385 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":3969,"label":"3969 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":386,"label":"386 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":3970,"label":"3970 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":387,"label":"387 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":3971,"label":"3971 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":388,"label":"388 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":3972,"label":"3972 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":3973,"label":"3973 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":3974,"label":"3974 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":3975,"label":"3975 @ N15\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":3976,"label":"3976 @ N16\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":3977,"label":"3977 @ N17\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":3978,"label":"3978 @ N8\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":3979,"label":"3979 @ N18\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":2041,"label":"2041 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":2042,"label":"2042 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":2043,"label":"2043 @ N10\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":6139,"label":"6139 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":2044,"label":"2044 @ N12\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":6140,"label":"6140 @ N6\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":6141,"label":"6141 @ N9\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":2046,"label":"2046 @ N13\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":6142,"label":"6142 @ N21\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":2047,"label":"2047 @ N14\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":6143,"label":"6143 @ N22\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""}],"edges":[{"file":"doc/examples/example_bug.c","line":"17","source":5664,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":5665},{"file":"doc/examples/example_bug.c","line":"13","source":17,"label":"Line 13\\nwhile","type":"BlankEdge","target":19},{"file":"doc/examples/example_bug.c","line":"17","source":1719,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":1720},{"file":"doc/examples/example_bug.c","line":"17","source":530,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":531},{"file":"doc/examples/example_bug.c","line":"14","source":1340,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":1341},{"file":"doc/examples/example_bug.c","line":"18","source":2367,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":2368},{"file":"doc/examples/example_bug.c","line":"18","source":3607,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":3608},{"file":"<none>","line":"0","source":880,"label":"Line 0\\n","type":"BlankEdge","target":1081},{"file":"doc/examples/example_bug.c","line":"18","source":4366,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":4367},{"file":"doc/examples/example_bug.c","line":"17","source":4773,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":4774},{"file":"doc/examples/example_bug.c","line":"18","source":2735,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":2736},{"file":"<none>","line":"0","source":1726,"label":"Line 0\\n","type":"BlankEdge","target":1727},{"file":"doc/examples/example_bug.c","line":"17","source":29,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":30},{"file":"doc/examples/example_bug.c","line":"14","source":5206,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":5207},{"file":"doc/examples/example_bug.c","line":"17","source":1721,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":1722},{"file":"<none>","line":"0","source":5213,"label":"Line 0\\n","type":"BlankEdge","target":5214},{"file":"doc/examples/example_bug.c","line":"17","source":25,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":27},{"file":"doc/examples/example_bug.c","line":"17","source":1083,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":1084},{"file":"doc/examples/example_bug.c","line":"18","source":258,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":260},{"file":"doc/examples/example_bug.c","line":"13","source":2041,"label":"Line 13\\n","type":"BlankEdge","target":2042},{"file":"doc/examples/example_bug.c","line":"14","source":3602,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":3603},{"file":"doc/examples/example_bug.c","line":"17","source":872,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":873},{"file":"doc/examples/example_bug.c","line":"17","source":529,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":530},{"file":"doc/examples/example_bug.c","line":"18","source":3974,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":3975},{"file":"doc/examples/example_bug.c","line":"21","source":263,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":264},{"file":"<none>","line":"0","source":695,"label":"Line 0\\n","type":"BlankEdge","target":696},{"file":"<none>","line":"0","source":5669,"label":"Line 0\\n","type":"BlankEdge","target":5670},{"file":"doc/examples/example_bug.c","line":"21","source":4780,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":4781},{"file":"doc/examples/example_bug.c","line":"18","source":5212,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":5213},{"file":"doc/examples/example_bug.c","line":"14","source":1082,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":1083},{"file":"doc/examples/example_bug.c","line":"9","source":5,"label":"Line 9\\nint main();","type":"DeclarationEdge","target":7},{"file":"doc/examples/example_bug.c","line":"14","source":378,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":379},{"file":"<none>","line":"0","source":4369,"label":"Line 0\\n","type":"BlankEdge","target":4771},{"file":"<none>","line":"0","source":34,"label":"Line 0\\n","type":"BlankEdge","target":35},{"file":"doc/examples/example_bug.c","line":"13","source":1339,"label":"Line 13\\n","type":"BlankEdge","target":1340},{"file":"doc/examples/example_bug.c","line":"13","source":2362,"label":"Line 13\\n","type":"BlankEdge","target":2363},{"file":"doc/examples/example_bug.c","line":"18","source":532,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":533},{"file":"doc/examples/example_bug.c","line":"18","source":2368,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":2369},{"file":"doc/examples/example_bug.c","line":"21","source":5670,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":5671},{"file":"doc/examples/example_bug.c","line":"18","source":1345,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":1347},{"file":"doc/examples/example_bug.c","line":"17","source":381,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":382},{"file":"doc/examples/example_bug.c","line":"17","source":3973,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":3974},{"file":"doc/examples/example_bug.c","line":"18","source":2047,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":2048},{"file":"<none>","line":"0","source":4779,"label":"Line 0\\n","type":"BlankEdge","target":4780},{"file":"<none>","line":"0","source":0,"label":"Line 0\\nINIT GLOBAL VARS","type":"BlankEdge","target":5},{"file":"doc/examples/example_bug.c","line":"18","source":876,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":877},{"file":"doc/examples/example_bug.c","line":"21","source":3978,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":3979},{"file":"doc/examples/example_bug.c","line":"13","source":870,"label":"Line 13\\n","type":"BlankEdge","target":871},{"file":"doc/examples/example_bug.c","line":"17","source":5665,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":5666},{"file":"doc/examples/example_bug.c","line":"14","source":21,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":25},{"file":"doc/examples/example_bug.c","line":"18","source":30,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":31},{"file":"doc/examples/example_bug.c","line":"18","source":261,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":262},{"file":"doc/examples/example_bug.c","line":"17","source":3258,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":3259},{"file":"doc/examples/example_bug.c","line":"17","source":2046,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":2047},{"file":"doc/examples/example_bug.c","line":"17","source":2729,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":2733},{"file":"doc/examples/example_bug.c","line":"13","source":4359,"label":"Line 13\\n","type":"BlankEdge","target":4360},{"file":"doc/examples/example_bug.c","line":"17","source":5207,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":5208},{"file":"doc/examples/example_bug.c","line":"18","source":159,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":160},{"file":"doc/examples/example_bug.c","line":"18","source":1088,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":1089},{"file":"doc/examples/example_bug.c","line":"17","source":4774,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":4775},{"file":"doc/examples/example_bug.c","line":"21","source":1091,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":1092},{"file":"doc/examples/example_bug.c","line":"14","source":2042,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":2043},{"file":"doc/examples/example_bug.c","line":"18","source":1087,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":1088},{"file":"doc/examples/example_bug.c","line":"17","source":3603,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":3604},{"file":"doc/examples/example_bug.c","line":"29","source":6144,"label":"Line 29\\nGoto: ERROR","type":"BlankEdge","target":6146},{"file":"doc/examples/example_bug.c","line":"18","source":3975,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":3976},{"file":"<none>","line":"0","source":878,"label":"Line 0\\n","type":"BlankEdge","target":879},{"file":"doc/examples/example_bug.c","line":"15","source":6141,"label":"Line 15\\nGoto: LOOPEND","type":"BlankEdge","target":6142},{"file":"doc/examples/example_bug.c","line":"17","source":689,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":690},{"file":"<none>","line":"0","source":3979,"label":"Line 0\\n","type":"BlankEdge","target":4359},{"file":"doc/examples/example_bug.c","line":"18","source":1347,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":1348},{"file":"doc/examples/example_bug.c","line":"18","source":877,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":878},{"file":"doc/examples/example_bug.c","line":"17","source":1084,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":1085},{"file":"doc/examples/example_bug.c","line":"17","source":3259,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":3260},{"file":"doc/examples/example_bug.c","line":"21","source":3264,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":3265},{"file":"doc/examples/example_bug.c","line":"21","source":1349,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":1350},{"file":"doc/examples/example_bug.c","line":"18","source":5666,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":5667},{"file":"doc/examples/example_bug.c","line":"11","source":14,"label":"Line 11\\nint a = 0;","type":"DeclarationEdge","target":17},{"file":"doc/examples/example_bug.c","line":"21","source":1727,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":1728},{"file":"doc/examples/example_bug.c","line":"13","source":5205,"label":"Line 13\\n","type":"BlankEdge","target":5206},{"file":"doc/examples/example_bug.c","line":"17","source":4362,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":4363},{"file":"<none>","line":"0","source":160,"label":"Line 0\\n","type":"BlankEdge","target":161},{"file":"doc/examples/example_bug.c","line":"18","source":692,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":693},{"file":"<none>","line":"0","source":1350,"label":"Line 0\\n","type":"BlankEdge","target":1716},{"file":"<none>","line":"0","source":534,"label":"Line 0\\n","type":"BlankEdge","target":536},{"file":"doc/examples/example_bug.c","line":"18","source":2369,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":2370},{"file":"<none>","line":"0","source":3265,"label":"Line 0\\n","type":"BlankEdge","target":3601},{"file":"doc/examples/example_bug.c","line":"17","source":379,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":380},{"file":"doc/examples/example_bug.c","line":"18","source":533,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":534},{"file":"<none>","line":"0","source":2372,"label":"Line 0\\n","type":"BlankEdge","target":2721},{"file":"doc/examples/example_bug.c","line":"17","source":4361,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":4362},{"file":"doc/examples/example_bug.c","line":"18","source":693,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":694},{"file":"doc/examples/example_bug.c","line":"18","source":4778,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":4779},{"file":"doc/examples/example_bug.c","line":"17","source":2044,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":2046},{"file":"doc/examples/example_bug.c","line":"28","source":6143,"label":"Line 28\\n[a != 19]","type":"AssumeEdge","target":6144},{"file":"doc/examples/example_bug.c","line":"18","source":158,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":159},{"file":"doc/examples/example_bug.c","line":"13","source":3601,"label":"Line 13\\n","type":"BlankEdge","target":3602},{"file":"doc/examples/example_bug.c","line":"14","source":152,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":153},{"file":"doc/examples/example_bug.c","line":"18","source":31,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":33},{"file":"<none>","line":"0","source":162,"label":"Line 0\\n","type":"BlankEdge","target":252},{"file":"<none>","line":"0","source":1090,"label":"Line 0\\n","type":"BlankEdge","target":1091},{"file":"doc/examples/example_bug.c","line":"17","source":2726,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":2729},{"file":"doc/examples/example_bug.c","line":"10","source":8,"label":"Line 10\\nint i = 0;","type":"DeclarationEdge","target":14},{"file":"doc/examples/example_bug.c","line":"18","source":3976,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":3977},{"file":"doc/examples/example_bug.c","line":"14","source":4360,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":4361},{"file":"<none>","line":"0","source":1348,"label":"Line 0\\n","type":"BlankEdge","target":1349},{"file":"doc/examples/example_bug.c","line":"21","source":161,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":162},{"file":"doc/examples/example_bug.c","line":"17","source":256,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":257},{"file":"doc/examples/example_bug.c","line":"17","source":1085,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":1087},{"file":"doc/examples/example_bug.c","line":"18","source":382,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":384},{"file":"doc/examples/example_bug.c","line":"18","source":5668,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":5669},{"file":"doc/examples/example_bug.c","line":"18","source":1725,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":1726},{"file":"doc/examples/example_bug.c","line":"18","source":4777,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":4778},{"file":"doc/examples/example_bug.c","line":"26","source":6142,"label":"Line 26\\nLabel: LOOPEND","type":"BlankEdge","target":6143},{"file":"doc/examples/example_bug.c","line":"17","source":2043,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":2044},{"file":"doc/examples/example_bug.c","line":"13","source":526,"label":"Line 13\\n","type":"BlankEdge","target":527},{"file":"<none>","line":"0","source":262,"label":"Line 0\\n","type":"BlankEdge","target":263},{"file":"<none>","line":"0","source":2052,"label":"Line 0\\n","type":"BlankEdge","target":2362},{"file":"<none>","line":"0","source":7,"label":"Line 0\\nFunction start dummy edge","type":"BlankEdge","target":8},{"file":"doc/examples/example_bug.c","line":"18","source":5210,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":5211},{"file":"<none>","line":"0","source":388,"label":"Line 0\\n","type":"BlankEdge","target":526},{"file":"doc/examples/example_bug.c","line":"13","source":19,"label":"Line 13\\n","type":"BlankEdge","target":21},{"file":"doc/examples/example_bug.c","line":"18","source":5667,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":5668},{"file":"<none>","line":"0","source":2746,"label":"Line 0\\n","type":"BlankEdge","target":3255},{"file":"doc/examples/example_bug.c","line":"17","source":27,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":29},{"file":"<none>","line":"0","source":37,"label":"Line 0\\n","type":"BlankEdge","target":151},{"file":"doc/examples/example_bug.c","line":"17","source":3604,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":3605},{"file":"doc/examples/example_bug.c","line":"17","source":4363,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":4364},{"file":"doc/examples/example_bug.c","line":"14","source":871,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":872},{"file":"doc/examples/example_bug.c","line":"21","source":2371,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":2372},{"file":"doc/examples/example_bug.c","line":"18","source":531,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":532},{"file":"doc/examples/example_bug.c","line":"17","source":1343,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":1344},{"file":"doc/examples/example_bug.c","line":"18","source":1723,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":1725},{"file":"doc/examples/example_bug.c","line":"17","source":257,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":258},{"file":"doc/examples/example_bug.c","line":"13","source":151,"label":"Line 13\\n","type":"BlankEdge","target":152},{"file":"doc/examples/example_bug.c","line":"17","source":380,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":381},{"file":"doc/examples/example_bug.c","line":"18","source":4776,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":4777},{"file":"doc/examples/example_bug.c","line":"17","source":528,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":529},{"file":"doc/examples/example_bug.c","line":"17","source":2733,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":2735},{"file":"doc/examples/example_bug.c","line":"14","source":6140,"label":"Line 14\\n[i == 20]","type":"AssumeEdge","target":6141},{"file":"doc/examples/example_bug.c","line":"17","source":3971,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":3972},{"file":"doc/examples/example_bug.c","line":"21","source":35,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":37},{"file":"doc/examples/example_bug.c","line":"13","source":3969,"label":"Line 13\\n","type":"BlankEdge","target":3970},{"file":"doc/examples/example_bug.c","line":"18","source":260,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":261},{"file":"<none>","line":"0","source":1728,"label":"Line 0\\n","type":"BlankEdge","target":2041},{"file":"doc/examples/example_bug.c","line":"13","source":1716,"label":"Line 13\\n","type":"BlankEdge","target":1717},{"file":"<none>","line":"0","source":3977,"label":"Line 0\\n","type":"BlankEdge","target":3978},{"file":"doc/examples/example_bug.c","line":"21","source":2051,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":2052},{"file":"doc/examples/example_bug.c","line":"17","source":4775,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":4776},{"file":"<none>","line":"0","source":3263,"label":"Line 0\\n","type":"BlankEdge","target":3264},{"file":"doc/examples/example_bug.c","line":"18","source":694,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":695},{"file":"<none>","line":"0","source":537,"label":"Line 0\\n","type":"BlankEdge","target":686},{"file":"<none>","line":"0","source":3609,"label":"Line 0\\n","type":"BlankEdge","target":3610},{"file":"doc/examples/example_bug.c","line":"17","source":5208,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":5209},{"file":"doc/examples/example_bug.c","line":"13","source":6139,"label":"Line 13\\n","type":"BlankEdge","target":6140},{"file":"doc/examples/example_bug.c","line":"18","source":2740,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":2741},{"file":"<none>","line":"0","source":264,"label":"Line 0\\n","type":"BlankEdge","target":377},{"file":"doc/examples/example_bug.c","line":"13","source":377,"label":"Line 13\\n","type":"BlankEdge","target":378},{"file":"doc/examples/example_bug.c","line":"14","source":1717,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":1719},{"file":"doc/examples/example_bug.c","line":"21","source":387,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":388},{"file":"doc/examples/example_bug.c","line":"17","source":255,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":256},{"file":"doc/examples/example_bug.c","line":"13","source":1081,"label":"Line 13\\n","type":"BlankEdge","target":1082},{"file":"<none>","line":"0","source":2050,"label":"Line 0\\n","type":"BlankEdge","target":2051},{"file":"doc/examples/example_bug.c","line":"18","source":5211,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":5212},{"file":"doc/examples/example_bug.c","line":"17","source":873,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":874},{"file":"doc/examples/example_bug.c","line":"18","source":3262,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":3263},{"file":"doc/examples/example_bug.c","line":"18","source":4364,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":4365},{"file":"doc/examples/example_bug.c","line":"18","source":156,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":158},{"file":"<none>","line":"0","source":4781,"label":"Line 0\\n","type":"BlankEdge","target":5205},{"file":"doc/examples/example_bug.c","line":"17","source":153,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":154},{"file":"doc/examples/example_bug.c","line":"17","source":3972,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":3973},{"file":"doc/examples/example_bug.c","line":"18","source":1722,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":1723},{"file":"doc/examples/example_bug.c","line":"17","source":691,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":692},{"file":"doc/examples/example_bug.c","line":"21","source":536,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":537},{"file":"doc/examples/example_bug.c","line":"18","source":1344,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":1345},{"file":"doc/examples/example_bug.c","line":"14","source":2363,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":2364},{"file":"doc/examples/example_bug.c","line":"21","source":5214,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":5215},{"file":"doc/examples/example_bug.c","line":"17","source":690,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":691},{"file":"<none>","line":"0","source":2741,"label":"Line 0\\n","type":"BlankEdge","target":2743},{"file":"doc/examples/example_bug.c","line":"21","source":879,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":880},{"file":"doc/examples/example_bug.c","line":"21","source":3610,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":3611},{"file":"doc/examples/example_bug.c","line":"17","source":155,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":156},{"file":"doc/examples/example_bug.c","line":"18","source":384,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":385},{"file":"doc/examples/example_bug.c","line":"13","source":252,"label":"Line 13\\n","type":"BlankEdge","target":253},{"file":"doc/examples/example_bug.c","line":"14","source":687,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":689},{"file":"doc/examples/example_bug.c","line":"17","source":2366,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":2367},{"file":"doc/examples/example_bug.c","line":"17","source":5663,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":5664},{"file":"doc/examples/example_bug.c","line":"18","source":2048,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":2049},{"file":"<none>","line":"0","source":386,"label":"Line 0\\n","type":"BlankEdge","target":387},{"file":"doc/examples/example_bug.c","line":"17","source":154,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":155},{"file":"doc/examples/example_bug.c","line":"13","source":686,"label":"Line 13\\n","type":"BlankEdge","target":687},{"file":"doc/examples/example_bug.c","line":"17","source":3257,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":3258},{"file":"<none>","line":"0","source":5215,"label":"Line 0\\n","type":"BlankEdge","target":5661},{"file":"doc/examples/example_bug.c","line":"18","source":4365,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":4366},{"file":"doc/examples/example_bug.c","line":"14","source":4772,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":4773},{"file":"doc/examples/example_bug.c","line":"18","source":875,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":876},{"file":"doc/examples/example_bug.c","line":"18","source":1089,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":1090},{"file":"doc/examples/example_bug.c","line":"14","source":2722,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":2726},{"file":"<none>","line":"0","source":2370,"label":"Line 0\\n","type":"BlankEdge","target":2371},{"file":"doc/examples/example_bug.c","line":"18","source":3608,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":3609},{"file":"doc/examples/example_bug.c","line":"18","source":3261,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":3262},{"file":"doc/examples/example_bug.c","line":"17","source":3605,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":3606},{"file":"doc/examples/example_bug.c","line":"21","source":4368,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":4369},{"file":"doc/examples/example_bug.c","line":"17","source":1342,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":1343},{"file":"doc/examples/example_bug.c","line":"14","source":3970,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":3971},{"file":"doc/examples/example_bug.c","line":"17","source":1720,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":1721},{"file":"doc/examples/example_bug.c","line":"17","source":5209,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":5210},{"file":"doc/examples/example_bug.c","line":"14","source":3256,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":3257},{"file":"doc/examples/example_bug.c","line":"14","source":5662,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":5663},{"file":"doc/examples/example_bug.c","line":"21","source":2743,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":2746},{"file":"doc/examples/example_bug.c","line":"18","source":3260,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":3261},{"file":"doc/examples/example_bug.c","line":"18","source":33,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":34},{"file":"doc/examples/example_bug.c","line":"13","source":2721,"label":"Line 13\\n","type":"BlankEdge","target":2722},{"file":"doc/examples/example_bug.c","line":"18","source":2736,"label":"Line 18\\na = a + 1;","type":"StatementEdge","target":2740},{"file":"<none>","line":"0","source":3611,"label":"Line 0\\n","type":"BlankEdge","target":3969},{"file":"doc/examples/example_bug.c","line":"17","source":874,"label":"Line 17\\n__CPAchecker_TMP_0;","type":"StatementEdge","target":875},{"file":"doc/examples/example_bug.c","line":"17","source":2365,"label":"Line 17\\ni = i + 1;","type":"StatementEdge","target":2366},{"file":"doc/examples/example_bug.c","line":"18","source":3606,"label":"Line 18\\nint __CPAchecker_TMP_1 = a;","type":"DeclarationEdge","target":3607},{"file":"<none>","line":"0","source":698,"label":"Line 0\\n","type":"BlankEdge","target":870},{"file":"doc/examples/example_bug.c","line":"13","source":3255,"label":"Line 13\\n","type":"BlankEdge","target":3256},{"file":"doc/examples/example_bug.c","line":"13","source":5661,"label":"Line 13\\n","type":"BlankEdge","target":5662},{"file":"doc/examples/example_bug.c","line":"21","source":696,"label":"Line 21\\n[!(i != a)]","type":"AssumeEdge","target":698},{"file":"<none>","line":"0","source":5671,"label":"Line 0\\n","type":"BlankEdge","target":6139},{"file":"doc/examples/example_bug.c","line":"18","source":385,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":386},{"file":"doc/examples/example_bug.c","line":"13","source":4771,"label":"Line 13\\n","type":"BlankEdge","target":4772},{"file":"doc/examples/example_bug.c","line":"14","source":253,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":255},{"file":"doc/examples/example_bug.c","line":"18","source":2049,"label":"Line 18\\n__CPAchecker_TMP_1;","type":"StatementEdge","target":2050},{"file":"doc/examples/example_bug.c","line":"14","source":527,"label":"Line 14\\n[!(i == 20)]","type":"AssumeEdge","target":528},{"file":"doc/examples/example_bug.c","line":"17","source":2364,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":2365},{"file":"<none>","line":"0","source":1092,"label":"Line 0\\n","type":"BlankEdge","target":1339},{"file":"doc/examples/example_bug.c","line":"17","source":1341,"label":"Line 17\\nint __CPAchecker_TMP_0 = i;","type":"DeclarationEdge","target":1342},{"file":"<none>","line":"0","source":4367,"label":"Line 0\\n","type":"BlankEdge","target":4368}],"relevantnodes":[{"func":"main","index":0,"label":"0 @ N1\\nmain entry\\nAbstractionState: ABS0: true\\\\n ValueAnalysisState: []\\\\","type":"highlighted"},{"func":"main","index":2721,"label":"2721 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=11] (int), main::__CPAchecker_TMP_1=NumericValue [number=11] (int), main::a=NumericValue [number=12] (int), main::i=NumericValue [number=12] (int)]\\\\","type":""},{"func":"main","index":3969,"label":"3969 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=14] (int), main::__CPAchecker_TMP_1=NumericValue [number=14] (int), main::a=NumericValue [number=15] (int), main::i=NumericValue [number=15] (int)]\\\\","type":""},{"func":"main","index":6146,"label":"6146 @ N27\\nmain\\nAbstractionState: ABS481: true\\\\n ValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\\\\","type":"target"},{"func":"main","index":4771,"label":"4771 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=16] (int), main::__CPAchecker_TMP_1=NumericValue [number=16] (int), main::a=NumericValue [number=17] (int), main::i=NumericValue [number=17] (int)]\\\\","type":""},{"func":"main","index":870,"label":"870 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=5] (int), main::__CPAchecker_TMP_1=NumericValue [number=5] (int), main::a=NumericValue [number=6] (int), main::i=NumericValue [number=6] (int)]\\\\","type":""},{"func":"main","index":4359,"label":"4359 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=15] (int), main::__CPAchecker_TMP_1=NumericValue [number=15] (int), main::a=NumericValue [number=16] (int), main::i=NumericValue [number=16] (int)]\\\\","type":""},{"func":"main","index":526,"label":"526 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=3] (int), main::__CPAchecker_TMP_1=NumericValue [number=3] (int), main::a=NumericValue [number=4] (int), main::i=NumericValue [number=4] (int)]\\\\","type":""},{"func":"main","index":686,"label":"686 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=4] (int), main::__CPAchecker_TMP_1=NumericValue [number=4] (int), main::a=NumericValue [number=5] (int), main::i=NumericValue [number=5] (int)]\\\\","type":""},{"func":"main","index":3601,"label":"3601 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=13] (int), main::__CPAchecker_TMP_1=NumericValue [number=13] (int), main::a=NumericValue [number=14] (int), main::i=NumericValue [number=14] (int)]\\\\","type":""},{"func":"main","index":19,"label":"19 @ N5\\nmain\\nValueAnalysisState: [main::a=NumericValue [number=0] (int), main::i=NumericValue [number=0] (int)]\\\\","type":""},{"func":"main","index":1716,"label":"1716 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=8] (int), main::__CPAchecker_TMP_1=NumericValue [number=8] (int), main::a=NumericValue [number=9] (int), main::i=NumericValue [number=9] (int)]\\\\","type":""},{"func":"main","index":5205,"label":"5205 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=17] (int), main::__CPAchecker_TMP_1=NumericValue [number=17] (int), main::a=NumericValue [number=18] (int), main::i=NumericValue [number=18] (int)]\\\\","type":""},{"func":"main","index":151,"label":"151 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=0] (int), main::__CPAchecker_TMP_1=NumericValue [number=0] (int), main::a=NumericValue [number=1] (int), main::i=NumericValue [number=1] (int)]\\\\","type":""},{"func":"main","index":3255,"label":"3255 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=12] (int), main::__CPAchecker_TMP_1=NumericValue [number=12] (int), main::a=NumericValue [number=13] (int), main::i=NumericValue [number=13] (int)]\\\\","type":""},{"func":"main","index":377,"label":"377 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=2] (int), main::__CPAchecker_TMP_1=NumericValue [number=2] (int), main::a=NumericValue [number=3] (int), main::i=NumericValue [number=3] (int)]\\\\","type":""},{"func":"main","index":1081,"label":"1081 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=6] (int), main::__CPAchecker_TMP_1=NumericValue [number=6] (int), main::a=NumericValue [number=7] (int), main::i=NumericValue [number=7] (int)]\\\\","type":""},{"func":"main","index":2041,"label":"2041 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=9] (int), main::__CPAchecker_TMP_1=NumericValue [number=9] (int), main::a=NumericValue [number=10] (int), main::i=NumericValue [number=10] (int)]\\\\","type":""},{"func":"main","index":2362,"label":"2362 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=10] (int), main::__CPAchecker_TMP_1=NumericValue [number=10] (int), main::a=NumericValue [number=11] (int), main::i=NumericValue [number=11] (int)]\\\\","type":""},{"func":"main","index":1339,"label":"1339 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=7] (int), main::__CPAchecker_TMP_1=NumericValue [number=7] (int), main::a=NumericValue [number=8] (int), main::i=NumericValue [number=8] (int)]\\\\","type":""},{"func":"main","index":6139,"label":"6139 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=19] (int), main::__CPAchecker_TMP_1=NumericValue [number=19] (int), main::a=NumericValue [number=20] (int), main::i=NumericValue [number=20] (int)]\\\\","type":""},{"func":"main","index":252,"label":"252 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=1] (int), main::__CPAchecker_TMP_1=NumericValue [number=1] (int), main::a=NumericValue [number=2] (int), main::i=NumericValue [number=2] (int)]\\\\","type":""},{"func":"main","index":5661,"label":"5661 @ N5\\nmain\\nValueAnalysisState: [main::__CPAchecker_TMP_0=NumericValue [number=18] (int), main::__CPAchecker_TMP_1=NumericValue [number=18] (int), main::a=NumericValue [number=19] (int), main::i=NumericValue [number=19] (int)]\\\\","type":""}],"relevantedges":[{"source":1716,"label":"dummy edge","type":"dummy type","target":2041},{"source":3255,"label":"dummy edge","type":"dummy type","target":3601},{"source":151,"label":"dummy edge","type":"dummy type","target":252},{"source":4359,"label":"dummy edge","type":"dummy type","target":4771},{"source":6139,"label":"dummy edge","type":"dummy type","target":6146},{"source":4771,"label":"dummy edge","type":"dummy type","target":5205},{"source":2362,"label":"dummy edge","type":"dummy type","target":2721},{"source":5205,"label":"dummy edge","type":"dummy type","target":5661},{"source":2041,"label":"dummy edge","type":"dummy type","target":2362},{"source":5661,"label":"dummy edge","type":"dummy type","target":6139},{"file":"<none>","source":0,"label":"Lines 0 - 13:\\nINIT GLOBAL VARS\\nint main();\\nFunction start dummy edge\\nint i = 0;\\nint a = 0;\\nwhile","type":"BlankEdge","lines":"0 - 13:","target":19},{"source":1081,"label":"dummy edge","type":"dummy type","target":1339},{"source":3969,"label":"dummy edge","type":"dummy type","target":4359},{"source":377,"label":"dummy edge","type":"dummy type","target":526},{"source":870,"label":"dummy edge","type":"dummy type","target":1081},{"source":686,"label":"dummy edge","type":"dummy type","target":870},{"source":2721,"label":"dummy edge","type":"dummy type","target":3255},{"source":19,"label":"dummy edge","type":"dummy type","target":151},{"source":526,"label":"dummy edge","type":"dummy type","target":686},{"source":3601,"label":"dummy edge","type":"dummy type","target":3969},{"source":252,"label":"dummy edge","type":"dummy type","target":377},{"source":1339,"label":"dummy edge","type":"dummy type","target":1716}]},"sourceFiles":["doc/examples/example_bug.c"]}')},20:function(l){l.exports=JSON.parse('{"dependencies":[{"name":"@fortawesome/fontawesome-free","version":"5.15.3","repository":"https://github.com/FortAwesome/Font-Awesome","copyright":"","licenses":"(CC-BY-4.0 AND OFL-1.1 AND MIT)","licenseId":0},{"name":"angular-sanitize","version":"1.8.2","repository":"https://github.com/angular/angular.js","copyright":"Copyright (c) 2016 Angular","licenses":"MIT","licenseId":1},{"name":"angular","version":"1.8.2","repository":"https://github.com/angular/angular.js","copyright":"Copyright (c) 2016 Angular","licenses":"MIT","licenseId":1},{"name":"bootstrap","version":"4.6.0","repository":"https://github.com/twbs/bootstrap","copyright":"Copyright (c) 2011-2021 Twitter, Inc.. Copyright (c) 2011-2021 The Bootstrap Authors","licenses":"MIT","licenseId":1},{"name":"datatables.net-dt","version":"1.10.24","repository":"https://github.com/DataTables/Dist-DataTables-DataTables","copyright":"Copyright SpryMedia Limited and other contributors. http://datatables.net","licenses":"MIT","licenseId":1},{"name":"datatables.net","version":"1.10.24","repository":"https://github.com/DataTables/Dist-DataTables","copyright":"Copyright SpryMedia Limited and other contributors. http://datatables.net","licenses":"MIT","licenseId":1},{"name":"jquery-resizable-dom","version":"0.35.0","repository":"https://github.com/RickStrahl/jquery-resizable","copyright":"Copyright (c) 2013-2019 West Wind Technologies","licenses":"MIT","licenseId":2},{"name":"jquery","version":"3.6.0","repository":"https://github.com/jquery/jquery","copyright":"Copyright OpenJS Foundation and other contributors, https://openjsf.org/","licenses":"MIT","licenseId":1},{"name":"popper.js","version":"1.16.1","repository":"https://github.com/FezVrasta/popper.js","copyright":"","licenses":"MIT","licenseId":3}],"licenses":["Font Awesome Free License\\n-------------------------\\n\\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\\ncommercial projects, open source projects, or really almost whatever you want.\\nFull Font Awesome Free license: https://fontawesome.com/license/free.\\n\\n# Icons: CC BY 4.0 License (https://creativecommons.org/licenses/by/4.0/)\\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons\\npackaged as SVG and JS file types.\\n\\n# Fonts: SIL OFL 1.1 License (https://scripts.sil.org/OFL)\\nIn the Font Awesome Free download, the SIL OFL license applies to all icons\\npackaged as web and desktop font files.\\n\\n# Code: MIT License (https://opensource.org/licenses/MIT)\\nIn the Font Awesome Free download, the MIT license applies to all non-font and\\nnon-icon files.\\n\\n# Attribution\\nAttribution is required by MIT, SIL OFL, and CC BY licenses. Downloaded Font\\nAwesome Free files already contain embedded comments with sufficient\\nattribution, so you shouldn\'t need to do anything additional when using these\\nfiles normally.\\n\\nWe\'ve kept attribution comments terse, so we ask that you do not actively work\\nto remove them from files, especially code. They\'re a great way for folks to\\nlearn about Font Awesome.\\n\\n# Brand Icons\\nAll brand icons are trademarks of their respective owners. The use of these\\ntrademarks does not indicate endorsement of the trademark holder by Font\\nAwesome, nor vice versa. **Please do not use brand logos for any purpose except\\nto represent the company, product, or service to which they refer.**","Permission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\"Software\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.","===========\\n\\nCopyright (c) 2013-2019 West Wind Technologies\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\"Software\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.","\x3c!-- IGNORE THE HTML BLOCK BELOW, THE INTERESTING PART IS AFTER IT --\x3e\\n\\n<h1 align=\\"center\\">Popper.js</h1>\\n\\n<p align=\\"center\\">\\n    <strong>A library used to position poppers in web applications.</strong>\\n</p>\\n\\n<p align=\\"center\\">\\n    <img src=\\"http://badge-size.now.sh/https://unpkg.com/popper.js/dist/popper.min.js?compression=brotli\\" alt=\\"Stable Release Size\\"/>\\n  <img src=\\"http://badge-size.now.sh/https://unpkg.com/popper.js/dist/popper.min.js?compression=gzip\\" alt=\\"Stable Release Size\\"/>\\n    <a href=\\"https://codeclimate.com/github/FezVrasta/popper.js/coverage\\"><img src=\\"https://codeclimate.com/github/FezVrasta/popper.js/badges/coverage.svg\\" alt=\\"Istanbul Code Coverage\\"/></a>\\n    <a href=\\"https://www.npmjs.com/browse/depended/popper.js\\"><img src=\\"https://badgen.net/npm/dependents/popper.js\\" alt=\\"Dependents packages\\" /></a>\\n    <a href=\\"https://spectrum.chat/popper-js\\" target=\\"_blank\\"><img src=\\"https://img.shields.io/badge/chat-on_spectrum-6833F9.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyBpZD0iTGl2ZWxsb18xIiBkYXRhLW5hbWU9IkxpdmVsbG8gMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMTAgOCI%2BPGRlZnM%2BPHN0eWxlPi5jbHMtMXtmaWxsOiNmZmY7fTwvc3R5bGU%2BPC9kZWZzPjx0aXRsZT5zcGVjdHJ1bTwvdGl0bGU%2BPHBhdGggY2xhc3M9ImNscy0xIiBkPSJNNSwwQy40MiwwLDAsLjYzLDAsMy4zNGMwLDEuODQuMTksMi43MiwxLjc0LDMuMWgwVjcuNThhLjQ0LjQ0LDAsMCwwLC42OC4zNUw0LjM1LDYuNjlINWM0LjU4LDAsNS0uNjMsNS0zLjM1UzkuNTgsMCw1LDBaTTIuODMsNC4xOGEuNjMuNjMsMCwxLDEsLjY1LS42M0EuNjQuNjQsMCwwLDEsMi44Myw0LjE4Wk01LDQuMThhLjYzLjYzLDAsMSwxLC42NS0uNjNBLjY0LjY0LDAsMCwxLDUsNC4xOFptMi4xNywwYS42My42MywwLDEsMSwuNjUtLjYzQS42NC42NCwwLDAsMSw3LjE3LDQuMThaIi8%2BPC9zdmc%2B\\" alt=\\"Get support or discuss\\"/></a>\\n    <br />\\n    <a href=\\"https://travis-ci.org/FezVrasta/popper.js/branches\\" target=\\"_blank\\"><img src=\\"https://travis-ci.org/FezVrasta/popper.js.svg?branch=master\\" alt=\\"Build Status\\"/></a>\\n    <a href=\\"https://saucelabs.com/u/popperjs\\" target=\\"_blank\\"><img src=\\"https://badges.herokuapp.com/browsers?labels=none&googlechrome=latest&firefox=latest&microsoftedge=latest&iexplore=11,10&safari=latest\\" alt=\\"SauceLabs Reports\\"/></a>\\n</p>\\n\\n<img src=\\"https://raw.githubusercontent.com/FezVrasta/popper.js/master/popperjs.png\\" align=\\"right\\" width=250 />\\n\\n\x3c!-- 🚨 HEY! HERE BEGINS THE INTERESTING STUFF 🚨 --\x3e\\n\\n## Wut? Poppers?\\n\\nA popper is an element on the screen which \\"pops out\\" from the natural flow of your application.  \\nCommon examples of poppers are tooltips, popovers and drop-downs.\\n\\n\\n## So, yet another tooltip library?\\n\\nWell, basically, **no**.  \\nPopper.js is a **positioning engine**, its purpose is to calculate the position of an element\\nto make it possible to position it near a given reference element.  \\n\\nThe engine is completely modular and most of its features are implemented as **modifiers**\\n(similar to middlewares or plugins).  \\nThe whole code base is written in ES2015 and its features are automatically tested on real browsers thanks to [SauceLabs](https://saucelabs.com/) and [TravisCI](https://travis-ci.org/).\\n\\nPopper.js has zero dependencies. No jQuery, no LoDash, nothing.  \\nIt\'s used by big companies like [Twitter in Bootstrap v4](https://getbootstrap.com/), [Microsoft in WebClipper](https://github.com/OneNoteDev/WebClipper) and [Atlassian in AtlasKit](https://aui-cdn.atlassian.com/atlaskit/registry/).\\n\\n### Popper.js\\n\\nThis is the engine, the library that computes and, optionally, applies the styles to\\nthe poppers.\\n\\nSome of the key points are:\\n\\n- Position elements keeping them in their original DOM context (doesn\'t mess with your DOM!);\\n- Allows to export the computed informations to integrate with React and other view libraries;\\n- Supports Shadow DOM elements;\\n- Completely customizable thanks to the modifiers based structure;\\n\\nVisit our [project page](https://fezvrasta.github.io/popper.js) to see a lot of examples of what you can do with Popper.js!\\n\\nFind [the documentation here](/docs/_includes/popper-documentation.md).\\n\\n\\n### Tooltip.js\\n\\nSince lots of users just need a simple way to integrate powerful tooltips in their projects,\\nwe created **Tooltip.js**.  \\nIt\'s a small library that makes it easy to automatically create tooltips using as engine Popper.js.  \\nIts API is almost identical to the famous tooltip system of Bootstrap, in this way it will be\\neasy to integrate it in your projects.  \\nThe tooltips generated by Tooltip.js are accessible thanks to the `aria` tags.\\n\\nFind [the documentation here](/docs/_includes/tooltip-documentation.md).\\n\\n\\n## Installation\\nPopper.js is available on the following package managers and CDNs:\\n\\n| Source |                                                                                  |\\n|:-------|:---------------------------------------------------------------------------------|\\n| npm    | `npm install popper.js --save`                                                   |\\n| yarn   | `yarn add popper.js`                                                             |\\n| NuGet  | `PM> Install-Package popper.js`                                                  |\\n| Bower  | `bower install popper.js --save`                     |\\n| unpkg  | [`https://unpkg.com/popper.js`](https://unpkg.com/popper.js)                     |\\n| cdnjs  | [`https://cdnjs.com/libraries/popper.js`](https://cdnjs.com/libraries/popper.js) |\\n\\nTooltip.js as well:\\n\\n| Source |                                                                                  |\\n|:-------|:---------------------------------------------------------------------------------|\\n| npm    | `npm install tooltip.js --save`                                                  |\\n| yarn   | `yarn add tooltip.js`                                                            |\\n| Bower* | `bower install tooltip.js=https://unpkg.com/tooltip.js --save`                   |\\n| unpkg  | [`https://unpkg.com/tooltip.js`](https://unpkg.com/tooltip.js)                   |\\n| cdnjs  | [`https://cdnjs.com/libraries/popper.js`](https://cdnjs.com/libraries/popper.js) |\\n\\n\\\\*: Bower isn\'t officially supported, it can be used to install Tooltip.js only trough the unpkg.com CDN. This method has the limitation of not being able to define a specific version of the library. Bower and Popper.js suggests to use npm or Yarn for your projects.  \\nFor more info, [read the related issue](https://github.com/FezVrasta/popper.js/issues/390).\\n\\n### Dist targets\\n\\nPopper.js is currently shipped with 3 targets in mind: UMD, ESM and ESNext.\\n\\n- UMD - Universal Module Definition: AMD, RequireJS and globals;\\n- ESM - ES Modules: For webpack/Rollup or browser supporting the spec;\\n- ESNext: Available in `dist/`, can be used with webpack and `babel-preset-env`;\\n\\nMake sure to use the right one for your needs. If you want to import it with a `<script>` tag, use UMD.\\n\\n## Usage\\n\\nGiven an existing popper DOM node, ask Popper.js to position it near its button\\n\\n```js\\nvar reference = document.querySelector(\'.my-button\');\\nvar popper = document.querySelector(\'.my-popper\');\\nvar anotherPopper = new Popper(\\n    reference,\\n    popper,\\n    {\\n        // popper options here\\n    }\\n);\\n```\\n\\n### Callbacks\\n\\nPopper.js supports two kinds of callbacks, the `onCreate` callback is called after\\nthe popper has been initialized. The `onUpdate` one is called on any subsequent update.\\n\\n```js\\nconst reference = document.querySelector(\'.my-button\');\\nconst popper = document.querySelector(\'.my-popper\');\\nnew Popper(reference, popper, {\\n    onCreate: (data) => {\\n        // data is an object containing all the informations computed\\n        // by Popper.js and used to style the popper and its arrow\\n        // The complete description is available in Popper.js documentation\\n    },\\n    onUpdate: (data) => {\\n        // same as `onCreate` but called on subsequent updates\\n    }\\n});\\n```\\n\\n### Writing your own modifiers\\n\\nPopper.js is based on a \\"plugin-like\\" architecture, most of its features are fully encapsulated \\"modifiers\\".  \\nA modifier is a function that is called each time Popper.js needs to compute the position of the popper. For this reason, modifiers should be very performant to avoid bottlenecks.  \\n\\nTo learn how to create a modifier, [read the modifiers documentation](docs/_includes/popper-documentation.md#modifiers--object)\\n\\n\\n### React, Vue.js, Angular, AngularJS, Ember.js (etc...) integration\\n\\nIntegrating 3rd party libraries in React or other libraries can be a pain because\\nthey usually alter the DOM and drive the libraries crazy.  \\nPopper.js limits all its DOM modifications inside the `applyStyle` modifier,\\nyou can simply disable it and manually apply the popper coordinates using\\nyour library of choice.  \\n\\nFor a comprehensive list of libraries that let you use Popper.js into existing\\nframeworks, visit the [MENTIONS](/MENTIONS.md) page.\\n\\nAlternatively, you may even override your own `applyStyles` with your custom one and\\nintegrate Popper.js by yourself!\\n\\n```js\\nfunction applyReactStyle(data) {\\n    // export data in your framework and use its content to apply the style to your popper\\n};\\n\\nconst reference = document.querySelector(\'.my-button\');\\nconst popper = document.querySelector(\'.my-popper\');\\nnew Popper(reference, popper, {\\n    modifiers: {\\n        applyStyle: { enabled: false },\\n        applyReactStyle: {\\n            enabled: true,\\n            fn: applyReactStyle,\\n            order: 800,\\n        },\\n    },\\n});\\n\\n```\\n\\n### Migration from Popper.js v0\\n\\nSince the API changed, we prepared some migration instructions to make it easy to upgrade to\\nPopper.js v1.  \\n\\nhttps://github.com/FezVrasta/popper.js/issues/62\\n\\nFeel free to comment inside the issue if you have any questions.\\n\\n### Performances\\n\\nPopper.js is very performant. It usually takes 0.5ms to compute a popper\'s position (on an iMac with 3.5G GHz Intel Core i5).  \\nThis means that it will not cause any [jank](https://www.chromium.org/developers/how-tos/trace-event-profiling-tool/anatomy-of-jank), leading to a smooth user experience.\\n\\n## Notes\\n\\n### Libraries using Popper.js\\n\\nThe aim of Popper.js is to provide a stable and powerful positioning engine ready to\\nbe used in 3rd party libraries.  \\n\\nVisit the [MENTIONS](/MENTIONS.md) page for an updated list of projects.\\n\\n\\n### Credits\\nI want to thank some friends and projects for the work they did:\\n\\n- [@AndreaScn](https://github.com/AndreaScn) for his work on the GitHub Page and the manual testing he did during the development;\\n- [@vampolo](https://github.com/vampolo) for the original idea and for the name of the library;\\n- [Sysdig](https://github.com/Draios) for all the awesome things I learned during these years that made it possible for me to write this library;\\n- [Tether.js](http://github.hubspot.com/tether/) for having inspired me in writing a positioning library ready for the real world;\\n- [The Contributors](https://github.com/FezVrasta/popper.js/graphs/contributors) for their much appreciated Pull Requests and bug reports;\\n- **you** for the star you\'ll give to this project and for being so awesome to give this project a try 🙂\\n\\n### Copyright and license\\nCode and documentation copyright 2016 **Federico Zivolo**. Code released under the [MIT license](LICENSE.md). Docs released under Creative Commons."]}')},21:function(l,Z,b){"use strict";b.r(Z);b(0),b(1),b(2);var d=b(7),c=b.n(d);b(8),b(10),b(12),b(14),b(15),b(16);const m=(l,Z,b)=>{Z.busy=!1,n(Z),b&&b(l)},G=new Worker("data:text/plain;base64,");G.workerName="argWorker",G.onmessage=l=>m(l.data,G,G.callback),G.onerror=l=>m(l.message,G,G.onErrorCallback);const W=new Worker("data:text/plain;base64,KGZ1bmN0aW9uKHQsbil7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZT9uKGV4cG9ydHMpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyJdLG4pOm4odC5kMz10LmQzfHx7fSl9KSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKHQsbil7cmV0dXJuIHQ8bj8tMTp0Pm4/MTp0Pj1uPzA6TmFOfWZ1bmN0aW9uIGUodCl7cmV0dXJuIDE9PT10Lmxlbmd0aCYmKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUscil7cmV0dXJuIG4odChlKSxyKX19KHQpKSx7bGVmdDpmdW5jdGlvbihuLGUscixpKXtmb3IobnVsbD09ciYmKHI9MCksbnVsbD09aSYmKGk9bi5sZW5ndGgpO3I8aTspe3ZhciBvPXIraT4+PjE7dChuW29dLGUpPDA/cj1vKzE6aT1vfXJldHVybiByfSxyaWdodDpmdW5jdGlvbihuLGUscixpKXtmb3IobnVsbD09ciYmKHI9MCksbnVsbD09aSYmKGk9bi5sZW5ndGgpO3I8aTspe3ZhciBvPXIraT4+PjE7dChuW29dLGUpPjA/aT1vOnI9bysxfXJldHVybiByfX19ZnVuY3Rpb24gcih0LG4pe3JldHVyblt0LG5dfWZ1bmN0aW9uIGkodCl7cmV0dXJuIG51bGw9PT10P05hTjordH1mdW5jdGlvbiBvKHQsbil7dmFyIGUscixvPXQubGVuZ3RoLGE9MCx1PS0xLGY9MCxjPTA7aWYobnVsbD09bilmb3IoOysrdTxvOylpc05hTihlPWkodFt1XSkpfHwoYys9KHI9ZS1mKSooZS0oZis9ci8rK2EpKSk7ZWxzZSBmb3IoOysrdTxvOylpc05hTihlPWkobih0W3VdLHUsdCkpKXx8KGMrPShyPWUtZikqKGUtKGYrPXIvKythKSkpO2lmKGE+MSlyZXR1cm4gYy8oYS0xKX1mdW5jdGlvbiBhKHQsbil7dmFyIGU9byh0LG4pO3JldHVybiBlP01hdGguc3FydChlKTplfWZ1bmN0aW9uIHUodCxuKXt2YXIgZSxyLGksbz10Lmxlbmd0aCxhPS0xO2lmKG51bGw9PW4pe2Zvcig7KythPG87KWlmKG51bGwhPShlPXRbYV0pJiZlPj1lKWZvcihyPWk9ZTsrK2E8bzspbnVsbCE9KGU9dFthXSkmJihyPmUmJihyPWUpLGk8ZSYmKGk9ZSkpfWVsc2UgZm9yKDsrK2E8bzspaWYobnVsbCE9KGU9bih0W2FdLGEsdCkpJiZlPj1lKWZvcihyPWk9ZTsrK2E8bzspbnVsbCE9KGU9bih0W2FdLGEsdCkpJiYocj5lJiYocj1lKSxpPGUmJihpPWUpKTtyZXR1cm5bcixpXX1mdW5jdGlvbiBmKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiBjKHQpe3JldHVybiB0fWZ1bmN0aW9uIHModCxuLGUpe3Q9K3Qsbj0rbixlPShpPWFyZ3VtZW50cy5sZW5ndGgpPDI/KG49dCx0PTAsMSk6aTwzPzE6K2U7Zm9yKHZhciByPS0xLGk9MHxNYXRoLm1heCgwLE1hdGguY2VpbCgobi10KS9lKSksbz1uZXcgQXJyYXkoaSk7KytyPGk7KW9bcl09dCtyKmU7cmV0dXJuIG99ZnVuY3Rpb24gbCh0LG4sZSl7dmFyIHIsaSxvLGEsdT0tMTtpZihuPStuLHQ9K3QsZT0rZSx0PT09biYmZT4wKXJldHVyblt0XTtpZigocj1uPHQpJiYoaT10LHQ9bixuPWkpLDA9PT0oYT1oKHQsbixlKSl8fCFpc0Zpbml0ZShhKSlyZXR1cm5bXTtpZihhPjApZm9yKHQ9TWF0aC5jZWlsKHQvYSksbj1NYXRoLmZsb29yKG4vYSksbz1uZXcgQXJyYXkoaT1NYXRoLmNlaWwobi10KzEpKTsrK3U8aTspb1t1XT0odCt1KSphO2Vsc2UgZm9yKHQ9TWF0aC5mbG9vcih0KmEpLG49TWF0aC5jZWlsKG4qYSksbz1uZXcgQXJyYXkoaT1NYXRoLmNlaWwodC1uKzEpKTsrK3U8aTspb1t1XT0odC11KS9hO3JldHVybiByJiZvLnJldmVyc2UoKSxvfWZ1bmN0aW9uIGgodCxuLGUpe3ZhciByPShuLXQpL01hdGgubWF4KDAsZSksaT1NYXRoLmZsb29yKE1hdGgubG9nKHIpL01hdGguTE4xMCksbz1yL01hdGgucG93KDEwLGkpO3JldHVybiBpPj0wPyhvPj1ycz8xMDpvPj1pcz81Om8+PW9zPzI6MSkqTWF0aC5wb3coMTAsaSk6LU1hdGgucG93KDEwLC1pKS8obz49cnM/MTA6bz49aXM/NTpvPj1vcz8yOjEpfWZ1bmN0aW9uIGQodCxuLGUpe3ZhciByPU1hdGguYWJzKG4tdCkvTWF0aC5tYXgoMCxlKSxpPU1hdGgucG93KDEwLE1hdGguZmxvb3IoTWF0aC5sb2cocikvTWF0aC5MTjEwKSksbz1yL2k7cmV0dXJuIG8+PXJzP2kqPTEwOm8+PWlzP2kqPTU6bz49b3MmJihpKj0yKSxuPHQ/LWk6aX1mdW5jdGlvbiBwKHQpe3JldHVybiBNYXRoLmNlaWwoTWF0aC5sb2codC5sZW5ndGgpL01hdGguTE4yKSsxfWZ1bmN0aW9uIHYodCxuLGUpe2lmKG51bGw9PWUmJihlPWkpLHI9dC5sZW5ndGgpe2lmKChuPStuKTw9MHx8cjwyKXJldHVybitlKHRbMF0sMCx0KTtpZihuPj0xKXJldHVybitlKHRbci0xXSxyLTEsdCk7dmFyIHIsbz0oci0xKSpuLGE9TWF0aC5mbG9vcihvKSx1PStlKHRbYV0sYSx0KTtyZXR1cm4gdSsoK2UodFthKzFdLGErMSx0KS11KSooby1hKX19ZnVuY3Rpb24gZyh0LG4pe3ZhciBlLHIsaT10Lmxlbmd0aCxvPS0xO2lmKG51bGw9PW4pe2Zvcig7KytvPGk7KWlmKG51bGwhPShlPXRbb10pJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPXRbb10pJiZlPnImJihyPWUpfWVsc2UgZm9yKDsrK288aTspaWYobnVsbCE9KGU9bih0W29dLG8sdCkpJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPW4odFtvXSxvLHQpKSYmZT5yJiYocj1lKTtyZXR1cm4gcn1mdW5jdGlvbiB5KHQpe2Zvcih2YXIgbixlLHIsaT10Lmxlbmd0aCxvPS0xLGE9MDsrK288aTspYSs9dFtvXS5sZW5ndGg7Zm9yKGU9bmV3IEFycmF5KGEpOy0taT49MDspZm9yKG49KHI9dFtpXSkubGVuZ3RoOy0tbj49MDspZVstLWFdPXJbbl07cmV0dXJuIGV9ZnVuY3Rpb24gXyh0LG4pe3ZhciBlLHIsaT10Lmxlbmd0aCxvPS0xO2lmKG51bGw9PW4pe2Zvcig7KytvPGk7KWlmKG51bGwhPShlPXRbb10pJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPXRbb10pJiZyPmUmJihyPWUpfWVsc2UgZm9yKDsrK288aTspaWYobnVsbCE9KGU9bih0W29dLG8sdCkpJiZlPj1lKWZvcihyPWU7KytvPGk7KW51bGwhPShlPW4odFtvXSxvLHQpKSYmcj5lJiYocj1lKTtyZXR1cm4gcn1mdW5jdGlvbiBiKHQpe2lmKCEoaT10Lmxlbmd0aCkpcmV0dXJuW107Zm9yKHZhciBuPS0xLGU9Xyh0LG0pLHI9bmV3IEFycmF5KGUpOysrbjxlOylmb3IodmFyIGksbz0tMSxhPXJbbl09bmV3IEFycmF5KGkpOysrbzxpOylhW29dPXRbb11bbl07cmV0dXJuIHJ9ZnVuY3Rpb24gbSh0KXtyZXR1cm4gdC5sZW5ndGh9ZnVuY3Rpb24geCh0KXtyZXR1cm4gdH1mdW5jdGlvbiB3KHQpe3JldHVybiJ0cmFuc2xhdGUoIisodCsuNSkrIiwwKSJ9ZnVuY3Rpb24gTSh0KXtyZXR1cm4idHJhbnNsYXRlKDAsIisodCsuNSkrIikifWZ1bmN0aW9uIEEoKXtyZXR1cm4hdGhpcy5fX2F4aXN9ZnVuY3Rpb24gVCh0LG4pe2Z1bmN0aW9uIGUoZSl7dmFyIGg9bnVsbD09aT9uLnRpY2tzP24udGlja3MuYXBwbHkobixyKTpuLmRvbWFpbigpOmksZD1udWxsPT1vP24udGlja0Zvcm1hdD9uLnRpY2tGb3JtYXQuYXBwbHkobixyKTp4Om8scD1NYXRoLm1heChhLDApK2Ysdj1uLnJhbmdlKCksZz0rdlswXSsuNSx5PSt2W3YubGVuZ3RoLTFdKy41LF89KG4uYmFuZHdpZHRoP2Z1bmN0aW9uKHQpe3ZhciBuPU1hdGgubWF4KDAsdC5iYW5kd2lkdGgoKS0xKS8yO3JldHVybiB0LnJvdW5kKCkmJihuPU1hdGgucm91bmQobikpLGZ1bmN0aW9uKGUpe3JldHVybit0KGUpK259fTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuK3Qobil9fSkobi5jb3B5KCkpLGI9ZS5zZWxlY3Rpb24/ZS5zZWxlY3Rpb24oKTplLG09Yi5zZWxlY3RBbGwoIi5kb21haW4iKS5kYXRhKFtudWxsXSksdz1iLnNlbGVjdEFsbCgiLnRpY2siKS5kYXRhKGgsbikub3JkZXIoKSxNPXcuZXhpdCgpLFQ9dy5lbnRlcigpLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwidGljayIpLE49dy5zZWxlY3QoImxpbmUiKSxTPXcuc2VsZWN0KCJ0ZXh0Iik7bT1tLm1lcmdlKG0uZW50ZXIoKS5pbnNlcnQoInBhdGgiLCIudGljayIpLmF0dHIoImNsYXNzIiwiZG9tYWluIikuYXR0cigic3Ryb2tlIiwiIzAwMCIpKSx3PXcubWVyZ2UoVCksTj1OLm1lcmdlKFQuYXBwZW5kKCJsaW5lIikuYXR0cigic3Ryb2tlIiwiIzAwMCIpLmF0dHIocysiMiIsYyphKSksUz1TLm1lcmdlKFQuYXBwZW5kKCJ0ZXh0IikuYXR0cigiZmlsbCIsIiMwMDAiKS5hdHRyKHMsYypwKS5hdHRyKCJkeSIsdD09PXVzPyIwZW0iOnQ9PT1jcz8iMC43MWVtIjoiMC4zMmVtIikpLGUhPT1iJiYobT1tLnRyYW5zaXRpb24oZSksdz13LnRyYW5zaXRpb24oZSksTj1OLnRyYW5zaXRpb24oZSksUz1TLnRyYW5zaXRpb24oZSksTT1NLnRyYW5zaXRpb24oZSkuYXR0cigib3BhY2l0eSIsbHMpLmF0dHIoInRyYW5zZm9ybSIsZnVuY3Rpb24odCl7cmV0dXJuIGlzRmluaXRlKHQ9Xyh0KSk/bCh0KTp0aGlzLmdldEF0dHJpYnV0ZSgidHJhbnNmb3JtIil9KSxULmF0dHIoIm9wYWNpdHkiLGxzKS5hdHRyKCJ0cmFuc2Zvcm0iLGZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMucGFyZW50Tm9kZS5fX2F4aXM7cmV0dXJuIGwobiYmaXNGaW5pdGUobj1uKHQpKT9uOl8odCkpfSkpLE0ucmVtb3ZlKCksbS5hdHRyKCJkIix0PT09c3N8fHQ9PWZzPyJNIitjKnUrIiwiK2crIkgwLjVWIit5KyJIIitjKnU6Ik0iK2crIiwiK2MqdSsiVjAuNUgiK3krIlYiK2MqdSksdy5hdHRyKCJvcGFjaXR5IiwxKS5hdHRyKCJ0cmFuc2Zvcm0iLGZ1bmN0aW9uKHQpe3JldHVybiBsKF8odCkpfSksTi5hdHRyKHMrIjIiLGMqYSksUy5hdHRyKHMsYypwKS50ZXh0KGQpLGIuZmlsdGVyKEEpLmF0dHIoImZpbGwiLCJub25lIikuYXR0cigiZm9udC1zaXplIiwxMCkuYXR0cigiZm9udC1mYW1pbHkiLCJzYW5zLXNlcmlmIikuYXR0cigidGV4dC1hbmNob3IiLHQ9PT1mcz8ic3RhcnQiOnQ9PT1zcz8iZW5kIjoibWlkZGxlIiksYi5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5fX2F4aXM9X30pfXZhciByPVtdLGk9bnVsbCxvPW51bGwsYT02LHU9NixmPTMsYz10PT09dXN8fHQ9PT1zcz8tMToxLHM9dD09PXNzfHx0PT09ZnM/IngiOiJ5IixsPXQ9PT11c3x8dD09PWNzP3c6TTtyZXR1cm4gZS5zY2FsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj10LGUpOm59LGUudGlja3M9ZnVuY3Rpb24oKXtyZXR1cm4gcj1hcy5jYWxsKGFyZ3VtZW50cyksZX0sZS50aWNrQXJndW1lbnRzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW51bGw9PXQ/W106YXMuY2FsbCh0KSxlKTpyLnNsaWNlKCl9LGUudGlja1ZhbHVlcz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1udWxsPT10P251bGw6YXMuY2FsbCh0KSxlKTppJiZpLnNsaWNlKCl9LGUudGlja0Zvcm1hdD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz10LGUpOm99LGUudGlja1NpemU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9dT0rdCxlKTphfSxlLnRpY2tTaXplSW5uZXI9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9K3QsZSk6YX0sZS50aWNrU2l6ZU91dGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PSt0LGUpOnV9LGUudGlja1BhZGRpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9K3QsZSk6Zn0sZX1mdW5jdGlvbiBOKCl7Zm9yKHZhciB0LG49MCxlPWFyZ3VtZW50cy5sZW5ndGgscj17fTtuPGU7KytuKXtpZighKHQ9YXJndW1lbnRzW25dKyIiKXx8dCBpbiByKXRocm93IG5ldyBFcnJvcigiaWxsZWdhbCB0eXBlOiAiK3QpO3JbdF09W119cmV0dXJuIG5ldyBTKHIpfWZ1bmN0aW9uIFModCl7dGhpcy5fPXR9ZnVuY3Rpb24gRSh0LG4sZSl7Zm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7KytyKWlmKHRbcl0ubmFtZT09PW4pe3Rbcl09aHMsdD10LnNsaWNlKDAscikuY29uY2F0KHQuc2xpY2UocisxKSk7YnJlYWt9cmV0dXJuIG51bGwhPWUmJnQucHVzaCh7bmFtZTpuLHZhbHVlOmV9KSx0fWZ1bmN0aW9uIGsodCl7dmFyIG49dCs9IiIsZT1uLmluZGV4T2YoIjoiKTtyZXR1cm4gZT49MCYmInhtbG5zIiE9PShuPXQuc2xpY2UoMCxlKSkmJih0PXQuc2xpY2UoZSsxKSkscHMuaGFzT3duUHJvcGVydHkobik/e3NwYWNlOnBzW25dLGxvY2FsOnR9OnR9ZnVuY3Rpb24gQyh0KXt2YXIgbj1rKHQpO3JldHVybihuLmxvY2FsP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHQuc3BhY2UsdC5sb2NhbCl9fTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10aGlzLm93bmVyRG9jdW1lbnQsZT10aGlzLm5hbWVzcGFjZVVSSTtyZXR1cm4gZT09PWRzJiZuLmRvY3VtZW50RWxlbWVudC5uYW1lc3BhY2VVUkk9PT1kcz9uLmNyZWF0ZUVsZW1lbnQodCk6bi5jcmVhdGVFbGVtZW50TlMoZSx0KX19KShuKX1mdW5jdGlvbiBQKCl7fWZ1bmN0aW9uIHoodCl7cmV0dXJuIG51bGw9PXQ/UDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IodCl9fWZ1bmN0aW9uIFIoKXtyZXR1cm5bXX1mdW5jdGlvbiBMKHQpe3JldHVybiBudWxsPT10P1I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKHQpfX1mdW5jdGlvbiBEKHQpe3JldHVybiBuZXcgQXJyYXkodC5sZW5ndGgpfWZ1bmN0aW9uIFUodCxuKXt0aGlzLm93bmVyRG9jdW1lbnQ9dC5vd25lckRvY3VtZW50LHRoaXMubmFtZXNwYWNlVVJJPXQubmFtZXNwYWNlVVJJLHRoaXMuX25leHQ9bnVsbCx0aGlzLl9wYXJlbnQ9dCx0aGlzLl9fZGF0YV9fPW59ZnVuY3Rpb24gcSh0LG4sZSxyLGksbyl7Zm9yKHZhciBhLHU9MCxmPW4ubGVuZ3RoLGM9by5sZW5ndGg7dTxjOysrdSkoYT1uW3VdKT8oYS5fX2RhdGFfXz1vW3VdLHJbdV09YSk6ZVt1XT1uZXcgVSh0LG9bdV0pO2Zvcig7dTxmOysrdSkoYT1uW3VdKSYmKGlbdV09YSl9ZnVuY3Rpb24gTyh0LG4sZSxyLGksbyxhKXt2YXIgdSxmLGMscz17fSxsPW4ubGVuZ3RoLGg9by5sZW5ndGgsZD1uZXcgQXJyYXkobCk7Zm9yKHU9MDt1PGw7Kyt1KShmPW5bdV0pJiYoZFt1XT1jPWJzK2EuY2FsbChmLGYuX19kYXRhX18sdSxuKSxjIGluIHM/aVt1XT1mOnNbY109Zik7Zm9yKHU9MDt1PGg7Kyt1KShmPXNbYz1icythLmNhbGwodCxvW3VdLHUsbyldKT8oclt1XT1mLGYuX19kYXRhX189b1t1XSxzW2NdPW51bGwpOmVbdV09bmV3IFUodCxvW3VdKTtmb3IodT0wO3U8bDsrK3UpKGY9blt1XSkmJnNbZFt1XV09PT1mJiYoaVt1XT1mKX1mdW5jdGlvbiBZKHQsbil7cmV0dXJuIHQ8bj8tMTp0Pm4/MTp0Pj1uPzA6TmFOfWZ1bmN0aW9uIEIodCl7cmV0dXJuIHQub3duZXJEb2N1bWVudCYmdC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx0LmRvY3VtZW50JiZ0fHx0LmRlZmF1bHRWaWV3fWZ1bmN0aW9uIEYodCxuKXtyZXR1cm4gdC5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKG4pfHxCKHQpLmdldENvbXB1dGVkU3R5bGUodCxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG4pfWZ1bmN0aW9uIEkodCl7cmV0dXJuIHQudHJpbSgpLnNwbGl0KC9efFxzKy8pfWZ1bmN0aW9uIGoodCl7cmV0dXJuIHQuY2xhc3NMaXN0fHxuZXcgSCh0KX1mdW5jdGlvbiBIKHQpe3RoaXMuX25vZGU9dCx0aGlzLl9uYW1lcz1JKHQuZ2V0QXR0cmlidXRlKCJjbGFzcyIpfHwiIil9ZnVuY3Rpb24gWCh0LG4pe2Zvcih2YXIgZT1qKHQpLHI9LTEsaT1uLmxlbmd0aDsrK3I8aTspZS5hZGQobltyXSl9ZnVuY3Rpb24gRyh0LG4pe2Zvcih2YXIgZT1qKHQpLHI9LTEsaT1uLmxlbmd0aDsrK3I8aTspZS5yZW1vdmUobltyXSl9ZnVuY3Rpb24gVigpe3RoaXMudGV4dENvbnRlbnQ9IiJ9ZnVuY3Rpb24gJCgpe3RoaXMuaW5uZXJIVE1MPSIifWZ1bmN0aW9uIFcoKXt0aGlzLm5leHRTaWJsaW5nJiZ0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcyl9ZnVuY3Rpb24gWigpe3RoaXMucHJldmlvdXNTaWJsaW5nJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMsdGhpcy5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpfWZ1bmN0aW9uIFEoKXtyZXR1cm4gbnVsbH1mdW5jdGlvbiBKKCl7dmFyIHQ9dGhpcy5wYXJlbnROb2RlO3QmJnQucmVtb3ZlQ2hpbGQodGhpcyl9ZnVuY3Rpb24gSygpe3JldHVybiB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuY2xvbmVOb2RlKCExKSx0aGlzLm5leHRTaWJsaW5nKX1mdW5jdGlvbiB0dCgpe3JldHVybiB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuY2xvbmVOb2RlKCEwKSx0aGlzLm5leHRTaWJsaW5nKX1mdW5jdGlvbiBudCh0LG4sZSl7cmV0dXJuIHQ9ZXQodCxuLGUpLGZ1bmN0aW9uKG4pe3ZhciBlPW4ucmVsYXRlZFRhcmdldDtlJiYoZT09PXRoaXN8fDgmZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0aGlzKSl8fHQuY2FsbCh0aGlzLG4pfX1mdW5jdGlvbiBldChuLGUscil7cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBvPXQuZXZlbnQ7dC5ldmVudD1pO3RyeXtuLmNhbGwodGhpcyx0aGlzLl9fZGF0YV9fLGUscil9ZmluYWxseXt0LmV2ZW50PW99fX1mdW5jdGlvbiBydCh0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10aGlzLl9fb247aWYobil7Zm9yKHZhciBlLHI9MCxpPS0xLG89bi5sZW5ndGg7cjxvOysrcillPW5bcl0sdC50eXBlJiZlLnR5cGUhPT10LnR5cGV8fGUubmFtZSE9PXQubmFtZT9uWysraV09ZTp0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZS50eXBlLGUubGlzdGVuZXIsZS5jYXB0dXJlKTsrK2k/bi5sZW5ndGg9aTpkZWxldGUgdGhpcy5fX29ufX19ZnVuY3Rpb24gaXQodCxuLGUpe3ZhciByPW1zLmhhc093blByb3BlcnR5KHQudHlwZSk/bnQ6ZXQ7cmV0dXJuIGZ1bmN0aW9uKGksbyxhKXt2YXIgdSxmPXRoaXMuX19vbixjPXIobixvLGEpO2lmKGYpZm9yKHZhciBzPTAsbD1mLmxlbmd0aDtzPGw7KytzKWlmKCh1PWZbc10pLnR5cGU9PT10LnR5cGUmJnUubmFtZT09PXQubmFtZSlyZXR1cm4gdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHUudHlwZSx1Lmxpc3RlbmVyLHUuY2FwdHVyZSksdGhpcy5hZGRFdmVudExpc3RlbmVyKHUudHlwZSx1Lmxpc3RlbmVyPWMsdS5jYXB0dXJlPWUpLHZvaWQodS52YWx1ZT1uKTt0aGlzLmFkZEV2ZW50TGlzdGVuZXIodC50eXBlLGMsZSksdT17dHlwZTp0LnR5cGUsbmFtZTp0Lm5hbWUsdmFsdWU6bixsaXN0ZW5lcjpjLGNhcHR1cmU6ZX0sZj9mLnB1c2godSk6dGhpcy5fX29uPVt1XX19ZnVuY3Rpb24gb3QobixlLHIsaSl7dmFyIG89dC5ldmVudDtuLnNvdXJjZUV2ZW50PXQuZXZlbnQsdC5ldmVudD1uO3RyeXtyZXR1cm4gZS5hcHBseShyLGkpfWZpbmFsbHl7dC5ldmVudD1vfX1mdW5jdGlvbiBhdCh0LG4sZSl7dmFyIHI9Qih0KSxpPXIuQ3VzdG9tRXZlbnQ7ImZ1bmN0aW9uIj09dHlwZW9mIGk/aT1uZXcgaShuLGUpOihpPXIuZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50IiksZT8oaS5pbml0RXZlbnQobixlLmJ1YmJsZXMsZS5jYW5jZWxhYmxlKSxpLmRldGFpbD1lLmRldGFpbCk6aS5pbml0RXZlbnQobiwhMSwhMSkpLHQuZGlzcGF0Y2hFdmVudChpKX1mdW5jdGlvbiB1dCh0LG4pe3RoaXMuX2dyb3Vwcz10LHRoaXMuX3BhcmVudHM9bn1mdW5jdGlvbiBmdCgpe3JldHVybiBuZXcgdXQoW1tkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdXSx4cyl9ZnVuY3Rpb24gY3QodCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P25ldyB1dChbW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCldXSxbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSk6bmV3IHV0KFtbdF1dLHhzKX1mdW5jdGlvbiBzdCgpe3JldHVybiBuZXcgbHR9ZnVuY3Rpb24gbHQoKXt0aGlzLl89IkAiKygrK3dzKS50b1N0cmluZygzNil9ZnVuY3Rpb24gaHQoKXtmb3IodmFyIG4sZT10LmV2ZW50O249ZS5zb3VyY2VFdmVudDspZT1uO3JldHVybiBlfWZ1bmN0aW9uIGR0KHQsbil7dmFyIGU9dC5vd25lclNWR0VsZW1lbnR8fHQ7aWYoZS5jcmVhdGVTVkdQb2ludCl7dmFyIHI9ZS5jcmVhdGVTVkdQb2ludCgpO3JldHVybiByLng9bi5jbGllbnRYLHIueT1uLmNsaWVudFkscj1yLm1hdHJpeFRyYW5zZm9ybSh0LmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSksW3IueCxyLnldfXZhciBpPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJuW24uY2xpZW50WC1pLmxlZnQtdC5jbGllbnRMZWZ0LG4uY2xpZW50WS1pLnRvcC10LmNsaWVudFRvcF19ZnVuY3Rpb24gcHQodCl7dmFyIG49aHQoKTtyZXR1cm4gbi5jaGFuZ2VkVG91Y2hlcyYmKG49bi5jaGFuZ2VkVG91Y2hlc1swXSksZHQodCxuKX1mdW5jdGlvbiB2dCh0LG4sZSl7YXJndW1lbnRzLmxlbmd0aDwzJiYoZT1uLG49aHQoKS5jaGFuZ2VkVG91Y2hlcyk7Zm9yKHZhciByLGk9MCxvPW4/bi5sZW5ndGg6MDtpPG87KytpKWlmKChyPW5baV0pLmlkZW50aWZpZXI9PT1lKXJldHVybiBkdCh0LHIpO3JldHVybiBudWxsfWZ1bmN0aW9uIGd0KCl7dC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX1mdW5jdGlvbiB5dCgpe3QuZXZlbnQucHJldmVudERlZmF1bHQoKSx0LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIF90KHQpe3ZhciBuPXQuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGU9Y3QodCkub24oImRyYWdzdGFydC5kcmFnIix5dCwhMCk7Im9uc2VsZWN0c3RhcnQiaW4gbj9lLm9uKCJzZWxlY3RzdGFydC5kcmFnIix5dCwhMCk6KG4uX19ub3NlbGVjdD1uLnN0eWxlLk1velVzZXJTZWxlY3Qsbi5zdHlsZS5Nb3pVc2VyU2VsZWN0PSJub25lIil9ZnVuY3Rpb24gYnQodCxuKXt2YXIgZT10LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxyPWN0KHQpLm9uKCJkcmFnc3RhcnQuZHJhZyIsbnVsbCk7biYmKHIub24oImNsaWNrLmRyYWciLHl0LCEwKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ci5vbigiY2xpY2suZHJhZyIsbnVsbCl9LDApKSwib25zZWxlY3RzdGFydCJpbiBlP3Iub24oInNlbGVjdHN0YXJ0LmRyYWciLG51bGwpOihlLnN0eWxlLk1velVzZXJTZWxlY3Q9ZS5fX25vc2VsZWN0LGRlbGV0ZSBlLl9fbm9zZWxlY3QpfWZ1bmN0aW9uIG10KHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiB4dCh0LG4sZSxyLGksbyxhLHUsZixjKXt0aGlzLnRhcmdldD10LHRoaXMudHlwZT1uLHRoaXMuc3ViamVjdD1lLHRoaXMuaWRlbnRpZmllcj1yLHRoaXMuYWN0aXZlPWksdGhpcy54PW8sdGhpcy55PWEsdGhpcy5keD11LHRoaXMuZHk9Zix0aGlzLl89Y31mdW5jdGlvbiB3dCgpe3JldHVybiF0LmV2ZW50LmJ1dHRvbn1mdW5jdGlvbiBNdCgpe3JldHVybiB0aGlzLnBhcmVudE5vZGV9ZnVuY3Rpb24gQXQobil7cmV0dXJuIG51bGw9PW4/e3g6dC5ldmVudC54LHk6dC5ldmVudC55fTpufWZ1bmN0aW9uIFR0KCl7cmV0dXJuIm9udG91Y2hzdGFydCJpbiB0aGlzfWZ1bmN0aW9uIE50KHQsbixlKXt0LnByb3RvdHlwZT1uLnByb3RvdHlwZT1lLGUuY29uc3RydWN0b3I9dH1mdW5jdGlvbiBTdCh0LG4pe3ZhciBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUpO2Zvcih2YXIgciBpbiBuKWVbcl09bltyXTtyZXR1cm4gZX1mdW5jdGlvbiBFdCgpe31mdW5jdGlvbiBrdCh0KXt2YXIgbjtyZXR1cm4gdD0odCsiIikudHJpbSgpLnRvTG93ZXJDYXNlKCksKG49TnMuZXhlYyh0KSk/KG49cGFyc2VJbnQoblsxXSwxNiksbmV3IEx0KG4+PjgmMTV8bj4+NCYyNDAsbj4+NCYxNXwyNDAmbiwoMTUmbik8PDR8MTUmbiwxKSk6KG49U3MuZXhlYyh0KSk/Q3QocGFyc2VJbnQoblsxXSwxNikpOihuPUVzLmV4ZWModCkpP25ldyBMdChuWzFdLG5bMl0sblszXSwxKToobj1rcy5leGVjKHQpKT9uZXcgTHQoMjU1Km5bMV0vMTAwLDI1NSpuWzJdLzEwMCwyNTUqblszXS8xMDAsMSk6KG49Q3MuZXhlYyh0KSk/UHQoblsxXSxuWzJdLG5bM10sbls0XSk6KG49UHMuZXhlYyh0KSk/UHQoMjU1Km5bMV0vMTAwLDI1NSpuWzJdLzEwMCwyNTUqblszXS8xMDAsbls0XSk6KG49enMuZXhlYyh0KSk/VXQoblsxXSxuWzJdLzEwMCxuWzNdLzEwMCwxKToobj1Scy5leGVjKHQpKT9VdChuWzFdLG5bMl0vMTAwLG5bM10vMTAwLG5bNF0pOkxzLmhhc093blByb3BlcnR5KHQpP0N0KExzW3RdKToidHJhbnNwYXJlbnQiPT09dD9uZXcgTHQoTmFOLE5hTixOYU4sMCk6bnVsbH1mdW5jdGlvbiBDdCh0KXtyZXR1cm4gbmV3IEx0KHQ+PjE2JjI1NSx0Pj44JjI1NSwyNTUmdCwxKX1mdW5jdGlvbiBQdCh0LG4sZSxyKXtyZXR1cm4gcjw9MCYmKHQ9bj1lPU5hTiksbmV3IEx0KHQsbixlLHIpfWZ1bmN0aW9uIHp0KHQpe3JldHVybiB0IGluc3RhbmNlb2YgRXR8fCh0PWt0KHQpKSx0Pyh0PXQucmdiKCksbmV3IEx0KHQucix0LmcsdC5iLHQub3BhY2l0eSkpOm5ldyBMdH1mdW5jdGlvbiBSdCh0LG4sZSxyKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/enQodCk6bmV3IEx0KHQsbixlLG51bGw9PXI/MTpyKX1mdW5jdGlvbiBMdCh0LG4sZSxyKXt0aGlzLnI9K3QsdGhpcy5nPStuLHRoaXMuYj0rZSx0aGlzLm9wYWNpdHk9K3J9ZnVuY3Rpb24gRHQodCl7cmV0dXJuKCh0PU1hdGgubWF4KDAsTWF0aC5taW4oMjU1LE1hdGgucm91bmQodCl8fDApKSk8MTY/IjAiOiIiKSt0LnRvU3RyaW5nKDE2KX1mdW5jdGlvbiBVdCh0LG4sZSxyKXtyZXR1cm4gcjw9MD90PW49ZT1OYU46ZTw9MHx8ZT49MT90PW49TmFOOm48PTAmJih0PU5hTiksbmV3IE90KHQsbixlLHIpfWZ1bmN0aW9uIHF0KHQsbixlLHIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9mdW5jdGlvbih0KXtpZih0IGluc3RhbmNlb2YgT3QpcmV0dXJuIG5ldyBPdCh0LmgsdC5zLHQubCx0Lm9wYWNpdHkpO2lmKHQgaW5zdGFuY2VvZiBFdHx8KHQ9a3QodCkpLCF0KXJldHVybiBuZXcgT3Q7aWYodCBpbnN0YW5jZW9mIE90KXJldHVybiB0O3ZhciBuPSh0PXQucmdiKCkpLnIvMjU1LGU9dC5nLzI1NSxyPXQuYi8yNTUsaT1NYXRoLm1pbihuLGUsciksbz1NYXRoLm1heChuLGUsciksYT1OYU4sdT1vLWksZj0obytpKS8yO3JldHVybiB1PyhhPW49PT1vPyhlLXIpL3UrNiooZTxyKTplPT09bz8oci1uKS91KzI6KG4tZSkvdSs0LHUvPWY8LjU/bytpOjItby1pLGEqPTYwKTp1PWY+MCYmZjwxPzA6YSxuZXcgT3QoYSx1LGYsdC5vcGFjaXR5KX0odCk6bmV3IE90KHQsbixlLG51bGw9PXI/MTpyKX1mdW5jdGlvbiBPdCh0LG4sZSxyKXt0aGlzLmg9K3QsdGhpcy5zPStuLHRoaXMubD0rZSx0aGlzLm9wYWNpdHk9K3J9ZnVuY3Rpb24gWXQodCxuLGUpe3JldHVybiAyNTUqKHQ8NjA/bisoZS1uKSp0LzYwOnQ8MTgwP2U6dDwyNDA/bisoZS1uKSooMjQwLXQpLzYwOm4pfWZ1bmN0aW9uIEJ0KHQpe2lmKHQgaW5zdGFuY2VvZiBJdClyZXR1cm4gbmV3IEl0KHQubCx0LmEsdC5iLHQub3BhY2l0eSk7aWYodCBpbnN0YW5jZW9mIFd0KXtpZihpc05hTih0LmgpKXJldHVybiBuZXcgSXQodC5sLDAsMCx0Lm9wYWNpdHkpO3ZhciBuPXQuaCpEcztyZXR1cm4gbmV3IEl0KHQubCxNYXRoLmNvcyhuKSp0LmMsTWF0aC5zaW4obikqdC5jLHQub3BhY2l0eSl9dCBpbnN0YW5jZW9mIEx0fHwodD16dCh0KSk7dmFyIGUscixpPUd0KHQuciksbz1HdCh0LmcpLGE9R3QodC5iKSx1PWp0KCguMjIyNTA0NSppKy43MTY4Nzg2Km8rLjA2MDYxNjkqYSkvT3MpO3JldHVybiBpPT09byYmbz09PWE/ZT1yPXU6KGU9anQoKC40MzYwNzQ3KmkrLjM4NTA2NDkqbysuMTQzMDgwNCphKS9xcykscj1qdCgoLjAxMzkzMjIqaSsuMDk3MTA0NSpvKy43MTQxNzMzKmEpL1lzKSksbmV3IEl0KDExNip1LTE2LDUwMCooZS11KSwyMDAqKHUtciksdC5vcGFjaXR5KX1mdW5jdGlvbiBGdCh0LG4sZSxyKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/QnQodCk6bmV3IEl0KHQsbixlLG51bGw9PXI/MTpyKX1mdW5jdGlvbiBJdCh0LG4sZSxyKXt0aGlzLmw9K3QsdGhpcy5hPStuLHRoaXMuYj0rZSx0aGlzLm9wYWNpdHk9K3J9ZnVuY3Rpb24ganQodCl7cmV0dXJuIHQ+anM/TWF0aC5wb3codCwxLzMpOnQvSXMrQnN9ZnVuY3Rpb24gSHQodCl7cmV0dXJuIHQ+RnM/dCp0KnQ6SXMqKHQtQnMpfWZ1bmN0aW9uIFh0KHQpe3JldHVybiAyNTUqKHQ8PS4wMDMxMzA4PzEyLjkyKnQ6MS4wNTUqTWF0aC5wb3codCwxLzIuNCktLjA1NSl9ZnVuY3Rpb24gR3QodCl7cmV0dXJuKHQvPTI1NSk8PS4wNDA0NT90LzEyLjkyOk1hdGgucG93KCh0Ky4wNTUpLzEuMDU1LDIuNCl9ZnVuY3Rpb24gVnQodCl7aWYodCBpbnN0YW5jZW9mIFd0KXJldHVybiBuZXcgV3QodC5oLHQuYyx0LmwsdC5vcGFjaXR5KTtpZih0IGluc3RhbmNlb2YgSXR8fCh0PUJ0KHQpKSwwPT09dC5hJiYwPT09dC5iKXJldHVybiBuZXcgV3QoTmFOLDAsdC5sLHQub3BhY2l0eSk7dmFyIG49TWF0aC5hdGFuMih0LmIsdC5hKSpVcztyZXR1cm4gbmV3IFd0KG48MD9uKzM2MDpuLE1hdGguc3FydCh0LmEqdC5hK3QuYip0LmIpLHQubCx0Lm9wYWNpdHkpfWZ1bmN0aW9uICR0KHQsbixlLHIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9WdCh0KTpuZXcgV3QodCxuLGUsbnVsbD09cj8xOnIpfWZ1bmN0aW9uIFd0KHQsbixlLHIpe3RoaXMuaD0rdCx0aGlzLmM9K24sdGhpcy5sPStlLHRoaXMub3BhY2l0eT0rcn1mdW5jdGlvbiBadCh0LG4sZSxyKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIFF0KXJldHVybiBuZXcgUXQodC5oLHQucyx0LmwsdC5vcGFjaXR5KTt0IGluc3RhbmNlb2YgTHR8fCh0PXp0KHQpKTt2YXIgbj10LnIvMjU1LGU9dC5nLzI1NSxyPXQuYi8yNTUsaT0oV3MqcitWcypuLSRzKmUpLyhXcytWcy0kcyksbz1yLWksYT0oR3MqKGUtaSktSHMqbykvWHMsdT1NYXRoLnNxcnQoYSphK28qbykvKEdzKmkqKDEtaSkpLGY9dT9NYXRoLmF0YW4yKGEsbykqVXMtMTIwOk5hTjtyZXR1cm4gbmV3IFF0KGY8MD9mKzM2MDpmLHUsaSx0Lm9wYWNpdHkpfSh0KTpuZXcgUXQodCxuLGUsbnVsbD09cj8xOnIpfWZ1bmN0aW9uIFF0KHQsbixlLHIpe3RoaXMuaD0rdCx0aGlzLnM9K24sdGhpcy5sPStlLHRoaXMub3BhY2l0eT0rcn1mdW5jdGlvbiBKdCh0LG4sZSxyLGkpe3ZhciBvPXQqdCxhPW8qdDtyZXR1cm4oKDEtMyp0KzMqby1hKSpuKyg0LTYqbyszKmEpKmUrKDErMyp0KzMqby0zKmEpKnIrYSppKS82fWZ1bmN0aW9uIEt0KHQpe3ZhciBuPXQubGVuZ3RoLTE7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciByPWU8PTA/ZT0wOmU+PTE/KGU9MSxuLTEpOk1hdGguZmxvb3IoZSpuKSxpPXRbcl0sbz10W3IrMV0sYT1yPjA/dFtyLTFdOjIqaS1vLHU9cjxuLTE/dFtyKzJdOjIqby1pO3JldHVybiBKdCgoZS1yL24pKm4sYSxpLG8sdSl9fWZ1bmN0aW9uIHRuKHQpe3ZhciBuPXQubGVuZ3RoO3JldHVybiBmdW5jdGlvbihlKXt2YXIgcj1NYXRoLmZsb29yKCgoZSU9MSk8MD8rK2U6ZSkqbiksaT10WyhyK24tMSklbl0sbz10W3Ilbl0sYT10WyhyKzEpJW5dLHU9dFsocisyKSVuXTtyZXR1cm4gSnQoKGUtci9uKSpuLGksbyxhLHUpfX1mdW5jdGlvbiBubih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gZW4odCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHQrZSpufX1mdW5jdGlvbiBybih0LG4pe3ZhciBlPW4tdDtyZXR1cm4gZT9lbih0LGU+MTgwfHxlPC0xODA/ZS0zNjAqTWF0aC5yb3VuZChlLzM2MCk6ZSk6bm4oaXNOYU4odCk/bjp0KX1mdW5jdGlvbiBvbih0KXtyZXR1cm4gMT09KHQ9K3QpP2FuOmZ1bmN0aW9uKG4sZSl7cmV0dXJuIGUtbj9mdW5jdGlvbih0LG4sZSl7cmV0dXJuIHQ9TWF0aC5wb3codCxlKSxuPU1hdGgucG93KG4sZSktdCxlPTEvZSxmdW5jdGlvbihyKXtyZXR1cm4gTWF0aC5wb3codCtyKm4sZSl9fShuLGUsdCk6bm4oaXNOYU4obik/ZTpuKX19ZnVuY3Rpb24gYW4odCxuKXt2YXIgZT1uLXQ7cmV0dXJuIGU/ZW4odCxlKTpubihpc05hTih0KT9uOnQpfWZ1bmN0aW9uIHVuKHQpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgZSxyLGk9bi5sZW5ndGgsbz1uZXcgQXJyYXkoaSksYT1uZXcgQXJyYXkoaSksdT1uZXcgQXJyYXkoaSk7Zm9yKGU9MDtlPGk7KytlKXI9UnQobltlXSksb1tlXT1yLnJ8fDAsYVtlXT1yLmd8fDAsdVtlXT1yLmJ8fDA7cmV0dXJuIG89dChvKSxhPXQoYSksdT10KHUpLHIub3BhY2l0eT0xLGZ1bmN0aW9uKHQpe3JldHVybiByLnI9byh0KSxyLmc9YSh0KSxyLmI9dSh0KSxyKyIifX19ZnVuY3Rpb24gZm4odCxuKXt2YXIgZSxyPW4/bi5sZW5ndGg6MCxpPXQ/TWF0aC5taW4ocix0Lmxlbmd0aCk6MCxvPW5ldyBBcnJheShpKSxhPW5ldyBBcnJheShyKTtmb3IoZT0wO2U8aTsrK2Upb1tlXT1kbih0W2VdLG5bZV0pO2Zvcig7ZTxyOysrZSlhW2VdPW5bZV07cmV0dXJuIGZ1bmN0aW9uKHQpe2ZvcihlPTA7ZTxpOysrZSlhW2VdPW9bZV0odCk7cmV0dXJuIGF9fWZ1bmN0aW9uIGNuKHQsbil7dmFyIGU9bmV3IERhdGU7cmV0dXJuIHQ9K3Qsbi09dCxmdW5jdGlvbihyKXtyZXR1cm4gZS5zZXRUaW1lKHQrbipyKSxlfX1mdW5jdGlvbiBzbih0LG4pe3JldHVybiB0PSt0LG4tPXQsZnVuY3Rpb24oZSl7cmV0dXJuIHQrbiplfX1mdW5jdGlvbiBsbih0LG4pe3ZhciBlLHI9e30saT17fTtudWxsIT09dCYmIm9iamVjdCI9PXR5cGVvZiB0fHwodD17fSksbnVsbCE9PW4mJiJvYmplY3QiPT10eXBlb2Ygbnx8KG49e30pO2ZvcihlIGluIG4pZSBpbiB0P3JbZV09ZG4odFtlXSxuW2VdKTppW2VdPW5bZV07cmV0dXJuIGZ1bmN0aW9uKHQpe2ZvcihlIGluIHIpaVtlXT1yW2VdKHQpO3JldHVybiBpfX1mdW5jdGlvbiBobih0LG4pe3ZhciBlLHIsaSxvPW9sLmxhc3RJbmRleD1hbC5sYXN0SW5kZXg9MCxhPS0xLHU9W10sZj1bXTtmb3IodCs9IiIsbis9IiI7KGU9b2wuZXhlYyh0KSkmJihyPWFsLmV4ZWMobikpOykoaT1yLmluZGV4KT5vJiYoaT1uLnNsaWNlKG8saSksdVthXT91W2FdKz1pOnVbKythXT1pKSwoZT1lWzBdKT09PShyPXJbMF0pP3VbYV0/dVthXSs9cjp1WysrYV09cjoodVsrK2FdPW51bGwsZi5wdXNoKHtpOmEseDpzbihlLHIpfSkpLG89YWwubGFzdEluZGV4O3JldHVybiBvPG4ubGVuZ3RoJiYoaT1uLnNsaWNlKG8pLHVbYV0/dVthXSs9aTp1WysrYV09aSksdS5sZW5ndGg8Mj9mWzBdP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdChuKSsiIn19KGZbMF0ueCk6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fShuKToobj1mLmxlbmd0aCxmdW5jdGlvbih0KXtmb3IodmFyIGUscj0wO3I8bjsrK3IpdVsoZT1mW3JdKS5pXT1lLngodCk7cmV0dXJuIHUuam9pbigiIil9KX1mdW5jdGlvbiBkbih0LG4pe3ZhciBlLHI9dHlwZW9mIG47cmV0dXJuIG51bGw9PW58fCJib29sZWFuIj09PXI/bm4obik6KCJudW1iZXIiPT09cj9zbjoic3RyaW5nIj09PXI/KGU9a3QobikpPyhuPWUsZWwpOmhuOm4gaW5zdGFuY2VvZiBrdD9lbDpuIGluc3RhbmNlb2YgRGF0ZT9jbjpBcnJheS5pc0FycmF5KG4pP2ZuOiJmdW5jdGlvbiIhPXR5cGVvZiBuLnZhbHVlT2YmJiJmdW5jdGlvbiIhPXR5cGVvZiBuLnRvU3RyaW5nfHxpc05hTihuKT9sbjpzbikodCxuKX1mdW5jdGlvbiBwbih0LG4pe3JldHVybiB0PSt0LG4tPXQsZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgucm91bmQodCtuKmUpfX1mdW5jdGlvbiB2bih0LG4sZSxyLGksbyl7dmFyIGEsdSxmO3JldHVybihhPU1hdGguc3FydCh0KnQrbipuKSkmJih0Lz1hLG4vPWEpLChmPXQqZStuKnIpJiYoZS09dCpmLHItPW4qZiksKHU9TWF0aC5zcXJ0KGUqZStyKnIpKSYmKGUvPXUsci89dSxmLz11KSx0KnI8biplJiYodD0tdCxuPS1uLGY9LWYsYT0tYSkse3RyYW5zbGF0ZVg6aSx0cmFuc2xhdGVZOm8scm90YXRlOk1hdGguYXRhbjIobix0KSp1bCxza2V3WDpNYXRoLmF0YW4oZikqdWwsc2NhbGVYOmEsc2NhbGVZOnV9fWZ1bmN0aW9uIGduKHQsbixlLHIpe2Z1bmN0aW9uIGkodCl7cmV0dXJuIHQubGVuZ3RoP3QucG9wKCkrIiAiOiIifXJldHVybiBmdW5jdGlvbihvLGEpe3ZhciB1PVtdLGY9W107cmV0dXJuIG89dChvKSxhPXQoYSksZnVuY3Rpb24odCxyLGksbyxhLHUpe2lmKHQhPT1pfHxyIT09byl7dmFyIGY9YS5wdXNoKCJ0cmFuc2xhdGUoIixudWxsLG4sbnVsbCxlKTt1LnB1c2goe2k6Zi00LHg6c24odCxpKX0se2k6Zi0yLHg6c24ocixvKX0pfWVsc2UoaXx8bykmJmEucHVzaCgidHJhbnNsYXRlKCIraStuK28rZSl9KG8udHJhbnNsYXRlWCxvLnRyYW5zbGF0ZVksYS50cmFuc2xhdGVYLGEudHJhbnNsYXRlWSx1LGYpLGZ1bmN0aW9uKHQsbixlLG8pe3QhPT1uPyh0LW4+MTgwP24rPTM2MDpuLXQ+MTgwJiYodCs9MzYwKSxvLnB1c2goe2k6ZS5wdXNoKGkoZSkrInJvdGF0ZSgiLG51bGwsciktMix4OnNuKHQsbil9KSk6biYmZS5wdXNoKGkoZSkrInJvdGF0ZSgiK24rcil9KG8ucm90YXRlLGEucm90YXRlLHUsZiksZnVuY3Rpb24odCxuLGUsbyl7dCE9PW4/by5wdXNoKHtpOmUucHVzaChpKGUpKyJza2V3WCgiLG51bGwsciktMix4OnNuKHQsbil9KTpuJiZlLnB1c2goaShlKSsic2tld1goIituK3IpfShvLnNrZXdYLGEuc2tld1gsdSxmKSxmdW5jdGlvbih0LG4sZSxyLG8sYSl7aWYodCE9PWV8fG4hPT1yKXt2YXIgdT1vLnB1c2goaShvKSsic2NhbGUoIixudWxsLCIsIixudWxsLCIpIik7YS5wdXNoKHtpOnUtNCx4OnNuKHQsZSl9LHtpOnUtMix4OnNuKG4scil9KX1lbHNlIDE9PT1lJiYxPT09cnx8by5wdXNoKGkobykrInNjYWxlKCIrZSsiLCIrcisiKSIpfShvLnNjYWxlWCxvLnNjYWxlWSxhLnNjYWxlWCxhLnNjYWxlWSx1LGYpLG89YT1udWxsLGZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlPS0xLHI9Zi5sZW5ndGg7KytlPHI7KXVbKG49ZltlXSkuaV09bi54KHQpO3JldHVybiB1LmpvaW4oIiIpfX19ZnVuY3Rpb24geW4odCl7cmV0dXJuKCh0PU1hdGguZXhwKHQpKSsxL3QpLzJ9ZnVuY3Rpb24gX24odCxuKXt2YXIgZSxyLGk9dFswXSxvPXRbMV0sYT10WzJdLHU9blswXSxmPW5bMV0sYz1uWzJdLHM9dS1pLGw9Zi1vLGg9cypzK2wqbDtpZihoPHBsKXI9TWF0aC5sb2coYy9hKS9sbCxlPWZ1bmN0aW9uKHQpe3JldHVybltpK3QqcyxvK3QqbCxhKk1hdGguZXhwKGxsKnQqcildfTtlbHNle3ZhciBkPU1hdGguc3FydChoKSxwPShjKmMtYSphK2RsKmgpLygyKmEqaGwqZCksdj0oYypjLWEqYS1kbCpoKS8oMipjKmhsKmQpLGc9TWF0aC5sb2coTWF0aC5zcXJ0KHAqcCsxKS1wKSx5PU1hdGgubG9nKE1hdGguc3FydCh2KnYrMSktdik7cj0oeS1nKS9sbCxlPWZ1bmN0aW9uKHQpe3ZhciBuPXQqcixlPXluKGcpLHU9YS8oaGwqZCkqKGUqZnVuY3Rpb24odCl7cmV0dXJuKCh0PU1hdGguZXhwKDIqdCkpLTEpLyh0KzEpfShsbCpuK2cpLWZ1bmN0aW9uKHQpe3JldHVybigodD1NYXRoLmV4cCh0KSktMS90KS8yfShnKSk7cmV0dXJuW2krdSpzLG8rdSpsLGEqZS95bihsbCpuK2cpXX19cmV0dXJuIGUuZHVyYXRpb249MWUzKnIsZX1mdW5jdGlvbiBibih0KXtyZXR1cm4gZnVuY3Rpb24obixlKXt2YXIgcj10KChuPXF0KG4pKS5oLChlPXF0KGUpKS5oKSxpPWFuKG4ucyxlLnMpLG89YW4obi5sLGUubCksYT1hbihuLm9wYWNpdHksZS5vcGFjaXR5KTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIG4uaD1yKHQpLG4ucz1pKHQpLG4ubD1vKHQpLG4ub3BhY2l0eT1hKHQpLG4rIiJ9fX1mdW5jdGlvbiBtbih0KXtyZXR1cm4gZnVuY3Rpb24obixlKXt2YXIgcj10KChuPSR0KG4pKS5oLChlPSR0KGUpKS5oKSxpPWFuKG4uYyxlLmMpLG89YW4obi5sLGUubCksYT1hbihuLm9wYWNpdHksZS5vcGFjaXR5KTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIG4uaD1yKHQpLG4uYz1pKHQpLG4ubD1vKHQpLG4ub3BhY2l0eT1hKHQpLG4rIiJ9fX1mdW5jdGlvbiB4bih0KXtyZXR1cm4gZnVuY3Rpb24gbihlKXtmdW5jdGlvbiByKG4scil7dmFyIGk9dCgobj1adChuKSkuaCwocj1adChyKSkuaCksbz1hbihuLnMsci5zKSxhPWFuKG4ubCxyLmwpLHU9YW4obi5vcGFjaXR5LHIub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBuLmg9aSh0KSxuLnM9byh0KSxuLmw9YShNYXRoLnBvdyh0LGUpKSxuLm9wYWNpdHk9dSh0KSxuKyIifX1yZXR1cm4gZT0rZSxyLmdhbW1hPW4scn0oMSl9ZnVuY3Rpb24gd24oKXtyZXR1cm4gTmx8fChrbChNbiksTmw9RWwubm93KCkrU2wpfWZ1bmN0aW9uIE1uKCl7Tmw9MH1mdW5jdGlvbiBBbigpe3RoaXMuX2NhbGw9dGhpcy5fdGltZT10aGlzLl9uZXh0PW51bGx9ZnVuY3Rpb24gVG4odCxuLGUpe3ZhciByPW5ldyBBbjtyZXR1cm4gci5yZXN0YXJ0KHQsbixlKSxyfWZ1bmN0aW9uIE5uKCl7d24oKSwrK3hsO2Zvcih2YXIgdCxuPXRsO247KSh0PU5sLW4uX3RpbWUpPj0wJiZuLl9jYWxsLmNhbGwobnVsbCx0KSxuPW4uX25leHQ7LS14bH1mdW5jdGlvbiBTbigpe05sPShUbD1FbC5ub3coKSkrU2wseGw9d2w9MDt0cnl7Tm4oKX1maW5hbGx5e3hsPTAsZnVuY3Rpb24oKXt2YXIgdCxuLGU9dGwscj0xLzA7Zm9yKDtlOyllLl9jYWxsPyhyPmUuX3RpbWUmJihyPWUuX3RpbWUpLHQ9ZSxlPWUuX25leHQpOihuPWUuX25leHQsZS5fbmV4dD1udWxsLGU9dD90Ll9uZXh0PW46dGw9bik7bmw9dCxrbihyKX0oKSxObD0wfX1mdW5jdGlvbiBFbigpe3ZhciB0PUVsLm5vdygpLG49dC1UbDtuPkFsJiYoU2wtPW4sVGw9dCl9ZnVuY3Rpb24ga24odCl7aWYoIXhsKXt3bCYmKHdsPWNsZWFyVGltZW91dCh3bCkpO3QtTmw+MjQ/KHQ8MS8wJiYod2w9c2V0VGltZW91dChTbix0LUVsLm5vdygpLVNsKSksTWwmJihNbD1jbGVhckludGVydmFsKE1sKSkpOihNbHx8KFRsPUVsLm5vdygpLE1sPXNldEludGVydmFsKEVuLEFsKSkseGw9MSxrbChTbikpfX1mdW5jdGlvbiBDbih0LG4sZSl7dmFyIHI9bmV3IEFuO3JldHVybiBuPW51bGw9PW4/MDorbixyLnJlc3RhcnQoZnVuY3Rpb24oZSl7ci5zdG9wKCksdChlK24pfSxuLGUpLHJ9ZnVuY3Rpb24gUG4odCxuLGUscixpLG8pe3ZhciBhPXQuX190cmFuc2l0aW9uO2lmKGEpe2lmKGUgaW4gYSlyZXR1cm59ZWxzZSB0Ll9fdHJhbnNpdGlvbj17fTsoZnVuY3Rpb24odCxuLGUpe2Z1bmN0aW9uIHIoZil7dmFyIGMscyxsLGg7aWYoZS5zdGF0ZSE9PVJsKXJldHVybiBvKCk7Zm9yKGMgaW4gdSlpZigoaD11W2NdKS5uYW1lPT09ZS5uYW1lKXtpZihoLnN0YXRlPT09RGwpcmV0dXJuIENuKHIpO2guc3RhdGU9PT1VbD8oaC5zdGF0ZT1PbCxoLnRpbWVyLnN0b3AoKSxoLm9uLmNhbGwoImludGVycnVwdCIsdCx0Ll9fZGF0YV9fLGguaW5kZXgsaC5ncm91cCksZGVsZXRlIHVbY10pOitjPG4mJihoLnN0YXRlPU9sLGgudGltZXIuc3RvcCgpLGRlbGV0ZSB1W2NdKX1pZihDbihmdW5jdGlvbigpe2Uuc3RhdGU9PT1EbCYmKGUuc3RhdGU9VWwsZS50aW1lci5yZXN0YXJ0KGksZS5kZWxheSxlLnRpbWUpLGkoZikpfSksZS5zdGF0ZT1MbCxlLm9uLmNhbGwoInN0YXJ0Iix0LHQuX19kYXRhX18sZS5pbmRleCxlLmdyb3VwKSxlLnN0YXRlPT09TGwpe2ZvcihlLnN0YXRlPURsLGE9bmV3IEFycmF5KGw9ZS50d2Vlbi5sZW5ndGgpLGM9MCxzPS0xO2M8bDsrK2MpKGg9ZS50d2VlbltjXS52YWx1ZS5jYWxsKHQsdC5fX2RhdGFfXyxlLmluZGV4LGUuZ3JvdXApKSYmKGFbKytzXT1oKTthLmxlbmd0aD1zKzF9fWZ1bmN0aW9uIGkobil7Zm9yKHZhciByPW48ZS5kdXJhdGlvbj9lLmVhc2UuY2FsbChudWxsLG4vZS5kdXJhdGlvbik6KGUudGltZXIucmVzdGFydChvKSxlLnN0YXRlPXFsLDEpLGk9LTEsdT1hLmxlbmd0aDsrK2k8dTspYVtpXS5jYWxsKG51bGwscik7ZS5zdGF0ZT09PXFsJiYoZS5vbi5jYWxsKCJlbmQiLHQsdC5fX2RhdGFfXyxlLmluZGV4LGUuZ3JvdXApLG8oKSl9ZnVuY3Rpb24gbygpe2Uuc3RhdGU9T2wsZS50aW1lci5zdG9wKCksZGVsZXRlIHVbbl07Zm9yKHZhciByIGluIHUpcmV0dXJuO2RlbGV0ZSB0Ll9fdHJhbnNpdGlvbn12YXIgYSx1PXQuX190cmFuc2l0aW9uO3Vbbl09ZSxlLnRpbWVyPVRuKGZ1bmN0aW9uKHQpe2Uuc3RhdGU9UmwsZS50aW1lci5yZXN0YXJ0KHIsZS5kZWxheSxlLnRpbWUpLGUuZGVsYXk8PXQmJnIodC1lLmRlbGF5KX0sMCxlLnRpbWUpfSkodCxlLHtuYW1lOm4saW5kZXg6cixncm91cDppLG9uOkNsLHR3ZWVuOlBsLHRpbWU6by50aW1lLGRlbGF5Om8uZGVsYXksZHVyYXRpb246by5kdXJhdGlvbixlYXNlOm8uZWFzZSx0aW1lcjpudWxsLHN0YXRlOnpsfSl9ZnVuY3Rpb24gem4odCxuKXt2YXIgZT1Mbih0LG4pO2lmKGUuc3RhdGU+emwpdGhyb3cgbmV3IEVycm9yKCJ0b28gbGF0ZTsgYWxyZWFkeSBzY2hlZHVsZWQiKTtyZXR1cm4gZX1mdW5jdGlvbiBSbih0LG4pe3ZhciBlPUxuKHQsbik7aWYoZS5zdGF0ZT5MbCl0aHJvdyBuZXcgRXJyb3IoInRvbyBsYXRlOyBhbHJlYWR5IHN0YXJ0ZWQiKTtyZXR1cm4gZX1mdW5jdGlvbiBMbih0LG4pe3ZhciBlPXQuX190cmFuc2l0aW9uO2lmKCFlfHwhKGU9ZVtuXSkpdGhyb3cgbmV3IEVycm9yKCJ0cmFuc2l0aW9uIG5vdCBmb3VuZCIpO3JldHVybiBlfWZ1bmN0aW9uIERuKHQsbil7dmFyIGUscixpLG89dC5fX3RyYW5zaXRpb24sYT0hMDtpZihvKXtuPW51bGw9PW4/bnVsbDpuKyIiO2ZvcihpIGluIG8pKGU9b1tpXSkubmFtZT09PW4/KHI9ZS5zdGF0ZT5MbCYmZS5zdGF0ZTxxbCxlLnN0YXRlPU9sLGUudGltZXIuc3RvcCgpLHImJmUub24uY2FsbCgiaW50ZXJydXB0Iix0LHQuX19kYXRhX18sZS5pbmRleCxlLmdyb3VwKSxkZWxldGUgb1tpXSk6YT0hMTthJiZkZWxldGUgdC5fX3RyYW5zaXRpb259fWZ1bmN0aW9uIFVuKHQsbixlKXt2YXIgcj10Ll9pZDtyZXR1cm4gdC5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9Um4odGhpcyxyKTsodC52YWx1ZXx8KHQudmFsdWU9e30pKVtuXT1lLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLGZ1bmN0aW9uKHQpe3JldHVybiBMbih0LHIpLnZhbHVlW25dfX1mdW5jdGlvbiBxbih0LG4pe3ZhciBlO3JldHVybigibnVtYmVyIj09dHlwZW9mIG4/c246biBpbnN0YW5jZW9mIGt0P2VsOihlPWt0KG4pKT8obj1lLGVsKTpobikodCxuKX1mdW5jdGlvbiBPbih0LG4sZSxyKXt0aGlzLl9ncm91cHM9dCx0aGlzLl9wYXJlbnRzPW4sdGhpcy5fbmFtZT1lLHRoaXMuX2lkPXJ9ZnVuY3Rpb24gWW4odCl7cmV0dXJuIGZ0KCkudHJhbnNpdGlvbih0KX1mdW5jdGlvbiBCbigpe3JldHVybisrQmx9ZnVuY3Rpb24gRm4odCl7cmV0dXJuKCh0Kj0yKTw9MT90KnQ6LS10KigyLXQpKzEpLzJ9ZnVuY3Rpb24gSW4odCl7cmV0dXJuKCh0Kj0yKTw9MT90KnQqdDoodC09MikqdCp0KzIpLzJ9ZnVuY3Rpb24gam4odCl7cmV0dXJuKDEtTWF0aC5jb3MoWGwqdCkpLzJ9ZnVuY3Rpb24gSG4odCl7cmV0dXJuKCh0Kj0yKTw9MT9NYXRoLnBvdygyLDEwKnQtMTApOjItTWF0aC5wb3coMiwxMC0xMCp0KSkvMn1mdW5jdGlvbiBYbih0KXtyZXR1cm4oKHQqPTIpPD0xPzEtTWF0aC5zcXJ0KDEtdCp0KTpNYXRoLnNxcnQoMS0odC09MikqdCkrMSkvMn1mdW5jdGlvbiBHbih0KXtyZXR1cm4odD0rdCk8Vmw/ZWgqdCp0OnQ8V2w/ZWgqKHQtPSRsKSp0K1psOnQ8Smw/ZWgqKHQtPVFsKSp0K0tsOmVoKih0LT10aCkqdCtuaH1mdW5jdGlvbiBWbih0LG4pe2Zvcih2YXIgZTshKGU9dC5fX3RyYW5zaXRpb24pfHwhKGU9ZVtuXSk7KWlmKCEodD10LnBhcmVudE5vZGUpKXJldHVybiBzaC50aW1lPXduKCksc2g7cmV0dXJuIGV9ZnVuY3Rpb24gJG4odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fWZ1bmN0aW9uIFduKCl7dC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX1mdW5jdGlvbiBabigpe3QuZXZlbnQucHJldmVudERlZmF1bHQoKSx0LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIFFuKHQpe3JldHVybnt0eXBlOnR9fWZ1bmN0aW9uIEpuKCl7cmV0dXJuIXQuZXZlbnQuYnV0dG9ufWZ1bmN0aW9uIEtuKCl7dmFyIHQ9dGhpcy5vd25lclNWR0VsZW1lbnR8fHRoaXM7cmV0dXJuW1swLDBdLFt0LndpZHRoLmJhc2VWYWwudmFsdWUsdC5oZWlnaHQuYmFzZVZhbC52YWx1ZV1dfWZ1bmN0aW9uIHRlKHQpe2Zvcig7IXQuX19icnVzaDspaWYoISh0PXQucGFyZW50Tm9kZSkpcmV0dXJuO3JldHVybiB0Ll9fYnJ1c2h9ZnVuY3Rpb24gbmUodCl7cmV0dXJuIHRbMF1bMF09PT10WzFdWzBdfHx0WzBdWzFdPT09dFsxXVsxXX1mdW5jdGlvbiBlZShuKXtmdW5jdGlvbiBlKHQpe3ZhciBlPXQucHJvcGVydHkoIl9fYnJ1c2giLHUpLnNlbGVjdEFsbCgiLm92ZXJsYXkiKS5kYXRhKFtRbigib3ZlcmxheSIpXSk7ZS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIiwib3ZlcmxheSIpLmF0dHIoInBvaW50ZXItZXZlbnRzIiwiYWxsIikuYXR0cigiY3Vyc29yIixiaC5vdmVybGF5KS5tZXJnZShlKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9dGUodGhpcykuZXh0ZW50O2N0KHRoaXMpLmF0dHIoIngiLHRbMF1bMF0pLmF0dHIoInkiLHRbMF1bMV0pLmF0dHIoIndpZHRoIix0WzFdWzBdLXRbMF1bMF0pLmF0dHIoImhlaWdodCIsdFsxXVsxXS10WzBdWzFdKX0pLHQuc2VsZWN0QWxsKCIuc2VsZWN0aW9uIikuZGF0YShbUW4oInNlbGVjdGlvbiIpXSkuZW50ZXIoKS5hcHBlbmQoInJlY3QiKS5hdHRyKCJjbGFzcyIsInNlbGVjdGlvbiIpLmF0dHIoImN1cnNvciIsYmguc2VsZWN0aW9uKS5hdHRyKCJmaWxsIiwiIzc3NyIpLmF0dHIoImZpbGwtb3BhY2l0eSIsLjMpLmF0dHIoInN0cm9rZSIsIiNmZmYiKS5hdHRyKCJzaGFwZS1yZW5kZXJpbmciLCJjcmlzcEVkZ2VzIik7dmFyIGk9dC5zZWxlY3RBbGwoIi5oYW5kbGUiKS5kYXRhKG4uaGFuZGxlcyxmdW5jdGlvbih0KXtyZXR1cm4gdC50eXBlfSk7aS5leGl0KCkucmVtb3ZlKCksaS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIixmdW5jdGlvbih0KXtyZXR1cm4iaGFuZGxlIGhhbmRsZS0tIit0LnR5cGV9KS5hdHRyKCJjdXJzb3IiLGZ1bmN0aW9uKHQpe3JldHVybiBiaFt0LnR5cGVdfSksdC5lYWNoKHIpLmF0dHIoImZpbGwiLCJub25lIikuYXR0cigicG9pbnRlci1ldmVudHMiLCJhbGwiKS5zdHlsZSgiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIiwicmdiYSgwLDAsMCwwKSIpLm9uKCJtb3VzZWRvd24uYnJ1c2ggdG91Y2hzdGFydC5icnVzaCIsYSl9ZnVuY3Rpb24gcigpe3ZhciB0PWN0KHRoaXMpLG49dGUodGhpcykuc2VsZWN0aW9uO24/KHQuc2VsZWN0QWxsKCIuc2VsZWN0aW9uIikuc3R5bGUoImRpc3BsYXkiLG51bGwpLmF0dHIoIngiLG5bMF1bMF0pLmF0dHIoInkiLG5bMF1bMV0pLmF0dHIoIndpZHRoIixuWzFdWzBdLW5bMF1bMF0pLmF0dHIoImhlaWdodCIsblsxXVsxXS1uWzBdWzFdKSx0LnNlbGVjdEFsbCgiLmhhbmRsZSIpLnN0eWxlKCJkaXNwbGF5IixudWxsKS5hdHRyKCJ4IixmdW5jdGlvbih0KXtyZXR1cm4iZSI9PT10LnR5cGVbdC50eXBlLmxlbmd0aC0xXT9uWzFdWzBdLWgvMjpuWzBdWzBdLWgvMn0pLmF0dHIoInkiLGZ1bmN0aW9uKHQpe3JldHVybiJzIj09PXQudHlwZVswXT9uWzFdWzFdLWgvMjpuWzBdWzFdLWgvMn0pLmF0dHIoIndpZHRoIixmdW5jdGlvbih0KXtyZXR1cm4ibiI9PT10LnR5cGV8fCJzIj09PXQudHlwZT9uWzFdWzBdLW5bMF1bMF0raDpofSkuYXR0cigiaGVpZ2h0IixmdW5jdGlvbih0KXtyZXR1cm4iZSI9PT10LnR5cGV8fCJ3Ij09PXQudHlwZT9uWzFdWzFdLW5bMF1bMV0raDpofSkpOnQuc2VsZWN0QWxsKCIuc2VsZWN0aW9uLC5oYW5kbGUiKS5zdHlsZSgiZGlzcGxheSIsIm5vbmUiKS5hdHRyKCJ4IixudWxsKS5hdHRyKCJ5IixudWxsKS5hdHRyKCJ3aWR0aCIsbnVsbCkuYXR0cigiaGVpZ2h0IixudWxsKX1mdW5jdGlvbiBpKHQsbil7cmV0dXJuIHQuX19icnVzaC5lbWl0dGVyfHxuZXcgbyh0LG4pfWZ1bmN0aW9uIG8odCxuKXt0aGlzLnRoYXQ9dCx0aGlzLmFyZ3M9bix0aGlzLnN0YXRlPXQuX19icnVzaCx0aGlzLmFjdGl2ZT0wfWZ1bmN0aW9uIGEoKXtmdW5jdGlvbiBlKCl7dmFyIHQ9cHQodyk7IUx8fG18fHh8fChNYXRoLmFicyh0WzBdLVVbMF0pPk1hdGguYWJzKHRbMV0tVVsxXSk/eD0hMDptPSEwKSxVPXQsYj0hMCxabigpLG8oKX1mdW5jdGlvbiBvKCl7dmFyIHQ7c3dpdGNoKHk9VVswXS1EWzBdLF89VVsxXS1EWzFdLEEpe2Nhc2UgZGg6Y2FzZSBoaDpUJiYoeT1NYXRoLm1heChDLXUsTWF0aC5taW4oei1kLHkpKSxjPXUreSxwPWQreSksTiYmKF89TWF0aC5tYXgoUC1sLE1hdGgubWluKFItdixfKSksaD1sK18sZz12K18pO2JyZWFrO2Nhc2UgcGg6VDwwPyh5PU1hdGgubWF4KEMtdSxNYXRoLm1pbih6LXUseSkpLGM9dSt5LHA9ZCk6VD4wJiYoeT1NYXRoLm1heChDLWQsTWF0aC5taW4oei1kLHkpKSxjPXUscD1kK3kpLE48MD8oXz1NYXRoLm1heChQLWwsTWF0aC5taW4oUi1sLF8pKSxoPWwrXyxnPXYpOk4+MCYmKF89TWF0aC5tYXgoUC12LE1hdGgubWluKFItdixfKSksaD1sLGc9ditfKTticmVhaztjYXNlIHZoOlQmJihjPU1hdGgubWF4KEMsTWF0aC5taW4oeix1LXkqVCkpLHA9TWF0aC5tYXgoQyxNYXRoLm1pbih6LGQreSpUKSkpLE4mJihoPU1hdGgubWF4KFAsTWF0aC5taW4oUixsLV8qTikpLGc9TWF0aC5tYXgoUCxNYXRoLm1pbihSLHYrXypOKSkpfXA8YyYmKFQqPS0xLHQ9dSx1PWQsZD10LHQ9YyxjPXAscD10LE0gaW4gbWgmJlkuYXR0cigiY3Vyc29yIixiaFtNPW1oW01dXSkpLGc8aCYmKE4qPS0xLHQ9bCxsPXYsdj10LHQ9aCxoPWcsZz10LE0gaW4geGgmJlkuYXR0cigiY3Vyc29yIixiaFtNPXhoW01dXSkpLFMuc2VsZWN0aW9uJiYoaz1TLnNlbGVjdGlvbiksbSYmKGM9a1swXVswXSxwPWtbMV1bMF0pLHgmJihoPWtbMF1bMV0sZz1rWzFdWzFdKSxrWzBdWzBdPT09YyYma1swXVsxXT09PWgmJmtbMV1bMF09PT1wJiZrWzFdWzFdPT09Z3x8KFMuc2VsZWN0aW9uPVtbYyxoXSxbcCxnXV0sci5jYWxsKHcpLHEuYnJ1c2goKSl9ZnVuY3Rpb24gYSgpe2lmKFduKCksdC5ldmVudC50b3VjaGVzKXtpZih0LmV2ZW50LnRvdWNoZXMubGVuZ3RoKXJldHVybjtmJiZjbGVhclRpbWVvdXQoZiksZj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Zj1udWxsfSw1MDApLE8ub24oInRvdWNobW92ZS5icnVzaCB0b3VjaGVuZC5icnVzaCB0b3VjaGNhbmNlbC5icnVzaCIsbnVsbCl9ZWxzZSBidCh0LmV2ZW50LnZpZXcsYiksQi5vbigia2V5ZG93bi5icnVzaCBrZXl1cC5icnVzaCBtb3VzZW1vdmUuYnJ1c2ggbW91c2V1cC5icnVzaCIsbnVsbCk7Ty5hdHRyKCJwb2ludGVyLWV2ZW50cyIsImFsbCIpLFkuYXR0cigiY3Vyc29yIixiaC5vdmVybGF5KSxTLnNlbGVjdGlvbiYmKGs9Uy5zZWxlY3Rpb24pLG5lKGspJiYoUy5zZWxlY3Rpb249bnVsbCxyLmNhbGwodykpLHEuZW5kKCl9aWYodC5ldmVudC50b3VjaGVzKXtpZih0LmV2ZW50LmNoYW5nZWRUb3VjaGVzLmxlbmd0aDx0LmV2ZW50LnRvdWNoZXMubGVuZ3RoKXJldHVybiBabigpfWVsc2UgaWYoZilyZXR1cm47aWYocy5hcHBseSh0aGlzLGFyZ3VtZW50cykpe3ZhciB1LGMsbCxoLGQscCx2LGcseSxfLGIsbSx4LHc9dGhpcyxNPXQuZXZlbnQudGFyZ2V0Ll9fZGF0YV9fLnR5cGUsQT0ic2VsZWN0aW9uIj09PSh0LmV2ZW50Lm1ldGFLZXk/TT0ib3ZlcmxheSI6TSk/aGg6dC5ldmVudC5hbHRLZXk/dmg6cGgsVD1uPT09eWg/bnVsbDp3aFtNXSxOPW49PT1naD9udWxsOk1oW01dLFM9dGUodyksRT1TLmV4dGVudCxrPVMuc2VsZWN0aW9uLEM9RVswXVswXSxQPUVbMF1bMV0sej1FWzFdWzBdLFI9RVsxXVsxXSxMPVQmJk4mJnQuZXZlbnQuc2hpZnRLZXksRD1wdCh3KSxVPUQscT1pKHcsYXJndW1lbnRzKS5iZWZvcmVzdGFydCgpOyJvdmVybGF5Ij09PU0/Uy5zZWxlY3Rpb249az1bW3U9bj09PXloP0M6RFswXSxsPW49PT1naD9QOkRbMV1dLFtkPW49PT15aD96OnUsdj1uPT09Z2g/UjpsXV06KHU9a1swXVswXSxsPWtbMF1bMV0sZD1rWzFdWzBdLHY9a1sxXVsxXSksYz11LGg9bCxwPWQsZz12O3ZhciBPPWN0KHcpLmF0dHIoInBvaW50ZXItZXZlbnRzIiwibm9uZSIpLFk9Ty5zZWxlY3RBbGwoIi5vdmVybGF5IikuYXR0cigiY3Vyc29yIixiaFtNXSk7aWYodC5ldmVudC50b3VjaGVzKU8ub24oInRvdWNobW92ZS5icnVzaCIsZSwhMCkub24oInRvdWNoZW5kLmJydXNoIHRvdWNoY2FuY2VsLmJydXNoIixhLCEwKTtlbHNle3ZhciBCPWN0KHQuZXZlbnQudmlldykub24oImtleWRvd24uYnJ1c2giLGZ1bmN0aW9uKCl7c3dpdGNoKHQuZXZlbnQua2V5Q29kZSl7Y2FzZSAxNjpMPVQmJk47YnJlYWs7Y2FzZSAxODpBPT09cGgmJihUJiYoZD1wLXkqVCx1PWMreSpUKSxOJiYodj1nLV8qTixsPWgrXypOKSxBPXZoLG8oKSk7YnJlYWs7Y2FzZSAzMjpBIT09cGgmJkEhPT12aHx8KFQ8MD9kPXAteTpUPjAmJih1PWMteSksTjwwP3Y9Zy1fOk4+MCYmKGw9aC1fKSxBPWRoLFkuYXR0cigiY3Vyc29yIixiaC5zZWxlY3Rpb24pLG8oKSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm59Wm4oKX0sITApLm9uKCJrZXl1cC5icnVzaCIsZnVuY3Rpb24oKXtzd2l0Y2godC5ldmVudC5rZXlDb2RlKXtjYXNlIDE2OkwmJihtPXg9TD0hMSxvKCkpO2JyZWFrO2Nhc2UgMTg6QT09PXZoJiYoVDwwP2Q9cDpUPjAmJih1PWMpLE48MD92PWc6Tj4wJiYobD1oKSxBPXBoLG8oKSk7YnJlYWs7Y2FzZSAzMjpBPT09ZGgmJih0LmV2ZW50LmFsdEtleT8oVCYmKGQ9cC15KlQsdT1jK3kqVCksTiYmKHY9Zy1fKk4sbD1oK18qTiksQT12aCk6KFQ8MD9kPXA6VD4wJiYodT1jKSxOPDA/dj1nOk4+MCYmKGw9aCksQT1waCksWS5hdHRyKCJjdXJzb3IiLGJoW01dKSxvKCkpO2JyZWFrO2RlZmF1bHQ6cmV0dXJufVpuKCl9LCEwKS5vbigibW91c2Vtb3ZlLmJydXNoIixlLCEwKS5vbigibW91c2V1cC5icnVzaCIsYSwhMCk7X3QodC5ldmVudC52aWV3KX1XbigpLERuKHcpLHIuY2FsbCh3KSxxLnN0YXJ0KCl9fWZ1bmN0aW9uIHUoKXt2YXIgdD10aGlzLl9fYnJ1c2h8fHtzZWxlY3Rpb246bnVsbH07cmV0dXJuIHQuZXh0ZW50PWMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHQuZGltPW4sdH12YXIgZixjPUtuLHM9Sm4sbD1OKGUsInN0YXJ0IiwiYnJ1c2giLCJlbmQiKSxoPTY7cmV0dXJuIGUubW92ZT1mdW5jdGlvbih0LGUpe3Quc2VsZWN0aW9uP3Qub24oInN0YXJ0LmJydXNoIixmdW5jdGlvbigpe2kodGhpcyxhcmd1bWVudHMpLmJlZm9yZXN0YXJ0KCkuc3RhcnQoKX0pLm9uKCJpbnRlcnJ1cHQuYnJ1c2ggZW5kLmJydXNoIixmdW5jdGlvbigpe2kodGhpcyxhcmd1bWVudHMpLmVuZCgpfSkudHdlZW4oImJydXNoIixmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7YS5zZWxlY3Rpb249MT09PXQmJm5lKGMpP251bGw6cyh0KSxyLmNhbGwobyksdS5icnVzaCgpfXZhciBvPXRoaXMsYT1vLl9fYnJ1c2gsdT1pKG8sYXJndW1lbnRzKSxmPWEuc2VsZWN0aW9uLGM9bi5pbnB1dCgiZnVuY3Rpb24iPT10eXBlb2YgZT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTplLGEuZXh0ZW50KSxzPWRuKGYsYyk7cmV0dXJuIGYmJmM/dDp0KDEpfSk6dC5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLG89dGhpcy5fX2JydXNoLGE9bi5pbnB1dCgiZnVuY3Rpb24iPT10eXBlb2YgZT9lLmFwcGx5KHRoaXMsdCk6ZSxvLmV4dGVudCksdT1pKHRoaXMsdCkuYmVmb3Jlc3RhcnQoKTtEbih0aGlzKSxvLnNlbGVjdGlvbj1udWxsPT1hfHxuZShhKT9udWxsOmEsci5jYWxsKHRoaXMpLHUuc3RhcnQoKS5icnVzaCgpLmVuZCgpfSl9LG8ucHJvdG90eXBlPXtiZWZvcmVzdGFydDpmdW5jdGlvbigpe3JldHVybiAxPT0rK3RoaXMuYWN0aXZlJiYodGhpcy5zdGF0ZS5lbWl0dGVyPXRoaXMsdGhpcy5zdGFydGluZz0hMCksdGhpc30sc3RhcnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGFydGluZyYmKHRoaXMuc3RhcnRpbmc9ITEsdGhpcy5lbWl0KCJzdGFydCIpKSx0aGlzfSxicnVzaDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVtaXQoImJydXNoIiksdGhpc30sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIDA9PS0tdGhpcy5hY3RpdmUmJihkZWxldGUgdGhpcy5zdGF0ZS5lbWl0dGVyLHRoaXMuZW1pdCgiZW5kIikpLHRoaXN9LGVtaXQ6ZnVuY3Rpb24odCl7b3QobmV3IGZ1bmN0aW9uKHQsbixlKXt0aGlzLnRhcmdldD10LHRoaXMudHlwZT1uLHRoaXMuc2VsZWN0aW9uPWV9KGUsdCxuLm91dHB1dCh0aGlzLnN0YXRlLnNlbGVjdGlvbikpLGwuYXBwbHksbCxbdCx0aGlzLnRoYXQsdGhpcy5hcmdzXSl9fSxlLmV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz0iZnVuY3Rpb24iPT10eXBlb2YgdD90OiRuKFtbK3RbMF1bMF0sK3RbMF1bMV1dLFsrdFsxXVswXSwrdFsxXVsxXV1dKSxlKTpjfSxlLmZpbHRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocz0iZnVuY3Rpb24iPT10eXBlb2YgdD90OiRuKCEhdCksZSk6c30sZS5oYW5kbGVTaXplPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhoPSt0LGUpOmh9LGUub249ZnVuY3Rpb24oKXt2YXIgdD1sLm9uLmFwcGx5KGwsYXJndW1lbnRzKTtyZXR1cm4gdD09PWw/ZTp0fSxlfWZ1bmN0aW9uIHJlKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiBpZSgpe3RoaXMuX3gwPXRoaXMuX3kwPXRoaXMuX3gxPXRoaXMuX3kxPW51bGwsdGhpcy5fPSIifWZ1bmN0aW9uIG9lKCl7cmV0dXJuIG5ldyBpZX1mdW5jdGlvbiBhZSh0KXtyZXR1cm4gdC5zb3VyY2V9ZnVuY3Rpb24gdWUodCl7cmV0dXJuIHQudGFyZ2V0fWZ1bmN0aW9uIGZlKHQpe3JldHVybiB0LnJhZGl1c31mdW5jdGlvbiBjZSh0KXtyZXR1cm4gdC5zdGFydEFuZ2xlfWZ1bmN0aW9uIHNlKHQpe3JldHVybiB0LmVuZEFuZ2xlfWZ1bmN0aW9uIGxlKCl7fWZ1bmN0aW9uIGhlKHQsbil7dmFyIGU9bmV3IGxlO2lmKHQgaW5zdGFuY2VvZiBsZSl0LmVhY2goZnVuY3Rpb24odCxuKXtlLnNldChuLHQpfSk7ZWxzZSBpZihBcnJheS5pc0FycmF5KHQpKXt2YXIgcixpPS0xLG89dC5sZW5ndGg7aWYobnVsbD09bilmb3IoOysraTxvOyllLnNldChpLHRbaV0pO2Vsc2UgZm9yKDsrK2k8bzspZS5zZXQobihyPXRbaV0saSx0KSxyKX1lbHNlIGlmKHQpZm9yKHZhciBhIGluIHQpZS5zZXQoYSx0W2FdKTtyZXR1cm4gZX1mdW5jdGlvbiBkZSgpe3JldHVybnt9fWZ1bmN0aW9uIHBlKHQsbixlKXt0W25dPWV9ZnVuY3Rpb24gdmUoKXtyZXR1cm4gaGUoKX1mdW5jdGlvbiBnZSh0LG4sZSl7dC5zZXQobixlKX1mdW5jdGlvbiB5ZSgpe31mdW5jdGlvbiBfZSh0LG4pe3ZhciBlPW5ldyB5ZTtpZih0IGluc3RhbmNlb2YgeWUpdC5lYWNoKGZ1bmN0aW9uKHQpe2UuYWRkKHQpfSk7ZWxzZSBpZih0KXt2YXIgcj0tMSxpPXQubGVuZ3RoO2lmKG51bGw9PW4pZm9yKDsrK3I8aTspZS5hZGQodFtyXSk7ZWxzZSBmb3IoOysrcjxpOyllLmFkZChuKHRbcl0scix0KSl9cmV0dXJuIGV9ZnVuY3Rpb24gYmUodCxuKXtyZXR1cm4gdC1ufWZ1bmN0aW9uIG1lKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiB4ZSh0LG4pe2Zvcih2YXIgZSxyPS0xLGk9bi5sZW5ndGg7KytyPGk7KWlmKGU9ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9blswXSxyPW5bMV0saT0tMSxvPTAsYT10Lmxlbmd0aCx1PWEtMTtvPGE7dT1vKyspe3ZhciBmPXRbb10sYz1mWzBdLHM9ZlsxXSxsPXRbdV0saD1sWzBdLGQ9bFsxXTtpZihmdW5jdGlvbih0LG4sZSl7dmFyIHI7cmV0dXJuIGZ1bmN0aW9uKHQsbixlKXtyZXR1cm4oblswXS10WzBdKSooZVsxXS10WzFdKT09KGVbMF0tdFswXSkqKG5bMV0tdFsxXSl9KHQsbixlKSYmZnVuY3Rpb24odCxuLGUpe3JldHVybiB0PD1uJiZuPD1lfHxlPD1uJiZuPD10fSh0W3I9Kyh0WzBdPT09blswXSldLGVbcl0sbltyXSl9KGYsbCxuKSlyZXR1cm4gMDtzPnIhPWQ+ciYmZTwoaC1jKSooci1zKS8oZC1zKStjJiYoaT0taSl9cmV0dXJuIGl9KHQsbltyXSkpcmV0dXJuIGU7cmV0dXJuIDB9ZnVuY3Rpb24gd2UoKXt9ZnVuY3Rpb24gTWUoKXtmdW5jdGlvbiB0KHQpe3ZhciBlPWEodCk7aWYoQXJyYXkuaXNBcnJheShlKSllPWUuc2xpY2UoKS5zb3J0KGJlKTtlbHNle3ZhciByPXUodCksaT1yWzBdLG89clsxXTtlPWQoaSxvLGUpLGU9cyhNYXRoLmZsb29yKGkvZSkqZSxNYXRoLmZsb29yKG8vZSkqZSxlKX1yZXR1cm4gZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG4odCxlKX0pfWZ1bmN0aW9uIG4odCxuKXt2YXIgcj1bXSxhPVtdO3JldHVybiBmdW5jdGlvbih0LG4scil7ZnVuY3Rpb24gYSh0KXt2YXIgbixpLG89W3RbMF1bMF0rdSx0WzBdWzFdK2ZdLGE9W3RbMV1bMF0rdSx0WzFdWzFdK2ZdLGM9ZShvKSxzPWUoYSk7KG49cFtjXSk/KGk9ZFtzXSk/KGRlbGV0ZSBwW24uZW5kXSxkZWxldGUgZFtpLnN0YXJ0XSxuPT09aT8obi5yaW5nLnB1c2goYSkscihuLnJpbmcpKTpkW24uc3RhcnRdPXBbaS5lbmRdPXtzdGFydDpuLnN0YXJ0LGVuZDppLmVuZCxyaW5nOm4ucmluZy5jb25jYXQoaS5yaW5nKX0pOihkZWxldGUgcFtuLmVuZF0sbi5yaW5nLnB1c2goYSkscFtuLmVuZD1zXT1uKToobj1kW3NdKT8oaT1wW2NdKT8oZGVsZXRlIGRbbi5zdGFydF0sZGVsZXRlIHBbaS5lbmRdLG49PT1pPyhuLnJpbmcucHVzaChhKSxyKG4ucmluZykpOmRbaS5zdGFydF09cFtuLmVuZF09e3N0YXJ0Omkuc3RhcnQsZW5kOm4uZW5kLHJpbmc6aS5yaW5nLmNvbmNhdChuLnJpbmcpfSk6KGRlbGV0ZSBkW24uc3RhcnRdLG4ucmluZy51bnNoaWZ0KG8pLGRbbi5zdGFydD1jXT1uKTpkW2NdPXBbc109e3N0YXJ0OmMsZW5kOnMscmluZzpbbyxhXX19dmFyIHUsZixjLHMsbCxoLGQ9bmV3IEFycmF5LHA9bmV3IEFycmF5O3U9Zj0tMSxzPXRbMF0+PW4sVWhbczw8MV0uZm9yRWFjaChhKTtmb3IoOysrdTxpLTE7KWM9cyxzPXRbdSsxXT49bixVaFtjfHM8PDFdLmZvckVhY2goYSk7VWhbczw8MF0uZm9yRWFjaChhKTtmb3IoOysrZjxvLTE7KXtmb3IodT0tMSxzPXRbZippK2ldPj1uLGw9dFtmKmldPj1uLFVoW3M8PDF8bDw8Ml0uZm9yRWFjaChhKTsrK3U8aS0xOyljPXMscz10W2YqaStpK3UrMV0+PW4saD1sLGw9dFtmKmkrdSsxXT49bixVaFtjfHM8PDF8bDw8MnxoPDwzXS5mb3JFYWNoKGEpO1VoW3N8bDw8M10uZm9yRWFjaChhKX11PS0xLGw9dFtmKmldPj1uLFVoW2w8PDJdLmZvckVhY2goYSk7Zm9yKDsrK3U8aS0xOyloPWwsbD10W2YqaSt1KzFdPj1uLFVoW2w8PDJ8aDw8M10uZm9yRWFjaChhKTtVaFtsPDwzXS5mb3JFYWNoKGEpfSh0LG4sZnVuY3Rpb24oZSl7ZihlLHQsbiksZnVuY3Rpb24odCl7Zm9yKHZhciBuPTAsZT10Lmxlbmd0aCxyPXRbZS0xXVsxXSp0WzBdWzBdLXRbZS0xXVswXSp0WzBdWzFdOysrbjxlOylyKz10W24tMV1bMV0qdFtuXVswXS10W24tMV1bMF0qdFtuXVsxXTtyZXR1cm4gcn0oZSk+MD9yLnB1c2goW2VdKTphLnB1c2goZSl9KSxhLmZvckVhY2goZnVuY3Rpb24odCl7Zm9yKHZhciBuLGU9MCxpPXIubGVuZ3RoO2U8aTsrK2UpaWYoLTEhPT14ZSgobj1yW2VdKVswXSx0KSlyZXR1cm4gdm9pZCBuLnB1c2godCl9KSx7dHlwZToiTXVsdGlQb2x5Z29uIix2YWx1ZTpuLGNvb3JkaW5hdGVzOnJ9fWZ1bmN0aW9uIGUodCl7cmV0dXJuIDIqdFswXSt0WzFdKihpKzEpKjR9ZnVuY3Rpb24gcih0LG4sZSl7dC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciByLGE9dFswXSx1PXRbMV0sZj0wfGEsYz0wfHUscz1uW2MqaStmXTthPjAmJmE8aSYmZj09PWEmJihyPW5bYyppK2YtMV0sdFswXT1hKyhlLXIpLyhzLXIpLS41KSx1PjAmJnU8byYmYz09PXUmJihyPW5bKGMtMSkqaStmXSx0WzFdPXUrKGUtcikvKHMtciktLjUpfSl9dmFyIGk9MSxvPTEsYT1wLGY9cjtyZXR1cm4gdC5jb250b3VyPW4sdC5zaXplPWZ1bmN0aW9uKG4pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybltpLG9dO3ZhciBlPU1hdGguY2VpbChuWzBdKSxyPU1hdGguY2VpbChuWzFdKTtpZighKGU+MCYmcj4wKSl0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgc2l6ZSIpO3JldHVybiBpPWUsbz1yLHR9LHQudGhyZXNob2xkcz1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOkFycmF5LmlzQXJyYXkobik/bWUoRGguY2FsbChuKSk6bWUobiksdCk6YX0sdC5zbW9vdGg9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9bj9yOndlLHQpOmY9PT1yfSx0fWZ1bmN0aW9uIEFlKHQsbixlKXtmb3IodmFyIHI9dC53aWR0aCxpPXQuaGVpZ2h0LG89MSsoZTw8MSksYT0wO2E8aTsrK2EpZm9yKHZhciB1PTAsZj0wO3U8citlOysrdSl1PHImJihmKz10LmRhdGFbdSthKnJdKSx1Pj1lJiYodT49byYmKGYtPXQuZGF0YVt1LW8rYSpyXSksbi5kYXRhW3UtZSthKnJdPWYvTWF0aC5taW4odSsxLHItMStvLXUsbykpfWZ1bmN0aW9uIFRlKHQsbixlKXtmb3IodmFyIHI9dC53aWR0aCxpPXQuaGVpZ2h0LG89MSsoZTw8MSksYT0wO2E8cjsrK2EpZm9yKHZhciB1PTAsZj0wO3U8aStlOysrdSl1PGkmJihmKz10LmRhdGFbYSt1KnJdKSx1Pj1lJiYodT49byYmKGYtPXQuZGF0YVthKyh1LW8pKnJdKSxuLmRhdGFbYSsodS1lKSpyXT1mL01hdGgubWluKHUrMSxpLTErby11LG8pKX1mdW5jdGlvbiBOZSh0KXtyZXR1cm4gdFswXX1mdW5jdGlvbiBTZSh0KXtyZXR1cm4gdFsxXX1mdW5jdGlvbiBFZSh0KXtyZXR1cm4gbmV3IEZ1bmN0aW9uKCJkIiwicmV0dXJuIHsiK3QubWFwKGZ1bmN0aW9uKHQsbil7cmV0dXJuIEpTT04uc3RyaW5naWZ5KHQpKyI6IGRbIituKyJdIn0pLmpvaW4oIiwiKSsifSIpfWZ1bmN0aW9uIGtlKHQpe2Z1bmN0aW9uIG4odCxuKXtmdW5jdGlvbiBlKCl7aWYoYylyZXR1cm4gT2g7aWYocylyZXR1cm4gcz0hMSxxaDt2YXIgbixlLHI9dTtpZih0LmNoYXJDb2RlQXQocik9PT1ZaCl7Zm9yKDt1Kys8YSYmdC5jaGFyQ29kZUF0KHUpIT09WWh8fHQuY2hhckNvZGVBdCgrK3UpPT09WWg7KTtyZXR1cm4obj11KT49YT9jPSEwOihlPXQuY2hhckNvZGVBdCh1KyspKT09PUJoP3M9ITA6ZT09PUZoJiYocz0hMCx0LmNoYXJDb2RlQXQodSk9PT1CaCYmKyt1KSx0LnNsaWNlKHIrMSxuLTEpLnJlcGxhY2UoLyIiL2csJyInKX1mb3IoO3U8YTspe2lmKChlPXQuY2hhckNvZGVBdChuPXUrKykpPT09Qmgpcz0hMDtlbHNlIGlmKGU9PT1GaClzPSEwLHQuY2hhckNvZGVBdCh1KT09PUJoJiYrK3U7ZWxzZSBpZihlIT09byljb250aW51ZTtyZXR1cm4gdC5zbGljZShyLG4pfXJldHVybiBjPSEwLHQuc2xpY2UocixhKX12YXIgcixpPVtdLGE9dC5sZW5ndGgsdT0wLGY9MCxjPWE8PTAscz0hMTtmb3IodC5jaGFyQ29kZUF0KGEtMSk9PT1CaCYmLS1hLHQuY2hhckNvZGVBdChhLTEpPT09RmgmJi0tYTsocj1lKCkpIT09T2g7KXtmb3IodmFyIGw9W107ciE9PXFoJiZyIT09T2g7KWwucHVzaChyKSxyPWUoKTtuJiZudWxsPT0obD1uKGwsZisrKSl8fGkucHVzaChsKX1yZXR1cm4gaX1mdW5jdGlvbiBlKG4pe3JldHVybiBuLm1hcChyKS5qb2luKHQpfWZ1bmN0aW9uIHIodCl7cmV0dXJuIG51bGw9PXQ/IiI6aS50ZXN0KHQrPSIiKT8nIicrdC5yZXBsYWNlKC8iL2csJyIiJykrJyInOnR9dmFyIGk9bmV3IFJlZ0V4cCgnWyInK3QrIlxuXHJdIiksbz10LmNoYXJDb2RlQXQoMCk7cmV0dXJue3BhcnNlOmZ1bmN0aW9uKHQsZSl7dmFyIHIsaSxvPW4odCxmdW5jdGlvbih0LG4pe2lmKHIpcmV0dXJuIHIodCxuLTEpO2k9dCxyPWU/ZnVuY3Rpb24odCxuKXt2YXIgZT1FZSh0KTtyZXR1cm4gZnVuY3Rpb24ocixpKXtyZXR1cm4gbihlKHIpLGksdCl9fSh0LGUpOkVlKHQpfSk7cmV0dXJuIG8uY29sdW1ucz1pfHxbXSxvfSxwYXJzZVJvd3M6bixmb3JtYXQ6ZnVuY3Rpb24obixlKXtyZXR1cm4gbnVsbD09ZSYmKGU9ZnVuY3Rpb24odCl7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKSxlPVtdO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCl7Zm9yKHZhciByIGluIHQpciBpbiBufHxlLnB1c2gobltyXT1yKX0pLGV9KG4pKSxbZS5tYXAocikuam9pbih0KV0uY29uY2F0KG4ubWFwKGZ1bmN0aW9uKG4pe3JldHVybiBlLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gcihuW3RdKX0pLmpvaW4odCl9KSkuam9pbigiXG4iKX0sZm9ybWF0Um93czpmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXAoZSkuam9pbigiXG4iKX19fWZ1bmN0aW9uIENlKHQpe2lmKCF0Lm9rKXRocm93IG5ldyBFcnJvcih0LnN0YXR1cysiICIrdC5zdGF0dXNUZXh0KTtyZXR1cm4gdC5ibG9iKCl9ZnVuY3Rpb24gUGUodCl7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzKyIgIit0LnN0YXR1c1RleHQpO3JldHVybiB0LmFycmF5QnVmZmVyKCl9ZnVuY3Rpb24gemUodCl7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzKyIgIit0LnN0YXR1c1RleHQpO3JldHVybiB0LnRleHQoKX1mdW5jdGlvbiBSZSh0LG4pe3JldHVybiBmZXRjaCh0LG4pLnRoZW4oemUpfWZ1bmN0aW9uIExlKHQpe3JldHVybiBmdW5jdGlvbihuLGUscil7cmV0dXJuIDI9PT1hcmd1bWVudHMubGVuZ3RoJiYiZnVuY3Rpb24iPT10eXBlb2YgZSYmKHI9ZSxlPXZvaWQgMCksUmUobixlKS50aGVuKGZ1bmN0aW9uKG4pe3JldHVybiB0KG4scil9KX19ZnVuY3Rpb24gRGUodCl7aWYoIXQub2spdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzKyIgIit0LnN0YXR1c1RleHQpO3JldHVybiB0Lmpzb24oKX1mdW5jdGlvbiBVZSh0KXtyZXR1cm4gZnVuY3Rpb24obixlKXtyZXR1cm4gUmUobixlKS50aGVuKGZ1bmN0aW9uKG4pe3JldHVybihuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcobix0KX0pfX1mdW5jdGlvbiBxZSh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gT2UoKXtyZXR1cm4gMWUtNiooTWF0aC5yYW5kb20oKS0uNSl9ZnVuY3Rpb24gWWUodCxuLGUscil7aWYoaXNOYU4obil8fGlzTmFOKGUpKXJldHVybiB0O3ZhciBpLG8sYSx1LGYsYyxzLGwsaCxkPXQuX3Jvb3QscD17ZGF0YTpyfSx2PXQuX3gwLGc9dC5feTAseT10Ll94MSxfPXQuX3kxO2lmKCFkKXJldHVybiB0Ll9yb290PXAsdDtmb3IoO2QubGVuZ3RoOylpZigoYz1uPj0obz0odit5KS8yKSk/dj1vOnk9bywocz1lPj0oYT0oZytfKS8yKSk/Zz1hOl89YSxpPWQsIShkPWRbbD1zPDwxfGNdKSlyZXR1cm4gaVtsXT1wLHQ7aWYodT0rdC5feC5jYWxsKG51bGwsZC5kYXRhKSxmPSt0Ll95LmNhbGwobnVsbCxkLmRhdGEpLG49PT11JiZlPT09ZilyZXR1cm4gcC5uZXh0PWQsaT9pW2xdPXA6dC5fcm9vdD1wLHQ7ZG97aT1pP2lbbF09bmV3IEFycmF5KDQpOnQuX3Jvb3Q9bmV3IEFycmF5KDQpLChjPW4+PShvPSh2K3kpLzIpKT92PW86eT1vLChzPWU+PShhPShnK18pLzIpKT9nPWE6Xz1hfXdoaWxlKChsPXM8PDF8Yyk9PShoPShmPj1hKTw8MXx1Pj1vKSk7cmV0dXJuIGlbaF09ZCxpW2xdPXAsdH1mdW5jdGlvbiBCZSh0LG4sZSxyLGkpe3RoaXMubm9kZT10LHRoaXMueDA9bix0aGlzLnkwPWUsdGhpcy54MT1yLHRoaXMueTE9aX1mdW5jdGlvbiBGZSh0KXtyZXR1cm4gdFswXX1mdW5jdGlvbiBJZSh0KXtyZXR1cm4gdFsxXX1mdW5jdGlvbiBqZSh0LG4sZSl7dmFyIHI9bmV3IEhlKG51bGw9PW4/RmU6bixudWxsPT1lP0llOmUsTmFOLE5hTixOYU4sTmFOKTtyZXR1cm4gbnVsbD09dD9yOnIuYWRkQWxsKHQpfWZ1bmN0aW9uIEhlKHQsbixlLHIsaSxvKXt0aGlzLl94PXQsdGhpcy5feT1uLHRoaXMuX3gwPWUsdGhpcy5feTA9cix0aGlzLl94MT1pLHRoaXMuX3kxPW8sdGhpcy5fcm9vdD12b2lkIDB9ZnVuY3Rpb24gWGUodCl7Zm9yKHZhciBuPXtkYXRhOnQuZGF0YX0sZT1uO3Q9dC5uZXh0OyllPWUubmV4dD17ZGF0YTp0LmRhdGF9O3JldHVybiBufWZ1bmN0aW9uIEdlKHQpe3JldHVybiB0LngrdC52eH1mdW5jdGlvbiBWZSh0KXtyZXR1cm4gdC55K3Qudnl9ZnVuY3Rpb24gJGUodCl7cmV0dXJuIHQuaW5kZXh9ZnVuY3Rpb24gV2UodCxuKXt2YXIgZT10LmdldChuKTtpZighZSl0aHJvdyBuZXcgRXJyb3IoIm1pc3Npbmc6ICIrbik7cmV0dXJuIGV9ZnVuY3Rpb24gWmUodCl7cmV0dXJuIHQueH1mdW5jdGlvbiBRZSh0KXtyZXR1cm4gdC55fWZ1bmN0aW9uIEplKHQsbil7aWYoKGU9KHQ9bj90LnRvRXhwb25lbnRpYWwobi0xKTp0LnRvRXhwb25lbnRpYWwoKSkuaW5kZXhPZigiZSIpKTwwKXJldHVybiBudWxsO3ZhciBlLHI9dC5zbGljZSgwLGUpO3JldHVybltyLmxlbmd0aD4xP3JbMF0rci5zbGljZSgyKTpyLCt0LnNsaWNlKGUrMSldfWZ1bmN0aW9uIEtlKHQpe3JldHVybih0PUplKE1hdGguYWJzKHQpKSk/dFsxXTpOYU59ZnVuY3Rpb24gdHIodCl7cmV0dXJuIG5ldyBucih0KX1mdW5jdGlvbiBucih0KXtpZighKG49YWQuZXhlYyh0KSkpdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGZvcm1hdDogIit0KTt2YXIgbjt0aGlzLmZpbGw9blsxXXx8IiAiLHRoaXMuYWxpZ249blsyXXx8Ij4iLHRoaXMuc2lnbj1uWzNdfHwiLSIsdGhpcy5zeW1ib2w9bls0XXx8IiIsdGhpcy56ZXJvPSEhbls1XSx0aGlzLndpZHRoPW5bNl0mJituWzZdLHRoaXMuY29tbWE9ISFuWzddLHRoaXMucHJlY2lzaW9uPW5bOF0mJituWzhdLnNsaWNlKDEpLHRoaXMudHJpbT0hIW5bOV0sdGhpcy50eXBlPW5bMTBdfHwiIn1mdW5jdGlvbiBlcih0LG4pe3ZhciBlPUplKHQsbik7aWYoIWUpcmV0dXJuIHQrIiI7dmFyIHI9ZVswXSxpPWVbMV07cmV0dXJuIGk8MD8iMC4iK25ldyBBcnJheSgtaSkuam9pbigiMCIpK3I6ci5sZW5ndGg+aSsxP3Iuc2xpY2UoMCxpKzEpKyIuIityLnNsaWNlKGkrMSk6cituZXcgQXJyYXkoaS1yLmxlbmd0aCsyKS5qb2luKCIwIil9ZnVuY3Rpb24gcnIodCl7cmV0dXJuIHR9ZnVuY3Rpb24gaXIodCl7ZnVuY3Rpb24gbih0KXtmdW5jdGlvbiBuKHQpe3ZhciBuLHIsYSxzPXkseD1fO2lmKCJjIj09PWcpeD1iKHQpK3gsdD0iIjtlbHNle3ZhciB3PSh0PSt0KTwwO2lmKHQ9YihNYXRoLmFicyh0KSxwKSx2JiYodD1mdW5jdGlvbih0KXt0OmZvcih2YXIgbixlPXQubGVuZ3RoLHI9MSxpPS0xO3I8ZTsrK3Ipc3dpdGNoKHRbcl0pe2Nhc2UiLiI6aT1uPXI7YnJlYWs7Y2FzZSIwIjowPT09aSYmKGk9ciksbj1yO2JyZWFrO2RlZmF1bHQ6aWYoaT4wKXtpZighK3Rbcl0pYnJlYWsgdDtpPTB9fXJldHVybiBpPjA/dC5zbGljZSgwLGkpK3Quc2xpY2UobisxKTp0fSh0KSksdyYmMD09K3QmJih3PSExKSxzPSh3PyIoIj09PWM/YzoiLSI6Ii0iPT09Y3x8IigiPT09Yz8iIjpjKStzLHg9KCJzIj09PWc/c2RbOCt1ZC8zXToiIikreCsodyYmIigiPT09Yz8iKSI6IiIpLG0pZm9yKG49LTEscj10Lmxlbmd0aDsrK248cjspaWYoNDg+KGE9dC5jaGFyQ29kZUF0KG4pKXx8YT41Nyl7eD0oNDY9PT1hP2krdC5zbGljZShuKzEpOnQuc2xpY2UobikpK3gsdD10LnNsaWNlKDAsbik7YnJlYWt9fWQmJiFsJiYodD1lKHQsMS8wKSk7dmFyIE09cy5sZW5ndGgrdC5sZW5ndGgreC5sZW5ndGgsQT1NPGg/bmV3IEFycmF5KGgtTSsxKS5qb2luKHUpOiIiO3N3aXRjaChkJiZsJiYodD1lKEErdCxBLmxlbmd0aD9oLXgubGVuZ3RoOjEvMCksQT0iIiksZil7Y2FzZSI8Ijp0PXMrdCt4K0E7YnJlYWs7Y2FzZSI9Ijp0PXMrQSt0K3g7YnJlYWs7Y2FzZSJeIjp0PUEuc2xpY2UoMCxNPUEubGVuZ3RoPj4xKStzK3QreCtBLnNsaWNlKE0pO2JyZWFrO2RlZmF1bHQ6dD1BK3MrdCt4fXJldHVybiBvKHQpfXZhciB1PSh0PXRyKHQpKS5maWxsLGY9dC5hbGlnbixjPXQuc2lnbixzPXQuc3ltYm9sLGw9dC56ZXJvLGg9dC53aWR0aCxkPXQuY29tbWEscD10LnByZWNpc2lvbix2PXQudHJpbSxnPXQudHlwZTsibiI9PT1nPyhkPSEwLGc9ImciKTpjZFtnXXx8KG51bGw9PXAmJihwPTEyKSx2PSEwLGc9ImciKSwobHx8IjAiPT09dSYmIj0iPT09ZikmJihsPSEwLHU9IjAiLGY9Ij0iKTt2YXIgeT0iJCI9PT1zP3JbMF06IiMiPT09cyYmL1tib3hYXS8udGVzdChnKT8iMCIrZy50b0xvd2VyQ2FzZSgpOiIiLF89IiQiPT09cz9yWzFdOi9bJXBdLy50ZXN0KGcpP2E6IiIsYj1jZFtnXSxtPS9bZGVmZ3BycyVdLy50ZXN0KGcpO3JldHVybiBwPW51bGw9PXA/NjovW2dwcnNdLy50ZXN0KGcpP01hdGgubWF4KDEsTWF0aC5taW4oMjEscCkpOk1hdGgubWF4KDAsTWF0aC5taW4oMjAscCkpLG4udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdCsiIn0sbn12YXIgZT10Lmdyb3VwaW5nJiZ0LnRob3VzYW5kcz9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbihlLHIpe2Zvcih2YXIgaT1lLmxlbmd0aCxvPVtdLGE9MCx1PXRbMF0sZj0wO2k+MCYmdT4wJiYoZit1KzE+ciYmKHU9TWF0aC5tYXgoMSxyLWYpKSxvLnB1c2goZS5zdWJzdHJpbmcoaS09dSxpK3UpKSwhKChmKz11KzEpPnIpKTspdT10W2E9KGErMSkldC5sZW5ndGhdO3JldHVybiBvLnJldmVyc2UoKS5qb2luKG4pfX0odC5ncm91cGluZyx0LnRob3VzYW5kcyk6cnIscj10LmN1cnJlbmN5LGk9dC5kZWNpbWFsLG89dC5udW1lcmFscz9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIG4ucmVwbGFjZSgvWzAtOV0vZyxmdW5jdGlvbihuKXtyZXR1cm4gdFsrbl19KX19KHQubnVtZXJhbHMpOnJyLGE9dC5wZXJjZW50fHwiJSI7cmV0dXJue2Zvcm1hdDpuLGZvcm1hdFByZWZpeDpmdW5jdGlvbih0LGUpe3ZhciByPW4oKHQ9dHIodCksdC50eXBlPSJmIix0KSksaT0zKk1hdGgubWF4KC04LE1hdGgubWluKDgsTWF0aC5mbG9vcihLZShlKS8zKSkpLG89TWF0aC5wb3coMTAsLWkpLGE9c2RbOCtpLzNdO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gcihvKnQpK2F9fX19ZnVuY3Rpb24gb3Iobil7cmV0dXJuIGZkPWlyKG4pLHQuZm9ybWF0PWZkLmZvcm1hdCx0LmZvcm1hdFByZWZpeD1mZC5mb3JtYXRQcmVmaXgsZmR9ZnVuY3Rpb24gYXIodCl7cmV0dXJuIE1hdGgubWF4KDAsLUtlKE1hdGguYWJzKHQpKSl9ZnVuY3Rpb24gdXIodCxuKXtyZXR1cm4gTWF0aC5tYXgoMCwzKk1hdGgubWF4KC04LE1hdGgubWluKDgsTWF0aC5mbG9vcihLZShuKS8zKSkpLUtlKE1hdGguYWJzKHQpKSl9ZnVuY3Rpb24gZnIodCxuKXtyZXR1cm4gdD1NYXRoLmFicyh0KSxuPU1hdGguYWJzKG4pLXQsTWF0aC5tYXgoMCxLZShuKS1LZSh0KSkrMX1mdW5jdGlvbiBjcigpe3JldHVybiBuZXcgc3J9ZnVuY3Rpb24gc3IoKXt0aGlzLnJlc2V0KCl9ZnVuY3Rpb24gbHIodCxuLGUpe3ZhciByPXQucz1uK2UsaT1yLW4sbz1yLWk7dC50PW4tbysoZS1pKX1mdW5jdGlvbiBocih0KXtyZXR1cm4gdD4xPzA6dDwtMT9YZDpNYXRoLmFjb3ModCl9ZnVuY3Rpb24gZHIodCl7cmV0dXJuIHQ+MT9HZDp0PC0xPy1HZDpNYXRoLmFzaW4odCl9ZnVuY3Rpb24gcHIodCl7cmV0dXJuKHQ9b3AodC8yKSkqdH1mdW5jdGlvbiB2cigpe31mdW5jdGlvbiBncih0LG4pe3QmJnNwLmhhc093blByb3BlcnR5KHQudHlwZSkmJnNwW3QudHlwZV0odCxuKX1mdW5jdGlvbiB5cih0LG4sZSl7dmFyIHIsaT0tMSxvPXQubGVuZ3RoLWU7Zm9yKG4ubGluZVN0YXJ0KCk7KytpPG87KXI9dFtpXSxuLnBvaW50KHJbMF0sclsxXSxyWzJdKTtuLmxpbmVFbmQoKX1mdW5jdGlvbiBfcih0LG4pe3ZhciBlPS0xLHI9dC5sZW5ndGg7Zm9yKG4ucG9seWdvblN0YXJ0KCk7KytlPHI7KXlyKHRbZV0sbiwxKTtuLnBvbHlnb25FbmQoKX1mdW5jdGlvbiBicih0LG4pe3QmJmNwLmhhc093blByb3BlcnR5KHQudHlwZSk/Y3BbdC50eXBlXSh0LG4pOmdyKHQsbil9ZnVuY3Rpb24gbXIoKXtkcC5wb2ludD13cn1mdW5jdGlvbiB4cigpe01yKGxkLGhkKX1mdW5jdGlvbiB3cih0LG4pe2RwLnBvaW50PU1yLGxkPXQsaGQ9bixkZD10Kj1aZCxwZD10cChuPShuKj1aZCkvMitWZCksdmQ9b3Aobil9ZnVuY3Rpb24gTXIodCxuKXtuPShuKj1aZCkvMitWZDt2YXIgZT0odCo9WmQpLWRkLHI9ZT49MD8xOi0xLGk9ciplLG89dHAobiksYT1vcChuKSx1PXZkKmEsZj1wZCpvK3UqdHAoaSksYz11KnIqb3AoaSk7bHAuYWRkKEtkKGMsZikpLGRkPXQscGQ9byx2ZD1hfWZ1bmN0aW9uIEFyKHQpe3JldHVybltLZCh0WzFdLHRbMF0pLGRyKHRbMl0pXX1mdW5jdGlvbiBUcih0KXt2YXIgbj10WzBdLGU9dFsxXSxyPXRwKGUpO3JldHVybltyKnRwKG4pLHIqb3Aobiksb3AoZSldfWZ1bmN0aW9uIE5yKHQsbil7cmV0dXJuIHRbMF0qblswXSt0WzFdKm5bMV0rdFsyXSpuWzJdfWZ1bmN0aW9uIFNyKHQsbil7cmV0dXJuW3RbMV0qblsyXS10WzJdKm5bMV0sdFsyXSpuWzBdLXRbMF0qblsyXSx0WzBdKm5bMV0tdFsxXSpuWzBdXX1mdW5jdGlvbiBFcih0LG4pe3RbMF0rPW5bMF0sdFsxXSs9blsxXSx0WzJdKz1uWzJdfWZ1bmN0aW9uIGtyKHQsbil7cmV0dXJuW3RbMF0qbix0WzFdKm4sdFsyXSpuXX1mdW5jdGlvbiBDcih0KXt2YXIgbj11cCh0WzBdKnRbMF0rdFsxXSp0WzFdK3RbMl0qdFsyXSk7dFswXS89bix0WzFdLz1uLHRbMl0vPW59ZnVuY3Rpb24gUHIodCxuKXtBZC5wdXNoKFRkPVtnZD10LF9kPXRdKSxuPHlkJiYoeWQ9biksbj5iZCYmKGJkPW4pfWZ1bmN0aW9uIHpyKHQsbil7dmFyIGU9VHIoW3QqWmQsbipaZF0pO2lmKE1kKXt2YXIgcj1TcihNZCxlKSxpPVNyKFtyWzFdLC1yWzBdLDBdLHIpO0NyKGkpLGk9QXIoaSk7dmFyIG8sYT10LW1kLHU9YT4wPzE6LTEsZj1pWzBdKldkKnUsYz1RZChhKT4xODA7Y14odSptZDxmJiZmPHUqdCk/KG89aVsxXSpXZCk+YmQmJihiZD1vKTooZj0oZiszNjApJTM2MC0xODAsY14odSptZDxmJiZmPHUqdCk/KG89LWlbMV0qV2QpPHlkJiYoeWQ9byk6KG48eWQmJih5ZD1uKSxuPmJkJiYoYmQ9bikpKSxjP3Q8bWQ/T3IoZ2QsdCk+T3IoZ2QsX2QpJiYoX2Q9dCk6T3IodCxfZCk+T3IoZ2QsX2QpJiYoZ2Q9dCk6X2Q+PWdkPyh0PGdkJiYoZ2Q9dCksdD5fZCYmKF9kPXQpKTp0Pm1kP09yKGdkLHQpPk9yKGdkLF9kKSYmKF9kPXQpOk9yKHQsX2QpPk9yKGdkLF9kKSYmKGdkPXQpfWVsc2UgQWQucHVzaChUZD1bZ2Q9dCxfZD10XSk7bjx5ZCYmKHlkPW4pLG4+YmQmJihiZD1uKSxNZD1lLG1kPXR9ZnVuY3Rpb24gUnIoKXt2cC5wb2ludD16cn1mdW5jdGlvbiBMcigpe1RkWzBdPWdkLFRkWzFdPV9kLHZwLnBvaW50PVByLE1kPW51bGx9ZnVuY3Rpb24gRHIodCxuKXtpZihNZCl7dmFyIGU9dC1tZDtwcC5hZGQoUWQoZSk+MTgwP2UrKGU+MD8zNjA6LTM2MCk6ZSl9ZWxzZSB4ZD10LHdkPW47ZHAucG9pbnQodCxuKSx6cih0LG4pfWZ1bmN0aW9uIFVyKCl7ZHAubGluZVN0YXJ0KCl9ZnVuY3Rpb24gcXIoKXtEcih4ZCx3ZCksZHAubGluZUVuZCgpLFFkKHBwKT5qZCYmKGdkPS0oX2Q9MTgwKSksVGRbMF09Z2QsVGRbMV09X2QsTWQ9bnVsbH1mdW5jdGlvbiBPcih0LG4pe3JldHVybihuLT10KTwwP24rMzYwOm59ZnVuY3Rpb24gWXIodCxuKXtyZXR1cm4gdFswXS1uWzBdfWZ1bmN0aW9uIEJyKHQsbil7cmV0dXJuIHRbMF08PXRbMV0/dFswXTw9biYmbjw9dFsxXTpuPHRbMF18fHRbMV08bn1mdW5jdGlvbiBGcih0LG4pe3QqPVpkO3ZhciBlPXRwKG4qPVpkKTtJcihlKnRwKHQpLGUqb3AodCksb3AobikpfWZ1bmN0aW9uIElyKHQsbixlKXtFZCs9KHQtRWQpLysrTmQsa2QrPShuLWtkKS9OZCxDZCs9KGUtQ2QpL05kfWZ1bmN0aW9uIGpyKCl7Z3AucG9pbnQ9SHJ9ZnVuY3Rpb24gSHIodCxuKXt0Kj1aZDt2YXIgZT10cChuKj1aZCk7WWQ9ZSp0cCh0KSxCZD1lKm9wKHQpLEZkPW9wKG4pLGdwLnBvaW50PVhyLElyKFlkLEJkLEZkKX1mdW5jdGlvbiBYcih0LG4pe3QqPVpkO3ZhciBlPXRwKG4qPVpkKSxyPWUqdHAodCksaT1lKm9wKHQpLG89b3AobiksYT1LZCh1cCgoYT1CZCpvLUZkKmkpKmErKGE9RmQqci1ZZCpvKSphKyhhPVlkKmktQmQqcikqYSksWWQqcitCZCppK0ZkKm8pO1NkKz1hLFBkKz1hKihZZCsoWWQ9cikpLHpkKz1hKihCZCsoQmQ9aSkpLFJkKz1hKihGZCsoRmQ9bykpLElyKFlkLEJkLEZkKX1mdW5jdGlvbiBHcigpe2dwLnBvaW50PUZyfWZ1bmN0aW9uIFZyKCl7Z3AucG9pbnQ9V3J9ZnVuY3Rpb24gJHIoKXtacihxZCxPZCksZ3AucG9pbnQ9RnJ9ZnVuY3Rpb24gV3IodCxuKXtxZD10LE9kPW4sdCo9WmQsbio9WmQsZ3AucG9pbnQ9WnI7dmFyIGU9dHAobik7WWQ9ZSp0cCh0KSxCZD1lKm9wKHQpLEZkPW9wKG4pLElyKFlkLEJkLEZkKX1mdW5jdGlvbiBacih0LG4pe3QqPVpkO3ZhciBlPXRwKG4qPVpkKSxyPWUqdHAodCksaT1lKm9wKHQpLG89b3AobiksYT1CZCpvLUZkKmksdT1GZCpyLVlkKm8sZj1ZZCppLUJkKnIsYz11cChhKmErdSp1K2YqZikscz1kcihjKSxsPWMmJi1zL2M7TGQrPWwqYSxEZCs9bCp1LFVkKz1sKmYsU2QrPXMsUGQrPXMqKFlkKyhZZD1yKSksemQrPXMqKEJkKyhCZD1pKSksUmQrPXMqKEZkKyhGZD1vKSksSXIoWWQsQmQsRmQpfWZ1bmN0aW9uIFFyKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiBKcih0LG4pe2Z1bmN0aW9uIGUoZSxyKXtyZXR1cm4gZT10KGUsciksbihlWzBdLGVbMV0pfXJldHVybiB0LmludmVydCYmbi5pbnZlcnQmJihlLmludmVydD1mdW5jdGlvbihlLHIpe3JldHVybihlPW4uaW52ZXJ0KGUscikpJiZ0LmludmVydChlWzBdLGVbMV0pfSksZX1mdW5jdGlvbiBLcih0LG4pe3JldHVyblt0PlhkP3QtJGQ6dDwtWGQ/dCskZDp0LG5dfWZ1bmN0aW9uIHRpKHQsbixlKXtyZXR1cm4odCU9JGQpP258fGU/SnIoZWkodCkscmkobixlKSk6ZWkodCk6bnx8ZT9yaShuLGUpOktyfWZ1bmN0aW9uIG5pKHQpe3JldHVybiBmdW5jdGlvbihuLGUpe3JldHVybiBuKz10LFtuPlhkP24tJGQ6bjwtWGQ/biskZDpuLGVdfX1mdW5jdGlvbiBlaSh0KXt2YXIgbj1uaSh0KTtyZXR1cm4gbi5pbnZlcnQ9bmkoLXQpLG59ZnVuY3Rpb24gcmkodCxuKXtmdW5jdGlvbiBlKHQsbil7dmFyIGU9dHAobiksdT10cCh0KSplLGY9b3AodCkqZSxjPW9wKG4pLHM9YypyK3UqaTtyZXR1cm5bS2QoZipvLXMqYSx1KnItYyppKSxkcihzKm8rZiphKV19dmFyIHI9dHAodCksaT1vcCh0KSxvPXRwKG4pLGE9b3Aobik7cmV0dXJuIGUuaW52ZXJ0PWZ1bmN0aW9uKHQsbil7dmFyIGU9dHAobiksdT10cCh0KSplLGY9b3AodCkqZSxjPW9wKG4pLHM9YypvLWYqYTtyZXR1cm5bS2QoZipvK2MqYSx1KnIrcyppKSxkcihzKnItdSppKV19LGV9ZnVuY3Rpb24gaWkodCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbj10KG5bMF0qWmQsblsxXSpaZCksblswXSo9V2QsblsxXSo9V2Qsbn1yZXR1cm4gdD10aSh0WzBdKlpkLHRbMV0qWmQsdC5sZW5ndGg+Mj90WzJdKlpkOjApLG4uaW52ZXJ0PWZ1bmN0aW9uKG4pe3JldHVybiBuPXQuaW52ZXJ0KG5bMF0qWmQsblsxXSpaZCksblswXSo9V2QsblsxXSo9V2Qsbn0sbn1mdW5jdGlvbiBvaSh0LG4sZSxyLGksbyl7aWYoZSl7dmFyIGE9dHAobiksdT1vcChuKSxmPXIqZTtudWxsPT1pPyhpPW4rciokZCxvPW4tZi8yKTooaT1haShhLGkpLG89YWkoYSxvKSwocj4wP2k8bzppPm8pJiYoaSs9ciokZCkpO2Zvcih2YXIgYyxzPWk7cj4wP3M+bzpzPG87cy09ZiljPUFyKFthLC11KnRwKHMpLC11Km9wKHMpXSksdC5wb2ludChjWzBdLGNbMV0pfX1mdW5jdGlvbiBhaSh0LG4peyhuPVRyKG4pKVswXS09dCxDcihuKTt2YXIgZT1ocigtblsxXSk7cmV0dXJuKCgtblsyXTwwPy1lOmUpKyRkLWpkKSUkZH1mdW5jdGlvbiB1aSgpe3ZhciB0LG49W107cmV0dXJue3BvaW50OmZ1bmN0aW9uKG4sZSl7dC5wdXNoKFtuLGVdKX0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7bi5wdXNoKHQ9W10pfSxsaW5lRW5kOnZyLHJlam9pbjpmdW5jdGlvbigpe24ubGVuZ3RoPjEmJm4ucHVzaChuLnBvcCgpLmNvbmNhdChuLnNoaWZ0KCkpKX0scmVzdWx0OmZ1bmN0aW9uKCl7dmFyIGU9bjtyZXR1cm4gbj1bXSx0PW51bGwsZX19fWZ1bmN0aW9uIGZpKHQsbil7cmV0dXJuIFFkKHRbMF0tblswXSk8amQmJlFkKHRbMV0tblsxXSk8amR9ZnVuY3Rpb24gY2kodCxuLGUscil7dGhpcy54PXQsdGhpcy56PW4sdGhpcy5vPWUsdGhpcy5lPXIsdGhpcy52PSExLHRoaXMubj10aGlzLnA9bnVsbH1mdW5jdGlvbiBzaSh0LG4sZSxyLGkpe3ZhciBvLGEsdT1bXSxmPVtdO2lmKHQuZm9yRWFjaChmdW5jdGlvbih0KXtpZighKChuPXQubGVuZ3RoLTEpPD0wKSl7dmFyIG4sZSxyPXRbMF0sYT10W25dO2lmKGZpKHIsYSkpe2ZvcihpLmxpbmVTdGFydCgpLG89MDtvPG47KytvKWkucG9pbnQoKHI9dFtvXSlbMF0sclsxXSk7aS5saW5lRW5kKCl9ZWxzZSB1LnB1c2goZT1uZXcgY2kocix0LG51bGwsITApKSxmLnB1c2goZS5vPW5ldyBjaShyLG51bGwsZSwhMSkpLHUucHVzaChlPW5ldyBjaShhLHQsbnVsbCwhMSkpLGYucHVzaChlLm89bmV3IGNpKGEsbnVsbCxlLCEwKSl9fSksdS5sZW5ndGgpe2ZvcihmLnNvcnQobiksbGkodSksbGkoZiksbz0wLGE9Zi5sZW5ndGg7bzxhOysrbylmW29dLmU9ZT0hZTtmb3IodmFyIGMscyxsPXVbMF07Oyl7Zm9yKHZhciBoPWwsZD0hMDtoLnY7KWlmKChoPWgubik9PT1sKXJldHVybjtjPWgueixpLmxpbmVTdGFydCgpO2Rve2lmKGgudj1oLm8udj0hMCxoLmUpe2lmKGQpZm9yKG89MCxhPWMubGVuZ3RoO288YTsrK28paS5wb2ludCgocz1jW29dKVswXSxzWzFdKTtlbHNlIHIoaC54LGgubi54LDEsaSk7aD1oLm59ZWxzZXtpZihkKWZvcihjPWgucC56LG89Yy5sZW5ndGgtMTtvPj0wOy0tbylpLnBvaW50KChzPWNbb10pWzBdLHNbMV0pO2Vsc2UgcihoLngsaC5wLngsLTEsaSk7aD1oLnB9Yz0oaD1oLm8pLnosZD0hZH13aGlsZSghaC52KTtpLmxpbmVFbmQoKX19fWZ1bmN0aW9uIGxpKHQpe2lmKG49dC5sZW5ndGgpe2Zvcih2YXIgbixlLHI9MCxpPXRbMF07KytyPG47KWkubj1lPXRbcl0sZS5wPWksaT1lO2kubj1lPXRbMF0sZS5wPWl9fWZ1bmN0aW9uIGhpKHQsbil7dmFyIGU9blswXSxyPW5bMV0saT1vcChyKSxvPVtvcChlKSwtdHAoZSksMF0sYT0wLHU9MDtFcC5yZXNldCgpLDE9PT1pP3I9R2QramQ6LTE9PT1pJiYocj0tR2QtamQpO2Zvcih2YXIgZj0wLGM9dC5sZW5ndGg7ZjxjOysrZilpZihsPShzPXRbZl0pLmxlbmd0aClmb3IodmFyIHMsbCxoPXNbbC0xXSxkPWhbMF0scD1oWzFdLzIrVmQsdj1vcChwKSxnPXRwKHApLHk9MDt5PGw7Kyt5LGQ9Yix2PXgsZz13LGg9Xyl7dmFyIF89c1t5XSxiPV9bMF0sbT1fWzFdLzIrVmQseD1vcChtKSx3PXRwKG0pLE09Yi1kLEE9TT49MD8xOi0xLFQ9QSpNLE49VD5YZCxTPXYqeDtpZihFcC5hZGQoS2QoUypBKm9wKFQpLGcqdytTKnRwKFQpKSksYSs9Tj9NK0EqJGQ6TSxOXmQ+PWVeYj49ZSl7dmFyIEU9U3IoVHIoaCksVHIoXykpO0NyKEUpO3ZhciBrPVNyKG8sRSk7Q3Ioayk7dmFyIEM9KE5eTT49MD8tMToxKSpkcihrWzJdKTsocj5DfHxyPT09QyYmKEVbMF18fEVbMV0pKSYmKHUrPU5eTT49MD8xOi0xKX19cmV0dXJuKGE8LWpkfHxhPGpkJiZFcDwtamQpXjEmdX1mdW5jdGlvbiBkaSh0LG4sZSxyKXtyZXR1cm4gZnVuY3Rpb24oaSl7ZnVuY3Rpb24gbyhuLGUpe3QobixlKSYmaS5wb2ludChuLGUpfWZ1bmN0aW9uIGEodCxuKXt2LnBvaW50KHQsbil9ZnVuY3Rpb24gdSgpe20ucG9pbnQ9YSx2LmxpbmVTdGFydCgpfWZ1bmN0aW9uIGYoKXttLnBvaW50PW8sdi5saW5lRW5kKCl9ZnVuY3Rpb24gYyh0LG4pe3AucHVzaChbdCxuXSksXy5wb2ludCh0LG4pfWZ1bmN0aW9uIHMoKXtfLmxpbmVTdGFydCgpLHA9W119ZnVuY3Rpb24gbCgpe2MocFswXVswXSxwWzBdWzFdKSxfLmxpbmVFbmQoKTt2YXIgdCxuLGUscixvPV8uY2xlYW4oKSxhPWcucmVzdWx0KCksdT1hLmxlbmd0aDtpZihwLnBvcCgpLGgucHVzaChwKSxwPW51bGwsdSlpZigxJm8pe2lmKGU9YVswXSwobj1lLmxlbmd0aC0xKT4wKXtmb3IoYnx8KGkucG9seWdvblN0YXJ0KCksYj0hMCksaS5saW5lU3RhcnQoKSx0PTA7dDxuOysrdClpLnBvaW50KChyPWVbdF0pWzBdLHJbMV0pO2kubGluZUVuZCgpfX1lbHNlIHU+MSYmMiZvJiZhLnB1c2goYS5wb3AoKS5jb25jYXQoYS5zaGlmdCgpKSksZC5wdXNoKGEuZmlsdGVyKHBpKSl9dmFyIGgsZCxwLHY9bihpKSxnPXVpKCksXz1uKGcpLGI9ITEsbT17cG9pbnQ6byxsaW5lU3RhcnQ6dSxsaW5lRW5kOmYscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7bS5wb2ludD1jLG0ubGluZVN0YXJ0PXMsbS5saW5lRW5kPWwsZD1bXSxoPVtdfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7bS5wb2ludD1vLG0ubGluZVN0YXJ0PXUsbS5saW5lRW5kPWYsZD15KGQpO3ZhciB0PWhpKGgscik7ZC5sZW5ndGg/KGJ8fChpLnBvbHlnb25TdGFydCgpLGI9ITApLHNpKGQsdmksdCxlLGkpKTp0JiYoYnx8KGkucG9seWdvblN0YXJ0KCksYj0hMCksaS5saW5lU3RhcnQoKSxlKG51bGwsbnVsbCwxLGkpLGkubGluZUVuZCgpKSxiJiYoaS5wb2x5Z29uRW5kKCksYj0hMSksZD1oPW51bGx9LHNwaGVyZTpmdW5jdGlvbigpe2kucG9seWdvblN0YXJ0KCksaS5saW5lU3RhcnQoKSxlKG51bGwsbnVsbCwxLGkpLGkubGluZUVuZCgpLGkucG9seWdvbkVuZCgpfX07cmV0dXJuIG19fWZ1bmN0aW9uIHBpKHQpe3JldHVybiB0Lmxlbmd0aD4xfWZ1bmN0aW9uIHZpKHQsbil7cmV0dXJuKCh0PXQueClbMF08MD90WzFdLUdkLWpkOkdkLXRbMV0pLSgobj1uLngpWzBdPDA/blsxXS1HZC1qZDpHZC1uWzFdKX1mdW5jdGlvbiBnaSh0KXtmdW5jdGlvbiBuKHQsbil7cmV0dXJuIHRwKHQpKnRwKG4pPml9ZnVuY3Rpb24gZSh0LG4sZSl7dmFyIHI9WzEsMCwwXSxvPVNyKFRyKHQpLFRyKG4pKSxhPU5yKG8sbyksdT1vWzBdLGY9YS11KnU7aWYoIWYpcmV0dXJuIWUmJnQ7dmFyIGM9aSphL2Yscz0taSp1L2YsbD1TcihyLG8pLGg9a3IocixjKTtFcihoLGtyKG8scykpO3ZhciBkPWwscD1OcihoLGQpLHY9TnIoZCxkKSxnPXAqcC12KihOcihoLGgpLTEpO2lmKCEoZzwwKSl7dmFyIHk9dXAoZyksXz1rcihkLCgtcC15KS92KTtpZihFcihfLGgpLF89QXIoXyksIWUpcmV0dXJuIF87dmFyIGIsbT10WzBdLHg9blswXSx3PXRbMV0sTT1uWzFdO3g8bSYmKGI9bSxtPXgseD1iKTt2YXIgQT14LW0sVD1RZChBLVhkKTxqZDtpZighVCYmTTx3JiYoYj13LHc9TSxNPWIpLFR8fEE8amQ/VD93K00+MF5fWzFdPChRZChfWzBdLW0pPGpkP3c6TSk6dzw9X1sxXSYmX1sxXTw9TTpBPlhkXihtPD1fWzBdJiZfWzBdPD14KSl7dmFyIE49a3IoZCwoLXAreSkvdik7cmV0dXJuIEVyKE4saCksW18sQXIoTildfX19ZnVuY3Rpb24gcihuLGUpe3ZhciByPWE/dDpYZC10LGk9MDtyZXR1cm4gbjwtcj9pfD0xOm4+ciYmKGl8PTIpLGU8LXI/aXw9NDplPnImJihpfD04KSxpfXZhciBpPXRwKHQpLG89NipaZCxhPWk+MCx1PVFkKGkpPmpkO3JldHVybiBkaShuLGZ1bmN0aW9uKHQpe3ZhciBpLG8sZixjLHM7cmV0dXJue2xpbmVTdGFydDpmdW5jdGlvbigpe2M9Zj0hMSxzPTF9LHBvaW50OmZ1bmN0aW9uKGwsaCl7dmFyIGQscD1bbCxoXSx2PW4obCxoKSxnPWE/dj8wOnIobCxoKTp2P3IobCsobDwwP1hkOi1YZCksaCk6MDtpZighaSYmKGM9Zj12KSYmdC5saW5lU3RhcnQoKSx2IT09ZiYmKCEoZD1lKGkscCkpfHxmaShpLGQpfHxmaShwLGQpKSYmKHBbMF0rPWpkLHBbMV0rPWpkLHY9bihwWzBdLHBbMV0pKSx2IT09ZilzPTAsdj8odC5saW5lU3RhcnQoKSxkPWUocCxpKSx0LnBvaW50KGRbMF0sZFsxXSkpOihkPWUoaSxwKSx0LnBvaW50KGRbMF0sZFsxXSksdC5saW5lRW5kKCkpLGk9ZDtlbHNlIGlmKHUmJmkmJmFedil7dmFyIHk7ZyZvfHwhKHk9ZShwLGksITApKXx8KHM9MCxhPyh0LmxpbmVTdGFydCgpLHQucG9pbnQoeVswXVswXSx5WzBdWzFdKSx0LnBvaW50KHlbMV1bMF0seVsxXVsxXSksdC5saW5lRW5kKCkpOih0LnBvaW50KHlbMV1bMF0seVsxXVsxXSksdC5saW5lRW5kKCksdC5saW5lU3RhcnQoKSx0LnBvaW50KHlbMF1bMF0seVswXVsxXSkpKX0hdnx8aSYmZmkoaSxwKXx8dC5wb2ludChwWzBdLHBbMV0pLGk9cCxmPXYsbz1nfSxsaW5lRW5kOmZ1bmN0aW9uKCl7ZiYmdC5saW5lRW5kKCksaT1udWxsfSxjbGVhbjpmdW5jdGlvbigpe3JldHVybiBzfChjJiZmKTw8MX19fSxmdW5jdGlvbihuLGUscixpKXtvaShpLHQsbyxyLG4sZSl9LGE/WzAsLXRdOlstWGQsdC1YZF0pfWZ1bmN0aW9uIHlpKHQsbixlLHIpe2Z1bmN0aW9uIGkoaSxvKXtyZXR1cm4gdDw9aSYmaTw9ZSYmbjw9byYmbzw9cn1mdW5jdGlvbiBvKGksbyx1LGMpe3ZhciBzPTAsbD0wO2lmKG51bGw9PWl8fChzPWEoaSx1KSkhPT0obD1hKG8sdSkpfHxmKGksbyk8MF51PjApZG97Yy5wb2ludCgwPT09c3x8Mz09PXM/dDplLHM+MT9yOm4pfXdoaWxlKChzPShzK3UrNCklNCkhPT1sKTtlbHNlIGMucG9pbnQob1swXSxvWzFdKX1mdW5jdGlvbiBhKHIsaSl7cmV0dXJuIFFkKHJbMF0tdCk8amQ/aT4wPzA6MzpRZChyWzBdLWUpPGpkP2k+MD8yOjE6UWQoclsxXS1uKTxqZD9pPjA/MTowOmk+MD8zOjJ9ZnVuY3Rpb24gdSh0LG4pe3JldHVybiBmKHQueCxuLngpfWZ1bmN0aW9uIGYodCxuKXt2YXIgZT1hKHQsMSkscj1hKG4sMSk7cmV0dXJuIGUhPT1yP2UtcjowPT09ZT9uWzFdLXRbMV06MT09PWU/dFswXS1uWzBdOjI9PT1lP3RbMV0tblsxXTpuWzBdLXRbMF19cmV0dXJuIGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGYodCxuKXtpKHQsbikmJncucG9pbnQodCxuKX1mdW5jdGlvbiBjKG8sYSl7dmFyIHU9aShvLGEpO2lmKGwmJmgucHVzaChbbyxhXSksbSlkPW8scD1hLHY9dSxtPSExLHUmJih3LmxpbmVTdGFydCgpLHcucG9pbnQobyxhKSk7ZWxzZSBpZih1JiZiKXcucG9pbnQobyxhKTtlbHNle3ZhciBmPVtnPU1hdGgubWF4KFBwLE1hdGgubWluKENwLGcpKSxfPU1hdGgubWF4KFBwLE1hdGgubWluKENwLF8pKV0sYz1bbz1NYXRoLm1heChQcCxNYXRoLm1pbihDcCxvKSksYT1NYXRoLm1heChQcCxNYXRoLm1pbihDcCxhKSldOyFmdW5jdGlvbih0LG4sZSxyLGksbyl7dmFyIGEsdT10WzBdLGY9dFsxXSxjPTAscz0xLGw9blswXS11LGg9blsxXS1mO2lmKGE9ZS11LGx8fCEoYT4wKSl7aWYoYS89bCxsPDApe2lmKGE8YylyZXR1cm47YTxzJiYocz1hKX1lbHNlIGlmKGw+MCl7aWYoYT5zKXJldHVybjthPmMmJihjPWEpfWlmKGE9aS11LGx8fCEoYTwwKSl7aWYoYS89bCxsPDApe2lmKGE+cylyZXR1cm47YT5jJiYoYz1hKX1lbHNlIGlmKGw+MCl7aWYoYTxjKXJldHVybjthPHMmJihzPWEpfWlmKGE9ci1mLGh8fCEoYT4wKSl7aWYoYS89aCxoPDApe2lmKGE8YylyZXR1cm47YTxzJiYocz1hKX1lbHNlIGlmKGg+MCl7aWYoYT5zKXJldHVybjthPmMmJihjPWEpfWlmKGE9by1mLGh8fCEoYTwwKSl7aWYoYS89aCxoPDApe2lmKGE+cylyZXR1cm47YT5jJiYoYz1hKX1lbHNlIGlmKGg+MCl7aWYoYTxjKXJldHVybjthPHMmJihzPWEpfXJldHVybiBjPjAmJih0WzBdPXUrYypsLHRbMV09ZitjKmgpLHM8MSYmKG5bMF09dStzKmwsblsxXT1mK3MqaCksITB9fX19fShmLGMsdCxuLGUscik/dSYmKHcubGluZVN0YXJ0KCksdy5wb2ludChvLGEpLHg9ITEpOihifHwody5saW5lU3RhcnQoKSx3LnBvaW50KGZbMF0sZlsxXSkpLHcucG9pbnQoY1swXSxjWzFdKSx1fHx3LmxpbmVFbmQoKSx4PSExKX1nPW8sXz1hLGI9dX12YXIgcyxsLGgsZCxwLHYsZyxfLGIsbSx4LHc9YSxNPXVpKCksQT17cG9pbnQ6ZixsaW5lU3RhcnQ6ZnVuY3Rpb24oKXtBLnBvaW50PWMsbCYmbC5wdXNoKGg9W10pLG09ITAsYj0hMSxnPV89TmFOfSxsaW5lRW5kOmZ1bmN0aW9uKCl7cyYmKGMoZCxwKSx2JiZiJiZNLnJlam9pbigpLHMucHVzaChNLnJlc3VsdCgpKSksQS5wb2ludD1mLGImJncubGluZUVuZCgpfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXt3PU0scz1bXSxsPVtdLHg9ITB9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt2YXIgbj1mdW5jdGlvbigpe2Zvcih2YXIgbj0wLGU9MCxpPWwubGVuZ3RoO2U8aTsrK2UpZm9yKHZhciBvLGEsdT1sW2VdLGY9MSxjPXUubGVuZ3RoLHM9dVswXSxoPXNbMF0sZD1zWzFdO2Y8YzsrK2Ypbz1oLGE9ZCxoPShzPXVbZl0pWzBdLGQ9c1sxXSxhPD1yP2Q+ciYmKGgtbykqKHItYSk+KGQtYSkqKHQtbykmJisrbjpkPD1yJiYoaC1vKSooci1hKTwoZC1hKSoodC1vKSYmLS1uO3JldHVybiBufSgpLGU9eCYmbixpPShzPXkocykpLmxlbmd0aDsoZXx8aSkmJihhLnBvbHlnb25TdGFydCgpLGUmJihhLmxpbmVTdGFydCgpLG8obnVsbCxudWxsLDEsYSksYS5saW5lRW5kKCkpLGkmJnNpKHMsdSxuLG8sYSksYS5wb2x5Z29uRW5kKCkpLHc9YSxzPWw9aD1udWxsfX07cmV0dXJuIEF9fWZ1bmN0aW9uIF9pKCl7UnAucG9pbnQ9UnAubGluZUVuZD12cn1mdW5jdGlvbiBiaSh0LG4pe3lwPXQqPVpkLF9wPW9wKG4qPVpkKSxicD10cChuKSxScC5wb2ludD1taX1mdW5jdGlvbiBtaSh0LG4pe3QqPVpkO3ZhciBlPW9wKG4qPVpkKSxyPXRwKG4pLGk9UWQodC15cCksbz10cChpKSxhPXIqb3AoaSksdT1icCplLV9wKnIqbyxmPV9wKmUrYnAqcipvO3pwLmFkZChLZCh1cChhKmErdSp1KSxmKSkseXA9dCxfcD1lLGJwPXJ9ZnVuY3Rpb24geGkodCl7cmV0dXJuIHpwLnJlc2V0KCksYnIodCxScCksK3pwfWZ1bmN0aW9uIHdpKHQsbil7cmV0dXJuIExwWzBdPXQsTHBbMV09bix4aShEcCl9ZnVuY3Rpb24gTWkodCxuKXtyZXR1cm4hKCF0fHwhcXAuaGFzT3duUHJvcGVydHkodC50eXBlKSkmJnFwW3QudHlwZV0odCxuKX1mdW5jdGlvbiBBaSh0LG4pe3JldHVybiAwPT09d2kodCxuKX1mdW5jdGlvbiBUaSh0LG4pe3ZhciBlPXdpKHRbMF0sdFsxXSk7cmV0dXJuIHdpKHRbMF0sbikrd2kobix0WzFdKTw9ZStqZH1mdW5jdGlvbiBOaSh0LG4pe3JldHVybiEhaGkodC5tYXAoU2kpLEVpKG4pKX1mdW5jdGlvbiBTaSh0KXtyZXR1cm4odD10Lm1hcChFaSkpLnBvcCgpLHR9ZnVuY3Rpb24gRWkodCl7cmV0dXJuW3RbMF0qWmQsdFsxXSpaZF19ZnVuY3Rpb24ga2kodCxuLGUpe3ZhciByPXModCxuLWpkLGUpLmNvbmNhdChuKTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHIubWFwKGZ1bmN0aW9uKG4pe3JldHVyblt0LG5dfSl9fWZ1bmN0aW9uIENpKHQsbixlKXt2YXIgcj1zKHQsbi1qZCxlKS5jb25jYXQobik7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiByLm1hcChmdW5jdGlvbihuKXtyZXR1cm5bbix0XX0pfX1mdW5jdGlvbiBQaSgpe2Z1bmN0aW9uIHQoKXtyZXR1cm57dHlwZToiTXVsdGlMaW5lU3RyaW5nIixjb29yZGluYXRlczpuKCl9fWZ1bmN0aW9uIG4oKXtyZXR1cm4gcyhucChvL3kpKnksaSx5KS5tYXAoZCkuY29uY2F0KHMobnAoYy9fKSpfLGYsXykubWFwKHApKS5jb25jYXQocyhucChyL3YpKnYsZSx2KS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIFFkKHQleSk+amR9KS5tYXAobCkpLmNvbmNhdChzKG5wKHUvZykqZyxhLGcpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gUWQodCVfKT5qZH0pLm1hcChoKSl9dmFyIGUscixpLG8sYSx1LGYsYyxsLGgsZCxwLHY9MTAsZz12LHk9OTAsXz0zNjAsYj0yLjU7cmV0dXJuIHQubGluZXM9ZnVuY3Rpb24oKXtyZXR1cm4gbigpLm1hcChmdW5jdGlvbih0KXtyZXR1cm57dHlwZToiTGluZVN0cmluZyIsY29vcmRpbmF0ZXM6dH19KX0sdC5vdXRsaW5lPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6IlBvbHlnb24iLGNvb3JkaW5hdGVzOltkKG8pLmNvbmNhdChwKGYpLnNsaWNlKDEpLGQoaSkucmV2ZXJzZSgpLnNsaWNlKDEpLHAoYykucmV2ZXJzZSgpLnNsaWNlKDEpKV19fSx0LmV4dGVudD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90LmV4dGVudE1ham9yKG4pLmV4dGVudE1pbm9yKG4pOnQuZXh0ZW50TWlub3IoKX0sdC5leHRlbnRNYWpvcj1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz0rblswXVswXSxpPStuWzFdWzBdLGM9K25bMF1bMV0sZj0rblsxXVsxXSxvPmkmJihuPW8sbz1pLGk9biksYz5mJiYobj1jLGM9ZixmPW4pLHQucHJlY2lzaW9uKGIpKTpbW28sY10sW2ksZl1dfSx0LmV4dGVudE1pbm9yPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPStuWzBdWzBdLGU9K25bMV1bMF0sdT0rblswXVsxXSxhPStuWzFdWzFdLHI+ZSYmKG49cixyPWUsZT1uKSx1PmEmJihuPXUsdT1hLGE9biksdC5wcmVjaXNpb24oYikpOltbcix1XSxbZSxhXV19LHQuc3RlcD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90LnN0ZXBNYWpvcihuKS5zdGVwTWlub3Iobik6dC5zdGVwTWlub3IoKX0sdC5zdGVwTWFqb3I9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHk9K25bMF0sXz0rblsxXSx0KTpbeSxfXX0sdC5zdGVwTWlub3I9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHY9K25bMF0sZz0rblsxXSx0KTpbdixnXX0sdC5wcmVjaXNpb249ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGI9K24sbD1raSh1LGEsOTApLGg9Q2kocixlLGIpLGQ9a2koYyxmLDkwKSxwPUNpKG8saSxiKSx0KTpifSx0LmV4dGVudE1ham9yKFtbLTE4MCwtOTAramRdLFsxODAsOTAtamRdXSkuZXh0ZW50TWlub3IoW1stMTgwLC04MC1qZF0sWzE4MCw4MCtqZF1dKX1mdW5jdGlvbiB6aSh0KXtyZXR1cm4gdH1mdW5jdGlvbiBSaSgpe0JwLnBvaW50PUxpfWZ1bmN0aW9uIExpKHQsbil7QnAucG9pbnQ9RGksbXA9d3A9dCx4cD1NcD1ufWZ1bmN0aW9uIERpKHQsbil7WXAuYWRkKE1wKnQtd3Aqbiksd3A9dCxNcD1ufWZ1bmN0aW9uIFVpKCl7RGkobXAseHApfWZ1bmN0aW9uIHFpKHQsbil7R3ArPXQsVnArPW4sKyskcH1mdW5jdGlvbiBPaSgpe252LnBvaW50PVlpfWZ1bmN0aW9uIFlpKHQsbil7bnYucG9pbnQ9QmkscWkoTnA9dCxTcD1uKX1mdW5jdGlvbiBCaSh0LG4pe3ZhciBlPXQtTnAscj1uLVNwLGk9dXAoZSplK3Iqcik7V3ArPWkqKE5wK3QpLzIsWnArPWkqKFNwK24pLzIsUXArPWkscWkoTnA9dCxTcD1uKX1mdW5jdGlvbiBGaSgpe252LnBvaW50PXFpfWZ1bmN0aW9uIElpKCl7bnYucG9pbnQ9SGl9ZnVuY3Rpb24gamkoKXtYaShBcCxUcCl9ZnVuY3Rpb24gSGkodCxuKXtudi5wb2ludD1YaSxxaShBcD1OcD10LFRwPVNwPW4pfWZ1bmN0aW9uIFhpKHQsbil7dmFyIGU9dC1OcCxyPW4tU3AsaT11cChlKmUrcipyKTtXcCs9aSooTnArdCkvMixacCs9aSooU3ArbikvMixRcCs9aSxKcCs9KGk9U3AqdC1OcCpuKSooTnArdCksS3ArPWkqKFNwK24pLHR2Kz0zKmkscWkoTnA9dCxTcD1uKX1mdW5jdGlvbiBHaSh0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gVmkodCxuKXtmdi5wb2ludD0kaSxydj1vdj10LGl2PWF2PW59ZnVuY3Rpb24gJGkodCxuKXtvdi09dCxhdi09bix1di5hZGQodXAob3Yqb3YrYXYqYXYpKSxvdj10LGF2PW59ZnVuY3Rpb24gV2koKXt0aGlzLl9zdHJpbmc9W119ZnVuY3Rpb24gWmkodCl7cmV0dXJuIm0wLCIrdCsiYSIrdCsiLCIrdCsiIDAgMSwxIDAsIistMip0KyJhIit0KyIsIit0KyIgMCAxLDEgMCwiKzIqdCsieiJ9ZnVuY3Rpb24gUWkodCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBlPW5ldyBKaTtmb3IodmFyIHIgaW4gdCllW3JdPXRbcl07cmV0dXJuIGUuc3RyZWFtPW4sZX19ZnVuY3Rpb24gSmkoKXt9ZnVuY3Rpb24gS2kodCxuLGUpe3ZhciByPXQuY2xpcEV4dGVudCYmdC5jbGlwRXh0ZW50KCk7cmV0dXJuIHQuc2NhbGUoMTUwKS50cmFuc2xhdGUoWzAsMF0pLG51bGwhPXImJnQuY2xpcEV4dGVudChudWxsKSxicihlLHQuc3RyZWFtKFhwKSksbihYcC5yZXN1bHQoKSksbnVsbCE9ciYmdC5jbGlwRXh0ZW50KHIpLHR9ZnVuY3Rpb24gdG8odCxuLGUpe3JldHVybiBLaSh0LGZ1bmN0aW9uKGUpe3ZhciByPW5bMV1bMF0tblswXVswXSxpPW5bMV1bMV0tblswXVsxXSxvPU1hdGgubWluKHIvKGVbMV1bMF0tZVswXVswXSksaS8oZVsxXVsxXS1lWzBdWzFdKSksYT0rblswXVswXSsoci1vKihlWzFdWzBdK2VbMF1bMF0pKS8yLHU9K25bMF1bMV0rKGktbyooZVsxXVsxXStlWzBdWzFdKSkvMjt0LnNjYWxlKDE1MCpvKS50cmFuc2xhdGUoW2EsdV0pfSxlKX1mdW5jdGlvbiBubyh0LG4sZSl7cmV0dXJuIHRvKHQsW1swLDBdLG5dLGUpfWZ1bmN0aW9uIGVvKHQsbixlKXtyZXR1cm4gS2kodCxmdW5jdGlvbihlKXt2YXIgcj0rbixpPXIvKGVbMV1bMF0tZVswXVswXSksbz0oci1pKihlWzFdWzBdK2VbMF1bMF0pKS8yLGE9LWkqZVswXVsxXTt0LnNjYWxlKDE1MCppKS50cmFuc2xhdGUoW28sYV0pfSxlKX1mdW5jdGlvbiBybyh0LG4sZSl7cmV0dXJuIEtpKHQsZnVuY3Rpb24oZSl7dmFyIHI9K24saT1yLyhlWzFdWzFdLWVbMF1bMV0pLG89LWkqZVswXVswXSxhPShyLWkqKGVbMV1bMV0rZVswXVsxXSkpLzI7dC5zY2FsZSgxNTAqaSkudHJhbnNsYXRlKFtvLGFdKX0sZSl9ZnVuY3Rpb24gaW8odCxuKXtyZXR1cm4rbj9mdW5jdGlvbih0LG4pe2Z1bmN0aW9uIGUocixpLG8sYSx1LGYsYyxzLGwsaCxkLHAsdixnKXt2YXIgeT1jLXIsXz1zLWksYj15KnkrXypfO2lmKGI+NCpuJiZ2LS0pe3ZhciBtPWEraCx4PXUrZCx3PWYrcCxNPXVwKG0qbSt4Kngrdyp3KSxBPWRyKHcvPU0pLFQ9UWQoUWQodyktMSk8amR8fFFkKG8tbCk8amQ/KG8rbCkvMjpLZCh4LG0pLE49dChULEEpLFM9TlswXSxFPU5bMV0saz1TLXIsQz1FLWksUD1fKmsteSpDOyhQKlAvYj5ufHxRZCgoeSprK18qQykvYi0uNSk+LjN8fGEqaCt1KmQrZipwPHN2KSYmKGUocixpLG8sYSx1LGYsUyxFLFQsbS89TSx4Lz1NLHcsdixnKSxnLnBvaW50KFMsRSksZShTLEUsVCxtLHgsdyxjLHMsbCxoLGQscCx2LGcpKX19cmV0dXJuIGZ1bmN0aW9uKG4pe2Z1bmN0aW9uIHIoZSxyKXtlPXQoZSxyKSxuLnBvaW50KGVbMF0sZVsxXSl9ZnVuY3Rpb24gaSgpe3k9TmFOLHcucG9pbnQ9byxuLmxpbmVTdGFydCgpfWZ1bmN0aW9uIG8ocixpKXt2YXIgbz1UcihbcixpXSksYT10KHIsaSk7ZSh5LF8sZyxiLG0seCx5PWFbMF0sXz1hWzFdLGc9cixiPW9bMF0sbT1vWzFdLHg9b1syXSxjdixuKSxuLnBvaW50KHksXyl9ZnVuY3Rpb24gYSgpe3cucG9pbnQ9cixuLmxpbmVFbmQoKX1mdW5jdGlvbiB1KCl7aSgpLHcucG9pbnQ9Zix3LmxpbmVFbmQ9Y31mdW5jdGlvbiBmKHQsbil7byhzPXQsbiksbD15LGg9XyxkPWIscD1tLHY9eCx3LnBvaW50PW99ZnVuY3Rpb24gYygpe2UoeSxfLGcsYixtLHgsbCxoLHMsZCxwLHYsY3Ysbiksdy5saW5lRW5kPWEsYSgpfXZhciBzLGwsaCxkLHAsdixnLHksXyxiLG0seCx3PXtwb2ludDpyLGxpbmVTdGFydDppLGxpbmVFbmQ6YSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtuLnBvbHlnb25TdGFydCgpLHcubGluZVN0YXJ0PXV9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtuLnBvbHlnb25FbmQoKSx3LmxpbmVTdGFydD1pfX07cmV0dXJuIHd9fSh0LG4pOmZ1bmN0aW9uKHQpe3JldHVybiBRaSh7cG9pbnQ6ZnVuY3Rpb24obixlKXtuPXQobixlKSx0aGlzLnN0cmVhbS5wb2ludChuWzBdLG5bMV0pfX0pfSh0KX1mdW5jdGlvbiBvbyh0LG4sZSxyKXtmdW5jdGlvbiBpKHQscil7cmV0dXJuW3UqdC1mKnIrbixlLWYqdC11KnJdfXZhciBvPXRwKHIpLGE9b3AociksdT1vKnQsZj1hKnQsYz1vL3Qscz1hL3QsbD0oYSplLW8qbikvdCxoPShhKm4rbyplKS90O3JldHVybiBpLmludmVydD1mdW5jdGlvbih0LG4pe3JldHVybltjKnQtcypuK2wsaC1zKnQtYypuXX0saX1mdW5jdGlvbiBhbyh0KXtyZXR1cm4gdW8oZnVuY3Rpb24oKXtyZXR1cm4gdH0pKCl9ZnVuY3Rpb24gdW8odCl7ZnVuY3Rpb24gbih0KXtyZXR1cm4gbCh0WzBdKlpkLHRbMV0qWmQpfWZ1bmN0aW9uIGUoKXt2YXIgdD1vbyhwLDAsMCx3KS5hcHBseShudWxsLGkoeSxfKSksbj0odz9vbzpmdW5jdGlvbih0LG4sZSl7ZnVuY3Rpb24gcihyLGkpe3JldHVybltuK3QqcixlLXQqaV19cmV0dXJuIHIuaW52ZXJ0PWZ1bmN0aW9uKHIsaSl7cmV0dXJuWyhyLW4pL3QsKGUtaSkvdF19LHJ9KShwLHYtdFswXSxnLXRbMV0sdyk7cmV0dXJuIG89dGkoYixtLHgpLHM9SnIoaSxuKSxsPUpyKG8scyksYz1pbyhzLFMpLHIoKX1mdW5jdGlvbiByKCl7cmV0dXJuIGg9ZD1udWxsLG59dmFyIGksbyxhLHUsZixjLHMsbCxoLGQscD0xNTAsdj00ODAsZz0yNTAseT0wLF89MCxiPTAsbT0wLHg9MCx3PTAsTT1udWxsLEE9a3AsVD1udWxsLE49emksUz0uNTtyZXR1cm4gbi5zdHJlYW09ZnVuY3Rpb24odCl7cmV0dXJuIGgmJmQ9PT10P2g6aD1sdihmdW5jdGlvbih0KXtyZXR1cm4gUWkoe3BvaW50OmZ1bmN0aW9uKG4sZSl7dmFyIHI9dChuLGUpO3JldHVybiB0aGlzLnN0cmVhbS5wb2ludChyWzBdLHJbMV0pfX0pfShvKShBKGMoTihkPXQpKSkpKX0sbi5wcmVjbGlwPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhBPXQsTT12b2lkIDAscigpKTpBfSxuLnBvc3RjbGlwPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhOPXQsVD1hPXU9Zj1udWxsLHIoKSk6Tn0sbi5jbGlwQW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KEE9K3Q/Z2koTT10KlpkKTooTT1udWxsLGtwKSxyKCkpOk0qV2R9LG4uY2xpcEV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oTj1udWxsPT10PyhUPWE9dT1mPW51bGwsemkpOnlpKFQ9K3RbMF1bMF0sYT0rdFswXVsxXSx1PSt0WzFdWzBdLGY9K3RbMV1bMV0pLHIoKSk6bnVsbD09VD9udWxsOltbVCxhXSxbdSxmXV19LG4uc2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHA9K3QsZSgpKTpwfSxuLnRyYW5zbGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odj0rdFswXSxnPSt0WzFdLGUoKSk6W3YsZ119LG4uY2VudGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh5PXRbMF0lMzYwKlpkLF89dFsxXSUzNjAqWmQsZSgpKTpbeSpXZCxfKldkXX0sbi5yb3RhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGI9dFswXSUzNjAqWmQsbT10WzFdJTM2MCpaZCx4PXQubGVuZ3RoPjI/dFsyXSUzNjAqWmQ6MCxlKCkpOltiKldkLG0qV2QseCpXZF19LG4uYW5nbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHc9dCUzNjAqWmQsZSgpKTp3KldkfSxuLnByZWNpc2lvbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz1pbyhzLFM9dCp0KSxyKCkpOnVwKFMpfSxuLmZpdEV4dGVudD1mdW5jdGlvbih0LGUpe3JldHVybiB0byhuLHQsZSl9LG4uZml0U2l6ZT1mdW5jdGlvbih0LGUpe3JldHVybiBubyhuLHQsZSl9LG4uZml0V2lkdGg9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZW8obix0LGUpfSxuLmZpdEhlaWdodD1mdW5jdGlvbih0LGUpe3JldHVybiBybyhuLHQsZSl9LGZ1bmN0aW9uKCl7cmV0dXJuIGk9dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksbi5pbnZlcnQ9aS5pbnZlcnQmJmZ1bmN0aW9uKHQpe3JldHVybih0PWwuaW52ZXJ0KHRbMF0sdFsxXSkpJiZbdFswXSpXZCx0WzFdKldkXX0sZSgpfX1mdW5jdGlvbiBmbyh0KXt2YXIgbj0wLGU9WGQvMyxyPXVvKHQpLGk9cihuLGUpO3JldHVybiBpLnBhcmFsbGVscz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9yKG49dFswXSpaZCxlPXRbMV0qWmQpOltuKldkLGUqV2RdfSxpfWZ1bmN0aW9uIGNvKHQsbil7ZnVuY3Rpb24gZSh0LG4pe3ZhciBlPXVwKG8tMippKm9wKG4pKS9pO3JldHVybltlKm9wKHQqPWkpLGEtZSp0cCh0KV19dmFyIHI9b3AodCksaT0ocitvcChuKSkvMjtpZihRZChpKTxqZClyZXR1cm4gZnVuY3Rpb24odCl7ZnVuY3Rpb24gbih0LG4pe3JldHVyblt0KmUsb3AobikvZV19dmFyIGU9dHAodCk7cmV0dXJuIG4uaW52ZXJ0PWZ1bmN0aW9uKHQsbil7cmV0dXJuW3QvZSxkcihuKmUpXX0sbn0odCk7dmFyIG89MStyKigyKmktciksYT11cChvKS9pO3JldHVybiBlLmludmVydD1mdW5jdGlvbih0LG4pe3ZhciBlPWEtbjtyZXR1cm5bS2QodCxRZChlKSkvaSphcChlKSxkcigoby0odCp0K2UqZSkqaSppKS8oMippKSldfSxlfWZ1bmN0aW9uIHNvKCl7cmV0dXJuIGZvKGNvKS5zY2FsZSgxNTUuNDI0KS5jZW50ZXIoWzAsMzMuNjQ0Ml0pfWZ1bmN0aW9uIGxvKCl7cmV0dXJuIHNvKCkucGFyYWxsZWxzKFsyOS41LDQ1LjVdKS5zY2FsZSgxMDcwKS50cmFuc2xhdGUoWzQ4MCwyNTBdKS5yb3RhdGUoWzk2LDBdKS5jZW50ZXIoWy0uNiwzOC43XSl9ZnVuY3Rpb24gaG8odCl7cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHI9dHAobiksaT10cChlKSxvPXQocippKTtyZXR1cm5bbyppKm9wKG4pLG8qb3AoZSldfX1mdW5jdGlvbiBwbyh0KXtyZXR1cm4gZnVuY3Rpb24obixlKXt2YXIgcj11cChuKm4rZSplKSxpPXQociksbz1vcChpKSxhPXRwKGkpO3JldHVybltLZChuKm8sciphKSxkcihyJiZlKm8vcildfX1mdW5jdGlvbiB2byh0LG4pe3JldHVyblt0LHJwKGZwKChHZCtuKS8yKSldfWZ1bmN0aW9uIGdvKHQpe2Z1bmN0aW9uIG4oKXt2YXIgbj1YZCp1KCksYT1vKGlpKG8ucm90YXRlKCkpLmludmVydChbMCwwXSkpO3JldHVybiBjKG51bGw9PXM/W1thWzBdLW4sYVsxXS1uXSxbYVswXStuLGFbMV0rbl1dOnQ9PT12bz9bW01hdGgubWF4KGFbMF0tbixzKSxlXSxbTWF0aC5taW4oYVswXStuLHIpLGldXTpbW3MsTWF0aC5tYXgoYVsxXS1uLGUpXSxbcixNYXRoLm1pbihhWzFdK24saSldXSl9dmFyIGUscixpLG89YW8odCksYT1vLmNlbnRlcix1PW8uc2NhbGUsZj1vLnRyYW5zbGF0ZSxjPW8uY2xpcEV4dGVudCxzPW51bGw7cmV0dXJuIG8uc2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHUodCksbigpKTp1KCl9LG8udHJhbnNsYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhmKHQpLG4oKSk6ZigpfSxvLmNlbnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYSh0KSxuKCkpOmEoKX0sby5jbGlwRXh0ZW50PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT10P3M9ZT1yPWk9bnVsbDoocz0rdFswXVswXSxlPSt0WzBdWzFdLHI9K3RbMV1bMF0saT0rdFsxXVsxXSksbigpKTpudWxsPT1zP251bGw6W1tzLGVdLFtyLGldXX0sbigpfWZ1bmN0aW9uIHlvKHQpe3JldHVybiBmcCgoR2QrdCkvMil9ZnVuY3Rpb24gX28odCxuKXtmdW5jdGlvbiBlKHQsbil7bz4wP248LUdkK2pkJiYobj0tR2QramQpOm4+R2QtamQmJihuPUdkLWpkKTt2YXIgZT1vL2lwKHlvKG4pLGkpO3JldHVybltlKm9wKGkqdCksby1lKnRwKGkqdCldfXZhciByPXRwKHQpLGk9dD09PW4/b3AodCk6cnAoci90cChuKSkvcnAoeW8obikveW8odCkpLG89cippcCh5byh0KSxpKS9pO3JldHVybiBpPyhlLmludmVydD1mdW5jdGlvbih0LG4pe3ZhciBlPW8tbixyPWFwKGkpKnVwKHQqdCtlKmUpO3JldHVybltLZCh0LFFkKGUpKS9pKmFwKGUpLDIqSmQoaXAoby9yLDEvaSkpLUdkXX0sZSk6dm99ZnVuY3Rpb24gYm8odCxuKXtyZXR1cm5bdCxuXX1mdW5jdGlvbiBtbyh0LG4pe2Z1bmN0aW9uIGUodCxuKXt2YXIgZT1vLW4scj1pKnQ7cmV0dXJuW2Uqb3Aociksby1lKnRwKHIpXX12YXIgcj10cCh0KSxpPXQ9PT1uP29wKHQpOihyLXRwKG4pKS8obi10KSxvPXIvaSt0O3JldHVybiBRZChpKTxqZD9ibzooZS5pbnZlcnQ9ZnVuY3Rpb24odCxuKXt2YXIgZT1vLW47cmV0dXJuW0tkKHQsUWQoZSkpL2kqYXAoZSksby1hcChpKSp1cCh0KnQrZSplKV19LGUpfWZ1bmN0aW9uIHhvKHQsbil7dmFyIGU9dHAobikscj10cCh0KSplO3JldHVybltlKm9wKHQpL3Isb3Aobikvcl19ZnVuY3Rpb24gd28odCxuLGUscil7cmV0dXJuIDE9PT10JiYxPT09biYmMD09PWUmJjA9PT1yP3ppOlFpKHtwb2ludDpmdW5jdGlvbihpLG8pe3RoaXMuc3RyZWFtLnBvaW50KGkqdCtlLG8qbityKX19KX1mdW5jdGlvbiBNbyh0LG4pe3ZhciBlPW4qbixyPWUqZTtyZXR1cm5bdCooLjg3MDctLjEzMTk3OSplK3IqKHIqKC4wMDM5NzEqZS0uMDAxNTI5KnIpLS4wMTM3OTEpKSxuKigxLjAwNzIyNitlKiguMDE1MDg1K3IqKC4wMjg4NzQqZS0uMDQ0NDc1LS4wMDU5MTYqcikpKV19ZnVuY3Rpb24gQW8odCxuKXtyZXR1cm5bdHAobikqb3AodCksb3AobildfWZ1bmN0aW9uIFRvKHQsbil7dmFyIGU9dHAobikscj0xK3RwKHQpKmU7cmV0dXJuW2Uqb3AodCkvcixvcChuKS9yXX1mdW5jdGlvbiBObyh0LG4pe3JldHVybltycChmcCgoR2QrbikvMikpLC10XX1mdW5jdGlvbiBTbyh0LG4pe3JldHVybiB0LnBhcmVudD09PW4ucGFyZW50PzE6Mn1mdW5jdGlvbiBFbyh0LG4pe3JldHVybiB0K24ueH1mdW5jdGlvbiBrbyh0LG4pe3JldHVybiBNYXRoLm1heCh0LG4ueSl9ZnVuY3Rpb24gQ28odCl7dmFyIG49MCxlPXQuY2hpbGRyZW4scj1lJiZlLmxlbmd0aDtpZihyKWZvcig7LS1yPj0wOyluKz1lW3JdLnZhbHVlO2Vsc2Ugbj0xO3QudmFsdWU9bn1mdW5jdGlvbiBQbyh0LG4pe3ZhciBlLHIsaSxvLGEsdT1uZXcgRG8odCksZj0rdC52YWx1ZSYmKHUudmFsdWU9dC52YWx1ZSksYz1bdV07Zm9yKG51bGw9PW4mJihuPXpvKTtlPWMucG9wKCk7KWlmKGYmJihlLnZhbHVlPStlLmRhdGEudmFsdWUpLChpPW4oZS5kYXRhKSkmJihhPWkubGVuZ3RoKSlmb3IoZS5jaGlsZHJlbj1uZXcgQXJyYXkoYSksbz1hLTE7bz49MDstLW8pYy5wdXNoKHI9ZS5jaGlsZHJlbltvXT1uZXcgRG8oaVtvXSkpLHIucGFyZW50PWUsci5kZXB0aD1lLmRlcHRoKzE7cmV0dXJuIHUuZWFjaEJlZm9yZShMbyl9ZnVuY3Rpb24gem8odCl7cmV0dXJuIHQuY2hpbGRyZW59ZnVuY3Rpb24gUm8odCl7dC5kYXRhPXQuZGF0YS5kYXRhfWZ1bmN0aW9uIExvKHQpe3ZhciBuPTA7ZG97dC5oZWlnaHQ9bn13aGlsZSgodD10LnBhcmVudCkmJnQuaGVpZ2h0PCsrbil9ZnVuY3Rpb24gRG8odCl7dGhpcy5kYXRhPXQsdGhpcy5kZXB0aD10aGlzLmhlaWdodD0wLHRoaXMucGFyZW50PW51bGx9ZnVuY3Rpb24gVW8odCl7Zm9yKHZhciBuLGUscj0wLGk9KHQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBuLGUscj10Lmxlbmd0aDtyOyllPU1hdGgucmFuZG9tKCkqci0tfDAsbj10W3JdLHRbcl09dFtlXSx0W2VdPW47cmV0dXJuIHR9KHB2LmNhbGwodCkpKS5sZW5ndGgsbz1bXTtyPGk7KW49dFtyXSxlJiZPbyhlLG4pPysrcjooZT1mdW5jdGlvbih0KXtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJue3g6dC54LHk6dC55LHI6dC5yfX0odFswXSk7Y2FzZSAyOnJldHVybiBCbyh0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gRm8odFswXSx0WzFdLHRbMl0pfX0obz1mdW5jdGlvbih0LG4pe3ZhciBlLHI7aWYoWW8obix0KSlyZXR1cm5bbl07Zm9yKGU9MDtlPHQubGVuZ3RoOysrZSlpZihxbyhuLHRbZV0pJiZZbyhCbyh0W2VdLG4pLHQpKXJldHVyblt0W2VdLG5dO2ZvcihlPTA7ZTx0Lmxlbmd0aC0xOysrZSlmb3Iocj1lKzE7cjx0Lmxlbmd0aDsrK3IpaWYocW8oQm8odFtlXSx0W3JdKSxuKSYmcW8oQm8odFtlXSxuKSx0W3JdKSYmcW8oQm8odFtyXSxuKSx0W2VdKSYmWW8oRm8odFtlXSx0W3JdLG4pLHQpKXJldHVyblt0W2VdLHRbcl0sbl07dGhyb3cgbmV3IEVycm9yfShvLG4pKSxyPTApO3JldHVybiBlfWZ1bmN0aW9uIHFvKHQsbil7dmFyIGU9dC5yLW4ucixyPW4ueC10LngsaT1uLnktdC55O3JldHVybiBlPDB8fGUqZTxyKnIraSppfWZ1bmN0aW9uIE9vKHQsbil7dmFyIGU9dC5yLW4ucisxZS02LHI9bi54LXQueCxpPW4ueS10Lnk7cmV0dXJuIGU+MCYmZSplPnIqcitpKml9ZnVuY3Rpb24gWW8odCxuKXtmb3IodmFyIGU9MDtlPG4ubGVuZ3RoOysrZSlpZighT28odCxuW2VdKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBCbyh0LG4pe3ZhciBlPXQueCxyPXQueSxpPXQucixvPW4ueCxhPW4ueSx1PW4ucixmPW8tZSxjPWEtcixzPXUtaSxsPU1hdGguc3FydChmKmYrYypjKTtyZXR1cm57eDooZStvK2YvbCpzKS8yLHk6KHIrYStjL2wqcykvMixyOihsK2krdSkvMn19ZnVuY3Rpb24gRm8odCxuLGUpe3ZhciByPXQueCxpPXQueSxvPXQucixhPW4ueCx1PW4ueSxmPW4ucixjPWUueCxzPWUueSxsPWUucixoPXItYSxkPXItYyxwPWktdSx2PWktcyxnPWYtbyx5PWwtbyxfPXIqcitpKmktbypvLGI9Xy1hKmEtdSp1K2YqZixtPV8tYypjLXMqcytsKmwseD1kKnAtaCp2LHc9KHAqbS12KmIpLygyKngpLXIsTT0odipnLXAqeSkveCxBPShkKmItaCptKS8oMip4KS1pLFQ9KGgqeS1kKmcpL3gsTj1NKk0rVCpULTEsUz0yKihvK3cqTStBKlQpLEU9dyp3K0EqQS1vKm8saz0tKE4/KFMrTWF0aC5zcXJ0KFMqUy00Kk4qRSkpLygyKk4pOkUvUyk7cmV0dXJue3g6cit3K00qayx5OmkrQStUKmsscjprfX1mdW5jdGlvbiBJbyh0LG4sZSl7dmFyIHIsaSxvLGEsdT10Lngtbi54LGY9dC55LW4ueSxjPXUqdStmKmY7Yz8oaT1uLnIrZS5yLGkqPWksYT10LnIrZS5yLGk+KGEqPWEpPyhyPShjK2EtaSkvKDIqYyksbz1NYXRoLnNxcnQoTWF0aC5tYXgoMCxhL2MtcipyKSksZS54PXQueC1yKnUtbypmLGUueT10LnktcipmK28qdSk6KHI9KGMraS1hKS8oMipjKSxvPU1hdGguc3FydChNYXRoLm1heCgwLGkvYy1yKnIpKSxlLng9bi54K3IqdS1vKmYsZS55PW4ueStyKmYrbyp1KSk6KGUueD1uLngrZS5yLGUueT1uLnkpfWZ1bmN0aW9uIGpvKHQsbil7dmFyIGU9dC5yK24uci0xZS02LHI9bi54LXQueCxpPW4ueS10Lnk7cmV0dXJuIGU+MCYmZSplPnIqcitpKml9ZnVuY3Rpb24gSG8odCl7dmFyIG49dC5fLGU9dC5uZXh0Ll8scj1uLnIrZS5yLGk9KG4ueCplLnIrZS54Km4ucikvcixvPShuLnkqZS5yK2UueSpuLnIpL3I7cmV0dXJuIGkqaStvKm99ZnVuY3Rpb24gWG8odCl7dGhpcy5fPXQsdGhpcy5uZXh0PW51bGwsdGhpcy5wcmV2aW91cz1udWxsfWZ1bmN0aW9uIEdvKHQpe2lmKCEoaT10Lmxlbmd0aCkpcmV0dXJuIDA7dmFyIG4sZSxyLGksbyxhLHUsZixjLHMsbDtpZihuPXRbMF0sbi54PTAsbi55PTAsIShpPjEpKXJldHVybiBuLnI7aWYoZT10WzFdLG4ueD0tZS5yLGUueD1uLnIsZS55PTAsIShpPjIpKXJldHVybiBuLnIrZS5yO0lvKGUsbixyPXRbMl0pLG49bmV3IFhvKG4pLGU9bmV3IFhvKGUpLHI9bmV3IFhvKHIpLG4ubmV4dD1yLnByZXZpb3VzPWUsZS5uZXh0PW4ucHJldmlvdXM9cixyLm5leHQ9ZS5wcmV2aW91cz1uO3Q6Zm9yKHU9Mzt1PGk7Kyt1KXtJbyhuLl8sZS5fLHI9dFt1XSkscj1uZXcgWG8ociksZj1lLm5leHQsYz1uLnByZXZpb3VzLHM9ZS5fLnIsbD1uLl8ucjtkb3tpZihzPD1sKXtpZihqbyhmLl8sci5fKSl7ZT1mLG4ubmV4dD1lLGUucHJldmlvdXM9biwtLXU7Y29udGludWUgdH1zKz1mLl8ucixmPWYubmV4dH1lbHNle2lmKGpvKGMuXyxyLl8pKXsobj1jKS5uZXh0PWUsZS5wcmV2aW91cz1uLC0tdTtjb250aW51ZSB0fWwrPWMuXy5yLGM9Yy5wcmV2aW91c319d2hpbGUoZiE9PWMubmV4dCk7Zm9yKHIucHJldmlvdXM9bixyLm5leHQ9ZSxuLm5leHQ9ZS5wcmV2aW91cz1lPXIsbz1IbyhuKTsocj1yLm5leHQpIT09ZTspKGE9SG8ocikpPG8mJihuPXIsbz1hKTtlPW4ubmV4dH1mb3Iobj1bZS5fXSxyPWU7KHI9ci5uZXh0KSE9PWU7KW4ucHVzaChyLl8pO2ZvcihyPVVvKG4pLHU9MDt1PGk7Kyt1KW49dFt1XSxuLngtPXIueCxuLnktPXIueTtyZXR1cm4gci5yfWZ1bmN0aW9uIFZvKHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBFcnJvcjtyZXR1cm4gdH1mdW5jdGlvbiAkbygpe3JldHVybiAwfWZ1bmN0aW9uIFdvKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiBabyh0KXtyZXR1cm4gTWF0aC5zcXJ0KHQudmFsdWUpfWZ1bmN0aW9uIFFvKHQpe3JldHVybiBmdW5jdGlvbihuKXtuLmNoaWxkcmVufHwobi5yPU1hdGgubWF4KDAsK3Qobil8fDApKX19ZnVuY3Rpb24gSm8odCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYocj1lLmNoaWxkcmVuKXt2YXIgcixpLG8sYT1yLmxlbmd0aCx1PXQoZSkqbnx8MDtpZih1KWZvcihpPTA7aTxhOysraSlyW2ldLnIrPXU7aWYobz1HbyhyKSx1KWZvcihpPTA7aTxhOysraSlyW2ldLnItPXU7ZS5yPW8rdX19fWZ1bmN0aW9uIEtvKHQpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgZT1uLnBhcmVudDtuLnIqPXQsZSYmKG4ueD1lLngrdCpuLngsbi55PWUueSt0Km4ueSl9fWZ1bmN0aW9uIHRhKHQpe3QueDA9TWF0aC5yb3VuZCh0LngwKSx0LnkwPU1hdGgucm91bmQodC55MCksdC54MT1NYXRoLnJvdW5kKHQueDEpLHQueTE9TWF0aC5yb3VuZCh0LnkxKX1mdW5jdGlvbiBuYSh0LG4sZSxyLGkpe2Zvcih2YXIgbyxhPXQuY2hpbGRyZW4sdT0tMSxmPWEubGVuZ3RoLGM9dC52YWx1ZSYmKHItbikvdC52YWx1ZTsrK3U8ZjspKG89YVt1XSkueTA9ZSxvLnkxPWksby54MD1uLG8ueDE9bis9by52YWx1ZSpjfWZ1bmN0aW9uIGVhKHQpe3JldHVybiB0LmlkfWZ1bmN0aW9uIHJhKHQpe3JldHVybiB0LnBhcmVudElkfWZ1bmN0aW9uIGlhKHQsbil7cmV0dXJuIHQucGFyZW50PT09bi5wYXJlbnQ/MToyfWZ1bmN0aW9uIG9hKHQpe3ZhciBuPXQuY2hpbGRyZW47cmV0dXJuIG4/blswXTp0LnR9ZnVuY3Rpb24gYWEodCl7dmFyIG49dC5jaGlsZHJlbjtyZXR1cm4gbj9uW24ubGVuZ3RoLTFdOnQudH1mdW5jdGlvbiB1YSh0LG4sZSl7dmFyIHI9ZS8obi5pLXQuaSk7bi5jLT1yLG4ucys9ZSx0LmMrPXIsbi56Kz1lLG4ubSs9ZX1mdW5jdGlvbiBmYSh0LG4sZSl7cmV0dXJuIHQuYS5wYXJlbnQ9PT1uLnBhcmVudD90LmE6ZX1mdW5jdGlvbiBjYSh0LG4pe3RoaXMuXz10LHRoaXMucGFyZW50PW51bGwsdGhpcy5jaGlsZHJlbj1udWxsLHRoaXMuQT1udWxsLHRoaXMuYT10aGlzLHRoaXMuej0wLHRoaXMubT0wLHRoaXMuYz0wLHRoaXMucz0wLHRoaXMudD1udWxsLHRoaXMuaT1ufWZ1bmN0aW9uIHNhKHQsbixlLHIsaSl7Zm9yKHZhciBvLGE9dC5jaGlsZHJlbix1PS0xLGY9YS5sZW5ndGgsYz10LnZhbHVlJiYoaS1lKS90LnZhbHVlOysrdTxmOykobz1hW3VdKS54MD1uLG8ueDE9cixvLnkwPWUsby55MT1lKz1vLnZhbHVlKmN9ZnVuY3Rpb24gbGEodCxuLGUscixpLG8pe2Zvcih2YXIgYSx1LGYsYyxzLGwsaCxkLHAsdixnLHk9W10sXz1uLmNoaWxkcmVuLGI9MCxtPTAseD1fLmxlbmd0aCx3PW4udmFsdWU7Yjx4Oyl7Zj1pLWUsYz1vLXI7ZG97cz1fW20rK10udmFsdWV9d2hpbGUoIXMmJm08eCk7Zm9yKGw9aD1zLGc9cypzKih2PU1hdGgubWF4KGMvZixmL2MpLyh3KnQpKSxwPU1hdGgubWF4KGgvZyxnL2wpO208eDsrK20pe2lmKHMrPXU9X1ttXS52YWx1ZSx1PGwmJihsPXUpLHU+aCYmKGg9dSksZz1zKnMqdiwoZD1NYXRoLm1heChoL2csZy9sKSk+cCl7cy09dTticmVha31wPWR9eS5wdXNoKGE9e3ZhbHVlOnMsZGljZTpmPGMsY2hpbGRyZW46Xy5zbGljZShiLG0pfSksYS5kaWNlP25hKGEsZSxyLGksdz9yKz1jKnMvdzpvKTpzYShhLGUscix3P2UrPWYqcy93Omksbyksdy09cyxiPW19cmV0dXJuIHl9ZnVuY3Rpb24gaGEodCxuLGUpe3JldHVybihuWzBdLXRbMF0pKihlWzFdLXRbMV0pLShuWzFdLXRbMV0pKihlWzBdLXRbMF0pfWZ1bmN0aW9uIGRhKHQsbil7cmV0dXJuIHRbMF0tblswXXx8dFsxXS1uWzFdfWZ1bmN0aW9uIHBhKHQpe2Zvcih2YXIgbj10Lmxlbmd0aCxlPVswLDFdLHI9MixpPTI7aTxuOysraSl7Zm9yKDtyPjEmJmhhKHRbZVtyLTJdXSx0W2Vbci0xXV0sdFtpXSk8PTA7KS0tcjtlW3IrK109aX1yZXR1cm4gZS5zbGljZSgwLHIpfWZ1bmN0aW9uIHZhKCl7cmV0dXJuIE1hdGgucmFuZG9tKCl9ZnVuY3Rpb24gZ2EodCl7ZnVuY3Rpb24gbihuKXt2YXIgbz1uKyIiLGE9ZS5nZXQobyk7aWYoIWEpe2lmKGkhPT1DdilyZXR1cm4gaTtlLnNldChvLGE9ci5wdXNoKG4pKX1yZXR1cm4gdFsoYS0xKSV0Lmxlbmd0aF19dmFyIGU9aGUoKSxyPVtdLGk9Q3Y7cmV0dXJuIHQ9bnVsbD09dD9bXTprdi5jYWxsKHQpLG4uZG9tYWluPWZ1bmN0aW9uKHQpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiByLnNsaWNlKCk7cj1bXSxlPWhlKCk7Zm9yKHZhciBpLG8sYT0tMSx1PXQubGVuZ3RoOysrYTx1OyllLmhhcyhvPShpPXRbYV0pKyIiKXx8ZS5zZXQobyxyLnB1c2goaSkpO3JldHVybiBufSxuLnJhbmdlPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PWt2LmNhbGwoZSksbik6dC5zbGljZSgpfSxuLnVua25vd249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9dCxuKTppfSxuLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gZ2EoKS5kb21haW4ocikucmFuZ2UodCkudW5rbm93bihpKX0sbn1mdW5jdGlvbiB5YSgpe2Z1bmN0aW9uIHQoKXt2YXIgdD1pKCkubGVuZ3RoLHI9YVsxXTxhWzBdLGg9YVtyLTBdLGQ9YVsxLXJdO249KGQtaCkvTWF0aC5tYXgoMSx0LWYrMipjKSx1JiYobj1NYXRoLmZsb29yKG4pKSxoKz0oZC1oLW4qKHQtZikpKmwsZT1uKigxLWYpLHUmJihoPU1hdGgucm91bmQoaCksZT1NYXRoLnJvdW5kKGUpKTt2YXIgcD1zKHQpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gaCtuKnR9KTtyZXR1cm4gbyhyP3AucmV2ZXJzZSgpOnApfXZhciBuLGUscj1nYSgpLnVua25vd24odm9pZCAwKSxpPXIuZG9tYWluLG89ci5yYW5nZSxhPVswLDFdLHU9ITEsZj0wLGM9MCxsPS41O3JldHVybiBkZWxldGUgci51bmtub3duLHIuZG9tYWluPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpKG4pLHQoKSk6aSgpfSxyLnJhbmdlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPVsrblswXSwrblsxXV0sdCgpKTphLnNsaWNlKCl9LHIucmFuZ2VSb3VuZD1mdW5jdGlvbihuKXtyZXR1cm4gYT1bK25bMF0sK25bMV1dLHU9ITAsdCgpfSxyLmJhbmR3aWR0aD1mdW5jdGlvbigpe3JldHVybiBlfSxyLnN0ZXA9ZnVuY3Rpb24oKXtyZXR1cm4gbn0sci5yb3VuZD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT0hIW4sdCgpKTp1fSxyLnBhZGRpbmc9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9Yz1NYXRoLm1heCgwLE1hdGgubWluKDEsbikpLHQoKSk6Zn0sci5wYWRkaW5nSW5uZXI9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9TWF0aC5tYXgoMCxNYXRoLm1pbigxLG4pKSx0KCkpOmZ9LHIucGFkZGluZ091dGVyPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjPU1hdGgubWF4KDAsTWF0aC5taW4oMSxuKSksdCgpKTpjfSxyLmFsaWduPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPU1hdGgubWF4KDAsTWF0aC5taW4oMSxuKSksdCgpKTpsfSxyLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4geWEoKS5kb21haW4oaSgpKS5yYW5nZShhKS5yb3VuZCh1KS5wYWRkaW5nSW5uZXIoZikucGFkZGluZ091dGVyKGMpLmFsaWduKGwpfSx0KCl9ZnVuY3Rpb24gX2EodCl7dmFyIG49dC5jb3B5O3JldHVybiB0LnBhZGRpbmc9dC5wYWRkaW5nT3V0ZXIsZGVsZXRlIHQucGFkZGluZ0lubmVyLGRlbGV0ZSB0LnBhZGRpbmdPdXRlcix0LmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gX2EobigpKX0sdH1mdW5jdGlvbiBiYSh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gbWEodCl7cmV0dXJuK3R9ZnVuY3Rpb24geGEodCxuKXtyZXR1cm4obi09dD0rdCk/ZnVuY3Rpb24oZSl7cmV0dXJuKGUtdCkvbn06YmEobil9ZnVuY3Rpb24gd2EodCxuLGUscil7dmFyIGk9dFswXSxvPXRbMV0sYT1uWzBdLHU9blsxXTtyZXR1cm4gbzxpPyhpPWUobyxpKSxhPXIodSxhKSk6KGk9ZShpLG8pLGE9cihhLHUpKSxmdW5jdGlvbih0KXtyZXR1cm4gYShpKHQpKX19ZnVuY3Rpb24gTWEodCxuLGUscil7dmFyIGk9TWF0aC5taW4odC5sZW5ndGgsbi5sZW5ndGgpLTEsbz1uZXcgQXJyYXkoaSksYT1uZXcgQXJyYXkoaSksdT0tMTtmb3IodFtpXTx0WzBdJiYodD10LnNsaWNlKCkucmV2ZXJzZSgpLG49bi5zbGljZSgpLnJldmVyc2UoKSk7Kyt1PGk7KW9bdV09ZSh0W3VdLHRbdSsxXSksYVt1XT1yKG5bdV0sblt1KzFdKTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIGU9SmModCxuLDEsaSktMTtyZXR1cm4gYVtlXShvW2VdKG4pKX19ZnVuY3Rpb24gQWEodCxuKXtyZXR1cm4gbi5kb21haW4odC5kb21haW4oKSkucmFuZ2UodC5yYW5nZSgpKS5pbnRlcnBvbGF0ZSh0LmludGVycG9sYXRlKCkpLmNsYW1wKHQuY2xhbXAoKSl9ZnVuY3Rpb24gVGEodCxuKXtmdW5jdGlvbiBlKCl7cmV0dXJuIGk9TWF0aC5taW4odS5sZW5ndGgsZi5sZW5ndGgpPjI/TWE6d2Esbz1hPW51bGwscn1mdW5jdGlvbiByKG4pe3JldHVybihvfHwobz1pKHUsZixzP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuLGUpe3ZhciByPXQobj0rbixlPStlKTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHQ8PW4/MDp0Pj1lPzE6cih0KX19fSh0KTp0LGMpKSkoK24pfXZhciBpLG8sYSx1PVB2LGY9UHYsYz1kbixzPSExO3JldHVybiByLmludmVydD1mdW5jdGlvbih0KXtyZXR1cm4oYXx8KGE9aShmLHUseGEscz9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obixlKXt2YXIgcj10KG49K24sZT0rZSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiB0PD0wP246dD49MT9lOnIodCl9fX0obik6bikpKSgrdCl9LHIuZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PUV2LmNhbGwodCxtYSksZSgpKTp1LnNsaWNlKCl9LHIucmFuZ2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9a3YuY2FsbCh0KSxlKCkpOmYuc2xpY2UoKX0sci5yYW5nZVJvdW5kPWZ1bmN0aW9uKHQpe3JldHVybiBmPWt2LmNhbGwodCksYz1wbixlKCl9LHIuY2xhbXA9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHM9ISF0LGUoKSk6c30sci5pbnRlcnBvbGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz10LGUoKSk6Y30sZSgpfWZ1bmN0aW9uIE5hKG4pe3ZhciBlPW4uZG9tYWluO3JldHVybiBuLnRpY2tzPWZ1bmN0aW9uKHQpe3ZhciBuPWUoKTtyZXR1cm4gbChuWzBdLG5bbi5sZW5ndGgtMV0sbnVsbD09dD8xMDp0KX0sbi50aWNrRm9ybWF0PWZ1bmN0aW9uKG4scil7cmV0dXJuIGZ1bmN0aW9uKG4sZSxyKXt2YXIgaSxvPW5bMF0sYT1uW24ubGVuZ3RoLTFdLHU9ZChvLGEsbnVsbD09ZT8xMDplKTtzd2l0Y2goKHI9dHIobnVsbD09cj8iLGYiOnIpKS50eXBlKXtjYXNlInMiOnZhciBmPU1hdGgubWF4KE1hdGguYWJzKG8pLE1hdGguYWJzKGEpKTtyZXR1cm4gbnVsbCE9ci5wcmVjaXNpb258fGlzTmFOKGk9dXIodSxmKSl8fChyLnByZWNpc2lvbj1pKSx0LmZvcm1hdFByZWZpeChyLGYpO2Nhc2UiIjpjYXNlImUiOmNhc2UiZyI6Y2FzZSJwIjpjYXNlInIiOm51bGwhPXIucHJlY2lzaW9ufHxpc05hTihpPWZyKHUsTWF0aC5tYXgoTWF0aC5hYnMobyksTWF0aC5hYnMoYSkpKSl8fChyLnByZWNpc2lvbj1pLSgiZSI9PT1yLnR5cGUpKTticmVhaztjYXNlImYiOmNhc2UiJSI6bnVsbCE9ci5wcmVjaXNpb258fGlzTmFOKGk9YXIodSkpfHwoci5wcmVjaXNpb249aS0yKigiJSI9PT1yLnR5cGUpKX1yZXR1cm4gdC5mb3JtYXQocil9KGUoKSxuLHIpfSxuLm5pY2U9ZnVuY3Rpb24odCl7bnVsbD09dCYmKHQ9MTApO3ZhciByLGk9ZSgpLG89MCxhPWkubGVuZ3RoLTEsdT1pW29dLGY9aVthXTtyZXR1cm4gZjx1JiYocj11LHU9ZixmPXIscj1vLG89YSxhPXIpLChyPWgodSxmLHQpKT4wP3I9aCh1PU1hdGguZmxvb3IodS9yKSpyLGY9TWF0aC5jZWlsKGYvcikqcix0KTpyPDAmJihyPWgodT1NYXRoLmNlaWwodSpyKS9yLGY9TWF0aC5mbG9vcihmKnIpL3IsdCkpLHI+MD8oaVtvXT1NYXRoLmZsb29yKHUvcikqcixpW2FdPU1hdGguY2VpbChmL3IpKnIsZShpKSk6cjwwJiYoaVtvXT1NYXRoLmNlaWwodSpyKS9yLGlbYV09TWF0aC5mbG9vcihmKnIpL3IsZShpKSksbn0sbn1mdW5jdGlvbiBTYSgpe3ZhciB0PVRhKHhhLHNuKTtyZXR1cm4gdC5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIEFhKHQsU2EoKSl9LE5hKHQpfWZ1bmN0aW9uIEVhKCl7ZnVuY3Rpb24gdCh0KXtyZXR1cm4rdH12YXIgbj1bMCwxXTtyZXR1cm4gdC5pbnZlcnQ9dCx0LmRvbWFpbj10LnJhbmdlPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPUV2LmNhbGwoZSxtYSksdCk6bi5zbGljZSgpfSx0LmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gRWEoKS5kb21haW4obil9LE5hKHQpfWZ1bmN0aW9uIGthKHQsbil7dmFyIGUscj0wLGk9KHQ9dC5zbGljZSgpKS5sZW5ndGgtMSxvPXRbcl0sYT10W2ldO3JldHVybiBhPG8mJihlPXIscj1pLGk9ZSxlPW8sbz1hLGE9ZSksdFtyXT1uLmZsb29yKG8pLHRbaV09bi5jZWlsKGEpLHR9ZnVuY3Rpb24gQ2EodCxuKXtyZXR1cm4obj1NYXRoLmxvZyhuL3QpKT9mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5sb2coZS90KS9ufTpiYShuKX1mdW5jdGlvbiBQYSh0LG4pe3JldHVybiB0PDA/ZnVuY3Rpb24oZSl7cmV0dXJuLU1hdGgucG93KC1uLGUpKk1hdGgucG93KC10LDEtZSl9OmZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLnBvdyhuLGUpKk1hdGgucG93KHQsMS1lKX19ZnVuY3Rpb24gemEodCl7cmV0dXJuIGlzRmluaXRlKHQpPysoIjFlIit0KTp0PDA/MDp0fWZ1bmN0aW9uIFJhKHQpe3JldHVybiAxMD09PXQ/emE6dD09PU1hdGguRT9NYXRoLmV4cDpmdW5jdGlvbihuKXtyZXR1cm4gTWF0aC5wb3codCxuKX19ZnVuY3Rpb24gTGEodCl7cmV0dXJuIHQ9PT1NYXRoLkU/TWF0aC5sb2c6MTA9PT10JiZNYXRoLmxvZzEwfHwyPT09dCYmTWF0aC5sb2cyfHwodD1NYXRoLmxvZyh0KSxmdW5jdGlvbihuKXtyZXR1cm4gTWF0aC5sb2cobikvdH0pfWZ1bmN0aW9uIERhKHQpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4tdCgtbil9fWZ1bmN0aW9uIFVhKCl7ZnVuY3Rpb24gbigpe3JldHVybiBvPUxhKGkpLGE9UmEoaSkscigpWzBdPDAmJihvPURhKG8pLGE9RGEoYSkpLGV9dmFyIGU9VGEoQ2EsUGEpLmRvbWFpbihbMSwxMF0pLHI9ZS5kb21haW4saT0xMCxvPUxhKDEwKSxhPVJhKDEwKTtyZXR1cm4gZS5iYXNlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSt0LG4oKSk6aX0sZS5kb21haW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHIodCksbigpKTpyKCl9LGUudGlja3M9ZnVuY3Rpb24odCl7dmFyIG4sZT1yKCksdT1lWzBdLGY9ZVtlLmxlbmd0aC0xXTsobj1mPHUpJiYoZD11LHU9ZixmPWQpO3ZhciBjLHMsaCxkPW8odSkscD1vKGYpLHY9bnVsbD09dD8xMDordCxnPVtdO2lmKCEoaSUxKSYmcC1kPHYpe2lmKGQ9TWF0aC5yb3VuZChkKS0xLHA9TWF0aC5yb3VuZChwKSsxLHU+MCl7Zm9yKDtkPHA7KytkKWZvcihzPTEsYz1hKGQpO3M8aTsrK3MpaWYoISgoaD1jKnMpPHUpKXtpZihoPmYpYnJlYWs7Zy5wdXNoKGgpfX1lbHNlIGZvcig7ZDxwOysrZClmb3Iocz1pLTEsYz1hKGQpO3M+PTE7LS1zKWlmKCEoKGg9YypzKTx1KSl7aWYoaD5mKWJyZWFrO2cucHVzaChoKX19ZWxzZSBnPWwoZCxwLE1hdGgubWluKHAtZCx2KSkubWFwKGEpO3JldHVybiBuP2cucmV2ZXJzZSgpOmd9LGUudGlja0Zvcm1hdD1mdW5jdGlvbihuLHIpe2lmKG51bGw9PXImJihyPTEwPT09aT8iLjBlIjoiLCIpLCJmdW5jdGlvbiIhPXR5cGVvZiByJiYocj10LmZvcm1hdChyKSksbj09PTEvMClyZXR1cm4gcjtudWxsPT1uJiYobj0xMCk7dmFyIHU9TWF0aC5tYXgoMSxpKm4vZS50aWNrcygpLmxlbmd0aCk7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBuPXQvYShNYXRoLnJvdW5kKG8odCkpKTtyZXR1cm4gbippPGktLjUmJihuKj1pKSxuPD11P3IodCk6IiJ9fSxlLm5pY2U9ZnVuY3Rpb24oKXtyZXR1cm4gcihrYShyKCkse2Zsb29yOmZ1bmN0aW9uKHQpe3JldHVybiBhKE1hdGguZmxvb3Iobyh0KSkpfSxjZWlsOmZ1bmN0aW9uKHQpe3JldHVybiBhKE1hdGguY2VpbChvKHQpKSl9fSkpfSxlLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gQWEoZSxVYSgpLmJhc2UoaSkpfSxlfWZ1bmN0aW9uIHFhKHQsbil7cmV0dXJuIHQ8MD8tTWF0aC5wb3coLXQsbik6TWF0aC5wb3codCxuKX1mdW5jdGlvbiBPYSgpe3ZhciB0PTEsbj1UYShmdW5jdGlvbihuLGUpe3JldHVybihlPXFhKGUsdCktKG49cWEobix0KSkpP2Z1bmN0aW9uKHIpe3JldHVybihxYShyLHQpLW4pL2V9OmJhKGUpfSxmdW5jdGlvbihuLGUpe3JldHVybiBlPXFhKGUsdCktKG49cWEobix0KSksZnVuY3Rpb24ocil7cmV0dXJuIHFhKG4rZSpyLDEvdCl9fSksZT1uLmRvbWFpbjtyZXR1cm4gbi5leHBvbmVudD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD0rbixlKGUoKSkpOnR9LG4uY29weT1mdW5jdGlvbigpe3JldHVybiBBYShuLE9hKCkuZXhwb25lbnQodCkpfSxOYShuKX1mdW5jdGlvbiBZYSgpe2Z1bmN0aW9uIHQoKXt2YXIgdD0wLG49TWF0aC5tYXgoMSxpLmxlbmd0aCk7Zm9yKG89bmV3IEFycmF5KG4tMSk7Kyt0PG47KW9bdC0xXT12KHIsdC9uKTtyZXR1cm4gZX1mdW5jdGlvbiBlKHQpe2lmKCFpc05hTih0PSt0KSlyZXR1cm4gaVtKYyhvLHQpXX12YXIgcj1bXSxpPVtdLG89W107cmV0dXJuIGUuaW52ZXJ0RXh0ZW50PWZ1bmN0aW9uKHQpe3ZhciBuPWkuaW5kZXhPZih0KTtyZXR1cm4gbjwwP1tOYU4sTmFOXTpbbj4wP29bbi0xXTpyWzBdLG48by5sZW5ndGg/b1tuXTpyW3IubGVuZ3RoLTFdXX0sZS5kb21haW49ZnVuY3Rpb24oZSl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHIuc2xpY2UoKTtyPVtdO2Zvcih2YXIgaSxvPTAsYT1lLmxlbmd0aDtvPGE7KytvKW51bGw9PShpPWVbb10pfHxpc05hTihpPStpKXx8ci5wdXNoKGkpO3JldHVybiByLnNvcnQobiksdCgpfSxlLnJhbmdlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPWt2LmNhbGwobiksdCgpKTppLnNsaWNlKCl9LGUucXVhbnRpbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIG8uc2xpY2UoKX0sZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIFlhKCkuZG9tYWluKHIpLnJhbmdlKGkpfSxlfWZ1bmN0aW9uIEJhKCl7ZnVuY3Rpb24gdCh0KXtpZih0PD10KXJldHVybiBhW0pjKG8sdCwwLGkpXX1mdW5jdGlvbiBuKCl7dmFyIG49LTE7Zm9yKG89bmV3IEFycmF5KGkpOysrbjxpOylvW25dPSgobisxKSpyLShuLWkpKmUpLyhpKzEpO3JldHVybiB0fXZhciBlPTAscj0xLGk9MSxvPVsuNV0sYT1bMCwxXTtyZXR1cm4gdC5kb21haW49ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9K3RbMF0scj0rdFsxXSxuKCkpOltlLHJdfSx0LnJhbmdlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPShhPWt2LmNhbGwodCkpLmxlbmd0aC0xLG4oKSk6YS5zbGljZSgpfSx0LmludmVydEV4dGVudD1mdW5jdGlvbih0KXt2YXIgbj1hLmluZGV4T2YodCk7cmV0dXJuIG48MD9bTmFOLE5hTl06bjwxP1tlLG9bMF1dOm4+PWk/W29baS0xXSxyXTpbb1tuLTFdLG9bbl1dfSx0LmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gQmEoKS5kb21haW4oW2Uscl0pLnJhbmdlKGEpfSxOYSh0KX1mdW5jdGlvbiBGYSgpe2Z1bmN0aW9uIHQodCl7aWYodDw9dClyZXR1cm4gZVtKYyhuLHQsMCxyKV19dmFyIG49Wy41XSxlPVswLDFdLHI9MTtyZXR1cm4gdC5kb21haW49ZnVuY3Rpb24oaSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49a3YuY2FsbChpKSxyPU1hdGgubWluKG4ubGVuZ3RoLGUubGVuZ3RoLTEpLHQpOm4uc2xpY2UoKX0sdC5yYW5nZT1mdW5jdGlvbihpKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1rdi5jYWxsKGkpLHI9TWF0aC5taW4obi5sZW5ndGgsZS5sZW5ndGgtMSksdCk6ZS5zbGljZSgpfSx0LmludmVydEV4dGVudD1mdW5jdGlvbih0KXt2YXIgcj1lLmluZGV4T2YodCk7cmV0dXJuW25bci0xXSxuW3JdXX0sdC5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIEZhKCkuZG9tYWluKG4pLnJhbmdlKGUpfSx0fWZ1bmN0aW9uIElhKHQsbixlLHIpe2Z1bmN0aW9uIGkobil7cmV0dXJuIHQobj1uZXcgRGF0ZSgrbikpLG59cmV0dXJuIGkuZmxvb3I9aSxpLmNlaWw9ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZT1uZXcgRGF0ZShlLTEpKSxuKGUsMSksdChlKSxlfSxpLnJvdW5kPWZ1bmN0aW9uKHQpe3ZhciBuPWkodCksZT1pLmNlaWwodCk7cmV0dXJuIHQtbjxlLXQ/bjplfSxpLm9mZnNldD1mdW5jdGlvbih0LGUpe3JldHVybiBuKHQ9bmV3IERhdGUoK3QpLG51bGw9PWU/MTpNYXRoLmZsb29yKGUpKSx0fSxpLnJhbmdlPWZ1bmN0aW9uKGUscixvKXt2YXIgYSx1PVtdO2lmKGU9aS5jZWlsKGUpLG89bnVsbD09bz8xOk1hdGguZmxvb3IobyksIShlPHImJm8+MCkpcmV0dXJuIHU7ZG97dS5wdXNoKGE9bmV3IERhdGUoK2UpKSxuKGUsbyksdChlKX13aGlsZShhPGUmJmU8cik7cmV0dXJuIHV9LGkuZmlsdGVyPWZ1bmN0aW9uKGUpe3JldHVybiBJYShmdW5jdGlvbihuKXtpZihuPj1uKWZvcig7dChuKSwhZShuKTspbi5zZXRUaW1lKG4tMSl9LGZ1bmN0aW9uKHQscil7aWYodD49dClpZihyPDApZm9yKDsrK3I8PTA7KWZvcig7bih0LC0xKSwhZSh0KTspO2Vsc2UgZm9yKDstLXI+PTA7KWZvcig7bih0LDEpLCFlKHQpOyk7fSl9LGUmJihpLmNvdW50PWZ1bmN0aW9uKG4scil7cmV0dXJuIHp2LnNldFRpbWUoK24pLFJ2LnNldFRpbWUoK3IpLHQoenYpLHQoUnYpLE1hdGguZmxvb3IoZSh6dixSdikpfSxpLmV2ZXJ5PWZ1bmN0aW9uKHQpe3JldHVybiB0PU1hdGguZmxvb3IodCksaXNGaW5pdGUodCkmJnQ+MD90PjE/aS5maWx0ZXIocj9mdW5jdGlvbihuKXtyZXR1cm4gcihuKSV0PT0wfTpmdW5jdGlvbihuKXtyZXR1cm4gaS5jb3VudCgwLG4pJXQ9PTB9KTppOm51bGx9KSxpfWZ1bmN0aW9uIGphKHQpe3JldHVybiBJYShmdW5jdGlvbihuKXtuLnNldERhdGUobi5nZXREYXRlKCktKG4uZ2V0RGF5KCkrNy10KSU3KSxuLnNldEhvdXJzKDAsMCwwLDApfSxmdW5jdGlvbih0LG4pe3Quc2V0RGF0ZSh0LmdldERhdGUoKSs3Km4pfSxmdW5jdGlvbih0LG4pe3JldHVybihuLXQtKG4uZ2V0VGltZXpvbmVPZmZzZXQoKS10LmdldFRpbWV6b25lT2Zmc2V0KCkpKlV2KS9xdn0pfWZ1bmN0aW9uIEhhKHQpe3JldHVybiBJYShmdW5jdGlvbihuKXtuLnNldFVUQ0RhdGUobi5nZXRVVENEYXRlKCktKG4uZ2V0VVRDRGF5KCkrNy10KSU3KSxuLnNldFVUQ0hvdXJzKDAsMCwwLDApfSxmdW5jdGlvbih0LG4pe3Quc2V0VVRDRGF0ZSh0LmdldFVUQ0RhdGUoKSs3Km4pfSxmdW5jdGlvbih0LG4pe3JldHVybihuLXQpL3F2fSl9ZnVuY3Rpb24gWGEodCl7aWYoMDw9dC55JiZ0Lnk8MTAwKXt2YXIgbj1uZXcgRGF0ZSgtMSx0Lm0sdC5kLHQuSCx0Lk0sdC5TLHQuTCk7cmV0dXJuIG4uc2V0RnVsbFllYXIodC55KSxufXJldHVybiBuZXcgRGF0ZSh0LnksdC5tLHQuZCx0LkgsdC5NLHQuUyx0LkwpfWZ1bmN0aW9uIEdhKHQpe2lmKDA8PXQueSYmdC55PDEwMCl7dmFyIG49bmV3IERhdGUoRGF0ZS5VVEMoLTEsdC5tLHQuZCx0LkgsdC5NLHQuUyx0LkwpKTtyZXR1cm4gbi5zZXRVVENGdWxsWWVhcih0LnkpLG59cmV0dXJuIG5ldyBEYXRlKERhdGUuVVRDKHQueSx0Lm0sdC5kLHQuSCx0Lk0sdC5TLHQuTCkpfWZ1bmN0aW9uIFZhKHQpe3JldHVybnt5OnQsbTowLGQ6MSxIOjAsTTowLFM6MCxMOjB9fWZ1bmN0aW9uICRhKHQpe2Z1bmN0aW9uIG4odCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHIsaSxvLGE9W10sdT0tMSxmPTAsYz10Lmxlbmd0aDtmb3IoZSBpbnN0YW5jZW9mIERhdGV8fChlPW5ldyBEYXRlKCtlKSk7Kyt1PGM7KTM3PT09dC5jaGFyQ29kZUF0KHUpJiYoYS5wdXNoKHQuc2xpY2UoZix1KSksbnVsbCE9KGk9RGdbcj10LmNoYXJBdCgrK3UpXSk/cj10LmNoYXJBdCgrK3UpOmk9ImUiPT09cj8iICI6IjAiLChvPW5bcl0pJiYocj1vKGUsaSkpLGEucHVzaChyKSxmPXUrMSk7cmV0dXJuIGEucHVzaCh0LnNsaWNlKGYsdSkpLGEuam9pbigiIil9fWZ1bmN0aW9uIGUodCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIGksbyxhPVZhKDE5MDApO2lmKHIoYSx0LGUrPSIiLDApIT1lLmxlbmd0aClyZXR1cm4gbnVsbDtpZigiUSJpbiBhKXJldHVybiBuZXcgRGF0ZShhLlEpO2lmKCJwImluIGEmJihhLkg9YS5IJTEyKzEyKmEucCksIlYiaW4gYSl7aWYoYS5WPDF8fGEuVj41MylyZXR1cm4gbnVsbDsidyJpbiBhfHwoYS53PTEpLCJaImluIGE/KGk9KG89KGk9R2EoVmEoYS55KSkpLmdldFVUQ0RheSgpKT40fHwwPT09bz95Zy5jZWlsKGkpOnlnKGkpLGk9cGcub2Zmc2V0KGksNyooYS5WLTEpKSxhLnk9aS5nZXRVVENGdWxsWWVhcigpLGEubT1pLmdldFVUQ01vbnRoKCksYS5kPWkuZ2V0VVRDRGF0ZSgpKyhhLncrNiklNyk6KGk9KG89KGk9bihWYShhLnkpKSkuZ2V0RGF5KCkpPjR8fDA9PT1vP1Z2LmNlaWwoaSk6VnYoaSksaT1Idi5vZmZzZXQoaSw3KihhLlYtMSkpLGEueT1pLmdldEZ1bGxZZWFyKCksYS5tPWkuZ2V0TW9udGgoKSxhLmQ9aS5nZXREYXRlKCkrKGEudys2KSU3KX1lbHNlKCJXImluIGF8fCJVImluIGEpJiYoInciaW4gYXx8KGEudz0idSJpbiBhP2EudSU3OiJXImluIGE/MTowKSxvPSJaImluIGE/R2EoVmEoYS55KSkuZ2V0VVRDRGF5KCk6bihWYShhLnkpKS5nZXREYXkoKSxhLm09MCxhLmQ9IlciaW4gYT8oYS53KzYpJTcrNyphLlctKG8rNSklNzphLncrNyphLlUtKG8rNiklNyk7cmV0dXJuIloiaW4gYT8oYS5IKz1hLlovMTAwfDAsYS5NKz1hLlolMTAwLEdhKGEpKTpuKGEpfX1mdW5jdGlvbiByKHQsbixlLHIpe2Zvcih2YXIgaSxvLGE9MCx1PW4ubGVuZ3RoLGY9ZS5sZW5ndGg7YTx1Oyl7aWYocj49ZilyZXR1cm4tMTtpZigzNz09PShpPW4uY2hhckNvZGVBdChhKyspKSl7aWYoaT1uLmNoYXJBdChhKyspLCEobz1BW2kgaW4gRGc/bi5jaGFyQXQoYSsrKTppXSl8fChyPW8odCxlLHIpKTwwKXJldHVybi0xfWVsc2UgaWYoaSE9ZS5jaGFyQ29kZUF0KHIrKykpcmV0dXJuLTF9cmV0dXJuIHJ9dmFyIGk9dC5kYXRlVGltZSxvPXQuZGF0ZSxhPXQudGltZSx1PXQucGVyaW9kcyxmPXQuZGF5cyxjPXQuc2hvcnREYXlzLHM9dC5tb250aHMsbD10LnNob3J0TW9udGhzLGg9UWEodSksZD1KYSh1KSxwPVFhKGYpLHY9SmEoZiksZz1RYShjKSx5PUphKGMpLF89UWEocyksYj1KYShzKSxtPVFhKGwpLHg9SmEobCksdz17YTpmdW5jdGlvbih0KXtyZXR1cm4gY1t0LmdldERheSgpXX0sQTpmdW5jdGlvbih0KXtyZXR1cm4gZlt0LmdldERheSgpXX0sYjpmdW5jdGlvbih0KXtyZXR1cm4gbFt0LmdldE1vbnRoKCldfSxCOmZ1bmN0aW9uKHQpe3JldHVybiBzW3QuZ2V0TW9udGgoKV19LGM6bnVsbCxkOl91LGU6X3UsZjpNdSxIOmJ1LEk6bXUsajp4dSxMOnd1LG06QXUsTTpUdSxwOmZ1bmN0aW9uKHQpe3JldHVybiB1WysodC5nZXRIb3VycygpPj0xMildfSxROkt1LHM6dGYsUzpOdSx1OlN1LFU6RXUsVjprdSx3OkN1LFc6UHUseDpudWxsLFg6bnVsbCx5Onp1LFk6UnUsWjpMdSwiJSI6SnV9LE09e2E6ZnVuY3Rpb24odCl7cmV0dXJuIGNbdC5nZXRVVENEYXkoKV19LEE6ZnVuY3Rpb24odCl7cmV0dXJuIGZbdC5nZXRVVENEYXkoKV19LGI6ZnVuY3Rpb24odCl7cmV0dXJuIGxbdC5nZXRVVENNb250aCgpXX0sQjpmdW5jdGlvbih0KXtyZXR1cm4gc1t0LmdldFVUQ01vbnRoKCldfSxjOm51bGwsZDpEdSxlOkR1LGY6QnUsSDpVdSxJOnF1LGo6T3UsTDpZdSxtOkZ1LE06SXUscDpmdW5jdGlvbih0KXtyZXR1cm4gdVsrKHQuZ2V0VVRDSG91cnMoKT49MTIpXX0sUTpLdSxzOnRmLFM6anUsdTpIdSxVOlh1LFY6R3UsdzpWdSxXOiR1LHg6bnVsbCxYOm51bGwseTpXdSxZOlp1LFo6UXUsIiUiOkp1fSxBPXthOmZ1bmN0aW9uKHQsbixlKXt2YXIgcj1nLmV4ZWMobi5zbGljZShlKSk7cmV0dXJuIHI/KHQudz15W3JbMF0udG9Mb3dlckNhc2UoKV0sZStyWzBdLmxlbmd0aCk6LTF9LEE6ZnVuY3Rpb24odCxuLGUpe3ZhciByPXAuZXhlYyhuLnNsaWNlKGUpKTtyZXR1cm4gcj8odC53PXZbclswXS50b0xvd2VyQ2FzZSgpXSxlK3JbMF0ubGVuZ3RoKTotMX0sYjpmdW5jdGlvbih0LG4sZSl7dmFyIHI9bS5leGVjKG4uc2xpY2UoZSkpO3JldHVybiByPyh0Lm09eFtyWzBdLnRvTG93ZXJDYXNlKCldLGUrclswXS5sZW5ndGgpOi0xfSxCOmZ1bmN0aW9uKHQsbixlKXt2YXIgcj1fLmV4ZWMobi5zbGljZShlKSk7cmV0dXJuIHI/KHQubT1iW3JbMF0udG9Mb3dlckNhc2UoKV0sZStyWzBdLmxlbmd0aCk6LTF9LGM6ZnVuY3Rpb24odCxuLGUpe3JldHVybiByKHQsaSxuLGUpfSxkOmZ1LGU6ZnUsZjpwdSxIOnN1LEk6c3UsajpjdSxMOmR1LG06dXUsTTpsdSxwOmZ1bmN0aW9uKHQsbixlKXt2YXIgcj1oLmV4ZWMobi5zbGljZShlKSk7cmV0dXJuIHI/KHQucD1kW3JbMF0udG9Mb3dlckNhc2UoKV0sZStyWzBdLmxlbmd0aCk6LTF9LFE6Z3Usczp5dSxTOmh1LHU6dHUsVTpudSxWOmV1LHc6S2EsVzpydSx4OmZ1bmN0aW9uKHQsbixlKXtyZXR1cm4gcih0LG8sbixlKX0sWDpmdW5jdGlvbih0LG4sZSl7cmV0dXJuIHIodCxhLG4sZSl9LHk6b3UsWTppdSxaOmF1LCIlIjp2dX07cmV0dXJuIHcueD1uKG8sdyksdy5YPW4oYSx3KSx3LmM9bihpLHcpLE0ueD1uKG8sTSksTS5YPW4oYSxNKSxNLmM9bihpLE0pLHtmb3JtYXQ6ZnVuY3Rpb24odCl7dmFyIGU9bih0Kz0iIix3KTtyZXR1cm4gZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0fSxlfSxwYXJzZTpmdW5jdGlvbih0KXt2YXIgbj1lKHQrPSIiLFhhKTtyZXR1cm4gbi50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0fSxufSx1dGNGb3JtYXQ6ZnVuY3Rpb24odCl7dmFyIGU9bih0Kz0iIixNKTtyZXR1cm4gZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0fSxlfSx1dGNQYXJzZTpmdW5jdGlvbih0KXt2YXIgbj1lKHQsR2EpO3JldHVybiBuLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHR9LG59fX1mdW5jdGlvbiBXYSh0LG4sZSl7dmFyIHI9dDwwPyItIjoiIixpPShyPy10OnQpKyIiLG89aS5sZW5ndGg7cmV0dXJuIHIrKG88ZT9uZXcgQXJyYXkoZS1vKzEpLmpvaW4obikraTppKX1mdW5jdGlvbiBaYSh0KXtyZXR1cm4gdC5yZXBsYWNlKE9nLCJcXCQmIil9ZnVuY3Rpb24gUWEodCl7cmV0dXJuIG5ldyBSZWdFeHAoIl4oPzoiK3QubWFwKFphKS5qb2luKCJ8IikrIikiLCJpIil9ZnVuY3Rpb24gSmEodCl7Zm9yKHZhciBuPXt9LGU9LTEscj10Lmxlbmd0aDsrK2U8cjspblt0W2VdLnRvTG93ZXJDYXNlKCldPWU7cmV0dXJuIG59ZnVuY3Rpb24gS2EodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrMSkpO3JldHVybiByPyh0Lnc9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gdHUodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrMSkpO3JldHVybiByPyh0LnU9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gbnUodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0LlU9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gZXUodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0LlY9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcnUodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0Llc9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gaXUodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrNCkpO3JldHVybiByPyh0Lnk9K3JbMF0sZStyWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gb3UodCxuLGUpe3ZhciByPVVnLmV4ZWMobi5zbGljZShlLGUrMikpO3JldHVybiByPyh0Lnk9K3JbMF0rKCtyWzBdPjY4PzE5MDA6MmUzKSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBhdSh0LG4sZSl7dmFyIHI9L14oWil8KFsrLV1cZFxkKSg/Ojo/KFxkXGQpKT8vLmV4ZWMobi5zbGljZShlLGUrNikpO3JldHVybiByPyh0Llo9clsxXT8wOi0oclsyXSsoclszXXx8IjAwIikpLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHV1KHQsbixlKXt2YXIgcj1VZy5leGVjKG4uc2xpY2UoZSxlKzIpKTtyZXR1cm4gcj8odC5tPXJbMF0tMSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBmdSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuZD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBjdSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSszKSk7cmV0dXJuIHI/KHQubT0wLHQuZD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBzdSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuSD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBsdSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuTT0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBodSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSsyKSk7cmV0dXJuIHI/KHQuUz0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBkdSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSszKSk7cmV0dXJuIHI/KHQuTD0rclswXSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBwdSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUsZSs2KSk7cmV0dXJuIHI/KHQuTD1NYXRoLmZsb29yKHJbMF0vMWUzKSxlK3JbMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiB2dSh0LG4sZSl7dmFyIHI9cWcuZXhlYyhuLnNsaWNlKGUsZSsxKSk7cmV0dXJuIHI/ZStyWzBdLmxlbmd0aDotMX1mdW5jdGlvbiBndSh0LG4sZSl7dmFyIHI9VWcuZXhlYyhuLnNsaWNlKGUpKTtyZXR1cm4gcj8odC5RPStyWzBdLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHl1KHQsbixlKXt2YXIgcj1VZy5leGVjKG4uc2xpY2UoZSkpO3JldHVybiByPyh0LlE9MWUzKityWzBdLGUrclswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIF91KHQsbil7cmV0dXJuIFdhKHQuZ2V0RGF0ZSgpLG4sMil9ZnVuY3Rpb24gYnUodCxuKXtyZXR1cm4gV2EodC5nZXRIb3VycygpLG4sMil9ZnVuY3Rpb24gbXUodCxuKXtyZXR1cm4gV2EodC5nZXRIb3VycygpJTEyfHwxMixuLDIpfWZ1bmN0aW9uIHh1KHQsbil7cmV0dXJuIFdhKDErSHYuY291bnQoZmcodCksdCksbiwzKX1mdW5jdGlvbiB3dSh0LG4pe3JldHVybiBXYSh0LmdldE1pbGxpc2Vjb25kcygpLG4sMyl9ZnVuY3Rpb24gTXUodCxuKXtyZXR1cm4gd3UodCxuKSsiMDAwIn1mdW5jdGlvbiBBdSh0LG4pe3JldHVybiBXYSh0LmdldE1vbnRoKCkrMSxuLDIpfWZ1bmN0aW9uIFR1KHQsbil7cmV0dXJuIFdhKHQuZ2V0TWludXRlcygpLG4sMil9ZnVuY3Rpb24gTnUodCxuKXtyZXR1cm4gV2EodC5nZXRTZWNvbmRzKCksbiwyKX1mdW5jdGlvbiBTdSh0KXt2YXIgbj10LmdldERheSgpO3JldHVybiAwPT09bj83Om59ZnVuY3Rpb24gRXUodCxuKXtyZXR1cm4gV2EoR3YuY291bnQoZmcodCksdCksbiwyKX1mdW5jdGlvbiBrdSh0LG4pe3ZhciBlPXQuZ2V0RGF5KCk7cmV0dXJuIHQ9ZT49NHx8MD09PWU/WnYodCk6WnYuY2VpbCh0KSxXYShadi5jb3VudChmZyh0KSx0KSsoND09PWZnKHQpLmdldERheSgpKSxuLDIpfWZ1bmN0aW9uIEN1KHQpe3JldHVybiB0LmdldERheSgpfWZ1bmN0aW9uIFB1KHQsbil7cmV0dXJuIFdhKFZ2LmNvdW50KGZnKHQpLHQpLG4sMil9ZnVuY3Rpb24genUodCxuKXtyZXR1cm4gV2EodC5nZXRGdWxsWWVhcigpJTEwMCxuLDIpfWZ1bmN0aW9uIFJ1KHQsbil7cmV0dXJuIFdhKHQuZ2V0RnVsbFllYXIoKSUxZTQsbiw0KX1mdW5jdGlvbiBMdSh0KXt2YXIgbj10LmdldFRpbWV6b25lT2Zmc2V0KCk7cmV0dXJuKG4+MD8iLSI6KG4qPS0xLCIrIikpK1dhKG4vNjB8MCwiMCIsMikrV2EobiU2MCwiMCIsMil9ZnVuY3Rpb24gRHUodCxuKXtyZXR1cm4gV2EodC5nZXRVVENEYXRlKCksbiwyKX1mdW5jdGlvbiBVdSh0LG4pe3JldHVybiBXYSh0LmdldFVUQ0hvdXJzKCksbiwyKX1mdW5jdGlvbiBxdSh0LG4pe3JldHVybiBXYSh0LmdldFVUQ0hvdXJzKCklMTJ8fDEyLG4sMil9ZnVuY3Rpb24gT3UodCxuKXtyZXR1cm4gV2EoMStwZy5jb3VudCh6Zyh0KSx0KSxuLDMpfWZ1bmN0aW9uIFl1KHQsbil7cmV0dXJuIFdhKHQuZ2V0VVRDTWlsbGlzZWNvbmRzKCksbiwzKX1mdW5jdGlvbiBCdSh0LG4pe3JldHVybiBZdSh0LG4pKyIwMDAifWZ1bmN0aW9uIEZ1KHQsbil7cmV0dXJuIFdhKHQuZ2V0VVRDTW9udGgoKSsxLG4sMil9ZnVuY3Rpb24gSXUodCxuKXtyZXR1cm4gV2EodC5nZXRVVENNaW51dGVzKCksbiwyKX1mdW5jdGlvbiBqdSh0LG4pe3JldHVybiBXYSh0LmdldFVUQ1NlY29uZHMoKSxuLDIpfWZ1bmN0aW9uIEh1KHQpe3ZhciBuPXQuZ2V0VVRDRGF5KCk7cmV0dXJuIDA9PT1uPzc6bn1mdW5jdGlvbiBYdSh0LG4pe3JldHVybiBXYShnZy5jb3VudCh6Zyh0KSx0KSxuLDIpfWZ1bmN0aW9uIEd1KHQsbil7dmFyIGU9dC5nZXRVVENEYXkoKTtyZXR1cm4gdD1lPj00fHwwPT09ZT9tZyh0KTptZy5jZWlsKHQpLFdhKG1nLmNvdW50KHpnKHQpLHQpKyg0PT09emcodCkuZ2V0VVRDRGF5KCkpLG4sMil9ZnVuY3Rpb24gVnUodCl7cmV0dXJuIHQuZ2V0VVRDRGF5KCl9ZnVuY3Rpb24gJHUodCxuKXtyZXR1cm4gV2EoeWcuY291bnQoemcodCksdCksbiwyKX1mdW5jdGlvbiBXdSh0LG4pe3JldHVybiBXYSh0LmdldFVUQ0Z1bGxZZWFyKCklMTAwLG4sMil9ZnVuY3Rpb24gWnUodCxuKXtyZXR1cm4gV2EodC5nZXRVVENGdWxsWWVhcigpJTFlNCxuLDQpfWZ1bmN0aW9uIFF1KCl7cmV0dXJuIiswMDAwIn1mdW5jdGlvbiBKdSgpe3JldHVybiIlIn1mdW5jdGlvbiBLdSh0KXtyZXR1cm4rdH1mdW5jdGlvbiB0Zih0KXtyZXR1cm4gTWF0aC5mbG9vcigrdC8xZTMpfWZ1bmN0aW9uIG5mKG4pe3JldHVybiBSZz0kYShuKSx0LnRpbWVGb3JtYXQ9UmcuZm9ybWF0LHQudGltZVBhcnNlPVJnLnBhcnNlLHQudXRjRm9ybWF0PVJnLnV0Y0Zvcm1hdCx0LnV0Y1BhcnNlPVJnLnV0Y1BhcnNlLFJnfWZ1bmN0aW9uIGVmKHQpe3JldHVybiBuZXcgRGF0ZSh0KX1mdW5jdGlvbiByZih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIERhdGU/K3Q6K25ldyBEYXRlKCt0KX1mdW5jdGlvbiBvZih0LG4scixpLG8sYSx1LGYsYyl7ZnVuY3Rpb24gcyhlKXtyZXR1cm4odShlKTxlP2c6YShlKTxlP3k6byhlKTxlP186aShlKTxlP2I6bihlKTxlP3IoZSk8ZT9tOng6dChlKTxlP3c6TSkoZSl9ZnVuY3Rpb24gbChuLHIsaSxvKXtpZihudWxsPT1uJiYobj0xMCksIm51bWJlciI9PXR5cGVvZiBuKXt2YXIgYT1NYXRoLmFicyhpLXIpL24sdT1lKGZ1bmN0aW9uKHQpe3JldHVybiB0WzJdfSkucmlnaHQoQSxhKTt1PT09QS5sZW5ndGg/KG89ZChyLyRnLGkvJGcsbiksbj10KTp1PyhvPSh1PUFbYS9BW3UtMV1bMl08QVt1XVsyXS9hP3UtMTp1XSlbMV0sbj11WzBdKToobz1NYXRoLm1heChkKHIsaSxuKSwxKSxuPWYpfXJldHVybiBudWxsPT1vP246bi5ldmVyeShvKX12YXIgaD1UYSh4YSxzbikscD1oLmludmVydCx2PWguZG9tYWluLGc9YygiLiVMIikseT1jKCI6JVMiKSxfPWMoIiVJOiVNIiksYj1jKCIlSSAlcCIpLG09YygiJWEgJWQiKSx4PWMoIiViICVkIiksdz1jKCIlQiIpLE09YygiJVkiKSxBPVtbdSwxLElnXSxbdSw1LDUqSWddLFt1LDE1LDE1KklnXSxbdSwzMCwzMCpJZ10sW2EsMSxqZ10sW2EsNSw1KmpnXSxbYSwxNSwxNSpqZ10sW2EsMzAsMzAqamddLFtvLDEsSGddLFtvLDMsMypIZ10sW28sNiw2KkhnXSxbbywxMiwxMipIZ10sW2ksMSxYZ10sW2ksMiwyKlhnXSxbciwxLEdnXSxbbiwxLFZnXSxbbiwzLDMqVmddLFt0LDEsJGddXTtyZXR1cm4gaC5pbnZlcnQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBEYXRlKHAodCkpfSxoLmRvbWFpbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD92KEV2LmNhbGwodCxyZikpOnYoKS5tYXAoZWYpfSxoLnRpY2tzPWZ1bmN0aW9uKHQsbil7dmFyIGUscj12KCksaT1yWzBdLG89cltyLmxlbmd0aC0xXSxhPW88aTtyZXR1cm4gYSYmKGU9aSxpPW8sbz1lKSxlPWwodCxpLG8sbiksZT1lP2UucmFuZ2UoaSxvKzEpOltdLGE/ZS5yZXZlcnNlKCk6ZX0saC50aWNrRm9ybWF0PWZ1bmN0aW9uKHQsbil7cmV0dXJuIG51bGw9PW4/czpjKG4pfSxoLm5pY2U9ZnVuY3Rpb24odCxuKXt2YXIgZT12KCk7cmV0dXJuKHQ9bCh0LGVbMF0sZVtlLmxlbmd0aC0xXSxuKSk/dihrYShlLHQpKTpofSxoLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gQWEoaCxvZih0LG4scixpLG8sYSx1LGYsYykpfSxofWZ1bmN0aW9uIGFmKHQpe2Z1bmN0aW9uIG4obil7dmFyIG89KG4tZSkvKHItZSk7cmV0dXJuIHQoaT9NYXRoLm1heCgwLE1hdGgubWluKDEsbykpOm8pfXZhciBlPTAscj0xLGk9ITE7cmV0dXJuIG4uZG9tYWluPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSt0WzBdLHI9K3RbMV0sbik6W2Uscl19LG4uY2xhbXA9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9ISF0LG4pOml9LG4uaW50ZXJwb2xhdG9yPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PWUsbik6dH0sbi5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGFmKHQpLmRvbWFpbihbZSxyXSkuY2xhbXAoaSl9LE5hKG4pfWZ1bmN0aW9uIHVmKHQpe2Zvcih2YXIgbj10Lmxlbmd0aC82fDAsZT1uZXcgQXJyYXkobikscj0wO3I8bjspZVtyXT0iIyIrdC5zbGljZSg2KnIsNiorK3IpO3JldHVybiBlfWZ1bmN0aW9uIGZmKHQpe3JldHVybiBybCh0W3QubGVuZ3RoLTFdKX1mdW5jdGlvbiBjZih0KXt2YXIgbj10Lmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHRbTWF0aC5tYXgoMCxNYXRoLm1pbihuLTEsTWF0aC5mbG9vcihlKm4pKSldfX1mdW5jdGlvbiBzZih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gbGYodCl7cmV0dXJuIHQ+PTE/QV86dDw9LTE/LUFfOk1hdGguYXNpbih0KX1mdW5jdGlvbiBoZih0KXtyZXR1cm4gdC5pbm5lclJhZGl1c31mdW5jdGlvbiBkZih0KXtyZXR1cm4gdC5vdXRlclJhZGl1c31mdW5jdGlvbiBwZih0KXtyZXR1cm4gdC5zdGFydEFuZ2xlfWZ1bmN0aW9uIHZmKHQpe3JldHVybiB0LmVuZEFuZ2xlfWZ1bmN0aW9uIGdmKHQpe3JldHVybiB0JiZ0LnBhZEFuZ2xlfWZ1bmN0aW9uIHlmKHQsbixlLHIsaSxvLGEpe3ZhciB1PXQtZSxmPW4tcixjPShhP286LW8pL3hfKHUqdStmKmYpLHM9YypmLGw9LWMqdSxoPXQrcyxkPW4rbCxwPWUrcyx2PXIrbCxnPShoK3ApLzIseT0oZCt2KS8yLF89cC1oLGI9di1kLG09XypfK2IqYix4PWktbyx3PWgqdi1wKmQsTT0oYjwwPy0xOjEpKnhfKF9fKDAseCp4Km0tdyp3KSksQT0odypiLV8qTSkvbSxUPSgtdypfLWIqTSkvbSxOPSh3KmIrXypNKS9tLFM9KC13Kl8rYipNKS9tLEU9QS1nLGs9VC15LEM9Ti1nLFA9Uy15O3JldHVybiBFKkUrayprPkMqQytQKlAmJihBPU4sVD1TKSx7Y3g6QSxjeTpULHgwMTotcyx5MDE6LWwseDExOkEqKGkveC0xKSx5MTE6VCooaS94LTEpfX1mdW5jdGlvbiBfZih0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gYmYodCl7cmV0dXJuIG5ldyBfZih0KX1mdW5jdGlvbiBtZih0KXtyZXR1cm4gdFswXX1mdW5jdGlvbiB4Zih0KXtyZXR1cm4gdFsxXX1mdW5jdGlvbiB3Zigpe2Z1bmN0aW9uIHQodCl7dmFyIHUsZixjLHM9dC5sZW5ndGgsbD0hMTtmb3IobnVsbD09aSYmKGE9byhjPW9lKCkpKSx1PTA7dTw9czsrK3UpISh1PHMmJnIoZj10W3VdLHUsdCkpPT09bCYmKChsPSFsKT9hLmxpbmVTdGFydCgpOmEubGluZUVuZCgpKSxsJiZhLnBvaW50KCtuKGYsdSx0KSwrZShmLHUsdCkpO2lmKGMpcmV0dXJuIGE9bnVsbCxjKyIifHxudWxsfXZhciBuPW1mLGU9eGYscj1zZighMCksaT1udWxsLG89YmYsYT1udWxsO3JldHVybiB0Lng9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpzZigrZSksdCk6bn0sdC55PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoK24pLHQpOmV9LHQuZGVmaW5lZD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCEhbiksdCk6cn0sdC5jdXJ2ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1uLG51bGwhPWkmJihhPW8oaSkpLHQpOm99LHQuY29udGV4dD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obnVsbD09bj9pPWE9bnVsbDphPW8oaT1uKSx0KTppfSx0fWZ1bmN0aW9uIE1mKCl7ZnVuY3Rpb24gdCh0KXt2YXIgbixzLGwsaCxkLHA9dC5sZW5ndGgsdj0hMSxnPW5ldyBBcnJheShwKSx5PW5ldyBBcnJheShwKTtmb3IobnVsbD09dSYmKGM9ZihkPW9lKCkpKSxuPTA7bjw9cDsrK24pe2lmKCEobjxwJiZhKGg9dFtuXSxuLHQpKT09PXYpaWYodj0hdilzPW4sYy5hcmVhU3RhcnQoKSxjLmxpbmVTdGFydCgpO2Vsc2V7Zm9yKGMubGluZUVuZCgpLGMubGluZVN0YXJ0KCksbD1uLTE7bD49czstLWwpYy5wb2ludChnW2xdLHlbbF0pO2MubGluZUVuZCgpLGMuYXJlYUVuZCgpfXYmJihnW25dPStlKGgsbix0KSx5W25dPStpKGgsbix0KSxjLnBvaW50KHI/K3IoaCxuLHQpOmdbbl0sbz8rbyhoLG4sdCk6eVtuXSkpfWlmKGQpcmV0dXJuIGM9bnVsbCxkKyIifHxudWxsfWZ1bmN0aW9uIG4oKXtyZXR1cm4gd2YoKS5kZWZpbmVkKGEpLmN1cnZlKGYpLmNvbnRleHQodSl9dmFyIGU9bWYscj1udWxsLGk9c2YoMCksbz14ZixhPXNmKCEwKSx1PW51bGwsZj1iZixjPW51bGw7cmV0dXJuIHQueD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSxyPW51bGwsdCk6ZX0sdC54MD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSx0KTplfSx0LngxPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW51bGw9PW4/bnVsbDoiZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSx0KTpyfSx0Lnk9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpzZigrbiksbz1udWxsLHQpOml9LHQueTA9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpzZigrbiksdCk6aX0sdC55MT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1udWxsPT1uP251bGw6ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpzZigrbiksdCk6b30sdC5saW5lWDA9dC5saW5lWTA9ZnVuY3Rpb24oKXtyZXR1cm4gbigpLngoZSkueShpKX0sdC5saW5lWTE9ZnVuY3Rpb24oKXtyZXR1cm4gbigpLngoZSkueShvKX0sdC5saW5lWDE9ZnVuY3Rpb24oKXtyZXR1cm4gbigpLngocikueShpKX0sdC5kZWZpbmVkPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoISFuKSx0KTphfSx0LmN1cnZlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhmPW4sbnVsbCE9dSYmKGM9Zih1KSksdCk6Zn0sdC5jb250ZXh0PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT1uP3U9Yz1udWxsOmM9Zih1PW4pLHQpOnV9LHR9ZnVuY3Rpb24gQWYodCxuKXtyZXR1cm4gbjx0Py0xOm4+dD8xOm4+PXQ/MDpOYU59ZnVuY3Rpb24gVGYodCl7cmV0dXJuIHR9ZnVuY3Rpb24gTmYodCl7dGhpcy5fY3VydmU9dH1mdW5jdGlvbiBTZih0KXtmdW5jdGlvbiBuKG4pe3JldHVybiBuZXcgTmYodChuKSl9cmV0dXJuIG4uX2N1cnZlPXQsbn1mdW5jdGlvbiBFZih0KXt2YXIgbj10LmN1cnZlO3JldHVybiB0LmFuZ2xlPXQueCxkZWxldGUgdC54LHQucmFkaXVzPXQueSxkZWxldGUgdC55LHQuY3VydmU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/bihTZih0KSk6bigpLl9jdXJ2ZX0sdH1mdW5jdGlvbiBrZigpe3JldHVybiBFZih3ZigpLmN1cnZlKE5fKSl9ZnVuY3Rpb24gQ2YoKXt2YXIgdD1NZigpLmN1cnZlKE5fKSxuPXQuY3VydmUsZT10LmxpbmVYMCxyPXQubGluZVgxLGk9dC5saW5lWTAsbz10LmxpbmVZMTtyZXR1cm4gdC5hbmdsZT10LngsZGVsZXRlIHQueCx0LnN0YXJ0QW5nbGU9dC54MCxkZWxldGUgdC54MCx0LmVuZEFuZ2xlPXQueDEsZGVsZXRlIHQueDEsdC5yYWRpdXM9dC55LGRlbGV0ZSB0LnksdC5pbm5lclJhZGl1cz10LnkwLGRlbGV0ZSB0LnkwLHQub3V0ZXJSYWRpdXM9dC55MSxkZWxldGUgdC55MSx0LmxpbmVTdGFydEFuZ2xlPWZ1bmN0aW9uKCl7cmV0dXJuIEVmKGUoKSl9LGRlbGV0ZSB0LmxpbmVYMCx0LmxpbmVFbmRBbmdsZT1mdW5jdGlvbigpe3JldHVybiBFZihyKCkpfSxkZWxldGUgdC5saW5lWDEsdC5saW5lSW5uZXJSYWRpdXM9ZnVuY3Rpb24oKXtyZXR1cm4gRWYoaSgpKX0sZGVsZXRlIHQubGluZVkwLHQubGluZU91dGVyUmFkaXVzPWZ1bmN0aW9uKCl7cmV0dXJuIEVmKG8oKSl9LGRlbGV0ZSB0LmxpbmVZMSx0LmN1cnZlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP24oU2YodCkpOm4oKS5fY3VydmV9LHR9ZnVuY3Rpb24gUGYodCxuKXtyZXR1cm5bKG49K24pKk1hdGguY29zKHQtPU1hdGguUEkvMiksbipNYXRoLnNpbih0KV19ZnVuY3Rpb24gemYodCl7cmV0dXJuIHQuc291cmNlfWZ1bmN0aW9uIFJmKHQpe3JldHVybiB0LnRhcmdldH1mdW5jdGlvbiBMZih0KXtmdW5jdGlvbiBuKCl7dmFyIG4sdT1TXy5jYWxsKGFyZ3VtZW50cyksZj1lLmFwcGx5KHRoaXMsdSksYz1yLmFwcGx5KHRoaXMsdSk7aWYoYXx8KGE9bj1vZSgpKSx0KGEsK2kuYXBwbHkodGhpcywodVswXT1mLHUpKSwrby5hcHBseSh0aGlzLHUpLCtpLmFwcGx5KHRoaXMsKHVbMF09Yyx1KSksK28uYXBwbHkodGhpcyx1KSksbilyZXR1cm4gYT1udWxsLG4rIiJ8fG51bGx9dmFyIGU9emYscj1SZixpPW1mLG89eGYsYT1udWxsO3JldHVybiBuLnNvdXJjZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT10LG4pOmV9LG4udGFyZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPXQsbik6cn0sbi54PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6c2YoK3QpLG4pOml9LG4ueT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz0iZnVuY3Rpb24iPT10eXBlb2YgdD90OnNmKCt0KSxuKTpvfSxuLmNvbnRleHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9bnVsbD09dD9udWxsOnQsbik6YX0sbn1mdW5jdGlvbiBEZih0LG4sZSxyLGkpe3QubW92ZVRvKG4sZSksdC5iZXppZXJDdXJ2ZVRvKG49KG4rcikvMixlLG4saSxyLGkpfWZ1bmN0aW9uIFVmKHQsbixlLHIsaSl7dC5tb3ZlVG8obixlKSx0LmJlemllckN1cnZlVG8obixlPShlK2kpLzIscixlLHIsaSl9ZnVuY3Rpb24gcWYodCxuLGUscixpKXt2YXIgbz1QZihuLGUpLGE9UGYobixlPShlK2kpLzIpLHU9UGYocixlKSxmPVBmKHIsaSk7dC5tb3ZlVG8ob1swXSxvWzFdKSx0LmJlemllckN1cnZlVG8oYVswXSxhWzFdLHVbMF0sdVsxXSxmWzBdLGZbMV0pfWZ1bmN0aW9uIE9mKCl7fWZ1bmN0aW9uIFlmKHQsbixlKXt0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oKDIqdC5feDArdC5feDEpLzMsKDIqdC5feTArdC5feTEpLzMsKHQuX3gwKzIqdC5feDEpLzMsKHQuX3kwKzIqdC5feTEpLzMsKHQuX3gwKzQqdC5feDErbikvNiwodC5feTArNCp0Ll95MStlKS82KX1mdW5jdGlvbiBCZih0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gRmYodCl7dGhpcy5fY29udGV4dD10fWZ1bmN0aW9uIElmKHQpe3RoaXMuX2NvbnRleHQ9dH1mdW5jdGlvbiBqZih0LG4pe3RoaXMuX2Jhc2lzPW5ldyBCZih0KSx0aGlzLl9iZXRhPW59ZnVuY3Rpb24gSGYodCxuLGUpe3QuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh0Ll94MSt0Ll9rKih0Ll94Mi10Ll94MCksdC5feTErdC5fayoodC5feTItdC5feTApLHQuX3gyK3QuX2sqKHQuX3gxLW4pLHQuX3kyK3QuX2sqKHQuX3kxLWUpLHQuX3gyLHQuX3kyKX1mdW5jdGlvbiBYZih0LG4pe3RoaXMuX2NvbnRleHQ9dCx0aGlzLl9rPSgxLW4pLzZ9ZnVuY3Rpb24gR2YodCxuKXt0aGlzLl9jb250ZXh0PXQsdGhpcy5faz0oMS1uKS82fWZ1bmN0aW9uIFZmKHQsbil7dGhpcy5fY29udGV4dD10LHRoaXMuX2s9KDEtbikvNn1mdW5jdGlvbiAkZih0LG4sZSl7dmFyIHI9dC5feDEsaT10Ll95MSxvPXQuX3gyLGE9dC5feTI7aWYodC5fbDAxX2E+d18pe3ZhciB1PTIqdC5fbDAxXzJhKzMqdC5fbDAxX2EqdC5fbDEyX2ErdC5fbDEyXzJhLGY9Myp0Ll9sMDFfYSoodC5fbDAxX2ErdC5fbDEyX2EpO3I9KHIqdS10Ll94MCp0Ll9sMTJfMmErdC5feDIqdC5fbDAxXzJhKS9mLGk9KGkqdS10Ll95MCp0Ll9sMTJfMmErdC5feTIqdC5fbDAxXzJhKS9mfWlmKHQuX2wyM19hPndfKXt2YXIgYz0yKnQuX2wyM18yYSszKnQuX2wyM19hKnQuX2wxMl9hK3QuX2wxMl8yYSxzPTMqdC5fbDIzX2EqKHQuX2wyM19hK3QuX2wxMl9hKTtvPShvKmMrdC5feDEqdC5fbDIzXzJhLW4qdC5fbDEyXzJhKS9zLGE9KGEqYyt0Ll95MSp0Ll9sMjNfMmEtZSp0Ll9sMTJfMmEpL3N9dC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHIsaSxvLGEsdC5feDIsdC5feTIpfWZ1bmN0aW9uIFdmKHQsbil7dGhpcy5fY29udGV4dD10LHRoaXMuX2FscGhhPW59ZnVuY3Rpb24gWmYodCxuKXt0aGlzLl9jb250ZXh0PXQsdGhpcy5fYWxwaGE9bn1mdW5jdGlvbiBRZih0LG4pe3RoaXMuX2NvbnRleHQ9dCx0aGlzLl9hbHBoYT1ufWZ1bmN0aW9uIEpmKHQpe3RoaXMuX2NvbnRleHQ9dH1mdW5jdGlvbiBLZih0KXtyZXR1cm4gdDwwPy0xOjF9ZnVuY3Rpb24gdGModCxuLGUpe3ZhciByPXQuX3gxLXQuX3gwLGk9bi10Ll94MSxvPSh0Ll95MS10Ll95MCkvKHJ8fGk8MCYmLTApLGE9KGUtdC5feTEpLyhpfHxyPDAmJi0wKSx1PShvKmkrYSpyKS8ocitpKTtyZXR1cm4oS2YobykrS2YoYSkpKk1hdGgubWluKE1hdGguYWJzKG8pLE1hdGguYWJzKGEpLC41Kk1hdGguYWJzKHUpKXx8MH1mdW5jdGlvbiBuYyh0LG4pe3ZhciBlPXQuX3gxLXQuX3gwO3JldHVybiBlPygzKih0Ll95MS10Ll95MCkvZS1uKS8yOm59ZnVuY3Rpb24gZWModCxuLGUpe3ZhciByPXQuX3gwLGk9dC5feTAsbz10Ll94MSxhPXQuX3kxLHU9KG8tcikvMzt0Ll9jb250ZXh0LmJlemllckN1cnZlVG8ocit1LGkrdSpuLG8tdSxhLXUqZSxvLGEpfWZ1bmN0aW9uIHJjKHQpe3RoaXMuX2NvbnRleHQ9dH1mdW5jdGlvbiBpYyh0KXt0aGlzLl9jb250ZXh0PW5ldyBvYyh0KX1mdW5jdGlvbiBvYyh0KXt0aGlzLl9jb250ZXh0PXR9ZnVuY3Rpb24gYWModCl7dGhpcy5fY29udGV4dD10fWZ1bmN0aW9uIHVjKHQpe3ZhciBuLGUscj10Lmxlbmd0aC0xLGk9bmV3IEFycmF5KHIpLG89bmV3IEFycmF5KHIpLGE9bmV3IEFycmF5KHIpO2ZvcihpWzBdPTAsb1swXT0yLGFbMF09dFswXSsyKnRbMV0sbj0xO248ci0xOysrbilpW25dPTEsb1tuXT00LGFbbl09NCp0W25dKzIqdFtuKzFdO2ZvcihpW3ItMV09MixvW3ItMV09NyxhW3ItMV09OCp0W3ItMV0rdFtyXSxuPTE7bjxyOysrbillPWlbbl0vb1tuLTFdLG9bbl0tPWUsYVtuXS09ZSphW24tMV07Zm9yKGlbci0xXT1hW3ItMV0vb1tyLTFdLG49ci0yO24+PTA7LS1uKWlbbl09KGFbbl0taVtuKzFdKS9vW25dO2ZvcihvW3ItMV09KHRbcl0raVtyLTFdKS8yLG49MDtuPHItMTsrK24pb1tuXT0yKnRbbisxXS1pW24rMV07cmV0dXJuW2ksb119ZnVuY3Rpb24gZmModCxuKXt0aGlzLl9jb250ZXh0PXQsdGhpcy5fdD1ufWZ1bmN0aW9uIGNjKHQsbil7aWYoKGk9dC5sZW5ndGgpPjEpZm9yKHZhciBlLHIsaSxvPTEsYT10W25bMF1dLHU9YS5sZW5ndGg7bzxpOysrbylmb3Iocj1hLGE9dFtuW29dXSxlPTA7ZTx1OysrZSlhW2VdWzFdKz1hW2VdWzBdPWlzTmFOKHJbZV1bMV0pP3JbZV1bMF06cltlXVsxXX1mdW5jdGlvbiBzYyh0KXtmb3IodmFyIG49dC5sZW5ndGgsZT1uZXcgQXJyYXkobik7LS1uPj0wOyllW25dPW47cmV0dXJuIGV9ZnVuY3Rpb24gbGModCxuKXtyZXR1cm4gdFtuXX1mdW5jdGlvbiBoYyh0KXt2YXIgbj10Lm1hcChkYyk7cmV0dXJuIHNjKHQpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gblt0XS1uW2VdfSl9ZnVuY3Rpb24gZGModCl7Zm9yKHZhciBuLGU9MCxyPS0xLGk9dC5sZW5ndGg7KytyPGk7KShuPSt0W3JdWzFdKSYmKGUrPW4pO3JldHVybiBlfWZ1bmN0aW9uIHBjKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX1mdW5jdGlvbiB2Yyh0KXtyZXR1cm4gdFswXX1mdW5jdGlvbiBnYyh0KXtyZXR1cm4gdFsxXX1mdW5jdGlvbiB5Yygpe3RoaXMuXz1udWxsfWZ1bmN0aW9uIF9jKHQpe3QuVT10LkM9dC5MPXQuUj10LlA9dC5OPW51bGx9ZnVuY3Rpb24gYmModCxuKXt2YXIgZT1uLHI9bi5SLGk9ZS5VO2k/aS5MPT09ZT9pLkw9cjppLlI9cjp0Ll89cixyLlU9aSxlLlU9cixlLlI9ci5MLGUuUiYmKGUuUi5VPWUpLHIuTD1lfWZ1bmN0aW9uIG1jKHQsbil7dmFyIGU9bixyPW4uTCxpPWUuVTtpP2kuTD09PWU/aS5MPXI6aS5SPXI6dC5fPXIsci5VPWksZS5VPXIsZS5MPXIuUixlLkwmJihlLkwuVT1lKSxyLlI9ZX1mdW5jdGlvbiB4Yyh0KXtmb3IoO3QuTDspdD10Lkw7cmV0dXJuIHR9ZnVuY3Rpb24gd2ModCxuLGUscil7dmFyIGk9W251bGwsbnVsbF0sbz1lYi5wdXNoKGkpLTE7cmV0dXJuIGkubGVmdD10LGkucmlnaHQ9bixlJiZBYyhpLHQsbixlKSxyJiZBYyhpLG4sdCxyKSx0Ylt0LmluZGV4XS5oYWxmZWRnZXMucHVzaChvKSx0YltuLmluZGV4XS5oYWxmZWRnZXMucHVzaChvKSxpfWZ1bmN0aW9uIE1jKHQsbixlKXt2YXIgcj1bbixlXTtyZXR1cm4gci5sZWZ0PXQscn1mdW5jdGlvbiBBYyh0LG4sZSxyKXt0WzBdfHx0WzFdP3QubGVmdD09PWU/dFsxXT1yOnRbMF09cjoodFswXT1yLHQubGVmdD1uLHQucmlnaHQ9ZSl9ZnVuY3Rpb24gVGModCxuLGUscixpKXt2YXIgbyxhPXRbMF0sdT10WzFdLGY9YVswXSxjPWFbMV0scz0wLGw9MSxoPXVbMF0tZixkPXVbMV0tYztpZihvPW4tZixofHwhKG8+MCkpe2lmKG8vPWgsaDwwKXtpZihvPHMpcmV0dXJuO288bCYmKGw9byl9ZWxzZSBpZihoPjApe2lmKG8+bClyZXR1cm47bz5zJiYocz1vKX1pZihvPXItZixofHwhKG88MCkpe2lmKG8vPWgsaDwwKXtpZihvPmwpcmV0dXJuO28+cyYmKHM9byl9ZWxzZSBpZihoPjApe2lmKG88cylyZXR1cm47bzxsJiYobD1vKX1pZihvPWUtYyxkfHwhKG8+MCkpe2lmKG8vPWQsZDwwKXtpZihvPHMpcmV0dXJuO288bCYmKGw9byl9ZWxzZSBpZihkPjApe2lmKG8+bClyZXR1cm47bz5zJiYocz1vKX1pZihvPWktYyxkfHwhKG88MCkpe2lmKG8vPWQsZDwwKXtpZihvPmwpcmV0dXJuO28+cyYmKHM9byl9ZWxzZSBpZihkPjApe2lmKG88cylyZXR1cm47bzxsJiYobD1vKX1yZXR1cm4hKHM+MHx8bDwxKXx8KHM+MCYmKHRbMF09W2YrcypoLGMrcypkXSksbDwxJiYodFsxXT1bZitsKmgsYytsKmRdKSwhMCl9fX19fWZ1bmN0aW9uIE5jKHQsbixlLHIsaSl7dmFyIG89dFsxXTtpZihvKXJldHVybiEwO3ZhciBhLHUsZj10WzBdLGM9dC5sZWZ0LHM9dC5yaWdodCxsPWNbMF0saD1jWzFdLGQ9c1swXSxwPXNbMV0sdj0obCtkKS8yLGc9KGgrcCkvMjtpZihwPT09aCl7aWYodjxufHx2Pj1yKXJldHVybjtpZihsPmQpe2lmKGYpe2lmKGZbMV0+PWkpcmV0dXJufWVsc2UgZj1bdixlXTtvPVt2LGldfWVsc2V7aWYoZil7aWYoZlsxXTxlKXJldHVybn1lbHNlIGY9W3YsaV07bz1bdixlXX19ZWxzZSBpZihhPShsLWQpLyhwLWgpLHU9Zy1hKnYsYTwtMXx8YT4xKWlmKGw+ZCl7aWYoZil7aWYoZlsxXT49aSlyZXR1cm59ZWxzZSBmPVsoZS11KS9hLGVdO289WyhpLXUpL2EsaV19ZWxzZXtpZihmKXtpZihmWzFdPGUpcmV0dXJufWVsc2UgZj1bKGktdSkvYSxpXTtvPVsoZS11KS9hLGVdfWVsc2UgaWYoaDxwKXtpZihmKXtpZihmWzBdPj1yKXJldHVybn1lbHNlIGY9W24sYSpuK3VdO289W3IsYSpyK3VdfWVsc2V7aWYoZil7aWYoZlswXTxuKXJldHVybn1lbHNlIGY9W3IsYSpyK3VdO289W24sYSpuK3VdfXJldHVybiB0WzBdPWYsdFsxXT1vLCEwfWZ1bmN0aW9uIFNjKHQsbil7dmFyIGU9dC5zaXRlLHI9bi5sZWZ0LGk9bi5yaWdodDtyZXR1cm4gZT09PWkmJihpPXIscj1lKSxpP01hdGguYXRhbjIoaVsxXS1yWzFdLGlbMF0tclswXSk6KGU9PT1yPyhyPW5bMV0saT1uWzBdKToocj1uWzBdLGk9blsxXSksTWF0aC5hdGFuMihyWzBdLWlbMF0saVsxXS1yWzFdKSl9ZnVuY3Rpb24gRWModCxuKXtyZXR1cm4gblsrKG4ubGVmdCE9PXQuc2l0ZSldfWZ1bmN0aW9uIGtjKHQsbil7cmV0dXJuIG5bKyhuLmxlZnQ9PT10LnNpdGUpXX1mdW5jdGlvbiBDYyh0KXt2YXIgbj10LlAsZT10Lk47aWYobiYmZSl7dmFyIHI9bi5zaXRlLGk9dC5zaXRlLG89ZS5zaXRlO2lmKHIhPT1vKXt2YXIgYT1pWzBdLHU9aVsxXSxmPXJbMF0tYSxjPXJbMV0tdSxzPW9bMF0tYSxsPW9bMV0tdSxoPTIqKGYqbC1jKnMpO2lmKCEoaD49LWFiKSl7dmFyIGQ9ZipmK2MqYyxwPXMqcytsKmwsdj0obCpkLWMqcCkvaCxnPShmKnAtcypkKS9oLHk9cmIucG9wKCl8fG5ldyBmdW5jdGlvbigpe19jKHRoaXMpLHRoaXMueD10aGlzLnk9dGhpcy5hcmM9dGhpcy5zaXRlPXRoaXMuY3k9bnVsbH07eS5hcmM9dCx5LnNpdGU9aSx5Lng9dithLHkueT0oeS5jeT1nK3UpK01hdGguc3FydCh2KnYrZypnKSx0LmNpcmNsZT15O2Zvcih2YXIgXz1udWxsLGI9bmIuXztiOylpZih5Lnk8Yi55fHx5Lnk9PT1iLnkmJnkueDw9Yi54KXtpZighYi5MKXtfPWIuUDticmVha31iPWIuTH1lbHNle2lmKCFiLlIpe189YjticmVha31iPWIuUn1uYi5pbnNlcnQoXyx5KSxffHwoSl89eSl9fX19ZnVuY3Rpb24gUGModCl7dmFyIG49dC5jaXJjbGU7biYmKG4uUHx8KEpfPW4uTiksbmIucmVtb3ZlKG4pLHJiLnB1c2gobiksX2MobiksdC5jaXJjbGU9bnVsbCl9ZnVuY3Rpb24gemModCl7dmFyIG49aWIucG9wKCl8fG5ldyBmdW5jdGlvbigpe19jKHRoaXMpLHRoaXMuZWRnZT10aGlzLnNpdGU9dGhpcy5jaXJjbGU9bnVsbH07cmV0dXJuIG4uc2l0ZT10LG59ZnVuY3Rpb24gUmModCl7UGModCksS18ucmVtb3ZlKHQpLGliLnB1c2godCksX2ModCl9ZnVuY3Rpb24gTGModCl7dmFyIG49dC5jaXJjbGUsZT1uLngscj1uLmN5LGk9W2Uscl0sbz10LlAsYT10Lk4sdT1bdF07UmModCk7Zm9yKHZhciBmPW87Zi5jaXJjbGUmJk1hdGguYWJzKGUtZi5jaXJjbGUueCk8b2ImJk1hdGguYWJzKHItZi5jaXJjbGUuY3kpPG9iOylvPWYuUCx1LnVuc2hpZnQoZiksUmMoZiksZj1vO3UudW5zaGlmdChmKSxQYyhmKTtmb3IodmFyIGM9YTtjLmNpcmNsZSYmTWF0aC5hYnMoZS1jLmNpcmNsZS54KTxvYiYmTWF0aC5hYnMoci1jLmNpcmNsZS5jeSk8b2I7KWE9Yy5OLHUucHVzaChjKSxSYyhjKSxjPWE7dS5wdXNoKGMpLFBjKGMpO3ZhciBzLGw9dS5sZW5ndGg7Zm9yKHM9MTtzPGw7KytzKWM9dVtzXSxmPXVbcy0xXSxBYyhjLmVkZ2UsZi5zaXRlLGMuc2l0ZSxpKTtmPXVbMF0sKGM9dVtsLTFdKS5lZGdlPXdjKGYuc2l0ZSxjLnNpdGUsbnVsbCxpKSxDYyhmKSxDYyhjKX1mdW5jdGlvbiBEYyh0KXtmb3IodmFyIG4sZSxyLGksbz10WzBdLGE9dFsxXSx1PUtfLl87dTspaWYoKHI9VWModSxhKS1vKT5vYil1PXUuTDtlbHNle2lmKCEoKGk9by1mdW5jdGlvbih0LG4pe3ZhciBlPXQuTjtpZihlKXJldHVybiBVYyhlLG4pO3ZhciByPXQuc2l0ZTtyZXR1cm4gclsxXT09PW4/clswXToxLzB9KHUsYSkpPm9iKSl7cj4tb2I/KG49dS5QLGU9dSk6aT4tb2I/KG49dSxlPXUuTik6bj1lPXU7YnJlYWt9aWYoIXUuUil7bj11O2JyZWFrfXU9dS5SfShmdW5jdGlvbih0KXt0Ylt0LmluZGV4XT17c2l0ZTp0LGhhbGZlZGdlczpbXX19KSh0KTt2YXIgZj16Yyh0KTtpZihLXy5pbnNlcnQobixmKSxufHxlKXtpZihuPT09ZSlyZXR1cm4gUGMobiksZT16YyhuLnNpdGUpLEtfLmluc2VydChmLGUpLGYuZWRnZT1lLmVkZ2U9d2Mobi5zaXRlLGYuc2l0ZSksQ2Mobiksdm9pZCBDYyhlKTtpZihlKXtQYyhuKSxQYyhlKTt2YXIgYz1uLnNpdGUscz1jWzBdLGw9Y1sxXSxoPXRbMF0tcyxkPXRbMV0tbCxwPWUuc2l0ZSx2PXBbMF0tcyxnPXBbMV0tbCx5PTIqKGgqZy1kKnYpLF89aCpoK2QqZCxiPXYqditnKmcsbT1bKGcqXy1kKmIpL3krcywoaCpiLXYqXykveStsXTtBYyhlLmVkZ2UsYyxwLG0pLGYuZWRnZT13YyhjLHQsbnVsbCxtKSxlLmVkZ2U9d2ModCxwLG51bGwsbSksQ2MobiksQ2MoZSl9ZWxzZSBmLmVkZ2U9d2Mobi5zaXRlLGYuc2l0ZSl9fWZ1bmN0aW9uIFVjKHQsbil7dmFyIGU9dC5zaXRlLHI9ZVswXSxpPWVbMV0sbz1pLW47aWYoIW8pcmV0dXJuIHI7dmFyIGE9dC5QO2lmKCFhKXJldHVybi0xLzA7dmFyIHU9KGU9YS5zaXRlKVswXSxmPWVbMV0sYz1mLW47aWYoIWMpcmV0dXJuIHU7dmFyIHM9dS1yLGw9MS9vLTEvYyxoPXMvYztyZXR1cm4gbD8oLWgrTWF0aC5zcXJ0KGgqaC0yKmwqKHMqcy8oLTIqYyktZitjLzIraS1vLzIpKSkvbCtyOihyK3UpLzJ9ZnVuY3Rpb24gcWModCxuLGUpe3JldHVybih0WzBdLWVbMF0pKihuWzFdLXRbMV0pLSh0WzBdLW5bMF0pKihlWzFdLXRbMV0pfWZ1bmN0aW9uIE9jKHQsbil7cmV0dXJuIG5bMV0tdFsxXXx8blswXS10WzBdfWZ1bmN0aW9uIFljKHQsbil7dmFyIGUscixpLG89dC5zb3J0KE9jKS5wb3AoKTtmb3IoZWI9W10sdGI9bmV3IEFycmF5KHQubGVuZ3RoKSxLXz1uZXcgeWMsbmI9bmV3IHljOzspaWYoaT1KXyxvJiYoIWl8fG9bMV08aS55fHxvWzFdPT09aS55JiZvWzBdPGkueCkpb1swXT09PWUmJm9bMV09PT1yfHwoRGMobyksZT1vWzBdLHI9b1sxXSksbz10LnBvcCgpO2Vsc2V7aWYoIWkpYnJlYWs7TGMoaS5hcmMpfWlmKGZ1bmN0aW9uKCl7Zm9yKHZhciB0LG4sZSxyLGk9MCxvPXRiLmxlbmd0aDtpPG87KytpKWlmKCh0PXRiW2ldKSYmKHI9KG49dC5oYWxmZWRnZXMpLmxlbmd0aCkpe3ZhciBhPW5ldyBBcnJheShyKSx1PW5ldyBBcnJheShyKTtmb3IoZT0wO2U8cjsrK2UpYVtlXT1lLHVbZV09U2ModCxlYltuW2VdXSk7Zm9yKGEuc29ydChmdW5jdGlvbih0LG4pe3JldHVybiB1W25dLXVbdF19KSxlPTA7ZTxyOysrZSl1W2VdPW5bYVtlXV07Zm9yKGU9MDtlPHI7KytlKW5bZV09dVtlXX19KCksbil7dmFyIGE9K25bMF1bMF0sdT0rblswXVsxXSxmPStuWzFdWzBdLGM9K25bMV1bMV07KGZ1bmN0aW9uKHQsbixlLHIpe2Zvcih2YXIgaSxvPWViLmxlbmd0aDtvLS07KU5jKGk9ZWJbb10sdCxuLGUscikmJlRjKGksdCxuLGUscikmJihNYXRoLmFicyhpWzBdWzBdLWlbMV1bMF0pPm9ifHxNYXRoLmFicyhpWzBdWzFdLWlbMV1bMV0pPm9iKXx8ZGVsZXRlIGViW29dfSkoYSx1LGYsYyksZnVuY3Rpb24odCxuLGUscil7dmFyIGksbyxhLHUsZixjLHMsbCxoLGQscCx2LGc9dGIubGVuZ3RoLHk9ITA7Zm9yKGk9MDtpPGc7KytpKWlmKG89dGJbaV0pe2ZvcihhPW8uc2l0ZSx1PShmPW8uaGFsZmVkZ2VzKS5sZW5ndGg7dS0tOyllYltmW3VdXXx8Zi5zcGxpY2UodSwxKTtmb3IodT0wLGM9Zi5sZW5ndGg7dTxjOylwPShkPWtjKG8sZWJbZlt1XV0pKVswXSx2PWRbMV0sbD0ocz1FYyhvLGViW2ZbKyt1JWNdXSkpWzBdLGg9c1sxXSwoTWF0aC5hYnMocC1sKT5vYnx8TWF0aC5hYnModi1oKT5vYikmJihmLnNwbGljZSh1LDAsZWIucHVzaChNYyhhLGQsTWF0aC5hYnMocC10KTxvYiYmci12Pm9iP1t0LE1hdGguYWJzKGwtdCk8b2I/aDpyXTpNYXRoLmFicyh2LXIpPG9iJiZlLXA+b2I/W01hdGguYWJzKGgtcik8b2I/bDplLHJdOk1hdGguYWJzKHAtZSk8b2ImJnYtbj5vYj9bZSxNYXRoLmFicyhsLWUpPG9iP2g6bl06TWF0aC5hYnModi1uKTxvYiYmcC10Pm9iP1tNYXRoLmFicyhoLW4pPG9iP2w6dCxuXTpudWxsKSktMSksKytjKTtjJiYoeT0hMSl9aWYoeSl7dmFyIF8sYixtLHg9MS8wO2ZvcihpPTAseT1udWxsO2k8ZzsrK2kpKG89dGJbaV0pJiYobT0oXz0oYT1vLnNpdGUpWzBdLXQpKl8rKGI9YVsxXS1uKSpiKTx4JiYoeD1tLHk9byk7aWYoeSl7dmFyIHc9W3Qsbl0sTT1bdCxyXSxBPVtlLHJdLFQ9W2Usbl07eS5oYWxmZWRnZXMucHVzaChlYi5wdXNoKE1jKGE9eS5zaXRlLHcsTSkpLTEsZWIucHVzaChNYyhhLE0sQSkpLTEsZWIucHVzaChNYyhhLEEsVCkpLTEsZWIucHVzaChNYyhhLFQsdykpLTEpfX1mb3IoaT0wO2k8ZzsrK2kpKG89dGJbaV0pJiYoby5oYWxmZWRnZXMubGVuZ3RofHxkZWxldGUgdGJbaV0pfShhLHUsZixjKX10aGlzLmVkZ2VzPWViLHRoaXMuY2VsbHM9dGIsS189bmI9ZWI9dGI9bnVsbH1mdW5jdGlvbiBCYyh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19ZnVuY3Rpb24gRmModCxuLGUpe3RoaXMuaz10LHRoaXMueD1uLHRoaXMueT1lfWZ1bmN0aW9uIEljKHQpe3JldHVybiB0Ll9fem9vbXx8dWJ9ZnVuY3Rpb24gamMoKXt0LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIEhjKCl7dC5ldmVudC5wcmV2ZW50RGVmYXVsdCgpLHQuZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24gWGMoKXtyZXR1cm4hdC5ldmVudC5idXR0b259ZnVuY3Rpb24gR2MoKXt2YXIgdCxuLGU9dGhpcztyZXR1cm4gZSBpbnN0YW5jZW9mIFNWR0VsZW1lbnQ/KHQ9KGU9ZS5vd25lclNWR0VsZW1lbnR8fGUpLndpZHRoLmJhc2VWYWwudmFsdWUsbj1lLmhlaWdodC5iYXNlVmFsLnZhbHVlKToodD1lLmNsaWVudFdpZHRoLG49ZS5jbGllbnRIZWlnaHQpLFtbMCwwXSxbdCxuXV19ZnVuY3Rpb24gVmMoKXtyZXR1cm4gdGhpcy5fX3pvb218fHVifWZ1bmN0aW9uICRjKCl7cmV0dXJuLXQuZXZlbnQuZGVsdGFZKih0LmV2ZW50LmRlbHRhTW9kZT8xMjA6MSkvNTAwfWZ1bmN0aW9uIFdjKCl7cmV0dXJuIm9udG91Y2hzdGFydCJpbiB0aGlzfWZ1bmN0aW9uIFpjKHQsbixlKXt2YXIgcj10LmludmVydFgoblswXVswXSktZVswXVswXSxpPXQuaW52ZXJ0WChuWzFdWzBdKS1lWzFdWzBdLG89dC5pbnZlcnRZKG5bMF1bMV0pLWVbMF1bMV0sYT10LmludmVydFkoblsxXVsxXSktZVsxXVsxXTtyZXR1cm4gdC50cmFuc2xhdGUoaT5yPyhyK2kpLzI6TWF0aC5taW4oMCxyKXx8TWF0aC5tYXgoMCxpKSxhPm8/KG8rYSkvMjpNYXRoLm1pbigwLG8pfHxNYXRoLm1heCgwLGEpKX12YXIgUWM9ZShuKSxKYz1RYy5yaWdodCxLYz1RYy5sZWZ0LHRzPUFycmF5LnByb3RvdHlwZSxucz10cy5zbGljZSxlcz10cy5tYXAscnM9TWF0aC5zcXJ0KDUwKSxpcz1NYXRoLnNxcnQoMTApLG9zPU1hdGguc3FydCgyKSxhcz1BcnJheS5wcm90b3R5cGUuc2xpY2UsdXM9MSxmcz0yLGNzPTMsc3M9NCxscz0xZS02LGhzPXt2YWx1ZTpmdW5jdGlvbigpe319O1MucHJvdG90eXBlPU4ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpTLG9uOmZ1bmN0aW9uKHQsbil7dmFyIGUscj10aGlzLl8saT1mdW5jdGlvbih0LG4pe3JldHVybiB0LnRyaW0oKS5zcGxpdCgvXnxccysvKS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9IiIscj10LmluZGV4T2YoIi4iKTtpZihyPj0wJiYoZT10LnNsaWNlKHIrMSksdD10LnNsaWNlKDAscikpLHQmJiFuLmhhc093blByb3BlcnR5KHQpKXRocm93IG5ldyBFcnJvcigidW5rbm93biB0eXBlOiAiK3QpO3JldHVybnt0eXBlOnQsbmFtZTplfX0pfSh0KyIiLHIpLG89LTEsYT1pLmxlbmd0aDt7aWYoIShhcmd1bWVudHMubGVuZ3RoPDIpKXtpZihudWxsIT1uJiYiZnVuY3Rpb24iIT10eXBlb2Ygbil0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgY2FsbGJhY2s6ICIrbik7Zm9yKDsrK288YTspaWYoZT0odD1pW29dKS50eXBlKXJbZV09RShyW2VdLHQubmFtZSxuKTtlbHNlIGlmKG51bGw9PW4pZm9yKGUgaW4gcilyW2VdPUUocltlXSx0Lm5hbWUsbnVsbCk7cmV0dXJuIHRoaXN9Zm9yKDsrK288YTspaWYoKGU9KHQ9aVtvXSkudHlwZSkmJihlPWZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlLHI9MCxpPXQubGVuZ3RoO3I8aTsrK3IpaWYoKGU9dFtyXSkubmFtZT09PW4pcmV0dXJuIGUudmFsdWV9KHJbZV0sdC5uYW1lKSkpcmV0dXJuIGV9fSxjb3B5OmZ1bmN0aW9uKCl7dmFyIHQ9e30sbj10aGlzLl87Zm9yKHZhciBlIGluIG4pdFtlXT1uW2VdLnNsaWNlKCk7cmV0dXJuIG5ldyBTKHQpfSxjYWxsOmZ1bmN0aW9uKHQsbil7aWYoKGU9YXJndW1lbnRzLmxlbmd0aC0yKT4wKWZvcih2YXIgZSxyLGk9bmV3IEFycmF5KGUpLG89MDtvPGU7KytvKWlbb109YXJndW1lbnRzW28rMl07aWYoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0KSl0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIit0KTtmb3Iobz0wLGU9KHI9dGhpcy5fW3RdKS5sZW5ndGg7bzxlOysrbylyW29dLnZhbHVlLmFwcGx5KG4saSl9LGFwcGx5OmZ1bmN0aW9uKHQsbixlKXtpZighdGhpcy5fLmhhc093blByb3BlcnR5KHQpKXRocm93IG5ldyBFcnJvcigidW5rbm93biB0eXBlOiAiK3QpO2Zvcih2YXIgcj10aGlzLl9bdF0saT0wLG89ci5sZW5ndGg7aTxvOysraSlyW2ldLnZhbHVlLmFwcGx5KG4sZSl9fTt2YXIgZHM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLHBzPXtzdmc6Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIix4aHRtbDpkcyx4bGluazoiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIseG1sOiJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2UiLHhtbG5zOiJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zLyJ9LHZzPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hdGNoZXModCl9fTtpZigidW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50KXt2YXIgZ3M9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O2lmKCFncy5tYXRjaGVzKXt2YXIgeXM9Z3Mud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxncy5tc01hdGNoZXNTZWxlY3Rvcnx8Z3MubW96TWF0Y2hlc1NlbGVjdG9yfHxncy5vTWF0Y2hlc1NlbGVjdG9yO3ZzPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB5cy5jYWxsKHRoaXMsdCl9fX19dmFyIF9zPXZzO1UucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpVLGFwcGVuZENoaWxkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKHQsdGhpcy5fbmV4dCl9LGluc2VydEJlZm9yZTpmdW5jdGlvbih0LG4pe3JldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKHQsbil9LHF1ZXJ5U2VsZWN0b3I6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yKHQpfSxxdWVyeVNlbGVjdG9yQWxsOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3RvckFsbCh0KX19O3ZhciBicz0iJCI7SC5wcm90b3R5cGU9e2FkZDpmdW5jdGlvbih0KXt0aGlzLl9uYW1lcy5pbmRleE9mKHQpPDAmJih0aGlzLl9uYW1lcy5wdXNoKHQpLHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKCJjbGFzcyIsdGhpcy5fbmFtZXMuam9pbigiICIpKSl9LHJlbW92ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzLl9uYW1lcy5pbmRleE9mKHQpO24+PTAmJih0aGlzLl9uYW1lcy5zcGxpY2UobiwxKSx0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZSgiY2xhc3MiLHRoaXMuX25hbWVzLmpvaW4oIiAiKSkpfSxjb250YWluczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fbmFtZXMuaW5kZXhPZih0KT49MH19O3ZhciBtcz17fTtpZih0LmV2ZW50PW51bGwsInVuZGVmaW5lZCIhPXR5cGVvZiBkb2N1bWVudCl7Im9ubW91c2VlbnRlciJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR8fChtcz17bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3VzZWxlYXZlOiJtb3VzZW91dCJ9KX12YXIgeHM9W251bGxdO3V0LnByb3RvdHlwZT1mdC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnV0LHNlbGVjdDpmdW5jdGlvbih0KXsiZnVuY3Rpb24iIT10eXBlb2YgdCYmKHQ9eih0KSk7Zm9yKHZhciBuPXRoaXMuX2dyb3VwcyxlPW4ubGVuZ3RoLHI9bmV3IEFycmF5KGUpLGk9MDtpPGU7KytpKWZvcih2YXIgbyxhLHU9bltpXSxmPXUubGVuZ3RoLGM9cltpXT1uZXcgQXJyYXkoZikscz0wO3M8ZjsrK3MpKG89dVtzXSkmJihhPXQuY2FsbChvLG8uX19kYXRhX18scyx1KSkmJigiX19kYXRhX18iaW4gbyYmKGEuX19kYXRhX189by5fX2RhdGFfXyksY1tzXT1hKTtyZXR1cm4gbmV3IHV0KHIsdGhpcy5fcGFyZW50cyl9LHNlbGVjdEFsbDpmdW5jdGlvbih0KXsiZnVuY3Rpb24iIT10eXBlb2YgdCYmKHQ9TCh0KSk7Zm9yKHZhciBuPXRoaXMuX2dyb3VwcyxlPW4ubGVuZ3RoLHI9W10saT1bXSxvPTA7bzxlOysrbylmb3IodmFyIGEsdT1uW29dLGY9dS5sZW5ndGgsYz0wO2M8ZjsrK2MpKGE9dVtjXSkmJihyLnB1c2godC5jYWxsKGEsYS5fX2RhdGFfXyxjLHUpKSxpLnB1c2goYSkpO3JldHVybiBuZXcgdXQocixpKX0sZmlsdGVyOmZ1bmN0aW9uKHQpeyJmdW5jdGlvbiIhPXR5cGVvZiB0JiYodD1fcyh0KSk7Zm9yKHZhciBuPXRoaXMuX2dyb3VwcyxlPW4ubGVuZ3RoLHI9bmV3IEFycmF5KGUpLGk9MDtpPGU7KytpKWZvcih2YXIgbyxhPW5baV0sdT1hLmxlbmd0aCxmPXJbaV09W10sYz0wO2M8dTsrK2MpKG89YVtjXSkmJnQuY2FsbChvLG8uX19kYXRhX18sYyxhKSYmZi5wdXNoKG8pO3JldHVybiBuZXcgdXQocix0aGlzLl9wYXJlbnRzKX0sZGF0YTpmdW5jdGlvbih0LG4pe2lmKCF0KXJldHVybiBkPW5ldyBBcnJheSh0aGlzLnNpemUoKSksYz0tMSx0aGlzLmVhY2goZnVuY3Rpb24odCl7ZFsrK2NdPXR9KSxkO3ZhciBlPW4/TzpxLHI9dGhpcy5fcGFyZW50cyxpPXRoaXMuX2dyb3VwczsiZnVuY3Rpb24iIT10eXBlb2YgdCYmKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHR9fSh0KSk7Zm9yKHZhciBvPWkubGVuZ3RoLGE9bmV3IEFycmF5KG8pLHU9bmV3IEFycmF5KG8pLGY9bmV3IEFycmF5KG8pLGM9MDtjPG87KytjKXt2YXIgcz1yW2NdLGw9aVtjXSxoPWwubGVuZ3RoLGQ9dC5jYWxsKHMscyYmcy5fX2RhdGFfXyxjLHIpLHA9ZC5sZW5ndGgsdj11W2NdPW5ldyBBcnJheShwKSxnPWFbY109bmV3IEFycmF5KHApO2UocyxsLHYsZyxmW2NdPW5ldyBBcnJheShoKSxkLG4pO2Zvcih2YXIgeSxfLGI9MCxtPTA7YjxwOysrYilpZih5PXZbYl0pe2ZvcihiPj1tJiYobT1iKzEpOyEoXz1nW21dKSYmKyttPHA7KTt5Ll9uZXh0PV98fG51bGx9fXJldHVybiBhPW5ldyB1dChhLHIpLGEuX2VudGVyPXUsYS5fZXhpdD1mLGF9LGVudGVyOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB1dCh0aGlzLl9lbnRlcnx8dGhpcy5fZ3JvdXBzLm1hcChEKSx0aGlzLl9wYXJlbnRzKX0sZXhpdDpmdW5jdGlvbigpe3JldHVybiBuZXcgdXQodGhpcy5fZXhpdHx8dGhpcy5fZ3JvdXBzLm1hcChEKSx0aGlzLl9wYXJlbnRzKX0sbWVyZ2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPXRoaXMuX2dyb3VwcyxlPXQuX2dyb3VwcyxyPW4ubGVuZ3RoLGk9ZS5sZW5ndGgsbz1NYXRoLm1pbihyLGkpLGE9bmV3IEFycmF5KHIpLHU9MDt1PG87Kyt1KWZvcih2YXIgZixjPW5bdV0scz1lW3VdLGw9Yy5sZW5ndGgsaD1hW3VdPW5ldyBBcnJheShsKSxkPTA7ZDxsOysrZCkoZj1jW2RdfHxzW2RdKSYmKGhbZF09Zik7Zm9yKDt1PHI7Kyt1KWFbdV09blt1XTtyZXR1cm4gbmV3IHV0KGEsdGhpcy5fcGFyZW50cyl9LG9yZGVyOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2dyb3VwcyxuPS0xLGU9dC5sZW5ndGg7KytuPGU7KWZvcih2YXIgcixpPXRbbl0sbz1pLmxlbmd0aC0xLGE9aVtvXTstLW8+PTA7KShyPWlbb10pJiYoYSYmYSE9PXIubmV4dFNpYmxpbmcmJmEucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocixhKSxhPXIpO3JldHVybiB0aGlzfSxzb3J0OmZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4obixlKXtyZXR1cm4gbiYmZT90KG4uX19kYXRhX18sZS5fX2RhdGFfXyk6IW4tIWV9dHx8KHQ9WSk7Zm9yKHZhciBlPXRoaXMuX2dyb3VwcyxyPWUubGVuZ3RoLGk9bmV3IEFycmF5KHIpLG89MDtvPHI7KytvKXtmb3IodmFyIGEsdT1lW29dLGY9dS5sZW5ndGgsYz1pW29dPW5ldyBBcnJheShmKSxzPTA7czxmOysrcykoYT11W3NdKSYmKGNbc109YSk7Yy5zb3J0KG4pfXJldHVybiBuZXcgdXQoaSx0aGlzLl9wYXJlbnRzKS5vcmRlcigpfSxjYWxsOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzWzBdO3JldHVybiBhcmd1bWVudHNbMF09dGhpcyx0LmFwcGx5KG51bGwsYXJndW1lbnRzKSx0aGlzfSxub2RlczpmdW5jdGlvbigpe3ZhciB0PW5ldyBBcnJheSh0aGlzLnNpemUoKSksbj0tMTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dFsrK25dPXRoaXN9KSx0fSxub2RlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2dyb3VwcyxuPTAsZT10Lmxlbmd0aDtuPGU7KytuKWZvcih2YXIgcj10W25dLGk9MCxvPXIubGVuZ3RoO2k8bzsrK2kpe3ZhciBhPXJbaV07aWYoYSlyZXR1cm4gYX1yZXR1cm4gbnVsbH0sc2l6ZTpmdW5jdGlvbigpe3ZhciB0PTA7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeysrdH0pLHR9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMubm9kZSgpfSxlYWNoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10aGlzLl9ncm91cHMsZT0wLHI9bi5sZW5ndGg7ZTxyOysrZSlmb3IodmFyIGksbz1uW2VdLGE9MCx1PW8ubGVuZ3RoO2E8dTsrK2EpKGk9b1thXSkmJnQuY2FsbChpLGkuX19kYXRhX18sYSxvKTtyZXR1cm4gdGhpc30sYXR0cjpmdW5jdGlvbih0LG4pe3ZhciBlPWsodCk7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXt2YXIgcj10aGlzLm5vZGUoKTtyZXR1cm4gZS5sb2NhbD9yLmdldEF0dHJpYnV0ZU5TKGUuc3BhY2UsZS5sb2NhbCk6ci5nZXRBdHRyaWJ1dGUoZSl9cmV0dXJuIHRoaXMuZWFjaCgobnVsbD09bj9lLmxvY2FsP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMucmVtb3ZlQXR0cmlidXRlTlModC5zcGFjZSx0LmxvY2FsKX19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMucmVtb3ZlQXR0cmlidXRlKHQpfX06ImZ1bmN0aW9uIj09dHlwZW9mIG4/ZS5sb2NhbD9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPW4uYXBwbHkodGhpcyxhcmd1bWVudHMpO251bGw9PWU/dGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwpOnRoaXMuc2V0QXR0cmlidXRlTlModC5zcGFjZSx0LmxvY2FsLGUpfX06ZnVuY3Rpb24odCxuKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtudWxsPT1lP3RoaXMucmVtb3ZlQXR0cmlidXRlKHQpOnRoaXMuc2V0QXR0cmlidXRlKHQsZSl9fTplLmxvY2FsP2Z1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5zZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwsbil9fTpmdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc2V0QXR0cmlidXRlKHQsbil9fSkoZSxuKSl9LHN0eWxlOmZ1bmN0aW9uKHQsbixlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xP3RoaXMuZWFjaCgobnVsbD09bj9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KHQpfX06ImZ1bmN0aW9uIj09dHlwZW9mIG4/ZnVuY3Rpb24odCxuLGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciByPW4uYXBwbHkodGhpcyxhcmd1bWVudHMpO251bGw9PXI/dGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSh0KTp0aGlzLnN0eWxlLnNldFByb3BlcnR5KHQscixlKX19OmZ1bmN0aW9uKHQsbixlKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnN0eWxlLnNldFByb3BlcnR5KHQsbixlKX19KSh0LG4sbnVsbD09ZT8iIjplKSk6Rih0aGlzLm5vZGUoKSx0KX0scHJvcGVydHk6ZnVuY3Rpb24odCxuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xP3RoaXMuZWFjaCgobnVsbD09bj9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtkZWxldGUgdGhpc1t0XX19OiJmdW5jdGlvbiI9PXR5cGVvZiBuP2Z1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7bnVsbD09ZT9kZWxldGUgdGhpc1t0XTp0aGlzW3RdPWV9fTpmdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3RoaXNbdF09bn19KSh0LG4pKTp0aGlzLm5vZGUoKVt0XX0sY2xhc3NlZDpmdW5jdGlvbih0LG4pe3ZhciBlPUkodCsiIik7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXtmb3IodmFyIHI9aih0aGlzLm5vZGUoKSksaT0tMSxvPWUubGVuZ3RoOysraTxvOylpZighci5jb250YWlucyhlW2ldKSlyZXR1cm4hMTtyZXR1cm4hMH1yZXR1cm4gdGhpcy5lYWNoKCgiZnVuY3Rpb24iPT10eXBlb2Ygbj9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpeyhuLmFwcGx5KHRoaXMsYXJndW1lbnRzKT9YOkcpKHRoaXMsdCl9fTpuP2Z1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe1godGhpcyx0KX19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe0codGhpcyx0KX19KShlLG4pKX0sdGV4dDpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLmVhY2gobnVsbD09dD9WOigiZnVuY3Rpb24iPT10eXBlb2YgdD9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10LmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnRleHRDb250ZW50PW51bGw9PW4/IiI6bn19OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3RoaXMudGV4dENvbnRlbnQ9dH19KSh0KSk6dGhpcy5ub2RlKCkudGV4dENvbnRlbnR9LGh0bWw6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKG51bGw9PXQ/JDooImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5pbm5lckhUTUw9bnVsbD09bj8iIjpufX06ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5pbm5lckhUTUw9dH19KSh0KSk6dGhpcy5ub2RlKCkuaW5uZXJIVE1MfSxyYWlzZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goVyl9LGxvd2VyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChaKX0sYXBwZW5kOmZ1bmN0aW9uKHQpe3ZhciBuPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6Qyh0KTtyZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcHBlbmRDaGlsZChuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9KX0saW5zZXJ0OmZ1bmN0aW9uKHQsbil7dmFyIGU9ImZ1bmN0aW9uIj09dHlwZW9mIHQ/dDpDKHQpLHI9bnVsbD09bj9ROiJmdW5jdGlvbiI9PXR5cGVvZiBuP246eihuKTtyZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksci5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fG51bGwpfSl9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goSil9LGNsb25lOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNlbGVjdCh0P3R0OkspfSxkYXR1bTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnByb3BlcnR5KCJfX2RhdGFfXyIsdCk6dGhpcy5ub2RlKCkuX19kYXRhX199LG9uOmZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG89ZnVuY3Rpb24odCl7cmV0dXJuIHQudHJpbSgpLnNwbGl0KC9efFxzKy8pLm1hcChmdW5jdGlvbih0KXt2YXIgbj0iIixlPXQuaW5kZXhPZigiLiIpO3JldHVybiBlPj0wJiYobj10LnNsaWNlKGUrMSksdD10LnNsaWNlKDAsZSkpLHt0eXBlOnQsbmFtZTpufX0pfSh0KyIiKSxhPW8ubGVuZ3RoO2lmKCEoYXJndW1lbnRzLmxlbmd0aDwyKSl7Zm9yKHU9bj9pdDpydCxudWxsPT1lJiYoZT0hMSkscj0wO3I8YTsrK3IpdGhpcy5lYWNoKHUob1tyXSxuLGUpKTtyZXR1cm4gdGhpc312YXIgdT10aGlzLm5vZGUoKS5fX29uO2lmKHUpZm9yKHZhciBmLGM9MCxzPXUubGVuZ3RoO2M8czsrK2MpZm9yKHI9MCxmPXVbY107cjxhOysrcilpZigoaT1vW3JdKS50eXBlPT09Zi50eXBlJiZpLm5hbWU9PT1mLm5hbWUpcmV0dXJuIGYudmFsdWV9LGRpc3BhdGNoOmZ1bmN0aW9uKHQsbil7cmV0dXJuIHRoaXMuZWFjaCgoImZ1bmN0aW9uIj09dHlwZW9mIG4/ZnVuY3Rpb24odCxuKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYXQodGhpcyx0LG4uYXBwbHkodGhpcyxhcmd1bWVudHMpKX19OmZ1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGF0KHRoaXMsdCxuKX19KSh0LG4pKX19O3ZhciB3cz0wO2x0LnByb3RvdHlwZT1zdC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmx0LGdldDpmdW5jdGlvbih0KXtmb3IodmFyIG49dGhpcy5fOyEobiBpbiB0KTspaWYoISh0PXQucGFyZW50Tm9kZSkpcmV0dXJuO3JldHVybiB0W25dfSxzZXQ6ZnVuY3Rpb24odCxuKXtyZXR1cm4gdFt0aGlzLl9dPW59LHJlbW92ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fIGluIHQmJmRlbGV0ZSB0W3RoaXMuX119LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX319LHh0LnByb3RvdHlwZS5vbj1mdW5jdGlvbigpe3ZhciB0PXRoaXMuXy5vbi5hcHBseSh0aGlzLl8sYXJndW1lbnRzKTtyZXR1cm4gdD09PXRoaXMuXz90aGlzOnR9O3ZhciBNcz0iXFxzKihbKy1dP1xcZCspXFxzKiIsQXM9IlxccyooWystXT9cXGQqXFwuP1xcZCsoPzpbZUVdWystXT9cXGQrKT8pXFxzKiIsVHM9IlxccyooWystXT9cXGQqXFwuP1xcZCsoPzpbZUVdWystXT9cXGQrKT8pJVxccyoiLE5zPS9eIyhbMC05YS1mXXszfSkkLyxTcz0vXiMoWzAtOWEtZl17Nn0pJC8sRXM9bmV3IFJlZ0V4cCgiXnJnYlxcKCIrW01zLE1zLE1zXSsiXFwpJCIpLGtzPW5ldyBSZWdFeHAoIl5yZ2JcXCgiK1tUcyxUcyxUc10rIlxcKSQiKSxDcz1uZXcgUmVnRXhwKCJecmdiYVxcKCIrW01zLE1zLE1zLEFzXSsiXFwpJCIpLFBzPW5ldyBSZWdFeHAoIl5yZ2JhXFwoIitbVHMsVHMsVHMsQXNdKyJcXCkkIiksenM9bmV3IFJlZ0V4cCgiXmhzbFxcKCIrW0FzLFRzLFRzXSsiXFwpJCIpLFJzPW5ldyBSZWdFeHAoIl5oc2xhXFwoIitbQXMsVHMsVHMsQXNdKyJcXCkkIiksTHM9e2FsaWNlYmx1ZToxNTc5MjM4MyxhbnRpcXVld2hpdGU6MTY0NDQzNzUsYXF1YTo2NTUzNSxhcXVhbWFyaW5lOjgzODg1NjQsYXp1cmU6MTU3OTQxNzUsYmVpZ2U6MTYxMTkyNjAsYmlzcXVlOjE2NzcwMjQ0LGJsYWNrOjAsYmxhbmNoZWRhbG1vbmQ6MTY3NzIwNDUsYmx1ZToyNTUsYmx1ZXZpb2xldDo5MDU1MjAyLGJyb3duOjEwODI0MjM0LGJ1cmx5d29vZDoxNDU5NjIzMSxjYWRldGJsdWU6NjI2NjUyOCxjaGFydHJldXNlOjgzODgzNTIsY2hvY29sYXRlOjEzNzg5NDcwLGNvcmFsOjE2NzQ0MjcyLGNvcm5mbG93ZXJibHVlOjY1OTE5ODEsY29ybnNpbGs6MTY3NzUzODgsY3JpbXNvbjoxNDQyMzEwMCxjeWFuOjY1NTM1LGRhcmtibHVlOjEzOSxkYXJrY3lhbjozNTcyMyxkYXJrZ29sZGVucm9kOjEyMDkyOTM5LGRhcmtncmF5OjExMTE5MDE3LGRhcmtncmVlbjoyNTYwMCxkYXJrZ3JleToxMTExOTAxNyxkYXJra2hha2k6MTI0MzMyNTksZGFya21hZ2VudGE6OTEwOTY0MyxkYXJrb2xpdmVncmVlbjo1NTk3OTk5LGRhcmtvcmFuZ2U6MTY3NDc1MjAsZGFya29yY2hpZDoxMDA0MDAxMixkYXJrcmVkOjkxMDk1MDQsZGFya3NhbG1vbjoxNTMwODQxMCxkYXJrc2VhZ3JlZW46OTQxOTkxOSxkYXJrc2xhdGVibHVlOjQ3MzQzNDcsZGFya3NsYXRlZ3JheTozMTAwNDk1LGRhcmtzbGF0ZWdyZXk6MzEwMDQ5NSxkYXJrdHVycXVvaXNlOjUyOTQ1LGRhcmt2aW9sZXQ6OTY5OTUzOSxkZWVwcGluazoxNjcxNjk0NyxkZWVwc2t5Ymx1ZTo0OTE1MSxkaW1ncmF5OjY5MDgyNjUsZGltZ3JleTo2OTA4MjY1LGRvZGdlcmJsdWU6MjAwMzE5OSxmaXJlYnJpY2s6MTE2NzQxNDYsZmxvcmFsd2hpdGU6MTY3NzU5MjAsZm9yZXN0Z3JlZW46MjI2Mzg0MixmdWNoc2lhOjE2NzExOTM1LGdhaW5zYm9ybzoxNDQ3NDQ2MCxnaG9zdHdoaXRlOjE2MzE2NjcxLGdvbGQ6MTY3NjY3MjAsZ29sZGVucm9kOjE0MzI5MTIwLGdyYXk6ODQyMTUwNCxncmVlbjozMjc2OCxncmVlbnllbGxvdzoxMTQwMzA1NSxncmV5Ojg0MjE1MDQsaG9uZXlkZXc6MTU3OTQxNjAsaG90cGluazoxNjczODc0MCxpbmRpYW5yZWQ6MTM0NTg1MjQsaW5kaWdvOjQ5MTUzMzAsaXZvcnk6MTY3NzcyMDAsa2hha2k6MTU3ODc2NjAsbGF2ZW5kZXI6MTUxMzI0MTAsbGF2ZW5kZXJibHVzaDoxNjc3MzM2NSxsYXduZ3JlZW46ODE5MDk3NixsZW1vbmNoaWZmb246MTY3NzU4ODUsbGlnaHRibHVlOjExMzkzMjU0LGxpZ2h0Y29yYWw6MTU3NjE1MzYsbGlnaHRjeWFuOjE0NzQ1NTk5LGxpZ2h0Z29sZGVucm9keWVsbG93OjE2NDQ4MjEwLGxpZ2h0Z3JheToxMzg4MjMyMyxsaWdodGdyZWVuOjk0OTgyNTYsbGlnaHRncmV5OjEzODgyMzIzLGxpZ2h0cGluazoxNjc1ODQ2NSxsaWdodHNhbG1vbjoxNjc1Mjc2MixsaWdodHNlYWdyZWVuOjIxNDI4OTAsbGlnaHRza3libHVlOjg5MDAzNDYsbGlnaHRzbGF0ZWdyYXk6NzgzMzc1MyxsaWdodHNsYXRlZ3JleTo3ODMzNzUzLGxpZ2h0c3RlZWxibHVlOjExNTg0NzM0LGxpZ2h0eWVsbG93OjE2Nzc3MTg0LGxpbWU6NjUyODAsbGltZWdyZWVuOjMzMjkzMzAsbGluZW46MTY0NDU2NzAsbWFnZW50YToxNjcxMTkzNSxtYXJvb246ODM4ODYwOCxtZWRpdW1hcXVhbWFyaW5lOjY3MzczMjIsbWVkaXVtYmx1ZToyMDUsbWVkaXVtb3JjaGlkOjEyMjExNjY3LG1lZGl1bXB1cnBsZTo5NjYyNjgzLG1lZGl1bXNlYWdyZWVuOjM5NzgwOTcsbWVkaXVtc2xhdGVibHVlOjgwODc3OTAsbWVkaXVtc3ByaW5nZ3JlZW46NjQxNTQsbWVkaXVtdHVycXVvaXNlOjQ3NzIzMDAsbWVkaXVtdmlvbGV0cmVkOjEzMDQ3MTczLG1pZG5pZ2h0Ymx1ZToxNjQ0OTEyLG1pbnRjcmVhbToxNjEyMTg1MCxtaXN0eXJvc2U6MTY3NzAyNzMsbW9jY2FzaW46MTY3NzAyMjksbmF2YWpvd2hpdGU6MTY3Njg2ODUsbmF2eToxMjgsb2xkbGFjZToxNjY0MzU1OCxvbGl2ZTo4NDIxMzc2LG9saXZlZHJhYjo3MDQ4NzM5LG9yYW5nZToxNjc1MzkyMCxvcmFuZ2VyZWQ6MTY3MjkzNDQsb3JjaGlkOjE0MzE1NzM0LHBhbGVnb2xkZW5yb2Q6MTU2NTcxMzAscGFsZWdyZWVuOjEwMDI1ODgwLHBhbGV0dXJxdW9pc2U6MTE1Mjk5NjYscGFsZXZpb2xldHJlZDoxNDM4MTIwMyxwYXBheWF3aGlwOjE2NzczMDc3LHBlYWNocHVmZjoxNjc2NzY3MyxwZXJ1OjEzNDY4OTkxLHBpbms6MTY3NjEwMzUscGx1bToxNDUyNDYzNyxwb3dkZXJibHVlOjExNTkxOTEwLHB1cnBsZTo4Mzg4NzM2LHJlYmVjY2FwdXJwbGU6NjY5Nzg4MSxyZWQ6MTY3MTE2ODAscm9zeWJyb3duOjEyMzU3NTE5LHJveWFsYmx1ZTo0Mjg2OTQ1LHNhZGRsZWJyb3duOjkxMjcxODcsc2FsbW9uOjE2NDE2ODgyLHNhbmR5YnJvd246MTYwMzI4NjQsc2VhZ3JlZW46MzA1MDMyNyxzZWFzaGVsbDoxNjc3NDYzOCxzaWVubmE6MTA1MDY3OTcsc2lsdmVyOjEyNjMyMjU2LHNreWJsdWU6ODkwMDMzMSxzbGF0ZWJsdWU6Njk3MDA2MSxzbGF0ZWdyYXk6NzM3Mjk0NCxzbGF0ZWdyZXk6NzM3Mjk0NCxzbm93OjE2Nzc1OTMwLHNwcmluZ2dyZWVuOjY1NDA3LHN0ZWVsYmx1ZTo0NjIwOTgwLHRhbjoxMzgwODc4MCx0ZWFsOjMyODk2LHRoaXN0bGU6MTQyMDQ4ODgsdG9tYXRvOjE2NzM3MDk1LHR1cnF1b2lzZTo0MjUxODU2LHZpb2xldDoxNTYzMTA4Nix3aGVhdDoxNjExMzMzMSx3aGl0ZToxNjc3NzIxNSx3aGl0ZXNtb2tlOjE2MTE5Mjg1LHllbGxvdzoxNjc3Njk2MCx5ZWxsb3dncmVlbjoxMDE0NTA3NH07TnQoRXQsa3Qse2Rpc3BsYXlhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmdiKCkuZGlzcGxheWFibGUoKX0saGV4OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmdiKCkuaGV4KCl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmdiKCkrIiJ9fSksTnQoTHQsUnQsU3QoRXQse2JyaWdodGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0PW51bGw9PXQ/MS8uNzpNYXRoLnBvdygxLy43LHQpLG5ldyBMdCh0aGlzLnIqdCx0aGlzLmcqdCx0aGlzLmIqdCx0aGlzLm9wYWNpdHkpfSxkYXJrZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bnVsbD09dD8uNzpNYXRoLnBvdyguNyx0KSxuZXcgTHQodGhpcy5yKnQsdGhpcy5nKnQsdGhpcy5iKnQsdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LGRpc3BsYXlhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIDA8PXRoaXMuciYmdGhpcy5yPD0yNTUmJjA8PXRoaXMuZyYmdGhpcy5nPD0yNTUmJjA8PXRoaXMuYiYmdGhpcy5iPD0yNTUmJjA8PXRoaXMub3BhY2l0eSYmdGhpcy5vcGFjaXR5PD0xfSxoZXg6ZnVuY3Rpb24oKXtyZXR1cm4iIyIrRHQodGhpcy5yKStEdCh0aGlzLmcpK0R0KHRoaXMuYil9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcGFjaXR5O3JldHVybigxPT09KHQ9aXNOYU4odCk/MTpNYXRoLm1heCgwLE1hdGgubWluKDEsdCkpKT8icmdiKCI6InJnYmEoIikrTWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCh0aGlzLnIpfHwwKSkrIiwgIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKHRoaXMuZyl8fDApKSsiLCAiK01hdGgubWF4KDAsTWF0aC5taW4oMjU1LE1hdGgucm91bmQodGhpcy5iKXx8MCkpKygxPT09dD8iKSI6IiwgIit0KyIpIil9fSkpLE50KE90LHF0LFN0KEV0LHticmlnaHRlcjpmdW5jdGlvbih0KXtyZXR1cm4gdD1udWxsPT10PzEvLjc6TWF0aC5wb3coMS8uNyx0KSxuZXcgT3QodGhpcy5oLHRoaXMucyx0aGlzLmwqdCx0aGlzLm9wYWNpdHkpfSxkYXJrZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bnVsbD09dD8uNzpNYXRoLnBvdyguNyx0KSxuZXcgT3QodGhpcy5oLHRoaXMucyx0aGlzLmwqdCx0aGlzLm9wYWNpdHkpfSxyZ2I6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmglMzYwKzM2MCoodGhpcy5oPDApLG49aXNOYU4odCl8fGlzTmFOKHRoaXMucyk/MDp0aGlzLnMsZT10aGlzLmwscj1lKyhlPC41P2U6MS1lKSpuLGk9MiplLXI7cmV0dXJuIG5ldyBMdChZdCh0Pj0yNDA/dC0yNDA6dCsxMjAsaSxyKSxZdCh0LGksciksWXQodDwxMjA/dCsyNDA6dC0xMjAsaSxyKSx0aGlzLm9wYWNpdHkpfSxkaXNwbGF5YWJsZTpmdW5jdGlvbigpe3JldHVybigwPD10aGlzLnMmJnRoaXMuczw9MXx8aXNOYU4odGhpcy5zKSkmJjA8PXRoaXMubCYmdGhpcy5sPD0xJiYwPD10aGlzLm9wYWNpdHkmJnRoaXMub3BhY2l0eTw9MX19KSk7dmFyIERzPU1hdGguUEkvMTgwLFVzPTE4MC9NYXRoLlBJLHFzPS45NjQyMixPcz0xLFlzPS44MjUyMSxCcz00LzI5LEZzPTYvMjksSXM9MypGcypGcyxqcz1GcypGcypGcztOdChJdCxGdCxTdChFdCx7YnJpZ2h0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBJdCh0aGlzLmwrMTgqKG51bGw9PXQ/MTp0KSx0aGlzLmEsdGhpcy5iLHRoaXMub3BhY2l0eSl9LGRhcmtlcjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEl0KHRoaXMubC0xOCoobnVsbD09dD8xOnQpLHRoaXMuYSx0aGlzLmIsdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7dmFyIHQ9KHRoaXMubCsxNikvMTE2LG49aXNOYU4odGhpcy5hKT90OnQrdGhpcy5hLzUwMCxlPWlzTmFOKHRoaXMuYik/dDp0LXRoaXMuYi8yMDA7cmV0dXJuIG49cXMqSHQobiksdD1PcypIdCh0KSxlPVlzKkh0KGUpLG5ldyBMdChYdCgzLjEzMzg1NjEqbi0xLjYxNjg2NjcqdC0uNDkwNjE0NiplKSxYdCgtLjk3ODc2ODQqbisxLjkxNjE0MTUqdCsuMDMzNDU0KmUpLFh0KC4wNzE5NDUzKm4tLjIyODk5MTQqdCsxLjQwNTI0MjcqZSksdGhpcy5vcGFjaXR5KX19KSksTnQoV3QsJHQsU3QoRXQse2JyaWdodGVyOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgV3QodGhpcy5oLHRoaXMuYyx0aGlzLmwrMTgqKG51bGw9PXQ/MTp0KSx0aGlzLm9wYWNpdHkpfSxkYXJrZXI6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBXdCh0aGlzLmgsdGhpcy5jLHRoaXMubC0xOCoobnVsbD09dD8xOnQpLHRoaXMub3BhY2l0eSl9LHJnYjpmdW5jdGlvbigpe3JldHVybiBCdCh0aGlzKS5yZ2IoKX19KSk7dmFyIEhzPS0uMjkyMjcsWHM9LS45MDY0OSxHcz0xLjk3Mjk0LFZzPUdzKlhzLCRzPTEuNzgyNzcqR3MsV3M9MS43ODI3NypIcy0gLS4xNDg2MSpYcztOdChRdCxadCxTdChFdCx7YnJpZ2h0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bnVsbD09dD8xLy43Ok1hdGgucG93KDEvLjcsdCksbmV3IFF0KHRoaXMuaCx0aGlzLnMsdGhpcy5sKnQsdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKHQpe3JldHVybiB0PW51bGw9PXQ/Ljc6TWF0aC5wb3coLjcsdCksbmV3IFF0KHRoaXMuaCx0aGlzLnMsdGhpcy5sKnQsdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7dmFyIHQ9aXNOYU4odGhpcy5oKT8wOih0aGlzLmgrMTIwKSpEcyxuPSt0aGlzLmwsZT1pc05hTih0aGlzLnMpPzA6dGhpcy5zKm4qKDEtbikscj1NYXRoLmNvcyh0KSxpPU1hdGguc2luKHQpO3JldHVybiBuZXcgTHQoMjU1KihuK2UqKC0uMTQ4NjEqcisxLjc4Mjc3KmkpKSwyNTUqKG4rZSooSHMqcitYcyppKSksMjU1KihuK2UqKEdzKnIpKSx0aGlzLm9wYWNpdHkpfX0pKTt2YXIgWnMsUXMsSnMsS3MsdGwsbmwsZWw9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQsbil7dmFyIGU9cigodD1SdCh0KSkuciwobj1SdChuKSkuciksaT1yKHQuZyxuLmcpLG89cih0LmIsbi5iKSxhPWFuKHQub3BhY2l0eSxuLm9wYWNpdHkpO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5yPWUobiksdC5nPWkobiksdC5iPW8obiksdC5vcGFjaXR5PWEobiksdCsiIn19dmFyIHI9b24obik7cmV0dXJuIGUuZ2FtbWE9dCxlfSgxKSxybD11bihLdCksaWw9dW4odG4pLG9sPS9bLStdPyg/OlxkK1wuP1xkKnxcLj9cZCspKD86W2VFXVstK10/XGQrKT8vZyxhbD1uZXcgUmVnRXhwKG9sLnNvdXJjZSwiZyIpLHVsPTE4MC9NYXRoLlBJLGZsPXt0cmFuc2xhdGVYOjAsdHJhbnNsYXRlWTowLHJvdGF0ZTowLHNrZXdYOjAsc2NhbGVYOjEsc2NhbGVZOjF9LGNsPWduKGZ1bmN0aW9uKHQpe3JldHVybiJub25lIj09PXQ/Zmw6KFpzfHwoWnM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiRElWIiksUXM9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LEpzPWRvY3VtZW50LmRlZmF1bHRWaWV3KSxacy5zdHlsZS50cmFuc2Zvcm09dCx0PUpzLmdldENvbXB1dGVkU3R5bGUoUXMuYXBwZW5kQ2hpbGQoWnMpLG51bGwpLmdldFByb3BlcnR5VmFsdWUoInRyYW5zZm9ybSIpLFFzLnJlbW92ZUNoaWxkKFpzKSx0PXQuc2xpY2UoNywtMSkuc3BsaXQoIiwiKSx2bigrdFswXSwrdFsxXSwrdFsyXSwrdFszXSwrdFs0XSwrdFs1XSkpfSwicHgsICIsInB4KSIsImRlZykiKSxzbD1nbihmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD9mbDooS3N8fChLcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwiZyIpKSxLcy5zZXRBdHRyaWJ1dGUoInRyYW5zZm9ybSIsdCksKHQ9S3MudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKSk/KHQ9dC5tYXRyaXgsdm4odC5hLHQuYix0LmMsdC5kLHQuZSx0LmYpKTpmbCl9LCIsICIsIikiLCIpIiksbGw9TWF0aC5TUVJUMixobD0yLGRsPTQscGw9MWUtMTIsdmw9Ym4ocm4pLGdsPWJuKGFuKSx5bD1tbihybiksX2w9bW4oYW4pLGJsPXhuKHJuKSxtbD14bihhbikseGw9MCx3bD0wLE1sPTAsQWw9MWUzLFRsPTAsTmw9MCxTbD0wLEVsPSJvYmplY3QiPT10eXBlb2YgcGVyZm9ybWFuY2UmJnBlcmZvcm1hbmNlLm5vdz9wZXJmb3JtYW5jZTpEYXRlLGtsPSJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lP3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpOmZ1bmN0aW9uKHQpe3NldFRpbWVvdXQodCwxNyl9O0FuLnByb3RvdHlwZT1Ubi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkFuLHJlc3RhcnQ6ZnVuY3Rpb24odCxuLGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoImNhbGxiYWNrIGlzIG5vdCBhIGZ1bmN0aW9uIik7ZT0obnVsbD09ZT93bigpOitlKSsobnVsbD09bj8wOituKSx0aGlzLl9uZXh0fHxubD09PXRoaXN8fChubD9ubC5fbmV4dD10aGlzOnRsPXRoaXMsbmw9dGhpcyksdGhpcy5fY2FsbD10LHRoaXMuX3RpbWU9ZSxrbigpfSxzdG9wOmZ1bmN0aW9uKCl7dGhpcy5fY2FsbCYmKHRoaXMuX2NhbGw9bnVsbCx0aGlzLl90aW1lPTEvMCxrbigpKX19O3ZhciBDbD1OKCJzdGFydCIsImVuZCIsImludGVycnVwdCIpLFBsPVtdLHpsPTAsUmw9MSxMbD0yLERsPTMsVWw9NCxxbD01LE9sPTYsWWw9ZnQucHJvdG90eXBlLmNvbnN0cnVjdG9yLEJsPTAsRmw9ZnQucHJvdG90eXBlO09uLnByb3RvdHlwZT1Zbi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOk9uLHNlbGVjdDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLl9uYW1lLGU9dGhpcy5faWQ7ImZ1bmN0aW9uIiE9dHlwZW9mIHQmJih0PXoodCkpO2Zvcih2YXIgcj10aGlzLl9ncm91cHMsaT1yLmxlbmd0aCxvPW5ldyBBcnJheShpKSxhPTA7YTxpOysrYSlmb3IodmFyIHUsZixjPXJbYV0scz1jLmxlbmd0aCxsPW9bYV09bmV3IEFycmF5KHMpLGg9MDtoPHM7KytoKSh1PWNbaF0pJiYoZj10LmNhbGwodSx1Ll9fZGF0YV9fLGgsYykpJiYoIl9fZGF0YV9fImluIHUmJihmLl9fZGF0YV9fPXUuX19kYXRhX18pLGxbaF09ZixQbihsW2hdLG4sZSxoLGwsTG4odSxlKSkpO3JldHVybiBuZXcgT24obyx0aGlzLl9wYXJlbnRzLG4sZSl9LHNlbGVjdEFsbDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLl9uYW1lLGU9dGhpcy5faWQ7ImZ1bmN0aW9uIiE9dHlwZW9mIHQmJih0PUwodCkpO2Zvcih2YXIgcj10aGlzLl9ncm91cHMsaT1yLmxlbmd0aCxvPVtdLGE9W10sdT0wO3U8aTsrK3UpZm9yKHZhciBmLGM9clt1XSxzPWMubGVuZ3RoLGw9MDtsPHM7KytsKWlmKGY9Y1tsXSl7Zm9yKHZhciBoLGQ9dC5jYWxsKGYsZi5fX2RhdGFfXyxsLGMpLHA9TG4oZixlKSx2PTAsZz1kLmxlbmd0aDt2PGc7Kyt2KShoPWRbdl0pJiZQbihoLG4sZSx2LGQscCk7by5wdXNoKGQpLGEucHVzaChmKX1yZXR1cm4gbmV3IE9uKG8sYSxuLGUpfSxmaWx0ZXI6ZnVuY3Rpb24odCl7ImZ1bmN0aW9uIiE9dHlwZW9mIHQmJih0PV9zKHQpKTtmb3IodmFyIG49dGhpcy5fZ3JvdXBzLGU9bi5sZW5ndGgscj1uZXcgQXJyYXkoZSksaT0wO2k8ZTsrK2kpZm9yKHZhciBvLGE9bltpXSx1PWEubGVuZ3RoLGY9cltpXT1bXSxjPTA7Yzx1OysrYykobz1hW2NdKSYmdC5jYWxsKG8sby5fX2RhdGFfXyxjLGEpJiZmLnB1c2gobyk7cmV0dXJuIG5ldyBPbihyLHRoaXMuX3BhcmVudHMsdGhpcy5fbmFtZSx0aGlzLl9pZCl9LG1lcmdlOmZ1bmN0aW9uKHQpe2lmKHQuX2lkIT09dGhpcy5faWQpdGhyb3cgbmV3IEVycm9yO2Zvcih2YXIgbj10aGlzLl9ncm91cHMsZT10Ll9ncm91cHMscj1uLmxlbmd0aCxpPWUubGVuZ3RoLG89TWF0aC5taW4ocixpKSxhPW5ldyBBcnJheShyKSx1PTA7dTxvOysrdSlmb3IodmFyIGYsYz1uW3VdLHM9ZVt1XSxsPWMubGVuZ3RoLGg9YVt1XT1uZXcgQXJyYXkobCksZD0wO2Q8bDsrK2QpKGY9Y1tkXXx8c1tkXSkmJihoW2RdPWYpO2Zvcig7dTxyOysrdSlhW3VdPW5bdV07cmV0dXJuIG5ldyBPbihhLHRoaXMuX3BhcmVudHMsdGhpcy5fbmFtZSx0aGlzLl9pZCl9LHNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgWWwodGhpcy5fZ3JvdXBzLHRoaXMuX3BhcmVudHMpfSx0cmFuc2l0aW9uOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX25hbWUsbj10aGlzLl9pZCxlPUJuKCkscj10aGlzLl9ncm91cHMsaT1yLmxlbmd0aCxvPTA7bzxpOysrbylmb3IodmFyIGEsdT1yW29dLGY9dS5sZW5ndGgsYz0wO2M8ZjsrK2MpaWYoYT11W2NdKXt2YXIgcz1MbihhLG4pO1BuKGEsdCxlLGMsdSx7dGltZTpzLnRpbWUrcy5kZWxheStzLmR1cmF0aW9uLGRlbGF5OjAsZHVyYXRpb246cy5kdXJhdGlvbixlYXNlOnMuZWFzZX0pfXJldHVybiBuZXcgT24ocix0aGlzLl9wYXJlbnRzLHQsZSl9LGNhbGw6RmwuY2FsbCxub2RlczpGbC5ub2Rlcyxub2RlOkZsLm5vZGUsc2l6ZTpGbC5zaXplLGVtcHR5OkZsLmVtcHR5LGVhY2g6RmwuZWFjaCxvbjpmdW5jdGlvbih0LG4pe3ZhciBlPXRoaXMuX2lkO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDI/TG4odGhpcy5ub2RlKCksZSkub24ub24odCk6dGhpcy5lYWNoKGZ1bmN0aW9uKHQsbixlKXt2YXIgcixpLG89ZnVuY3Rpb24odCl7cmV0dXJuKHQrIiIpLnRyaW0oKS5zcGxpdCgvXnxccysvKS5ldmVyeShmdW5jdGlvbih0KXt2YXIgbj10LmluZGV4T2YoIi4iKTtyZXR1cm4gbj49MCYmKHQ9dC5zbGljZSgwLG4pKSwhdHx8InN0YXJ0Ij09PXR9KX0obik/em46Um47cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGE9byh0aGlzLHQpLHU9YS5vbjt1IT09ciYmKGk9KHI9dSkuY29weSgpKS5vbihuLGUpLGEub249aX19KGUsdCxuKSl9LGF0dHI6ZnVuY3Rpb24odCxuKXt2YXIgZT1rKHQpLHI9InRyYW5zZm9ybSI9PT1lP3NsOnFuO3JldHVybiB0aGlzLmF0dHJUd2Vlbih0LCJmdW5jdGlvbiI9PXR5cGVvZiBuPyhlLmxvY2FsP2Z1bmN0aW9uKHQsbixlKXt2YXIgcixpLG87cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGEsdT1lKHRoaXMpO2lmKG51bGwhPXUpcmV0dXJuKGE9dGhpcy5nZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwpKT09PXU/bnVsbDphPT09ciYmdT09PWk/bzpvPW4ocj1hLGk9dSk7dGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwpfX06ZnVuY3Rpb24odCxuLGUpe3ZhciByLGksbztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYSx1PWUodGhpcyk7aWYobnVsbCE9dSlyZXR1cm4oYT10aGlzLmdldEF0dHJpYnV0ZSh0KSk9PT11P251bGw6YT09PXImJnU9PT1pP286bz1uKHI9YSxpPXUpO3RoaXMucmVtb3ZlQXR0cmlidXRlKHQpfX0pKGUscixVbih0aGlzLCJhdHRyLiIrdCxuKSk6bnVsbD09bj8oZS5sb2NhbD9mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKHQuc3BhY2UsdC5sb2NhbCl9fTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUF0dHJpYnV0ZSh0KX19KShlKTooZS5sb2NhbD9mdW5jdGlvbih0LG4sZSl7dmFyIHIsaTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbz10aGlzLmdldEF0dHJpYnV0ZU5TKHQuc3BhY2UsdC5sb2NhbCk7cmV0dXJuIG89PT1lP251bGw6bz09PXI/aTppPW4ocj1vLGUpfX06ZnVuY3Rpb24odCxuLGUpe3ZhciByLGk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG89dGhpcy5nZXRBdHRyaWJ1dGUodCk7cmV0dXJuIG89PT1lP251bGw6bz09PXI/aTppPW4ocj1vLGUpfX0pKGUscixuKyIiKSl9LGF0dHJUd2VlbjpmdW5jdGlvbih0LG4pe3ZhciBlPSJhdHRyLiIrdDtpZihhcmd1bWVudHMubGVuZ3RoPDIpcmV0dXJuKGU9dGhpcy50d2VlbihlKSkmJmUuX3ZhbHVlO2lmKG51bGw9PW4pcmV0dXJuIHRoaXMudHdlZW4oZSxudWxsKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygbil0aHJvdyBuZXcgRXJyb3I7dmFyIHI9ayh0KTtyZXR1cm4gdGhpcy50d2VlbihlLChyLmxvY2FsP2Z1bmN0aW9uKHQsbil7ZnVuY3Rpb24gZSgpe3ZhciBlPXRoaXMscj1uLmFwcGx5KGUsYXJndW1lbnRzKTtyZXR1cm4gciYmZnVuY3Rpb24obil7ZS5zZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLHQubG9jYWwscihuKSl9fXJldHVybiBlLl92YWx1ZT1uLGV9OmZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gZSgpe3ZhciBlPXRoaXMscj1uLmFwcGx5KGUsYXJndW1lbnRzKTtyZXR1cm4gciYmZnVuY3Rpb24obil7ZS5zZXRBdHRyaWJ1dGUodCxyKG4pKX19cmV0dXJuIGUuX3ZhbHVlPW4sZX0pKHIsbikpfSxzdHlsZTpmdW5jdGlvbih0LG4sZSl7dmFyIHI9InRyYW5zZm9ybSI9PSh0Kz0iIik/Y2w6cW47cmV0dXJuIG51bGw9PW4/dGhpcy5zdHlsZVR3ZWVuKHQsZnVuY3Rpb24odCxuKXt2YXIgZSxyLGk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG89Rih0aGlzLHQpLGE9KHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCksRih0aGlzLHQpKTtyZXR1cm4gbz09PWE/bnVsbDpvPT09ZSYmYT09PXI/aTppPW4oZT1vLHI9YSl9fSh0LHIpKS5vbigiZW5kLnN0eWxlLiIrdCxmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KHQpfX0odCkpOnRoaXMuc3R5bGVUd2Vlbih0LCJmdW5jdGlvbiI9PXR5cGVvZiBuP2Z1bmN0aW9uKHQsbixlKXt2YXIgcixpLG87cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGE9Rih0aGlzLHQpLHU9ZSh0aGlzKTtyZXR1cm4gbnVsbD09dSYmKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCksdT1GKHRoaXMsdCkpLGE9PT11P251bGw6YT09PXImJnU9PT1pP286bz1uKHI9YSxpPXUpfX0odCxyLFVuKHRoaXMsInN0eWxlLiIrdCxuKSk6ZnVuY3Rpb24odCxuLGUpe3ZhciByLGk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG89Rih0aGlzLHQpO3JldHVybiBvPT09ZT9udWxsOm89PT1yP2k6aT1uKHI9byxlKX19KHQscixuKyIiKSxlKX0sc3R5bGVUd2VlbjpmdW5jdGlvbih0LG4sZSl7dmFyIHI9InN0eWxlLiIrKHQrPSIiKTtpZihhcmd1bWVudHMubGVuZ3RoPDIpcmV0dXJuKHI9dGhpcy50d2VlbihyKSkmJnIuX3ZhbHVlO2lmKG51bGw9PW4pcmV0dXJuIHRoaXMudHdlZW4ocixudWxsKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygbil0aHJvdyBuZXcgRXJyb3I7cmV0dXJuIHRoaXMudHdlZW4ocixmdW5jdGlvbih0LG4sZSl7ZnVuY3Rpb24gcigpe3ZhciByPXRoaXMsaT1uLmFwcGx5KHIsYXJndW1lbnRzKTtyZXR1cm4gaSYmZnVuY3Rpb24obil7ci5zdHlsZS5zZXRQcm9wZXJ0eSh0LGkobiksZSl9fXJldHVybiByLl92YWx1ZT1uLHJ9KHQsbixudWxsPT1lPyIiOmUpKX0sdGV4dDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50d2VlbigidGV4dCIsImZ1bmN0aW9uIj09dHlwZW9mIHQ/ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dCh0aGlzKTt0aGlzLnRleHRDb250ZW50PW51bGw9PW4/IiI6bn19KFVuKHRoaXMsInRleHQiLHQpKTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnRleHRDb250ZW50PXR9fShudWxsPT10PyIiOnQrIiIpKX0scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub24oImVuZC5yZW1vdmUiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXMucGFyZW50Tm9kZTtmb3IodmFyIGUgaW4gdGhpcy5fX3RyYW5zaXRpb24paWYoK2UhPT10KXJldHVybjtuJiZuLnJlbW92ZUNoaWxkKHRoaXMpfX0odGhpcy5faWQpKX0sdHdlZW46ZnVuY3Rpb24odCxuKXt2YXIgZT10aGlzLl9pZDtpZih0Kz0iIixhcmd1bWVudHMubGVuZ3RoPDIpe2Zvcih2YXIgcixpPUxuKHRoaXMubm9kZSgpLGUpLnR3ZWVuLG89MCxhPWkubGVuZ3RoO288YTsrK28paWYoKHI9aVtvXSkubmFtZT09PXQpcmV0dXJuIHIudmFsdWU7cmV0dXJuIG51bGx9cmV0dXJuIHRoaXMuZWFjaCgobnVsbD09bj9mdW5jdGlvbih0LG4pe3ZhciBlLHI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGk9Um4odGhpcyx0KSxvPWkudHdlZW47aWYobyE9PWUpZm9yKHZhciBhPTAsdT0ocj1lPW8pLmxlbmd0aDthPHU7KythKWlmKHJbYV0ubmFtZT09PW4peyhyPXIuc2xpY2UoKSkuc3BsaWNlKGEsMSk7YnJlYWt9aS50d2Vlbj1yfX06ZnVuY3Rpb24odCxuLGUpe3ZhciByLGk7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yO3JldHVybiBmdW5jdGlvbigpe3ZhciBvPVJuKHRoaXMsdCksYT1vLnR3ZWVuO2lmKGEhPT1yKXtpPShyPWEpLnNsaWNlKCk7Zm9yKHZhciB1PXtuYW1lOm4sdmFsdWU6ZX0sZj0wLGM9aS5sZW5ndGg7ZjxjOysrZilpZihpW2ZdLm5hbWU9PT1uKXtpW2ZdPXU7YnJlYWt9Zj09PWMmJmkucHVzaCh1KX1vLnR3ZWVuPWl9fSkoZSx0LG4pKX0sZGVsYXk6ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5faWQ7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKCgiZnVuY3Rpb24iPT10eXBlb2YgdD9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe3puKHRoaXMsdCkuZGVsYXk9K24uYXBwbHkodGhpcyxhcmd1bWVudHMpfX06ZnVuY3Rpb24odCxuKXtyZXR1cm4gbj0rbixmdW5jdGlvbigpe3puKHRoaXMsdCkuZGVsYXk9bn19KShuLHQpKTpMbih0aGlzLm5vZGUoKSxuKS5kZWxheX0sZHVyYXRpb246ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5faWQ7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lYWNoKCgiZnVuY3Rpb24iPT10eXBlb2YgdD9mdW5jdGlvbih0LG4pe3JldHVybiBmdW5jdGlvbigpe1JuKHRoaXMsdCkuZHVyYXRpb249K24uYXBwbHkodGhpcyxhcmd1bWVudHMpfX06ZnVuY3Rpb24odCxuKXtyZXR1cm4gbj0rbixmdW5jdGlvbigpe1JuKHRoaXMsdCkuZHVyYXRpb249bn19KShuLHQpKTpMbih0aGlzLm5vZGUoKSxuKS5kdXJhdGlvbn0sZWFzZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzLl9pZDtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLmVhY2goZnVuY3Rpb24odCxuKXtpZigiZnVuY3Rpb24iIT10eXBlb2Ygbil0aHJvdyBuZXcgRXJyb3I7cmV0dXJuIGZ1bmN0aW9uKCl7Um4odGhpcyx0KS5lYXNlPW59fShuLHQpKTpMbih0aGlzLm5vZGUoKSxuKS5lYXNlfX07dmFyIElsPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gTWF0aC5wb3codCxuKX1yZXR1cm4gbj0rbixlLmV4cG9uZW50PXQsZX0oMyksamw9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybiAxLU1hdGgucG93KDEtdCxuKX1yZXR1cm4gbj0rbixlLmV4cG9uZW50PXQsZX0oMyksSGw9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybigodCo9Mik8PTE/TWF0aC5wb3codCxuKToyLU1hdGgucG93KDItdCxuKSkvMn1yZXR1cm4gbj0rbixlLmV4cG9uZW50PXQsZX0oMyksWGw9TWF0aC5QSSxHbD1YbC8yLFZsPTQvMTEsJGw9Ni8xMSxXbD04LzExLFpsPS43NSxRbD05LzExLEpsPTEwLzExLEtsPS45Mzc1LHRoPTIxLzIyLG5oPTYzLzY0LGVoPTEvVmwvVmwscmg9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybiB0KnQqKChuKzEpKnQtbil9cmV0dXJuIG49K24sZS5vdmVyc2hvb3Q9dCxlfSgxLjcwMTU4KSxpaD1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuLS10KnQqKChuKzEpKnQrbikrMX1yZXR1cm4gbj0rbixlLm92ZXJzaG9vdD10LGV9KDEuNzAxNTgpLG9oPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4oKHQqPTIpPDE/dCp0KigobisxKSp0LW4pOih0LT0yKSp0KigobisxKSp0K24pKzIpLzJ9cmV0dXJuIG49K24sZS5vdmVyc2hvb3Q9dCxlfSgxLjcwMTU4KSxhaD0yKk1hdGguUEksdWg9ZnVuY3Rpb24gdChuLGUpe2Z1bmN0aW9uIHIodCl7cmV0dXJuIG4qTWF0aC5wb3coMiwxMCotLXQpKk1hdGguc2luKChpLXQpL2UpfXZhciBpPU1hdGguYXNpbigxLyhuPU1hdGgubWF4KDEsbikpKSooZS89YWgpO3JldHVybiByLmFtcGxpdHVkZT1mdW5jdGlvbihuKXtyZXR1cm4gdChuLGUqYWgpfSxyLnBlcmlvZD1mdW5jdGlvbihlKXtyZXR1cm4gdChuLGUpfSxyfSgxLC4zKSxmaD1mdW5jdGlvbiB0KG4sZSl7ZnVuY3Rpb24gcih0KXtyZXR1cm4gMS1uKk1hdGgucG93KDIsLTEwKih0PSt0KSkqTWF0aC5zaW4oKHQraSkvZSl9dmFyIGk9TWF0aC5hc2luKDEvKG49TWF0aC5tYXgoMSxuKSkpKihlLz1haCk7cmV0dXJuIHIuYW1wbGl0dWRlPWZ1bmN0aW9uKG4pe3JldHVybiB0KG4sZSphaCl9LHIucGVyaW9kPWZ1bmN0aW9uKGUpe3JldHVybiB0KG4sZSl9LHJ9KDEsLjMpLGNoPWZ1bmN0aW9uIHQobixlKXtmdW5jdGlvbiByKHQpe3JldHVybigodD0yKnQtMSk8MD9uKk1hdGgucG93KDIsMTAqdCkqTWF0aC5zaW4oKGktdCkvZSk6Mi1uKk1hdGgucG93KDIsLTEwKnQpKk1hdGguc2luKChpK3QpL2UpKS8yfXZhciBpPU1hdGguYXNpbigxLyhuPU1hdGgubWF4KDEsbikpKSooZS89YWgpO3JldHVybiByLmFtcGxpdHVkZT1mdW5jdGlvbihuKXtyZXR1cm4gdChuLGUqYWgpfSxyLnBlcmlvZD1mdW5jdGlvbihlKXtyZXR1cm4gdChuLGUpfSxyfSgxLC4zKSxzaD17dGltZTpudWxsLGRlbGF5OjAsZHVyYXRpb246MjUwLGVhc2U6SW59O2Z0LnByb3RvdHlwZS5pbnRlcnJ1cHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe0RuKHRoaXMsdCl9KX0sZnQucHJvdG90eXBlLnRyYW5zaXRpb249ZnVuY3Rpb24odCl7dmFyIG4sZTt0IGluc3RhbmNlb2YgT24/KG49dC5faWQsdD10Ll9uYW1lKToobj1CbigpLChlPXNoKS50aW1lPXduKCksdD1udWxsPT10P251bGw6dCsiIik7Zm9yKHZhciByPXRoaXMuX2dyb3VwcyxpPXIubGVuZ3RoLG89MDtvPGk7KytvKWZvcih2YXIgYSx1PXJbb10sZj11Lmxlbmd0aCxjPTA7YzxmOysrYykoYT11W2NdKSYmUG4oYSx0LG4sYyx1LGV8fFZuKGEsbikpO3JldHVybiBuZXcgT24ocix0aGlzLl9wYXJlbnRzLHQsbil9O3ZhciBsaD1bbnVsbF0saGg9e25hbWU6ImRyYWcifSxkaD17bmFtZToic3BhY2UifSxwaD17bmFtZToiaGFuZGxlIn0sdmg9e25hbWU6ImNlbnRlciJ9LGdoPXtuYW1lOiJ4IixoYW5kbGVzOlsiZSIsInciXS5tYXAoUW4pLGlucHV0OmZ1bmN0aW9uKHQsbil7cmV0dXJuIHQmJltbdFswXSxuWzBdWzFdXSxbdFsxXSxuWzFdWzFdXV19LG91dHB1dDpmdW5jdGlvbih0KXtyZXR1cm4gdCYmW3RbMF1bMF0sdFsxXVswXV19fSx5aD17bmFtZToieSIsaGFuZGxlczpbIm4iLCJzIl0ubWFwKFFuKSxpbnB1dDpmdW5jdGlvbih0LG4pe3JldHVybiB0JiZbW25bMF1bMF0sdFswXV0sW25bMV1bMF0sdFsxXV1dfSxvdXRwdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlt0WzBdWzFdLHRbMV1bMV1dfX0sX2g9e25hbWU6Inh5IixoYW5kbGVzOlsibiIsImUiLCJzIiwidyIsIm53IiwibmUiLCJzZSIsInN3Il0ubWFwKFFuKSxpbnB1dDpmdW5jdGlvbih0KXtyZXR1cm4gdH0sb3V0cHV0OmZ1bmN0aW9uKHQpe3JldHVybiB0fX0sYmg9e292ZXJsYXk6ImNyb3NzaGFpciIsc2VsZWN0aW9uOiJtb3ZlIixuOiJucy1yZXNpemUiLGU6ImV3LXJlc2l6ZSIsczoibnMtcmVzaXplIix3OiJldy1yZXNpemUiLG53OiJud3NlLXJlc2l6ZSIsbmU6Im5lc3ctcmVzaXplIixzZToibndzZS1yZXNpemUiLHN3OiJuZXN3LXJlc2l6ZSJ9LG1oPXtlOiJ3Iix3OiJlIixudzoibmUiLG5lOiJudyIsc2U6InN3Iixzdzoic2UifSx4aD17bjoicyIsczoibiIsbnc6InN3IixuZToic2UiLHNlOiJuZSIsc3c6Im53In0sd2g9e292ZXJsYXk6MSxzZWxlY3Rpb246MSxuOm51bGwsZToxLHM6bnVsbCx3Oi0xLG53Oi0xLG5lOjEsc2U6MSxzdzotMX0sTWg9e292ZXJsYXk6MSxzZWxlY3Rpb246MSxuOi0xLGU6bnVsbCxzOjEsdzpudWxsLG53Oi0xLG5lOi0xLHNlOjEsc3c6MX0sQWg9TWF0aC5jb3MsVGg9TWF0aC5zaW4sTmg9TWF0aC5QSSxTaD1OaC8yLEVoPTIqTmgsa2g9TWF0aC5tYXgsQ2g9QXJyYXkucHJvdG90eXBlLnNsaWNlLFBoPU1hdGguUEksemg9MipQaCxSaD16aC0xZS02O2llLnByb3RvdHlwZT1vZS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmllLG1vdmVUbzpmdW5jdGlvbih0LG4pe3RoaXMuXys9Ik0iKyh0aGlzLl94MD10aGlzLl94MT0rdCkrIiwiKyh0aGlzLl95MD10aGlzLl95MT0rbil9LGNsb3NlUGF0aDpmdW5jdGlvbigpe251bGwhPT10aGlzLl94MSYmKHRoaXMuX3gxPXRoaXMuX3gwLHRoaXMuX3kxPXRoaXMuX3kwLHRoaXMuXys9IloiKX0sbGluZVRvOmZ1bmN0aW9uKHQsbil7dGhpcy5fKz0iTCIrKHRoaXMuX3gxPSt0KSsiLCIrKHRoaXMuX3kxPStuKX0scXVhZHJhdGljQ3VydmVUbzpmdW5jdGlvbih0LG4sZSxyKXt0aGlzLl8rPSJRIisgK3QrIiwiKyArbisiLCIrKHRoaXMuX3gxPStlKSsiLCIrKHRoaXMuX3kxPStyKX0sYmV6aWVyQ3VydmVUbzpmdW5jdGlvbih0LG4sZSxyLGksbyl7dGhpcy5fKz0iQyIrICt0KyIsIisgK24rIiwiKyArZSsiLCIrICtyKyIsIisodGhpcy5feDE9K2kpKyIsIisodGhpcy5feTE9K28pfSxhcmNUbzpmdW5jdGlvbih0LG4sZSxyLGkpe3Q9K3Qsbj0rbixlPStlLHI9K3IsaT0raTt2YXIgbz10aGlzLl94MSxhPXRoaXMuX3kxLHU9ZS10LGY9ci1uLGM9by10LHM9YS1uLGw9YypjK3MqcztpZihpPDApdGhyb3cgbmV3IEVycm9yKCJuZWdhdGl2ZSByYWRpdXM6ICIraSk7aWYobnVsbD09PXRoaXMuX3gxKXRoaXMuXys9Ik0iKyh0aGlzLl94MT10KSsiLCIrKHRoaXMuX3kxPW4pO2Vsc2UgaWYobD4xZS02KWlmKE1hdGguYWJzKHMqdS1mKmMpPjFlLTYmJmkpe3ZhciBoPWUtbyxkPXItYSxwPXUqdStmKmYsdj1oKmgrZCpkLGc9TWF0aC5zcXJ0KHApLHk9TWF0aC5zcXJ0KGwpLF89aSpNYXRoLnRhbigoUGgtTWF0aC5hY29zKChwK2wtdikvKDIqZyp5KSkpLzIpLGI9Xy95LG09Xy9nO01hdGguYWJzKGItMSk+MWUtNiYmKHRoaXMuXys9IkwiKyh0K2IqYykrIiwiKyhuK2IqcykpLHRoaXMuXys9IkEiK2krIiwiK2krIiwwLDAsIisgKyhzKmg+YypkKSsiLCIrKHRoaXMuX3gxPXQrbSp1KSsiLCIrKHRoaXMuX3kxPW4rbSpmKX1lbHNlIHRoaXMuXys9IkwiKyh0aGlzLl94MT10KSsiLCIrKHRoaXMuX3kxPW4pO2Vsc2U7fSxhcmM6ZnVuY3Rpb24odCxuLGUscixpLG8pe3Q9K3Qsbj0rbjt2YXIgYT0oZT0rZSkqTWF0aC5jb3MociksdT1lKk1hdGguc2luKHIpLGY9dCthLGM9bit1LHM9MV5vLGw9bz9yLWk6aS1yO2lmKGU8MCl0aHJvdyBuZXcgRXJyb3IoIm5lZ2F0aXZlIHJhZGl1czogIitlKTtudWxsPT09dGhpcy5feDE/dGhpcy5fKz0iTSIrZisiLCIrYzooTWF0aC5hYnModGhpcy5feDEtZik+MWUtNnx8TWF0aC5hYnModGhpcy5feTEtYyk+MWUtNikmJih0aGlzLl8rPSJMIitmKyIsIitjKSxlJiYobDwwJiYobD1sJXpoK3poKSxsPlJoP3RoaXMuXys9IkEiK2UrIiwiK2UrIiwwLDEsIitzKyIsIisodC1hKSsiLCIrKG4tdSkrIkEiK2UrIiwiK2UrIiwwLDEsIitzKyIsIisodGhpcy5feDE9ZikrIiwiKyh0aGlzLl95MT1jKTpsPjFlLTYmJih0aGlzLl8rPSJBIitlKyIsIitlKyIsMCwiKyArKGw+PVBoKSsiLCIrcysiLCIrKHRoaXMuX3gxPXQrZSpNYXRoLmNvcyhpKSkrIiwiKyh0aGlzLl95MT1uK2UqTWF0aC5zaW4oaSkpKSl9LHJlY3Q6ZnVuY3Rpb24odCxuLGUscil7dGhpcy5fKz0iTSIrKHRoaXMuX3gwPXRoaXMuX3gxPSt0KSsiLCIrKHRoaXMuX3kwPXRoaXMuX3kxPStuKSsiaCIrICtlKyJ2IisgK3IrImgiKy1lKyJaIn0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ffX07bGUucHJvdG90eXBlPWhlLnByb3RvdHlwZT17Y29uc3RydWN0b3I6bGUsaGFzOmZ1bmN0aW9uKHQpe3JldHVybiIkIit0IGluIHRoaXN9LGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpc1siJCIrdF19LHNldDpmdW5jdGlvbih0LG4pe3JldHVybiB0aGlzWyIkIit0XT1uLHRoaXN9LHJlbW92ZTpmdW5jdGlvbih0KXt2YXIgbj0iJCIrdDtyZXR1cm4gbiBpbiB0aGlzJiZkZWxldGUgdGhpc1tuXX0sY2xlYXI6ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcykiJCI9PT10WzBdJiZkZWxldGUgdGhpc1t0XX0sa2V5czpmdW5jdGlvbigpe3ZhciB0PVtdO2Zvcih2YXIgbiBpbiB0aGlzKSIkIj09PW5bMF0mJnQucHVzaChuLnNsaWNlKDEpKTtyZXR1cm4gdH0sdmFsdWVzOmZ1bmN0aW9uKCl7dmFyIHQ9W107Zm9yKHZhciBuIGluIHRoaXMpIiQiPT09blswXSYmdC5wdXNoKHRoaXNbbl0pO3JldHVybiB0fSxlbnRyaWVzOmZ1bmN0aW9uKCl7dmFyIHQ9W107Zm9yKHZhciBuIGluIHRoaXMpIiQiPT09blswXSYmdC5wdXNoKHtrZXk6bi5zbGljZSgxKSx2YWx1ZTp0aGlzW25dfSk7cmV0dXJuIHR9LHNpemU6ZnVuY3Rpb24oKXt2YXIgdD0wO2Zvcih2YXIgbiBpbiB0aGlzKSIkIj09PW5bMF0mJisrdDtyZXR1cm4gdH0sZW1wdHk6ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcylpZigiJCI9PT10WzBdKXJldHVybiExO3JldHVybiEwfSxlYWNoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbiBpbiB0aGlzKSIkIj09PW5bMF0mJnQodGhpc1tuXSxuLnNsaWNlKDEpLHRoaXMpfX07dmFyIExoPWhlLnByb3RvdHlwZTt5ZS5wcm90b3R5cGU9X2UucHJvdG90eXBlPXtjb25zdHJ1Y3Rvcjp5ZSxoYXM6TGguaGFzLGFkZDpmdW5jdGlvbih0KXtyZXR1cm4gdCs9IiIsdGhpc1siJCIrdF09dCx0aGlzfSxyZW1vdmU6TGgucmVtb3ZlLGNsZWFyOkxoLmNsZWFyLHZhbHVlczpMaC5rZXlzLHNpemU6TGguc2l6ZSxlbXB0eTpMaC5lbXB0eSxlYWNoOkxoLmVhY2h9O3ZhciBEaD1BcnJheS5wcm90b3R5cGUuc2xpY2UsVWg9W1tdLFtbWzEsMS41XSxbLjUsMV1dXSxbW1sxLjUsMV0sWzEsMS41XV1dLFtbWzEuNSwxXSxbLjUsMV1dXSxbW1sxLC41XSxbMS41LDFdXV0sW1tbMSwxLjVdLFsuNSwxXV0sW1sxLC41XSxbMS41LDFdXV0sW1tbMSwuNV0sWzEsMS41XV1dLFtbWzEsLjVdLFsuNSwxXV1dLFtbWy41LDFdLFsxLC41XV1dLFtbWzEsMS41XSxbMSwuNV1dXSxbW1suNSwxXSxbMSwuNV1dLFtbMS41LDFdLFsxLDEuNV1dXSxbW1sxLjUsMV0sWzEsLjVdXV0sW1tbLjUsMV0sWzEuNSwxXV1dLFtbWzEsMS41XSxbMS41LDFdXV0sW1tbLjUsMV0sWzEsMS41XV1dLFtdXSxxaD17fSxPaD17fSxZaD0zNCxCaD0xMCxGaD0xMyxJaD1rZSgiLCIpLGpoPUloLnBhcnNlLEhoPUloLnBhcnNlUm93cyxYaD1JaC5mb3JtYXQsR2g9SWguZm9ybWF0Um93cyxWaD1rZSgiXHQiKSwkaD1WaC5wYXJzZSxXaD1WaC5wYXJzZVJvd3MsWmg9VmguZm9ybWF0LFFoPVZoLmZvcm1hdFJvd3MsSmg9TGUoamgpLEtoPUxlKCRoKSx0ZD1VZSgiYXBwbGljYXRpb24veG1sIiksbmQ9VWUoInRleHQvaHRtbCIpLGVkPVVlKCJpbWFnZS9zdmcreG1sIikscmQ9amUucHJvdG90eXBlPUhlLnByb3RvdHlwZTtyZC5jb3B5PWZ1bmN0aW9uKCl7dmFyIHQsbixlPW5ldyBIZSh0aGlzLl94LHRoaXMuX3ksdGhpcy5feDAsdGhpcy5feTAsdGhpcy5feDEsdGhpcy5feTEpLHI9dGhpcy5fcm9vdDtpZighcilyZXR1cm4gZTtpZighci5sZW5ndGgpcmV0dXJuIGUuX3Jvb3Q9WGUociksZTtmb3IodD1be3NvdXJjZTpyLHRhcmdldDplLl9yb290PW5ldyBBcnJheSg0KX1dO3I9dC5wb3AoKTspZm9yKHZhciBpPTA7aTw0OysraSkobj1yLnNvdXJjZVtpXSkmJihuLmxlbmd0aD90LnB1c2goe3NvdXJjZTpuLHRhcmdldDpyLnRhcmdldFtpXT1uZXcgQXJyYXkoNCl9KTpyLnRhcmdldFtpXT1YZShuKSk7cmV0dXJuIGV9LHJkLmFkZD1mdW5jdGlvbih0KXt2YXIgbj0rdGhpcy5feC5jYWxsKG51bGwsdCksZT0rdGhpcy5feS5jYWxsKG51bGwsdCk7cmV0dXJuIFllKHRoaXMuY292ZXIobixlKSxuLGUsdCl9LHJkLmFkZEFsbD1mdW5jdGlvbih0KXt2YXIgbixlLHIsaSxvPXQubGVuZ3RoLGE9bmV3IEFycmF5KG8pLHU9bmV3IEFycmF5KG8pLGY9MS8wLGM9MS8wLHM9LTEvMCxsPS0xLzA7Zm9yKGU9MDtlPG87KytlKWlzTmFOKHI9K3RoaXMuX3guY2FsbChudWxsLG49dFtlXSkpfHxpc05hTihpPSt0aGlzLl95LmNhbGwobnVsbCxuKSl8fChhW2VdPXIsdVtlXT1pLHI8ZiYmKGY9cikscj5zJiYocz1yKSxpPGMmJihjPWkpLGk+bCYmKGw9aSkpO2ZvcihzPGYmJihmPXRoaXMuX3gwLHM9dGhpcy5feDEpLGw8YyYmKGM9dGhpcy5feTAsbD10aGlzLl95MSksdGhpcy5jb3ZlcihmLGMpLmNvdmVyKHMsbCksZT0wO2U8bzsrK2UpWWUodGhpcyxhW2VdLHVbZV0sdFtlXSk7cmV0dXJuIHRoaXN9LHJkLmNvdmVyPWZ1bmN0aW9uKHQsbil7aWYoaXNOYU4odD0rdCl8fGlzTmFOKG49K24pKXJldHVybiB0aGlzO3ZhciBlPXRoaXMuX3gwLHI9dGhpcy5feTAsaT10aGlzLl94MSxvPXRoaXMuX3kxO2lmKGlzTmFOKGUpKWk9KGU9TWF0aC5mbG9vcih0KSkrMSxvPShyPU1hdGguZmxvb3IobikpKzE7ZWxzZXtpZighKGU+dHx8dD5pfHxyPm58fG4+bykpcmV0dXJuIHRoaXM7dmFyIGEsdSxmPWktZSxjPXRoaXMuX3Jvb3Q7c3dpdGNoKHU9KG48KHIrbykvMik8PDF8dDwoZStpKS8yKXtjYXNlIDA6ZG97YT1uZXcgQXJyYXkoNCksYVt1XT1jLGM9YX13aGlsZShmKj0yLGk9ZStmLG89citmLHQ+aXx8bj5vKTticmVhaztjYXNlIDE6ZG97YT1uZXcgQXJyYXkoNCksYVt1XT1jLGM9YX13aGlsZShmKj0yLGU9aS1mLG89citmLGU+dHx8bj5vKTticmVhaztjYXNlIDI6ZG97YT1uZXcgQXJyYXkoNCksYVt1XT1jLGM9YX13aGlsZShmKj0yLGk9ZStmLHI9by1mLHQ+aXx8cj5uKTticmVhaztjYXNlIDM6ZG97YT1uZXcgQXJyYXkoNCksYVt1XT1jLGM9YX13aGlsZShmKj0yLGU9aS1mLHI9by1mLGU+dHx8cj5uKX10aGlzLl9yb290JiZ0aGlzLl9yb290Lmxlbmd0aCYmKHRoaXMuX3Jvb3Q9Yyl9cmV0dXJuIHRoaXMuX3gwPWUsdGhpcy5feTA9cix0aGlzLl94MT1pLHRoaXMuX3kxPW8sdGhpc30scmQuZGF0YT1mdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLnZpc2l0KGZ1bmN0aW9uKG4pe2lmKCFuLmxlbmd0aClkb3t0LnB1c2gobi5kYXRhKX13aGlsZShuPW4ubmV4dCl9KSx0fSxyZC5leHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5jb3ZlcigrdFswXVswXSwrdFswXVsxXSkuY292ZXIoK3RbMV1bMF0sK3RbMV1bMV0pOmlzTmFOKHRoaXMuX3gwKT92b2lkIDA6W1t0aGlzLl94MCx0aGlzLl95MF0sW3RoaXMuX3gxLHRoaXMuX3kxXV19LHJkLmZpbmQ9ZnVuY3Rpb24odCxuLGUpe3ZhciByLGksbyxhLHUsZixjLHM9dGhpcy5feDAsbD10aGlzLl95MCxoPXRoaXMuX3gxLGQ9dGhpcy5feTEscD1bXSx2PXRoaXMuX3Jvb3Q7Zm9yKHYmJnAucHVzaChuZXcgQmUodixzLGwsaCxkKSksbnVsbD09ZT9lPTEvMDoocz10LWUsbD1uLWUsaD10K2UsZD1uK2UsZSo9ZSk7Zj1wLnBvcCgpOylpZighKCEodj1mLm5vZGUpfHwoaT1mLngwKT5ofHwobz1mLnkwKT5kfHwoYT1mLngxKTxzfHwodT1mLnkxKTxsKSlpZih2Lmxlbmd0aCl7dmFyIGc9KGkrYSkvMix5PShvK3UpLzI7cC5wdXNoKG5ldyBCZSh2WzNdLGcseSxhLHUpLG5ldyBCZSh2WzJdLGkseSxnLHUpLG5ldyBCZSh2WzFdLGcsbyxhLHkpLG5ldyBCZSh2WzBdLGksbyxnLHkpKSwoYz0obj49eSk8PDF8dD49ZykmJihmPXBbcC5sZW5ndGgtMV0scFtwLmxlbmd0aC0xXT1wW3AubGVuZ3RoLTEtY10scFtwLmxlbmd0aC0xLWNdPWYpfWVsc2V7dmFyIF89dC0rdGhpcy5feC5jYWxsKG51bGwsdi5kYXRhKSxiPW4tK3RoaXMuX3kuY2FsbChudWxsLHYuZGF0YSksbT1fKl8rYipiO2lmKG08ZSl7dmFyIHg9TWF0aC5zcXJ0KGU9bSk7cz10LXgsbD1uLXgsaD10K3gsZD1uK3gscj12LmRhdGF9fXJldHVybiByfSxyZC5yZW1vdmU9ZnVuY3Rpb24odCl7aWYoaXNOYU4obz0rdGhpcy5feC5jYWxsKG51bGwsdCkpfHxpc05hTihhPSt0aGlzLl95LmNhbGwobnVsbCx0KSkpcmV0dXJuIHRoaXM7dmFyIG4sZSxyLGksbyxhLHUsZixjLHMsbCxoLGQ9dGhpcy5fcm9vdCxwPXRoaXMuX3gwLHY9dGhpcy5feTAsZz10aGlzLl94MSx5PXRoaXMuX3kxO2lmKCFkKXJldHVybiB0aGlzO2lmKGQubGVuZ3RoKWZvcig7Oyl7aWYoKGM9bz49KHU9KHArZykvMikpP3A9dTpnPXUsKHM9YT49KGY9KHYreSkvMikpP3Y9Zjp5PWYsbj1kLCEoZD1kW2w9czw8MXxjXSkpcmV0dXJuIHRoaXM7aWYoIWQubGVuZ3RoKWJyZWFrOyhuW2wrMSYzXXx8bltsKzImM118fG5bbCszJjNdKSYmKGU9bixoPWwpfWZvcig7ZC5kYXRhIT09dDspaWYocj1kLCEoZD1kLm5leHQpKXJldHVybiB0aGlzO3JldHVybihpPWQubmV4dCkmJmRlbGV0ZSBkLm5leHQscj8oaT9yLm5leHQ9aTpkZWxldGUgci5uZXh0LHRoaXMpOm4/KGk/bltsXT1pOmRlbGV0ZSBuW2xdLChkPW5bMF18fG5bMV18fG5bMl18fG5bM10pJiZkPT09KG5bM118fG5bMl18fG5bMV18fG5bMF0pJiYhZC5sZW5ndGgmJihlP2VbaF09ZDp0aGlzLl9yb290PWQpLHRoaXMpOih0aGlzLl9yb290PWksdGhpcyl9LHJkLnJlbW92ZUFsbD1mdW5jdGlvbih0KXtmb3IodmFyIG49MCxlPXQubGVuZ3RoO248ZTsrK24pdGhpcy5yZW1vdmUodFtuXSk7cmV0dXJuIHRoaXN9LHJkLnJvb3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcm9vdH0scmQuc2l6ZT1mdW5jdGlvbigpe3ZhciB0PTA7cmV0dXJuIHRoaXMudmlzaXQoZnVuY3Rpb24obil7aWYoIW4ubGVuZ3RoKWRveysrdH13aGlsZShuPW4ubmV4dCl9KSx0fSxyZC52aXNpdD1mdW5jdGlvbih0KXt2YXIgbixlLHIsaSxvLGEsdT1bXSxmPXRoaXMuX3Jvb3Q7Zm9yKGYmJnUucHVzaChuZXcgQmUoZix0aGlzLl94MCx0aGlzLl95MCx0aGlzLl94MSx0aGlzLl95MSkpO249dS5wb3AoKTspaWYoIXQoZj1uLm5vZGUscj1uLngwLGk9bi55MCxvPW4ueDEsYT1uLnkxKSYmZi5sZW5ndGgpe3ZhciBjPShyK28pLzIscz0oaSthKS8yOyhlPWZbM10pJiZ1LnB1c2gobmV3IEJlKGUsYyxzLG8sYSkpLChlPWZbMl0pJiZ1LnB1c2gobmV3IEJlKGUscixzLGMsYSkpLChlPWZbMV0pJiZ1LnB1c2gobmV3IEJlKGUsYyxpLG8scykpLChlPWZbMF0pJiZ1LnB1c2gobmV3IEJlKGUscixpLGMscykpfXJldHVybiB0aGlzfSxyZC52aXNpdEFmdGVyPWZ1bmN0aW9uKHQpe3ZhciBuLGU9W10scj1bXTtmb3IodGhpcy5fcm9vdCYmZS5wdXNoKG5ldyBCZSh0aGlzLl9yb290LHRoaXMuX3gwLHRoaXMuX3kwLHRoaXMuX3gxLHRoaXMuX3kxKSk7bj1lLnBvcCgpOyl7dmFyIGk9bi5ub2RlO2lmKGkubGVuZ3RoKXt2YXIgbyxhPW4ueDAsdT1uLnkwLGY9bi54MSxjPW4ueTEscz0oYStmKS8yLGw9KHUrYykvMjsobz1pWzBdKSYmZS5wdXNoKG5ldyBCZShvLGEsdSxzLGwpKSwobz1pWzFdKSYmZS5wdXNoKG5ldyBCZShvLHMsdSxmLGwpKSwobz1pWzJdKSYmZS5wdXNoKG5ldyBCZShvLGEsbCxzLGMpKSwobz1pWzNdKSYmZS5wdXNoKG5ldyBCZShvLHMsbCxmLGMpKX1yLnB1c2gobil9Zm9yKDtuPXIucG9wKCk7KXQobi5ub2RlLG4ueDAsbi55MCxuLngxLG4ueTEpO3JldHVybiB0aGlzfSxyZC54PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl94PXQsdGhpcyk6dGhpcy5feH0scmQueT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5feT10LHRoaXMpOnRoaXMuX3l9O3ZhciBpZD0xMCxvZD1NYXRoLlBJKigzLU1hdGguc3FydCg1KSksYWQ9L14oPzooLik/KFs8Pj1eXSkpPyhbK1wtXCggXSk/KFskI10pPygwKT8oXGQrKT8oLCk/KFwuXGQrKT8ofik/KFthLXolXSk/JC9pO3RyLnByb3RvdHlwZT1uci5wcm90b3R5cGUsbnIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZmlsbCt0aGlzLmFsaWduK3RoaXMuc2lnbit0aGlzLnN5bWJvbCsodGhpcy56ZXJvPyIwIjoiIikrKG51bGw9PXRoaXMud2lkdGg/IiI6TWF0aC5tYXgoMSwwfHRoaXMud2lkdGgpKSsodGhpcy5jb21tYT8iLCI6IiIpKyhudWxsPT10aGlzLnByZWNpc2lvbj8iIjoiLiIrTWF0aC5tYXgoMCwwfHRoaXMucHJlY2lzaW9uKSkrKHRoaXMudHJpbT8ifiI6IiIpK3RoaXMudHlwZX07dmFyIHVkLGZkLGNkPXsiJSI6ZnVuY3Rpb24odCxuKXtyZXR1cm4oMTAwKnQpLnRvRml4ZWQobil9LGI6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucm91bmQodCkudG9TdHJpbmcoMil9LGM6ZnVuY3Rpb24odCl7cmV0dXJuIHQrIiJ9LGQ6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucm91bmQodCkudG9TdHJpbmcoMTApfSxlOmZ1bmN0aW9uKHQsbil7cmV0dXJuIHQudG9FeHBvbmVudGlhbChuKX0sZjpmdW5jdGlvbih0LG4pe3JldHVybiB0LnRvRml4ZWQobil9LGc6ZnVuY3Rpb24odCxuKXtyZXR1cm4gdC50b1ByZWNpc2lvbihuKX0sbzpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5yb3VuZCh0KS50b1N0cmluZyg4KX0scDpmdW5jdGlvbih0LG4pe3JldHVybiBlcigxMDAqdCxuKX0scjplcixzOmZ1bmN0aW9uKHQsbil7dmFyIGU9SmUodCxuKTtpZighZSlyZXR1cm4gdCsiIjt2YXIgcj1lWzBdLGk9ZVsxXSxvPWktKHVkPTMqTWF0aC5tYXgoLTgsTWF0aC5taW4oOCxNYXRoLmZsb29yKGkvMykpKSkrMSxhPXIubGVuZ3RoO3JldHVybiBvPT09YT9yOm8+YT9yK25ldyBBcnJheShvLWErMSkuam9pbigiMCIpOm8+MD9yLnNsaWNlKDAsbykrIi4iK3Iuc2xpY2Uobyk6IjAuIituZXcgQXJyYXkoMS1vKS5qb2luKCIwIikrSmUodCxNYXRoLm1heCgwLG4rby0xKSlbMF19LFg6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucm91bmQodCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9LHg6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucm91bmQodCkudG9TdHJpbmcoMTYpfX0sc2Q9WyJ5IiwieiIsImEiLCJmIiwicCIsIm4iLCLDgsK1IiwibSIsIiIsImsiLCJNIiwiRyIsIlQiLCJQIiwiRSIsIloiLCJZIl07b3Ioe2RlY2ltYWw6Ii4iLHRob3VzYW5kczoiLCIsZ3JvdXBpbmc6WzNdLGN1cnJlbmN5OlsiJCIsIiJdfSksc3IucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpzcixyZXNldDpmdW5jdGlvbigpe3RoaXMucz10aGlzLnQ9MH0sYWRkOmZ1bmN0aW9uKHQpe2xyKElkLHQsdGhpcy50KSxscih0aGlzLElkLnMsdGhpcy5zKSx0aGlzLnM/dGhpcy50Kz1JZC50OnRoaXMucz1JZC50fSx2YWx1ZU9mOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc319O3ZhciBsZCxoZCxkZCxwZCx2ZCxnZCx5ZCxfZCxiZCxtZCx4ZCx3ZCxNZCxBZCxUZCxOZCxTZCxFZCxrZCxDZCxQZCx6ZCxSZCxMZCxEZCxVZCxxZCxPZCxZZCxCZCxGZCxJZD1uZXcgc3IsamQ9MWUtNixIZD0xZS0xMixYZD1NYXRoLlBJLEdkPVhkLzIsVmQ9WGQvNCwkZD0yKlhkLFdkPTE4MC9YZCxaZD1YZC8xODAsUWQ9TWF0aC5hYnMsSmQ9TWF0aC5hdGFuLEtkPU1hdGguYXRhbjIsdHA9TWF0aC5jb3MsbnA9TWF0aC5jZWlsLGVwPU1hdGguZXhwLHJwPU1hdGgubG9nLGlwPU1hdGgucG93LG9wPU1hdGguc2luLGFwPU1hdGguc2lnbnx8ZnVuY3Rpb24odCl7cmV0dXJuIHQ+MD8xOnQ8MD8tMTowfSx1cD1NYXRoLnNxcnQsZnA9TWF0aC50YW4sY3A9e0ZlYXR1cmU6ZnVuY3Rpb24odCxuKXtncih0Lmdlb21ldHJ5LG4pfSxGZWF0dXJlQ29sbGVjdGlvbjpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmZlYXR1cmVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspZ3IoZVtyXS5nZW9tZXRyeSxuKX19LHNwPXtTcGhlcmU6ZnVuY3Rpb24odCxuKXtuLnNwaGVyZSgpfSxQb2ludDpmdW5jdGlvbih0LG4pe3Q9dC5jb29yZGluYXRlcyxuLnBvaW50KHRbMF0sdFsxXSx0WzJdKX0sTXVsdGlQb2ludDpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmNvb3JkaW5hdGVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspdD1lW3JdLG4ucG9pbnQodFswXSx0WzFdLHRbMl0pfSxMaW5lU3RyaW5nOmZ1bmN0aW9uKHQsbil7eXIodC5jb29yZGluYXRlcyxuLDApfSxNdWx0aUxpbmVTdHJpbmc6ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9dC5jb29yZGluYXRlcyxyPS0xLGk9ZS5sZW5ndGg7KytyPGk7KXlyKGVbcl0sbiwwKX0sUG9seWdvbjpmdW5jdGlvbih0LG4pe19yKHQuY29vcmRpbmF0ZXMsbil9LE11bHRpUG9seWdvbjpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmNvb3JkaW5hdGVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspX3IoZVtyXSxuKX0sR2VvbWV0cnlDb2xsZWN0aW9uOmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPXQuZ2VvbWV0cmllcyxyPS0xLGk9ZS5sZW5ndGg7KytyPGk7KWdyKGVbcl0sbil9fSxscD1jcigpLGhwPWNyKCksZHA9e3BvaW50OnZyLGxpbmVTdGFydDp2cixsaW5lRW5kOnZyLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe2xwLnJlc2V0KCksZHAubGluZVN0YXJ0PW1yLGRwLmxpbmVFbmQ9eHJ9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt2YXIgdD0rbHA7aHAuYWRkKHQ8MD8kZCt0OnQpLHRoaXMubGluZVN0YXJ0PXRoaXMubGluZUVuZD10aGlzLnBvaW50PXZyfSxzcGhlcmU6ZnVuY3Rpb24oKXtocC5hZGQoJGQpfX0scHA9Y3IoKSx2cD17cG9pbnQ6UHIsbGluZVN0YXJ0OlJyLGxpbmVFbmQ6THIscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7dnAucG9pbnQ9RHIsdnAubGluZVN0YXJ0PVVyLHZwLmxpbmVFbmQ9cXIscHAucmVzZXQoKSxkcC5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe2RwLnBvbHlnb25FbmQoKSx2cC5wb2ludD1Qcix2cC5saW5lU3RhcnQ9UnIsdnAubGluZUVuZD1McixscDwwPyhnZD0tKF9kPTE4MCkseWQ9LShiZD05MCkpOnBwPmpkP2JkPTkwOnBwPC1qZCYmKHlkPS05MCksVGRbMF09Z2QsVGRbMV09X2R9fSxncD17c3BoZXJlOnZyLHBvaW50OkZyLGxpbmVTdGFydDpqcixsaW5lRW5kOkdyLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe2dwLmxpbmVTdGFydD1WcixncC5saW5lRW5kPSRyfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7Z3AubGluZVN0YXJ0PWpyLGdwLmxpbmVFbmQ9R3J9fTtLci5pbnZlcnQ9S3I7dmFyIHlwLF9wLGJwLG1wLHhwLHdwLE1wLEFwLFRwLE5wLFNwLEVwPWNyKCksa3A9ZGkoZnVuY3Rpb24oKXtyZXR1cm4hMH0sZnVuY3Rpb24odCl7dmFyIG4sZT1OYU4scj1OYU4saT1OYU47cmV0dXJue2xpbmVTdGFydDpmdW5jdGlvbigpe3QubGluZVN0YXJ0KCksbj0xfSxwb2ludDpmdW5jdGlvbihvLGEpe3ZhciB1PW8+MD9YZDotWGQsZj1RZChvLWUpO1FkKGYtWGQpPGpkPyh0LnBvaW50KGUscj0ocithKS8yPjA/R2Q6LUdkKSx0LnBvaW50KGksciksdC5saW5lRW5kKCksdC5saW5lU3RhcnQoKSx0LnBvaW50KHUsciksdC5wb2ludChvLHIpLG49MCk6aSE9PXUmJmY+PVhkJiYoUWQoZS1pKTxqZCYmKGUtPWkqamQpLFFkKG8tdSk8amQmJihvLT11KmpkKSxyPWZ1bmN0aW9uKHQsbixlLHIpe3ZhciBpLG8sYT1vcCh0LWUpO3JldHVybiBRZChhKT5qZD9KZCgob3AobikqKG89dHAocikpKm9wKGUpLW9wKHIpKihpPXRwKG4pKSpvcCh0KSkvKGkqbyphKSk6KG4rcikvMn0oZSxyLG8sYSksdC5wb2ludChpLHIpLHQubGluZUVuZCgpLHQubGluZVN0YXJ0KCksdC5wb2ludCh1LHIpLG49MCksdC5wb2ludChlPW8scj1hKSxpPXV9LGxpbmVFbmQ6ZnVuY3Rpb24oKXt0LmxpbmVFbmQoKSxlPXI9TmFOfSxjbGVhbjpmdW5jdGlvbigpe3JldHVybiAyLW59fX0sZnVuY3Rpb24odCxuLGUscil7dmFyIGk7aWYobnVsbD09dClpPWUqR2Qsci5wb2ludCgtWGQsaSksci5wb2ludCgwLGkpLHIucG9pbnQoWGQsaSksci5wb2ludChYZCwwKSxyLnBvaW50KFhkLC1pKSxyLnBvaW50KDAsLWkpLHIucG9pbnQoLVhkLC1pKSxyLnBvaW50KC1YZCwwKSxyLnBvaW50KC1YZCxpKTtlbHNlIGlmKFFkKHRbMF0tblswXSk+amQpe3ZhciBvPXRbMF08blswXT9YZDotWGQ7aT1lKm8vMixyLnBvaW50KC1vLGkpLHIucG9pbnQoMCxpKSxyLnBvaW50KG8saSl9ZWxzZSByLnBvaW50KG5bMF0sblsxXSl9LFstWGQsLUdkXSksQ3A9MWU5LFBwPS1DcCx6cD1jcigpLFJwPXtzcGhlcmU6dnIscG9pbnQ6dnIsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7UnAucG9pbnQ9YmksUnAubGluZUVuZD1faX0sbGluZUVuZDp2cixwb2x5Z29uU3RhcnQ6dnIscG9seWdvbkVuZDp2cn0sTHA9W251bGwsbnVsbF0sRHA9e3R5cGU6IkxpbmVTdHJpbmciLGNvb3JkaW5hdGVzOkxwfSxVcD17RmVhdHVyZTpmdW5jdGlvbih0LG4pe3JldHVybiBNaSh0Lmdlb21ldHJ5LG4pfSxGZWF0dXJlQ29sbGVjdGlvbjpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmZlYXR1cmVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspaWYoTWkoZVtyXS5nZW9tZXRyeSxuKSlyZXR1cm4hMDtyZXR1cm4hMX19LHFwPXtTcGhlcmU6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sUG9pbnQ6ZnVuY3Rpb24odCxuKXtyZXR1cm4gQWkodC5jb29yZGluYXRlcyxuKX0sTXVsdGlQb2ludDpmdW5jdGlvbih0LG4pe2Zvcih2YXIgZT10LmNvb3JkaW5hdGVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspaWYoQWkoZVtyXSxuKSlyZXR1cm4hMDtyZXR1cm4hMX0sTGluZVN0cmluZzpmdW5jdGlvbih0LG4pe3JldHVybiBUaSh0LmNvb3JkaW5hdGVzLG4pfSxNdWx0aUxpbmVTdHJpbmc6ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9dC5jb29yZGluYXRlcyxyPS0xLGk9ZS5sZW5ndGg7KytyPGk7KWlmKFRpKGVbcl0sbikpcmV0dXJuITA7cmV0dXJuITF9LFBvbHlnb246ZnVuY3Rpb24odCxuKXtyZXR1cm4gTmkodC5jb29yZGluYXRlcyxuKX0sTXVsdGlQb2x5Z29uOmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBlPXQuY29vcmRpbmF0ZXMscj0tMSxpPWUubGVuZ3RoOysrcjxpOylpZihOaShlW3JdLG4pKXJldHVybiEwO3JldHVybiExfSxHZW9tZXRyeUNvbGxlY3Rpb246ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9dC5nZW9tZXRyaWVzLHI9LTEsaT1lLmxlbmd0aDsrK3I8aTspaWYoTWkoZVtyXSxuKSlyZXR1cm4hMDtyZXR1cm4hMX19LE9wPWNyKCksWXA9Y3IoKSxCcD17cG9pbnQ6dnIsbGluZVN0YXJ0OnZyLGxpbmVFbmQ6dnIscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7QnAubGluZVN0YXJ0PVJpLEJwLmxpbmVFbmQ9VWl9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtCcC5saW5lU3RhcnQ9QnAubGluZUVuZD1CcC5wb2ludD12cixPcC5hZGQoUWQoWXApKSxZcC5yZXNldCgpfSxyZXN1bHQ6ZnVuY3Rpb24oKXt2YXIgdD1PcC8yO3JldHVybiBPcC5yZXNldCgpLHR9fSxGcD0xLzAsSXA9RnAsanA9LUZwLEhwPWpwLFhwPXtwb2ludDpmdW5jdGlvbih0LG4pe3Q8RnAmJihGcD10KSx0PmpwJiYoanA9dCksbjxJcCYmKElwPW4pLG4+SHAmJihIcD1uKX0sbGluZVN0YXJ0OnZyLGxpbmVFbmQ6dnIscG9seWdvblN0YXJ0OnZyLHBvbHlnb25FbmQ6dnIscmVzdWx0OmZ1bmN0aW9uKCl7dmFyIHQ9W1tGcCxJcF0sW2pwLEhwXV07cmV0dXJuIGpwPUhwPS0oSXA9RnA9MS8wKSx0fX0sR3A9MCxWcD0wLCRwPTAsV3A9MCxacD0wLFFwPTAsSnA9MCxLcD0wLHR2PTAsbnY9e3BvaW50OnFpLGxpbmVTdGFydDpPaSxsaW5lRW5kOkZpLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe252LmxpbmVTdGFydD1JaSxudi5saW5lRW5kPWppfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7bnYucG9pbnQ9cWksbnYubGluZVN0YXJ0PU9pLG52LmxpbmVFbmQ9Rml9LHJlc3VsdDpmdW5jdGlvbigpe3ZhciB0PXR2P1tKcC90dixLcC90dl06UXA/W1dwL1FwLFpwL1FwXTokcD9bR3AvJHAsVnAvJHBdOltOYU4sTmFOXTtyZXR1cm4gR3A9VnA9JHA9V3A9WnA9UXA9SnA9S3A9dHY9MCx0fX07R2kucHJvdG90eXBlPXtfcmFkaXVzOjQuNSxwb2ludFJhZGl1czpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcmFkaXVzPXQsdGhpc30scG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXswPT09dGhpcy5fbGluZSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9wb2ludD1OYU59LHBvaW50OmZ1bmN0aW9uKHQsbil7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKSx0aGlzLl9wb2ludD0xO2JyZWFrO2Nhc2UgMTp0aGlzLl9jb250ZXh0LmxpbmVUbyh0LG4pO2JyZWFrO2RlZmF1bHQ6dGhpcy5fY29udGV4dC5tb3ZlVG8odCt0aGlzLl9yYWRpdXMsbiksdGhpcy5fY29udGV4dC5hcmModCxuLHRoaXMuX3JhZGl1cywwLCRkKX19LHJlc3VsdDp2cn07dmFyIGV2LHJ2LGl2LG92LGF2LHV2PWNyKCksZnY9e3BvaW50OnZyLGxpbmVTdGFydDpmdW5jdGlvbigpe2Z2LnBvaW50PVZpfSxsaW5lRW5kOmZ1bmN0aW9uKCl7ZXYmJiRpKHJ2LGl2KSxmdi5wb2ludD12cn0scG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7ZXY9ITB9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtldj1udWxsfSxyZXN1bHQ6ZnVuY3Rpb24oKXt2YXIgdD0rdXY7cmV0dXJuIHV2LnJlc2V0KCksdH19O1dpLnByb3RvdHlwZT17X3JhZGl1czo0LjUsX2NpcmNsZTpaaSg0LjUpLHBvaW50UmFkaXVzOmZ1bmN0aW9uKHQpe3JldHVybih0PSt0KSE9PXRoaXMuX3JhZGl1cyYmKHRoaXMuX3JhZGl1cz10LHRoaXMuX2NpcmNsZT1udWxsKSx0aGlzfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpezA9PT10aGlzLl9saW5lJiZ0aGlzLl9zdHJpbmcucHVzaCgiWiIpLHRoaXMuX3BvaW50PU5hTn0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9zdHJpbmcucHVzaCgiTSIsdCwiLCIsbiksdGhpcy5fcG9pbnQ9MTticmVhaztjYXNlIDE6dGhpcy5fc3RyaW5nLnB1c2goIkwiLHQsIiwiLG4pO2JyZWFrO2RlZmF1bHQ6bnVsbD09dGhpcy5fY2lyY2xlJiYodGhpcy5fY2lyY2xlPVppKHRoaXMuX3JhZGl1cykpLHRoaXMuX3N0cmluZy5wdXNoKCJNIix0LCIsIixuLHRoaXMuX2NpcmNsZSl9fSxyZXN1bHQ6ZnVuY3Rpb24oKXtpZih0aGlzLl9zdHJpbmcubGVuZ3RoKXt2YXIgdD10aGlzLl9zdHJpbmcuam9pbigiIik7cmV0dXJuIHRoaXMuX3N0cmluZz1bXSx0fXJldHVybiBudWxsfX0sSmkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpKaSxwb2ludDpmdW5jdGlvbih0LG4pe3RoaXMuc3RyZWFtLnBvaW50KHQsbil9LHNwaGVyZTpmdW5jdGlvbigpe3RoaXMuc3RyZWFtLnNwaGVyZSgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe3RoaXMuc3RyZWFtLmxpbmVFbmQoKX0scG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5zdHJlYW0ucG9seWdvblN0YXJ0KCl9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5wb2x5Z29uRW5kKCl9fTt2YXIgY3Y9MTYsc3Y9dHAoMzAqWmQpLGx2PVFpKHtwb2ludDpmdW5jdGlvbih0LG4pe3RoaXMuc3RyZWFtLnBvaW50KHQqWmQsbipaZCl9fSksaHY9aG8oZnVuY3Rpb24odCl7cmV0dXJuIHVwKDIvKDErdCkpfSk7aHYuaW52ZXJ0PXBvKGZ1bmN0aW9uKHQpe3JldHVybiAyKmRyKHQvMil9KTt2YXIgZHY9aG8oZnVuY3Rpb24odCl7cmV0dXJuKHQ9aHIodCkpJiZ0L29wKHQpfSk7ZHYuaW52ZXJ0PXBvKGZ1bmN0aW9uKHQpe3JldHVybiB0fSksdm8uaW52ZXJ0PWZ1bmN0aW9uKHQsbil7cmV0dXJuW3QsMipKZChlcChuKSktR2RdfSxiby5pbnZlcnQ9Ym8seG8uaW52ZXJ0PXBvKEpkKSxNby5pbnZlcnQ9ZnVuY3Rpb24odCxuKXt2YXIgZSxyPW4saT0yNTtkb3t2YXIgbz1yKnIsYT1vKm87ci09ZT0ociooMS4wMDcyMjYrbyooLjAxNTA4NSthKiguMDI4ODc0Km8tLjA0NDQ3NS0uMDA1OTE2KmEpKSktbikvKDEuMDA3MjI2K28qKC4wNDUyNTUrYSooLjI1OTg2NipvLS4zMTEzMjUtLjAwNTkxNioxMSphKSkpfXdoaWxlKFFkKGUpPmpkJiYtLWk+MCk7cmV0dXJuW3QvKC44NzA3KyhvPXIqcikqKG8qKG8qbypvKiguMDAzOTcxLS4wMDE1MjkqbyktLjAxMzc5MSktLjEzMTk3OSkpLHJdfSxBby5pbnZlcnQ9cG8oZHIpLFRvLmludmVydD1wbyhmdW5jdGlvbih0KXtyZXR1cm4gMipKZCh0KX0pLE5vLmludmVydD1mdW5jdGlvbih0LG4pe3JldHVyblstbiwyKkpkKGVwKHQpKS1HZF19LERvLnByb3RvdHlwZT1Qby5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkRvLGNvdW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaEFmdGVyKENvKX0sZWFjaDpmdW5jdGlvbih0KXt2YXIgbixlLHIsaSxvPXRoaXMsYT1bb107ZG97Zm9yKG49YS5yZXZlcnNlKCksYT1bXTtvPW4ucG9wKCk7KWlmKHQobyksZT1vLmNoaWxkcmVuKWZvcihyPTAsaT1lLmxlbmd0aDtyPGk7KytyKWEucHVzaChlW3JdKX13aGlsZShhLmxlbmd0aCk7cmV0dXJuIHRoaXN9LGVhY2hBZnRlcjpmdW5jdGlvbih0KXtmb3IodmFyIG4sZSxyLGk9dGhpcyxvPVtpXSxhPVtdO2k9by5wb3AoKTspaWYoYS5wdXNoKGkpLG49aS5jaGlsZHJlbilmb3IoZT0wLHI9bi5sZW5ndGg7ZTxyOysrZSlvLnB1c2gobltlXSk7Zm9yKDtpPWEucG9wKCk7KXQoaSk7cmV0dXJuIHRoaXN9LGVhY2hCZWZvcmU6ZnVuY3Rpb24odCl7Zm9yKHZhciBuLGUscj10aGlzLGk9W3JdO3I9aS5wb3AoKTspaWYodChyKSxuPXIuY2hpbGRyZW4pZm9yKGU9bi5sZW5ndGgtMTtlPj0wOy0tZSlpLnB1c2gobltlXSk7cmV0dXJuIHRoaXN9LHN1bTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lYWNoQWZ0ZXIoZnVuY3Rpb24obil7Zm9yKHZhciBlPSt0KG4uZGF0YSl8fDAscj1uLmNoaWxkcmVuLGk9ciYmci5sZW5ndGg7LS1pPj0wOyllKz1yW2ldLnZhbHVlO24udmFsdWU9ZX0pfSxzb3J0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVhY2hCZWZvcmUoZnVuY3Rpb24obil7bi5jaGlsZHJlbiYmbi5jaGlsZHJlbi5zb3J0KHQpfSl9LHBhdGg6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPXRoaXMsZT1mdW5jdGlvbih0LG4pe2lmKHQ9PT1uKXJldHVybiB0O3ZhciBlPXQuYW5jZXN0b3JzKCkscj1uLmFuY2VzdG9ycygpLGk9bnVsbDtmb3IodD1lLnBvcCgpLG49ci5wb3AoKTt0PT09bjspaT10LHQ9ZS5wb3AoKSxuPXIucG9wKCk7cmV0dXJuIGl9KG4sdCkscj1bbl07biE9PWU7KW49bi5wYXJlbnQsci5wdXNoKG4pO2Zvcih2YXIgaT1yLmxlbmd0aDt0IT09ZTspci5zcGxpY2UoaSwwLHQpLHQ9dC5wYXJlbnQ7cmV0dXJuIHJ9LGFuY2VzdG9yczpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLG49W3RdO3Q9dC5wYXJlbnQ7KW4ucHVzaCh0KTtyZXR1cm4gbn0sZGVzY2VuZGFudHM6ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKG4pe3QucHVzaChuKX0pLHR9LGxlYXZlczpmdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLmVhY2hCZWZvcmUoZnVuY3Rpb24obil7bi5jaGlsZHJlbnx8dC5wdXNoKG4pfSksdH0sbGlua3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLG49W107cmV0dXJuIHQuZWFjaChmdW5jdGlvbihlKXtlIT09dCYmbi5wdXNoKHtzb3VyY2U6ZS5wYXJlbnQsdGFyZ2V0OmV9KX0pLG59LGNvcHk6ZnVuY3Rpb24oKXtyZXR1cm4gUG8odGhpcykuZWFjaEJlZm9yZShSbyl9fTt2YXIgcHY9QXJyYXkucHJvdG90eXBlLnNsaWNlLHZ2PSIkIixndj17ZGVwdGg6LTF9LHl2PXt9O2NhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKERvLnByb3RvdHlwZSk7dmFyIF92PSgxK01hdGguc3FydCg1KSkvMixidj1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCxlLHIsaSxvKXtsYShuLHQsZSxyLGksbyl9cmV0dXJuIGUucmF0aW89ZnVuY3Rpb24obil7cmV0dXJuIHQoKG49K24pPjE/bjoxKX0sZX0oX3YpLG12PWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0LGUscixpLG8pe2lmKChhPXQuX3NxdWFyaWZ5KSYmYS5yYXRpbz09PW4pZm9yKHZhciBhLHUsZixjLHMsbD0tMSxoPWEubGVuZ3RoLGQ9dC52YWx1ZTsrK2w8aDspe2ZvcihmPSh1PWFbbF0pLmNoaWxkcmVuLGM9dS52YWx1ZT0wLHM9Zi5sZW5ndGg7YzxzOysrYyl1LnZhbHVlKz1mW2NdLnZhbHVlO3UuZGljZT9uYSh1LGUscixpLHIrPShvLXIpKnUudmFsdWUvZCk6c2EodSxlLHIsZSs9KGktZSkqdS52YWx1ZS9kLG8pLGQtPXUudmFsdWV9ZWxzZSB0Ll9zcXVhcmlmeT1hPWxhKG4sdCxlLHIsaSxvKSxhLnJhdGlvPW59cmV0dXJuIGUucmF0aW89ZnVuY3Rpb24obil7cmV0dXJuIHQoKG49K24pPjE/bjoxKX0sZX0oX3YpLHh2PWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0LGUpe3JldHVybiB0PW51bGw9PXQ/MDordCxlPW51bGw9PWU/MTorZSwxPT09YXJndW1lbnRzLmxlbmd0aD8oZT10LHQ9MCk6ZS09dCxmdW5jdGlvbigpe3JldHVybiBuKCkqZSt0fX1yZXR1cm4gZS5zb3VyY2U9dCxlfSh2YSksd3Y9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQsZSl7dmFyIHIsaTtyZXR1cm4gdD1udWxsPT10PzA6K3QsZT1udWxsPT1lPzE6K2UsZnVuY3Rpb24oKXt2YXIgbztpZihudWxsIT1yKW89cixyPW51bGw7ZWxzZSBkb3tyPTIqbigpLTEsbz0yKm4oKS0xLGk9cipyK28qb313aGlsZSghaXx8aT4xKTtyZXR1cm4gdCtlKm8qTWF0aC5zcXJ0KC0yKk1hdGgubG9nKGkpL2kpfX1yZXR1cm4gZS5zb3VyY2U9dCxlfSh2YSksTXY9ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKCl7dmFyIHQ9d3Yuc291cmNlKG4pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5leHAodCgpKX19cmV0dXJuIGUuc291cmNlPXQsZX0odmEpLEF2PWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGU9MCxyPTA7cjx0OysrcillKz1uKCk7cmV0dXJuIGV9fXJldHVybiBlLnNvdXJjZT10LGV9KHZhKSxUdj1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7dmFyIGU9QXYuc291cmNlKG4pKHQpO3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlKCkvdH19cmV0dXJuIGUuc291cmNlPXQsZX0odmEpLE52PWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4tTWF0aC5sb2coMS1uKCkpL3R9fXJldHVybiBlLnNvdXJjZT10LGV9KHZhKSxTdj1BcnJheS5wcm90b3R5cGUsRXY9U3YubWFwLGt2PVN2LnNsaWNlLEN2PXtuYW1lOiJpbXBsaWNpdCJ9LFB2PVswLDFdLHp2PW5ldyBEYXRlLFJ2PW5ldyBEYXRlLEx2PUlhKGZ1bmN0aW9uKCl7fSxmdW5jdGlvbih0LG4pe3Quc2V0VGltZSgrdCtuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4gbi10fSk7THYuZXZlcnk9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9TWF0aC5mbG9vcih0KSxpc0Zpbml0ZSh0KSYmdD4wP3Q+MT9JYShmdW5jdGlvbihuKXtuLnNldFRpbWUoTWF0aC5mbG9vcihuL3QpKnQpfSxmdW5jdGlvbihuLGUpe24uc2V0VGltZSgrbitlKnQpfSxmdW5jdGlvbihuLGUpe3JldHVybihlLW4pL3R9KTpMdjpudWxsfTt2YXIgRHY9THYucmFuZ2UsVXY9NmU0LHF2PTYwNDhlNSxPdj1JYShmdW5jdGlvbih0KXt0LnNldFRpbWUoMWUzKk1hdGguZmxvb3IodC8xZTMpKX0sZnVuY3Rpb24odCxuKXt0LnNldFRpbWUoK3QrMWUzKm4pfSxmdW5jdGlvbih0LG4pe3JldHVybihuLXQpLzFlM30sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0VVRDU2Vjb25kcygpfSksWXY9T3YucmFuZ2UsQnY9SWEoZnVuY3Rpb24odCl7dC5zZXRUaW1lKE1hdGguZmxvb3IodC9VdikqVXYpfSxmdW5jdGlvbih0LG4pe3Quc2V0VGltZSgrdCtuKlV2KX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS9Vdn0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0TWludXRlcygpfSksRnY9QnYucmFuZ2UsSXY9SWEoZnVuY3Rpb24odCl7dmFyIG49dC5nZXRUaW1lem9uZU9mZnNldCgpKlV2JTM2ZTU7bjwwJiYobis9MzZlNSksdC5zZXRUaW1lKDM2ZTUqTWF0aC5mbG9vcigoK3QtbikvMzZlNSkrbil9LGZ1bmN0aW9uKHQsbil7dC5zZXRUaW1lKCt0KzM2ZTUqbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuKG4tdCkvMzZlNX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0SG91cnMoKX0pLGp2PUl2LnJhbmdlLEh2PUlhKGZ1bmN0aW9uKHQpe3Quc2V0SG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKHQsbil7dC5zZXREYXRlKHQuZ2V0RGF0ZSgpK24pfSxmdW5jdGlvbih0LG4pe3JldHVybihuLXQtKG4uZ2V0VGltZXpvbmVPZmZzZXQoKS10LmdldFRpbWV6b25lT2Zmc2V0KCkpKlV2KS84NjRlNX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0RGF0ZSgpLTF9KSxYdj1Idi5yYW5nZSxHdj1qYSgwKSxWdj1qYSgxKSwkdj1qYSgyKSxXdj1qYSgzKSxadj1qYSg0KSxRdj1qYSg1KSxKdj1qYSg2KSxLdj1Hdi5yYW5nZSx0Zz1Wdi5yYW5nZSxuZz0kdi5yYW5nZSxlZz1Xdi5yYW5nZSxyZz1adi5yYW5nZSxpZz1Rdi5yYW5nZSxvZz1Kdi5yYW5nZSxhZz1JYShmdW5jdGlvbih0KXt0LnNldERhdGUoMSksdC5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldE1vbnRoKHQuZ2V0TW9udGgoKStuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4gbi5nZXRNb250aCgpLXQuZ2V0TW9udGgoKSsxMioobi5nZXRGdWxsWWVhcigpLXQuZ2V0RnVsbFllYXIoKSl9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldE1vbnRoKCl9KSx1Zz1hZy5yYW5nZSxmZz1JYShmdW5jdGlvbih0KXt0LnNldE1vbnRoKDAsMSksdC5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldEZ1bGxZZWFyKHQuZ2V0RnVsbFllYXIoKStuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4gbi5nZXRGdWxsWWVhcigpLXQuZ2V0RnVsbFllYXIoKX0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0RnVsbFllYXIoKX0pO2ZnLmV2ZXJ5PWZ1bmN0aW9uKHQpe3JldHVybiBpc0Zpbml0ZSh0PU1hdGguZmxvb3IodCkpJiZ0PjA/SWEoZnVuY3Rpb24obil7bi5zZXRGdWxsWWVhcihNYXRoLmZsb29yKG4uZ2V0RnVsbFllYXIoKS90KSp0KSxuLnNldE1vbnRoKDAsMSksbi5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24obixlKXtuLnNldEZ1bGxZZWFyKG4uZ2V0RnVsbFllYXIoKStlKnQpfSk6bnVsbH07dmFyIGNnPWZnLnJhbmdlLHNnPUlhKGZ1bmN0aW9uKHQpe3Quc2V0VVRDU2Vjb25kcygwLDApfSxmdW5jdGlvbih0LG4pe3Quc2V0VGltZSgrdCtuKlV2KX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS9Vdn0sZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0VVRDTWludXRlcygpfSksbGc9c2cucmFuZ2UsaGc9SWEoZnVuY3Rpb24odCl7dC5zZXRVVENNaW51dGVzKDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldFRpbWUoK3QrMzZlNSpuKX0sZnVuY3Rpb24odCxuKXtyZXR1cm4obi10KS8zNmU1fSxmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRVVENIb3VycygpfSksZGc9aGcucmFuZ2UscGc9SWEoZnVuY3Rpb24odCl7dC5zZXRVVENIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24odCxuKXt0LnNldFVUQ0RhdGUodC5nZXRVVENEYXRlKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuKG4tdCkvODY0ZTV9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFVUQ0RhdGUoKS0xfSksdmc9cGcucmFuZ2UsZ2c9SGEoMCkseWc9SGEoMSksX2c9SGEoMiksYmc9SGEoMyksbWc9SGEoNCkseGc9SGEoNSksd2c9SGEoNiksTWc9Z2cucmFuZ2UsQWc9eWcucmFuZ2UsVGc9X2cucmFuZ2UsTmc9YmcucmFuZ2UsU2c9bWcucmFuZ2UsRWc9eGcucmFuZ2Usa2c9d2cucmFuZ2UsQ2c9SWEoZnVuY3Rpb24odCl7dC5zZXRVVENEYXRlKDEpLHQuc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKHQsbil7dC5zZXRVVENNb250aCh0LmdldFVUQ01vbnRoKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4uZ2V0VVRDTW9udGgoKS10LmdldFVUQ01vbnRoKCkrMTIqKG4uZ2V0VVRDRnVsbFllYXIoKS10LmdldFVUQ0Z1bGxZZWFyKCkpfSxmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRVVENNb250aCgpfSksUGc9Q2cucmFuZ2Usemc9SWEoZnVuY3Rpb24odCl7dC5zZXRVVENNb250aCgwLDEpLHQuc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKHQsbil7dC5zZXRVVENGdWxsWWVhcih0LmdldFVUQ0Z1bGxZZWFyKCkrbil9LGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4uZ2V0VVRDRnVsbFllYXIoKS10LmdldFVUQ0Z1bGxZZWFyKCl9LGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFVUQ0Z1bGxZZWFyKCl9KTt6Zy5ldmVyeT1mdW5jdGlvbih0KXtyZXR1cm4gaXNGaW5pdGUodD1NYXRoLmZsb29yKHQpKSYmdD4wP0lhKGZ1bmN0aW9uKG4pe24uc2V0VVRDRnVsbFllYXIoTWF0aC5mbG9vcihuLmdldFVUQ0Z1bGxZZWFyKCkvdCkqdCksbi5zZXRVVENNb250aCgwLDEpLG4uc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKG4sZSl7bi5zZXRVVENGdWxsWWVhcihuLmdldFVUQ0Z1bGxZZWFyKCkrZSp0KX0pOm51bGx9O3ZhciBSZyxMZz16Zy5yYW5nZSxEZz17Ii0iOiIiLF86IiAiLDA6IjAifSxVZz0vXlxzKlxkKy8scWc9L14lLyxPZz0vW1xcXiQqKz98W1xdKCkue31dL2c7bmYoe2RhdGVUaW1lOiIleCwgJVgiLGRhdGU6IiUtbS8lLWQvJVkiLHRpbWU6IiUtSTolTTolUyAlcCIscGVyaW9kczpbIkFNIiwiUE0iXSxkYXlzOlsiU3VuZGF5IiwiTW9uZGF5IiwiVHVlc2RheSIsIldlZG5lc2RheSIsIlRodXJzZGF5IiwiRnJpZGF5IiwiU2F0dXJkYXkiXSxzaG9ydERheXM6WyJTdW4iLCJNb24iLCJUdWUiLCJXZWQiLCJUaHUiLCJGcmkiLCJTYXQiXSxtb250aHM6WyJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsIkp1bHkiLCJBdWd1c3QiLCJTZXB0ZW1iZXIiLCJPY3RvYmVyIiwiTm92ZW1iZXIiLCJEZWNlbWJlciJdLHNob3J0TW9udGhzOlsiSmFuIiwiRmViIiwiTWFyIiwiQXByIiwiTWF5IiwiSnVuIiwiSnVsIiwiQXVnIiwiU2VwIiwiT2N0IiwiTm92IiwiRGVjIl19KTt2YXIgWWc9IiVZLSVtLSVkVCVIOiVNOiVTLiVMWiIsQmc9RGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc/ZnVuY3Rpb24odCl7cmV0dXJuIHQudG9JU09TdHJpbmcoKX06dC51dGNGb3JtYXQoWWcpLEZnPStuZXcgRGF0ZSgiMjAwMC0wMS0wMVQwMDowMDowMC4wMDBaIik/ZnVuY3Rpb24odCl7dmFyIG49bmV3IERhdGUodCk7cmV0dXJuIGlzTmFOKG4pP251bGw6bn06dC51dGNQYXJzZShZZyksSWc9MWUzLGpnPTYwKklnLEhnPTYwKmpnLFhnPTI0KkhnLEdnPTcqWGcsVmc9MzAqWGcsJGc9MzY1KlhnLFdnPXVmKCIxZjc3YjRmZjdmMGUyY2EwMmNkNjI3Mjg5NDY3YmQ4YzU2NGJlMzc3YzI3ZjdmN2ZiY2JkMjIxN2JlY2YiKSxaZz11ZigiN2ZjOTdmYmVhZWQ0ZmRjMDg2ZmZmZjk5Mzg2Y2IwZjAwMjdmYmY1YjE3NjY2NjY2IiksUWc9dWYoIjFiOWU3N2Q5NWYwMjc1NzBiM2U3Mjk4YTY2YTYxZWU2YWIwMmE2NzYxZDY2NjY2NiIpLEpnPXVmKCJhNmNlZTMxZjc4YjRiMmRmOGEzM2EwMmNmYjlhOTllMzFhMWNmZGJmNmZmZjdmMDBjYWIyZDY2YTNkOWFmZmZmOTliMTU5MjgiKSxLZz11ZigiZmJiNGFlYjNjZGUzY2NlYmM1ZGVjYmU0ZmVkOWE2ZmZmZmNjZTVkOGJkZmRkYWVjZjJmMmYyIiksdHk9dWYoImIzZTJjZGZkY2RhY2NiZDVlOGY0Y2FlNGU2ZjVjOWZmZjJhZWYxZTJjY2NjY2NjYyIpLG55PXVmKCJlNDFhMWMzNzdlYjg0ZGFmNGE5ODRlYTNmZjdmMDBmZmZmMzNhNjU2MjhmNzgxYmY5OTk5OTkiKSxleT11ZigiNjZjMmE1ZmM4ZDYyOGRhMGNiZTc4YWMzYTZkODU0ZmZkOTJmZTVjNDk0YjNiM2IzIikscnk9dWYoIjhkZDNjN2ZmZmZiM2JlYmFkYWZiODA3MjgwYjFkM2ZkYjQ2MmIzZGU2OWZjY2RlNWQ5ZDlkOWJjODBiZGNjZWJjNWZmZWQ2ZiIpLGl5PW5ldyBBcnJheSgzKS5jb25jYXQoImQ4YjM2NWY1ZjVmNTVhYjRhYyIsImE2NjExYWRmYzI3ZDgwY2RjMTAxODU3MSIsImE2NjExYWRmYzI3ZGY1ZjVmNTgwY2RjMTAxODU3MSIsIjhjNTEwYWQ4YjM2NWY2ZThjM2M3ZWFlNTVhYjRhYzAxNjY1ZSIsIjhjNTEwYWQ4YjM2NWY2ZThjM2Y1ZjVmNWM3ZWFlNTVhYjRhYzAxNjY1ZSIsIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2M3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZSIsIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZSIsIjU0MzAwNThjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2M3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZTAwM2MzMCIsIjU0MzAwNThjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZTAwM2MzMCIpLm1hcCh1Ziksb3k9ZmYoaXkpLGF5PW5ldyBBcnJheSgzKS5jb25jYXQoImFmOGRjM2Y3ZjdmNzdmYmY3YiIsIjdiMzI5NGMyYTVjZmE2ZGJhMDAwODgzNyIsIjdiMzI5NGMyYTVjZmY3ZjdmN2E2ZGJhMDAwODgzNyIsIjc2MmE4M2FmOGRjM2U3ZDRlOGQ5ZjBkMzdmYmY3YjFiNzgzNyIsIjc2MmE4M2FmOGRjM2U3ZDRlOGY3ZjdmN2Q5ZjBkMzdmYmY3YjFiNzgzNyIsIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNyIsIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNyIsIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYiIsIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYiIpLm1hcCh1ZiksdXk9ZmYoYXkpLGZ5PW5ldyBBcnJheSgzKS5jb25jYXQoImU5YTNjOWY3ZjdmN2ExZDc2YSIsImQwMWM4YmYxYjZkYWI4ZTE4NjRkYWMyNiIsImQwMWM4YmYxYjZkYWY3ZjdmN2I4ZTE4NjRkYWMyNiIsImM1MWI3ZGU5YTNjOWZkZTBlZmU2ZjVkMGExZDc2YTRkOTIyMSIsImM1MWI3ZGU5YTNjOWZkZTBlZmY3ZjdmN2U2ZjVkMGExZDc2YTRkOTIyMSIsImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmU2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMSIsImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMSIsIjhlMDE1MmM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmU2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMTI3NjQxOSIsIjhlMDE1MmM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMTI3NjQxOSIpLm1hcCh1ZiksY3k9ZmYoZnkpLHN5PW5ldyBBcnJheSgzKS5jb25jYXQoIjk5OGVjM2Y3ZjdmN2YxYTM0MCIsIjVlM2M5OWIyYWJkMmZkYjg2M2U2NjEwMSIsIjVlM2M5OWIyYWJkMmY3ZjdmN2ZkYjg2M2U2NjEwMSIsIjU0Mjc4ODk5OGVjM2Q4ZGFlYmZlZTBiNmYxYTM0MGIzNTgwNiIsIjU0Mjc4ODk5OGVjM2Q4ZGFlYmY3ZjdmN2ZlZTBiNmYxYTM0MGIzNTgwNiIsIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNiIsIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNiIsIjJkMDA0YjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNjdmM2IwOCIsIjJkMDA0YjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNjdmM2IwOCIpLm1hcCh1ZiksbHk9ZmYoc3kpLGh5PW5ldyBBcnJheSgzKS5jb25jYXQoImVmOGE2MmY3ZjdmNzY3YTljZiIsImNhMDAyMGY0YTU4MjkyYzVkZTA1NzFiMCIsImNhMDAyMGY0YTU4MmY3ZjdmNzkyYzVkZTA1NzFiMCIsImIyMTgyYmVmOGE2MmZkZGJjN2QxZTVmMDY3YTljZjIxNjZhYyIsImIyMTgyYmVmOGE2MmZkZGJjN2Y3ZjdmN2QxZTVmMDY3YTljZjIxNjZhYyIsImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYyIsImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYyIsIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MSIsIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MSIpLm1hcCh1ZiksZHk9ZmYoaHkpLHB5PW5ldyBBcnJheSgzKS5jb25jYXQoImVmOGE2MmZmZmZmZjk5OTk5OSIsImNhMDAyMGY0YTU4MmJhYmFiYTQwNDA0MCIsImNhMDAyMGY0YTU4MmZmZmZmZmJhYmFiYTQwNDA0MCIsImIyMTgyYmVmOGE2MmZkZGJjN2UwZTBlMDk5OTk5OTRkNGQ0ZCIsImIyMTgyYmVmOGE2MmZkZGJjN2ZmZmZmZmUwZTBlMDk5OTk5OTRkNGQ0ZCIsImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2UwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZCIsImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZCIsIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2UwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZDFhMWExYSIsIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZDFhMWExYSIpLm1hcCh1Ziksdnk9ZmYocHkpLGd5PW5ldyBBcnJheSgzKS5jb25jYXQoImZjOGQ1OWZmZmZiZjkxYmZkYiIsImQ3MTkxY2ZkYWU2MWFiZDllOTJjN2JiNiIsImQ3MTkxY2ZkYWU2MWZmZmZiZmFiZDllOTJjN2JiNiIsImQ3MzAyN2ZjOGQ1OWZlZTA5MGUwZjNmODkxYmZkYjQ1NzViNCIsImQ3MzAyN2ZjOGQ1OWZlZTA5MGZmZmZiZmUwZjNmODkxYmZkYjQ1NzViNCIsImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNCIsImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNCIsImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNDMxMzY5NSIsImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNDMxMzY5NSIpLm1hcCh1ZikseXk9ZmYoZ3kpLF95PW5ldyBBcnJheSgzKS5jb25jYXQoImZjOGQ1OWZmZmZiZjkxY2Y2MCIsImQ3MTkxY2ZkYWU2MWE2ZDk2YTFhOTY0MSIsImQ3MTkxY2ZkYWU2MWZmZmZiZmE2ZDk2YTFhOTY0MSIsImQ3MzAyN2ZjOGQ1OWZlZTA4YmQ5ZWY4YjkxY2Y2MDFhOTg1MCIsImQ3MzAyN2ZjOGQ1OWZlZTA4YmZmZmZiZmQ5ZWY4YjkxY2Y2MDFhOTg1MCIsImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MCIsImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MCIsImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzNyIsImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzNyIpLm1hcCh1ZiksYnk9ZmYoX3kpLG15PW5ldyBBcnJheSgzKS5jb25jYXQoImZjOGQ1OWZmZmZiZjk5ZDU5NCIsImQ3MTkxY2ZkYWU2MWFiZGRhNDJiODNiYSIsImQ3MTkxY2ZkYWU2MWZmZmZiZmFiZGRhNDJiODNiYSIsImQ1M2U0ZmZjOGQ1OWZlZTA4YmU2ZjU5ODk5ZDU5NDMyODhiZCIsImQ1M2U0ZmZjOGQ1OWZlZTA4YmZmZmZiZmU2ZjU5ODk5ZDU5NDMyODhiZCIsImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZCIsImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZCIsIjllMDE0MmQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZDVlNGZhMiIsIjllMDE0MmQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZDVlNGZhMiIpLm1hcCh1ZikseHk9ZmYobXkpLHd5PW5ldyBBcnJheSgzKS5jb25jYXQoImU1ZjVmOTk5ZDhjOTJjYTI1ZiIsImVkZjhmYmIyZTJlMjY2YzJhNDIzOGI0NSIsImVkZjhmYmIyZTJlMjY2YzJhNDJjYTI1ZjAwNmQyYyIsImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDJjYTI1ZjAwNmQyYyIsImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNTgyNCIsImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNTgyNCIsImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNmQyYzAwNDQxYiIpLm1hcCh1ZiksTXk9ZmYod3kpLEF5PW5ldyBBcnJheSgzKS5jb25jYXQoImUwZWNmNDllYmNkYTg4NTZhNyIsImVkZjhmYmIzY2RlMzhjOTZjNjg4NDE5ZCIsImVkZjhmYmIzY2RlMzhjOTZjNjg4NTZhNzgxMGY3YyIsImVkZjhmYmJmZDNlNjllYmNkYThjOTZjNjg4NTZhNzgxMGY3YyIsImVkZjhmYmJmZDNlNjllYmNkYThjOTZjNjhjNmJiMTg4NDE5ZDZlMDE2YiIsImY3ZmNmZGUwZWNmNGJmZDNlNjllYmNkYThjOTZjNjhjNmJiMTg4NDE5ZDZlMDE2YiIsImY3ZmNmZGUwZWNmNGJmZDNlNjllYmNkYThjOTZjNjhjNmJiMTg4NDE5ZDgxMGY3YzRkMDA0YiIpLm1hcCh1ZiksVHk9ZmYoQXkpLE55PW5ldyBBcnJheSgzKS5jb25jYXQoImUwZjNkYmE4ZGRiNTQzYTJjYSIsImYwZjllOGJhZTRiYzdiY2NjNDJiOGNiZSIsImYwZjllOGJhZTRiYzdiY2NjNDQzYTJjYTA4NjhhYyIsImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhYyIsImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZSIsImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZSIsImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MSIpLm1hcCh1ZiksU3k9ZmYoTnkpLEV5PW5ldyBBcnJheSgzKS5jb25jYXQoImZlZThjOGZkYmI4NGUzNGEzMyIsImZlZjBkOWZkY2M4YWZjOGQ1OWQ3MzAxZiIsImZlZjBkOWZkY2M4YWZjOGQ1OWUzNGEzM2IzMDAwMCIsImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWUzNGEzM2IzMDAwMCIsImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZjk5MDAwMCIsImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZjk5MDAwMCIsImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZmIzMDAwMDdmMDAwMCIpLm1hcCh1Ziksa3k9ZmYoRXkpLEN5PW5ldyBBcnJheSgzKS5jb25jYXQoImVjZTJmMGE2YmRkYjFjOTA5OSIsImY2ZWZmN2JkYzllMTY3YTljZjAyODE4YSIsImY2ZWZmN2JkYzllMTY3YTljZjFjOTA5OTAxNmM1OSIsImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjFjOTA5OTAxNmM1OSIsImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MCIsImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MCIsImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNmM1OTAxNDYzNiIpLm1hcCh1ZiksUHk9ZmYoQ3kpLHp5PW5ldyBBcnJheSgzKS5jb25jYXQoImVjZTdmMmE2YmRkYjJiOGNiZSIsImYxZWVmNmJkYzllMTc0YTljZjA1NzBiMCIsImYxZWVmNmJkYzllMTc0YTljZjJiOGNiZTA0NWE4ZCIsImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjJiOGNiZTA0NWE4ZCIsImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDAzNGU3YiIsImZmZjdmYmVjZTdmMmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDAzNGU3YiIsImZmZjdmYmVjZTdmMmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDA0NWE4ZDAyMzg1OCIpLm1hcCh1ZiksUnk9ZmYoenkpLEx5PW5ldyBBcnJheSgzKS5jb25jYXQoImU3ZTFlZmM5OTRjN2RkMWM3NyIsImYxZWVmNmQ3YjVkOGRmNjViMGNlMTI1NiIsImYxZWVmNmQ3YjVkOGRmNjViMGRkMWM3Nzk4MDA0MyIsImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGRkMWM3Nzk4MDA0MyIsImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1NjkxMDAzZiIsImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1NjkxMDAzZiIsImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1Njk4MDA0MzY3MDAxZiIpLm1hcCh1ZiksRHk9ZmYoTHkpLFV5PW5ldyBBcnJheSgzKS5jb25jYXQoImZkZTBkZGZhOWZiNWM1MWI4YSIsImZlZWJlMmZiYjRiOWY3NjhhMWFlMDE3ZSIsImZlZWJlMmZiYjRiOWY3NjhhMWM1MWI4YTdhMDE3NyIsImZlZWJlMmZjYzVjMGZhOWZiNWY3NjhhMWM1MWI4YTdhMDE3NyIsImZlZWJlMmZjYzVjMGZhOWZiNWY3NjhhMWRkMzQ5N2FlMDE3ZTdhMDE3NyIsImZmZjdmM2ZkZTBkZGZjYzVjMGZhOWZiNWY3NjhhMWRkMzQ5N2FlMDE3ZTdhMDE3NyIsImZmZjdmM2ZkZTBkZGZjYzVjMGZhOWZiNWY3NjhhMWRkMzQ5N2FlMDE3ZTdhMDE3NzQ5MDA2YSIpLm1hcCh1ZikscXk9ZmYoVXkpLE95PW5ldyBBcnJheSgzKS5jb25jYXQoImVkZjhiMTdmY2RiYjJjN2ZiOCIsImZmZmZjY2ExZGFiNDQxYjZjNDIyNWVhOCIsImZmZmZjY2ExZGFiNDQxYjZjNDJjN2ZiODI1MzQ5NCIsImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDJjN2ZiODI1MzQ5NCIsImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NCIsImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NCIsImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODI1MzQ5NDA4MWQ1OCIpLm1hcCh1ZiksWXk9ZmYoT3kpLEJ5PW5ldyBBcnJheSgzKS5jb25jYXQoImY3ZmNiOWFkZGQ4ZTMxYTM1NCIsImZmZmZjY2MyZTY5OTc4YzY3OTIzODQ0MyIsImZmZmZjY2MyZTY5OTc4YzY3OTMxYTM1NDAwNjgzNyIsImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTMxYTM1NDAwNjgzNyIsImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNWEzMiIsImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNWEzMiIsImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNjgzNzAwNDUyOSIpLm1hcCh1ZiksRnk9ZmYoQnkpLEl5PW5ldyBBcnJheSgzKS5jb25jYXQoImZmZjdiY2ZlYzQ0ZmQ5NWYwZSIsImZmZmZkNGZlZDk4ZWZlOTkyOWNjNGMwMiIsImZmZmZkNGZlZDk4ZWZlOTkyOWQ5NWYwZTk5MzQwNCIsImZmZmZkNGZlZTM5MWZlYzQ0ZmZlOTkyOWQ5NWYwZTk5MzQwNCIsImZmZmZkNGZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjhjMmQwNCIsImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjhjMmQwNCIsImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjk5MzQwNDY2MjUwNiIpLm1hcCh1Ziksank9ZmYoSXkpLEh5PW5ldyBBcnJheSgzKS5jb25jYXQoImZmZWRhMGZlYjI0Y2YwM2IyMCIsImZmZmZiMmZlY2M1Y2ZkOGQzY2UzMWExYyIsImZmZmZiMmZlY2M1Y2ZkOGQzY2YwM2IyMGJkMDAyNiIsImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNiIsImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNiIsImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNiIsImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNiIpLm1hcCh1ZiksWHk9ZmYoSHkpLEd5PW5ldyBBcnJheSgzKS5jb25jYXQoImRlZWJmNzllY2FlMTMxODJiZCIsImVmZjNmZmJkZDdlNzZiYWVkNjIxNzFiNSIsImVmZjNmZmJkZDdlNzZiYWVkNjMxODJiZDA4NTE5YyIsImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5YyIsImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NCIsImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NCIsImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YiIpLm1hcCh1ZiksVnk9ZmYoR3kpLCR5PW5ldyBBcnJheSgzKS5jb25jYXQoImU1ZjVlMGExZDk5YjMxYTM1NCIsImVkZjhlOWJhZTRiMzc0YzQ3NjIzOGI0NSIsImVkZjhlOWJhZTRiMzc0YzQ3NjMxYTM1NDAwNmQyYyIsImVkZjhlOWM3ZTljMGExZDk5Yjc0YzQ3NjMxYTM1NDAwNmQyYyIsImVkZjhlOWM3ZTljMGExZDk5Yjc0YzQ3NjQxYWI1ZDIzOGI0NTAwNWEzMiIsImY3ZmNmNWU1ZjVlMGM3ZTljMGExZDk5Yjc0YzQ3NjQxYWI1ZDIzOGI0NTAwNWEzMiIsImY3ZmNmNWU1ZjVlMGM3ZTljMGExZDk5Yjc0YzQ3NjQxYWI1ZDIzOGI0NTAwNmQyYzAwNDQxYiIpLm1hcCh1ZiksV3k9ZmYoJHkpLFp5PW5ldyBBcnJheSgzKS5jb25jYXQoImYwZjBmMGJkYmRiZDYzNjM2MyIsImY3ZjdmN2NjY2NjYzk2OTY5NjUyNTI1MiIsImY3ZjdmN2NjY2NjYzk2OTY5NjYzNjM2MzI1MjUyNSIsImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjYzNjM2MzI1MjUyNSIsImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNSIsImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNSIsImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNTAwMDAwMCIpLm1hcCh1ZiksUXk9ZmYoWnkpLEp5PW5ldyBBcnJheSgzKS5jb25jYXQoImVmZWRmNWJjYmRkYzc1NmJiMSIsImYyZjBmN2NiYzllMjllOWFjODZhNTFhMyIsImYyZjBmN2NiYzllMjllOWFjODc1NmJiMTU0Mjc4ZiIsImYyZjBmN2RhZGFlYmJjYmRkYzllOWFjODc1NmJiMTU0Mjc4ZiIsImYyZjBmN2RhZGFlYmJjYmRkYzllOWFjODgwN2RiYTZhNTFhMzRhMTQ4NiIsImZjZmJmZGVmZWRmNWRhZGFlYmJjYmRkYzllOWFjODgwN2RiYTZhNTFhMzRhMTQ4NiIsImZjZmJmZGVmZWRmNWRhZGFlYmJjYmRkYzllOWFjODgwN2RiYTZhNTFhMzU0Mjc4ZjNmMDA3ZCIpLm1hcCh1ZiksS3k9ZmYoSnkpLHRfPW5ldyBBcnJheSgzKS5jb25jYXQoImZlZTBkMmZjOTI3MmRlMmQyNiIsImZlZTVkOWZjYWU5MWZiNmE0YWNiMTgxZCIsImZlZTVkOWZjYWU5MWZiNmE0YWRlMmQyNmE1MGYxNSIsImZlZTVkOWZjYmJhMWZjOTI3MmZiNmE0YWRlMmQyNmE1MGYxNSIsImZlZTVkOWZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZDk5MDAwZCIsImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZDk5MDAwZCIsImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZGE1MGYxNTY3MDAwZCIpLm1hcCh1Ziksbl89ZmYodF8pLGVfPW5ldyBBcnJheSgzKS5jb25jYXQoImZlZTZjZWZkYWU2YmU2NTUwZCIsImZlZWRkZWZkYmU4NWZkOGQzY2Q5NDcwMSIsImZlZWRkZWZkYmU4NWZkOGQzY2U2NTUwZGE2MzYwMyIsImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwMyIsImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNCIsImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNCIsImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNCIpLm1hcCh1Zikscl89ZmYoZV8pLGlfPW1sKFp0KDMwMCwuNSwwKSxadCgtMjQwLC41LDEpKSxvXz1tbChadCgtMTAwLC43NSwuMzUpLFp0KDgwLDEuNSwuOCkpLGFfPW1sKFp0KDI2MCwuNzUsLjM1KSxadCg4MCwxLjUsLjgpKSx1Xz1adCgpLGZfPVJ0KCksY189TWF0aC5QSS8zLHNfPTIqTWF0aC5QSS8zLGxfPWNmKHVmKCI0NDAxNTQ0NDAyNTY0NTA0NTc0NTA1NTk0NjA3NWE0NjA4NWM0NjBhNWQ0NjBiNWU0NzBkNjA0NzBlNjE0NzEwNjM0NzExNjQ0NzEzNjU0ODE0Njc0ODE2Njg0ODE3Njk0ODE4NmE0ODFhNmM0ODFiNmQ0ODFjNmU0ODFkNmY0ODFmNzA0ODIwNzE0ODIxNzM0ODIzNzQ0ODI0NzU0ODI1NzY0ODI2Nzc0ODI4Nzg0ODI5Nzk0NzJhN2E0NzJjN2E0NzJkN2I0NzJlN2M0NzJmN2Q0NjMwN2U0NjMyN2U0NjMzN2Y0NjM0ODA0NTM1ODE0NTM3ODE0NTM4ODI0NDM5ODM0NDNhODM0NDNiODQ0MzNkODQ0MzNlODU0MjNmODU0MjQwODY0MjQxODY0MTQyODc0MTQ0ODc0MDQ1ODg0MDQ2ODgzZjQ3ODgzZjQ4ODkzZTQ5ODkzZTRhODkzZTRjOGEzZDRkOGEzZDRlOGEzYzRmOGEzYzUwOGIzYjUxOGIzYjUyOGIzYTUzOGIzYTU0OGMzOTU1OGMzOTU2OGMzODU4OGMzODU5OGMzNzVhOGMzNzViOGQzNjVjOGQzNjVkOGQzNTVlOGQzNTVmOGQzNDYwOGQzNDYxOGQzMzYyOGQzMzYzOGQzMjY0OGUzMjY1OGUzMTY2OGUzMTY3OGUzMTY4OGUzMDY5OGUzMDZhOGUyZjZiOGUyZjZjOGUyZTZkOGUyZTZlOGUyZTZmOGUyZDcwOGUyZDcxOGUyYzcxOGUyYzcyOGUyYzczOGUyYjc0OGUyYjc1OGUyYTc2OGUyYTc3OGUyYTc4OGUyOTc5OGUyOTdhOGUyOTdiOGUyODdjOGUyODdkOGUyNzdlOGUyNzdmOGUyNzgwOGUyNjgxOGUyNjgyOGUyNjgyOGUyNTgzOGUyNTg0OGUyNTg1OGUyNDg2OGUyNDg3OGUyMzg4OGUyMzg5OGUyMzhhOGQyMjhiOGQyMjhjOGQyMjhkOGQyMThlOGQyMThmOGQyMTkwOGQyMTkxOGMyMDkyOGMyMDkyOGMyMDkzOGMxZjk0OGMxZjk1OGIxZjk2OGIxZjk3OGIxZjk4OGIxZjk5OGExZjlhOGExZTliOGExZTljODkxZTlkODkxZjllODkxZjlmODgxZmEwODgxZmExODgxZmExODcxZmEyODcyMGEzODYyMGE0ODYyMWE1ODUyMWE2ODUyMmE3ODUyMmE4ODQyM2E5ODMyNGFhODMyNWFiODIyNWFjODIyNmFkODEyN2FkODEyOGFlODAyOWFmN2YyYWIwN2YyY2IxN2UyZGIyN2QyZWIzN2MyZmI0N2MzMWI1N2IzMmI2N2EzNGI2NzkzNWI3NzkzN2I4NzgzOGI5NzczYWJhNzYzYmJiNzUzZGJjNzQzZmJjNzM0MGJkNzI0MmJlNzE0NGJmNzA0NmMwNmY0OGMxNmU0YWMxNmQ0Y2MyNmM0ZWMzNmI1MGM0NmE1MmM1Njk1NGM1Njg1NmM2Njc1OGM3NjU1YWM4NjQ1Y2M4NjM1ZWM5NjI2MGNhNjA2M2NiNWY2NWNiNWU2N2NjNWM2OWNkNWI2Y2NkNWE2ZWNlNTg3MGNmNTc3M2QwNTY3NWQwNTQ3N2QxNTM3YWQxNTE3Y2QyNTA3ZmQzNGU4MWQzNGQ4NGQ0NGI4NmQ1NDk4OWQ1NDg4YmQ2NDY4ZWQ2NDU5MGQ3NDM5M2Q3NDE5NWQ4NDA5OGQ4M2U5YmQ5M2M5ZGQ5M2JhMGRhMzlhMmRhMzdhNWRiMzZhOGRiMzRhYWRjMzJhZGRjMzBiMGRkMmZiMmRkMmRiNWRlMmJiOGRlMjliYWRlMjhiZGRmMjZjMGRmMjVjMmRmMjNjNWUwMjFjOGUwMjBjYWUxMWZjZGUxMWRkMGUxMWNkMmUyMWJkNWUyMWFkOGUyMTlkYWUzMTlkZGUzMThkZmUzMThlMmU0MThlNWU0MTllN2U0MTllYWU1MWFlY2U1MWJlZmU1MWNmMWU1MWRmNGU2MWVmNmU2MjBmOGU2MjFmYmU3MjNmZGU3MjUiKSksaF89Y2YodWYoIjAwMDAwNDAxMDAwNTAxMDEwNjAxMDEwODAyMDEwOTAyMDIwYjAyMDIwZDAzMDMwZjAzMDMxMjA0MDQxNDA1MDQxNjA2MDUxODA2MDUxYTA3MDYxYzA4MDcxZTA5MDcyMDBhMDgyMjBiMDkyNDBjMDkyNjBkMGEyOTBlMGIyYjEwMGIyZDExMGMyZjEyMGQzMTEzMGQzNDE0MGUzNjE1MGUzODE2MGYzYjE4MGYzZDE5MTAzZjFhMTA0MjFjMTA0NDFkMTE0NzFlMTE0OTIwMTE0YjIxMTE0ZTIyMTE1MDI0MTI1MzI1MTI1NTI3MTI1ODI5MTE1YTJhMTE1YzJjMTE1ZjJkMTE2MTJmMTE2MzMxMTE2NTMzMTA2NzM0MTA2OTM2MTA2YjM4MTA2YzM5MGY2ZTNiMGY3MDNkMGY3MTNmMGY3MjQwMGY3NDQyMGY3NTQ0MGY3NjQ1MTA3NzQ3MTA3ODQ5MTA3ODRhMTA3OTRjMTE3YTRlMTE3YjRmMTI3YjUxMTI3YzUyMTM3YzU0MTM3ZDU2MTQ3ZDU3MTU3ZTU5MTU3ZTVhMTY3ZTVjMTY3ZjVkMTc3ZjVmMTg3ZjYwMTg4MDYyMTk4MDY0MWE4MDY1MWE4MDY3MWI4MDY4MWM4MTZhMWM4MTZiMWQ4MTZkMWQ4MTZlMWU4MTcwMWY4MTcyMWY4MTczMjA4MTc1MjE4MTc2MjE4MTc4MjI4MTc5MjI4MjdiMjM4MjdjMjM4MjdlMjQ4MjgwMjU4MjgxMjU4MTgzMjY4MTg0MjY4MTg2Mjc4MTg4Mjc4MTg5Mjg4MThiMjk4MThjMjk4MThlMmE4MTkwMmE4MTkxMmI4MTkzMmI4MDk0MmM4MDk2MmM4MDk4MmQ4MDk5MmQ4MDliMmU3ZjljMmU3ZjllMmY3ZmEwMmY3ZmExMzA3ZWEzMzA3ZWE1MzE3ZWE2MzE3ZGE4MzI3ZGFhMzM3ZGFiMzM3Y2FkMzQ3Y2FlMzQ3YmIwMzU3YmIyMzU3YmIzMzY3YWI1MzY3YWI3Mzc3OWI4Mzc3OWJhMzg3OGJjMzk3OGJkMzk3N2JmM2E3N2MwM2E3NmMyM2I3NWM0M2M3NWM1M2M3NGM3M2Q3M2M4M2U3M2NhM2U3MmNjM2Y3MWNkNDA3MWNmNDA3MGQwNDE2ZmQyNDI2ZmQzNDM2ZWQ1NDQ2ZGQ2NDU2Y2Q4NDU2Y2Q5NDY2YmRiNDc2YWRjNDg2OWRlNDk2OGRmNGE2OGUwNGM2N2UyNGQ2NmUzNGU2NWU0NGY2NGU1NTA2NGU3NTI2M2U4NTM2MmU5NTQ2MmVhNTY2MWViNTc2MGVjNTg2MGVkNWE1ZmVlNWI1ZWVmNWQ1ZWYwNWY1ZWYxNjA1ZGYyNjI1ZGYyNjQ1Y2YzNjU1Y2Y0Njc1Y2Y0Njk1Y2Y1NmI1Y2Y2NmM1Y2Y2NmU1Y2Y3NzA1Y2Y3NzI1Y2Y4NzQ1Y2Y4NzY1Y2Y5Nzg1ZGY5Nzk1ZGY5N2I1ZGZhN2Q1ZWZhN2Y1ZWZhODE1ZmZiODM1ZmZiODU2MGZiODc2MWZjODk2MWZjOGE2MmZjOGM2M2ZjOGU2NGZjOTA2NWZkOTI2NmZkOTQ2N2ZkOTY2OGZkOTg2OWZkOWE2YWZkOWI2YmZlOWQ2Y2ZlOWY2ZGZlYTE2ZWZlYTM2ZmZlYTU3MWZlYTc3MmZlYTk3M2ZlYWE3NGZlYWM3NmZlYWU3N2ZlYjA3OGZlYjI3YWZlYjQ3YmZlYjY3Y2ZlYjc3ZWZlYjk3ZmZlYmI4MWZlYmQ4MmZlYmY4NGZlYzE4NWZlYzI4N2ZlYzQ4OGZlYzY4YWZlYzg4Y2ZlY2E4ZGZlY2M4ZmZlY2Q5MGZlY2Y5MmZlZDE5NGZlZDM5NWZlZDU5N2ZlZDc5OWZlZDg5YWZkZGE5Y2ZkZGM5ZWZkZGVhMGZkZTBhMWZkZTJhM2ZkZTNhNWZkZTVhN2ZkZTdhOWZkZTlhYWZkZWJhY2ZjZWNhZWZjZWViMGZjZjBiMmZjZjJiNGZjZjRiNmZjZjZiOGZjZjdiOWZjZjliYmZjZmJiZGZjZmRiZiIpKSxkXz1jZih1ZigiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTBhMDIwMjBjMDIwMjBlMDMwMjEwMDQwMzEyMDQwMzE0MDUwNDE3MDYwNDE5MDcwNTFiMDgwNTFkMDkwNjFmMGEwNzIyMGIwNzI0MGMwODI2MGQwODI5MGUwOTJiMTAwOTJkMTEwYTMwMTIwYTMyMTQwYjM0MTUwYjM3MTYwYjM5MTgwYzNjMTkwYzNlMWIwYzQxMWMwYzQzMWUwYzQ1MWYwYzQ4MjEwYzRhMjMwYzRjMjQwYzRmMjYwYzUxMjgwYjUzMjkwYjU1MmIwYjU3MmQwYjU5MmYwYTViMzEwYTVjMzIwYTVlMzQwYTVmMzYwOTYxMzgwOTYyMzkwOTYzM2IwOTY0M2QwOTY1M2UwOTY2NDAwYTY3NDIwYTY4NDQwYTY4NDUwYTY5NDcwYjZhNDkwYjZhNGEwYzZiNGMwYzZiNGQwZDZjNGYwZDZjNTEwZTZjNTIwZTZkNTQwZjZkNTUwZjZkNTcxMDZlNTkxMDZlNWExMTZlNWMxMjZlNWQxMjZlNWYxMzZlNjExMzZlNjIxNDZlNjQxNTZlNjUxNTZlNjcxNjZlNjkxNjZlNmExNzZlNmMxODZlNmQxODZlNmYxOTZlNzExOTZlNzIxYTZlNzQxYTZlNzUxYjZlNzcxYzZkNzgxYzZkN2ExZDZkN2MxZDZkN2QxZTZkN2YxZTZjODAxZjZjODIyMDZjODQyMDZiODUyMTZiODcyMTZiODgyMjZhOGEyMjZhOGMyMzY5OGQyMzY5OGYyNDY5OTAyNTY4OTIyNTY4OTMyNjY3OTUyNjY3OTcyNzY2OTgyNzY2OWEyODY1OWIyOTY0OWQyOTY0OWYyYTYzYTAyYTYzYTIyYjYyYTMyYzYxYTUyYzYwYTYyZDYwYTgyZTVmYTkyZTVlYWIyZjVlYWQzMDVkYWUzMDVjYjAzMTViYjEzMjVhYjMzMjVhYjQzMzU5YjYzNDU4YjczNTU3YjkzNTU2YmEzNjU1YmMzNzU0YmQzODUzYmYzOTUyYzAzYTUxYzEzYTUwYzMzYjRmYzQzYzRlYzYzZDRkYzczZTRjYzgzZjRiY2E0MDRhY2I0MTQ5Y2M0MjQ4Y2U0MzQ3Y2Y0NDQ2ZDA0NTQ1ZDI0NjQ0ZDM0NzQzZDQ0ODQyZDU0YTQxZDc0YjNmZDg0YzNlZDk0ZDNkZGE0ZTNjZGI1MDNiZGQ1MTNhZGU1MjM4ZGY1MzM3ZTA1NTM2ZTE1NjM1ZTI1NzM0ZTM1OTMzZTQ1YTMxZTU1YzMwZTY1ZDJmZTc1ZTJlZTg2MDJkZTk2MTJiZWE2MzJhZWI2NDI5ZWI2NjI4ZWM2NzI2ZWQ2OTI1ZWU2YTI0ZWY2YzIzZWY2ZTIxZjA2ZjIwZjE3MTFmZjE3MzFkZjI3NDFjZjM3NjFiZjM3ODE5ZjQ3OTE4ZjU3YjE3ZjU3ZDE1ZjY3ZTE0ZjY4MDEzZjc4MjEyZjc4NDEwZjg4NTBmZjg4NzBlZjg4OTBjZjk4YjBiZjk4YzBhZjk4ZTA5ZmE5MDA4ZmE5MjA3ZmE5NDA3ZmI5NjA2ZmI5NzA2ZmI5OTA2ZmI5YjA2ZmI5ZDA3ZmM5ZjA3ZmNhMTA4ZmNhMzA5ZmNhNTBhZmNhNjBjZmNhODBkZmNhYTBmZmNhYzExZmNhZTEyZmNiMDE0ZmNiMjE2ZmNiNDE4ZmJiNjFhZmJiODFkZmJiYTFmZmJiYzIxZmJiZTIzZmFjMDI2ZmFjMjI4ZmFjNDJhZmFjNjJkZjljNzJmZjljOTMyZjljYjM1ZjhjZDM3ZjhjZjNhZjdkMTNkZjdkMzQwZjZkNTQzZjZkNzQ2ZjVkOTQ5ZjVkYjRjZjRkZDRmZjRkZjUzZjRlMTU2ZjNlMzVhZjNlNTVkZjJlNjYxZjJlODY1ZjJlYTY5ZjFlYzZkZjFlZDcxZjFlZjc1ZjFmMTc5ZjJmMjdkZjJmNDgyZjNmNTg2ZjNmNjhhZjRmODhlZjVmOTkyZjZmYTk2ZjhmYjlhZjlmYzlkZmFmZGExZmNmZmE0IikpLHBfPWNmKHVmKCIwZDA4ODcxMDA3ODgxMzA3ODkxNjA3OGExOTA2OGMxYjA2OGQxZDA2OGUyMDA2OGYyMjA2OTAyNDA2OTEyNjA1OTEyODA1OTIyYTA1OTMyYzA1OTQyZTA1OTUyZjA1OTYzMTA1OTczMzA1OTczNTA0OTgzNzA0OTkzODA0OWEzYTA0OWEzYzA0OWIzZTA0OWMzZjA0OWM0MTA0OWQ0MzAzOWU0NDAzOWU0NjAzOWY0ODAzOWY0OTAzYTA0YjAzYTE0YzAyYTE0ZTAyYTI1MDAyYTI1MTAyYTM1MzAyYTM1NTAyYTQ1NjAxYTQ1ODAxYTQ1OTAxYTU1YjAxYTU1YzAxYTY1ZTAxYTY2MDAxYTY2MTAwYTc2MzAwYTc2NDAwYTc2NjAwYTc2NzAwYTg2OTAwYTg2YTAwYTg2YzAwYTg2ZTAwYTg2ZjAwYTg3MTAwYTg3MjAxYTg3NDAxYTg3NTAxYTg3NzAxYTg3ODAxYTg3YTAyYTg3YjAyYTg3ZDAzYTg3ZTAzYTg4MDA0YTg4MTA0YTc4MzA1YTc4NDA1YTc4NjA2YTY4NzA3YTY4ODA4YTY4YTA5YTU4YjBhYTU4ZDBiYTU4ZTBjYTQ4ZjBkYTQ5MTBlYTM5MjBmYTM5NDEwYTI5NTExYTE5NjEzYTE5ODE0YTA5OTE1OWY5YTE2OWY5YzE3OWU5ZDE4OWQ5ZTE5OWRhMDFhOWNhMTFiOWJhMjFkOWFhMzFlOWFhNTFmOTlhNjIwOThhNzIxOTdhODIyOTZhYTIzOTVhYjI0OTRhYzI2OTRhZDI3OTNhZTI4OTJiMDI5OTFiMTJhOTBiMjJiOGZiMzJjOGViNDJlOGRiNTJmOGNiNjMwOGJiNzMxOGFiODMyODliYTMzODhiYjM0ODhiYzM1ODdiZDM3ODZiZTM4ODViZjM5ODRjMDNhODNjMTNiODJjMjNjODFjMzNkODBjNDNlN2ZjNTQwN2VjNjQxN2RjNzQyN2NjODQzN2JjOTQ0N2FjYTQ1N2FjYjQ2NzljYzQ3NzhjYzQ5NzdjZDRhNzZjZTRiNzVjZjRjNzRkMDRkNzNkMTRlNzJkMjRmNzFkMzUxNzFkNDUyNzBkNTUzNmZkNTU0NmVkNjU1NmRkNzU2NmNkODU3NmJkOTU4NmFkYTVhNmFkYTViNjlkYjVjNjhkYzVkNjdkZDVlNjZkZTVmNjVkZTYxNjRkZjYyNjNlMDYzNjNlMTY0NjJlMjY1NjFlMjY2NjBlMzY4NWZlNDY5NWVlNTZhNWRlNTZiNWRlNjZjNWNlNzZlNWJlNzZmNWFlODcwNTllOTcxNThlOTcyNTdlYTc0NTdlYjc1NTZlYjc2NTVlYzc3NTRlZDc5NTNlZDdhNTJlZTdiNTFlZjdjNTFlZjdlNTBmMDdmNGZmMDgwNGVmMTgxNGRmMTgzNGNmMjg0NGJmMzg1NGJmMzg3NGFmNDg4NDlmNDg5NDhmNThiNDdmNThjNDZmNjhkNDVmNjhmNDRmNzkwNDRmNzkxNDNmNzkzNDJmODk0NDFmODk1NDBmOTk3M2ZmOTk4M2VmOTlhM2VmYTliM2RmYTljM2NmYTllM2JmYjlmM2FmYmExMzlmYmEyMzhmY2EzMzhmY2E1MzdmY2E2MzZmY2E4MzVmY2E5MzRmZGFiMzNmZGFjMzNmZGFlMzJmZGFmMzFmZGIxMzBmZGIyMmZmZGI0MmZmZGI1MmVmZWI3MmRmZWI4MmNmZWJhMmNmZWJiMmJmZWJkMmFmZWJlMmFmZWMwMjlmZGMyMjlmZGMzMjhmZGM1MjdmZGM2MjdmZGM4MjdmZGNhMjZmZGNiMjZmY2NkMjVmY2NlMjVmY2QwMjVmY2QyMjVmYmQzMjRmYmQ1MjRmYmQ3MjRmYWQ4MjRmYWRhMjRmOWRjMjRmOWRkMjVmOGRmMjVmOGUxMjVmN2UyMjVmN2U0MjVmNmU2MjZmNmU4MjZmNWU5MjZmNWViMjdmNGVkMjdmM2VlMjdmM2YwMjdmMmYyMjdmMWY0MjZmMWY1MjVmMGY3MjRmMGY5MjEiKSksdl89TWF0aC5hYnMsZ189TWF0aC5hdGFuMix5Xz1NYXRoLmNvcyxfXz1NYXRoLm1heCxiXz1NYXRoLm1pbixtXz1NYXRoLnNpbix4Xz1NYXRoLnNxcnQsd189MWUtMTIsTV89TWF0aC5QSSxBXz1NXy8yLFRfPTIqTV87X2YucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpeyh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtzd2l0Y2godD0rdCxuPStuLHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjtkZWZhdWx0OnRoaXMuX2NvbnRleHQubGluZVRvKHQsbil9fX07dmFyIE5fPVNmKGJmKTtOZi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2N1cnZlLmFyZWFTdGFydCgpfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fY3VydmUuYXJlYUVuZCgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9jdXJ2ZS5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe3RoaXMuX2N1cnZlLmxpbmVFbmQoKX0scG9pbnQ6ZnVuY3Rpb24odCxuKXt0aGlzLl9jdXJ2ZS5wb2ludChuKk1hdGguc2luKHQpLG4qLU1hdGguY29zKHQpKX19O3ZhciBTXz1BcnJheS5wcm90b3R5cGUuc2xpY2UsRV89e2RyYXc6ZnVuY3Rpb24odCxuKXt2YXIgZT1NYXRoLnNxcnQobi9NXyk7dC5tb3ZlVG8oZSwwKSx0LmFyYygwLDAsZSwwLFRfKX19LGtfPXtkcmF3OmZ1bmN0aW9uKHQsbil7dmFyIGU9TWF0aC5zcXJ0KG4vNSkvMjt0Lm1vdmVUbygtMyplLC1lKSx0LmxpbmVUbygtZSwtZSksdC5saW5lVG8oLWUsLTMqZSksdC5saW5lVG8oZSwtMyplKSx0LmxpbmVUbyhlLC1lKSx0LmxpbmVUbygzKmUsLWUpLHQubGluZVRvKDMqZSxlKSx0LmxpbmVUbyhlLGUpLHQubGluZVRvKGUsMyplKSx0LmxpbmVUbygtZSwzKmUpLHQubGluZVRvKC1lLGUpLHQubGluZVRvKC0zKmUsZSksdC5jbG9zZVBhdGgoKX19LENfPU1hdGguc3FydCgxLzMpLFBfPTIqQ18sel89e2RyYXc6ZnVuY3Rpb24odCxuKXt2YXIgZT1NYXRoLnNxcnQobi9QXykscj1lKkNfO3QubW92ZVRvKDAsLWUpLHQubGluZVRvKHIsMCksdC5saW5lVG8oMCxlKSx0LmxpbmVUbygtciwwKSx0LmNsb3NlUGF0aCgpfX0sUl89TWF0aC5zaW4oTV8vMTApL01hdGguc2luKDcqTV8vMTApLExfPU1hdGguc2luKFRfLzEwKSpSXyxEXz0tTWF0aC5jb3MoVF8vMTApKlJfLFVfPXtkcmF3OmZ1bmN0aW9uKHQsbil7dmFyIGU9TWF0aC5zcXJ0KC44OTA4MTMwOTE1MjkyODUyKm4pLHI9TF8qZSxpPURfKmU7dC5tb3ZlVG8oMCwtZSksdC5saW5lVG8ocixpKTtmb3IodmFyIG89MTtvPDU7KytvKXt2YXIgYT1UXypvLzUsdT1NYXRoLmNvcyhhKSxmPU1hdGguc2luKGEpO3QubGluZVRvKGYqZSwtdSplKSx0LmxpbmVUbyh1KnItZippLGYqcit1KmkpfXQuY2xvc2VQYXRoKCl9fSxxXz17ZHJhdzpmdW5jdGlvbih0LG4pe3ZhciBlPU1hdGguc3FydChuKSxyPS1lLzI7dC5yZWN0KHIscixlLGUpfX0sT189TWF0aC5zcXJ0KDMpLFlfPXtkcmF3OmZ1bmN0aW9uKHQsbil7dmFyIGU9LU1hdGguc3FydChuLygzKk9fKSk7dC5tb3ZlVG8oMCwyKmUpLHQubGluZVRvKC1PXyplLC1lKSx0LmxpbmVUbyhPXyplLC1lKSx0LmNsb3NlUGF0aCgpfX0sQl89TWF0aC5zcXJ0KDMpLzIsRl89MS9NYXRoLnNxcnQoMTIpLElfPTMqKEZfLzIrMSksal89e2RyYXc6ZnVuY3Rpb24odCxuKXt2YXIgZT1NYXRoLnNxcnQobi9JXykscj1lLzIsaT1lKkZfLG89cixhPWUqRl8rZSx1PS1vLGY9YTt0Lm1vdmVUbyhyLGkpLHQubGluZVRvKG8sYSksdC5saW5lVG8odSxmKSx0LmxpbmVUbygtLjUqci1CXyppLEJfKnIrLS41KmkpLHQubGluZVRvKC0uNSpvLUJfKmEsQl8qbystLjUqYSksdC5saW5lVG8oLS41KnUtQl8qZixCXyp1Ky0uNSpmKSx0LmxpbmVUbygtLjUqcitCXyppLC0uNSppLUJfKnIpLHQubGluZVRvKC0uNSpvK0JfKmEsLS41KmEtQl8qbyksdC5saW5lVG8oLS41KnUrQl8qZiwtLjUqZi1CXyp1KSx0LmNsb3NlUGF0aCgpfX0sSF89W0VfLGtfLHpfLHFfLFVfLFlfLGpfXTtCZi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl95MD10aGlzLl95MT1OYU4sdGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAzOllmKHRoaXMsdGhpcy5feDEsdGhpcy5feTEpO2Nhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSx0aGlzLl95MSl9KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYxPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih0LG4pe3N3aXRjaCh0PSt0LG49K24sdGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8odCxuKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LG4pO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zLHRoaXMuX2NvbnRleHQubGluZVRvKCg1KnRoaXMuX3gwK3RoaXMuX3gxKS82LCg1KnRoaXMuX3kwK3RoaXMuX3kxKS82KTtkZWZhdWx0OllmKHRoaXMsdCxuKX10aGlzLl94MD10aGlzLl94MSx0aGlzLl94MT10LHRoaXMuX3kwPXRoaXMuX3kxLHRoaXMuX3kxPW59fSxGZi5wcm90b3R5cGU9e2FyZWFTdGFydDpPZixhcmVhRW5kOk9mLGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3gzPXRoaXMuX3g0PXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPXRoaXMuX3kzPXRoaXMuX3k0PU5hTix0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDE6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsdGhpcy5feTIpLHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7YnJlYWs7Y2FzZSAyOnRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MisyKnRoaXMuX3gzKS8zLCh0aGlzLl95MisyKnRoaXMuX3kzKS8zKSx0aGlzLl9jb250ZXh0LmxpbmVUbygodGhpcy5feDMrMip0aGlzLl94MikvMywodGhpcy5feTMrMip0aGlzLl95MikvMyksdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTticmVhaztjYXNlIDM6dGhpcy5wb2ludCh0aGlzLl94Mix0aGlzLl95MiksdGhpcy5wb2ludCh0aGlzLl94Myx0aGlzLl95MyksdGhpcy5wb2ludCh0aGlzLl94NCx0aGlzLl95NCl9fSxwb2ludDpmdW5jdGlvbih0LG4pe3N3aXRjaCh0PSt0LG49K24sdGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX3gyPXQsdGhpcy5feTI9bjticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9Mix0aGlzLl94Mz10LHRoaXMuX3kzPW47YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTMsdGhpcy5feDQ9dCx0aGlzLl95ND1uLHRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MCs0KnRoaXMuX3gxK3QpLzYsKHRoaXMuX3kwKzQqdGhpcy5feTErbikvNik7YnJlYWs7ZGVmYXVsdDpZZih0aGlzLHQsbil9dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT1ufX0sSWYucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feTA9dGhpcy5feTE9TmFOLHRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXsodGhpcy5fbGluZXx8MCE9PXRoaXMuX2xpbmUmJjM9PT10aGlzLl9wb2ludCkmJnRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5fbGluZT0xLXRoaXMuX2xpbmV9LHBvaW50OmZ1bmN0aW9uKHQsbil7c3dpdGNoKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7dmFyIGU9KHRoaXMuX3gwKzQqdGhpcy5feDErdCkvNixyPSh0aGlzLl95MCs0KnRoaXMuX3kxK24pLzY7dGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyhlLHIpOnRoaXMuX2NvbnRleHQubW92ZVRvKGUscik7YnJlYWs7Y2FzZSAzOnRoaXMuX3BvaW50PTQ7ZGVmYXVsdDpZZih0aGlzLHQsbil9dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT1ufX0samYucHJvdG90eXBlPXtsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94PVtdLHRoaXMuX3k9W10sdGhpcy5fYmFzaXMubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl94LG49dGhpcy5feSxlPXQubGVuZ3RoLTE7aWYoZT4wKWZvcih2YXIgcixpPXRbMF0sbz1uWzBdLGE9dFtlXS1pLHU9bltlXS1vLGY9LTE7KytmPD1lOylyPWYvZSx0aGlzLl9iYXNpcy5wb2ludCh0aGlzLl9iZXRhKnRbZl0rKDEtdGhpcy5fYmV0YSkqKGkrciphKSx0aGlzLl9iZXRhKm5bZl0rKDEtdGhpcy5fYmV0YSkqKG8rcip1KSk7dGhpcy5feD10aGlzLl95PW51bGwsdGhpcy5fYmFzaXMubGluZUVuZCgpfSxwb2ludDpmdW5jdGlvbih0LG4pe3RoaXMuX3gucHVzaCgrdCksdGhpcy5feS5wdXNoKCtuKX19O3ZhciBYXz1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIDE9PT1uP25ldyBCZih0KTpuZXcgamYodCxuKX1yZXR1cm4gZS5iZXRhPWZ1bmN0aW9uKG4pe3JldHVybiB0KCtuKX0sZX0oLjg1KTtYZi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj1OYU4sdGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAyOnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLHRoaXMuX3kyKTticmVhaztjYXNlIDM6SGYodGhpcyx0aGlzLl94MSx0aGlzLl95MSl9KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYxPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih0LG4pe3N3aXRjaCh0PSt0LG49K24sdGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8odCxuKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LG4pO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yLHRoaXMuX3gxPXQsdGhpcy5feTE9bjticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9MztkZWZhdWx0OkhmKHRoaXMsdCxuKX10aGlzLl94MD10aGlzLl94MSx0aGlzLl94MT10aGlzLl94Mix0aGlzLl94Mj10LHRoaXMuX3kwPXRoaXMuX3kxLHRoaXMuX3kxPXRoaXMuX3kyLHRoaXMuX3kyPW59fTt2YXIgR189ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybiBuZXcgWGYodCxuKX1yZXR1cm4gZS50ZW5zaW9uPWZ1bmN0aW9uKG4pe3JldHVybiB0KCtuKX0sZX0oMCk7R2YucHJvdG90eXBlPXthcmVhU3RhcnQ6T2YsYXJlYUVuZDpPZixsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl94Mz10aGlzLl94ND10aGlzLl94NT10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj10aGlzLl95Mz10aGlzLl95ND10aGlzLl95NT1OYU4sdGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAxOnRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrO2Nhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Myx0aGlzLl95MyksdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTticmVhaztjYXNlIDM6dGhpcy5wb2ludCh0aGlzLl94Myx0aGlzLl95MyksdGhpcy5wb2ludCh0aGlzLl94NCx0aGlzLl95NCksdGhpcy5wb2ludCh0aGlzLl94NSx0aGlzLl95NSl9fSxwb2ludDpmdW5jdGlvbih0LG4pe3N3aXRjaCh0PSt0LG49K24sdGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX3gzPXQsdGhpcy5feTM9bjticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9Mix0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94ND10LHRoaXMuX3k0PW4pO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zLHRoaXMuX3g1PXQsdGhpcy5feTU9bjticmVhaztkZWZhdWx0OkhmKHRoaXMsdCxuKX10aGlzLl94MD10aGlzLl94MSx0aGlzLl94MT10aGlzLl94Mix0aGlzLl94Mj10LHRoaXMuX3kwPXRoaXMuX3kxLHRoaXMuX3kxPXRoaXMuX3kyLHRoaXMuX3kyPW59fTt2YXIgVl89ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybiBuZXcgR2YodCxuKX1yZXR1cm4gZS50ZW5zaW9uPWZ1bmN0aW9uKG4pe3JldHVybiB0KCtuKX0sZX0oMCk7VmYucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feDI9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5feTI9TmFOLHRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXsodGhpcy5fbGluZXx8MCE9PXRoaXMuX2xpbmUmJjM9PT10aGlzLl9wb2ludCkmJnRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksdGhpcy5fbGluZT0xLXRoaXMuX2xpbmV9LHBvaW50OmZ1bmN0aW9uKHQsbil7c3dpdGNoKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTMsdGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsdGhpcy5feTIpO2JyZWFrO2Nhc2UgMzp0aGlzLl9wb2ludD00O2RlZmF1bHQ6SGYodGhpcyx0LG4pfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXQsdGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9bn19O3ZhciAkXz1mdW5jdGlvbiB0KG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIG5ldyBWZih0LG4pfXJldHVybiBlLnRlbnNpb249ZnVuY3Rpb24obil7cmV0dXJuIHQoK24pfSxlfSgwKTtXZi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj1OYU4sdGhpcy5fbDAxX2E9dGhpcy5fbDEyX2E9dGhpcy5fbDIzX2E9dGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmE9dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAyOnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLHRoaXMuX3kyKTticmVhaztjYXNlIDM6dGhpcy5wb2ludCh0aGlzLl94Mix0aGlzLl95Mil9KHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYxPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih0LG4pe2lmKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7dmFyIGU9dGhpcy5feDItdCxyPXRoaXMuX3kyLW47dGhpcy5fbDIzX2E9TWF0aC5zcXJ0KHRoaXMuX2wyM18yYT1NYXRoLnBvdyhlKmUrcipyLHRoaXMuX2FscGhhKSl9c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MSx0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHQsbik6dGhpcy5fY29udGV4dC5tb3ZlVG8odCxuKTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9MztkZWZhdWx0OiRmKHRoaXMsdCxuKX10aGlzLl9sMDFfYT10aGlzLl9sMTJfYSx0aGlzLl9sMTJfYT10aGlzLl9sMjNfYSx0aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhLHRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmEsdGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj1ufX07dmFyIFdfPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gbj9uZXcgV2YodCxuKTpuZXcgWGYodCwwKX1yZXR1cm4gZS5hbHBoYT1mdW5jdGlvbihuKXtyZXR1cm4gdCgrbil9LGV9KC41KTtaZi5wcm90b3R5cGU9e2FyZWFTdGFydDpPZixhcmVhRW5kOk9mLGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3gzPXRoaXMuX3g0PXRoaXMuX3g1PXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPXRoaXMuX3kzPXRoaXMuX3k0PXRoaXMuX3k1PU5hTix0aGlzLl9sMDFfYT10aGlzLl9sMTJfYT10aGlzLl9sMjNfYT10aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhPXRoaXMuX2wyM18yYT10aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDE6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsdGhpcy5feTMpLHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7YnJlYWs7Y2FzZSAyOnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrO2Nhc2UgMzp0aGlzLnBvaW50KHRoaXMuX3gzLHRoaXMuX3kzKSx0aGlzLnBvaW50KHRoaXMuX3g0LHRoaXMuX3k0KSx0aGlzLnBvaW50KHRoaXMuX3g1LHRoaXMuX3k1KX19LHBvaW50OmZ1bmN0aW9uKHQsbil7aWYodD0rdCxuPStuLHRoaXMuX3BvaW50KXt2YXIgZT10aGlzLl94Mi10LHI9dGhpcy5feTItbjt0aGlzLl9sMjNfYT1NYXRoLnNxcnQodGhpcy5fbDIzXzJhPU1hdGgucG93KGUqZStyKnIsdGhpcy5fYWxwaGEpKX1zd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX3gzPXQsdGhpcy5feTM9bjticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9Mix0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94ND10LHRoaXMuX3k0PW4pO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zLHRoaXMuX3g1PXQsdGhpcy5feTU9bjticmVhaztkZWZhdWx0OiRmKHRoaXMsdCxuKX10aGlzLl9sMDFfYT10aGlzLl9sMTJfYSx0aGlzLl9sMTJfYT10aGlzLl9sMjNfYSx0aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhLHRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmEsdGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9dCx0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj1ufX07dmFyIFpfPWZ1bmN0aW9uIHQobil7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gbj9uZXcgWmYodCxuKTpuZXcgR2YodCwwKX1yZXR1cm4gZS5hbHBoYT1mdW5jdGlvbihuKXtyZXR1cm4gdCgrbil9LGV9KC41KTtRZi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj1OYU4sdGhpcy5fbDAxX2E9dGhpcy5fbDEyX2E9dGhpcy5fbDIzX2E9dGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmE9dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpeyh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMz09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXtpZih0PSt0LG49K24sdGhpcy5fcG9pbnQpe3ZhciBlPXRoaXMuX3gyLXQscj10aGlzLl95Mi1uO3RoaXMuX2wyM19hPU1hdGguc3FydCh0aGlzLl9sMjNfMmE9TWF0aC5wb3coZSplK3Iqcix0aGlzLl9hbHBoYSkpfXN3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTMsdGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsdGhpcy5feTIpO2JyZWFrO2Nhc2UgMzp0aGlzLl9wb2ludD00O2RlZmF1bHQ6JGYodGhpcyx0LG4pfXRoaXMuX2wwMV9hPXRoaXMuX2wxMl9hLHRoaXMuX2wxMl9hPXRoaXMuX2wyM19hLHRoaXMuX2wwMV8yYT10aGlzLl9sMTJfMmEsdGhpcy5fbDEyXzJhPXRoaXMuX2wyM18yYSx0aGlzLl94MD10aGlzLl94MSx0aGlzLl94MT10aGlzLl94Mix0aGlzLl94Mj10LHRoaXMuX3kwPXRoaXMuX3kxLHRoaXMuX3kxPXRoaXMuX3kyLHRoaXMuX3kyPW59fTt2YXIgUV89ZnVuY3Rpb24gdChuKXtmdW5jdGlvbiBlKHQpe3JldHVybiBuP25ldyBRZih0LG4pOm5ldyBWZih0LDApfXJldHVybiBlLmFscGhhPWZ1bmN0aW9uKG4pe3JldHVybiB0KCtuKX0sZX0oLjUpO0pmLnByb3RvdHlwZT17YXJlYVN0YXJ0Ok9mLGFyZWFFbmQ6T2YsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3RoaXMuX3BvaW50JiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpfSxwb2ludDpmdW5jdGlvbih0LG4pe3Q9K3Qsbj0rbix0aGlzLl9wb2ludD90aGlzLl9jb250ZXh0LmxpbmVUbyh0LG4pOih0aGlzLl9wb2ludD0xLHRoaXMuX2NvbnRleHQubW92ZVRvKHQsbikpfX0scmMucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5fdDA9TmFOLHRoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSx0aGlzLl95MSk7YnJlYWs7Y2FzZSAzOmVjKHRoaXMsdGhpcy5fdDAsbmModGhpcyx0aGlzLl90MCkpfSh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PXRoaXMuX3BvaW50KSYmdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24odCxuKXt2YXIgZT1OYU47aWYodD0rdCxuPStuLHQhPT10aGlzLl94MXx8biE9PXRoaXMuX3kxKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xLHRoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8odCxuKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LG4pO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zLGVjKHRoaXMsbmModGhpcyxlPXRjKHRoaXMsdCxuKSksZSk7YnJlYWs7ZGVmYXVsdDplYyh0aGlzLHRoaXMuX3QwLGU9dGModGhpcyx0LG4pKX10aGlzLl94MD10aGlzLl94MSx0aGlzLl94MT10LHRoaXMuX3kwPXRoaXMuX3kxLHRoaXMuX3kxPW4sdGhpcy5fdDA9ZX19fSwoaWMucHJvdG90eXBlPU9iamVjdC5jcmVhdGUocmMucHJvdG90eXBlKSkucG9pbnQ9ZnVuY3Rpb24odCxuKXtyYy5wcm90b3R5cGUucG9pbnQuY2FsbCh0aGlzLG4sdCl9LG9jLnByb3RvdHlwZT17bW92ZVRvOmZ1bmN0aW9uKHQsbil7dGhpcy5fY29udGV4dC5tb3ZlVG8obix0KX0sY2xvc2VQYXRoOmZ1bmN0aW9uKCl7dGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKX0sbGluZVRvOmZ1bmN0aW9uKHQsbil7dGhpcy5fY29udGV4dC5saW5lVG8obix0KX0sYmV6aWVyQ3VydmVUbzpmdW5jdGlvbih0LG4sZSxyLGksbyl7dGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKG4sdCxyLGUsbyxpKX19LGFjLnByb3RvdHlwZT17YXJlYVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3g9W10sdGhpcy5feT1bXX0sbGluZUVuZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3gsbj10aGlzLl95LGU9dC5sZW5ndGg7aWYoZSlpZih0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHRbMF0sblswXSk6dGhpcy5fY29udGV4dC5tb3ZlVG8odFswXSxuWzBdKSwyPT09ZSl0aGlzLl9jb250ZXh0LmxpbmVUbyh0WzFdLG5bMV0pO2Vsc2UgZm9yKHZhciByPXVjKHQpLGk9dWMobiksbz0wLGE9MTthPGU7KytvLCsrYSl0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8oclswXVtvXSxpWzBdW29dLHJbMV1bb10saVsxXVtvXSx0W2FdLG5bYV0pOyh0aGlzLl9saW5lfHwwIT09dGhpcy5fbGluZSYmMT09PWUpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU9MS10aGlzLl9saW5lLHRoaXMuX3g9dGhpcy5feT1udWxsfSxwb2ludDpmdW5jdGlvbih0LG4pe3RoaXMuX3gucHVzaCgrdCksdGhpcy5feS5wdXNoKCtuKX19LGZjLnByb3RvdHlwZT17YXJlYVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3g9dGhpcy5feT1OYU4sdGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpezA8dGhpcy5fdCYmdGhpcy5fdDwxJiYyPT09dGhpcy5fcG9pbnQmJnRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsdGhpcy5feSksKHRoaXMuX2xpbmV8fDAhPT10aGlzLl9saW5lJiYxPT09dGhpcy5fcG9pbnQpJiZ0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2xpbmU+PTAmJih0aGlzLl90PTEtdGhpcy5fdCx0aGlzLl9saW5lPTEtdGhpcy5fbGluZSl9LHBvaW50OmZ1bmN0aW9uKHQsbil7c3dpdGNoKHQ9K3Qsbj0rbix0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTEsdGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0LG4pOnRoaXMuX2NvbnRleHQubW92ZVRvKHQsbik7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7ZGVmYXVsdDppZih0aGlzLl90PD0wKXRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsbiksdGhpcy5fY29udGV4dC5saW5lVG8odCxuKTtlbHNle3ZhciBlPXRoaXMuX3gqKDEtdGhpcy5fdCkrdCp0aGlzLl90O3RoaXMuX2NvbnRleHQubGluZVRvKGUsdGhpcy5feSksdGhpcy5fY29udGV4dC5saW5lVG8oZSxuKX19dGhpcy5feD10LHRoaXMuX3k9bn19LHljLnByb3RvdHlwZT17Y29uc3RydWN0b3I6eWMsaW5zZXJ0OmZ1bmN0aW9uKHQsbil7dmFyIGUscixpO2lmKHQpe2lmKG4uUD10LG4uTj10Lk4sdC5OJiYodC5OLlA9biksdC5OPW4sdC5SKXtmb3IodD10LlI7dC5MOyl0PXQuTDt0Lkw9bn1lbHNlIHQuUj1uO2U9dH1lbHNlIHRoaXMuXz8odD14Yyh0aGlzLl8pLG4uUD1udWxsLG4uTj10LHQuUD10Lkw9bixlPXQpOihuLlA9bi5OPW51bGwsdGhpcy5fPW4sZT1udWxsKTtmb3Iobi5MPW4uUj1udWxsLG4uVT1lLG4uQz0hMCx0PW47ZSYmZS5DOyllPT09KHI9ZS5VKS5MPyhpPXIuUikmJmkuQz8oZS5DPWkuQz0hMSxyLkM9ITAsdD1yKToodD09PWUuUiYmKGJjKHRoaXMsZSksZT0odD1lKS5VKSxlLkM9ITEsci5DPSEwLG1jKHRoaXMscikpOihpPXIuTCkmJmkuQz8oZS5DPWkuQz0hMSxyLkM9ITAsdD1yKToodD09PWUuTCYmKG1jKHRoaXMsZSksZT0odD1lKS5VKSxlLkM9ITEsci5DPSEwLGJjKHRoaXMscikpLGU9dC5VO3RoaXMuXy5DPSExfSxyZW1vdmU6ZnVuY3Rpb24odCl7dC5OJiYodC5OLlA9dC5QKSx0LlAmJih0LlAuTj10Lk4pLHQuTj10LlA9bnVsbDt2YXIgbixlLHIsaT10LlUsbz10LkwsYT10LlI7aWYoZT1vP2E/eGMoYSk6bzphLGk/aS5MPT09dD9pLkw9ZTppLlI9ZTp0aGlzLl89ZSxvJiZhPyhyPWUuQyxlLkM9dC5DLGUuTD1vLG8uVT1lLGUhPT1hPyhpPWUuVSxlLlU9dC5VLHQ9ZS5SLGkuTD10LGUuUj1hLGEuVT1lKTooZS5VPWksaT1lLHQ9ZS5SKSk6KHI9dC5DLHQ9ZSksdCYmKHQuVT1pKSwhcilpZih0JiZ0LkMpdC5DPSExO2Vsc2V7ZG97aWYodD09PXRoaXMuXylicmVhaztpZih0PT09aS5MKXtpZigobj1pLlIpLkMmJihuLkM9ITEsaS5DPSEwLGJjKHRoaXMsaSksbj1pLlIpLG4uTCYmbi5MLkN8fG4uUiYmbi5SLkMpe24uUiYmbi5SLkN8fChuLkwuQz0hMSxuLkM9ITAsbWModGhpcyxuKSxuPWkuUiksbi5DPWkuQyxpLkM9bi5SLkM9ITEsYmModGhpcyxpKSx0PXRoaXMuXzticmVha319ZWxzZSBpZigobj1pLkwpLkMmJihuLkM9ITEsaS5DPSEwLG1jKHRoaXMsaSksbj1pLkwpLG4uTCYmbi5MLkN8fG4uUiYmbi5SLkMpe24uTCYmbi5MLkN8fChuLlIuQz0hMSxuLkM9ITAsYmModGhpcyxuKSxuPWkuTCksbi5DPWkuQyxpLkM9bi5MLkM9ITEsbWModGhpcyxpKSx0PXRoaXMuXzticmVha31uLkM9ITAsdD1pLGk9aS5VfXdoaWxlKCF0LkMpO3QmJih0LkM9ITEpfX19O3ZhciBKXyxLXyx0YixuYixlYixyYj1bXSxpYj1bXSxvYj0xZS02LGFiPTFlLTEyO1ljLnByb3RvdHlwZT17Y29uc3RydWN0b3I6WWMscG9seWdvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVkZ2VzO3JldHVybiB0aGlzLmNlbGxzLm1hcChmdW5jdGlvbihuKXt2YXIgZT1uLmhhbGZlZGdlcy5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIEVjKG4sdFtlXSl9KTtyZXR1cm4gZS5kYXRhPW4uc2l0ZS5kYXRhLGV9KX0sdHJpYW5nbGVzOmZ1bmN0aW9uKCl7dmFyIHQ9W10sbj10aGlzLmVkZ2VzO3JldHVybiB0aGlzLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oZSxyKXtpZihvPShpPWUuaGFsZmVkZ2VzKS5sZW5ndGgpZm9yKHZhciBpLG8sYSx1PWUuc2l0ZSxmPS0xLGM9bltpW28tMV1dLHM9Yy5sZWZ0PT09dT9jLnJpZ2h0OmMubGVmdDsrK2Y8bzspYT1zLHM9KGM9bltpW2ZdXSkubGVmdD09PXU/Yy5yaWdodDpjLmxlZnQsYSYmcyYmcjxhLmluZGV4JiZyPHMuaW5kZXgmJnFjKHUsYSxzKTwwJiZ0LnB1c2goW3UuZGF0YSxhLmRhdGEscy5kYXRhXSl9KSx0fSxsaW5rczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZ2VzLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5yaWdodH0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm57c291cmNlOnQubGVmdC5kYXRhLHRhcmdldDp0LnJpZ2h0LmRhdGF9fSl9LGZpbmQ6ZnVuY3Rpb24odCxuLGUpe2Zvcih2YXIgcixpLG89dGhpcyxhPW8uX2ZvdW5kfHwwLHU9by5jZWxscy5sZW5ndGg7IShpPW8uY2VsbHNbYV0pOylpZigrK2E+PXUpcmV0dXJuIG51bGw7dmFyIGY9dC1pLnNpdGVbMF0sYz1uLWkuc2l0ZVsxXSxzPWYqZitjKmM7ZG97aT1vLmNlbGxzW3I9YV0sYT1udWxsLGkuaGFsZmVkZ2VzLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9by5lZGdlc1tlXSx1PXIubGVmdDtpZih1IT09aS5zaXRlJiZ1fHwodT1yLnJpZ2h0KSl7dmFyIGY9dC11WzBdLGM9bi11WzFdLGw9ZipmK2MqYztsPHMmJihzPWwsYT11LmluZGV4KX19KX13aGlsZShudWxsIT09YSk7cmV0dXJuIG8uX2ZvdW5kPXIsbnVsbD09ZXx8czw9ZSplP2kuc2l0ZTpudWxsfX0sRmMucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpGYyxzY2FsZTpmdW5jdGlvbih0KXtyZXR1cm4gMT09PXQ/dGhpczpuZXcgRmModGhpcy5rKnQsdGhpcy54LHRoaXMueSl9LHRyYW5zbGF0ZTpmdW5jdGlvbih0LG4pe3JldHVybiAwPT09dCYwPT09bj90aGlzOm5ldyBGYyh0aGlzLmssdGhpcy54K3RoaXMuayp0LHRoaXMueSt0aGlzLmsqbil9LGFwcGx5OmZ1bmN0aW9uKHQpe3JldHVyblt0WzBdKnRoaXMuayt0aGlzLngsdFsxXSp0aGlzLmsrdGhpcy55XX0sYXBwbHlYOmZ1bmN0aW9uKHQpe3JldHVybiB0KnRoaXMuayt0aGlzLnh9LGFwcGx5WTpmdW5jdGlvbih0KXtyZXR1cm4gdCp0aGlzLmsrdGhpcy55fSxpbnZlcnQ6ZnVuY3Rpb24odCl7cmV0dXJuWyh0WzBdLXRoaXMueCkvdGhpcy5rLCh0WzFdLXRoaXMueSkvdGhpcy5rXX0saW52ZXJ0WDpmdW5jdGlvbih0KXtyZXR1cm4odC10aGlzLngpL3RoaXMua30saW52ZXJ0WTpmdW5jdGlvbih0KXtyZXR1cm4odC10aGlzLnkpL3RoaXMua30scmVzY2FsZVg6ZnVuY3Rpb24odCl7cmV0dXJuIHQuY29weSgpLmRvbWFpbih0LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCx0aGlzKS5tYXAodC5pbnZlcnQsdCkpfSxyZXNjYWxlWTpmdW5jdGlvbih0KXtyZXR1cm4gdC5jb3B5KCkuZG9tYWluKHQucmFuZ2UoKS5tYXAodGhpcy5pbnZlcnRZLHRoaXMpLm1hcCh0LmludmVydCx0KSl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuInRyYW5zbGF0ZSgiK3RoaXMueCsiLCIrdGhpcy55KyIpIHNjYWxlKCIrdGhpcy5rKyIpIn19O3ZhciB1Yj1uZXcgRmMoMSwwLDApO0ljLnByb3RvdHlwZT1GYy5wcm90b3R5cGUsdC52ZXJzaW9uPSI1LjQuMCIsdC5iaXNlY3Q9SmMsdC5iaXNlY3RSaWdodD1KYyx0LmJpc2VjdExlZnQ9S2MsdC5hc2NlbmRpbmc9bix0LmJpc2VjdG9yPWUsdC5jcm9zcz1mdW5jdGlvbih0LG4sZSl7dmFyIGksbyxhLHUsZj10Lmxlbmd0aCxjPW4ubGVuZ3RoLHM9bmV3IEFycmF5KGYqYyk7Zm9yKG51bGw9PWUmJihlPXIpLGk9YT0wO2k8ZjsrK2kpZm9yKHU9dFtpXSxvPTA7bzxjOysrbywrK2Epc1thXT1lKHUsbltvXSk7cmV0dXJuIHN9LHQuZGVzY2VuZGluZz1mdW5jdGlvbih0LG4pe3JldHVybiBuPHQ/LTE6bj50PzE6bj49dD8wOk5hTn0sdC5kZXZpYXRpb249YSx0LmV4dGVudD11LHQuaGlzdG9ncmFtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgaSxvLGE9dC5sZW5ndGgsdT1uZXcgQXJyYXkoYSk7Zm9yKGk9MDtpPGE7KytpKXVbaV09bih0W2ldLGksdCk7dmFyIGY9ZSh1KSxjPWZbMF0sbD1mWzFdLGg9cih1LGMsbCk7QXJyYXkuaXNBcnJheShoKXx8KGg9ZChjLGwsaCksaD1zKE1hdGguY2VpbChjL2gpKmgsTWF0aC5mbG9vcihsL2gpKmgsaCkpO2Zvcih2YXIgcD1oLmxlbmd0aDtoWzBdPD1jOyloLnNoaWZ0KCksLS1wO2Zvcig7aFtwLTFdPmw7KWgucG9wKCksLS1wO3ZhciB2LGc9bmV3IEFycmF5KHArMSk7Zm9yKGk9MDtpPD1wOysraSkodj1nW2ldPVtdKS54MD1pPjA/aFtpLTFdOmMsdi54MT1pPHA/aFtpXTpsO2ZvcihpPTA7aTxhOysraSljPD0obz11W2ldKSYmbzw9bCYmZ1tKYyhoLG8sMCxwKV0ucHVzaCh0W2ldKTtyZXR1cm4gZ312YXIgbj1jLGU9dSxyPXA7cmV0dXJuIHQudmFsdWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpmKGUpLHQpOm59LHQuZG9tYWluPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246ZihbblswXSxuWzFdXSksdCk6ZX0sdC50aHJlc2hvbGRzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246QXJyYXkuaXNBcnJheShuKT9mKG5zLmNhbGwobikpOmYobiksdCk6cn0sdH0sdC50aHJlc2hvbGRGcmVlZG1hbkRpYWNvbmlzPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD1lcy5jYWxsKHQsaSkuc29ydChuKSxNYXRoLmNlaWwoKHItZSkvKDIqKHYodCwuNzUpLXYodCwuMjUpKSpNYXRoLnBvdyh0Lmxlbmd0aCwtMS8zKSkpfSx0LnRocmVzaG9sZFNjb3R0PWZ1bmN0aW9uKHQsbixlKXtyZXR1cm4gTWF0aC5jZWlsKChlLW4pLygzLjUqYSh0KSpNYXRoLnBvdyh0Lmxlbmd0aCwtMS8zKSkpfSx0LnRocmVzaG9sZFN0dXJnZXM9cCx0Lm1heD1nLHQubWVhbj1mdW5jdGlvbih0LG4pe3ZhciBlLHI9dC5sZW5ndGgsbz1yLGE9LTEsdT0wO2lmKG51bGw9PW4pZm9yKDsrK2E8cjspaXNOYU4oZT1pKHRbYV0pKT8tLW86dSs9ZTtlbHNlIGZvcig7KythPHI7KWlzTmFOKGU9aShuKHRbYV0sYSx0KSkpPy0tbzp1Kz1lO2lmKG8pcmV0dXJuIHUvb30sdC5tZWRpYW49ZnVuY3Rpb24odCxlKXt2YXIgcixvPXQubGVuZ3RoLGE9LTEsdT1bXTtpZihudWxsPT1lKWZvcig7KythPG87KWlzTmFOKHI9aSh0W2FdKSl8fHUucHVzaChyKTtlbHNlIGZvcig7KythPG87KWlzTmFOKHI9aShlKHRbYV0sYSx0KSkpfHx1LnB1c2gocik7cmV0dXJuIHYodS5zb3J0KG4pLC41KX0sdC5tZXJnZT15LHQubWluPV8sdC5wYWlycz1mdW5jdGlvbih0LG4pe251bGw9PW4mJihuPXIpO2Zvcih2YXIgZT0wLGk9dC5sZW5ndGgtMSxvPXRbMF0sYT1uZXcgQXJyYXkoaTwwPzA6aSk7ZTxpOylhW2VdPW4obyxvPXRbKytlXSk7cmV0dXJuIGF9LHQucGVybXV0ZT1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZT1uLmxlbmd0aCxyPW5ldyBBcnJheShlKTtlLS07KXJbZV09dFtuW2VdXTtyZXR1cm4gcn0sdC5xdWFudGlsZT12LHQucmFuZ2U9cyx0LnNjYW49ZnVuY3Rpb24odCxlKXtpZihyPXQubGVuZ3RoKXt2YXIgcixpLG89MCxhPTAsdT10W2FdO2ZvcihudWxsPT1lJiYoZT1uKTsrK288cjspKGUoaT10W29dLHUpPDB8fDAhPT1lKHUsdSkpJiYodT1pLGE9byk7cmV0dXJuIDA9PT1lKHUsdSk/YTp2b2lkIDB9fSx0LnNodWZmbGU9ZnVuY3Rpb24odCxuLGUpe2Zvcih2YXIgcixpLG89KG51bGw9PWU/dC5sZW5ndGg6ZSktKG49bnVsbD09bj8wOituKTtvOylpPU1hdGgucmFuZG9tKCkqby0tfDAscj10W28rbl0sdFtvK25dPXRbaStuXSx0W2krbl09cjtyZXR1cm4gdH0sdC5zdW09ZnVuY3Rpb24odCxuKXt2YXIgZSxyPXQubGVuZ3RoLGk9LTEsbz0wO2lmKG51bGw9PW4pZm9yKDsrK2k8cjspKGU9K3RbaV0pJiYobys9ZSk7ZWxzZSBmb3IoOysraTxyOykoZT0rbih0W2ldLGksdCkpJiYobys9ZSk7cmV0dXJuIG99LHQudGlja3M9bCx0LnRpY2tJbmNyZW1lbnQ9aCx0LnRpY2tTdGVwPWQsdC50cmFuc3Bvc2U9Yix0LnZhcmlhbmNlPW8sdC56aXA9ZnVuY3Rpb24oKXtyZXR1cm4gYihhcmd1bWVudHMpfSx0LmF4aXNUb3A9ZnVuY3Rpb24odCl7cmV0dXJuIFQodXMsdCl9LHQuYXhpc1JpZ2h0PWZ1bmN0aW9uKHQpe3JldHVybiBUKGZzLHQpfSx0LmF4aXNCb3R0b209ZnVuY3Rpb24odCl7cmV0dXJuIFQoY3MsdCl9LHQuYXhpc0xlZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIFQoc3MsdCl9LHQuYnJ1c2g9ZnVuY3Rpb24oKXtyZXR1cm4gZWUoX2gpfSx0LmJydXNoWD1mdW5jdGlvbigpe3JldHVybiBlZShnaCl9LHQuYnJ1c2hZPWZ1bmN0aW9uKCl7cmV0dXJuIGVlKHloKX0sdC5icnVzaFNlbGVjdGlvbj1mdW5jdGlvbih0KXt2YXIgbj10Ll9fYnJ1c2g7cmV0dXJuIG4/bi5kaW0ub3V0cHV0KG4uc2VsZWN0aW9uKTpudWxsfSx0LmNob3JkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgbyxhLHUsZixjLGwsaD10Lmxlbmd0aCxkPVtdLHA9cyhoKSx2PVtdLGc9W10seT1nLmdyb3Vwcz1uZXcgQXJyYXkoaCksXz1uZXcgQXJyYXkoaCpoKTtmb3Iobz0wLGM9LTE7KytjPGg7KXtmb3IoYT0wLGw9LTE7KytsPGg7KWErPXRbY11bbF07ZC5wdXNoKGEpLHYucHVzaChzKGgpKSxvKz1hfWZvcihlJiZwLnNvcnQoZnVuY3Rpb24odCxuKXtyZXR1cm4gZShkW3RdLGRbbl0pfSksciYmdi5mb3JFYWNoKGZ1bmN0aW9uKG4sZSl7bi5zb3J0KGZ1bmN0aW9uKG4saSl7cmV0dXJuIHIodFtlXVtuXSx0W2VdW2ldKX0pfSksZj0obz1raCgwLEVoLW4qaCkvbyk/bjpFaC9oLGE9MCxjPS0xOysrYzxoOyl7Zm9yKHU9YSxsPS0xOysrbDxoOyl7dmFyIGI9cFtjXSxtPXZbYl1bbF0seD10W2JdW21dLHc9YSxNPWErPXgqbztfW20qaCtiXT17aW5kZXg6YixzdWJpbmRleDptLHN0YXJ0QW5nbGU6dyxlbmRBbmdsZTpNLHZhbHVlOnh9fXlbYl09e2luZGV4OmIsc3RhcnRBbmdsZTp1LGVuZEFuZ2xlOmEsdmFsdWU6ZFtiXX0sYSs9Zn1mb3IoYz0tMTsrK2M8aDspZm9yKGw9Yy0xOysrbDxoOyl7dmFyIEE9X1tsKmgrY10sVD1fW2MqaCtsXTsoQS52YWx1ZXx8VC52YWx1ZSkmJmcucHVzaChBLnZhbHVlPFQudmFsdWU/e3NvdXJjZTpULHRhcmdldDpBfTp7c291cmNlOkEsdGFyZ2V0OlR9KX1yZXR1cm4gaT9nLnNvcnQoaSk6Z312YXIgbj0wLGU9bnVsbCxyPW51bGwsaT1udWxsO3JldHVybiB0LnBhZEFuZ2xlPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPWtoKDAsZSksdCk6bn0sdC5zb3J0R3JvdXBzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPW4sdCk6ZX0sdC5zb3J0U3ViZ3JvdXBzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW4sdCk6cn0sdC5zb3J0Q2hvcmRzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhudWxsPT1uP2k9bnVsbDooaT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obixlKXtyZXR1cm4gdChuLnNvdXJjZS52YWx1ZStuLnRhcmdldC52YWx1ZSxlLnNvdXJjZS52YWx1ZStlLnRhcmdldC52YWx1ZSl9fShuKSkuXz1uLHQpOmkmJmkuX30sdH0sdC5yaWJib249ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQsdT1DaC5jYWxsKGFyZ3VtZW50cyksZj1uLmFwcGx5KHRoaXMsdSksYz1lLmFwcGx5KHRoaXMsdSkscz0rci5hcHBseSh0aGlzLCh1WzBdPWYsdSkpLGw9aS5hcHBseSh0aGlzLHUpLVNoLGg9by5hcHBseSh0aGlzLHUpLVNoLGQ9cypBaChsKSxwPXMqVGgobCksdj0rci5hcHBseSh0aGlzLCh1WzBdPWMsdSkpLGc9aS5hcHBseSh0aGlzLHUpLVNoLHk9by5hcHBseSh0aGlzLHUpLVNoO2lmKGF8fChhPXQ9b2UoKSksYS5tb3ZlVG8oZCxwKSxhLmFyYygwLDAscyxsLGgpLGw9PT1nJiZoPT09eXx8KGEucXVhZHJhdGljQ3VydmVUbygwLDAsdipBaChnKSx2KlRoKGcpKSxhLmFyYygwLDAsdixnLHkpKSxhLnF1YWRyYXRpY0N1cnZlVG8oMCwwLGQscCksYS5jbG9zZVBhdGgoKSx0KXJldHVybiBhPW51bGwsdCsiInx8bnVsbH12YXIgbj1hZSxlPXVlLHI9ZmUsaT1jZSxvPXNlLGE9bnVsbDtyZXR1cm4gdC5yYWRpdXM9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpyZSgrbiksdCk6cn0sdC5zdGFydEFuZ2xlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246cmUoK24pLHQpOml9LHQuZW5kQW5nbGU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpyZSgrbiksdCk6b30sdC5zb3VyY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49ZSx0KTpufSx0LnRhcmdldD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1uLHQpOmV9LHQuY29udGV4dD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT1udWxsPT1uP251bGw6bix0KTphfSx0fSx0Lm5lc3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4saSxhLHUpe2lmKGk+PW8ubGVuZ3RoKXJldHVybiBudWxsIT1lJiZuLnNvcnQoZSksbnVsbCE9cj9yKG4pOm47Zm9yKHZhciBmLGMscyxsPS0xLGg9bi5sZW5ndGgsZD1vW2krK10scD1oZSgpLHY9YSgpOysrbDxoOykocz1wLmdldChmPWQoYz1uW2xdKSsiIikpP3MucHVzaChjKTpwLnNldChmLFtjXSk7cmV0dXJuIHAuZWFjaChmdW5jdGlvbihuLGUpe3UodixlLHQobixpLGEsdSkpfSksdn1mdW5jdGlvbiBuKHQsZSl7aWYoKytlPm8ubGVuZ3RoKXJldHVybiB0O3ZhciBpLHU9YVtlLTFdO3JldHVybiBudWxsIT1yJiZlPj1vLmxlbmd0aD9pPXQuZW50cmllcygpOihpPVtdLHQuZWFjaChmdW5jdGlvbih0LHIpe2kucHVzaCh7a2V5OnIsdmFsdWVzOm4odCxlKX0pfSkpLG51bGwhPXU/aS5zb3J0KGZ1bmN0aW9uKHQsbil7cmV0dXJuIHUodC5rZXksbi5rZXkpfSk6aX12YXIgZSxyLGksbz1bXSxhPVtdO3JldHVybiBpPXtvYmplY3Q6ZnVuY3Rpb24obil7cmV0dXJuIHQobiwwLGRlLHBlKX0sbWFwOmZ1bmN0aW9uKG4pe3JldHVybiB0KG4sMCx2ZSxnZSl9LGVudHJpZXM6ZnVuY3Rpb24oZSl7cmV0dXJuIG4odChlLDAsdmUsZ2UpLDApfSxrZXk6ZnVuY3Rpb24odCl7cmV0dXJuIG8ucHVzaCh0KSxpfSxzb3J0S2V5czpmdW5jdGlvbih0KXtyZXR1cm4gYVtvLmxlbmd0aC0xXT10LGl9LHNvcnRWYWx1ZXM6ZnVuY3Rpb24odCl7cmV0dXJuIGU9dCxpfSxyb2xsdXA6ZnVuY3Rpb24odCl7cmV0dXJuIHI9dCxpfX19LHQuc2V0PV9lLHQubWFwPWhlLHQua2V5cz1mdW5jdGlvbih0KXt2YXIgbj1bXTtmb3IodmFyIGUgaW4gdCluLnB1c2goZSk7cmV0dXJuIG59LHQudmFsdWVzPWZ1bmN0aW9uKHQpe3ZhciBuPVtdO2Zvcih2YXIgZSBpbiB0KW4ucHVzaCh0W2VdKTtyZXR1cm4gbn0sdC5lbnRyaWVzPWZ1bmN0aW9uKHQpe3ZhciBuPVtdO2Zvcih2YXIgZSBpbiB0KW4ucHVzaCh7a2V5OmUsdmFsdWU6dFtlXX0pO3JldHVybiBufSx0LmNvbG9yPWt0LHQucmdiPVJ0LHQuaHNsPXF0LHQubGFiPUZ0LHQuaGNsPSR0LHQubGNoPWZ1bmN0aW9uKHQsbixlLHIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9WdCh0KTpuZXcgV3QoZSxuLHQsbnVsbD09cj8xOnIpfSx0LmdyYXk9ZnVuY3Rpb24odCxuKXtyZXR1cm4gbmV3IEl0KHQsMCwwLG51bGw9PW4/MTpuKX0sdC5jdWJlaGVsaXg9WnQsdC5jb250b3Vycz1NZSx0LmNvbnRvdXJEZW5zaXR5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHYqeSkscj1uZXcgRmxvYXQzMkFycmF5KHYqeSk7dC5mb3JFYWNoKGZ1bmN0aW9uKHQsbixyKXt2YXIgaT1hKHQsbixyKStwPj5oLG89dSh0LG4scikrcD4+aDtpPj0wJiZpPHYmJm8+PTAmJm88eSYmKytlW2krbyp2XX0pLEFlKHt3aWR0aDp2LGhlaWdodDp5LGRhdGE6ZX0se3dpZHRoOnYsaGVpZ2h0OnksZGF0YTpyfSxsPj5oKSxUZSh7d2lkdGg6dixoZWlnaHQ6eSxkYXRhOnJ9LHt3aWR0aDp2LGhlaWdodDp5LGRhdGE6ZX0sbD4+aCksQWUoe3dpZHRoOnYsaGVpZ2h0OnksZGF0YTplfSx7d2lkdGg6dixoZWlnaHQ6eSxkYXRhOnJ9LGw+PmgpLFRlKHt3aWR0aDp2LGhlaWdodDp5LGRhdGE6cn0se3dpZHRoOnYsaGVpZ2h0OnksZGF0YTplfSxsPj5oKSxBZSh7d2lkdGg6dixoZWlnaHQ6eSxkYXRhOmV9LHt3aWR0aDp2LGhlaWdodDp5LGRhdGE6cn0sbD4+aCksVGUoe3dpZHRoOnYsaGVpZ2h0OnksZGF0YTpyfSx7d2lkdGg6dixoZWlnaHQ6eSxkYXRhOmV9LGw+PmgpO3ZhciBpPV8oZSk7aWYoIUFycmF5LmlzQXJyYXkoaSkpe3ZhciBvPWcoZSk7aT1kKDAsbyxpKSwoaT1zKDAsTWF0aC5mbG9vcihvL2kpKmksaSkpLnNoaWZ0KCl9cmV0dXJuIE1lKCkudGhyZXNob2xkcyhpKS5zaXplKFt2LHldKShlKS5tYXAobil9ZnVuY3Rpb24gbih0KXtyZXR1cm4gdC52YWx1ZSo9TWF0aC5wb3coMiwtMipoKSx0LmNvb3JkaW5hdGVzLmZvckVhY2goZSksdH1mdW5jdGlvbiBlKHQpe3QuZm9yRWFjaChyKX1mdW5jdGlvbiByKHQpe3QuZm9yRWFjaChpKX1mdW5jdGlvbiBpKHQpe3RbMF09dFswXSpNYXRoLnBvdygyLGgpLXAsdFsxXT10WzFdKk1hdGgucG93KDIsaCktcH1mdW5jdGlvbiBvKCl7cmV0dXJuIHA9MypsLHY9ZisyKnA+PmgseT1jKzIqcD4+aCx0fXZhciBhPU5lLHU9U2UsZj05NjAsYz01MDAsbD0yMCxoPTIscD0zKmwsdj1mKzIqcD4+aCx5PWMrMipwPj5oLF89bWUoMjApO3JldHVybiB0Lng9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjptZSgrbiksdCk6YX0sdC55PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PSJmdW5jdGlvbiI9PXR5cGVvZiBuP246bWUoK24pLHQpOnV9LHQuc2l6ZT1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bZixjXTt2YXIgbj1NYXRoLmNlaWwodFswXSksZT1NYXRoLmNlaWwodFsxXSk7aWYoIShuPj0wfHxuPj0wKSl0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgc2l6ZSIpO3JldHVybiBmPW4sYz1lLG8oKX0sdC5jZWxsU2l6ZT1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gMTw8aDtpZighKCh0PSt0KT49MSkpdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGNlbGwgc2l6ZSIpO3JldHVybiBoPU1hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5MTjIpLG8oKX0sdC50aHJlc2hvbGRzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhfPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246QXJyYXkuaXNBcnJheShuKT9tZShEaC5jYWxsKG4pKTptZShuKSx0KTpffSx0LmJhbmR3aWR0aD1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gTWF0aC5zcXJ0KGwqKGwrMSkpO2lmKCEoKHQ9K3QpPj0wKSl0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgYmFuZHdpZHRoIik7cmV0dXJuIGw9TWF0aC5yb3VuZCgoTWF0aC5zcXJ0KDQqdCp0KzEpLTEpLzIpLG8oKX0sdH0sdC5kaXNwYXRjaD1OLHQuZHJhZz1mdW5jdGlvbigpe2Z1bmN0aW9uIG4odCl7dC5vbigibW91c2Vkb3duLmRyYWciLGUpLmZpbHRlcihnKS5vbigidG91Y2hzdGFydC5kcmFnIixvKS5vbigidG91Y2htb3ZlLmRyYWciLGEpLm9uKCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWciLHUpLnN0eWxlKCJ0b3VjaC1hY3Rpb24iLCJub25lIikuc3R5bGUoIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvciIsInJnYmEoMCwwLDAsMCkiKX1mdW5jdGlvbiBlKCl7aWYoIWgmJmQuYXBwbHkodGhpcyxhcmd1bWVudHMpKXt2YXIgbj1mKCJtb3VzZSIscC5hcHBseSh0aGlzLGFyZ3VtZW50cykscHQsdGhpcyxhcmd1bWVudHMpO24mJihjdCh0LmV2ZW50LnZpZXcpLm9uKCJtb3VzZW1vdmUuZHJhZyIsciwhMCkub24oIm1vdXNldXAuZHJhZyIsaSwhMCksX3QodC5ldmVudC52aWV3KSxndCgpLGw9ITEsYz10LmV2ZW50LmNsaWVudFgscz10LmV2ZW50LmNsaWVudFksbigic3RhcnQiKSl9fWZ1bmN0aW9uIHIoKXtpZih5dCgpLCFsKXt2YXIgbj10LmV2ZW50LmNsaWVudFgtYyxlPXQuZXZlbnQuY2xpZW50WS1zO2w9bipuK2UqZT5tfXkubW91c2UoImRyYWciKX1mdW5jdGlvbiBpKCl7Y3QodC5ldmVudC52aWV3KS5vbigibW91c2Vtb3ZlLmRyYWcgbW91c2V1cC5kcmFnIixudWxsKSxidCh0LmV2ZW50LnZpZXcsbCkseXQoKSx5Lm1vdXNlKCJlbmQiKX1mdW5jdGlvbiBvKCl7aWYoZC5hcHBseSh0aGlzLGFyZ3VtZW50cykpe3ZhciBuLGUscj10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLGk9cC5hcHBseSh0aGlzLGFyZ3VtZW50cyksbz1yLmxlbmd0aDtmb3Iobj0wO248bzsrK24pKGU9ZihyW25dLmlkZW50aWZpZXIsaSx2dCx0aGlzLGFyZ3VtZW50cykpJiYoZ3QoKSxlKCJzdGFydCIpKX19ZnVuY3Rpb24gYSgpe3ZhciBuLGUscj10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLGk9ci5sZW5ndGg7Zm9yKG49MDtuPGk7KytuKShlPXlbcltuXS5pZGVudGlmaWVyXSkmJih5dCgpLGUoImRyYWciKSl9ZnVuY3Rpb24gdSgpe3ZhciBuLGUscj10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLGk9ci5sZW5ndGg7Zm9yKGgmJmNsZWFyVGltZW91dChoKSxoPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtoPW51bGx9LDUwMCksbj0wO248aTsrK24pKGU9eVtyW25dLmlkZW50aWZpZXJdKSYmKGd0KCksZSgiZW5kIikpfWZ1bmN0aW9uIGYoZSxyLGksbyxhKXt2YXIgdSxmLGMscz1pKHIsZSksbD1fLmNvcHkoKTtpZihvdChuZXcgeHQobiwiYmVmb3Jlc3RhcnQiLHUsZSxiLHNbMF0sc1sxXSwwLDAsbCksZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9KHQuZXZlbnQuc3ViamVjdD11PXYuYXBwbHkobyxhKSkmJihmPXUueC1zWzBdfHwwLGM9dS55LXNbMV18fDAsITApfSkpcmV0dXJuIGZ1bmN0aW9uIHQoaCl7dmFyIGQscD1zO3N3aXRjaChoKXtjYXNlInN0YXJ0Ijp5W2VdPXQsZD1iKys7YnJlYWs7Y2FzZSJlbmQiOmRlbGV0ZSB5W2VdLC0tYjtjYXNlImRyYWciOnM9aShyLGUpLGQ9Yn1vdChuZXcgeHQobixoLHUsZSxkLHNbMF0rZixzWzFdK2Msc1swXS1wWzBdLHNbMV0tcFsxXSxsKSxsLmFwcGx5LGwsW2gsbyxhXSl9fXZhciBjLHMsbCxoLGQ9d3QscD1NdCx2PUF0LGc9VHQseT17fSxfPU4oInN0YXJ0IiwiZHJhZyIsImVuZCIpLGI9MCxtPTA7cmV0dXJuIG4uZmlsdGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhkPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6bXQoISF0KSxuKTpkfSxuLmNvbnRhaW5lcj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocD0iZnVuY3Rpb24iPT10eXBlb2YgdD90Om10KHQpLG4pOnB9LG4uc3ViamVjdD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odj0iZnVuY3Rpb24iPT10eXBlb2YgdD90Om10KHQpLG4pOnZ9LG4udG91Y2hhYmxlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhnPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6bXQoISF0KSxuKTpnfSxuLm9uPWZ1bmN0aW9uKCl7dmFyIHQ9Xy5vbi5hcHBseShfLGFyZ3VtZW50cyk7cmV0dXJuIHQ9PT1fP246dH0sbi5jbGlja0Rpc3RhbmNlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhtPSh0PSt0KSp0LG4pOk1hdGguc3FydChtKX0sbn0sdC5kcmFnRGlzYWJsZT1fdCx0LmRyYWdFbmFibGU9YnQsdC5kc3ZGb3JtYXQ9a2UsdC5jc3ZQYXJzZT1qaCx0LmNzdlBhcnNlUm93cz1IaCx0LmNzdkZvcm1hdD1YaCx0LmNzdkZvcm1hdFJvd3M9R2gsdC50c3ZQYXJzZT0kaCx0LnRzdlBhcnNlUm93cz1XaCx0LnRzdkZvcm1hdD1aaCx0LnRzdkZvcm1hdFJvd3M9UWgsdC5lYXNlTGluZWFyPWZ1bmN0aW9uKHQpe3JldHVybit0fSx0LmVhc2VRdWFkPUZuLHQuZWFzZVF1YWRJbj1mdW5jdGlvbih0KXtyZXR1cm4gdCp0fSx0LmVhc2VRdWFkT3V0PWZ1bmN0aW9uKHQpe3JldHVybiB0KigyLXQpfSx0LmVhc2VRdWFkSW5PdXQ9Rm4sdC5lYXNlQ3ViaWM9SW4sdC5lYXNlQ3ViaWNJbj1mdW5jdGlvbih0KXtyZXR1cm4gdCp0KnR9LHQuZWFzZUN1YmljT3V0PWZ1bmN0aW9uKHQpe3JldHVybi0tdCp0KnQrMX0sdC5lYXNlQ3ViaWNJbk91dD1Jbix0LmVhc2VQb2x5PUhsLHQuZWFzZVBvbHlJbj1JbCx0LmVhc2VQb2x5T3V0PWpsLHQuZWFzZVBvbHlJbk91dD1IbCx0LmVhc2VTaW49am4sdC5lYXNlU2luSW49ZnVuY3Rpb24odCl7cmV0dXJuIDEtTWF0aC5jb3ModCpHbCl9LHQuZWFzZVNpbk91dD1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5zaW4odCpHbCl9LHQuZWFzZVNpbkluT3V0PWpuLHQuZWFzZUV4cD1Ibix0LmVhc2VFeHBJbj1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5wb3coMiwxMCp0LTEwKX0sdC5lYXNlRXhwT3V0PWZ1bmN0aW9uKHQpe3JldHVybiAxLU1hdGgucG93KDIsLTEwKnQpfSx0LmVhc2VFeHBJbk91dD1Ibix0LmVhc2VDaXJjbGU9WG4sdC5lYXNlQ2lyY2xlSW49ZnVuY3Rpb24odCl7cmV0dXJuIDEtTWF0aC5zcXJ0KDEtdCp0KX0sdC5lYXNlQ2lyY2xlT3V0PWZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNxcnQoMS0gLS10KnQpfSx0LmVhc2VDaXJjbGVJbk91dD1Ybix0LmVhc2VCb3VuY2U9R24sdC5lYXNlQm91bmNlSW49ZnVuY3Rpb24odCl7cmV0dXJuIDEtR24oMS10KX0sdC5lYXNlQm91bmNlT3V0PUduLHQuZWFzZUJvdW5jZUluT3V0PWZ1bmN0aW9uKHQpe3JldHVybigodCo9Mik8PTE/MS1HbigxLXQpOkduKHQtMSkrMSkvMn0sdC5lYXNlQmFjaz1vaCx0LmVhc2VCYWNrSW49cmgsdC5lYXNlQmFja091dD1paCx0LmVhc2VCYWNrSW5PdXQ9b2gsdC5lYXNlRWxhc3RpYz1maCx0LmVhc2VFbGFzdGljSW49dWgsdC5lYXNlRWxhc3RpY091dD1maCx0LmVhc2VFbGFzdGljSW5PdXQ9Y2gsdC5ibG9iPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGZldGNoKHQsbikudGhlbihDZSl9LHQuYnVmZmVyPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGZldGNoKHQsbikudGhlbihQZSl9LHQuZHN2PWZ1bmN0aW9uKHQsbixlLHIpezM9PT1hcmd1bWVudHMubGVuZ3RoJiYiZnVuY3Rpb24iPT10eXBlb2YgZSYmKHI9ZSxlPXZvaWQgMCk7dmFyIGk9a2UodCk7cmV0dXJuIFJlKG4sZSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gaS5wYXJzZSh0LHIpfSl9LHQuY3N2PUpoLHQudHN2PUtoLHQuaW1hZ2U9ZnVuY3Rpb24odCxuKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oZSxyKXt2YXIgaT1uZXcgSW1hZ2U7Zm9yKHZhciBvIGluIG4paVtvXT1uW29dO2kub25lcnJvcj1yLGkub25sb2FkPWZ1bmN0aW9uKCl7ZShpKX0saS5zcmM9dH0pfSx0Lmpzb249ZnVuY3Rpb24odCxuKXtyZXR1cm4gZmV0Y2godCxuKS50aGVuKERlKX0sdC50ZXh0PVJlLHQueG1sPXRkLHQuaHRtbD1uZCx0LnN2Zz1lZCx0LmZvcmNlQ2VudGVyPWZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gZSgpe3ZhciBlLGksbz1yLmxlbmd0aCxhPTAsdT0wO2ZvcihlPTA7ZTxvOysrZSlhKz0oaT1yW2VdKS54LHUrPWkueTtmb3IoYT1hL28tdCx1PXUvby1uLGU9MDtlPG87KytlKShpPXJbZV0pLngtPWEsaS55LT11fXZhciByO3JldHVybiBudWxsPT10JiYodD0wKSxudWxsPT1uJiYobj0wKSxlLmluaXRpYWxpemU9ZnVuY3Rpb24odCl7cj10fSxlLng9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9K24sZSk6dH0sZS55PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhuPSt0LGUpOm59LGV9LHQuZm9yY2VDb2xsaWRlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtmb3IodmFyIHQsbixyLGYsYyxzLGwsaD1pLmxlbmd0aCxkPTA7ZDx1OysrZClmb3Iobj1qZShpLEdlLFZlKS52aXNpdEFmdGVyKGUpLHQ9MDt0PGg7Kyt0KXI9aVt0XSxzPW9bci5pbmRleF0sbD1zKnMsZj1yLngrci52eCxjPXIueStyLnZ5LG4udmlzaXQoZnVuY3Rpb24odCxuLGUsaSxvKXt2YXIgdT10LmRhdGEsaD10LnIsZD1zK2g7aWYoIXUpcmV0dXJuIG4+ZitkfHxpPGYtZHx8ZT5jK2R8fG88Yy1kO2lmKHUuaW5kZXg+ci5pbmRleCl7dmFyIHA9Zi11LngtdS52eCx2PWMtdS55LXUudnksZz1wKnArdip2O2c8ZCpkJiYoMD09PXAmJihwPU9lKCksZys9cCpwKSwwPT09diYmKHY9T2UoKSxnKz12KnYpLGc9KGQtKGc9TWF0aC5zcXJ0KGcpKSkvZyphLHIudngrPShwKj1nKSooZD0oaCo9aCkvKGwraCkpLHIudnkrPSh2Kj1nKSpkLHUudngtPXAqKGQ9MS1kKSx1LnZ5LT12KmQpfX0pfWZ1bmN0aW9uIGUodCl7aWYodC5kYXRhKXJldHVybiB0LnI9b1t0LmRhdGEuaW5kZXhdO2Zvcih2YXIgbj10LnI9MDtuPDQ7KytuKXRbbl0mJnRbbl0ucj50LnImJih0LnI9dFtuXS5yKX1mdW5jdGlvbiByKCl7aWYoaSl7dmFyIG4sZSxyPWkubGVuZ3RoO2ZvcihvPW5ldyBBcnJheShyKSxuPTA7bjxyOysrbillPWlbbl0sb1tlLmluZGV4XT0rdChlLG4saSl9fXZhciBpLG8sYT0xLHU9MTtyZXR1cm4iZnVuY3Rpb24iIT10eXBlb2YgdCYmKHQ9cWUobnVsbD09dD8xOit0KSksbi5pbml0aWFsaXplPWZ1bmN0aW9uKHQpe2k9dCxyKCl9LG4uaXRlcmF0aW9ucz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT0rdCxuKTp1fSxuLnN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPSt0LG4pOmF9LG4ucmFkaXVzPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PSJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6cWUoK2UpLHIoKSxuKTp0fSxufSx0LmZvcmNlTGluaz1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKG4pe2Zvcih2YXIgZT0wLHI9dC5sZW5ndGg7ZTxkOysrZSlmb3IodmFyIGksdSxmLHMsbCxoLHAsdj0wO3Y8cjsrK3YpdT0oaT10W3ZdKS5zb3VyY2Uscz0oZj1pLnRhcmdldCkueCtmLnZ4LXUueC11LnZ4fHxPZSgpLGw9Zi55K2YudnktdS55LXUudnl8fE9lKCkscyo9aD0oKGg9TWF0aC5zcXJ0KHMqcytsKmwpKS1hW3ZdKS9oKm4qb1t2XSxsKj1oLGYudngtPXMqKHA9Y1t2XSksZi52eS09bCpwLHUudngrPXMqKHA9MS1wKSx1LnZ5Kz1sKnB9ZnVuY3Rpb24gZSgpe2lmKHUpe3ZhciBuLGUsbD11Lmxlbmd0aCxoPXQubGVuZ3RoLGQ9aGUodSxzKTtmb3Iobj0wLGY9bmV3IEFycmF5KGwpO248aDsrK24pKGU9dFtuXSkuaW5kZXg9biwib2JqZWN0IiE9dHlwZW9mIGUuc291cmNlJiYoZS5zb3VyY2U9V2UoZCxlLnNvdXJjZSkpLCJvYmplY3QiIT10eXBlb2YgZS50YXJnZXQmJihlLnRhcmdldD1XZShkLGUudGFyZ2V0KSksZltlLnNvdXJjZS5pbmRleF09KGZbZS5zb3VyY2UuaW5kZXhdfHwwKSsxLGZbZS50YXJnZXQuaW5kZXhdPShmW2UudGFyZ2V0LmluZGV4XXx8MCkrMTtmb3Iobj0wLGM9bmV3IEFycmF5KGgpO248aDsrK24pZT10W25dLGNbbl09ZltlLnNvdXJjZS5pbmRleF0vKGZbZS5zb3VyY2UuaW5kZXhdK2ZbZS50YXJnZXQuaW5kZXhdKTtvPW5ldyBBcnJheShoKSxyKCksYT1uZXcgQXJyYXkoaCksaSgpfX1mdW5jdGlvbiByKCl7aWYodSlmb3IodmFyIG49MCxlPXQubGVuZ3RoO248ZTsrK24pb1tuXT0rbCh0W25dLG4sdCl9ZnVuY3Rpb24gaSgpe2lmKHUpZm9yKHZhciBuPTAsZT10Lmxlbmd0aDtuPGU7KytuKWFbbl09K2godFtuXSxuLHQpfXZhciBvLGEsdSxmLGMscz0kZSxsPWZ1bmN0aW9uKHQpe3JldHVybiAxL01hdGgubWluKGZbdC5zb3VyY2UuaW5kZXhdLGZbdC50YXJnZXQuaW5kZXhdKX0saD1xZSgzMCksZD0xO3JldHVybiBudWxsPT10JiYodD1bXSksbi5pbml0aWFsaXplPWZ1bmN0aW9uKHQpe3U9dCxlKCl9LG4ubGlua3M9ZnVuY3Rpb24ocil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9cixlKCksbik6dH0sbi5pZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocz10LG4pOnN9LG4uaXRlcmF0aW9ucz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZD0rdCxuKTpkfSxuLnN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6cWUoK3QpLHIoKSxuKTpsfSxuLmRpc3RhbmNlPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhoPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6cWUoK3QpLGkoKSxuKTpofSxufSx0LmZvcmNlTWFueUJvZHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3ZhciBuLHU9aS5sZW5ndGgsZj1qZShpLFplLFFlKS52aXNpdEFmdGVyKGUpO2ZvcihhPXQsbj0wO248dTsrK24pbz1pW25dLGYudmlzaXQocil9ZnVuY3Rpb24gbigpe2lmKGkpe3ZhciB0LG4sZT1pLmxlbmd0aDtmb3IodT1uZXcgQXJyYXkoZSksdD0wO3Q8ZTsrK3Qpbj1pW3RdLHVbbi5pbmRleF09K2Yobix0LGkpfX1mdW5jdGlvbiBlKHQpe3ZhciBuLGUscixpLG8sYT0wLGY9MDtpZih0Lmxlbmd0aCl7Zm9yKHI9aT1vPTA7bzw0Oysrbykobj10W29dKSYmKGU9TWF0aC5hYnMobi52YWx1ZSkpJiYoYSs9bi52YWx1ZSxmKz1lLHIrPWUqbi54LGkrPWUqbi55KTt0Lng9ci9mLHQueT1pL2Z9ZWxzZXsobj10KS54PW4uZGF0YS54LG4ueT1uLmRhdGEueTtkb3thKz11W24uZGF0YS5pbmRleF19d2hpbGUobj1uLm5leHQpfXQudmFsdWU9YX1mdW5jdGlvbiByKHQsbixlLHIpe2lmKCF0LnZhbHVlKXJldHVybiEwO3ZhciBpPXQueC1vLngsZj10Lnktby55LGg9ci1uLGQ9aSppK2YqZjtpZihoKmgvbDxkKXJldHVybiBkPHMmJigwPT09aSYmKGk9T2UoKSxkKz1pKmkpLDA9PT1mJiYoZj1PZSgpLGQrPWYqZiksZDxjJiYoZD1NYXRoLnNxcnQoYypkKSksby52eCs9aSp0LnZhbHVlKmEvZCxvLnZ5Kz1mKnQudmFsdWUqYS9kKSwhMDtpZighKHQubGVuZ3RofHxkPj1zKSl7KHQuZGF0YSE9PW98fHQubmV4dCkmJigwPT09aSYmKGk9T2UoKSxkKz1pKmkpLDA9PT1mJiYoZj1PZSgpLGQrPWYqZiksZDxjJiYoZD1NYXRoLnNxcnQoYypkKSkpO2Rve3QuZGF0YSE9PW8mJihoPXVbdC5kYXRhLmluZGV4XSphL2Qsby52eCs9aSpoLG8udnkrPWYqaCl9d2hpbGUodD10Lm5leHQpfX12YXIgaSxvLGEsdSxmPXFlKC0zMCksYz0xLHM9MS8wLGw9LjgxO3JldHVybiB0LmluaXRpYWxpemU9ZnVuY3Rpb24odCl7aT10LG4oKX0sdC5zdHJlbmd0aD1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZj0iZnVuY3Rpb24iPT10eXBlb2YgZT9lOnFlKCtlKSxuKCksdCk6Zn0sdC5kaXN0YW5jZU1pbj1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz1uKm4sdCk6TWF0aC5zcXJ0KGMpfSx0LmRpc3RhbmNlTWF4PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzPW4qbix0KTpNYXRoLnNxcnQocyl9LHQudGhldGE9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGw9bipuLHQpOk1hdGguc3FydChsKX0sdH0sdC5mb3JjZVJhZGlhbD1mdW5jdGlvbih0LG4sZSl7ZnVuY3Rpb24gcih0KXtmb3IodmFyIHI9MCxpPW8ubGVuZ3RoO3I8aTsrK3Ipe3ZhciBmPW9bcl0sYz1mLngtbnx8MWUtNixzPWYueS1lfHwxZS02LGw9TWF0aC5zcXJ0KGMqYytzKnMpLGg9KHVbcl0tbCkqYVtyXSp0L2w7Zi52eCs9YypoLGYudnkrPXMqaH19ZnVuY3Rpb24gaSgpe2lmKG8pe3ZhciBuLGU9by5sZW5ndGg7Zm9yKGE9bmV3IEFycmF5KGUpLHU9bmV3IEFycmF5KGUpLG49MDtuPGU7KytuKXVbbl09K3Qob1tuXSxuLG8pLGFbbl09aXNOYU4odVtuXSk/MDorZihvW25dLG4sbyl9fXZhciBvLGEsdSxmPXFlKC4xKTtyZXR1cm4iZnVuY3Rpb24iIT10eXBlb2YgdCYmKHQ9cWUoK3QpKSxudWxsPT1uJiYobj0wKSxudWxsPT1lJiYoZT0wKSxyLmluaXRpYWxpemU9ZnVuY3Rpb24odCl7bz10LGkoKX0sci5zdHJlbmd0aD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZj0iZnVuY3Rpb24iPT10eXBlb2YgdD90OnFlKCt0KSxpKCkscik6Zn0sci5yYWRpdXM9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpxZSgrbiksaSgpLHIpOnR9LHIueD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0rdCxyKTpufSxyLnk9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9K3Qscik6ZX0scn0sdC5mb3JjZVNpbXVsYXRpb249ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe2UoKSxkLmNhbGwoInRpY2siLG8pLGE8dSYmKGguc3RvcCgpLGQuY2FsbCgiZW5kIixvKSl9ZnVuY3Rpb24gZSgpe3ZhciBuLGUscj10Lmxlbmd0aDtmb3IoYSs9KGMtYSkqZixsLmVhY2goZnVuY3Rpb24odCl7dChhKX0pLG49MDtuPHI7KytuKW51bGw9PShlPXRbbl0pLmZ4P2UueCs9ZS52eCo9czooZS54PWUuZngsZS52eD0wKSxudWxsPT1lLmZ5P2UueSs9ZS52eSo9czooZS55PWUuZnksZS52eT0wKX1mdW5jdGlvbiByKCl7Zm9yKHZhciBuLGU9MCxyPXQubGVuZ3RoO2U8cjsrK2Upe2lmKG49dFtlXSxuLmluZGV4PWUsaXNOYU4obi54KXx8aXNOYU4obi55KSl7dmFyIGk9aWQqTWF0aC5zcXJ0KGUpLG89ZSpvZDtuLng9aSpNYXRoLmNvcyhvKSxuLnk9aSpNYXRoLnNpbihvKX0oaXNOYU4obi52eCl8fGlzTmFOKG4udnkpKSYmKG4udng9bi52eT0wKX19ZnVuY3Rpb24gaShuKXtyZXR1cm4gbi5pbml0aWFsaXplJiZuLmluaXRpYWxpemUodCksbn12YXIgbyxhPTEsdT0uMDAxLGY9MS1NYXRoLnBvdyh1LDEvMzAwKSxjPTAscz0uNixsPWhlKCksaD1UbihuKSxkPU4oInRpY2siLCJlbmQiKTtyZXR1cm4gbnVsbD09dCYmKHQ9W10pLHIoKSxvPXt0aWNrOmUscmVzdGFydDpmdW5jdGlvbigpe3JldHVybiBoLnJlc3RhcnQobiksb30sc3RvcDpmdW5jdGlvbigpe3JldHVybiBoLnN0b3AoKSxvfSxub2RlczpmdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD1uLHIoKSxsLmVhY2goaSksbyk6dH0sYWxwaGE6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9K3Qsbyk6YX0sYWxwaGFNaW46ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9K3Qsbyk6dX0sYWxwaGFEZWNheTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZj0rdCxvKTorZn0sYWxwaGFUYXJnZXQ6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9K3Qsbyk6Y30sdmVsb2NpdHlEZWNheTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocz0xLXQsbyk6MS1zfSxmb3JjZTpmdW5jdGlvbih0LG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/KG51bGw9PW4/bC5yZW1vdmUodCk6bC5zZXQodCxpKG4pKSxvKTpsLmdldCh0KX0sZmluZDpmdW5jdGlvbihuLGUscil7dmFyIGksbyxhLHUsZixjPTAscz10Lmxlbmd0aDtmb3IobnVsbD09cj9yPTEvMDpyKj1yLGM9MDtjPHM7KytjKShhPShpPW4tKHU9dFtjXSkueCkqaSsobz1lLXUueSkqbyk8ciYmKGY9dSxyPWEpO3JldHVybiBmfSxvbjpmdW5jdGlvbih0LG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/KGQub24odCxuKSxvKTpkLm9uKHQpfX19LHQuZm9yY2VYPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4odCl7Zm9yKHZhciBuLGU9MCxhPXIubGVuZ3RoO2U8YTsrK2UpKG49cltlXSkudngrPShvW2VdLW4ueCkqaVtlXSp0fWZ1bmN0aW9uIGUoKXtpZihyKXt2YXIgbixlPXIubGVuZ3RoO2ZvcihpPW5ldyBBcnJheShlKSxvPW5ldyBBcnJheShlKSxuPTA7bjxlOysrbilpW25dPWlzTmFOKG9bbl09K3QocltuXSxuLHIpKT8wOithKHJbbl0sbixyKX19dmFyIHIsaSxvLGE9cWUoLjEpO3JldHVybiJmdW5jdGlvbiIhPXR5cGVvZiB0JiYodD1xZShudWxsPT10PzA6K3QpKSxuLmluaXRpYWxpemU9ZnVuY3Rpb24odCl7cj10LGUoKX0sbi5zdHJlbmd0aD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0iZnVuY3Rpb24iPT10eXBlb2YgdD90OnFlKCt0KSxlKCksbik6YX0sbi54PWZ1bmN0aW9uKHIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0PSJmdW5jdGlvbiI9PXR5cGVvZiByP3I6cWUoK3IpLGUoKSxuKTp0fSxufSx0LmZvcmNlWT1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKHQpe2Zvcih2YXIgbixlPTAsYT1yLmxlbmd0aDtlPGE7KytlKShuPXJbZV0pLnZ5Kz0ob1tlXS1uLnkpKmlbZV0qdH1mdW5jdGlvbiBlKCl7aWYocil7dmFyIG4sZT1yLmxlbmd0aDtmb3IoaT1uZXcgQXJyYXkoZSksbz1uZXcgQXJyYXkoZSksbj0wO248ZTsrK24paVtuXT1pc05hTihvW25dPSt0KHJbbl0sbixyKSk/MDorYShyW25dLG4scil9fXZhciByLGksbyxhPXFlKC4xKTtyZXR1cm4iZnVuY3Rpb24iIT10eXBlb2YgdCYmKHQ9cWUobnVsbD09dD8wOit0KSksbi5pbml0aWFsaXplPWZ1bmN0aW9uKHQpe3I9dCxlKCl9LG4uc3RyZW5ndGg9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGE9ImZ1bmN0aW9uIj09dHlwZW9mIHQ/dDpxZSgrdCksZSgpLG4pOmF9LG4ueT1mdW5jdGlvbihyKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odD0iZnVuY3Rpb24iPT10eXBlb2Ygcj9yOnFlKCtyKSxlKCksbik6dH0sbn0sdC5mb3JtYXREZWZhdWx0TG9jYWxlPW9yLHQuZm9ybWF0TG9jYWxlPWlyLHQuZm9ybWF0U3BlY2lmaWVyPXRyLHQucHJlY2lzaW9uRml4ZWQ9YXIsdC5wcmVjaXNpb25QcmVmaXg9dXIsdC5wcmVjaXNpb25Sb3VuZD1mcix0Lmdlb0FyZWE9ZnVuY3Rpb24odCl7cmV0dXJuIGhwLnJlc2V0KCksYnIodCxkcCksMipocH0sdC5nZW9Cb3VuZHM9ZnVuY3Rpb24odCl7dmFyIG4sZSxyLGksbyxhLHU7aWYoYmQ9X2Q9LShnZD15ZD0xLzApLEFkPVtdLGJyKHQsdnApLGU9QWQubGVuZ3RoKXtmb3IoQWQuc29ydChZciksbj0xLG89W3I9QWRbMF1dO248ZTsrK24pQnIociwoaT1BZFtuXSlbMF0pfHxCcihyLGlbMV0pPyhPcihyWzBdLGlbMV0pPk9yKHJbMF0sclsxXSkmJihyWzFdPWlbMV0pLE9yKGlbMF0sclsxXSk+T3IoclswXSxyWzFdKSYmKHJbMF09aVswXSkpOm8ucHVzaChyPWkpO2ZvcihhPS0xLzAsbj0wLHI9b1tlPW8ubGVuZ3RoLTFdO248PWU7cj1pLCsrbilpPW9bbl0sKHU9T3IoclsxXSxpWzBdKSk+YSYmKGE9dSxnZD1pWzBdLF9kPXJbMV0pfXJldHVybiBBZD1UZD1udWxsLGdkPT09MS8wfHx5ZD09PTEvMD9bW05hTixOYU5dLFtOYU4sTmFOXV06W1tnZCx5ZF0sW19kLGJkXV19LHQuZ2VvQ2VudHJvaWQ9ZnVuY3Rpb24odCl7TmQ9U2Q9RWQ9a2Q9Q2Q9UGQ9emQ9UmQ9TGQ9RGQ9VWQ9MCxicih0LGdwKTt2YXIgbj1MZCxlPURkLHI9VWQsaT1uKm4rZSplK3IqcjtyZXR1cm4gaTxIZCYmKG49UGQsZT16ZCxyPVJkLFNkPGpkJiYobj1FZCxlPWtkLHI9Q2QpLChpPW4qbitlKmUrcipyKTxIZCk/W05hTixOYU5dOltLZChlLG4pKldkLGRyKHIvdXAoaSkpKldkXX0sdC5nZW9DaXJjbGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ9ci5hcHBseSh0aGlzLGFyZ3VtZW50cyksdT1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSpaZCxmPW8uYXBwbHkodGhpcyxhcmd1bWVudHMpKlpkO3JldHVybiBuPVtdLGU9dGkoLXRbMF0qWmQsLXRbMV0qWmQsMCkuaW52ZXJ0LG9pKGEsdSxmLDEpLHQ9e3R5cGU6IlBvbHlnb24iLGNvb3JkaW5hdGVzOltuXX0sbj1lPW51bGwsdH12YXIgbixlLHI9UXIoWzAsMF0pLGk9UXIoOTApLG89UXIoNiksYT17cG9pbnQ6ZnVuY3Rpb24odCxyKXtuLnB1c2godD1lKHQscikpLHRbMF0qPVdkLHRbMV0qPVdkfX07cmV0dXJuIHQuY2VudGVyPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246UXIoWytuWzBdLCtuWzFdXSksdCk6cn0sdC5yYWRpdXM9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpRcigrbiksdCk6aX0sdC5wcmVjaXNpb249ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpRcigrbiksdCk6b30sdH0sdC5nZW9DbGlwQW50aW1lcmlkaWFuPWtwLHQuZ2VvQ2xpcENpcmNsZT1naSx0Lmdlb0NsaXBFeHRlbnQ9ZnVuY3Rpb24oKXt2YXIgdCxuLGUscj0wLGk9MCxvPTk2MCxhPTUwMDtyZXR1cm4gZT17c3RyZWFtOmZ1bmN0aW9uKGUpe3JldHVybiB0JiZuPT09ZT90OnQ9eWkocixpLG8sYSkobj1lKX0sZXh0ZW50OmZ1bmN0aW9uKHUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSt1WzBdWzBdLGk9K3VbMF1bMV0sbz0rdVsxXVswXSxhPSt1WzFdWzFdLHQ9bj1udWxsLGUpOltbcixpXSxbbyxhXV19fX0sdC5nZW9DbGlwUmVjdGFuZ2xlPXlpLHQuZ2VvQ29udGFpbnM9ZnVuY3Rpb24odCxuKXtyZXR1cm4odCYmVXAuaGFzT3duUHJvcGVydHkodC50eXBlKT9VcFt0LnR5cGVdOk1pKSh0LG4pfSx0Lmdlb0Rpc3RhbmNlPXdpLHQuZ2VvR3JhdGljdWxlPVBpLHQuZ2VvR3JhdGljdWxlMTA9ZnVuY3Rpb24oKXtyZXR1cm4gUGkoKSgpfSx0Lmdlb0ludGVycG9sYXRlPWZ1bmN0aW9uKHQsbil7dmFyIGU9dFswXSpaZCxyPXRbMV0qWmQsaT1uWzBdKlpkLG89blsxXSpaZCxhPXRwKHIpLHU9b3AociksZj10cChvKSxjPW9wKG8pLHM9YSp0cChlKSxsPWEqb3AoZSksaD1mKnRwKGkpLGQ9ZipvcChpKSxwPTIqZHIodXAocHIoby1yKSthKmYqcHIoaS1lKSkpLHY9b3AocCksZz1wP2Z1bmN0aW9uKHQpe3ZhciBuPW9wKHQqPXApL3YsZT1vcChwLXQpL3Yscj1lKnMrbipoLGk9ZSpsK24qZCxvPWUqdStuKmM7cmV0dXJuW0tkKGkscikqV2QsS2Qobyx1cChyKnIraSppKSkqV2RdfTpmdW5jdGlvbigpe3JldHVybltlKldkLHIqV2RdfTtyZXR1cm4gZy5kaXN0YW5jZT1wLGd9LHQuZ2VvTGVuZ3RoPXhpLHQuZ2VvUGF0aD1mdW5jdGlvbih0LG4pe2Z1bmN0aW9uIGUodCl7cmV0dXJuIHQmJigiZnVuY3Rpb24iPT10eXBlb2YgbyYmaS5wb2ludFJhZGl1cygrby5hcHBseSh0aGlzLGFyZ3VtZW50cykpLGJyKHQscihpKSkpLGkucmVzdWx0KCl9dmFyIHIsaSxvPTQuNTtyZXR1cm4gZS5hcmVhPWZ1bmN0aW9uKHQpe3JldHVybiBicih0LHIoQnApKSxCcC5yZXN1bHQoKX0sZS5tZWFzdXJlPWZ1bmN0aW9uKHQpe3JldHVybiBicih0LHIoZnYpKSxmdi5yZXN1bHQoKX0sZS5ib3VuZHM9ZnVuY3Rpb24odCl7cmV0dXJuIGJyKHQscihYcCkpLFhwLnJlc3VsdCgpfSxlLmNlbnRyb2lkPWZ1bmN0aW9uKHQpe3JldHVybiBicih0LHIobnYpKSxudi5yZXN1bHQoKX0sZS5wcm9qZWN0aW9uPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW51bGw9PW4/KHQ9bnVsbCx6aSk6KHQ9bikuc3RyZWFtLGUpOnR9LGUuY29udGV4dD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1udWxsPT10PyhuPW51bGwsbmV3IFdpKTpuZXcgR2kobj10KSwiZnVuY3Rpb24iIT10eXBlb2YgbyYmaS5wb2ludFJhZGl1cyhvKSxlKTpufSxlLnBvaW50UmFkaXVzPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6KGkucG9pbnRSYWRpdXMoK3QpLCt0KSxlKTpvfSxlLnByb2plY3Rpb24odCkuY29udGV4dChuKX0sdC5nZW9BbGJlcnM9bG8sdC5nZW9BbGJlcnNVc2E9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3ZhciBuPXRbMF0sZT10WzFdO3JldHVybiB1PW51bGwsaS5wb2ludChuLGUpLHV8fChvLnBvaW50KG4sZSksdSl8fChhLnBvaW50KG4sZSksdSl9ZnVuY3Rpb24gbigpe3JldHVybiBlPXI9bnVsbCx0fXZhciBlLHIsaSxvLGEsdSxmPWxvKCksYz1zbygpLnJvdGF0ZShbMTU0LDBdKS5jZW50ZXIoWy0yLDU4LjVdKS5wYXJhbGxlbHMoWzU1LDY1XSkscz1zbygpLnJvdGF0ZShbMTU3LDBdKS5jZW50ZXIoWy0zLDE5LjldKS5wYXJhbGxlbHMoWzgsMThdKSxsPXtwb2ludDpmdW5jdGlvbih0LG4pe3U9W3Qsbl19fTtyZXR1cm4gdC5pbnZlcnQ9ZnVuY3Rpb24odCl7dmFyIG49Zi5zY2FsZSgpLGU9Zi50cmFuc2xhdGUoKSxyPSh0WzBdLWVbMF0pL24saT0odFsxXS1lWzFdKS9uO3JldHVybihpPj0uMTImJmk8LjIzNCYmcj49LS40MjUmJnI8LS4yMTQ/YzppPj0uMTY2JiZpPC4yMzQmJnI+PS0uMjE0JiZyPC0uMTE1P3M6ZikuaW52ZXJ0KHQpfSx0LnN0cmVhbT1mdW5jdGlvbih0KXtyZXR1cm4gZSYmcj09PXQ/ZTplPWZ1bmN0aW9uKHQpe3ZhciBuPXQubGVuZ3RoO3JldHVybntwb2ludDpmdW5jdGlvbihlLHIpe2Zvcih2YXIgaT0tMTsrK2k8bjspdFtpXS5wb2ludChlLHIpfSxzcGhlcmU6ZnVuY3Rpb24oKXtmb3IodmFyIGU9LTE7KytlPG47KXRbZV0uc3BoZXJlKCl9LGxpbmVTdGFydDpmdW5jdGlvbigpe2Zvcih2YXIgZT0tMTsrK2U8bjspdFtlXS5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe2Zvcih2YXIgZT0tMTsrK2U8bjspdFtlXS5saW5lRW5kKCl9LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe2Zvcih2YXIgZT0tMTsrK2U8bjspdFtlXS5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe2Zvcih2YXIgZT0tMTsrK2U8bjspdFtlXS5wb2x5Z29uRW5kKCl9fX0oW2Yuc3RyZWFtKHI9dCksYy5zdHJlYW0odCkscy5zdHJlYW0odCldKX0sdC5wcmVjaXNpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGYucHJlY2lzaW9uKHQpLGMucHJlY2lzaW9uKHQpLHMucHJlY2lzaW9uKHQpLG4oKSk6Zi5wcmVjaXNpb24oKX0sdC5zY2FsZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZi5zY2FsZShuKSxjLnNjYWxlKC4zNSpuKSxzLnNjYWxlKG4pLHQudHJhbnNsYXRlKGYudHJhbnNsYXRlKCkpKTpmLnNjYWxlKCl9LHQudHJhbnNsYXRlPWZ1bmN0aW9uKHQpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBmLnRyYW5zbGF0ZSgpO3ZhciBlPWYuc2NhbGUoKSxyPSt0WzBdLHU9K3RbMV07cmV0dXJuIGk9Zi50cmFuc2xhdGUodCkuY2xpcEV4dGVudChbW3ItLjQ1NSplLHUtLjIzOCplXSxbcisuNDU1KmUsdSsuMjM4KmVdXSkuc3RyZWFtKGwpLG89Yy50cmFuc2xhdGUoW3ItLjMwNyplLHUrLjIwMSplXSkuY2xpcEV4dGVudChbW3ItLjQyNSplK2pkLHUrLjEyKmUramRdLFtyLS4yMTQqZS1qZCx1Ky4yMzQqZS1qZF1dKS5zdHJlYW0obCksYT1zLnRyYW5zbGF0ZShbci0uMjA1KmUsdSsuMjEyKmVdKS5jbGlwRXh0ZW50KFtbci0uMjE0KmUramQsdSsuMTY2KmUramRdLFtyLS4xMTUqZS1qZCx1Ky4yMzQqZS1qZF1dKS5zdHJlYW0obCksbigpfSx0LmZpdEV4dGVudD1mdW5jdGlvbihuLGUpe3JldHVybiB0byh0LG4sZSl9LHQuZml0U2l6ZT1mdW5jdGlvbihuLGUpe3JldHVybiBubyh0LG4sZSl9LHQuZml0V2lkdGg9ZnVuY3Rpb24obixlKXtyZXR1cm4gZW8odCxuLGUpfSx0LmZpdEhlaWdodD1mdW5jdGlvbihuLGUpe3JldHVybiBybyh0LG4sZSl9LHQuc2NhbGUoMTA3MCl9LHQuZ2VvQXppbXV0aGFsRXF1YWxBcmVhPWZ1bmN0aW9uKCl7cmV0dXJuIGFvKGh2KS5zY2FsZSgxMjQuNzUpLmNsaXBBbmdsZSgxNzkuOTk5KX0sdC5nZW9BemltdXRoYWxFcXVhbEFyZWFSYXc9aHYsdC5nZW9BemltdXRoYWxFcXVpZGlzdGFudD1mdW5jdGlvbigpe3JldHVybiBhbyhkdikuc2NhbGUoNzkuNDE4OCkuY2xpcEFuZ2xlKDE3OS45OTkpfSx0Lmdlb0F6aW11dGhhbEVxdWlkaXN0YW50UmF3PWR2LHQuZ2VvQ29uaWNDb25mb3JtYWw9ZnVuY3Rpb24oKXtyZXR1cm4gZm8oX28pLnNjYWxlKDEwOS41KS5wYXJhbGxlbHMoWzMwLDMwXSl9LHQuZ2VvQ29uaWNDb25mb3JtYWxSYXc9X28sdC5nZW9Db25pY0VxdWFsQXJlYT1zbyx0Lmdlb0NvbmljRXF1YWxBcmVhUmF3PWNvLHQuZ2VvQ29uaWNFcXVpZGlzdGFudD1mdW5jdGlvbigpe3JldHVybiBmbyhtbykuc2NhbGUoMTMxLjE1NCkuY2VudGVyKFswLDEzLjkzODldKX0sdC5nZW9Db25pY0VxdWlkaXN0YW50UmF3PW1vLHQuZ2VvRXF1aXJlY3Rhbmd1bGFyPWZ1bmN0aW9uKCl7cmV0dXJuIGFvKGJvKS5zY2FsZSgxNTIuNjMpfSx0Lmdlb0VxdWlyZWN0YW5ndWxhclJhdz1ibyx0Lmdlb0dub21vbmljPWZ1bmN0aW9uKCl7cmV0dXJuIGFvKHhvKS5zY2FsZSgxNDQuMDQ5KS5jbGlwQW5nbGUoNjApfSx0Lmdlb0dub21vbmljUmF3PXhvLHQuZ2VvSWRlbnRpdHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGk9bz1udWxsLGF9dmFyIG4sZSxyLGksbyxhLHU9MSxmPTAsYz0wLHM9MSxsPTEsaD16aSxkPW51bGwscD16aTtyZXR1cm4gYT17c3RyZWFtOmZ1bmN0aW9uKHQpe3JldHVybiBpJiZvPT09dD9pOmk9aChwKG89dCkpfSxwb3N0Y2xpcDpmdW5jdGlvbihpKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocD1pLGQ9bj1lPXI9bnVsbCx0KCkpOnB9LGNsaXBFeHRlbnQ6ZnVuY3Rpb24oaSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHA9bnVsbD09aT8oZD1uPWU9cj1udWxsLHppKTp5aShkPStpWzBdWzBdLG49K2lbMF1bMV0sZT0raVsxXVswXSxyPStpWzFdWzFdKSx0KCkpOm51bGw9PWQ/bnVsbDpbW2Qsbl0sW2Uscl1dfSxzY2FsZTpmdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaD13bygodT0rbikqcyx1KmwsZixjKSx0KCkpOnV9LHRyYW5zbGF0ZTpmdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaD13byh1KnMsdSpsLGY9K25bMF0sYz0rblsxXSksdCgpKTpbZixjXX0scmVmbGVjdFg6ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGg9d28odSoocz1uPy0xOjEpLHUqbCxmLGMpLHQoKSk6czwwfSxyZWZsZWN0WTpmdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaD13byh1KnMsdSoobD1uPy0xOjEpLGYsYyksdCgpKTpsPDB9LGZpdEV4dGVudDpmdW5jdGlvbih0LG4pe3JldHVybiB0byhhLHQsbil9LGZpdFNpemU6ZnVuY3Rpb24odCxuKXtyZXR1cm4gbm8oYSx0LG4pfSxmaXRXaWR0aDpmdW5jdGlvbih0LG4pe3JldHVybiBlbyhhLHQsbil9LGZpdEhlaWdodDpmdW5jdGlvbih0LG4pe3JldHVybiBybyhhLHQsbil9fX0sdC5nZW9Qcm9qZWN0aW9uPWFvLHQuZ2VvUHJvamVjdGlvbk11dGF0b3I9dW8sdC5nZW9NZXJjYXRvcj1mdW5jdGlvbigpe3JldHVybiBnbyh2bykuc2NhbGUoOTYxLyRkKX0sdC5nZW9NZXJjYXRvclJhdz12byx0Lmdlb05hdHVyYWxFYXJ0aDE9ZnVuY3Rpb24oKXtyZXR1cm4gYW8oTW8pLnNjYWxlKDE3NS4yOTUpfSx0Lmdlb05hdHVyYWxFYXJ0aDFSYXc9TW8sdC5nZW9PcnRob2dyYXBoaWM9ZnVuY3Rpb24oKXtyZXR1cm4gYW8oQW8pLnNjYWxlKDI0OS41KS5jbGlwQW5nbGUoOTAramQpfSx0Lmdlb09ydGhvZ3JhcGhpY1Jhdz1Bbyx0Lmdlb1N0ZXJlb2dyYXBoaWM9ZnVuY3Rpb24oKXtyZXR1cm4gYW8oVG8pLnNjYWxlKDI1MCkuY2xpcEFuZ2xlKDE0Mil9LHQuZ2VvU3RlcmVvZ3JhcGhpY1Jhdz1Ubyx0Lmdlb1RyYW5zdmVyc2VNZXJjYXRvcj1mdW5jdGlvbigpe3ZhciB0PWdvKE5vKSxuPXQuY2VudGVyLGU9dC5yb3RhdGU7cmV0dXJuIHQuY2VudGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP24oWy10WzFdLHRbMF1dKToodD1uKCksW3RbMV0sLXRbMF1dKX0sdC5yb3RhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/ZShbdFswXSx0WzFdLHQubGVuZ3RoPjI/dFsyXSs5MDo5MF0pOih0PWUoKSxbdFswXSx0WzFdLHRbMl0tOTBdKX0sZShbMCwwLDkwXSkuc2NhbGUoMTU5LjE1NSl9LHQuZ2VvVHJhbnN2ZXJzZU1lcmNhdG9yUmF3PU5vLHQuZ2VvUm90YXRpb249aWksdC5nZW9TdHJlYW09YnIsdC5nZW9UcmFuc2Zvcm09ZnVuY3Rpb24odCl7cmV0dXJue3N0cmVhbTpRaSh0KX19LHQuY2x1c3Rlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dmFyIG8sYT0wO3QuZWFjaEFmdGVyKGZ1bmN0aW9uKHQpe3ZhciBlPXQuY2hpbGRyZW47ZT8odC54PWZ1bmN0aW9uKHQpe3JldHVybiB0LnJlZHVjZShFbywwKS90Lmxlbmd0aH0oZSksdC55PWZ1bmN0aW9uKHQpe3JldHVybiAxK3QucmVkdWNlKGtvLDApfShlKSk6KHQueD1vP2ErPW4odCxvKTowLHQueT0wLG89dCl9KTt2YXIgdT1mdW5jdGlvbih0KXtmb3IodmFyIG47bj10LmNoaWxkcmVuOyl0PW5bMF07cmV0dXJuIHR9KHQpLGY9ZnVuY3Rpb24odCl7Zm9yKHZhciBuO249dC5jaGlsZHJlbjspdD1uW24ubGVuZ3RoLTFdO3JldHVybiB0fSh0KSxjPXUueC1uKHUsZikvMixzPWYueCtuKGYsdSkvMjtyZXR1cm4gdC5lYWNoQWZ0ZXIoaT9mdW5jdGlvbihuKXtuLng9KG4ueC10LngpKmUsbi55PSh0Lnktbi55KSpyfTpmdW5jdGlvbihuKXtuLng9KG4ueC1jKS8ocy1jKSplLG4ueT0oMS0odC55P24ueS90Lnk6MSkpKnJ9KX12YXIgbj1TbyxlPTEscj0xLGk9ITE7cmV0dXJuIHQuc2VwYXJhdGlvbj1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj1lLHQpOm59LHQuc2l6ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT0hMSxlPStuWzBdLHI9K25bMV0sdCk6aT9udWxsOltlLHJdfSx0Lm5vZGVTaXplPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSEwLGU9K25bMF0scj0rblsxXSx0KTppP1tlLHJdOm51bGx9LHR9LHQuaGllcmFyY2h5PVBvLHQucGFjaz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7cmV0dXJuIHQueD1lLzIsdC55PXIvMixuP3QuZWFjaEJlZm9yZShRbyhuKSkuZWFjaEFmdGVyKEpvKGksLjUpKS5lYWNoQmVmb3JlKEtvKDEpKTp0LmVhY2hCZWZvcmUoUW8oWm8pKS5lYWNoQWZ0ZXIoSm8oJG8sMSkpLmVhY2hBZnRlcihKbyhpLHQuci9NYXRoLm1pbihlLHIpKSkuZWFjaEJlZm9yZShLbyhNYXRoLm1pbihlLHIpLygyKnQucikpKSx0fXZhciBuPW51bGwsZT0xLHI9MSxpPSRvO3JldHVybiB0LnJhZGl1cz1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD9udWxsOlZvKHQpfShlKSx0KTpufSx0LnNpemU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9K25bMF0scj0rblsxXSx0KTpbZSxyXX0sdC5wYWRkaW5nPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246V28oK24pLHQpOml9LHR9LHQucGFja1NpYmxpbmdzPWZ1bmN0aW9uKHQpe3JldHVybiBHbyh0KSx0fSx0LnBhY2tFbmNsb3NlPVVvLHQucGFydGl0aW9uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgbz10LmhlaWdodCsxO3JldHVybiB0LngwPXQueTA9cix0LngxPW4sdC55MT1lL28sdC5lYWNoQmVmb3JlKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGZ1bmN0aW9uKGUpe2UuY2hpbGRyZW4mJm5hKGUsZS54MCx0KihlLmRlcHRoKzEpL24sZS54MSx0KihlLmRlcHRoKzIpL24pO3ZhciBpPWUueDAsbz1lLnkwLGE9ZS54MS1yLHU9ZS55MS1yO2E8aSYmKGk9YT0oaSthKS8yKSx1PG8mJihvPXU9KG8rdSkvMiksZS54MD1pLGUueTA9byxlLngxPWEsZS55MT11fX0oZSxvKSksaSYmdC5lYWNoQmVmb3JlKHRhKSx0fXZhciBuPTEsZT0xLHI9MCxpPSExO3JldHVybiB0LnJvdW5kPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSEhbix0KTppfSx0LnNpemU9ZnVuY3Rpb24ocil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49K3JbMF0sZT0rclsxXSx0KTpbbixlXX0sdC5wYWRkaW5nPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPStuLHQpOnJ9LHR9LHQuc3RyYXRpZnk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3ZhciByLGksbyxhLHUsZixjLHM9dC5sZW5ndGgsbD1uZXcgQXJyYXkocyksaD17fTtmb3IoaT0wO2k8czsrK2kpcj10W2ldLHU9bFtpXT1uZXcgRG8ociksbnVsbCE9KGY9bihyLGksdCkpJiYoZis9IiIpJiYoaFtjPXZ2Kyh1LmlkPWYpXT1jIGluIGg/eXY6dSk7Zm9yKGk9MDtpPHM7KytpKWlmKHU9bFtpXSxudWxsIT0oZj1lKHRbaV0saSx0KSkmJihmKz0iIikpe2lmKCEoYT1oW3Z2K2ZdKSl0aHJvdyBuZXcgRXJyb3IoIm1pc3Npbmc6ICIrZik7aWYoYT09PXl2KXRocm93IG5ldyBFcnJvcigiYW1iaWd1b3VzOiAiK2YpO2EuY2hpbGRyZW4/YS5jaGlsZHJlbi5wdXNoKHUpOmEuY2hpbGRyZW49W3VdLHUucGFyZW50PWF9ZWxzZXtpZihvKXRocm93IG5ldyBFcnJvcigibXVsdGlwbGUgcm9vdHMiKTtvPXV9aWYoIW8pdGhyb3cgbmV3IEVycm9yKCJubyByb290Iik7aWYoby5wYXJlbnQ9Z3Ysby5lYWNoQmVmb3JlKGZ1bmN0aW9uKHQpe3QuZGVwdGg9dC5wYXJlbnQuZGVwdGgrMSwtLXN9KS5lYWNoQmVmb3JlKExvKSxvLnBhcmVudD1udWxsLHM+MCl0aHJvdyBuZXcgRXJyb3IoImN5Y2xlIik7cmV0dXJuIG99dmFyIG49ZWEsZT1yYTtyZXR1cm4gdC5pZD1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj1WbyhlKSx0KTpufSx0LnBhcmVudElkPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPVZvKG4pLHQpOmV9LHR9LHQudHJlZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dmFyIGY9ZnVuY3Rpb24odCl7Zm9yKHZhciBuLGUscixpLG8sYT1uZXcgY2EodCwwKSx1PVthXTtuPXUucG9wKCk7KWlmKHI9bi5fLmNoaWxkcmVuKWZvcihuLmNoaWxkcmVuPW5ldyBBcnJheShvPXIubGVuZ3RoKSxpPW8tMTtpPj0wOy0taSl1LnB1c2goZT1uLmNoaWxkcmVuW2ldPW5ldyBjYShyW2ldLGkpKSxlLnBhcmVudD1uO3JldHVybihhLnBhcmVudD1uZXcgY2EobnVsbCwwKSkuY2hpbGRyZW49W2FdLGF9KHQpO2lmKGYuZWFjaEFmdGVyKG4pLGYucGFyZW50Lm09LWYueixmLmVhY2hCZWZvcmUoZSksdSl0LmVhY2hCZWZvcmUocik7ZWxzZXt2YXIgYz10LHM9dCxsPXQ7dC5lYWNoQmVmb3JlKGZ1bmN0aW9uKHQpe3QueDxjLngmJihjPXQpLHQueD5zLngmJihzPXQpLHQuZGVwdGg+bC5kZXB0aCYmKGw9dCl9KTt2YXIgaD1jPT09cz8xOmkoYyxzKS8yLGQ9aC1jLngscD1vLyhzLngraCtkKSx2PWEvKGwuZGVwdGh8fDEpO3QuZWFjaEJlZm9yZShmdW5jdGlvbih0KXt0Lng9KHQueCtkKSpwLHQueT10LmRlcHRoKnZ9KX1yZXR1cm4gdH1mdW5jdGlvbiBuKHQpe3ZhciBuPXQuY2hpbGRyZW4sZT10LnBhcmVudC5jaGlsZHJlbixyPXQuaT9lW3QuaS0xXTpudWxsO2lmKG4peyhmdW5jdGlvbih0KXtmb3IodmFyIG4sZT0wLHI9MCxpPXQuY2hpbGRyZW4sbz1pLmxlbmd0aDstLW8+PTA7KShuPWlbb10pLnorPWUsbi5tKz1lLGUrPW4ucysocis9bi5jKX0pKHQpO3ZhciBvPShuWzBdLnorbltuLmxlbmd0aC0xXS56KS8yO3I/KHQuej1yLnoraSh0Ll8sci5fKSx0Lm09dC56LW8pOnQuej1vfWVsc2UgciYmKHQuej1yLnoraSh0Ll8sci5fKSk7dC5wYXJlbnQuQT1mdW5jdGlvbih0LG4sZSl7aWYobil7Zm9yKHZhciByLG89dCxhPXQsdT1uLGY9by5wYXJlbnQuY2hpbGRyZW5bMF0sYz1vLm0scz1hLm0sbD11Lm0saD1mLm07dT1hYSh1KSxvPW9hKG8pLHUmJm87KWY9b2EoZiksKGE9YWEoYSkpLmE9dCwocj11LnorbC1vLnotYytpKHUuXyxvLl8pKT4wJiYodWEoZmEodSx0LGUpLHQsciksYys9cixzKz1yKSxsKz11Lm0sYys9by5tLGgrPWYubSxzKz1hLm07dSYmIWFhKGEpJiYoYS50PXUsYS5tKz1sLXMpLG8mJiFvYShmKSYmKGYudD1vLGYubSs9Yy1oLGU9dCl9cmV0dXJuIGV9KHQscix0LnBhcmVudC5BfHxlWzBdKX1mdW5jdGlvbiBlKHQpe3QuXy54PXQueit0LnBhcmVudC5tLHQubSs9dC5wYXJlbnQubX1mdW5jdGlvbiByKHQpe3QueCo9byx0Lnk9dC5kZXB0aCphfXZhciBpPWlhLG89MSxhPTEsdT1udWxsO3JldHVybiB0LnNlcGFyYXRpb249ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9bix0KTppfSx0LnNpemU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9ITEsbz0rblswXSxhPStuWzFdLHQpOnU/bnVsbDpbbyxhXX0sdC5ub2RlU2l6ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odT0hMCxvPStuWzBdLGE9K25bMV0sdCk6dT9bbyxhXTpudWxsfSx0fSx0LnRyZWVtYXA9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3JldHVybiB0LngwPXQueTA9MCx0LngxPWksdC55MT1vLHQuZWFjaEJlZm9yZShuKSxhPVswXSxyJiZ0LmVhY2hCZWZvcmUodGEpLHR9ZnVuY3Rpb24gbih0KXt2YXIgbj1hW3QuZGVwdGhdLHI9dC54MCtuLGk9dC55MCtuLG89dC54MS1uLGg9dC55MS1uO288ciYmKHI9bz0ocitvKS8yKSxoPGkmJihpPWg9KGkraCkvMiksdC54MD1yLHQueTA9aSx0LngxPW8sdC55MT1oLHQuY2hpbGRyZW4mJihuPWFbdC5kZXB0aCsxXT11KHQpLzIscis9bCh0KS1uLGkrPWYodCktbixvLT1jKHQpLW4saC09cyh0KS1uLG88ciYmKHI9bz0ocitvKS8yKSxoPGkmJihpPWg9KGkraCkvMiksZSh0LHIsaSxvLGgpKX12YXIgZT1idixyPSExLGk9MSxvPTEsYT1bMF0sdT0kbyxmPSRvLGM9JG8scz0kbyxsPSRvO3JldHVybiB0LnJvdW5kPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSEhbix0KTpyfSx0LnNpemU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9K25bMF0sbz0rblsxXSx0KTpbaSxvXX0sdC50aWxlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPVZvKG4pLHQpOmV9LHQucGFkZGluZz1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90LnBhZGRpbmdJbm5lcihuKS5wYWRkaW5nT3V0ZXIobik6dC5wYWRkaW5nSW5uZXIoKX0sdC5wYWRkaW5nSW5uZXI9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHU9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpXbygrbiksdCk6dX0sdC5wYWRkaW5nT3V0ZXI9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dC5wYWRkaW5nVG9wKG4pLnBhZGRpbmdSaWdodChuKS5wYWRkaW5nQm90dG9tKG4pLnBhZGRpbmdMZWZ0KG4pOnQucGFkZGluZ1RvcCgpfSx0LnBhZGRpbmdUb3A9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGY9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpXbygrbiksdCk6Zn0sdC5wYWRkaW5nUmlnaHQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpXbygrbiksdCk6Y30sdC5wYWRkaW5nQm90dG9tPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246V28oK24pLHQpOnN9LHQucGFkZGluZ0xlZnQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGw9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpXbygrbiksdCk6bH0sdH0sdC50cmVlbWFwQmluYXJ5PWZ1bmN0aW9uKHQsbixlLHIsaSl7ZnVuY3Rpb24gbyh0LG4sZSxyLGksYSx1KXtpZih0Pj1uLTEpe3ZhciBjPWZbdF07cmV0dXJuIGMueDA9cixjLnkwPWksYy54MT1hLHZvaWQoYy55MT11KX1mb3IodmFyIGw9c1t0XSxoPWUvMitsLGQ9dCsxLHA9bi0xO2Q8cDspe3ZhciB2PWQrcD4+PjE7c1t2XTxoP2Q9disxOnA9dn1oLXNbZC0xXTxzW2RdLWgmJnQrMTxkJiYtLWQ7dmFyIGc9c1tkXS1sLHk9ZS1nO2lmKGEtcj51LWkpe3ZhciBfPShyKnkrYSpnKS9lO28odCxkLGcscixpLF8sdSksbyhkLG4seSxfLGksYSx1KX1lbHNle3ZhciBiPShpKnkrdSpnKS9lO28odCxkLGcscixpLGEsYiksbyhkLG4seSxyLGIsYSx1KX19dmFyIGEsdSxmPXQuY2hpbGRyZW4sYz1mLmxlbmd0aCxzPW5ldyBBcnJheShjKzEpO2ZvcihzWzBdPXU9YT0wO2E8YzsrK2Epc1thKzFdPXUrPWZbYV0udmFsdWU7bygwLGMsdC52YWx1ZSxuLGUscixpKX0sdC50cmVlbWFwRGljZT1uYSx0LnRyZWVtYXBTbGljZT1zYSx0LnRyZWVtYXBTbGljZURpY2U9ZnVuY3Rpb24odCxuLGUscixpKXsoMSZ0LmRlcHRoP3NhOm5hKSh0LG4sZSxyLGkpfSx0LnRyZWVtYXBTcXVhcmlmeT1idix0LnRyZWVtYXBSZXNxdWFyaWZ5PW12LHQuaW50ZXJwb2xhdGU9ZG4sdC5pbnRlcnBvbGF0ZUFycmF5PWZuLHQuaW50ZXJwb2xhdGVCYXNpcz1LdCx0LmludGVycG9sYXRlQmFzaXNDbG9zZWQ9dG4sdC5pbnRlcnBvbGF0ZURhdGU9Y24sdC5pbnRlcnBvbGF0ZU51bWJlcj1zbix0LmludGVycG9sYXRlT2JqZWN0PWxuLHQuaW50ZXJwb2xhdGVSb3VuZD1wbix0LmludGVycG9sYXRlU3RyaW5nPWhuLHQuaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3M9Y2wsdC5pbnRlcnBvbGF0ZVRyYW5zZm9ybVN2Zz1zbCx0LmludGVycG9sYXRlWm9vbT1fbix0LmludGVycG9sYXRlUmdiPWVsLHQuaW50ZXJwb2xhdGVSZ2JCYXNpcz1ybCx0LmludGVycG9sYXRlUmdiQmFzaXNDbG9zZWQ9aWwsdC5pbnRlcnBvbGF0ZUhzbD12bCx0LmludGVycG9sYXRlSHNsTG9uZz1nbCx0LmludGVycG9sYXRlTGFiPWZ1bmN0aW9uKHQsbil7dmFyIGU9YW4oKHQ9RnQodCkpLmwsKG49RnQobikpLmwpLHI9YW4odC5hLG4uYSksaT1hbih0LmIsbi5iKSxvPWFuKHQub3BhY2l0eSxuLm9wYWNpdHkpO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5sPWUobiksdC5hPXIobiksdC5iPWkobiksdC5vcGFjaXR5PW8obiksdCsiIn19LHQuaW50ZXJwb2xhdGVIY2w9eWwsdC5pbnRlcnBvbGF0ZUhjbExvbmc9X2wsdC5pbnRlcnBvbGF0ZUN1YmVoZWxpeD1ibCx0LmludGVycG9sYXRlQ3ViZWhlbGl4TG9uZz1tbCx0LnBpZWNld2lzZT1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZT0wLHI9bi5sZW5ndGgtMSxpPW5bMF0sbz1uZXcgQXJyYXkocjwwPzA6cik7ZTxyOylvW2VdPXQoaSxpPW5bKytlXSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBuPU1hdGgubWF4KDAsTWF0aC5taW4oci0xLE1hdGguZmxvb3IodCo9cikpKTtyZXR1cm4gb1tuXSh0LW4pfX0sdC5xdWFudGl6ZT1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZT1uZXcgQXJyYXkobikscj0wO3I8bjsrK3IpZVtyXT10KHIvKG4tMSkpO3JldHVybiBlfSx0LnBhdGg9b2UsdC5wb2x5Z29uQXJlYT1mdW5jdGlvbih0KXtmb3IodmFyIG4sZT0tMSxyPXQubGVuZ3RoLGk9dFtyLTFdLG89MDsrK2U8cjspbj1pLGk9dFtlXSxvKz1uWzFdKmlbMF0tblswXSppWzFdO3JldHVybiBvLzJ9LHQucG9seWdvbkNlbnRyb2lkPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlLHI9LTEsaT10Lmxlbmd0aCxvPTAsYT0wLHU9dFtpLTFdLGY9MDsrK3I8aTspbj11LHU9dFtyXSxmKz1lPW5bMF0qdVsxXS11WzBdKm5bMV0sbys9KG5bMF0rdVswXSkqZSxhKz0oblsxXSt1WzFdKSplO3JldHVybiBmKj0zLFtvL2YsYS9mXX0sdC5wb2x5Z29uSHVsbD1mdW5jdGlvbih0KXtpZigoZT10Lmxlbmd0aCk8MylyZXR1cm4gbnVsbDt2YXIgbixlLHI9bmV3IEFycmF5KGUpLGk9bmV3IEFycmF5KGUpO2ZvcihuPTA7bjxlOysrbilyW25dPVsrdFtuXVswXSwrdFtuXVsxXSxuXTtmb3Ioci5zb3J0KGRhKSxuPTA7bjxlOysrbilpW25dPVtyW25dWzBdLC1yW25dWzFdXTt2YXIgbz1wYShyKSxhPXBhKGkpLHU9YVswXT09PW9bMF0sZj1hW2EubGVuZ3RoLTFdPT09b1tvLmxlbmd0aC0xXSxjPVtdO2ZvcihuPW8ubGVuZ3RoLTE7bj49MDstLW4pYy5wdXNoKHRbcltvW25dXVsyXV0pO2ZvcihuPSt1O248YS5sZW5ndGgtZjsrK24pYy5wdXNoKHRbclthW25dXVsyXV0pO3JldHVybiBjfSx0LnBvbHlnb25Db250YWlucz1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZSxyLGk9dC5sZW5ndGgsbz10W2ktMV0sYT1uWzBdLHU9blsxXSxmPW9bMF0sYz1vWzFdLHM9ITEsbD0wO2w8aTsrK2wpZT0obz10W2xdKVswXSwocj1vWzFdKT51IT1jPnUmJmE8KGYtZSkqKHUtcikvKGMtcikrZSYmKHM9IXMpLGY9ZSxjPXI7cmV0dXJuIHN9LHQucG9seWdvbkxlbmd0aD1mdW5jdGlvbih0KXtmb3IodmFyIG4sZSxyPS0xLGk9dC5sZW5ndGgsbz10W2ktMV0sYT1vWzBdLHU9b1sxXSxmPTA7KytyPGk7KW49YSxlPXUsbi09YT0obz10W3JdKVswXSxlLT11PW9bMV0sZis9TWF0aC5zcXJ0KG4qbitlKmUpO3JldHVybiBmfSx0LnF1YWR0cmVlPWplLHQucmFuZG9tVW5pZm9ybT14dix0LnJhbmRvbU5vcm1hbD13dix0LnJhbmRvbUxvZ05vcm1hbD1Ndix0LnJhbmRvbUJhdGVzPVR2LHQucmFuZG9tSXJ3aW5IYWxsPUF2LHQucmFuZG9tRXhwb25lbnRpYWw9TnYsdC5zY2FsZUJhbmQ9eWEsdC5zY2FsZVBvaW50PWZ1bmN0aW9uKCl7cmV0dXJuIF9hKHlhKCkucGFkZGluZ0lubmVyKDEpKX0sdC5zY2FsZUlkZW50aXR5PUVhLHQuc2NhbGVMaW5lYXI9U2EsdC5zY2FsZUxvZz1VYSx0LnNjYWxlT3JkaW5hbD1nYSx0LnNjYWxlSW1wbGljaXQ9Q3YsdC5zY2FsZVBvdz1PYSx0LnNjYWxlU3FydD1mdW5jdGlvbigpe3JldHVybiBPYSgpLmV4cG9uZW50KC41KX0sdC5zY2FsZVF1YW50aWxlPVlhLHQuc2NhbGVRdWFudGl6ZT1CYSx0LnNjYWxlVGhyZXNob2xkPUZhLHQuc2NhbGVUaW1lPWZ1bmN0aW9uKCl7cmV0dXJuIG9mKGZnLGFnLEd2LEh2LEl2LEJ2LE92LEx2LHQudGltZUZvcm1hdCkuZG9tYWluKFtuZXcgRGF0ZSgyZTMsMCwxKSxuZXcgRGF0ZSgyZTMsMCwyKV0pfSx0LnNjYWxlVXRjPWZ1bmN0aW9uKCl7cmV0dXJuIG9mKHpnLENnLGdnLHBnLGhnLHNnLE92LEx2LHQudXRjRm9ybWF0KS5kb21haW4oW0RhdGUuVVRDKDJlMywwLDEpLERhdGUuVVRDKDJlMywwLDIpXSl9LHQuc2NhbGVTZXF1ZW50aWFsPWFmLHQuc2NoZW1lQ2F0ZWdvcnkxMD1XZyx0LnNjaGVtZUFjY2VudD1aZyx0LnNjaGVtZURhcmsyPVFnLHQuc2NoZW1lUGFpcmVkPUpnLHQuc2NoZW1lUGFzdGVsMT1LZyx0LnNjaGVtZVBhc3RlbDI9dHksdC5zY2hlbWVTZXQxPW55LHQuc2NoZW1lU2V0Mj1leSx0LnNjaGVtZVNldDM9cnksdC5pbnRlcnBvbGF0ZUJyQkc9b3ksdC5zY2hlbWVCckJHPWl5LHQuaW50ZXJwb2xhdGVQUkduPXV5LHQuc2NoZW1lUFJHbj1heSx0LmludGVycG9sYXRlUGlZRz1jeSx0LnNjaGVtZVBpWUc9ZnksdC5pbnRlcnBvbGF0ZVB1T3I9bHksdC5zY2hlbWVQdU9yPXN5LHQuaW50ZXJwb2xhdGVSZEJ1PWR5LHQuc2NoZW1lUmRCdT1oeSx0LmludGVycG9sYXRlUmRHeT12eSx0LnNjaGVtZVJkR3k9cHksdC5pbnRlcnBvbGF0ZVJkWWxCdT15eSx0LnNjaGVtZVJkWWxCdT1neSx0LmludGVycG9sYXRlUmRZbEduPWJ5LHQuc2NoZW1lUmRZbEduPV95LHQuaW50ZXJwb2xhdGVTcGVjdHJhbD14eSx0LnNjaGVtZVNwZWN0cmFsPW15LHQuaW50ZXJwb2xhdGVCdUduPU15LHQuc2NoZW1lQnVHbj13eSx0LmludGVycG9sYXRlQnVQdT1UeSx0LnNjaGVtZUJ1UHU9QXksdC5pbnRlcnBvbGF0ZUduQnU9U3ksdC5zY2hlbWVHbkJ1PU55LHQuaW50ZXJwb2xhdGVPclJkPWt5LHQuc2NoZW1lT3JSZD1FeSx0LmludGVycG9sYXRlUHVCdUduPVB5LHQuc2NoZW1lUHVCdUduPUN5LHQuaW50ZXJwb2xhdGVQdUJ1PVJ5LHQuc2NoZW1lUHVCdT16eSx0LmludGVycG9sYXRlUHVSZD1EeSx0LnNjaGVtZVB1UmQ9THksdC5pbnRlcnBvbGF0ZVJkUHU9cXksdC5zY2hlbWVSZFB1PVV5LHQuaW50ZXJwb2xhdGVZbEduQnU9WXksdC5zY2hlbWVZbEduQnU9T3ksdC5pbnRlcnBvbGF0ZVlsR249RnksdC5zY2hlbWVZbEduPUJ5LHQuaW50ZXJwb2xhdGVZbE9yQnI9anksdC5zY2hlbWVZbE9yQnI9SXksdC5pbnRlcnBvbGF0ZVlsT3JSZD1YeSx0LnNjaGVtZVlsT3JSZD1IeSx0LmludGVycG9sYXRlQmx1ZXM9VnksdC5zY2hlbWVCbHVlcz1HeSx0LmludGVycG9sYXRlR3JlZW5zPVd5LHQuc2NoZW1lR3JlZW5zPSR5LHQuaW50ZXJwb2xhdGVHcmV5cz1ReSx0LnNjaGVtZUdyZXlzPVp5LHQuaW50ZXJwb2xhdGVQdXJwbGVzPUt5LHQuc2NoZW1lUHVycGxlcz1KeSx0LmludGVycG9sYXRlUmVkcz1uXyx0LnNjaGVtZVJlZHM9dF8sdC5pbnRlcnBvbGF0ZU9yYW5nZXM9cl8sdC5zY2hlbWVPcmFuZ2VzPWVfLHQuaW50ZXJwb2xhdGVDdWJlaGVsaXhEZWZhdWx0PWlfLHQuaW50ZXJwb2xhdGVSYWluYm93PWZ1bmN0aW9uKHQpeyh0PDB8fHQ+MSkmJih0LT1NYXRoLmZsb29yKHQpKTt2YXIgbj1NYXRoLmFicyh0LS41KTtyZXR1cm4gdV8uaD0zNjAqdC0xMDAsdV8ucz0xLjUtMS41Km4sdV8ubD0uOC0uOSpuLHVfKyIifSx0LmludGVycG9sYXRlV2FybT1vXyx0LmludGVycG9sYXRlQ29vbD1hXyx0LmludGVycG9sYXRlU2luZWJvdz1mdW5jdGlvbih0KXt2YXIgbjtyZXR1cm4gdD0oLjUtdCkqTWF0aC5QSSxmXy5yPTI1NSoobj1NYXRoLnNpbih0KSkqbixmXy5nPTI1NSoobj1NYXRoLnNpbih0K2NfKSkqbixmXy5iPTI1NSoobj1NYXRoLnNpbih0K3NfKSkqbixmXysiIn0sdC5pbnRlcnBvbGF0ZVZpcmlkaXM9bF8sdC5pbnRlcnBvbGF0ZU1hZ21hPWhfLHQuaW50ZXJwb2xhdGVJbmZlcm5vPWRfLHQuaW50ZXJwb2xhdGVQbGFzbWE9cF8sdC5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGN0KEModCkuY2FsbChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpKX0sdC5jcmVhdG9yPUMsdC5sb2NhbD1zdCx0Lm1hdGNoZXI9X3MsdC5tb3VzZT1wdCx0Lm5hbWVzcGFjZT1rLHQubmFtZXNwYWNlcz1wcyx0LmNsaWVudFBvaW50PWR0LHQuc2VsZWN0PWN0LHQuc2VsZWN0QWxsPWZ1bmN0aW9uKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD9uZXcgdXQoW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodCldLFtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdKTpuZXcgdXQoW251bGw9PXQ/W106dF0seHMpfSx0LnNlbGVjdGlvbj1mdCx0LnNlbGVjdG9yPXosdC5zZWxlY3RvckFsbD1MLHQuc3R5bGU9Rix0LnRvdWNoPXZ0LHQudG91Y2hlcz1mdW5jdGlvbih0LG4pe251bGw9PW4mJihuPWh0KCkudG91Y2hlcyk7Zm9yKHZhciBlPTAscj1uP24ubGVuZ3RoOjAsaT1uZXcgQXJyYXkocik7ZTxyOysrZSlpW2VdPWR0KHQsbltlXSk7cmV0dXJuIGl9LHQud2luZG93PUIsdC5jdXN0b21FdmVudD1vdCx0LmFyYz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt2YXIgdCxjLHM9K24uYXBwbHkodGhpcyxhcmd1bWVudHMpLGw9K2UuYXBwbHkodGhpcyxhcmd1bWVudHMpLGg9by5hcHBseSh0aGlzLGFyZ3VtZW50cyktQV8sZD1hLmFwcGx5KHRoaXMsYXJndW1lbnRzKS1BXyxwPXZfKGQtaCksdj1kPmg7aWYoZnx8KGY9dD1vZSgpKSxsPHMmJihjPWwsbD1zLHM9YyksbD53XylpZihwPlRfLXdfKWYubW92ZVRvKGwqeV8oaCksbCptXyhoKSksZi5hcmMoMCwwLGwsaCxkLCF2KSxzPndfJiYoZi5tb3ZlVG8ocyp5XyhkKSxzKm1fKGQpKSxmLmFyYygwLDAscyxkLGgsdikpO2Vsc2V7dmFyIGcseSxfPWgsYj1kLG09aCx4PWQsdz1wLE09cCxBPXUuYXBwbHkodGhpcyxhcmd1bWVudHMpLzIsVD1BPndfJiYoaT8raS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6eF8ocypzK2wqbCkpLE49Yl8odl8obC1zKS8yLCtyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSksUz1OLEU9TjtpZihUPndfKXt2YXIgaz1sZihUL3MqbV8oQSkpLEM9bGYoVC9sKm1fKEEpKTsody09MiprKT53Xz8oayo9dj8xOi0xLG0rPWsseC09ayk6KHc9MCxtPXg9KGgrZCkvMiksKE0tPTIqQyk+d18/KEMqPXY/MTotMSxfKz1DLGItPUMpOihNPTAsXz1iPShoK2QpLzIpfXZhciBQPWwqeV8oXyksej1sKm1fKF8pLFI9cyp5Xyh4KSxMPXMqbV8oeCk7aWYoTj53Xyl7dmFyIEQ9bCp5XyhiKSxVPWwqbV8oYikscT1zKnlfKG0pLE89cyptXyhtKTtpZihwPE1fKXt2YXIgWT13PndfP2Z1bmN0aW9uKHQsbixlLHIsaSxvLGEsdSl7dmFyIGY9ZS10LGM9ci1uLHM9YS1pLGw9dS1vLGg9KHMqKG4tbyktbCoodC1pKSkvKGwqZi1zKmMpO3JldHVyblt0K2gqZixuK2gqY119KFAseixxLE8sRCxVLFIsTCk6W1IsTF0sQj1QLVlbMF0sRj16LVlbMV0sST1ELVlbMF0saj1VLVlbMV0sSD0xL21fKGZ1bmN0aW9uKHQpe3JldHVybiB0PjE/MDp0PC0xP01fOk1hdGguYWNvcyh0KX0oKEIqSStGKmopLyh4XyhCKkIrRipGKSp4XyhJKkkraipqKSkpLzIpLFg9eF8oWVswXSpZWzBdK1lbMV0qWVsxXSk7Uz1iXyhOLChzLVgpLyhILTEpKSxFPWJfKE4sKGwtWCkvKEgrMSkpfX1NPndfP0U+d18/KGc9eWYocSxPLFAseixsLEUsdikseT15ZihELFUsUixMLGwsRSx2KSxmLm1vdmVUbyhnLmN4K2cueDAxLGcuY3krZy55MDEpLEU8Tj9mLmFyYyhnLmN4LGcuY3ksRSxnXyhnLnkwMSxnLngwMSksZ18oeS55MDEseS54MDEpLCF2KTooZi5hcmMoZy5jeCxnLmN5LEUsZ18oZy55MDEsZy54MDEpLGdfKGcueTExLGcueDExKSwhdiksZi5hcmMoMCwwLGwsZ18oZy5jeStnLnkxMSxnLmN4K2cueDExKSxnXyh5LmN5K3kueTExLHkuY3greS54MTEpLCF2KSxmLmFyYyh5LmN4LHkuY3ksRSxnXyh5LnkxMSx5LngxMSksZ18oeS55MDEseS54MDEpLCF2KSkpOihmLm1vdmVUbyhQLHopLGYuYXJjKDAsMCxsLF8sYiwhdikpOmYubW92ZVRvKFAseikscz53XyYmdz53Xz9TPndfPyhnPXlmKFIsTCxELFUscywtUyx2KSx5PXlmKFAseixxLE8scywtUyx2KSxmLmxpbmVUbyhnLmN4K2cueDAxLGcuY3krZy55MDEpLFM8Tj9mLmFyYyhnLmN4LGcuY3ksUyxnXyhnLnkwMSxnLngwMSksZ18oeS55MDEseS54MDEpLCF2KTooZi5hcmMoZy5jeCxnLmN5LFMsZ18oZy55MDEsZy54MDEpLGdfKGcueTExLGcueDExKSwhdiksZi5hcmMoMCwwLHMsZ18oZy5jeStnLnkxMSxnLmN4K2cueDExKSxnXyh5LmN5K3kueTExLHkuY3greS54MTEpLHYpLGYuYXJjKHkuY3gseS5jeSxTLGdfKHkueTExLHkueDExKSxnXyh5LnkwMSx5LngwMSksIXYpKSk6Zi5hcmMoMCwwLHMseCxtLHYpOmYubGluZVRvKFIsTCl9ZWxzZSBmLm1vdmVUbygwLDApO2lmKGYuY2xvc2VQYXRoKCksdClyZXR1cm4gZj1udWxsLHQrIiJ8fG51bGx9dmFyIG49aGYsZT1kZixyPXNmKDApLGk9bnVsbCxvPXBmLGE9dmYsdT1nZixmPW51bGw7cmV0dXJuIHQuY2VudHJvaWQ9ZnVuY3Rpb24oKXt2YXIgdD0oK24uYXBwbHkodGhpcyxhcmd1bWVudHMpKyArZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLzIscj0oK28uYXBwbHkodGhpcyxhcmd1bWVudHMpKyArYS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLzItTV8vMjtyZXR1cm5beV8ocikqdCxtXyhyKSp0XX0sdC5pbm5lclJhZGl1cz1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0iZnVuY3Rpb24iPT10eXBlb2YgZT9lOnNmKCtlKSx0KTpufSx0Lm91dGVyUmFkaXVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoK24pLHQpOmV9LHQuY29ybmVyUmFkaXVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoK24pLHQpOnJ9LHQucGFkUmFkaXVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPW51bGw9PW4/bnVsbDoiZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSx0KTppfSx0LnN0YXJ0QW5nbGU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpzZigrbiksdCk6b30sdC5lbmRBbmdsZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYT0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSx0KTphfSx0LnBhZEFuZ2xlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1PSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoK24pLHQpOnV9LHQuY29udGV4dD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZj1udWxsPT1uP251bGw6bix0KTpmfSx0fSx0LmFyZWE9TWYsdC5saW5lPXdmLHQucGllPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgdSxmLGMscyxsLGg9dC5sZW5ndGgsZD0wLHA9bmV3IEFycmF5KGgpLHY9bmV3IEFycmF5KGgpLGc9K2kuYXBwbHkodGhpcyxhcmd1bWVudHMpLHk9TWF0aC5taW4oVF8sTWF0aC5tYXgoLVRfLG8uYXBwbHkodGhpcyxhcmd1bWVudHMpLWcpKSxfPU1hdGgubWluKE1hdGguYWJzKHkpL2gsYS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLGI9XyooeTwwPy0xOjEpO2Zvcih1PTA7dTxoOysrdSkobD12W3BbdV09dV09K24odFt1XSx1LHQpKT4wJiYoZCs9bCk7Zm9yKG51bGwhPWU/cC5zb3J0KGZ1bmN0aW9uKHQsbil7cmV0dXJuIGUodlt0XSx2W25dKX0pOm51bGwhPXImJnAuc29ydChmdW5jdGlvbihuLGUpe3JldHVybiByKHRbbl0sdFtlXSl9KSx1PTAsYz1kPyh5LWgqYikvZDowO3U8aDsrK3UsZz1zKWY9cFt1XSxzPWcrKChsPXZbZl0pPjA/bCpjOjApK2IsdltmXT17ZGF0YTp0W2ZdLGluZGV4OnUsdmFsdWU6bCxzdGFydEFuZ2xlOmcsZW5kQW5nbGU6cyxwYWRBbmdsZTpffTtyZXR1cm4gdn12YXIgbj1UZixlPUFmLHI9bnVsbCxpPXNmKDApLG89c2YoVF8pLGE9c2YoMCk7cmV0dXJuIHQudmFsdWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpzZigrZSksdCk6bn0sdC5zb3J0VmFsdWVzPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPW4scj1udWxsLHQpOmV9LHQuc29ydD1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocj1uLGU9bnVsbCx0KTpyfSx0LnN0YXJ0QW5nbGU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGk9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bjpzZigrbiksdCk6aX0sdC5lbmRBbmdsZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSx0KTpvfSx0LnBhZEFuZ2xlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoK24pLHQpOmF9LHR9LHQuYXJlYVJhZGlhbD1DZix0LnJhZGlhbEFyZWE9Q2YsdC5saW5lUmFkaWFsPWtmLHQucmFkaWFsTGluZT1rZix0LnBvaW50UmFkaWFsPVBmLHQubGlua0hvcml6b250YWw9ZnVuY3Rpb24oKXtyZXR1cm4gTGYoRGYpfSx0LmxpbmtWZXJ0aWNhbD1mdW5jdGlvbigpe3JldHVybiBMZihVZil9LHQubGlua1JhZGlhbD1mdW5jdGlvbigpe3ZhciB0PUxmKHFmKTtyZXR1cm4gdC5hbmdsZT10LngsZGVsZXRlIHQueCx0LnJhZGl1cz10LnksZGVsZXRlIHQueSx0fSx0LnN5bWJvbD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt2YXIgdDtpZihyfHwocj10PW9lKCkpLG4uYXBwbHkodGhpcyxhcmd1bWVudHMpLmRyYXcociwrZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLHQpcmV0dXJuIHI9bnVsbCx0KyIifHxudWxsfXZhciBuPXNmKEVfKSxlPXNmKDY0KSxyPW51bGw7cmV0dXJuIHQudHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0iZnVuY3Rpb24iPT10eXBlb2YgZT9lOnNmKGUpLHQpOm59LHQuc2l6ZT1mdW5jdGlvbihuKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT0iZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKCtuKSx0KTplfSx0LmNvbnRleHQ9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9bnVsbD09bj9udWxsOm4sdCk6cn0sdH0sdC5zeW1ib2xzPUhfLHQuc3ltYm9sQ2lyY2xlPUVfLHQuc3ltYm9sQ3Jvc3M9a18sdC5zeW1ib2xEaWFtb25kPXpfLHQuc3ltYm9sU3F1YXJlPXFfLHQuc3ltYm9sU3Rhcj1VXyx0LnN5bWJvbFRyaWFuZ2xlPVlfLHQuc3ltYm9sV3llPWpfLHQuY3VydmVCYXNpc0Nsb3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEZmKHQpfSx0LmN1cnZlQmFzaXNPcGVuPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgSWYodCl9LHQuY3VydmVCYXNpcz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEJmKHQpfSx0LmN1cnZlQnVuZGxlPVhfLHQuY3VydmVDYXJkaW5hbENsb3NlZD1WXyx0LmN1cnZlQ2FyZGluYWxPcGVuPSRfLHQuY3VydmVDYXJkaW5hbD1HXyx0LmN1cnZlQ2F0bXVsbFJvbUNsb3NlZD1aXyx0LmN1cnZlQ2F0bXVsbFJvbU9wZW49UV8sdC5jdXJ2ZUNhdG11bGxSb209V18sdC5jdXJ2ZUxpbmVhckNsb3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEpmKHQpfSx0LmN1cnZlTGluZWFyPWJmLHQuY3VydmVNb25vdG9uZVg9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyByYyh0KX0sdC5jdXJ2ZU1vbm90b25lWT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGljKHQpfSx0LmN1cnZlTmF0dXJhbD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGFjKHQpfSx0LmN1cnZlU3RlcD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGZjKHQsLjUpfSx0LmN1cnZlU3RlcEFmdGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgZmModCwxKX0sdC5jdXJ2ZVN0ZXBCZWZvcmU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBmYyh0LDApfSx0LnN0YWNrPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgbyxhLHU9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyksZj10Lmxlbmd0aCxjPXUubGVuZ3RoLHM9bmV3IEFycmF5KGMpO2ZvcihvPTA7bzxjOysrbyl7Zm9yKHZhciBsLGg9dVtvXSxkPXNbb109bmV3IEFycmF5KGYpLHA9MDtwPGY7KytwKWRbcF09bD1bMCwraSh0W3BdLGgscCx0KV0sbC5kYXRhPXRbcF07ZC5rZXk9aH1mb3Iobz0wLGE9ZShzKTtvPGM7KytvKXNbYVtvXV0uaW5kZXg9bztyZXR1cm4gcihzLGEpLHN9dmFyIG49c2YoW10pLGU9c2Mscj1jYyxpPWxjO3JldHVybiB0LmtleXM9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpzZihTXy5jYWxsKGUpKSx0KTpufSx0LnZhbHVlPWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246c2YoK24pLHQpOml9LHQub3JkZXI9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9bnVsbD09bj9zYzoiZnVuY3Rpb24iPT10eXBlb2Ygbj9uOnNmKFNfLmNhbGwobikpLHQpOmV9LHQub2Zmc2V0PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW51bGw9PW4/Y2M6bix0KTpyfSx0fSx0LnN0YWNrT2Zmc2V0RXhwYW5kPWZ1bmN0aW9uKHQsbil7aWYoKHI9dC5sZW5ndGgpPjApe2Zvcih2YXIgZSxyLGksbz0wLGE9dFswXS5sZW5ndGg7bzxhOysrbyl7Zm9yKGk9ZT0wO2U8cjsrK2UpaSs9dFtlXVtvXVsxXXx8MDtpZihpKWZvcihlPTA7ZTxyOysrZSl0W2VdW29dWzFdLz1pfWNjKHQsbil9fSx0LnN0YWNrT2Zmc2V0RGl2ZXJnaW5nPWZ1bmN0aW9uKHQsbil7aWYoKHU9dC5sZW5ndGgpPjEpZm9yKHZhciBlLHIsaSxvLGEsdSxmPTAsYz10W25bMF1dLmxlbmd0aDtmPGM7KytmKWZvcihvPWE9MCxlPTA7ZTx1OysrZSkoaT0ocj10W25bZV1dW2ZdKVsxXS1yWzBdKT49MD8oclswXT1vLHJbMV09bys9aSk6aTwwPyhyWzFdPWEsclswXT1hKz1pKTpyWzBdPW99LHQuc3RhY2tPZmZzZXROb25lPWNjLHQuc3RhY2tPZmZzZXRTaWxob3VldHRlPWZ1bmN0aW9uKHQsbil7aWYoKGU9dC5sZW5ndGgpPjApe2Zvcih2YXIgZSxyPTAsaT10W25bMF1dLG89aS5sZW5ndGg7cjxvOysrcil7Zm9yKHZhciBhPTAsdT0wO2E8ZTsrK2EpdSs9dFthXVtyXVsxXXx8MDtpW3JdWzFdKz1pW3JdWzBdPS11LzJ9Y2ModCxuKX19LHQuc3RhY2tPZmZzZXRXaWdnbGU9ZnVuY3Rpb24odCxuKXtpZigoaT10Lmxlbmd0aCk+MCYmKHI9KGU9dFtuWzBdXSkubGVuZ3RoKT4wKXtmb3IodmFyIGUscixpLG89MCxhPTE7YTxyOysrYSl7Zm9yKHZhciB1PTAsZj0wLGM9MDt1PGk7Kyt1KXtmb3IodmFyIHM9dFtuW3VdXSxsPXNbYV1bMV18fDAsaD0obC0oc1thLTFdWzFdfHwwKSkvMixkPTA7ZDx1OysrZCl7dmFyIHA9dFtuW2RdXTtoKz0ocFthXVsxXXx8MCktKHBbYS0xXVsxXXx8MCl9Zis9bCxjKz1oKmx9ZVthLTFdWzFdKz1lW2EtMV1bMF09byxmJiYoby09Yy9mKX1lW2EtMV1bMV0rPWVbYS0xXVswXT1vLGNjKHQsbil9fSx0LnN0YWNrT3JkZXJBc2NlbmRpbmc9aGMsdC5zdGFja09yZGVyRGVzY2VuZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gaGModCkucmV2ZXJzZSgpfSx0LnN0YWNrT3JkZXJJbnNpZGVPdXQ9ZnVuY3Rpb24odCl7dmFyIG4sZSxyPXQubGVuZ3RoLGk9dC5tYXAoZGMpLG89c2ModCkuc29ydChmdW5jdGlvbih0LG4pe3JldHVybiBpW25dLWlbdF19KSxhPTAsdT0wLGY9W10sYz1bXTtmb3Iobj0wO248cjsrK24pZT1vW25dLGE8dT8oYSs9aVtlXSxmLnB1c2goZSkpOih1Kz1pW2VdLGMucHVzaChlKSk7cmV0dXJuIGMucmV2ZXJzZSgpLmNvbmNhdChmKX0sdC5zdGFja09yZGVyTm9uZT1zYyx0LnN0YWNrT3JkZXJSZXZlcnNlPWZ1bmN0aW9uKHQpe3JldHVybiBzYyh0KS5yZXZlcnNlKCl9LHQudGltZUludGVydmFsPUlhLHQudGltZU1pbGxpc2Vjb25kPUx2LHQudGltZU1pbGxpc2Vjb25kcz1Edix0LnV0Y01pbGxpc2Vjb25kPUx2LHQudXRjTWlsbGlzZWNvbmRzPUR2LHQudGltZVNlY29uZD1Pdix0LnRpbWVTZWNvbmRzPVl2LHQudXRjU2Vjb25kPU92LHQudXRjU2Vjb25kcz1Zdix0LnRpbWVNaW51dGU9QnYsdC50aW1lTWludXRlcz1Gdix0LnRpbWVIb3VyPUl2LHQudGltZUhvdXJzPWp2LHQudGltZURheT1Idix0LnRpbWVEYXlzPVh2LHQudGltZVdlZWs9R3YsdC50aW1lV2Vla3M9S3YsdC50aW1lU3VuZGF5PUd2LHQudGltZVN1bmRheXM9S3YsdC50aW1lTW9uZGF5PVZ2LHQudGltZU1vbmRheXM9dGcsdC50aW1lVHVlc2RheT0kdix0LnRpbWVUdWVzZGF5cz1uZyx0LnRpbWVXZWRuZXNkYXk9V3YsdC50aW1lV2VkbmVzZGF5cz1lZyx0LnRpbWVUaHVyc2RheT1adix0LnRpbWVUaHVyc2RheXM9cmcsdC50aW1lRnJpZGF5PVF2LHQudGltZUZyaWRheXM9aWcsdC50aW1lU2F0dXJkYXk9SnYsdC50aW1lU2F0dXJkYXlzPW9nLHQudGltZU1vbnRoPWFnLHQudGltZU1vbnRocz11Zyx0LnRpbWVZZWFyPWZnLHQudGltZVllYXJzPWNnLHQudXRjTWludXRlPXNnLHQudXRjTWludXRlcz1sZyx0LnV0Y0hvdXI9aGcsdC51dGNIb3Vycz1kZyx0LnV0Y0RheT1wZyx0LnV0Y0RheXM9dmcsdC51dGNXZWVrPWdnLHQudXRjV2Vla3M9TWcsdC51dGNTdW5kYXk9Z2csdC51dGNTdW5kYXlzPU1nLHQudXRjTW9uZGF5PXlnLHQudXRjTW9uZGF5cz1BZyx0LnV0Y1R1ZXNkYXk9X2csdC51dGNUdWVzZGF5cz1UZyx0LnV0Y1dlZG5lc2RheT1iZyx0LnV0Y1dlZG5lc2RheXM9TmcsdC51dGNUaHVyc2RheT1tZyx0LnV0Y1RodXJzZGF5cz1TZyx0LnV0Y0ZyaWRheT14Zyx0LnV0Y0ZyaWRheXM9RWcsdC51dGNTYXR1cmRheT13Zyx0LnV0Y1NhdHVyZGF5cz1rZyx0LnV0Y01vbnRoPUNnLHQudXRjTW9udGhzPVBnLHQudXRjWWVhcj16Zyx0LnV0Y1llYXJzPUxnLHQudGltZUZvcm1hdERlZmF1bHRMb2NhbGU9bmYsdC50aW1lRm9ybWF0TG9jYWxlPSRhLHQuaXNvRm9ybWF0PUJnLHQuaXNvUGFyc2U9RmcsdC5ub3c9d24sdC50aW1lcj1Ubix0LnRpbWVyRmx1c2g9Tm4sdC50aW1lb3V0PUNuLHQuaW50ZXJ2YWw9ZnVuY3Rpb24odCxuLGUpe3ZhciByPW5ldyBBbixpPW47cmV0dXJuIG51bGw9PW4/KHIucmVzdGFydCh0LG4sZSkscik6KG49K24sZT1udWxsPT1lP3duKCk6K2Usci5yZXN0YXJ0KGZ1bmN0aW9uIG8oYSl7YSs9aSxyLnJlc3RhcnQobyxpKz1uLGUpLHQoYSl9LG4sZSkscil9LHQudHJhbnNpdGlvbj1Zbix0LmFjdGl2ZT1mdW5jdGlvbih0LG4pe3ZhciBlLHIsaT10Ll9fdHJhbnNpdGlvbjtpZihpKXtuPW51bGw9PW4/bnVsbDpuKyIiO2ZvcihyIGluIGkpaWYoKGU9aVtyXSkuc3RhdGU+UmwmJmUubmFtZT09PW4pcmV0dXJuIG5ldyBPbihbW3RdXSxsaCxuLCtyKX1yZXR1cm4gbnVsbH0sdC5pbnRlcnJ1cHQ9RG4sdC52b3Jvbm9pPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtyZXR1cm4gbmV3IFljKHQubWFwKGZ1bmN0aW9uKHIsaSl7dmFyIG89W01hdGgucm91bmQobihyLGksdCkvb2IpKm9iLE1hdGgucm91bmQoZShyLGksdCkvb2IpKm9iXTtyZXR1cm4gby5pbmRleD1pLG8uZGF0YT1yLG99KSxyKX12YXIgbj12YyxlPWdjLHI9bnVsbDtyZXR1cm4gdC5wb2x5Z29ucz1mdW5jdGlvbihuKXtyZXR1cm4gdChuKS5wb2x5Z29ucygpfSx0LmxpbmtzPWZ1bmN0aW9uKG4pe3JldHVybiB0KG4pLmxpbmtzKCl9LHQudHJpYW5nbGVzPWZ1bmN0aW9uKG4pe3JldHVybiB0KG4pLnRyaWFuZ2xlcygpfSx0Lng9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG49ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpwYygrZSksdCk6bn0sdC55PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlPSJmdW5jdGlvbiI9PXR5cGVvZiBuP246cGMoK24pLHQpOmV9LHQuZXh0ZW50PWZ1bmN0aW9uKG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyPW51bGw9PW4/bnVsbDpbWytuWzBdWzBdLCtuWzBdWzFdXSxbK25bMV1bMF0sK25bMV1bMV1dXSx0KTpyJiZbW3JbMF1bMF0sclswXVsxXV0sW3JbMV1bMF0sclsxXVsxXV1dfSx0LnNpemU9ZnVuY3Rpb24obil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHI9bnVsbD09bj9udWxsOltbMCwwXSxbK25bMF0sK25bMV1dXSx0KTpyJiZbclsxXVswXS1yWzBdWzBdLHJbMV1bMV0tclswXVsxXV19LHR9LHQuem9vbT1mdW5jdGlvbigpe2Z1bmN0aW9uIG4odCl7dC5wcm9wZXJ0eSgiX196b29tIixWYykub24oIndoZWVsLnpvb20iLGYpLm9uKCJtb3VzZWRvd24uem9vbSIsYykub24oImRibGNsaWNrLnpvb20iLHMpLmZpbHRlcihtKS5vbigidG91Y2hzdGFydC56b29tIixsKS5vbigidG91Y2htb3ZlLnpvb20iLGgpLm9uKCJ0b3VjaGVuZC56b29tIHRvdWNoY2FuY2VsLnpvb20iLGQpLnN0eWxlKCJ0b3VjaC1hY3Rpb24iLCJub25lIikuc3R5bGUoIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvciIsInJnYmEoMCwwLDAsMCkiKX1mdW5jdGlvbiBlKHQsbil7cmV0dXJuKG49TWF0aC5tYXgoeFswXSxNYXRoLm1pbih4WzFdLG4pKSk9PT10Lms/dDpuZXcgRmMobix0LngsdC55KX1mdW5jdGlvbiByKHQsbixlKXt2YXIgcj1uWzBdLWVbMF0qdC5rLGk9blsxXS1lWzFdKnQuaztyZXR1cm4gcj09PXQueCYmaT09PXQueT90Om5ldyBGYyh0LmsscixpKX1mdW5jdGlvbiBpKHQpe3JldHVyblsoK3RbMF1bMF0rICt0WzFdWzBdKS8yLCgrdFswXVsxXSsgK3RbMV1bMV0pLzJdfWZ1bmN0aW9uIG8odCxuLGUpe3Qub24oInN0YXJ0Lnpvb20iLGZ1bmN0aW9uKCl7YSh0aGlzLGFyZ3VtZW50cykuc3RhcnQoKX0pLm9uKCJpbnRlcnJ1cHQuem9vbSBlbmQuem9vbSIsZnVuY3Rpb24oKXthKHRoaXMsYXJndW1lbnRzKS5lbmQoKX0pLnR3ZWVuKCJ6b29tIixmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cyxyPWEodGhpcyx0KSxvPXkuYXBwbHkodGhpcyx0KSx1PWV8fGkobyksZj1NYXRoLm1heChvWzFdWzBdLW9bMF1bMF0sb1sxXVsxXS1vWzBdWzFdKSxjPXRoaXMuX196b29tLHM9ImZ1bmN0aW9uIj09dHlwZW9mIG4/bi5hcHBseSh0aGlzLHQpOm4sbD1BKGMuaW52ZXJ0KHUpLmNvbmNhdChmL2Muaykscy5pbnZlcnQodSkuY29uY2F0KGYvcy5rKSk7cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKDE9PT10KXQ9cztlbHNle3ZhciBuPWwodCksZT1mL25bMl07dD1uZXcgRmMoZSx1WzBdLW5bMF0qZSx1WzFdLW5bMV0qZSl9ci56b29tKG51bGwsdCl9fSl9ZnVuY3Rpb24gYSh0LG4pe2Zvcih2YXIgZSxyPTAsaT1ULmxlbmd0aDtyPGk7KytyKWlmKChlPVRbcl0pLnRoYXQ9PT10KXJldHVybiBlO3JldHVybiBuZXcgdSh0LG4pfWZ1bmN0aW9uIHUodCxuKXt0aGlzLnRoYXQ9dCx0aGlzLmFyZ3M9bix0aGlzLmluZGV4PS0xLHRoaXMuYWN0aXZlPTAsdGhpcy5leHRlbnQ9eS5hcHBseSh0LG4pfWZ1bmN0aW9uIGYoKXtpZihnLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl7dmFyIHQ9YSh0aGlzLGFyZ3VtZW50cyksbj10aGlzLl9fem9vbSxpPU1hdGgubWF4KHhbMF0sTWF0aC5taW4oeFsxXSxuLmsqTWF0aC5wb3coMixiLmFwcGx5KHRoaXMsYXJndW1lbnRzKSkpKSxvPXB0KHRoaXMpO2lmKHQud2hlZWwpdC5tb3VzZVswXVswXT09PW9bMF0mJnQubW91c2VbMF1bMV09PT1vWzFdfHwodC5tb3VzZVsxXT1uLmludmVydCh0Lm1vdXNlWzBdPW8pKSxjbGVhclRpbWVvdXQodC53aGVlbCk7ZWxzZXtpZihuLms9PT1pKXJldHVybjt0Lm1vdXNlPVtvLG4uaW52ZXJ0KG8pXSxEbih0aGlzKSx0LnN0YXJ0KCl9SGMoKSx0LndoZWVsPXNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LndoZWVsPW51bGwsdC5lbmQoKX0sayksdC56b29tKCJtb3VzZSIsXyhyKGUobixpKSx0Lm1vdXNlWzBdLHQubW91c2VbMV0pLHQuZXh0ZW50LHcpKX19ZnVuY3Rpb24gYygpe2lmKCF2JiZnLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl7dmFyIG49YSh0aGlzLGFyZ3VtZW50cyksZT1jdCh0LmV2ZW50LnZpZXcpLm9uKCJtb3VzZW1vdmUuem9vbSIsZnVuY3Rpb24oKXtpZihIYygpLCFuLm1vdmVkKXt2YXIgZT10LmV2ZW50LmNsaWVudFgtbyxpPXQuZXZlbnQuY2xpZW50WS11O24ubW92ZWQ9ZSplK2kqaT5DfW4uem9vbSgibW91c2UiLF8ocihuLnRoYXQuX196b29tLG4ubW91c2VbMF09cHQobi50aGF0KSxuLm1vdXNlWzFdKSxuLmV4dGVudCx3KSl9LCEwKS5vbigibW91c2V1cC56b29tIixmdW5jdGlvbigpe2Uub24oIm1vdXNlbW92ZS56b29tIG1vdXNldXAuem9vbSIsbnVsbCksYnQodC5ldmVudC52aWV3LG4ubW92ZWQpLEhjKCksbi5lbmQoKX0sITApLGk9cHQodGhpcyksbz10LmV2ZW50LmNsaWVudFgsdT10LmV2ZW50LmNsaWVudFk7X3QodC5ldmVudC52aWV3KSxqYygpLG4ubW91c2U9W2ksdGhpcy5fX3pvb20uaW52ZXJ0KGkpXSxEbih0aGlzKSxuLnN0YXJ0KCl9fWZ1bmN0aW9uIHMoKXtpZihnLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl7dmFyIGk9dGhpcy5fX3pvb20sYT1wdCh0aGlzKSx1PWkuaW52ZXJ0KGEpLGY9aS5rKih0LmV2ZW50LnNoaWZ0S2V5Py41OjIpLGM9XyhyKGUoaSxmKSxhLHUpLHkuYXBwbHkodGhpcyxhcmd1bWVudHMpLHcpO0hjKCksTT4wP2N0KHRoaXMpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihNKS5jYWxsKG8sYyxhKTpjdCh0aGlzKS5jYWxsKG4udHJhbnNmb3JtLGMpfX1mdW5jdGlvbiBsKCl7aWYoZy5hcHBseSh0aGlzLGFyZ3VtZW50cykpe3ZhciBuLGUscixpLG89YSh0aGlzLGFyZ3VtZW50cyksdT10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLGY9dS5sZW5ndGg7Zm9yKGpjKCksZT0wO2U8ZjsrK2UpaT1baT12dCh0aGlzLHUsKHI9dVtlXSkuaWRlbnRpZmllciksdGhpcy5fX3pvb20uaW52ZXJ0KGkpLHIuaWRlbnRpZmllcl0sby50b3VjaDA/by50b3VjaDF8fChvLnRvdWNoMT1pKTooby50b3VjaDA9aSxuPSEwKTtpZihwJiYocD1jbGVhclRpbWVvdXQocCksIW8udG91Y2gxKSlyZXR1cm4gby5lbmQoKSx2b2lkKChpPWN0KHRoaXMpLm9uKCJkYmxjbGljay56b29tIikpJiZpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSk7biYmKHA9c2V0VGltZW91dChmdW5jdGlvbigpe3A9bnVsbH0sRSksRG4odGhpcyksby5zdGFydCgpKX19ZnVuY3Rpb24gaCgpe3ZhciBuLGksbyx1LGY9YSh0aGlzLGFyZ3VtZW50cyksYz10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLHM9Yy5sZW5ndGg7Zm9yKEhjKCkscCYmKHA9Y2xlYXJUaW1lb3V0KHApKSxuPTA7bjxzOysrbilvPXZ0KHRoaXMsYywoaT1jW25dKS5pZGVudGlmaWVyKSxmLnRvdWNoMCYmZi50b3VjaDBbMl09PT1pLmlkZW50aWZpZXI/Zi50b3VjaDBbMF09bzpmLnRvdWNoMSYmZi50b3VjaDFbMl09PT1pLmlkZW50aWZpZXImJihmLnRvdWNoMVswXT1vKTtpZihpPWYudGhhdC5fX3pvb20sZi50b3VjaDEpe3ZhciBsPWYudG91Y2gwWzBdLGg9Zi50b3VjaDBbMV0sZD1mLnRvdWNoMVswXSx2PWYudG91Y2gxWzFdLGc9KGc9ZFswXS1sWzBdKSpnKyhnPWRbMV0tbFsxXSkqZyx5PSh5PXZbMF0taFswXSkqeSsoeT12WzFdLWhbMV0pKnk7aT1lKGksTWF0aC5zcXJ0KGcveSkpLG89WyhsWzBdK2RbMF0pLzIsKGxbMV0rZFsxXSkvMl0sdT1bKGhbMF0rdlswXSkvMiwoaFsxXSt2WzFdKS8yXX1lbHNle2lmKCFmLnRvdWNoMClyZXR1cm47bz1mLnRvdWNoMFswXSx1PWYudG91Y2gwWzFdfWYuem9vbSgidG91Y2giLF8ocihpLG8sdSksZi5leHRlbnQsdykpfWZ1bmN0aW9uIGQoKXt2YXIgbixlLHI9YSh0aGlzLGFyZ3VtZW50cyksaT10LmV2ZW50LmNoYW5nZWRUb3VjaGVzLG89aS5sZW5ndGg7Zm9yKGpjKCksdiYmY2xlYXJUaW1lb3V0KHYpLHY9c2V0VGltZW91dChmdW5jdGlvbigpe3Y9bnVsbH0sRSksbj0wO248bzsrK24pZT1pW25dLHIudG91Y2gwJiZyLnRvdWNoMFsyXT09PWUuaWRlbnRpZmllcj9kZWxldGUgci50b3VjaDA6ci50b3VjaDEmJnIudG91Y2gxWzJdPT09ZS5pZGVudGlmaWVyJiZkZWxldGUgci50b3VjaDE7ci50b3VjaDEmJiFyLnRvdWNoMCYmKHIudG91Y2gwPXIudG91Y2gxLGRlbGV0ZSByLnRvdWNoMSksci50b3VjaDA/ci50b3VjaDBbMV09dGhpcy5fX3pvb20uaW52ZXJ0KHIudG91Y2gwWzBdKTpyLmVuZCgpfXZhciBwLHYsZz1YYyx5PUdjLF89WmMsYj0kYyxtPVdjLHg9WzAsMS8wXSx3PVtbLTEvMCwtMS8wXSxbMS8wLDEvMF1dLE09MjUwLEE9X24sVD1bXSxTPU4oInN0YXJ0Iiwiem9vbSIsImVuZCIpLEU9NTAwLGs9MTUwLEM9MDtyZXR1cm4gbi50cmFuc2Zvcm09ZnVuY3Rpb24odCxuKXt2YXIgZT10LnNlbGVjdGlvbj90LnNlbGVjdGlvbigpOnQ7ZS5wcm9wZXJ0eSgiX196b29tIixWYyksdCE9PWU/byh0LG4pOmUuaW50ZXJydXB0KCkuZWFjaChmdW5jdGlvbigpe2EodGhpcyxhcmd1bWVudHMpLnN0YXJ0KCkuem9vbShudWxsLCJmdW5jdGlvbiI9PXR5cGVvZiBuP24uYXBwbHkodGhpcyxhcmd1bWVudHMpOm4pLmVuZCgpfSl9LG4uc2NhbGVCeT1mdW5jdGlvbih0LGUpe24uc2NhbGVUbyh0LGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX196b29tLmsqKCJmdW5jdGlvbiI9PXR5cGVvZiBlP2UuYXBwbHkodGhpcyxhcmd1bWVudHMpOmUpfSl9LG4uc2NhbGVUbz1mdW5jdGlvbih0LG8pe24udHJhbnNmb3JtKHQsZnVuY3Rpb24oKXt2YXIgdD15LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxuPXRoaXMuX196b29tLGE9aSh0KSx1PW4uaW52ZXJ0KGEpLGY9ImZ1bmN0aW9uIj09dHlwZW9mIG8/by5hcHBseSh0aGlzLGFyZ3VtZW50cyk6bztyZXR1cm4gXyhyKGUobixmKSxhLHUpLHQsdyl9KX0sbi50cmFuc2xhdGVCeT1mdW5jdGlvbih0LGUscil7bi50cmFuc2Zvcm0odCxmdW5jdGlvbigpe3JldHVybiBfKHRoaXMuX196b29tLnRyYW5zbGF0ZSgiZnVuY3Rpb24iPT10eXBlb2YgZT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTplLCJmdW5jdGlvbiI9PXR5cGVvZiByP3IuYXBwbHkodGhpcyxhcmd1bWVudHMpOnIpLHkuYXBwbHkodGhpcyxhcmd1bWVudHMpLHcpfSl9LG4udHJhbnNsYXRlVG89ZnVuY3Rpb24odCxlLHIpe24udHJhbnNmb3JtKHQsZnVuY3Rpb24oKXt2YXIgdD15LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxuPXRoaXMuX196b29tLG89aSh0KTtyZXR1cm4gXyh1Yi50cmFuc2xhdGUob1swXSxvWzFdKS5zY2FsZShuLmspLnRyYW5zbGF0ZSgiZnVuY3Rpb24iPT10eXBlb2YgZT8tZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6LWUsImZ1bmN0aW9uIj09dHlwZW9mIHI/LXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOi1yKSx0LHcpfSl9LHUucHJvdG90eXBlPXtzdGFydDpmdW5jdGlvbigpe3JldHVybiAxPT0rK3RoaXMuYWN0aXZlJiYodGhpcy5pbmRleD1ULnB1c2godGhpcyktMSx0aGlzLmVtaXQoInN0YXJ0IikpLHRoaXN9LHpvb206ZnVuY3Rpb24odCxuKXtyZXR1cm4gdGhpcy5tb3VzZSYmIm1vdXNlIiE9PXQmJih0aGlzLm1vdXNlWzFdPW4uaW52ZXJ0KHRoaXMubW91c2VbMF0pKSx0aGlzLnRvdWNoMCYmInRvdWNoIiE9PXQmJih0aGlzLnRvdWNoMFsxXT1uLmludmVydCh0aGlzLnRvdWNoMFswXSkpLHRoaXMudG91Y2gxJiYidG91Y2giIT09dCYmKHRoaXMudG91Y2gxWzFdPW4uaW52ZXJ0KHRoaXMudG91Y2gxWzBdKSksdGhpcy50aGF0Ll9fem9vbT1uLHRoaXMuZW1pdCgiem9vbSIpLHRoaXN9LGVuZDpmdW5jdGlvbigpe3JldHVybiAwPT0tLXRoaXMuYWN0aXZlJiYoVC5zcGxpY2UodGhpcy5pbmRleCwxKSx0aGlzLmluZGV4PS0xLHRoaXMuZW1pdCgiZW5kIikpLHRoaXN9LGVtaXQ6ZnVuY3Rpb24odCl7b3QobmV3IGZ1bmN0aW9uKHQsbixlKXt0aGlzLnRhcmdldD10LHRoaXMudHlwZT1uLHRoaXMudHJhbnNmb3JtPWV9KG4sdCx0aGlzLnRoYXQuX196b29tKSxTLmFwcGx5LFMsW3QsdGhpcy50aGF0LHRoaXMuYXJnc10pfX0sbi53aGVlbERlbHRhPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhiPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6QmMoK3QpLG4pOmJ9LG4uZmlsdGVyPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhnPSJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6QmMoISF0KSxuKTpnfSxuLnRvdWNoYWJsZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obT0iZnVuY3Rpb24iPT10eXBlb2YgdD90OkJjKCEhdCksbik6bX0sbi5leHRlbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHk9ImZ1bmN0aW9uIj09dHlwZW9mIHQ/dDpCYyhbWyt0WzBdWzBdLCt0WzBdWzFdXSxbK3RbMV1bMF0sK3RbMV1bMV1dXSksbik6eX0sbi5zY2FsZUV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeFswXT0rdFswXSx4WzFdPSt0WzFdLG4pOlt4WzBdLHhbMV1dfSxuLnRyYW5zbGF0ZUV4dGVudD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8od1swXVswXT0rdFswXVswXSx3WzFdWzBdPSt0WzFdWzBdLHdbMF1bMV09K3RbMF1bMV0sd1sxXVsxXT0rdFsxXVsxXSxuKTpbW3dbMF1bMF0sd1swXVsxXV0sW3dbMV1bMF0sd1sxXVsxXV1dfSxuLmNvbnN0cmFpbj1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oXz10LG4pOl99LG4uZHVyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KE09K3Qsbik6TX0sbi5pbnRlcnBvbGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oQT10LG4pOkF9LG4ub249ZnVuY3Rpb24oKXt2YXIgdD1TLm9uLmFwcGx5KFMsYXJndW1lbnRzKTtyZXR1cm4gdD09PVM/bjp0fSxuLmNsaWNrRGlzdGFuY2U9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KEM9KHQ9K3QpKnQsbik6TWF0aC5zcXJ0KEMpfSxufSx0Lnpvb21UcmFuc2Zvcm09SWMsdC56b29tSWRlbnRpdHk9dWIsT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pfSk7CihmdW5jdGlvbihmKXtpZih0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCIpe21vZHVsZS5leHBvcnRzPWYoKX1lbHNlIGlmKHR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kKXtkZWZpbmUoW10sZil9ZWxzZXt2YXIgZztpZih0eXBlb2Ygd2luZG93IT09InVuZGVmaW5lZCIpe2c9d2luZG93fWVsc2UgaWYodHlwZW9mIGdsb2JhbCE9PSJ1bmRlZmluZWQiKXtnPWdsb2JhbH1lbHNlIGlmKHR5cGVvZiBzZWxmIT09InVuZGVmaW5lZCIpe2c9c2VsZn1lbHNle2c9dGhpc31nLmRhZ3JlRDM9ZigpfX0pKGZ1bmN0aW9uKCl7dmFyIGRlZmluZSxtb2R1bGUsZXhwb3J0cztyZXR1cm4gZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2krIiciKTt0aHJvdyBhLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0oKSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBAbGljZW5zZQogKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxMyBDaHJpcyBQZXR0aXR0CiAqCiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwogKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCiAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwogKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgogKgogKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgogKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KICoKICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQogKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCiAqIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sCiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4KICogVEhFIFNPRlRXQVJFLgogKi8KbW9kdWxlLmV4cG9ydHM9e2dyYXBobGliOnJlcXVpcmUoIi4vbGliL2dyYXBobGliIiksZGFncmU6cmVxdWlyZSgiLi9saWIvZGFncmUiKSxpbnRlcnNlY3Q6cmVxdWlyZSgiLi9saWIvaW50ZXJzZWN0IikscmVuZGVyOnJlcXVpcmUoIi4vbGliL3JlbmRlciIpLHV0aWw6cmVxdWlyZSgiLi9saWIvdXRpbCIpLHZlcnNpb246cmVxdWlyZSgiLi9saWIvdmVyc2lvbiIpfX0seyIuL2xpYi9kYWdyZSI6OCwiLi9saWIvZ3JhcGhsaWIiOjksIi4vbGliL2ludGVyc2VjdCI6MTAsIi4vbGliL3JlbmRlciI6MjUsIi4vbGliL3V0aWwiOjI3LCIuL2xpYi92ZXJzaW9uIjoyOH1dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO21vZHVsZS5leHBvcnRzPXtkZWZhdWx0Om5vcm1hbCxub3JtYWw6bm9ybWFsLHZlZTp2ZWUsdW5kaXJlY3RlZDp1bmRpcmVjdGVkfTtmdW5jdGlvbiBub3JtYWwocGFyZW50LGlkLGVkZ2UsdHlwZSl7dmFyIG1hcmtlcj1wYXJlbnQuYXBwZW5kKCJtYXJrZXIiKS5hdHRyKCJpZCIsaWQpLmF0dHIoInZpZXdCb3giLCIwIDAgMTAgMTAiKS5hdHRyKCJyZWZYIiw5KS5hdHRyKCJyZWZZIiw1KS5hdHRyKCJtYXJrZXJVbml0cyIsInN0cm9rZVdpZHRoIikuYXR0cigibWFya2VyV2lkdGgiLDgpLmF0dHIoIm1hcmtlckhlaWdodCIsNikuYXR0cigib3JpZW50IiwiYXV0byIpO3ZhciBwYXRoPW1hcmtlci5hcHBlbmQoInBhdGgiKS5hdHRyKCJkIiwiTSAwIDAgTCAxMCA1IEwgMCAxMCB6Iikuc3R5bGUoInN0cm9rZS13aWR0aCIsMSkuc3R5bGUoInN0cm9rZS1kYXNoYXJyYXkiLCIxLDAiKTt1dGlsLmFwcGx5U3R5bGUocGF0aCxlZGdlW3R5cGUrIlN0eWxlIl0pO2lmKGVkZ2VbdHlwZSsiQ2xhc3MiXSl7cGF0aC5hdHRyKCJjbGFzcyIsZWRnZVt0eXBlKyJDbGFzcyJdKX19ZnVuY3Rpb24gdmVlKHBhcmVudCxpZCxlZGdlLHR5cGUpe3ZhciBtYXJrZXI9cGFyZW50LmFwcGVuZCgibWFya2VyIikuYXR0cigiaWQiLGlkKS5hdHRyKCJ2aWV3Qm94IiwiMCAwIDEwIDEwIikuYXR0cigicmVmWCIsOSkuYXR0cigicmVmWSIsNSkuYXR0cigibWFya2VyVW5pdHMiLCJzdHJva2VXaWR0aCIpLmF0dHIoIm1hcmtlcldpZHRoIiw4KS5hdHRyKCJtYXJrZXJIZWlnaHQiLDYpLmF0dHIoIm9yaWVudCIsImF1dG8iKTt2YXIgcGF0aD1tYXJrZXIuYXBwZW5kKCJwYXRoIikuYXR0cigiZCIsIk0gMCAwIEwgMTAgNSBMIDAgMTAgTCA0IDUgeiIpLnN0eWxlKCJzdHJva2Utd2lkdGgiLDEpLnN0eWxlKCJzdHJva2UtZGFzaGFycmF5IiwiMSwwIik7dXRpbC5hcHBseVN0eWxlKHBhdGgsZWRnZVt0eXBlKyJTdHlsZSJdKTtpZihlZGdlW3R5cGUrIkNsYXNzIl0pe3BhdGguYXR0cigiY2xhc3MiLGVkZ2VbdHlwZSsiQ2xhc3MiXSl9fWZ1bmN0aW9uIHVuZGlyZWN0ZWQocGFyZW50LGlkLGVkZ2UsdHlwZSl7dmFyIG1hcmtlcj1wYXJlbnQuYXBwZW5kKCJtYXJrZXIiKS5hdHRyKCJpZCIsaWQpLmF0dHIoInZpZXdCb3giLCIwIDAgMTAgMTAiKS5hdHRyKCJyZWZYIiw5KS5hdHRyKCJyZWZZIiw1KS5hdHRyKCJtYXJrZXJVbml0cyIsInN0cm9rZVdpZHRoIikuYXR0cigibWFya2VyV2lkdGgiLDgpLmF0dHIoIm1hcmtlckhlaWdodCIsNikuYXR0cigib3JpZW50IiwiYXV0byIpO3ZhciBwYXRoPW1hcmtlci5hcHBlbmQoInBhdGgiKS5hdHRyKCJkIiwiTSAwIDUgTCAxMCA1Iikuc3R5bGUoInN0cm9rZS13aWR0aCIsMSkuc3R5bGUoInN0cm9rZS1kYXNoYXJyYXkiLCIxLDAiKTt1dGlsLmFwcGx5U3R5bGUocGF0aCxlZGdlW3R5cGUrIlN0eWxlIl0pO2lmKGVkZ2VbdHlwZSsiQ2xhc3MiXSl7cGF0aC5hdHRyKCJjbGFzcyIsZWRnZVt0eXBlKyJDbGFzcyJdKX19fSx7Ii4vdXRpbCI6Mjd9XSwzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgdXRpbD1yZXF1aXJlKCIuL3V0aWwiKTt2YXIgZDM9cmVxdWlyZSgiLi9kMyIpO3ZhciBhZGRMYWJlbD1yZXF1aXJlKCIuL2xhYmVsL2FkZC1sYWJlbCIpO21vZHVsZS5leHBvcnRzPWNyZWF0ZUNsdXN0ZXJzO2Z1bmN0aW9uIGNyZWF0ZUNsdXN0ZXJzKHNlbGVjdGlvbixnKXt2YXIgY2x1c3RlcnM9Zy5ub2RlcygpLmZpbHRlcihmdW5jdGlvbih2KXtyZXR1cm4gdXRpbC5pc1N1YmdyYXBoKGcsdil9KTt2YXIgc3ZnQ2x1c3RlcnM9c2VsZWN0aW9uLnNlbGVjdEFsbCgiZy5jbHVzdGVyIikuZGF0YShjbHVzdGVycyxmdW5jdGlvbih2KXtyZXR1cm4gdn0pO3N2Z0NsdXN0ZXJzLnNlbGVjdEFsbCgiKiIpLnJlbW92ZSgpO3N2Z0NsdXN0ZXJzLmVudGVyKCkuYXBwZW5kKCJnIikuYXR0cigiY2xhc3MiLCJjbHVzdGVyIikuYXR0cigiaWQiLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTtyZXR1cm4gbm9kZS5pZH0pLnN0eWxlKCJvcGFjaXR5IiwwKTtzdmdDbHVzdGVycz1zZWxlY3Rpb24uc2VsZWN0QWxsKCJnLmNsdXN0ZXIiKTt1dGlsLmFwcGx5VHJhbnNpdGlvbihzdmdDbHVzdGVycyxnKS5zdHlsZSgib3BhY2l0eSIsMSk7c3ZnQ2x1c3RlcnMuZWFjaChmdW5jdGlvbih2KXt2YXIgbm9kZT1nLm5vZGUodik7dmFyIHRoaXNHcm91cD1kMy5zZWxlY3QodGhpcyk7ZDMuc2VsZWN0KHRoaXMpLmFwcGVuZCgicmVjdCIpO3ZhciBsYWJlbEdyb3VwPXRoaXNHcm91cC5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsImxhYmVsIik7YWRkTGFiZWwobGFiZWxHcm91cCxub2RlLG5vZGUuY2x1c3RlckxhYmVsUG9zKX0pO3N2Z0NsdXN0ZXJzLnNlbGVjdEFsbCgicmVjdCIpLmVhY2goZnVuY3Rpb24oYyl7dmFyIG5vZGU9Zy5ub2RlKGMpO3ZhciBkb21DbHVzdGVyPWQzLnNlbGVjdCh0aGlzKTt1dGlsLmFwcGx5U3R5bGUoZG9tQ2x1c3Rlcixub2RlLnN0eWxlKX0pO3ZhciBleGl0U2VsZWN0aW9uO2lmKHN2Z0NsdXN0ZXJzLmV4aXQpe2V4aXRTZWxlY3Rpb249c3ZnQ2x1c3RlcnMuZXhpdCgpfWVsc2V7ZXhpdFNlbGVjdGlvbj1zdmdDbHVzdGVycy5zZWxlY3RBbGwobnVsbCk7Ly8gZW1wdHkgc2VsZWN0aW9uCn11dGlsLmFwcGx5VHJhbnNpdGlvbihleGl0U2VsZWN0aW9uLGcpLnN0eWxlKCJvcGFjaXR5IiwwKS5yZW1vdmUoKTtyZXR1cm4gc3ZnQ2x1c3RlcnN9fSx7Ii4vZDMiOjcsIi4vbGFiZWwvYWRkLWxhYmVsIjoxOCwiLi91dGlsIjoyN31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuL2xvZGFzaCIpO3ZhciBhZGRMYWJlbD1yZXF1aXJlKCIuL2xhYmVsL2FkZC1sYWJlbCIpO3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO3ZhciBkMz1yZXF1aXJlKCIuL2QzIik7bW9kdWxlLmV4cG9ydHM9Y3JlYXRlRWRnZUxhYmVscztmdW5jdGlvbiBjcmVhdGVFZGdlTGFiZWxzKHNlbGVjdGlvbixnKXt2YXIgc3ZnRWRnZUxhYmVscz1zZWxlY3Rpb24uc2VsZWN0QWxsKCJnLmVkZ2VMYWJlbCIpLmRhdGEoZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3JldHVybiB1dGlsLmVkZ2VUb0lkKGUpfSkuY2xhc3NlZCgidXBkYXRlIix0cnVlKTtzdmdFZGdlTGFiZWxzLmV4aXQoKS5yZW1vdmUoKTtzdmdFZGdlTGFiZWxzLmVudGVyKCkuYXBwZW5kKCJnIikuY2xhc3NlZCgiZWRnZUxhYmVsIix0cnVlKS5zdHlsZSgib3BhY2l0eSIsMCk7c3ZnRWRnZUxhYmVscz1zZWxlY3Rpb24uc2VsZWN0QWxsKCJnLmVkZ2VMYWJlbCIpO3N2Z0VkZ2VMYWJlbHMuZWFjaChmdW5jdGlvbihlKXt2YXIgcm9vdD1kMy5zZWxlY3QodGhpcyk7cm9vdC5zZWxlY3QoIi5sYWJlbCIpLnJlbW92ZSgpO3ZhciBlZGdlPWcuZWRnZShlKTt2YXIgbGFiZWw9YWRkTGFiZWwocm9vdCxnLmVkZ2UoZSksMCwwKS5jbGFzc2VkKCJsYWJlbCIsdHJ1ZSk7dmFyIGJib3g9bGFiZWwubm9kZSgpLmdldEJCb3goKTtpZihlZGdlLmxhYmVsSWQpe2xhYmVsLmF0dHIoImlkIixlZGdlLmxhYmVsSWQpfWlmKCFfLmhhcyhlZGdlLCJ3aWR0aCIpKXtlZGdlLndpZHRoPWJib3gud2lkdGh9aWYoIV8uaGFzKGVkZ2UsImhlaWdodCIpKXtlZGdlLmhlaWdodD1iYm94LmhlaWdodH19KTt2YXIgZXhpdFNlbGVjdGlvbjtpZihzdmdFZGdlTGFiZWxzLmV4aXQpe2V4aXRTZWxlY3Rpb249c3ZnRWRnZUxhYmVscy5leGl0KCl9ZWxzZXtleGl0U2VsZWN0aW9uPXN2Z0VkZ2VMYWJlbHMuc2VsZWN0QWxsKG51bGwpOy8vIGVtcHR5IHNlbGVjdGlvbgp9dXRpbC5hcHBseVRyYW5zaXRpb24oZXhpdFNlbGVjdGlvbixnKS5zdHlsZSgib3BhY2l0eSIsMCkucmVtb3ZlKCk7cmV0dXJuIHN2Z0VkZ2VMYWJlbHN9fSx7Ii4vZDMiOjcsIi4vbGFiZWwvYWRkLWxhYmVsIjoxOCwiLi9sb2Rhc2giOjIxLCIuL3V0aWwiOjI3fV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7dmFyIGludGVyc2VjdE5vZGU9cmVxdWlyZSgiLi9pbnRlcnNlY3QvaW50ZXJzZWN0LW5vZGUiKTt2YXIgdXRpbD1yZXF1aXJlKCIuL3V0aWwiKTt2YXIgZDM9cmVxdWlyZSgiLi9kMyIpO21vZHVsZS5leHBvcnRzPWNyZWF0ZUVkZ2VQYXRocztmdW5jdGlvbiBjcmVhdGVFZGdlUGF0aHMoc2VsZWN0aW9uLGcsYXJyb3dzKXt2YXIgcHJldmlvdXNQYXRocz1zZWxlY3Rpb24uc2VsZWN0QWxsKCJnLmVkZ2VQYXRoIikuZGF0YShnLmVkZ2VzKCksZnVuY3Rpb24oZSl7cmV0dXJuIHV0aWwuZWRnZVRvSWQoZSl9KS5jbGFzc2VkKCJ1cGRhdGUiLHRydWUpO3ZhciBuZXdQYXRocz1lbnRlcihwcmV2aW91c1BhdGhzLGcpO2V4aXQocHJldmlvdXNQYXRocyxnKTt2YXIgc3ZnUGF0aHM9cHJldmlvdXNQYXRocy5tZXJnZSE9PXVuZGVmaW5lZD9wcmV2aW91c1BhdGhzLm1lcmdlKG5ld1BhdGhzKTpwcmV2aW91c1BhdGhzO3V0aWwuYXBwbHlUcmFuc2l0aW9uKHN2Z1BhdGhzLGcpLnN0eWxlKCJvcGFjaXR5IiwxKTsKLy8gU2F2ZSBET00gZWxlbWVudCBpbiB0aGUgcGF0aCBncm91cCwgYW5kIHNldCBJRCBhbmQgY2xhc3MKc3ZnUGF0aHMuZWFjaChmdW5jdGlvbihlKXt2YXIgZG9tRWRnZT1kMy5zZWxlY3QodGhpcyk7dmFyIGVkZ2U9Zy5lZGdlKGUpO2VkZ2UuZWxlbT10aGlzO2lmKGVkZ2UuaWQpe2RvbUVkZ2UuYXR0cigiaWQiLGVkZ2UuaWQpfXV0aWwuYXBwbHlDbGFzcyhkb21FZGdlLGVkZ2VbImNsYXNzIl0sKGRvbUVkZ2UuY2xhc3NlZCgidXBkYXRlIik/InVwZGF0ZSAiOiIiKSsiZWRnZVBhdGgiKX0pO3N2Z1BhdGhzLnNlbGVjdEFsbCgicGF0aC5wYXRoIikuZWFjaChmdW5jdGlvbihlKXt2YXIgZWRnZT1nLmVkZ2UoZSk7ZWRnZS5hcnJvd2hlYWRJZD1fLnVuaXF1ZUlkKCJhcnJvd2hlYWQiKTt2YXIgZG9tRWRnZT1kMy5zZWxlY3QodGhpcykuYXR0cigibWFya2VyLWVuZCIsZnVuY3Rpb24oKXtyZXR1cm4idXJsKCIrbWFrZUZyYWdtZW50UmVmKGxvY2F0aW9uLmhyZWYsZWRnZS5hcnJvd2hlYWRJZCkrIikifSkuc3R5bGUoImZpbGwiLCJub25lIik7dXRpbC5hcHBseVRyYW5zaXRpb24oZG9tRWRnZSxnKS5hdHRyKCJkIixmdW5jdGlvbihlKXtyZXR1cm4gY2FsY1BvaW50cyhnLGUpfSk7dXRpbC5hcHBseVN0eWxlKGRvbUVkZ2UsZWRnZS5zdHlsZSl9KTtzdmdQYXRocy5zZWxlY3RBbGwoImRlZnMgKiIpLnJlbW92ZSgpO3N2Z1BhdGhzLnNlbGVjdEFsbCgiZGVmcyIpLmVhY2goZnVuY3Rpb24oZSl7dmFyIGVkZ2U9Zy5lZGdlKGUpO3ZhciBhcnJvd2hlYWQ9YXJyb3dzW2VkZ2UuYXJyb3doZWFkXTthcnJvd2hlYWQoZDMuc2VsZWN0KHRoaXMpLGVkZ2UuYXJyb3doZWFkSWQsZWRnZSwiYXJyb3doZWFkIil9KTtyZXR1cm4gc3ZnUGF0aHN9ZnVuY3Rpb24gbWFrZUZyYWdtZW50UmVmKHVybCxmcmFnbWVudElkKXt2YXIgYmFzZVVybD11cmwuc3BsaXQoIiMiKVswXTtyZXR1cm4gYmFzZVVybCsiIyIrZnJhZ21lbnRJZH1mdW5jdGlvbiBjYWxjUG9pbnRzKGcsZSl7dmFyIGVkZ2U9Zy5lZGdlKGUpO3ZhciB0YWlsPWcubm9kZShlLnYpO3ZhciBoZWFkPWcubm9kZShlLncpO3ZhciBwb2ludHM9ZWRnZS5wb2ludHMuc2xpY2UoMSxlZGdlLnBvaW50cy5sZW5ndGgtMSk7cG9pbnRzLnVuc2hpZnQoaW50ZXJzZWN0Tm9kZSh0YWlsLHBvaW50c1swXSkpO3BvaW50cy5wdXNoKGludGVyc2VjdE5vZGUoaGVhZCxwb2ludHNbcG9pbnRzLmxlbmd0aC0xXSkpO3JldHVybiBjcmVhdGVMaW5lKGVkZ2UscG9pbnRzKX1mdW5jdGlvbiBjcmVhdGVMaW5lKGVkZ2UscG9pbnRzKXt2YXIgbGluZT0oZDMubGluZXx8ZDMuc3ZnLmxpbmUpKCkueChmdW5jdGlvbihkKXtyZXR1cm4gZC54fSkueShmdW5jdGlvbihkKXtyZXR1cm4gZC55fSk7KGxpbmUuY3VydmV8fGxpbmUuaW50ZXJwb2xhdGUpKGVkZ2UuY3VydmUpO3JldHVybiBsaW5lKHBvaW50cyl9ZnVuY3Rpb24gZ2V0Q29vcmRzKGVsZW0pe3ZhciBiYm94PWVsZW0uZ2V0QkJveCgpO3ZhciBtYXRyaXg9ZWxlbS5vd25lclNWR0VsZW1lbnQuZ2V0U2NyZWVuQ1RNKCkuaW52ZXJzZSgpLm11bHRpcGx5KGVsZW0uZ2V0U2NyZWVuQ1RNKCkpLnRyYW5zbGF0ZShiYm94LndpZHRoLzIsYmJveC5oZWlnaHQvMik7cmV0dXJue3g6bWF0cml4LmUseTptYXRyaXguZn19ZnVuY3Rpb24gZW50ZXIoc3ZnUGF0aHMsZyl7dmFyIHN2Z1BhdGhzRW50ZXI9c3ZnUGF0aHMuZW50ZXIoKS5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsImVkZ2VQYXRoIikuc3R5bGUoIm9wYWNpdHkiLDApO3N2Z1BhdGhzRW50ZXIuYXBwZW5kKCJwYXRoIikuYXR0cigiY2xhc3MiLCJwYXRoIikuYXR0cigiZCIsZnVuY3Rpb24oZSl7dmFyIGVkZ2U9Zy5lZGdlKGUpO3ZhciBzb3VyY2VFbGVtPWcubm9kZShlLnYpLmVsZW07dmFyIHBvaW50cz1fLnJhbmdlKGVkZ2UucG9pbnRzLmxlbmd0aCkubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGdldENvb3Jkcyhzb3VyY2VFbGVtKX0pO3JldHVybiBjcmVhdGVMaW5lKGVkZ2UscG9pbnRzKX0pO3N2Z1BhdGhzRW50ZXIuYXBwZW5kKCJkZWZzIik7cmV0dXJuIHN2Z1BhdGhzRW50ZXJ9ZnVuY3Rpb24gZXhpdChzdmdQYXRocyxnKXt2YXIgc3ZnUGF0aEV4aXQ9c3ZnUGF0aHMuZXhpdCgpO3V0aWwuYXBwbHlUcmFuc2l0aW9uKHN2Z1BhdGhFeGl0LGcpLnN0eWxlKCJvcGFjaXR5IiwwKS5yZW1vdmUoKX19LHsiLi9kMyI6NywiLi9pbnRlcnNlY3QvaW50ZXJzZWN0LW5vZGUiOjE0LCIuL2xvZGFzaCI6MjEsIi4vdXRpbCI6Mjd9XSw2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7dmFyIF89cmVxdWlyZSgiLi9sb2Rhc2giKTt2YXIgYWRkTGFiZWw9cmVxdWlyZSgiLi9sYWJlbC9hZGQtbGFiZWwiKTt2YXIgdXRpbD1yZXF1aXJlKCIuL3V0aWwiKTt2YXIgZDM9cmVxdWlyZSgiLi9kMyIpO21vZHVsZS5leHBvcnRzPWNyZWF0ZU5vZGVzO2Z1bmN0aW9uIGNyZWF0ZU5vZGVzKHNlbGVjdGlvbixnLHNoYXBlcyl7dmFyIHNpbXBsZU5vZGVzPWcubm9kZXMoKS5maWx0ZXIoZnVuY3Rpb24odil7cmV0dXJuIXV0aWwuaXNTdWJncmFwaChnLHYpfSk7dmFyIHN2Z05vZGVzPXNlbGVjdGlvbi5zZWxlY3RBbGwoImcubm9kZSIpLmRhdGEoc2ltcGxlTm9kZXMsZnVuY3Rpb24odil7cmV0dXJuIHZ9KS5jbGFzc2VkKCJ1cGRhdGUiLHRydWUpO3N2Z05vZGVzLmV4aXQoKS5yZW1vdmUoKTtzdmdOb2Rlcy5lbnRlcigpLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwibm9kZSIpLnN0eWxlKCJvcGFjaXR5IiwwKTtzdmdOb2Rlcz1zZWxlY3Rpb24uc2VsZWN0QWxsKCJnLm5vZGUiKTtzdmdOb2Rlcy5lYWNoKGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTt2YXIgdGhpc0dyb3VwPWQzLnNlbGVjdCh0aGlzKTt1dGlsLmFwcGx5Q2xhc3ModGhpc0dyb3VwLG5vZGVbImNsYXNzIl0sKHRoaXNHcm91cC5jbGFzc2VkKCJ1cGRhdGUiKT8idXBkYXRlICI6IiIpKyJub2RlIik7dGhpc0dyb3VwLnNlbGVjdCgiZy5sYWJlbCIpLnJlbW92ZSgpO3ZhciBsYWJlbEdyb3VwPXRoaXNHcm91cC5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsImxhYmVsIik7dmFyIGxhYmVsRG9tPWFkZExhYmVsKGxhYmVsR3JvdXAsbm9kZSk7dmFyIHNoYXBlPXNoYXBlc1tub2RlLnNoYXBlXTt2YXIgYmJveD1fLnBpY2sobGFiZWxEb20ubm9kZSgpLmdldEJCb3goKSwid2lkdGgiLCJoZWlnaHQiKTtub2RlLmVsZW09dGhpcztpZihub2RlLmlkKXt0aGlzR3JvdXAuYXR0cigiaWQiLG5vZGUuaWQpfWlmKG5vZGUubGFiZWxJZCl7bGFiZWxHcm91cC5hdHRyKCJpZCIsbm9kZS5sYWJlbElkKX1pZihfLmhhcyhub2RlLCJ3aWR0aCIpKXtiYm94LndpZHRoPW5vZGUud2lkdGh9aWYoXy5oYXMobm9kZSwiaGVpZ2h0Iikpe2Jib3guaGVpZ2h0PW5vZGUuaGVpZ2h0fWJib3gud2lkdGgrPW5vZGUucGFkZGluZ0xlZnQrbm9kZS5wYWRkaW5nUmlnaHQ7YmJveC5oZWlnaHQrPW5vZGUucGFkZGluZ1RvcCtub2RlLnBhZGRpbmdCb3R0b207bGFiZWxHcm91cC5hdHRyKCJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGUoIisobm9kZS5wYWRkaW5nTGVmdC1ub2RlLnBhZGRpbmdSaWdodCkvMisiLCIrKG5vZGUucGFkZGluZ1RvcC1ub2RlLnBhZGRpbmdCb3R0b20pLzIrIikiKTt2YXIgcm9vdD1kMy5zZWxlY3QodGhpcyk7cm9vdC5zZWxlY3QoIi5sYWJlbC1jb250YWluZXIiKS5yZW1vdmUoKTt2YXIgc2hhcGVTdmc9c2hhcGUocm9vdCxiYm94LG5vZGUpLmNsYXNzZWQoImxhYmVsLWNvbnRhaW5lciIsdHJ1ZSk7dXRpbC5hcHBseVN0eWxlKHNoYXBlU3ZnLG5vZGUuc3R5bGUpO3ZhciBzaGFwZUJCb3g9c2hhcGVTdmcubm9kZSgpLmdldEJCb3goKTtub2RlLndpZHRoPXNoYXBlQkJveC53aWR0aDtub2RlLmhlaWdodD1zaGFwZUJCb3guaGVpZ2h0fSk7dmFyIGV4aXRTZWxlY3Rpb247aWYoc3ZnTm9kZXMuZXhpdCl7ZXhpdFNlbGVjdGlvbj1zdmdOb2Rlcy5leGl0KCl9ZWxzZXtleGl0U2VsZWN0aW9uPXN2Z05vZGVzLnNlbGVjdEFsbChudWxsKTsvLyBlbXB0eSBzZWxlY3Rpb24KfXV0aWwuYXBwbHlUcmFuc2l0aW9uKGV4aXRTZWxlY3Rpb24sZykuc3R5bGUoIm9wYWNpdHkiLDApLnJlbW92ZSgpO3JldHVybiBzdmdOb2Rlc319LHsiLi9kMyI6NywiLi9sYWJlbC9hZGQtbGFiZWwiOjE4LCIuL2xvZGFzaCI6MjEsIi4vdXRpbCI6Mjd9XSw3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gU3R1YiB0byBnZXQgRDMgZWl0aGVyIHZpYSBOUE0gb3IgZnJvbSB0aGUgZ2xvYmFsIG9iamVjdAp2YXIgZDM7aWYoIWQzKXtpZih0eXBlb2YgcmVxdWlyZT09PSJmdW5jdGlvbiIpe3RyeXtkMz1yZXF1aXJlKCJkMyIpfWNhdGNoKGUpewovLyBjb250aW51ZSByZWdhcmRsZXNzIG9mIGVycm9yCn19fWlmKCFkMyl7ZDM9d2luZG93LmQzfW1vZHVsZS5leHBvcnRzPWQzfSx7ZDM6NjB9XSw4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyogZ2xvYmFsIHdpbmRvdyAqLwp2YXIgZGFncmU7aWYodHlwZW9mIHJlcXVpcmU9PT0iZnVuY3Rpb24iKXt0cnl7ZGFncmU9cmVxdWlyZSgiZGFncmUiKX1jYXRjaChlKXsKLy8gY29udGludWUgcmVnYXJkbGVzcyBvZiBlcnJvcgp9fWlmKCFkYWdyZSl7ZGFncmU9d2luZG93LmRhZ3JlfW1vZHVsZS5leHBvcnRzPWRhZ3JlfSx7ZGFncmU6NjF9XSw5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyogZ2xvYmFsIHdpbmRvdyAqLwp2YXIgZ3JhcGhsaWI7aWYodHlwZW9mIHJlcXVpcmU9PT0iZnVuY3Rpb24iKXt0cnl7Z3JhcGhsaWI9cmVxdWlyZSgiZ3JhcGhsaWIiKX1jYXRjaChlKXsKLy8gY29udGludWUgcmVnYXJkbGVzcyBvZiBlcnJvcgp9fWlmKCFncmFwaGxpYil7Z3JhcGhsaWI9d2luZG93LmdyYXBobGlifW1vZHVsZS5leHBvcnRzPWdyYXBobGlifSx7Z3JhcGhsaWI6OTF9XSwxMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9e25vZGU6cmVxdWlyZSgiLi9pbnRlcnNlY3Qtbm9kZSIpLGNpcmNsZTpyZXF1aXJlKCIuL2ludGVyc2VjdC1jaXJjbGUiKSxlbGxpcHNlOnJlcXVpcmUoIi4vaW50ZXJzZWN0LWVsbGlwc2UiKSxwb2x5Z29uOnJlcXVpcmUoIi4vaW50ZXJzZWN0LXBvbHlnb24iKSxyZWN0OnJlcXVpcmUoIi4vaW50ZXJzZWN0LXJlY3QiKX19LHsiLi9pbnRlcnNlY3QtY2lyY2xlIjoxMSwiLi9pbnRlcnNlY3QtZWxsaXBzZSI6MTIsIi4vaW50ZXJzZWN0LW5vZGUiOjE0LCIuL2ludGVyc2VjdC1wb2x5Z29uIjoxNSwiLi9pbnRlcnNlY3QtcmVjdCI6MTZ9XSwxMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGludGVyc2VjdEVsbGlwc2U9cmVxdWlyZSgiLi9pbnRlcnNlY3QtZWxsaXBzZSIpO21vZHVsZS5leHBvcnRzPWludGVyc2VjdENpcmNsZTtmdW5jdGlvbiBpbnRlcnNlY3RDaXJjbGUobm9kZSxyeCxwb2ludCl7cmV0dXJuIGludGVyc2VjdEVsbGlwc2Uobm9kZSxyeCxyeCxwb2ludCl9fSx7Ii4vaW50ZXJzZWN0LWVsbGlwc2UiOjEyfV0sMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWludGVyc2VjdEVsbGlwc2U7ZnVuY3Rpb24gaW50ZXJzZWN0RWxsaXBzZShub2RlLHJ4LHJ5LHBvaW50KXsKLy8gRm9ybXVsYWUgZnJvbTogaHR0cDovL21hdGh3b3JsZC53b2xmcmFtLmNvbS9FbGxpcHNlLUxpbmVJbnRlcnNlY3Rpb24uaHRtbAp2YXIgY3g9bm9kZS54O3ZhciBjeT1ub2RlLnk7dmFyIHB4PWN4LXBvaW50Lng7dmFyIHB5PWN5LXBvaW50Lnk7dmFyIGRldD1NYXRoLnNxcnQocngqcngqcHkqcHkrcnkqcnkqcHgqcHgpO3ZhciBkeD1NYXRoLmFicyhyeCpyeSpweC9kZXQpO2lmKHBvaW50Lng8Y3gpe2R4PS1keH12YXIgZHk9TWF0aC5hYnMocngqcnkqcHkvZGV0KTtpZihwb2ludC55PGN5KXtkeT0tZHl9cmV0dXJue3g6Y3grZHgseTpjeStkeX19fSx7fV0sMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWludGVyc2VjdExpbmU7Ci8qCiAqIFJldHVybnMgdGhlIHBvaW50IGF0IHdoaWNoIHR3byBsaW5lcywgcCBhbmQgcSwgaW50ZXJzZWN0IG9yIHJldHVybnMKICogdW5kZWZpbmVkIGlmIHRoZXkgZG8gbm90IGludGVyc2VjdC4KICovZnVuY3Rpb24gaW50ZXJzZWN0TGluZShwMSxwMixxMSxxMil7Ci8vIEFsZ29yaXRobSBmcm9tIEouIEF2cm8sIChlZC4pIEdyYXBoaWNzIEdlbXMsIE5vIDIsIE1vcmdhbiBLYXVmbWFubiwgMTk5NCwKLy8gcDcgYW5kIHA0NzMuCnZhciBhMSxhMixiMSxiMixjMSxjMjt2YXIgcjEscjIscjMscjQ7dmFyIGRlbm9tLG9mZnNldCxudW07dmFyIHgseTsKLy8gQ29tcHV0ZSBhMSwgYjEsIGMxLCB3aGVyZSBsaW5lIGpvaW5pbmcgcG9pbnRzIDEgYW5kIDIgaXMgRih4LHkpID0gYTEgeCArCi8vIGIxIHkgKyBjMSA9IDAuCmExPXAyLnktcDEueTtiMT1wMS54LXAyLng7YzE9cDIueCpwMS55LXAxLngqcDIueTsKLy8gQ29tcHV0ZSByMyBhbmQgcjQuCnIzPWExKnExLngrYjEqcTEueStjMTtyND1hMSpxMi54K2IxKnEyLnkrYzE7Ci8vIENoZWNrIHNpZ25zIG9mIHIzIGFuZCByNC4gSWYgYm90aCBwb2ludCAzIGFuZCBwb2ludCA0IGxpZSBvbgovLyBzYW1lIHNpZGUgb2YgbGluZSAxLCB0aGUgbGluZSBzZWdtZW50cyBkbyBub3QgaW50ZXJzZWN0LgppZihyMyE9PTAmJnI0IT09MCYmc2FtZVNpZ24ocjMscjQpKXtyZXR1cm59Ci8vIENvbXB1dGUgYTIsIGIyLCBjMiB3aGVyZSBsaW5lIGpvaW5pbmcgcG9pbnRzIDMgYW5kIDQgaXMgRyh4LHkpID0gYTIgeCArIGIyIHkgKyBjMiA9IDAKYTI9cTIueS1xMS55O2IyPXExLngtcTIueDtjMj1xMi54KnExLnktcTEueCpxMi55OwovLyBDb21wdXRlIHIxIGFuZCByMgpyMT1hMipwMS54K2IyKnAxLnkrYzI7cjI9YTIqcDIueCtiMipwMi55K2MyOwovLyBDaGVjayBzaWducyBvZiByMSBhbmQgcjIuIElmIGJvdGggcG9pbnQgMSBhbmQgcG9pbnQgMiBsaWUKLy8gb24gc2FtZSBzaWRlIG9mIHNlY29uZCBsaW5lIHNlZ21lbnQsIHRoZSBsaW5lIHNlZ21lbnRzIGRvCi8vIG5vdCBpbnRlcnNlY3QuCmlmKHIxIT09MCYmcjIhPT0wJiZzYW1lU2lnbihyMSxyMikpe3JldHVybn0KLy8gTGluZSBzZWdtZW50cyBpbnRlcnNlY3Q6IGNvbXB1dGUgaW50ZXJzZWN0aW9uIHBvaW50LgpkZW5vbT1hMSpiMi1hMipiMTtpZihkZW5vbT09PTApe3JldHVybn1vZmZzZXQ9TWF0aC5hYnMoZGVub20vMik7Ci8vIFRoZSBkZW5vbS8yIGlzIHRvIGdldCByb3VuZGluZyBpbnN0ZWFkIG9mIHRydW5jYXRpbmcuIEl0Ci8vIGlzIGFkZGVkIG9yIHN1YnRyYWN0ZWQgdG8gdGhlIG51bWVyYXRvciwgZGVwZW5kaW5nIHVwb24gdGhlCi8vIHNpZ24gb2YgdGhlIG51bWVyYXRvci4KbnVtPWIxKmMyLWIyKmMxO3g9bnVtPDA/KG51bS1vZmZzZXQpL2Rlbm9tOihudW0rb2Zmc2V0KS9kZW5vbTtudW09YTIqYzEtYTEqYzI7eT1udW08MD8obnVtLW9mZnNldCkvZGVub206KG51bStvZmZzZXQpL2Rlbm9tO3JldHVybnt4OngseTp5fX1mdW5jdGlvbiBzYW1lU2lnbihyMSxyMil7cmV0dXJuIHIxKnIyPjB9fSx7fV0sMTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWludGVyc2VjdE5vZGU7ZnVuY3Rpb24gaW50ZXJzZWN0Tm9kZShub2RlLHBvaW50KXtyZXR1cm4gbm9kZS5pbnRlcnNlY3QocG9pbnQpfX0se31dLDE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyogZXNsaW50ICJuby1jb25zb2xlIjogb2ZmICovCnZhciBpbnRlcnNlY3RMaW5lPXJlcXVpcmUoIi4vaW50ZXJzZWN0LWxpbmUiKTttb2R1bGUuZXhwb3J0cz1pbnRlcnNlY3RQb2x5Z29uOwovKgogKiBSZXR1cm5zIHRoZSBwb2ludCAoe3gsIHl9KSBhdCB3aGljaCB0aGUgcG9pbnQgYXJndW1lbnQgaW50ZXJzZWN0cyB3aXRoIHRoZQogKiBub2RlIGFyZ3VtZW50IGFzc3VtaW5nIHRoYXQgaXQgaGFzIHRoZSBzaGFwZSBzcGVjaWZpZWQgYnkgcG9seWdvbi4KICovZnVuY3Rpb24gaW50ZXJzZWN0UG9seWdvbihub2RlLHBvbHlQb2ludHMscG9pbnQpe3ZhciB4MT1ub2RlLng7dmFyIHkxPW5vZGUueTt2YXIgaW50ZXJzZWN0aW9ucz1bXTt2YXIgbWluWD1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7dmFyIG1pblk9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO3BvbHlQb2ludHMuZm9yRWFjaChmdW5jdGlvbihlbnRyeSl7bWluWD1NYXRoLm1pbihtaW5YLGVudHJ5LngpO21pblk9TWF0aC5taW4obWluWSxlbnRyeS55KX0pO3ZhciBsZWZ0PXgxLW5vZGUud2lkdGgvMi1taW5YO3ZhciB0b3A9eTEtbm9kZS5oZWlnaHQvMi1taW5ZO2Zvcih2YXIgaT0wO2k8cG9seVBvaW50cy5sZW5ndGg7aSsrKXt2YXIgcDE9cG9seVBvaW50c1tpXTt2YXIgcDI9cG9seVBvaW50c1tpPHBvbHlQb2ludHMubGVuZ3RoLTE/aSsxOjBdO3ZhciBpbnRlcnNlY3Q9aW50ZXJzZWN0TGluZShub2RlLHBvaW50LHt4OmxlZnQrcDEueCx5OnRvcCtwMS55fSx7eDpsZWZ0K3AyLngseTp0b3ArcDIueX0pO2lmKGludGVyc2VjdCl7aW50ZXJzZWN0aW9ucy5wdXNoKGludGVyc2VjdCl9fWlmKCFpbnRlcnNlY3Rpb25zLmxlbmd0aCl7Y29uc29sZS5sb2coIk5PIElOVEVSU0VDVElPTiBGT1VORCwgUkVUVVJOIE5PREUgQ0VOVEVSIixub2RlKTtyZXR1cm4gbm9kZX1pZihpbnRlcnNlY3Rpb25zLmxlbmd0aD4xKXsKLy8gTW9yZSBpbnRlcnNlY3Rpb25zLCBmaW5kIHRoZSBvbmUgbmVhcmVzdCB0byBlZGdlIGVuZCBwb2ludAppbnRlcnNlY3Rpb25zLnNvcnQoZnVuY3Rpb24ocCxxKXt2YXIgcGR4PXAueC1wb2ludC54O3ZhciBwZHk9cC55LXBvaW50Lnk7dmFyIGRpc3RwPU1hdGguc3FydChwZHgqcGR4K3BkeSpwZHkpO3ZhciBxZHg9cS54LXBvaW50Lng7dmFyIHFkeT1xLnktcG9pbnQueTt2YXIgZGlzdHE9TWF0aC5zcXJ0KHFkeCpxZHgrcWR5KnFkeSk7cmV0dXJuIGRpc3RwPGRpc3RxPy0xOmRpc3RwPT09ZGlzdHE/MDoxfSl9cmV0dXJuIGludGVyc2VjdGlvbnNbMF19fSx7Ii4vaW50ZXJzZWN0LWxpbmUiOjEzfV0sMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWludGVyc2VjdFJlY3Q7ZnVuY3Rpb24gaW50ZXJzZWN0UmVjdChub2RlLHBvaW50KXt2YXIgeD1ub2RlLng7dmFyIHk9bm9kZS55OwovLyBSZWN0YW5nbGUgaW50ZXJzZWN0aW9uIGFsZ29yaXRobSBmcm9tOgovLyBodHRwOi8vbWF0aC5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMTA4MTEzL2ZpbmQtZWRnZS1iZXR3ZWVuLXR3by1ib3hlcwp2YXIgZHg9cG9pbnQueC14O3ZhciBkeT1wb2ludC55LXk7dmFyIHc9bm9kZS53aWR0aC8yO3ZhciBoPW5vZGUuaGVpZ2h0LzI7dmFyIHN4LHN5O2lmKE1hdGguYWJzKGR5KSp3Pk1hdGguYWJzKGR4KSpoKXsKLy8gSW50ZXJzZWN0aW9uIGlzIHRvcCBvciBib3R0b20gb2YgcmVjdC4KaWYoZHk8MCl7aD0taH1zeD1keT09PTA/MDpoKmR4L2R5O3N5PWh9ZWxzZXsKLy8gSW50ZXJzZWN0aW9uIGlzIGxlZnQgb3IgcmlnaHQgb2YgcmVjdC4KaWYoZHg8MCl7dz0td31zeD13O3N5PWR4PT09MD8wOncqZHkvZHh9cmV0dXJue3g6eCtzeCx5Onkrc3l9fX0se31dLDE3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgdXRpbD1yZXF1aXJlKCIuLi91dGlsIik7bW9kdWxlLmV4cG9ydHM9YWRkSHRtbExhYmVsO2Z1bmN0aW9uIGFkZEh0bWxMYWJlbChyb290LG5vZGUpe3ZhciBmbz1yb290LmFwcGVuZCgiZm9yZWlnbk9iamVjdCIpLmF0dHIoIndpZHRoIiwiMTAwMDAwIik7dmFyIGRpdj1mby5hcHBlbmQoInhodG1sOmRpdiIpO2Rpdi5hdHRyKCJ4bWxucyIsImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiKTt2YXIgbGFiZWw9bm9kZS5sYWJlbDtzd2l0Y2godHlwZW9mIGxhYmVsKXtjYXNlImZ1bmN0aW9uIjpkaXYuaW5zZXJ0KGxhYmVsKTticmVhaztjYXNlIm9iamVjdCI6Ci8vIEN1cnJlbnRseSB3ZSBhc3N1bWUgdGhpcyBpcyBhIERPTSBvYmplY3QuCmRpdi5pbnNlcnQoZnVuY3Rpb24oKXtyZXR1cm4gbGFiZWx9KTticmVhaztkZWZhdWx0OmRpdi5odG1sKGxhYmVsKX11dGlsLmFwcGx5U3R5bGUoZGl2LG5vZGUubGFiZWxTdHlsZSk7ZGl2LnN0eWxlKCJkaXNwbGF5IiwiaW5saW5lLWJsb2NrIik7Ci8vIEZpeCBmb3IgZmlyZWZveApkaXYuc3R5bGUoIndoaXRlLXNwYWNlIiwibm93cmFwIik7dmFyIGNsaWVudD1kaXYubm9kZSgpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2ZvLmF0dHIoIndpZHRoIixjbGllbnQud2lkdGgpLmF0dHIoImhlaWdodCIsY2xpZW50LmhlaWdodCk7cmV0dXJuIGZvfX0seyIuLi91dGlsIjoyN31dLDE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYWRkVGV4dExhYmVsPXJlcXVpcmUoIi4vYWRkLXRleHQtbGFiZWwiKTt2YXIgYWRkSHRtbExhYmVsPXJlcXVpcmUoIi4vYWRkLWh0bWwtbGFiZWwiKTt2YXIgYWRkU1ZHTGFiZWw9cmVxdWlyZSgiLi9hZGQtc3ZnLWxhYmVsIik7bW9kdWxlLmV4cG9ydHM9YWRkTGFiZWw7ZnVuY3Rpb24gYWRkTGFiZWwocm9vdCxub2RlLGxvY2F0aW9uKXt2YXIgbGFiZWw9bm9kZS5sYWJlbDt2YXIgbGFiZWxTdmc9cm9vdC5hcHBlbmQoImciKTsKLy8gQWxsb3cgdGhlIGxhYmVsIHRvIGJlIGEgc3RyaW5nLCBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIERPTSBlbGVtZW50LCBvcgovLyBhIERPTSBlbGVtZW50IGl0c2VsZi4KaWYobm9kZS5sYWJlbFR5cGU9PT0ic3ZnIil7YWRkU1ZHTGFiZWwobGFiZWxTdmcsbm9kZSl9ZWxzZSBpZih0eXBlb2YgbGFiZWwhPT0ic3RyaW5nInx8bm9kZS5sYWJlbFR5cGU9PT0iaHRtbCIpe2FkZEh0bWxMYWJlbChsYWJlbFN2Zyxub2RlKX1lbHNle2FkZFRleHRMYWJlbChsYWJlbFN2Zyxub2RlKX12YXIgbGFiZWxCQm94PWxhYmVsU3ZnLm5vZGUoKS5nZXRCQm94KCk7dmFyIHk7c3dpdGNoKGxvY2F0aW9uKXtjYXNlInRvcCI6eT0tbm9kZS5oZWlnaHQvMjticmVhaztjYXNlImJvdHRvbSI6eT1ub2RlLmhlaWdodC8yLWxhYmVsQkJveC5oZWlnaHQ7YnJlYWs7ZGVmYXVsdDp5PS1sYWJlbEJCb3guaGVpZ2h0LzJ9bGFiZWxTdmcuYXR0cigidHJhbnNmb3JtIiwidHJhbnNsYXRlKCIrLWxhYmVsQkJveC53aWR0aC8yKyIsIit5KyIpIik7cmV0dXJuIGxhYmVsU3ZnfX0seyIuL2FkZC1odG1sLWxhYmVsIjoxNywiLi9hZGQtc3ZnLWxhYmVsIjoxOSwiLi9hZGQtdGV4dC1sYWJlbCI6MjB9XSwxOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHV0aWw9cmVxdWlyZSgiLi4vdXRpbCIpO21vZHVsZS5leHBvcnRzPWFkZFNWR0xhYmVsO2Z1bmN0aW9uIGFkZFNWR0xhYmVsKHJvb3Qsbm9kZSl7dmFyIGRvbU5vZGU9cm9vdDtkb21Ob2RlLm5vZGUoKS5hcHBlbmRDaGlsZChub2RlLmxhYmVsKTt1dGlsLmFwcGx5U3R5bGUoZG9tTm9kZSxub2RlLmxhYmVsU3R5bGUpO3JldHVybiBkb21Ob2RlfX0seyIuLi91dGlsIjoyN31dLDIwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgdXRpbD1yZXF1aXJlKCIuLi91dGlsIik7bW9kdWxlLmV4cG9ydHM9YWRkVGV4dExhYmVsOwovKgogKiBBdHRhY2hlcyBhIHRleHQgbGFiZWwgdG8gdGhlIHNwZWNpZmllZCByb290LiBIYW5kbGVzIGVzY2FwZSBzZXF1ZW5jZXMuCiAqL2Z1bmN0aW9uIGFkZFRleHRMYWJlbChyb290LG5vZGUpe3ZhciBkb21Ob2RlPXJvb3QuYXBwZW5kKCJ0ZXh0Iik7dmFyIGxpbmVzPXByb2Nlc3NFc2NhcGVTZXF1ZW5jZXMobm9kZS5sYWJlbCkuc3BsaXQoIlxuIik7Zm9yKHZhciBpPTA7aTxsaW5lcy5sZW5ndGg7aSsrKXtkb21Ob2RlLmFwcGVuZCgidHNwYW4iKS5hdHRyKCJ4bWw6c3BhY2UiLCJwcmVzZXJ2ZSIpLmF0dHIoImR5IiwiMWVtIikuYXR0cigieCIsIjEiKS50ZXh0KGxpbmVzW2ldKX11dGlsLmFwcGx5U3R5bGUoZG9tTm9kZSxub2RlLmxhYmVsU3R5bGUpO3JldHVybiBkb21Ob2RlfWZ1bmN0aW9uIHByb2Nlc3NFc2NhcGVTZXF1ZW5jZXModGV4dCl7dmFyIG5ld1RleHQ9IiI7dmFyIGVzY2FwZWQ9ZmFsc2U7dmFyIGNoO2Zvcih2YXIgaT0wO2k8dGV4dC5sZW5ndGg7KytpKXtjaD10ZXh0W2ldO2lmKGVzY2FwZWQpe3N3aXRjaChjaCl7Y2FzZSJuIjpuZXdUZXh0Kz0iXG4iO2JyZWFrO2RlZmF1bHQ6bmV3VGV4dCs9Y2h9ZXNjYXBlZD1mYWxzZX1lbHNlIGlmKGNoPT09IlxcIil7ZXNjYXBlZD10cnVlfWVsc2V7bmV3VGV4dCs9Y2h9fXJldHVybiBuZXdUZXh0fX0seyIuLi91dGlsIjoyN31dLDIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyogZ2xvYmFsIHdpbmRvdyAqLwp2YXIgbG9kYXNoO2lmKHR5cGVvZiByZXF1aXJlPT09ImZ1bmN0aW9uIil7dHJ5e2xvZGFzaD17ZGVmYXVsdHM6cmVxdWlyZSgibG9kYXNoL2RlZmF1bHRzIiksZWFjaDpyZXF1aXJlKCJsb2Rhc2gvZWFjaCIpLGlzRnVuY3Rpb246cmVxdWlyZSgibG9kYXNoL2lzRnVuY3Rpb24iKSxpc1BsYWluT2JqZWN0OnJlcXVpcmUoImxvZGFzaC9pc1BsYWluT2JqZWN0IikscGljazpyZXF1aXJlKCJsb2Rhc2gvcGljayIpLGhhczpyZXF1aXJlKCJsb2Rhc2gvaGFzIikscmFuZ2U6cmVxdWlyZSgibG9kYXNoL3JhbmdlIiksdW5pcXVlSWQ6cmVxdWlyZSgibG9kYXNoL3VuaXF1ZUlkIil9fWNhdGNoKGUpewovLyBjb250aW51ZSByZWdhcmRsZXNzIG9mIGVycm9yCn19aWYoIWxvZGFzaCl7bG9kYXNoPXdpbmRvdy5ffW1vZHVsZS5leHBvcnRzPWxvZGFzaH0seyJsb2Rhc2gvZGVmYXVsdHMiOjI4OSwibG9kYXNoL2VhY2giOjI5MCwibG9kYXNoL2hhcyI6Mjk5LCJsb2Rhc2gvaXNGdW5jdGlvbiI6MzA4LCJsb2Rhc2gvaXNQbGFpbk9iamVjdCI6MzEzLCJsb2Rhc2gvcGljayI6MzMxLCJsb2Rhc2gvcmFuZ2UiOjMzMywibG9kYXNoL3VuaXF1ZUlkIjozNDZ9XSwyMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO3ZhciBkMz1yZXF1aXJlKCIuL2QzIik7bW9kdWxlLmV4cG9ydHM9cG9zaXRpb25DbHVzdGVycztmdW5jdGlvbiBwb3NpdGlvbkNsdXN0ZXJzKHNlbGVjdGlvbixnKXt2YXIgY3JlYXRlZD1zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIWQzLnNlbGVjdCh0aGlzKS5jbGFzc2VkKCJ1cGRhdGUiKX0pO2Z1bmN0aW9uIHRyYW5zbGF0ZSh2KXt2YXIgbm9kZT1nLm5vZGUodik7cmV0dXJuInRyYW5zbGF0ZSgiK25vZGUueCsiLCIrbm9kZS55KyIpIn1jcmVhdGVkLmF0dHIoInRyYW5zZm9ybSIsdHJhbnNsYXRlKTt1dGlsLmFwcGx5VHJhbnNpdGlvbihzZWxlY3Rpb24sZykuc3R5bGUoIm9wYWNpdHkiLDEpLmF0dHIoInRyYW5zZm9ybSIsdHJhbnNsYXRlKTt1dGlsLmFwcGx5VHJhbnNpdGlvbihjcmVhdGVkLnNlbGVjdEFsbCgicmVjdCIpLGcpLmF0dHIoIndpZHRoIixmdW5jdGlvbih2KXtyZXR1cm4gZy5ub2RlKHYpLndpZHRofSkuYXR0cigiaGVpZ2h0IixmdW5jdGlvbih2KXtyZXR1cm4gZy5ub2RlKHYpLmhlaWdodH0pLmF0dHIoIngiLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTtyZXR1cm4tbm9kZS53aWR0aC8yfSkuYXR0cigieSIsZnVuY3Rpb24odil7dmFyIG5vZGU9Zy5ub2RlKHYpO3JldHVybi1ub2RlLmhlaWdodC8yfSl9fSx7Ii4vZDMiOjcsIi4vdXRpbCI6Mjd9XSwyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO3ZhciBkMz1yZXF1aXJlKCIuL2QzIik7dmFyIF89cmVxdWlyZSgiLi9sb2Rhc2giKTttb2R1bGUuZXhwb3J0cz1wb3NpdGlvbkVkZ2VMYWJlbHM7ZnVuY3Rpb24gcG9zaXRpb25FZGdlTGFiZWxzKHNlbGVjdGlvbixnKXt2YXIgY3JlYXRlZD1zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIWQzLnNlbGVjdCh0aGlzKS5jbGFzc2VkKCJ1cGRhdGUiKX0pO2Z1bmN0aW9uIHRyYW5zbGF0ZShlKXt2YXIgZWRnZT1nLmVkZ2UoZSk7cmV0dXJuIF8uaGFzKGVkZ2UsIngiKT8idHJhbnNsYXRlKCIrZWRnZS54KyIsIitlZGdlLnkrIikiOiIifWNyZWF0ZWQuYXR0cigidHJhbnNmb3JtIix0cmFuc2xhdGUpO3V0aWwuYXBwbHlUcmFuc2l0aW9uKHNlbGVjdGlvbixnKS5zdHlsZSgib3BhY2l0eSIsMSkuYXR0cigidHJhbnNmb3JtIix0cmFuc2xhdGUpfX0seyIuL2QzIjo3LCIuL2xvZGFzaCI6MjEsIi4vdXRpbCI6Mjd9XSwyNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO3ZhciBkMz1yZXF1aXJlKCIuL2QzIik7bW9kdWxlLmV4cG9ydHM9cG9zaXRpb25Ob2RlcztmdW5jdGlvbiBwb3NpdGlvbk5vZGVzKHNlbGVjdGlvbixnKXt2YXIgY3JlYXRlZD1zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIWQzLnNlbGVjdCh0aGlzKS5jbGFzc2VkKCJ1cGRhdGUiKX0pO2Z1bmN0aW9uIHRyYW5zbGF0ZSh2KXt2YXIgbm9kZT1nLm5vZGUodik7cmV0dXJuInRyYW5zbGF0ZSgiK25vZGUueCsiLCIrbm9kZS55KyIpIn1jcmVhdGVkLmF0dHIoInRyYW5zZm9ybSIsdHJhbnNsYXRlKTt1dGlsLmFwcGx5VHJhbnNpdGlvbihzZWxlY3Rpb24sZykuc3R5bGUoIm9wYWNpdHkiLDEpLmF0dHIoInRyYW5zZm9ybSIsdHJhbnNsYXRlKX19LHsiLi9kMyI6NywiLi91dGlsIjoyN31dLDI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuL2xvZGFzaCIpO3ZhciBkMz1yZXF1aXJlKCIuL2QzIik7dmFyIGxheW91dD1yZXF1aXJlKCIuL2RhZ3JlIikubGF5b3V0O21vZHVsZS5leHBvcnRzPXJlbmRlcjsKLy8gVGhpcyBkZXNpZ24gaXMgYmFzZWQgb24gaHR0cDovL2Jvc3Qub2Nrcy5vcmcvbWlrZS9jaGFydC8uCmZ1bmN0aW9uIHJlbmRlcigpe3ZhciBjcmVhdGVOb2Rlcz1yZXF1aXJlKCIuL2NyZWF0ZS1ub2RlcyIpO3ZhciBjcmVhdGVDbHVzdGVycz1yZXF1aXJlKCIuL2NyZWF0ZS1jbHVzdGVycyIpO3ZhciBjcmVhdGVFZGdlTGFiZWxzPXJlcXVpcmUoIi4vY3JlYXRlLWVkZ2UtbGFiZWxzIik7dmFyIGNyZWF0ZUVkZ2VQYXRocz1yZXF1aXJlKCIuL2NyZWF0ZS1lZGdlLXBhdGhzIik7dmFyIHBvc2l0aW9uTm9kZXM9cmVxdWlyZSgiLi9wb3NpdGlvbi1ub2RlcyIpO3ZhciBwb3NpdGlvbkVkZ2VMYWJlbHM9cmVxdWlyZSgiLi9wb3NpdGlvbi1lZGdlLWxhYmVscyIpO3ZhciBwb3NpdGlvbkNsdXN0ZXJzPXJlcXVpcmUoIi4vcG9zaXRpb24tY2x1c3RlcnMiKTt2YXIgc2hhcGVzPXJlcXVpcmUoIi4vc2hhcGVzIik7dmFyIGFycm93cz1yZXF1aXJlKCIuL2Fycm93cyIpO3ZhciBmbj1mdW5jdGlvbihzdmcsZyl7cHJlUHJvY2Vzc0dyYXBoKGcpO3ZhciBvdXRwdXRHcm91cD1jcmVhdGVPclNlbGVjdEdyb3VwKHN2Zywib3V0cHV0Iik7dmFyIGNsdXN0ZXJzR3JvdXA9Y3JlYXRlT3JTZWxlY3RHcm91cChvdXRwdXRHcm91cCwiY2x1c3RlcnMiKTt2YXIgZWRnZVBhdGhzR3JvdXA9Y3JlYXRlT3JTZWxlY3RHcm91cChvdXRwdXRHcm91cCwiZWRnZVBhdGhzIik7dmFyIGVkZ2VMYWJlbHM9Y3JlYXRlRWRnZUxhYmVscyhjcmVhdGVPclNlbGVjdEdyb3VwKG91dHB1dEdyb3VwLCJlZGdlTGFiZWxzIiksZyk7dmFyIG5vZGVzPWNyZWF0ZU5vZGVzKGNyZWF0ZU9yU2VsZWN0R3JvdXAob3V0cHV0R3JvdXAsIm5vZGVzIiksZyxzaGFwZXMpO2xheW91dChnKTtwb3NpdGlvbk5vZGVzKG5vZGVzLGcpO3Bvc2l0aW9uRWRnZUxhYmVscyhlZGdlTGFiZWxzLGcpO2NyZWF0ZUVkZ2VQYXRocyhlZGdlUGF0aHNHcm91cCxnLGFycm93cyk7dmFyIGNsdXN0ZXJzPWNyZWF0ZUNsdXN0ZXJzKGNsdXN0ZXJzR3JvdXAsZyk7cG9zaXRpb25DbHVzdGVycyhjbHVzdGVycyxnKTtwb3N0UHJvY2Vzc0dyYXBoKGcpfTtmbi5jcmVhdGVOb2Rlcz1mdW5jdGlvbih2YWx1ZSl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGNyZWF0ZU5vZGVzO2NyZWF0ZU5vZGVzPXZhbHVlO3JldHVybiBmbn07Zm4uY3JlYXRlQ2x1c3RlcnM9ZnVuY3Rpb24odmFsdWUpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBjcmVhdGVDbHVzdGVycztjcmVhdGVDbHVzdGVycz12YWx1ZTtyZXR1cm4gZm59O2ZuLmNyZWF0ZUVkZ2VMYWJlbHM9ZnVuY3Rpb24odmFsdWUpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBjcmVhdGVFZGdlTGFiZWxzO2NyZWF0ZUVkZ2VMYWJlbHM9dmFsdWU7cmV0dXJuIGZufTtmbi5jcmVhdGVFZGdlUGF0aHM9ZnVuY3Rpb24odmFsdWUpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBjcmVhdGVFZGdlUGF0aHM7Y3JlYXRlRWRnZVBhdGhzPXZhbHVlO3JldHVybiBmbn07Zm4uc2hhcGVzPWZ1bmN0aW9uKHZhbHVlKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gc2hhcGVzO3NoYXBlcz12YWx1ZTtyZXR1cm4gZm59O2ZuLmFycm93cz1mdW5jdGlvbih2YWx1ZSl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGFycm93czthcnJvd3M9dmFsdWU7cmV0dXJuIGZufTtyZXR1cm4gZm59dmFyIE5PREVfREVGQVVMVF9BVFRSUz17cGFkZGluZ0xlZnQ6MTAscGFkZGluZ1JpZ2h0OjEwLHBhZGRpbmdUb3A6MTAscGFkZGluZ0JvdHRvbToxMCxyeDowLHJ5OjAsc2hhcGU6InJlY3QifTt2YXIgRURHRV9ERUZBVUxUX0FUVFJTPXthcnJvd2hlYWQ6Im5vcm1hbCIsY3VydmU6ZDMuY3VydmVMaW5lYXJ9O2Z1bmN0aW9uIHByZVByb2Nlc3NHcmFwaChnKXtnLm5vZGVzKCkuZm9yRWFjaChmdW5jdGlvbih2KXt2YXIgbm9kZT1nLm5vZGUodik7aWYoIV8uaGFzKG5vZGUsImxhYmVsIikmJiFnLmNoaWxkcmVuKHYpLmxlbmd0aCl7bm9kZS5sYWJlbD12fWlmKF8uaGFzKG5vZGUsInBhZGRpbmdYIikpe18uZGVmYXVsdHMobm9kZSx7cGFkZGluZ0xlZnQ6bm9kZS5wYWRkaW5nWCxwYWRkaW5nUmlnaHQ6bm9kZS5wYWRkaW5nWH0pfWlmKF8uaGFzKG5vZGUsInBhZGRpbmdZIikpe18uZGVmYXVsdHMobm9kZSx7cGFkZGluZ1RvcDpub2RlLnBhZGRpbmdZLHBhZGRpbmdCb3R0b206bm9kZS5wYWRkaW5nWX0pfWlmKF8uaGFzKG5vZGUsInBhZGRpbmciKSl7Xy5kZWZhdWx0cyhub2RlLHtwYWRkaW5nTGVmdDpub2RlLnBhZGRpbmcscGFkZGluZ1JpZ2h0Om5vZGUucGFkZGluZyxwYWRkaW5nVG9wOm5vZGUucGFkZGluZyxwYWRkaW5nQm90dG9tOm5vZGUucGFkZGluZ30pfV8uZGVmYXVsdHMobm9kZSxOT0RFX0RFRkFVTFRfQVRUUlMpO18uZWFjaChbInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iXSxmdW5jdGlvbihrKXtub2RlW2tdPU51bWJlcihub2RlW2tdKX0pOwovLyBTYXZlIGRpbWVuc2lvbnMgZm9yIHJlc3RvcmUgZHVyaW5nIHBvc3QtcHJvY2Vzc2luZwppZihfLmhhcyhub2RlLCJ3aWR0aCIpKXtub2RlLl9wcmV2V2lkdGg9bm9kZS53aWR0aH1pZihfLmhhcyhub2RlLCJoZWlnaHQiKSl7bm9kZS5fcHJldkhlaWdodD1ub2RlLmhlaWdodH19KTtnLmVkZ2VzKCkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgZWRnZT1nLmVkZ2UoZSk7aWYoIV8uaGFzKGVkZ2UsImxhYmVsIikpe2VkZ2UubGFiZWw9IiJ9Xy5kZWZhdWx0cyhlZGdlLEVER0VfREVGQVVMVF9BVFRSUyl9KX1mdW5jdGlvbiBwb3N0UHJvY2Vzc0dyYXBoKGcpe18uZWFjaChnLm5vZGVzKCksZnVuY3Rpb24odil7dmFyIG5vZGU9Zy5ub2RlKHYpOwovLyBSZXN0b3JlIG9yaWdpbmFsIGRpbWVuc2lvbnMKaWYoXy5oYXMobm9kZSwiX3ByZXZXaWR0aCIpKXtub2RlLndpZHRoPW5vZGUuX3ByZXZXaWR0aH1lbHNle2RlbGV0ZSBub2RlLndpZHRofWlmKF8uaGFzKG5vZGUsIl9wcmV2SGVpZ2h0Iikpe25vZGUuaGVpZ2h0PW5vZGUuX3ByZXZIZWlnaHR9ZWxzZXtkZWxldGUgbm9kZS5oZWlnaHR9ZGVsZXRlIG5vZGUuX3ByZXZXaWR0aDtkZWxldGUgbm9kZS5fcHJldkhlaWdodH0pfWZ1bmN0aW9uIGNyZWF0ZU9yU2VsZWN0R3JvdXAocm9vdCxuYW1lKXt2YXIgc2VsZWN0aW9uPXJvb3Quc2VsZWN0KCJnLiIrbmFtZSk7aWYoc2VsZWN0aW9uLmVtcHR5KCkpe3NlbGVjdGlvbj1yb290LmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIixuYW1lKX1yZXR1cm4gc2VsZWN0aW9ufX0seyIuL2Fycm93cyI6MiwiLi9jcmVhdGUtY2x1c3RlcnMiOjMsIi4vY3JlYXRlLWVkZ2UtbGFiZWxzIjo0LCIuL2NyZWF0ZS1lZGdlLXBhdGhzIjo1LCIuL2NyZWF0ZS1ub2RlcyI6NiwiLi9kMyI6NywiLi9kYWdyZSI6OCwiLi9sb2Rhc2giOjIxLCIuL3Bvc2l0aW9uLWNsdXN0ZXJzIjoyMiwiLi9wb3NpdGlvbi1lZGdlLWxhYmVscyI6MjMsIi4vcG9zaXRpb24tbm9kZXMiOjI0LCIuL3NoYXBlcyI6MjZ9XSwyNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBpbnRlcnNlY3RSZWN0PXJlcXVpcmUoIi4vaW50ZXJzZWN0L2ludGVyc2VjdC1yZWN0Iik7dmFyIGludGVyc2VjdEVsbGlwc2U9cmVxdWlyZSgiLi9pbnRlcnNlY3QvaW50ZXJzZWN0LWVsbGlwc2UiKTt2YXIgaW50ZXJzZWN0Q2lyY2xlPXJlcXVpcmUoIi4vaW50ZXJzZWN0L2ludGVyc2VjdC1jaXJjbGUiKTt2YXIgaW50ZXJzZWN0UG9seWdvbj1yZXF1aXJlKCIuL2ludGVyc2VjdC9pbnRlcnNlY3QtcG9seWdvbiIpO21vZHVsZS5leHBvcnRzPXtyZWN0OnJlY3QsZWxsaXBzZTplbGxpcHNlLGNpcmNsZTpjaXJjbGUsZGlhbW9uZDpkaWFtb25kfTtmdW5jdGlvbiByZWN0KHBhcmVudCxiYm94LG5vZGUpe3ZhciBzaGFwZVN2Zz1wYXJlbnQuaW5zZXJ0KCJyZWN0IiwiOmZpcnN0LWNoaWxkIikuYXR0cigicngiLG5vZGUucngpLmF0dHIoInJ5Iixub2RlLnJ5KS5hdHRyKCJ4IiwtYmJveC53aWR0aC8yKS5hdHRyKCJ5IiwtYmJveC5oZWlnaHQvMikuYXR0cigid2lkdGgiLGJib3gud2lkdGgpLmF0dHIoImhlaWdodCIsYmJveC5oZWlnaHQpO25vZGUuaW50ZXJzZWN0PWZ1bmN0aW9uKHBvaW50KXtyZXR1cm4gaW50ZXJzZWN0UmVjdChub2RlLHBvaW50KX07cmV0dXJuIHNoYXBlU3ZnfWZ1bmN0aW9uIGVsbGlwc2UocGFyZW50LGJib3gsbm9kZSl7dmFyIHJ4PWJib3gud2lkdGgvMjt2YXIgcnk9YmJveC5oZWlnaHQvMjt2YXIgc2hhcGVTdmc9cGFyZW50Lmluc2VydCgiZWxsaXBzZSIsIjpmaXJzdC1jaGlsZCIpLmF0dHIoIngiLC1iYm94LndpZHRoLzIpLmF0dHIoInkiLC1iYm94LmhlaWdodC8yKS5hdHRyKCJyeCIscngpLmF0dHIoInJ5IixyeSk7bm9kZS5pbnRlcnNlY3Q9ZnVuY3Rpb24ocG9pbnQpe3JldHVybiBpbnRlcnNlY3RFbGxpcHNlKG5vZGUscngscnkscG9pbnQpfTtyZXR1cm4gc2hhcGVTdmd9ZnVuY3Rpb24gY2lyY2xlKHBhcmVudCxiYm94LG5vZGUpe3ZhciByPU1hdGgubWF4KGJib3gud2lkdGgsYmJveC5oZWlnaHQpLzI7dmFyIHNoYXBlU3ZnPXBhcmVudC5pbnNlcnQoImNpcmNsZSIsIjpmaXJzdC1jaGlsZCIpLmF0dHIoIngiLC1iYm94LndpZHRoLzIpLmF0dHIoInkiLC1iYm94LmhlaWdodC8yKS5hdHRyKCJyIixyKTtub2RlLmludGVyc2VjdD1mdW5jdGlvbihwb2ludCl7cmV0dXJuIGludGVyc2VjdENpcmNsZShub2RlLHIscG9pbnQpfTtyZXR1cm4gc2hhcGVTdmd9Ci8vIENpcmN1bXNjcmliZSBhbiBlbGxpcHNlIGZvciB0aGUgYm91bmRpbmcgYm94IHdpdGggYSBkaWFtb25kIHNoYXBlLiBJIGRlcml2ZWQKLy8gdGhlIGZ1bmN0aW9uIHRvIGNhbGN1bGF0ZSB0aGUgZGlhbW9uZCBzaGFwZSBmcm9tOgovLyBodHRwOi8vbWF0aGZvcnVtLm9yZy9rYi9tZXNzYWdlLmpzcGE/bWVzc2FnZUlEPTM3NTAyMzYKZnVuY3Rpb24gZGlhbW9uZChwYXJlbnQsYmJveCxub2RlKXt2YXIgdz1iYm94LndpZHRoKk1hdGguU1FSVDIvMjt2YXIgaD1iYm94LmhlaWdodCpNYXRoLlNRUlQyLzI7dmFyIHBvaW50cz1be3g6MCx5Oi1ofSx7eDotdyx5OjB9LHt4OjAseTpofSx7eDp3LHk6MH1dO3ZhciBzaGFwZVN2Zz1wYXJlbnQuaW5zZXJ0KCJwb2x5Z29uIiwiOmZpcnN0LWNoaWxkIikuYXR0cigicG9pbnRzIixwb2ludHMubWFwKGZ1bmN0aW9uKHApe3JldHVybiBwLngrIiwiK3AueX0pLmpvaW4oIiAiKSk7bm9kZS5pbnRlcnNlY3Q9ZnVuY3Rpb24ocCl7cmV0dXJuIGludGVyc2VjdFBvbHlnb24obm9kZSxwb2ludHMscCl9O3JldHVybiBzaGFwZVN2Z319LHsiLi9pbnRlcnNlY3QvaW50ZXJzZWN0LWNpcmNsZSI6MTEsIi4vaW50ZXJzZWN0L2ludGVyc2VjdC1lbGxpcHNlIjoxMiwiLi9pbnRlcnNlY3QvaW50ZXJzZWN0LXBvbHlnb24iOjE1LCIuL2ludGVyc2VjdC9pbnRlcnNlY3QtcmVjdCI6MTZ9XSwyNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi9sb2Rhc2giKTsKLy8gUHVibGljIHV0aWxpdHkgZnVuY3Rpb25zCm1vZHVsZS5leHBvcnRzPXtpc1N1YmdyYXBoOmlzU3ViZ3JhcGgsZWRnZVRvSWQ6ZWRnZVRvSWQsYXBwbHlTdHlsZTphcHBseVN0eWxlLGFwcGx5Q2xhc3M6YXBwbHlDbGFzcyxhcHBseVRyYW5zaXRpb246YXBwbHlUcmFuc2l0aW9ufTsKLyoKICogUmV0dXJucyB0cnVlIGlmIHRoZSBzcGVjaWZpZWQgbm9kZSBpbiB0aGUgZ3JhcGggaXMgYSBzdWJncmFwaCBub2RlLiBBCiAqIHN1YmdyYXBoIG5vZGUgaXMgb25lIHRoYXQgY29udGFpbnMgb3RoZXIgbm9kZXMuCiAqL2Z1bmN0aW9uIGlzU3ViZ3JhcGgoZyx2KXtyZXR1cm4hIWcuY2hpbGRyZW4odikubGVuZ3RofWZ1bmN0aW9uIGVkZ2VUb0lkKGUpe3JldHVybiBlc2NhcGVJZChlLnYpKyI6Iitlc2NhcGVJZChlLncpKyI6Iitlc2NhcGVJZChlLm5hbWUpfXZhciBJRF9ERUxJTT0vOi9nO2Z1bmN0aW9uIGVzY2FwZUlkKHN0cil7cmV0dXJuIHN0cj9TdHJpbmcoc3RyKS5yZXBsYWNlKElEX0RFTElNLCJcXDoiKToiIn1mdW5jdGlvbiBhcHBseVN0eWxlKGRvbSxzdHlsZUZuKXtpZihzdHlsZUZuKXtkb20uYXR0cigic3R5bGUiLHN0eWxlRm4pfX1mdW5jdGlvbiBhcHBseUNsYXNzKGRvbSxjbGFzc0ZuLG90aGVyQ2xhc3Nlcyl7aWYoY2xhc3NGbil7ZG9tLmF0dHIoImNsYXNzIixjbGFzc0ZuKS5hdHRyKCJjbGFzcyIsb3RoZXJDbGFzc2VzKyIgIitkb20uYXR0cigiY2xhc3MiKSl9fWZ1bmN0aW9uIGFwcGx5VHJhbnNpdGlvbihzZWxlY3Rpb24sZyl7dmFyIGdyYXBoPWcuZ3JhcGgoKTtpZihfLmlzUGxhaW5PYmplY3QoZ3JhcGgpKXt2YXIgdHJhbnNpdGlvbj1ncmFwaC50cmFuc2l0aW9uO2lmKF8uaXNGdW5jdGlvbih0cmFuc2l0aW9uKSl7cmV0dXJuIHRyYW5zaXRpb24oc2VsZWN0aW9uKX19cmV0dXJuIHNlbGVjdGlvbn19LHsiLi9sb2Rhc2giOjIxfV0sMjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPSIwLjYuNCJ9LHt9XSwyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtYXJyYXkvIHYxLjIuNCBDb3B5cmlnaHQgMjAxOCBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZmFjdG9yeSk6ZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBhc2NlbmRpbmcoYSxiKXtyZXR1cm4gYTxiPy0xOmE+Yj8xOmE+PWI/MDpOYU59ZnVuY3Rpb24gYmlzZWN0b3IoY29tcGFyZSl7aWYoY29tcGFyZS5sZW5ndGg9PT0xKWNvbXBhcmU9YXNjZW5kaW5nQ29tcGFyYXRvcihjb21wYXJlKTtyZXR1cm57bGVmdDpmdW5jdGlvbihhLHgsbG8saGkpe2lmKGxvPT1udWxsKWxvPTA7aWYoaGk9PW51bGwpaGk9YS5sZW5ndGg7d2hpbGUobG88aGkpe3ZhciBtaWQ9bG8raGk+Pj4xO2lmKGNvbXBhcmUoYVttaWRdLHgpPDApbG89bWlkKzE7ZWxzZSBoaT1taWR9cmV0dXJuIGxvfSxyaWdodDpmdW5jdGlvbihhLHgsbG8saGkpe2lmKGxvPT1udWxsKWxvPTA7aWYoaGk9PW51bGwpaGk9YS5sZW5ndGg7d2hpbGUobG88aGkpe3ZhciBtaWQ9bG8raGk+Pj4xO2lmKGNvbXBhcmUoYVttaWRdLHgpPjApaGk9bWlkO2Vsc2UgbG89bWlkKzF9cmV0dXJuIGxvfX19ZnVuY3Rpb24gYXNjZW5kaW5nQ29tcGFyYXRvcihmKXtyZXR1cm4gZnVuY3Rpb24oZCx4KXtyZXR1cm4gYXNjZW5kaW5nKGYoZCkseCl9fXZhciBhc2NlbmRpbmdCaXNlY3Q9YmlzZWN0b3IoYXNjZW5kaW5nKTt2YXIgYmlzZWN0UmlnaHQ9YXNjZW5kaW5nQmlzZWN0LnJpZ2h0O3ZhciBiaXNlY3RMZWZ0PWFzY2VuZGluZ0Jpc2VjdC5sZWZ0O2Z1bmN0aW9uIHBhaXJzKGFycmF5LGYpe2lmKGY9PW51bGwpZj1wYWlyO3ZhciBpPTAsbj1hcnJheS5sZW5ndGgtMSxwPWFycmF5WzBdLHBhaXJzPW5ldyBBcnJheShuPDA/MDpuKTt3aGlsZShpPG4pcGFpcnNbaV09ZihwLHA9YXJyYXlbKytpXSk7cmV0dXJuIHBhaXJzfWZ1bmN0aW9uIHBhaXIoYSxiKXtyZXR1cm5bYSxiXX1mdW5jdGlvbiBjcm9zcyh2YWx1ZXMwLHZhbHVlczEscmVkdWNlKXt2YXIgbjA9dmFsdWVzMC5sZW5ndGgsbjE9dmFsdWVzMS5sZW5ndGgsdmFsdWVzPW5ldyBBcnJheShuMCpuMSksaTAsaTEsaSx2YWx1ZTA7aWYocmVkdWNlPT1udWxsKXJlZHVjZT1wYWlyO2ZvcihpMD1pPTA7aTA8bjA7KytpMCl7Zm9yKHZhbHVlMD12YWx1ZXMwW2kwXSxpMT0wO2kxPG4xOysraTEsKytpKXt2YWx1ZXNbaV09cmVkdWNlKHZhbHVlMCx2YWx1ZXMxW2kxXSl9fXJldHVybiB2YWx1ZXN9ZnVuY3Rpb24gZGVzY2VuZGluZyhhLGIpe3JldHVybiBiPGE/LTE6Yj5hPzE6Yj49YT8wOk5hTn1mdW5jdGlvbiBudW1iZXIoeCl7cmV0dXJuIHg9PT1udWxsP05hTjoreH1mdW5jdGlvbiB2YXJpYW5jZSh2YWx1ZXMsdmFsdWVvZil7dmFyIG49dmFsdWVzLmxlbmd0aCxtPTAsaT0tMSxtZWFuPTAsdmFsdWUsZGVsdGEsc3VtPTA7aWYodmFsdWVvZj09bnVsbCl7d2hpbGUoKytpPG4pe2lmKCFpc05hTih2YWx1ZT1udW1iZXIodmFsdWVzW2ldKSkpe2RlbHRhPXZhbHVlLW1lYW47bWVhbis9ZGVsdGEvKyttO3N1bSs9ZGVsdGEqKHZhbHVlLW1lYW4pfX19ZWxzZXt3aGlsZSgrK2k8bil7aWYoIWlzTmFOKHZhbHVlPW51bWJlcih2YWx1ZW9mKHZhbHVlc1tpXSxpLHZhbHVlcykpKSl7ZGVsdGE9dmFsdWUtbWVhbjttZWFuKz1kZWx0YS8rK207c3VtKz1kZWx0YSoodmFsdWUtbWVhbil9fX1pZihtPjEpcmV0dXJuIHN1bS8obS0xKX1mdW5jdGlvbiBkZXZpYXRpb24oYXJyYXksZil7dmFyIHY9dmFyaWFuY2UoYXJyYXksZik7cmV0dXJuIHY/TWF0aC5zcXJ0KHYpOnZ9ZnVuY3Rpb24gZXh0ZW50KHZhbHVlcyx2YWx1ZW9mKXt2YXIgbj12YWx1ZXMubGVuZ3RoLGk9LTEsdmFsdWUsbWluLG1heDtpZih2YWx1ZW9mPT1udWxsKXt3aGlsZSgrK2k8bil7Ly8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS4KaWYoKHZhbHVlPXZhbHVlc1tpXSkhPW51bGwmJnZhbHVlPj12YWx1ZSl7bWluPW1heD12YWx1ZTt3aGlsZSgrK2k8bil7Ly8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy4KaWYoKHZhbHVlPXZhbHVlc1tpXSkhPW51bGwpe2lmKG1pbj52YWx1ZSltaW49dmFsdWU7aWYobWF4PHZhbHVlKW1heD12YWx1ZX19fX19ZWxzZXt3aGlsZSgrK2k8bil7Ly8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS4KaWYoKHZhbHVlPXZhbHVlb2YodmFsdWVzW2ldLGksdmFsdWVzKSkhPW51bGwmJnZhbHVlPj12YWx1ZSl7bWluPW1heD12YWx1ZTt3aGlsZSgrK2k8bil7Ly8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy4KaWYoKHZhbHVlPXZhbHVlb2YodmFsdWVzW2ldLGksdmFsdWVzKSkhPW51bGwpe2lmKG1pbj52YWx1ZSltaW49dmFsdWU7aWYobWF4PHZhbHVlKW1heD12YWx1ZX19fX19cmV0dXJuW21pbixtYXhdfXZhciBhcnJheT1BcnJheS5wcm90b3R5cGU7dmFyIHNsaWNlPWFycmF5LnNsaWNlO3ZhciBtYXA9YXJyYXkubWFwO2Z1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB4fX1mdW5jdGlvbiBpZGVudGl0eSh4KXtyZXR1cm4geH1mdW5jdGlvbiByYW5nZShzdGFydCxzdG9wLHN0ZXApe3N0YXJ0PStzdGFydCxzdG9wPStzdG9wLHN0ZXA9KG49YXJndW1lbnRzLmxlbmd0aCk8Mj8oc3RvcD1zdGFydCxzdGFydD0wLDEpOm48Mz8xOitzdGVwO3ZhciBpPS0xLG49TWF0aC5tYXgoMCxNYXRoLmNlaWwoKHN0b3Atc3RhcnQpL3N0ZXApKXwwLHJhbmdlPW5ldyBBcnJheShuKTt3aGlsZSgrK2k8bil7cmFuZ2VbaV09c3RhcnQraSpzdGVwfXJldHVybiByYW5nZX12YXIgZTEwPU1hdGguc3FydCg1MCksZTU9TWF0aC5zcXJ0KDEwKSxlMj1NYXRoLnNxcnQoMik7ZnVuY3Rpb24gdGlja3Moc3RhcnQsc3RvcCxjb3VudCl7dmFyIHJldmVyc2UsaT0tMSxuLHRpY2tzLHN0ZXA7c3RvcD0rc3RvcCxzdGFydD0rc3RhcnQsY291bnQ9K2NvdW50O2lmKHN0YXJ0PT09c3RvcCYmY291bnQ+MClyZXR1cm5bc3RhcnRdO2lmKHJldmVyc2U9c3RvcDxzdGFydCluPXN0YXJ0LHN0YXJ0PXN0b3Asc3RvcD1uO2lmKChzdGVwPXRpY2tJbmNyZW1lbnQoc3RhcnQsc3RvcCxjb3VudCkpPT09MHx8IWlzRmluaXRlKHN0ZXApKXJldHVybltdO2lmKHN0ZXA+MCl7c3RhcnQ9TWF0aC5jZWlsKHN0YXJ0L3N0ZXApO3N0b3A9TWF0aC5mbG9vcihzdG9wL3N0ZXApO3RpY2tzPW5ldyBBcnJheShuPU1hdGguY2VpbChzdG9wLXN0YXJ0KzEpKTt3aGlsZSgrK2k8bil0aWNrc1tpXT0oc3RhcnQraSkqc3RlcH1lbHNle3N0YXJ0PU1hdGguZmxvb3Ioc3RhcnQqc3RlcCk7c3RvcD1NYXRoLmNlaWwoc3RvcCpzdGVwKTt0aWNrcz1uZXcgQXJyYXkobj1NYXRoLmNlaWwoc3RhcnQtc3RvcCsxKSk7d2hpbGUoKytpPG4pdGlja3NbaV09KHN0YXJ0LWkpL3N0ZXB9aWYocmV2ZXJzZSl0aWNrcy5yZXZlcnNlKCk7cmV0dXJuIHRpY2tzfWZ1bmN0aW9uIHRpY2tJbmNyZW1lbnQoc3RhcnQsc3RvcCxjb3VudCl7dmFyIHN0ZXA9KHN0b3Atc3RhcnQpL01hdGgubWF4KDAsY291bnQpLHBvd2VyPU1hdGguZmxvb3IoTWF0aC5sb2coc3RlcCkvTWF0aC5MTjEwKSxlcnJvcj1zdGVwL01hdGgucG93KDEwLHBvd2VyKTtyZXR1cm4gcG93ZXI+PTA/KGVycm9yPj1lMTA/MTA6ZXJyb3I+PWU1PzU6ZXJyb3I+PWUyPzI6MSkqTWF0aC5wb3coMTAscG93ZXIpOi1NYXRoLnBvdygxMCwtcG93ZXIpLyhlcnJvcj49ZTEwPzEwOmVycm9yPj1lNT81OmVycm9yPj1lMj8yOjEpfWZ1bmN0aW9uIHRpY2tTdGVwKHN0YXJ0LHN0b3AsY291bnQpe3ZhciBzdGVwMD1NYXRoLmFicyhzdG9wLXN0YXJ0KS9NYXRoLm1heCgwLGNvdW50KSxzdGVwMT1NYXRoLnBvdygxMCxNYXRoLmZsb29yKE1hdGgubG9nKHN0ZXAwKS9NYXRoLkxOMTApKSxlcnJvcj1zdGVwMC9zdGVwMTtpZihlcnJvcj49ZTEwKXN0ZXAxKj0xMDtlbHNlIGlmKGVycm9yPj1lNSlzdGVwMSo9NTtlbHNlIGlmKGVycm9yPj1lMilzdGVwMSo9MjtyZXR1cm4gc3RvcDxzdGFydD8tc3RlcDE6c3RlcDF9ZnVuY3Rpb24gc3R1cmdlcyh2YWx1ZXMpe3JldHVybiBNYXRoLmNlaWwoTWF0aC5sb2codmFsdWVzLmxlbmd0aCkvTWF0aC5MTjIpKzF9ZnVuY3Rpb24gaGlzdG9ncmFtKCl7dmFyIHZhbHVlPWlkZW50aXR5LGRvbWFpbj1leHRlbnQsdGhyZXNob2xkPXN0dXJnZXM7ZnVuY3Rpb24gaGlzdG9ncmFtKGRhdGEpe3ZhciBpLG49ZGF0YS5sZW5ndGgseCx2YWx1ZXM9bmV3IEFycmF5KG4pO2ZvcihpPTA7aTxuOysraSl7dmFsdWVzW2ldPXZhbHVlKGRhdGFbaV0saSxkYXRhKX12YXIgeHo9ZG9tYWluKHZhbHVlcykseDA9eHpbMF0seDE9eHpbMV0sdHo9dGhyZXNob2xkKHZhbHVlcyx4MCx4MSk7Ci8vIENvbnZlcnQgbnVtYmVyIG9mIHRocmVzaG9sZHMgaW50byB1bmlmb3JtIHRocmVzaG9sZHMuCmlmKCFBcnJheS5pc0FycmF5KHR6KSl7dHo9dGlja1N0ZXAoeDAseDEsdHopO3R6PXJhbmdlKE1hdGguY2VpbCh4MC90eikqdHoseDEsdHopOy8vIGV4Y2x1c2l2ZQp9Ci8vIFJlbW92ZSBhbnkgdGhyZXNob2xkcyBvdXRzaWRlIHRoZSBkb21haW4uCnZhciBtPXR6Lmxlbmd0aDt3aGlsZSh0elswXTw9eDApdHouc2hpZnQoKSwtLW07d2hpbGUodHpbbS0xXT54MSl0ei5wb3AoKSwtLW07dmFyIGJpbnM9bmV3IEFycmF5KG0rMSksYmluOwovLyBJbml0aWFsaXplIGJpbnMuCmZvcihpPTA7aTw9bTsrK2kpe2Jpbj1iaW5zW2ldPVtdO2Jpbi54MD1pPjA/dHpbaS0xXTp4MDtiaW4ueDE9aTxtP3R6W2ldOngxfQovLyBBc3NpZ24gZGF0YSB0byBiaW5zIGJ5IHZhbHVlLCBpZ25vcmluZyBhbnkgb3V0c2lkZSB0aGUgZG9tYWluLgpmb3IoaT0wO2k8bjsrK2kpe3g9dmFsdWVzW2ldO2lmKHgwPD14JiZ4PD14MSl7Ymluc1tiaXNlY3RSaWdodCh0eix4LDAsbSldLnB1c2goZGF0YVtpXSl9fXJldHVybiBiaW5zfWhpc3RvZ3JhbS52YWx1ZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odmFsdWU9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoXyksaGlzdG9ncmFtKTp2YWx1ZX07aGlzdG9ncmFtLmRvbWFpbj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZG9tYWluPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KFtfWzBdLF9bMV1dKSxoaXN0b2dyYW0pOmRvbWFpbn07aGlzdG9ncmFtLnRocmVzaG9sZHM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRocmVzaG9sZD10eXBlb2YgXz09PSJmdW5jdGlvbiI/XzpBcnJheS5pc0FycmF5KF8pP2NvbnN0YW50KHNsaWNlLmNhbGwoXykpOmNvbnN0YW50KF8pLGhpc3RvZ3JhbSk6dGhyZXNob2xkfTtyZXR1cm4gaGlzdG9ncmFtfWZ1bmN0aW9uIHF1YW50aWxlKHZhbHVlcyxwLHZhbHVlb2Ype2lmKHZhbHVlb2Y9PW51bGwpdmFsdWVvZj1udW1iZXI7aWYoIShuPXZhbHVlcy5sZW5ndGgpKXJldHVybjtpZigocD0rcCk8PTB8fG48MilyZXR1cm4rdmFsdWVvZih2YWx1ZXNbMF0sMCx2YWx1ZXMpO2lmKHA+PTEpcmV0dXJuK3ZhbHVlb2YodmFsdWVzW24tMV0sbi0xLHZhbHVlcyk7dmFyIG4saT0obi0xKSpwLGkwPU1hdGguZmxvb3IoaSksdmFsdWUwPSt2YWx1ZW9mKHZhbHVlc1tpMF0saTAsdmFsdWVzKSx2YWx1ZTE9K3ZhbHVlb2YodmFsdWVzW2kwKzFdLGkwKzEsdmFsdWVzKTtyZXR1cm4gdmFsdWUwKyh2YWx1ZTEtdmFsdWUwKSooaS1pMCl9ZnVuY3Rpb24gZnJlZWRtYW5EaWFjb25pcyh2YWx1ZXMsbWluLG1heCl7dmFsdWVzPW1hcC5jYWxsKHZhbHVlcyxudW1iZXIpLnNvcnQoYXNjZW5kaW5nKTtyZXR1cm4gTWF0aC5jZWlsKChtYXgtbWluKS8oMioocXVhbnRpbGUodmFsdWVzLC43NSktcXVhbnRpbGUodmFsdWVzLC4yNSkpKk1hdGgucG93KHZhbHVlcy5sZW5ndGgsLTEvMykpKX1mdW5jdGlvbiBzY290dCh2YWx1ZXMsbWluLG1heCl7cmV0dXJuIE1hdGguY2VpbCgobWF4LW1pbikvKDMuNSpkZXZpYXRpb24odmFsdWVzKSpNYXRoLnBvdyh2YWx1ZXMubGVuZ3RoLC0xLzMpKSl9ZnVuY3Rpb24gbWF4KHZhbHVlcyx2YWx1ZW9mKXt2YXIgbj12YWx1ZXMubGVuZ3RoLGk9LTEsdmFsdWUsbWF4O2lmKHZhbHVlb2Y9PW51bGwpe3doaWxlKCsraTxuKXsvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLgppZigodmFsdWU9dmFsdWVzW2ldKSE9bnVsbCYmdmFsdWU+PXZhbHVlKXttYXg9dmFsdWU7d2hpbGUoKytpPG4pey8vIENvbXBhcmUgdGhlIHJlbWFpbmluZyB2YWx1ZXMuCmlmKCh2YWx1ZT12YWx1ZXNbaV0pIT1udWxsJiZ2YWx1ZT5tYXgpe21heD12YWx1ZX19fX19ZWxzZXt3aGlsZSgrK2k8bil7Ly8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS4KaWYoKHZhbHVlPXZhbHVlb2YodmFsdWVzW2ldLGksdmFsdWVzKSkhPW51bGwmJnZhbHVlPj12YWx1ZSl7bWF4PXZhbHVlO3doaWxlKCsraTxuKXsvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLgppZigodmFsdWU9dmFsdWVvZih2YWx1ZXNbaV0saSx2YWx1ZXMpKSE9bnVsbCYmdmFsdWU+bWF4KXttYXg9dmFsdWV9fX19fXJldHVybiBtYXh9ZnVuY3Rpb24gbWVhbih2YWx1ZXMsdmFsdWVvZil7dmFyIG49dmFsdWVzLmxlbmd0aCxtPW4saT0tMSx2YWx1ZSxzdW09MDtpZih2YWx1ZW9mPT1udWxsKXt3aGlsZSgrK2k8bil7aWYoIWlzTmFOKHZhbHVlPW51bWJlcih2YWx1ZXNbaV0pKSlzdW0rPXZhbHVlO2Vsc2UtLW19fWVsc2V7d2hpbGUoKytpPG4pe2lmKCFpc05hTih2YWx1ZT1udW1iZXIodmFsdWVvZih2YWx1ZXNbaV0saSx2YWx1ZXMpKSkpc3VtKz12YWx1ZTtlbHNlLS1tfX1pZihtKXJldHVybiBzdW0vbX1mdW5jdGlvbiBtZWRpYW4odmFsdWVzLHZhbHVlb2Ype3ZhciBuPXZhbHVlcy5sZW5ndGgsaT0tMSx2YWx1ZSxudW1iZXJzPVtdO2lmKHZhbHVlb2Y9PW51bGwpe3doaWxlKCsraTxuKXtpZighaXNOYU4odmFsdWU9bnVtYmVyKHZhbHVlc1tpXSkpKXtudW1iZXJzLnB1c2godmFsdWUpfX19ZWxzZXt3aGlsZSgrK2k8bil7aWYoIWlzTmFOKHZhbHVlPW51bWJlcih2YWx1ZW9mKHZhbHVlc1tpXSxpLHZhbHVlcykpKSl7bnVtYmVycy5wdXNoKHZhbHVlKX19fXJldHVybiBxdWFudGlsZShudW1iZXJzLnNvcnQoYXNjZW5kaW5nKSwuNSl9ZnVuY3Rpb24gbWVyZ2UoYXJyYXlzKXt2YXIgbj1hcnJheXMubGVuZ3RoLG0saT0tMSxqPTAsbWVyZ2VkLGFycmF5O3doaWxlKCsraTxuKWorPWFycmF5c1tpXS5sZW5ndGg7bWVyZ2VkPW5ldyBBcnJheShqKTt3aGlsZSgtLW4+PTApe2FycmF5PWFycmF5c1tuXTttPWFycmF5Lmxlbmd0aDt3aGlsZSgtLW0+PTApe21lcmdlZFstLWpdPWFycmF5W21dfX1yZXR1cm4gbWVyZ2VkfWZ1bmN0aW9uIG1pbih2YWx1ZXMsdmFsdWVvZil7dmFyIG49dmFsdWVzLmxlbmd0aCxpPS0xLHZhbHVlLG1pbjtpZih2YWx1ZW9mPT1udWxsKXt3aGlsZSgrK2k8bil7Ly8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS4KaWYoKHZhbHVlPXZhbHVlc1tpXSkhPW51bGwmJnZhbHVlPj12YWx1ZSl7bWluPXZhbHVlO3doaWxlKCsraTxuKXsvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLgppZigodmFsdWU9dmFsdWVzW2ldKSE9bnVsbCYmbWluPnZhbHVlKXttaW49dmFsdWV9fX19fWVsc2V7d2hpbGUoKytpPG4pey8vIEZpbmQgdGhlIGZpcnN0IGNvbXBhcmFibGUgdmFsdWUuCmlmKCh2YWx1ZT12YWx1ZW9mKHZhbHVlc1tpXSxpLHZhbHVlcykpIT1udWxsJiZ2YWx1ZT49dmFsdWUpe21pbj12YWx1ZTt3aGlsZSgrK2k8bil7Ly8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy4KaWYoKHZhbHVlPXZhbHVlb2YodmFsdWVzW2ldLGksdmFsdWVzKSkhPW51bGwmJm1pbj52YWx1ZSl7bWluPXZhbHVlfX19fX1yZXR1cm4gbWlufWZ1bmN0aW9uIHBlcm11dGUoYXJyYXksaW5kZXhlcyl7dmFyIGk9aW5kZXhlcy5sZW5ndGgscGVybXV0ZXM9bmV3IEFycmF5KGkpO3doaWxlKGktLSlwZXJtdXRlc1tpXT1hcnJheVtpbmRleGVzW2ldXTtyZXR1cm4gcGVybXV0ZXN9ZnVuY3Rpb24gc2Nhbih2YWx1ZXMsY29tcGFyZSl7aWYoIShuPXZhbHVlcy5sZW5ndGgpKXJldHVybjt2YXIgbixpPTAsaj0wLHhpLHhqPXZhbHVlc1tqXTtpZihjb21wYXJlPT1udWxsKWNvbXBhcmU9YXNjZW5kaW5nO3doaWxlKCsraTxuKXtpZihjb21wYXJlKHhpPXZhbHVlc1tpXSx4aik8MHx8Y29tcGFyZSh4aix4aikhPT0wKXt4aj14aSxqPWl9fWlmKGNvbXBhcmUoeGoseGopPT09MClyZXR1cm4gan1mdW5jdGlvbiBzaHVmZmxlKGFycmF5LGkwLGkxKXt2YXIgbT0oaTE9PW51bGw/YXJyYXkubGVuZ3RoOmkxKS0oaTA9aTA9PW51bGw/MDoraTApLHQsaTt3aGlsZShtKXtpPU1hdGgucmFuZG9tKCkqbS0tfDA7dD1hcnJheVttK2kwXTthcnJheVttK2kwXT1hcnJheVtpK2kwXTthcnJheVtpK2kwXT10fXJldHVybiBhcnJheX1mdW5jdGlvbiBzdW0odmFsdWVzLHZhbHVlb2Ype3ZhciBuPXZhbHVlcy5sZW5ndGgsaT0tMSx2YWx1ZSxzdW09MDtpZih2YWx1ZW9mPT1udWxsKXt3aGlsZSgrK2k8bil7aWYodmFsdWU9K3ZhbHVlc1tpXSlzdW0rPXZhbHVlOy8vIE5vdGU6IHplcm8gYW5kIG51bGwgYXJlIGVxdWl2YWxlbnQuCn19ZWxzZXt3aGlsZSgrK2k8bil7aWYodmFsdWU9K3ZhbHVlb2YodmFsdWVzW2ldLGksdmFsdWVzKSlzdW0rPXZhbHVlfX1yZXR1cm4gc3VtfWZ1bmN0aW9uIHRyYW5zcG9zZShtYXRyaXgpe2lmKCEobj1tYXRyaXgubGVuZ3RoKSlyZXR1cm5bXTtmb3IodmFyIGk9LTEsbT1taW4obWF0cml4LGxlbmd0aCksdHJhbnNwb3NlPW5ldyBBcnJheShtKTsrK2k8bTspe2Zvcih2YXIgaj0tMSxuLHJvdz10cmFuc3Bvc2VbaV09bmV3IEFycmF5KG4pOysrajxuOyl7cm93W2pdPW1hdHJpeFtqXVtpXX19cmV0dXJuIHRyYW5zcG9zZX1mdW5jdGlvbiBsZW5ndGgoZCl7cmV0dXJuIGQubGVuZ3RofWZ1bmN0aW9uIHppcCgpe3JldHVybiB0cmFuc3Bvc2UoYXJndW1lbnRzKX1leHBvcnRzLmJpc2VjdD1iaXNlY3RSaWdodDtleHBvcnRzLmJpc2VjdFJpZ2h0PWJpc2VjdFJpZ2h0O2V4cG9ydHMuYmlzZWN0TGVmdD1iaXNlY3RMZWZ0O2V4cG9ydHMuYXNjZW5kaW5nPWFzY2VuZGluZztleHBvcnRzLmJpc2VjdG9yPWJpc2VjdG9yO2V4cG9ydHMuY3Jvc3M9Y3Jvc3M7ZXhwb3J0cy5kZXNjZW5kaW5nPWRlc2NlbmRpbmc7ZXhwb3J0cy5kZXZpYXRpb249ZGV2aWF0aW9uO2V4cG9ydHMuZXh0ZW50PWV4dGVudDtleHBvcnRzLmhpc3RvZ3JhbT1oaXN0b2dyYW07ZXhwb3J0cy50aHJlc2hvbGRGcmVlZG1hbkRpYWNvbmlzPWZyZWVkbWFuRGlhY29uaXM7ZXhwb3J0cy50aHJlc2hvbGRTY290dD1zY290dDtleHBvcnRzLnRocmVzaG9sZFN0dXJnZXM9c3R1cmdlcztleHBvcnRzLm1heD1tYXg7ZXhwb3J0cy5tZWFuPW1lYW47ZXhwb3J0cy5tZWRpYW49bWVkaWFuO2V4cG9ydHMubWVyZ2U9bWVyZ2U7ZXhwb3J0cy5taW49bWluO2V4cG9ydHMucGFpcnM9cGFpcnM7ZXhwb3J0cy5wZXJtdXRlPXBlcm11dGU7ZXhwb3J0cy5xdWFudGlsZT1xdWFudGlsZTtleHBvcnRzLnJhbmdlPXJhbmdlO2V4cG9ydHMuc2Nhbj1zY2FuO2V4cG9ydHMuc2h1ZmZsZT1zaHVmZmxlO2V4cG9ydHMuc3VtPXN1bTtleHBvcnRzLnRpY2tzPXRpY2tzO2V4cG9ydHMudGlja0luY3JlbWVudD10aWNrSW5jcmVtZW50O2V4cG9ydHMudGlja1N0ZXA9dGlja1N0ZXA7ZXhwb3J0cy50cmFuc3Bvc2U9dHJhbnNwb3NlO2V4cG9ydHMudmFyaWFuY2U9dmFyaWFuY2U7ZXhwb3J0cy56aXA9emlwO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSwzMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtYXhpcy8gdjEuMC4xMiBDb3B5cmlnaHQgMjAxOCBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZmFjdG9yeSk6ZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgc2xpY2U9QXJyYXkucHJvdG90eXBlLnNsaWNlO2Z1bmN0aW9uIGlkZW50aXR5KHgpe3JldHVybiB4fXZhciB0b3A9MSxyaWdodD0yLGJvdHRvbT0zLGxlZnQ9NCxlcHNpbG9uPTFlLTY7ZnVuY3Rpb24gdHJhbnNsYXRlWCh4KXtyZXR1cm4idHJhbnNsYXRlKCIrKHgrLjUpKyIsMCkifWZ1bmN0aW9uIHRyYW5zbGF0ZVkoeSl7cmV0dXJuInRyYW5zbGF0ZSgwLCIrKHkrLjUpKyIpIn1mdW5jdGlvbiBudW1iZXIoc2NhbGUpe3JldHVybiBmdW5jdGlvbihkKXtyZXR1cm4rc2NhbGUoZCl9fWZ1bmN0aW9uIGNlbnRlcihzY2FsZSl7dmFyIG9mZnNldD1NYXRoLm1heCgwLHNjYWxlLmJhbmR3aWR0aCgpLTEpLzI7Ly8gQWRqdXN0IGZvciAwLjVweCBvZmZzZXQuCmlmKHNjYWxlLnJvdW5kKCkpb2Zmc2V0PU1hdGgucm91bmQob2Zmc2V0KTtyZXR1cm4gZnVuY3Rpb24oZCl7cmV0dXJuK3NjYWxlKGQpK29mZnNldH19ZnVuY3Rpb24gZW50ZXJpbmcoKXtyZXR1cm4hdGhpcy5fX2F4aXN9ZnVuY3Rpb24gYXhpcyhvcmllbnQsc2NhbGUpe3ZhciB0aWNrQXJndW1lbnRzPVtdLHRpY2tWYWx1ZXM9bnVsbCx0aWNrRm9ybWF0PW51bGwsdGlja1NpemVJbm5lcj02LHRpY2tTaXplT3V0ZXI9Nix0aWNrUGFkZGluZz0zLGs9b3JpZW50PT09dG9wfHxvcmllbnQ9PT1sZWZ0Py0xOjEseD1vcmllbnQ9PT1sZWZ0fHxvcmllbnQ9PT1yaWdodD8ieCI6InkiLHRyYW5zZm9ybT1vcmllbnQ9PT10b3B8fG9yaWVudD09PWJvdHRvbT90cmFuc2xhdGVYOnRyYW5zbGF0ZVk7ZnVuY3Rpb24gYXhpcyhjb250ZXh0KXt2YXIgdmFsdWVzPXRpY2tWYWx1ZXM9PW51bGw/c2NhbGUudGlja3M/c2NhbGUudGlja3MuYXBwbHkoc2NhbGUsdGlja0FyZ3VtZW50cyk6c2NhbGUuZG9tYWluKCk6dGlja1ZhbHVlcyxmb3JtYXQ9dGlja0Zvcm1hdD09bnVsbD9zY2FsZS50aWNrRm9ybWF0P3NjYWxlLnRpY2tGb3JtYXQuYXBwbHkoc2NhbGUsdGlja0FyZ3VtZW50cyk6aWRlbnRpdHk6dGlja0Zvcm1hdCxzcGFjaW5nPU1hdGgubWF4KHRpY2tTaXplSW5uZXIsMCkrdGlja1BhZGRpbmcscmFuZ2U9c2NhbGUucmFuZ2UoKSxyYW5nZTA9K3JhbmdlWzBdKy41LHJhbmdlMT0rcmFuZ2VbcmFuZ2UubGVuZ3RoLTFdKy41LHBvc2l0aW9uPShzY2FsZS5iYW5kd2lkdGg/Y2VudGVyOm51bWJlcikoc2NhbGUuY29weSgpKSxzZWxlY3Rpb249Y29udGV4dC5zZWxlY3Rpb24/Y29udGV4dC5zZWxlY3Rpb24oKTpjb250ZXh0LHBhdGg9c2VsZWN0aW9uLnNlbGVjdEFsbCgiLmRvbWFpbiIpLmRhdGEoW251bGxdKSx0aWNrPXNlbGVjdGlvbi5zZWxlY3RBbGwoIi50aWNrIikuZGF0YSh2YWx1ZXMsc2NhbGUpLm9yZGVyKCksdGlja0V4aXQ9dGljay5leGl0KCksdGlja0VudGVyPXRpY2suZW50ZXIoKS5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsInRpY2siKSxsaW5lPXRpY2suc2VsZWN0KCJsaW5lIiksdGV4dD10aWNrLnNlbGVjdCgidGV4dCIpO3BhdGg9cGF0aC5tZXJnZShwYXRoLmVudGVyKCkuaW5zZXJ0KCJwYXRoIiwiLnRpY2siKS5hdHRyKCJjbGFzcyIsImRvbWFpbiIpLmF0dHIoInN0cm9rZSIsImN1cnJlbnRDb2xvciIpKTt0aWNrPXRpY2subWVyZ2UodGlja0VudGVyKTtsaW5lPWxpbmUubWVyZ2UodGlja0VudGVyLmFwcGVuZCgibGluZSIpLmF0dHIoInN0cm9rZSIsImN1cnJlbnRDb2xvciIpLmF0dHIoeCsiMiIsayp0aWNrU2l6ZUlubmVyKSk7dGV4dD10ZXh0Lm1lcmdlKHRpY2tFbnRlci5hcHBlbmQoInRleHQiKS5hdHRyKCJmaWxsIiwiY3VycmVudENvbG9yIikuYXR0cih4LGsqc3BhY2luZykuYXR0cigiZHkiLG9yaWVudD09PXRvcD8iMGVtIjpvcmllbnQ9PT1ib3R0b20/IjAuNzFlbSI6IjAuMzJlbSIpKTtpZihjb250ZXh0IT09c2VsZWN0aW9uKXtwYXRoPXBhdGgudHJhbnNpdGlvbihjb250ZXh0KTt0aWNrPXRpY2sudHJhbnNpdGlvbihjb250ZXh0KTtsaW5lPWxpbmUudHJhbnNpdGlvbihjb250ZXh0KTt0ZXh0PXRleHQudHJhbnNpdGlvbihjb250ZXh0KTt0aWNrRXhpdD10aWNrRXhpdC50cmFuc2l0aW9uKGNvbnRleHQpLmF0dHIoIm9wYWNpdHkiLGVwc2lsb24pLmF0dHIoInRyYW5zZm9ybSIsZnVuY3Rpb24oZCl7cmV0dXJuIGlzRmluaXRlKGQ9cG9zaXRpb24oZCkpP3RyYW5zZm9ybShkKTp0aGlzLmdldEF0dHJpYnV0ZSgidHJhbnNmb3JtIil9KTt0aWNrRW50ZXIuYXR0cigib3BhY2l0eSIsZXBzaWxvbikuYXR0cigidHJhbnNmb3JtIixmdW5jdGlvbihkKXt2YXIgcD10aGlzLnBhcmVudE5vZGUuX19heGlzO3JldHVybiB0cmFuc2Zvcm0ocCYmaXNGaW5pdGUocD1wKGQpKT9wOnBvc2l0aW9uKGQpKX0pfXRpY2tFeGl0LnJlbW92ZSgpO3BhdGguYXR0cigiZCIsb3JpZW50PT09bGVmdHx8b3JpZW50PT1yaWdodD90aWNrU2l6ZU91dGVyPyJNIitrKnRpY2tTaXplT3V0ZXIrIiwiK3JhbmdlMCsiSDAuNVYiK3JhbmdlMSsiSCIrayp0aWNrU2l6ZU91dGVyOiJNMC41LCIrcmFuZ2UwKyJWIityYW5nZTE6dGlja1NpemVPdXRlcj8iTSIrcmFuZ2UwKyIsIitrKnRpY2tTaXplT3V0ZXIrIlYwLjVIIityYW5nZTErIlYiK2sqdGlja1NpemVPdXRlcjoiTSIrcmFuZ2UwKyIsMC41SCIrcmFuZ2UxKTt0aWNrLmF0dHIoIm9wYWNpdHkiLDEpLmF0dHIoInRyYW5zZm9ybSIsZnVuY3Rpb24oZCl7cmV0dXJuIHRyYW5zZm9ybShwb3NpdGlvbihkKSl9KTtsaW5lLmF0dHIoeCsiMiIsayp0aWNrU2l6ZUlubmVyKTt0ZXh0LmF0dHIoeCxrKnNwYWNpbmcpLnRleHQoZm9ybWF0KTtzZWxlY3Rpb24uZmlsdGVyKGVudGVyaW5nKS5hdHRyKCJmaWxsIiwibm9uZSIpLmF0dHIoImZvbnQtc2l6ZSIsMTApLmF0dHIoImZvbnQtZmFtaWx5Iiwic2Fucy1zZXJpZiIpLmF0dHIoInRleHQtYW5jaG9yIixvcmllbnQ9PT1yaWdodD8ic3RhcnQiOm9yaWVudD09PWxlZnQ/ImVuZCI6Im1pZGRsZSIpO3NlbGVjdGlvbi5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5fX2F4aXM9cG9zaXRpb259KX1heGlzLnNjYWxlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzY2FsZT1fLGF4aXMpOnNjYWxlfTtheGlzLnRpY2tzPWZ1bmN0aW9uKCl7cmV0dXJuIHRpY2tBcmd1bWVudHM9c2xpY2UuY2FsbChhcmd1bWVudHMpLGF4aXN9O2F4aXMudGlja0FyZ3VtZW50cz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGlja0FyZ3VtZW50cz1fPT1udWxsP1tdOnNsaWNlLmNhbGwoXyksYXhpcyk6dGlja0FyZ3VtZW50cy5zbGljZSgpfTtheGlzLnRpY2tWYWx1ZXM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRpY2tWYWx1ZXM9Xz09bnVsbD9udWxsOnNsaWNlLmNhbGwoXyksYXhpcyk6dGlja1ZhbHVlcyYmdGlja1ZhbHVlcy5zbGljZSgpfTtheGlzLnRpY2tGb3JtYXQ9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRpY2tGb3JtYXQ9XyxheGlzKTp0aWNrRm9ybWF0fTtheGlzLnRpY2tTaXplPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aWNrU2l6ZUlubmVyPXRpY2tTaXplT3V0ZXI9K18sYXhpcyk6dGlja1NpemVJbm5lcn07YXhpcy50aWNrU2l6ZUlubmVyPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aWNrU2l6ZUlubmVyPStfLGF4aXMpOnRpY2tTaXplSW5uZXJ9O2F4aXMudGlja1NpemVPdXRlcj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGlja1NpemVPdXRlcj0rXyxheGlzKTp0aWNrU2l6ZU91dGVyfTtheGlzLnRpY2tQYWRkaW5nPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aWNrUGFkZGluZz0rXyxheGlzKTp0aWNrUGFkZGluZ307cmV0dXJuIGF4aXN9ZnVuY3Rpb24gYXhpc1RvcChzY2FsZSl7cmV0dXJuIGF4aXModG9wLHNjYWxlKX1mdW5jdGlvbiBheGlzUmlnaHQoc2NhbGUpe3JldHVybiBheGlzKHJpZ2h0LHNjYWxlKX1mdW5jdGlvbiBheGlzQm90dG9tKHNjYWxlKXtyZXR1cm4gYXhpcyhib3R0b20sc2NhbGUpfWZ1bmN0aW9uIGF4aXNMZWZ0KHNjYWxlKXtyZXR1cm4gYXhpcyhsZWZ0LHNjYWxlKX1leHBvcnRzLmF4aXNUb3A9YXhpc1RvcDtleHBvcnRzLmF4aXNSaWdodD1heGlzUmlnaHQ7ZXhwb3J0cy5heGlzQm90dG9tPWF4aXNCb3R0b207ZXhwb3J0cy5heGlzTGVmdD1heGlzTGVmdDtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7fV0sMzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLWJydXNoLyB2MS4xLjUgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyxyZXF1aXJlKCJkMy1kaXNwYXRjaCIpLHJlcXVpcmUoImQzLWRyYWciKSxyZXF1aXJlKCJkMy1pbnRlcnBvbGF0ZSIpLHJlcXVpcmUoImQzLXNlbGVjdGlvbiIpLHJlcXVpcmUoImQzLXRyYW5zaXRpb24iKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLWRpc3BhdGNoIiwiZDMtZHJhZyIsImQzLWludGVycG9sYXRlIiwiZDMtc2VsZWN0aW9uIiwiZDMtdHJhbnNpdGlvbiJdLGZhY3RvcnkpOihnbG9iYWw9Z2xvYmFsfHxzZWxmLGZhY3RvcnkoZ2xvYmFsLmQzPWdsb2JhbC5kM3x8e30sZ2xvYmFsLmQzLGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMykpfSkodGhpcyxmdW5jdGlvbihleHBvcnRzLGQzRGlzcGF0Y2gsZDNEcmFnLGQzSW50ZXJwb2xhdGUsZDNTZWxlY3Rpb24sZDNUcmFuc2l0aW9uKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gY29uc3RhbnQoeCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHh9fWZ1bmN0aW9uIEJydXNoRXZlbnQodGFyZ2V0LHR5cGUsc2VsZWN0aW9uKXt0aGlzLnRhcmdldD10YXJnZXQ7dGhpcy50eXBlPXR5cGU7dGhpcy5zZWxlY3Rpb249c2VsZWN0aW9ufWZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKXtkM1NlbGVjdGlvbi5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX1mdW5jdGlvbiBub2V2ZW50KCl7ZDNTZWxlY3Rpb24uZXZlbnQucHJldmVudERlZmF1bHQoKTtkM1NlbGVjdGlvbi5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX12YXIgTU9ERV9EUkFHPXtuYW1lOiJkcmFnIn0sTU9ERV9TUEFDRT17bmFtZToic3BhY2UifSxNT0RFX0hBTkRMRT17bmFtZToiaGFuZGxlIn0sTU9ERV9DRU5URVI9e25hbWU6ImNlbnRlciJ9O2Z1bmN0aW9uIG51bWJlcjEoZSl7cmV0dXJuWytlWzBdLCtlWzFdXX1mdW5jdGlvbiBudW1iZXIyKGUpe3JldHVybltudW1iZXIxKGVbMF0pLG51bWJlcjEoZVsxXSldfWZ1bmN0aW9uIHRvdWNoZXIoaWRlbnRpZmllcil7cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCl7cmV0dXJuIGQzU2VsZWN0aW9uLnRvdWNoKHRhcmdldCxkM1NlbGVjdGlvbi5ldmVudC50b3VjaGVzLGlkZW50aWZpZXIpfX12YXIgWD17bmFtZToieCIsaGFuZGxlczpbInciLCJlIl0ubWFwKHR5cGUpLGlucHV0OmZ1bmN0aW9uKHgsZSl7cmV0dXJuIHg9PW51bGw/bnVsbDpbWyt4WzBdLGVbMF1bMV1dLFsreFsxXSxlWzFdWzFdXV19LG91dHB1dDpmdW5jdGlvbih4eSl7cmV0dXJuIHh5JiZbeHlbMF1bMF0seHlbMV1bMF1dfX07dmFyIFk9e25hbWU6InkiLGhhbmRsZXM6WyJuIiwicyJdLm1hcCh0eXBlKSxpbnB1dDpmdW5jdGlvbih5LGUpe3JldHVybiB5PT1udWxsP251bGw6W1tlWzBdWzBdLCt5WzBdXSxbZVsxXVswXSwreVsxXV1dfSxvdXRwdXQ6ZnVuY3Rpb24oeHkpe3JldHVybiB4eSYmW3h5WzBdWzFdLHh5WzFdWzFdXX19O3ZhciBYWT17bmFtZToieHkiLGhhbmRsZXM6WyJuIiwidyIsImUiLCJzIiwibnciLCJuZSIsInN3Iiwic2UiXS5tYXAodHlwZSksaW5wdXQ6ZnVuY3Rpb24oeHkpe3JldHVybiB4eT09bnVsbD9udWxsOm51bWJlcjIoeHkpfSxvdXRwdXQ6ZnVuY3Rpb24oeHkpe3JldHVybiB4eX19O3ZhciBjdXJzb3JzPXtvdmVybGF5OiJjcm9zc2hhaXIiLHNlbGVjdGlvbjoibW92ZSIsbjoibnMtcmVzaXplIixlOiJldy1yZXNpemUiLHM6Im5zLXJlc2l6ZSIsdzoiZXctcmVzaXplIixudzoibndzZS1yZXNpemUiLG5lOiJuZXN3LXJlc2l6ZSIsc2U6Im53c2UtcmVzaXplIixzdzoibmVzdy1yZXNpemUifTt2YXIgZmxpcFg9e2U6InciLHc6ImUiLG53OiJuZSIsbmU6Im53IixzZToic3ciLHN3OiJzZSJ9O3ZhciBmbGlwWT17bjoicyIsczoibiIsbnc6InN3IixuZToic2UiLHNlOiJuZSIsc3c6Im53In07dmFyIHNpZ25zWD17b3ZlcmxheTorMSxzZWxlY3Rpb246KzEsbjpudWxsLGU6KzEsczpudWxsLHc6LTEsbnc6LTEsbmU6KzEsc2U6KzEsc3c6LTF9O3ZhciBzaWduc1k9e292ZXJsYXk6KzEsc2VsZWN0aW9uOisxLG46LTEsZTpudWxsLHM6KzEsdzpudWxsLG53Oi0xLG5lOi0xLHNlOisxLHN3OisxfTtmdW5jdGlvbiB0eXBlKHQpe3JldHVybnt0eXBlOnR9fQovLyBJZ25vcmUgcmlnaHQtY2xpY2ssIHNpbmNlIHRoYXQgc2hvdWxkIG9wZW4gdGhlIGNvbnRleHQgbWVudS4KZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpe3JldHVybiFkM1NlbGVjdGlvbi5ldmVudC5jdHJsS2V5JiYhZDNTZWxlY3Rpb24uZXZlbnQuYnV0dG9ufWZ1bmN0aW9uIGRlZmF1bHRFeHRlbnQoKXt2YXIgc3ZnPXRoaXMub3duZXJTVkdFbGVtZW50fHx0aGlzO2lmKHN2Zy5oYXNBdHRyaWJ1dGUoInZpZXdCb3giKSl7c3ZnPXN2Zy52aWV3Qm94LmJhc2VWYWw7cmV0dXJuW1tzdmcueCxzdmcueV0sW3N2Zy54K3N2Zy53aWR0aCxzdmcueStzdmcuaGVpZ2h0XV19cmV0dXJuW1swLDBdLFtzdmcud2lkdGguYmFzZVZhbC52YWx1ZSxzdmcuaGVpZ2h0LmJhc2VWYWwudmFsdWVdXX1mdW5jdGlvbiBkZWZhdWx0VG91Y2hhYmxlKCl7cmV0dXJuIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50c3x8Im9udG91Y2hzdGFydCJpbiB0aGlzfQovLyBMaWtlIGQzLmxvY2FsLCBidXQgd2l0aCB0aGUgbmFtZSDigJxfX2JydXNo4oCdIHJhdGhlciB0aGFuIGF1dG8tZ2VuZXJhdGVkLgpmdW5jdGlvbiBsb2NhbChub2RlKXt3aGlsZSghbm9kZS5fX2JydXNoKWlmKCEobm9kZT1ub2RlLnBhcmVudE5vZGUpKXJldHVybjtyZXR1cm4gbm9kZS5fX2JydXNofWZ1bmN0aW9uIGVtcHR5KGV4dGVudCl7cmV0dXJuIGV4dGVudFswXVswXT09PWV4dGVudFsxXVswXXx8ZXh0ZW50WzBdWzFdPT09ZXh0ZW50WzFdWzFdfWZ1bmN0aW9uIGJydXNoU2VsZWN0aW9uKG5vZGUpe3ZhciBzdGF0ZT1ub2RlLl9fYnJ1c2g7cmV0dXJuIHN0YXRlP3N0YXRlLmRpbS5vdXRwdXQoc3RhdGUuc2VsZWN0aW9uKTpudWxsfWZ1bmN0aW9uIGJydXNoWCgpe3JldHVybiBicnVzaCQxKFgpfWZ1bmN0aW9uIGJydXNoWSgpe3JldHVybiBicnVzaCQxKFkpfWZ1bmN0aW9uIGJydXNoKCl7cmV0dXJuIGJydXNoJDEoWFkpfWZ1bmN0aW9uIGJydXNoJDEoZGltKXt2YXIgZXh0ZW50PWRlZmF1bHRFeHRlbnQsZmlsdGVyPWRlZmF1bHRGaWx0ZXIsdG91Y2hhYmxlPWRlZmF1bHRUb3VjaGFibGUsa2V5cz10cnVlLGxpc3RlbmVycz1kM0Rpc3BhdGNoLmRpc3BhdGNoKCJzdGFydCIsImJydXNoIiwiZW5kIiksaGFuZGxlU2l6ZT02LHRvdWNoZW5kaW5nO2Z1bmN0aW9uIGJydXNoKGdyb3VwKXt2YXIgb3ZlcmxheT1ncm91cC5wcm9wZXJ0eSgiX19icnVzaCIsaW5pdGlhbGl6ZSkuc2VsZWN0QWxsKCIub3ZlcmxheSIpLmRhdGEoW3R5cGUoIm92ZXJsYXkiKV0pO292ZXJsYXkuZW50ZXIoKS5hcHBlbmQoInJlY3QiKS5hdHRyKCJjbGFzcyIsIm92ZXJsYXkiKS5hdHRyKCJwb2ludGVyLWV2ZW50cyIsImFsbCIpLmF0dHIoImN1cnNvciIsY3Vyc29ycy5vdmVybGF5KS5tZXJnZShvdmVybGF5KS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGV4dGVudD1sb2NhbCh0aGlzKS5leHRlbnQ7ZDNTZWxlY3Rpb24uc2VsZWN0KHRoaXMpLmF0dHIoIngiLGV4dGVudFswXVswXSkuYXR0cigieSIsZXh0ZW50WzBdWzFdKS5hdHRyKCJ3aWR0aCIsZXh0ZW50WzFdWzBdLWV4dGVudFswXVswXSkuYXR0cigiaGVpZ2h0IixleHRlbnRbMV1bMV0tZXh0ZW50WzBdWzFdKX0pO2dyb3VwLnNlbGVjdEFsbCgiLnNlbGVjdGlvbiIpLmRhdGEoW3R5cGUoInNlbGVjdGlvbiIpXSkuZW50ZXIoKS5hcHBlbmQoInJlY3QiKS5hdHRyKCJjbGFzcyIsInNlbGVjdGlvbiIpLmF0dHIoImN1cnNvciIsY3Vyc29ycy5zZWxlY3Rpb24pLmF0dHIoImZpbGwiLCIjNzc3IikuYXR0cigiZmlsbC1vcGFjaXR5IiwuMykuYXR0cigic3Ryb2tlIiwiI2ZmZiIpLmF0dHIoInNoYXBlLXJlbmRlcmluZyIsImNyaXNwRWRnZXMiKTt2YXIgaGFuZGxlPWdyb3VwLnNlbGVjdEFsbCgiLmhhbmRsZSIpLmRhdGEoZGltLmhhbmRsZXMsZnVuY3Rpb24oZCl7cmV0dXJuIGQudHlwZX0pO2hhbmRsZS5leGl0KCkucmVtb3ZlKCk7aGFuZGxlLmVudGVyKCkuYXBwZW5kKCJyZWN0IikuYXR0cigiY2xhc3MiLGZ1bmN0aW9uKGQpe3JldHVybiJoYW5kbGUgaGFuZGxlLS0iK2QudHlwZX0pLmF0dHIoImN1cnNvciIsZnVuY3Rpb24oZCl7cmV0dXJuIGN1cnNvcnNbZC50eXBlXX0pO2dyb3VwLmVhY2gocmVkcmF3KS5hdHRyKCJmaWxsIiwibm9uZSIpLmF0dHIoInBvaW50ZXItZXZlbnRzIiwiYWxsIikub24oIm1vdXNlZG93bi5icnVzaCIsc3RhcnRlZCkuZmlsdGVyKHRvdWNoYWJsZSkub24oInRvdWNoc3RhcnQuYnJ1c2giLHN0YXJ0ZWQpLm9uKCJ0b3VjaG1vdmUuYnJ1c2giLHRvdWNobW92ZWQpLm9uKCJ0b3VjaGVuZC5icnVzaCB0b3VjaGNhbmNlbC5icnVzaCIsdG91Y2hlbmRlZCkuc3R5bGUoInRvdWNoLWFjdGlvbiIsIm5vbmUiKS5zdHlsZSgiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIiwicmdiYSgwLDAsMCwwKSIpfWJydXNoLm1vdmU9ZnVuY3Rpb24oZ3JvdXAsc2VsZWN0aW9uKXtpZihncm91cC5zZWxlY3Rpb24pe2dyb3VwLm9uKCJzdGFydC5icnVzaCIsZnVuY3Rpb24oKXtlbWl0dGVyKHRoaXMsYXJndW1lbnRzKS5iZWZvcmVzdGFydCgpLnN0YXJ0KCl9KS5vbigiaW50ZXJydXB0LmJydXNoIGVuZC5icnVzaCIsZnVuY3Rpb24oKXtlbWl0dGVyKHRoaXMsYXJndW1lbnRzKS5lbmQoKX0pLnR3ZWVuKCJicnVzaCIsZnVuY3Rpb24oKXt2YXIgdGhhdD10aGlzLHN0YXRlPXRoYXQuX19icnVzaCxlbWl0PWVtaXR0ZXIodGhhdCxhcmd1bWVudHMpLHNlbGVjdGlvbjA9c3RhdGUuc2VsZWN0aW9uLHNlbGVjdGlvbjE9ZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb249PT0iZnVuY3Rpb24iP3NlbGVjdGlvbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk6c2VsZWN0aW9uLHN0YXRlLmV4dGVudCksaT1kM0ludGVycG9sYXRlLmludGVycG9sYXRlKHNlbGVjdGlvbjAsc2VsZWN0aW9uMSk7ZnVuY3Rpb24gdHdlZW4odCl7c3RhdGUuc2VsZWN0aW9uPXQ9PT0xJiZzZWxlY3Rpb24xPT09bnVsbD9udWxsOmkodCk7cmVkcmF3LmNhbGwodGhhdCk7ZW1pdC5icnVzaCgpfXJldHVybiBzZWxlY3Rpb24wIT09bnVsbCYmc2VsZWN0aW9uMSE9PW51bGw/dHdlZW46dHdlZW4oMSl9KX1lbHNle2dyb3VwLmVhY2goZnVuY3Rpb24oKXt2YXIgdGhhdD10aGlzLGFyZ3M9YXJndW1lbnRzLHN0YXRlPXRoYXQuX19icnVzaCxzZWxlY3Rpb24xPWRpbS5pbnB1dCh0eXBlb2Ygc2VsZWN0aW9uPT09ImZ1bmN0aW9uIj9zZWxlY3Rpb24uYXBwbHkodGhhdCxhcmdzKTpzZWxlY3Rpb24sc3RhdGUuZXh0ZW50KSxlbWl0PWVtaXR0ZXIodGhhdCxhcmdzKS5iZWZvcmVzdGFydCgpO2QzVHJhbnNpdGlvbi5pbnRlcnJ1cHQodGhhdCk7c3RhdGUuc2VsZWN0aW9uPXNlbGVjdGlvbjE9PT1udWxsP251bGw6c2VsZWN0aW9uMTtyZWRyYXcuY2FsbCh0aGF0KTtlbWl0LnN0YXJ0KCkuYnJ1c2goKS5lbmQoKX0pfX07YnJ1c2guY2xlYXI9ZnVuY3Rpb24oZ3JvdXApe2JydXNoLm1vdmUoZ3JvdXAsbnVsbCl9O2Z1bmN0aW9uIHJlZHJhdygpe3ZhciBncm91cD1kM1NlbGVjdGlvbi5zZWxlY3QodGhpcyksc2VsZWN0aW9uPWxvY2FsKHRoaXMpLnNlbGVjdGlvbjtpZihzZWxlY3Rpb24pe2dyb3VwLnNlbGVjdEFsbCgiLnNlbGVjdGlvbiIpLnN0eWxlKCJkaXNwbGF5IixudWxsKS5hdHRyKCJ4IixzZWxlY3Rpb25bMF1bMF0pLmF0dHIoInkiLHNlbGVjdGlvblswXVsxXSkuYXR0cigid2lkdGgiLHNlbGVjdGlvblsxXVswXS1zZWxlY3Rpb25bMF1bMF0pLmF0dHIoImhlaWdodCIsc2VsZWN0aW9uWzFdWzFdLXNlbGVjdGlvblswXVsxXSk7Z3JvdXAuc2VsZWN0QWxsKCIuaGFuZGxlIikuc3R5bGUoImRpc3BsYXkiLG51bGwpLmF0dHIoIngiLGZ1bmN0aW9uKGQpe3JldHVybiBkLnR5cGVbZC50eXBlLmxlbmd0aC0xXT09PSJlIj9zZWxlY3Rpb25bMV1bMF0taGFuZGxlU2l6ZS8yOnNlbGVjdGlvblswXVswXS1oYW5kbGVTaXplLzJ9KS5hdHRyKCJ5IixmdW5jdGlvbihkKXtyZXR1cm4gZC50eXBlWzBdPT09InMiP3NlbGVjdGlvblsxXVsxXS1oYW5kbGVTaXplLzI6c2VsZWN0aW9uWzBdWzFdLWhhbmRsZVNpemUvMn0pLmF0dHIoIndpZHRoIixmdW5jdGlvbihkKXtyZXR1cm4gZC50eXBlPT09Im4ifHxkLnR5cGU9PT0icyI/c2VsZWN0aW9uWzFdWzBdLXNlbGVjdGlvblswXVswXStoYW5kbGVTaXplOmhhbmRsZVNpemV9KS5hdHRyKCJoZWlnaHQiLGZ1bmN0aW9uKGQpe3JldHVybiBkLnR5cGU9PT0iZSJ8fGQudHlwZT09PSJ3Ij9zZWxlY3Rpb25bMV1bMV0tc2VsZWN0aW9uWzBdWzFdK2hhbmRsZVNpemU6aGFuZGxlU2l6ZX0pfWVsc2V7Z3JvdXAuc2VsZWN0QWxsKCIuc2VsZWN0aW9uLC5oYW5kbGUiKS5zdHlsZSgiZGlzcGxheSIsIm5vbmUiKS5hdHRyKCJ4IixudWxsKS5hdHRyKCJ5IixudWxsKS5hdHRyKCJ3aWR0aCIsbnVsbCkuYXR0cigiaGVpZ2h0IixudWxsKX19ZnVuY3Rpb24gZW1pdHRlcih0aGF0LGFyZ3MsY2xlYW4pe3JldHVybiFjbGVhbiYmdGhhdC5fX2JydXNoLmVtaXR0ZXJ8fG5ldyBFbWl0dGVyKHRoYXQsYXJncyl9ZnVuY3Rpb24gRW1pdHRlcih0aGF0LGFyZ3Mpe3RoaXMudGhhdD10aGF0O3RoaXMuYXJncz1hcmdzO3RoaXMuc3RhdGU9dGhhdC5fX2JydXNoO3RoaXMuYWN0aXZlPTB9RW1pdHRlci5wcm90b3R5cGU9e2JlZm9yZXN0YXJ0OmZ1bmN0aW9uKCl7aWYoKyt0aGlzLmFjdGl2ZT09PTEpdGhpcy5zdGF0ZS5lbWl0dGVyPXRoaXMsdGhpcy5zdGFydGluZz10cnVlO3JldHVybiB0aGlzfSxzdGFydDpmdW5jdGlvbigpe2lmKHRoaXMuc3RhcnRpbmcpdGhpcy5zdGFydGluZz1mYWxzZSx0aGlzLmVtaXQoInN0YXJ0Iik7ZWxzZSB0aGlzLmVtaXQoImJydXNoIik7cmV0dXJuIHRoaXN9LGJydXNoOmZ1bmN0aW9uKCl7dGhpcy5lbWl0KCJicnVzaCIpO3JldHVybiB0aGlzfSxlbmQ6ZnVuY3Rpb24oKXtpZigtLXRoaXMuYWN0aXZlPT09MClkZWxldGUgdGhpcy5zdGF0ZS5lbWl0dGVyLHRoaXMuZW1pdCgiZW5kIik7cmV0dXJuIHRoaXN9LGVtaXQ6ZnVuY3Rpb24odHlwZSl7ZDNTZWxlY3Rpb24uY3VzdG9tRXZlbnQobmV3IEJydXNoRXZlbnQoYnJ1c2gsdHlwZSxkaW0ub3V0cHV0KHRoaXMuc3RhdGUuc2VsZWN0aW9uKSksbGlzdGVuZXJzLmFwcGx5LGxpc3RlbmVycyxbdHlwZSx0aGlzLnRoYXQsdGhpcy5hcmdzXSl9fTtmdW5jdGlvbiBzdGFydGVkKCl7aWYodG91Y2hlbmRpbmcmJiFkM1NlbGVjdGlvbi5ldmVudC50b3VjaGVzKXJldHVybjtpZighZmlsdGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSlyZXR1cm47dmFyIHRoYXQ9dGhpcyx0eXBlPWQzU2VsZWN0aW9uLmV2ZW50LnRhcmdldC5fX2RhdGFfXy50eXBlLG1vZGU9KGtleXMmJmQzU2VsZWN0aW9uLmV2ZW50Lm1ldGFLZXk/dHlwZT0ib3ZlcmxheSI6dHlwZSk9PT0ic2VsZWN0aW9uIj9NT0RFX0RSQUc6a2V5cyYmZDNTZWxlY3Rpb24uZXZlbnQuYWx0S2V5P01PREVfQ0VOVEVSOk1PREVfSEFORExFLHNpZ25YPWRpbT09PVk/bnVsbDpzaWduc1hbdHlwZV0sc2lnblk9ZGltPT09WD9udWxsOnNpZ25zWVt0eXBlXSxzdGF0ZT1sb2NhbCh0aGF0KSxleHRlbnQ9c3RhdGUuZXh0ZW50LHNlbGVjdGlvbj1zdGF0ZS5zZWxlY3Rpb24sVz1leHRlbnRbMF1bMF0sdzAsdzEsTj1leHRlbnRbMF1bMV0sbjAsbjEsRT1leHRlbnRbMV1bMF0sZTAsZTEsUz1leHRlbnRbMV1bMV0sczAsczEsZHg9MCxkeT0wLG1vdmluZyxzaGlmdGluZz1zaWduWCYmc2lnblkmJmtleXMmJmQzU2VsZWN0aW9uLmV2ZW50LnNoaWZ0S2V5LGxvY2tYLGxvY2tZLHBvaW50ZXI9ZDNTZWxlY3Rpb24uZXZlbnQudG91Y2hlcz90b3VjaGVyKGQzU2VsZWN0aW9uLmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXIpOmQzU2VsZWN0aW9uLm1vdXNlLHBvaW50MD1wb2ludGVyKHRoYXQpLHBvaW50PXBvaW50MCxlbWl0PWVtaXR0ZXIodGhhdCxhcmd1bWVudHMsdHJ1ZSkuYmVmb3Jlc3RhcnQoKTtpZih0eXBlPT09Im92ZXJsYXkiKXtpZihzZWxlY3Rpb24pbW92aW5nPXRydWU7c3RhdGUuc2VsZWN0aW9uPXNlbGVjdGlvbj1bW3cwPWRpbT09PVk/Vzpwb2ludDBbMF0sbjA9ZGltPT09WD9OOnBvaW50MFsxXV0sW2UwPWRpbT09PVk/RTp3MCxzMD1kaW09PT1YP1M6bjBdXX1lbHNle3cwPXNlbGVjdGlvblswXVswXTtuMD1zZWxlY3Rpb25bMF1bMV07ZTA9c2VsZWN0aW9uWzFdWzBdO3MwPXNlbGVjdGlvblsxXVsxXX13MT13MDtuMT1uMDtlMT1lMDtzMT1zMDt2YXIgZ3JvdXA9ZDNTZWxlY3Rpb24uc2VsZWN0KHRoYXQpLmF0dHIoInBvaW50ZXItZXZlbnRzIiwibm9uZSIpO3ZhciBvdmVybGF5PWdyb3VwLnNlbGVjdEFsbCgiLm92ZXJsYXkiKS5hdHRyKCJjdXJzb3IiLGN1cnNvcnNbdHlwZV0pO2lmKGQzU2VsZWN0aW9uLmV2ZW50LnRvdWNoZXMpe2VtaXQubW92ZWQ9bW92ZWQ7ZW1pdC5lbmRlZD1lbmRlZH1lbHNle3ZhciB2aWV3PWQzU2VsZWN0aW9uLnNlbGVjdChkM1NlbGVjdGlvbi5ldmVudC52aWV3KS5vbigibW91c2Vtb3ZlLmJydXNoIixtb3ZlZCx0cnVlKS5vbigibW91c2V1cC5icnVzaCIsZW5kZWQsdHJ1ZSk7aWYoa2V5cyl2aWV3Lm9uKCJrZXlkb3duLmJydXNoIixrZXlkb3duZWQsdHJ1ZSkub24oImtleXVwLmJydXNoIixrZXl1cHBlZCx0cnVlKTtkM0RyYWcuZHJhZ0Rpc2FibGUoZDNTZWxlY3Rpb24uZXZlbnQudmlldyl9bm9wcm9wYWdhdGlvbigpO2QzVHJhbnNpdGlvbi5pbnRlcnJ1cHQodGhhdCk7cmVkcmF3LmNhbGwodGhhdCk7ZW1pdC5zdGFydCgpO2Z1bmN0aW9uIG1vdmVkKCl7dmFyIHBvaW50MT1wb2ludGVyKHRoYXQpO2lmKHNoaWZ0aW5nJiYhbG9ja1gmJiFsb2NrWSl7aWYoTWF0aC5hYnMocG9pbnQxWzBdLXBvaW50WzBdKT5NYXRoLmFicyhwb2ludDFbMV0tcG9pbnRbMV0pKWxvY2tZPXRydWU7ZWxzZSBsb2NrWD10cnVlfXBvaW50PXBvaW50MTttb3Zpbmc9dHJ1ZTtub2V2ZW50KCk7bW92ZSgpfWZ1bmN0aW9uIG1vdmUoKXt2YXIgdDtkeD1wb2ludFswXS1wb2ludDBbMF07ZHk9cG9pbnRbMV0tcG9pbnQwWzFdO3N3aXRjaChtb2RlKXtjYXNlIE1PREVfU1BBQ0U6Y2FzZSBNT0RFX0RSQUc6e2lmKHNpZ25YKWR4PU1hdGgubWF4KFctdzAsTWF0aC5taW4oRS1lMCxkeCkpLHcxPXcwK2R4LGUxPWUwK2R4O2lmKHNpZ25ZKWR5PU1hdGgubWF4KE4tbjAsTWF0aC5taW4oUy1zMCxkeSkpLG4xPW4wK2R5LHMxPXMwK2R5O2JyZWFrfWNhc2UgTU9ERV9IQU5ETEU6e2lmKHNpZ25YPDApZHg9TWF0aC5tYXgoVy13MCxNYXRoLm1pbihFLXcwLGR4KSksdzE9dzArZHgsZTE9ZTA7ZWxzZSBpZihzaWduWD4wKWR4PU1hdGgubWF4KFctZTAsTWF0aC5taW4oRS1lMCxkeCkpLHcxPXcwLGUxPWUwK2R4O2lmKHNpZ25ZPDApZHk9TWF0aC5tYXgoTi1uMCxNYXRoLm1pbihTLW4wLGR5KSksbjE9bjArZHksczE9czA7ZWxzZSBpZihzaWduWT4wKWR5PU1hdGgubWF4KE4tczAsTWF0aC5taW4oUy1zMCxkeSkpLG4xPW4wLHMxPXMwK2R5O2JyZWFrfWNhc2UgTU9ERV9DRU5URVI6e2lmKHNpZ25YKXcxPU1hdGgubWF4KFcsTWF0aC5taW4oRSx3MC1keCpzaWduWCkpLGUxPU1hdGgubWF4KFcsTWF0aC5taW4oRSxlMCtkeCpzaWduWCkpO2lmKHNpZ25ZKW4xPU1hdGgubWF4KE4sTWF0aC5taW4oUyxuMC1keSpzaWduWSkpLHMxPU1hdGgubWF4KE4sTWF0aC5taW4oUyxzMCtkeSpzaWduWSkpO2JyZWFrfX1pZihlMTx3MSl7c2lnblgqPS0xO3Q9dzAsdzA9ZTAsZTA9dDt0PXcxLHcxPWUxLGUxPXQ7aWYodHlwZSBpbiBmbGlwWClvdmVybGF5LmF0dHIoImN1cnNvciIsY3Vyc29yc1t0eXBlPWZsaXBYW3R5cGVdXSl9aWYoczE8bjEpe3NpZ25ZKj0tMTt0PW4wLG4wPXMwLHMwPXQ7dD1uMSxuMT1zMSxzMT10O2lmKHR5cGUgaW4gZmxpcFkpb3ZlcmxheS5hdHRyKCJjdXJzb3IiLGN1cnNvcnNbdHlwZT1mbGlwWVt0eXBlXV0pfWlmKHN0YXRlLnNlbGVjdGlvbilzZWxlY3Rpb249c3RhdGUuc2VsZWN0aW9uOy8vIE1heSBiZSBzZXQgYnkgYnJ1c2gubW92ZSEKaWYobG9ja1gpdzE9c2VsZWN0aW9uWzBdWzBdLGUxPXNlbGVjdGlvblsxXVswXTtpZihsb2NrWSluMT1zZWxlY3Rpb25bMF1bMV0sczE9c2VsZWN0aW9uWzFdWzFdO2lmKHNlbGVjdGlvblswXVswXSE9PXcxfHxzZWxlY3Rpb25bMF1bMV0hPT1uMXx8c2VsZWN0aW9uWzFdWzBdIT09ZTF8fHNlbGVjdGlvblsxXVsxXSE9PXMxKXtzdGF0ZS5zZWxlY3Rpb249W1t3MSxuMV0sW2UxLHMxXV07cmVkcmF3LmNhbGwodGhhdCk7ZW1pdC5icnVzaCgpfX1mdW5jdGlvbiBlbmRlZCgpe25vcHJvcGFnYXRpb24oKTtpZihkM1NlbGVjdGlvbi5ldmVudC50b3VjaGVzKXtpZihkM1NlbGVjdGlvbi5ldmVudC50b3VjaGVzLmxlbmd0aClyZXR1cm47aWYodG91Y2hlbmRpbmcpY2xlYXJUaW1lb3V0KHRvdWNoZW5kaW5nKTt0b3VjaGVuZGluZz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dG91Y2hlbmRpbmc9bnVsbH0sNTAwKTsvLyBHaG9zdCBjbGlja3MgYXJlIGRlbGF5ZWQhCn1lbHNle2QzRHJhZy5kcmFnRW5hYmxlKGQzU2VsZWN0aW9uLmV2ZW50LnZpZXcsbW92aW5nKTt2aWV3Lm9uKCJrZXlkb3duLmJydXNoIGtleXVwLmJydXNoIG1vdXNlbW92ZS5icnVzaCBtb3VzZXVwLmJydXNoIixudWxsKX1ncm91cC5hdHRyKCJwb2ludGVyLWV2ZW50cyIsImFsbCIpO292ZXJsYXkuYXR0cigiY3Vyc29yIixjdXJzb3JzLm92ZXJsYXkpO2lmKHN0YXRlLnNlbGVjdGlvbilzZWxlY3Rpb249c3RhdGUuc2VsZWN0aW9uOy8vIE1heSBiZSBzZXQgYnkgYnJ1c2gubW92ZSAob24gc3RhcnQpIQppZihlbXB0eShzZWxlY3Rpb24pKXN0YXRlLnNlbGVjdGlvbj1udWxsLHJlZHJhdy5jYWxsKHRoYXQpO2VtaXQuZW5kKCl9ZnVuY3Rpb24ga2V5ZG93bmVkKCl7c3dpdGNoKGQzU2VsZWN0aW9uLmV2ZW50LmtleUNvZGUpe2Nhc2UgMTY6ey8vIFNISUZUCnNoaWZ0aW5nPXNpZ25YJiZzaWduWTticmVha31jYXNlIDE4OnsvLyBBTFQKaWYobW9kZT09PU1PREVfSEFORExFKXtpZihzaWduWCllMD1lMS1keCpzaWduWCx3MD13MStkeCpzaWduWDtpZihzaWduWSlzMD1zMS1keSpzaWduWSxuMD1uMStkeSpzaWduWTttb2RlPU1PREVfQ0VOVEVSO21vdmUoKX1icmVha31jYXNlIDMyOnsvLyBTUEFDRTsgdGFrZXMgcHJpb3JpdHkgb3ZlciBBTFQKaWYobW9kZT09PU1PREVfSEFORExFfHxtb2RlPT09TU9ERV9DRU5URVIpe2lmKHNpZ25YPDApZTA9ZTEtZHg7ZWxzZSBpZihzaWduWD4wKXcwPXcxLWR4O2lmKHNpZ25ZPDApczA9czEtZHk7ZWxzZSBpZihzaWduWT4wKW4wPW4xLWR5O21vZGU9TU9ERV9TUEFDRTtvdmVybGF5LmF0dHIoImN1cnNvciIsY3Vyc29ycy5zZWxlY3Rpb24pO21vdmUoKX1icmVha31kZWZhdWx0OnJldHVybn1ub2V2ZW50KCl9ZnVuY3Rpb24ga2V5dXBwZWQoKXtzd2l0Y2goZDNTZWxlY3Rpb24uZXZlbnQua2V5Q29kZSl7Y2FzZSAxNjp7Ly8gU0hJRlQKaWYoc2hpZnRpbmcpe2xvY2tYPWxvY2tZPXNoaWZ0aW5nPWZhbHNlO21vdmUoKX1icmVha31jYXNlIDE4OnsvLyBBTFQKaWYobW9kZT09PU1PREVfQ0VOVEVSKXtpZihzaWduWDwwKWUwPWUxO2Vsc2UgaWYoc2lnblg+MCl3MD13MTtpZihzaWduWTwwKXMwPXMxO2Vsc2UgaWYoc2lnblk+MCluMD1uMTttb2RlPU1PREVfSEFORExFO21vdmUoKX1icmVha31jYXNlIDMyOnsvLyBTUEFDRQppZihtb2RlPT09TU9ERV9TUEFDRSl7aWYoZDNTZWxlY3Rpb24uZXZlbnQuYWx0S2V5KXtpZihzaWduWCllMD1lMS1keCpzaWduWCx3MD13MStkeCpzaWduWDtpZihzaWduWSlzMD1zMS1keSpzaWduWSxuMD1uMStkeSpzaWduWTttb2RlPU1PREVfQ0VOVEVSfWVsc2V7aWYoc2lnblg8MCllMD1lMTtlbHNlIGlmKHNpZ25YPjApdzA9dzE7aWYoc2lnblk8MClzMD1zMTtlbHNlIGlmKHNpZ25ZPjApbjA9bjE7bW9kZT1NT0RFX0hBTkRMRX1vdmVybGF5LmF0dHIoImN1cnNvciIsY3Vyc29yc1t0eXBlXSk7bW92ZSgpfWJyZWFrfWRlZmF1bHQ6cmV0dXJufW5vZXZlbnQoKX19ZnVuY3Rpb24gdG91Y2htb3ZlZCgpe2VtaXR0ZXIodGhpcyxhcmd1bWVudHMpLm1vdmVkKCl9ZnVuY3Rpb24gdG91Y2hlbmRlZCgpe2VtaXR0ZXIodGhpcyxhcmd1bWVudHMpLmVuZGVkKCl9ZnVuY3Rpb24gaW5pdGlhbGl6ZSgpe3ZhciBzdGF0ZT10aGlzLl9fYnJ1c2h8fHtzZWxlY3Rpb246bnVsbH07c3RhdGUuZXh0ZW50PW51bWJlcjIoZXh0ZW50LmFwcGx5KHRoaXMsYXJndW1lbnRzKSk7c3RhdGUuZGltPWRpbTtyZXR1cm4gc3RhdGV9YnJ1c2guZXh0ZW50PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhleHRlbnQ9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQobnVtYmVyMihfKSksYnJ1c2gpOmV4dGVudH07YnJ1c2guZmlsdGVyPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhmaWx0ZXI9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoISFfKSxicnVzaCk6ZmlsdGVyfTticnVzaC50b3VjaGFibGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRvdWNoYWJsZT10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCghIV8pLGJydXNoKTp0b3VjaGFibGV9O2JydXNoLmhhbmRsZVNpemU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGhhbmRsZVNpemU9K18sYnJ1c2gpOmhhbmRsZVNpemV9O2JydXNoLmtleU1vZGlmaWVycz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oa2V5cz0hIV8sYnJ1c2gpOmtleXN9O2JydXNoLm9uPWZ1bmN0aW9uKCl7dmFyIHZhbHVlPWxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsYXJndW1lbnRzKTtyZXR1cm4gdmFsdWU9PT1saXN0ZW5lcnM/YnJ1c2g6dmFsdWV9O3JldHVybiBicnVzaH1leHBvcnRzLmJydXNoPWJydXNoO2V4cG9ydHMuYnJ1c2hTZWxlY3Rpb249YnJ1c2hTZWxlY3Rpb247ZXhwb3J0cy5icnVzaFg9YnJ1c2hYO2V4cG9ydHMuYnJ1c2hZPWJydXNoWTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7ImQzLWRpc3BhdGNoIjozNiwiZDMtZHJhZyI6MzcsImQzLWludGVycG9sYXRlIjo0NSwiZDMtc2VsZWN0aW9uIjo1MiwiZDMtdHJhbnNpdGlvbiI6NTd9XSwzMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtY2hvcmQvIHYxLjAuNiBDb3B5cmlnaHQgMjAxOCBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzLHJlcXVpcmUoImQzLWFycmF5IikscmVxdWlyZSgiZDMtcGF0aCIpKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIiwiZDMtYXJyYXkiLCJkMy1wYXRoIl0sZmFjdG9yeSk6ZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMsZ2xvYmFsLmQzKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM0FycmF5LGQzUGF0aCl7InVzZSBzdHJpY3QiO3ZhciBjb3M9TWF0aC5jb3M7dmFyIHNpbj1NYXRoLnNpbjt2YXIgcGk9TWF0aC5QSTt2YXIgaGFsZlBpPXBpLzI7dmFyIHRhdT1waSoyO3ZhciBtYXg9TWF0aC5tYXg7ZnVuY3Rpb24gY29tcGFyZVZhbHVlKGNvbXBhcmUpe3JldHVybiBmdW5jdGlvbihhLGIpe3JldHVybiBjb21wYXJlKGEuc291cmNlLnZhbHVlK2EudGFyZ2V0LnZhbHVlLGIuc291cmNlLnZhbHVlK2IudGFyZ2V0LnZhbHVlKX19ZnVuY3Rpb24gY2hvcmQoKXt2YXIgcGFkQW5nbGU9MCxzb3J0R3JvdXBzPW51bGwsc29ydFN1Ymdyb3Vwcz1udWxsLHNvcnRDaG9yZHM9bnVsbDtmdW5jdGlvbiBjaG9yZChtYXRyaXgpe3ZhciBuPW1hdHJpeC5sZW5ndGgsZ3JvdXBTdW1zPVtdLGdyb3VwSW5kZXg9ZDNBcnJheS5yYW5nZShuKSxzdWJncm91cEluZGV4PVtdLGNob3Jkcz1bXSxncm91cHM9Y2hvcmRzLmdyb3Vwcz1uZXcgQXJyYXkobiksc3ViZ3JvdXBzPW5ldyBBcnJheShuKm4pLGsseCx4MCxkeCxpLGo7Ci8vIENvbXB1dGUgdGhlIHN1bS4Kaz0wLGk9LTE7d2hpbGUoKytpPG4pe3g9MCxqPS0xO3doaWxlKCsrajxuKXt4Kz1tYXRyaXhbaV1bal19Z3JvdXBTdW1zLnB1c2goeCk7c3ViZ3JvdXBJbmRleC5wdXNoKGQzQXJyYXkucmFuZ2UobikpO2srPXh9Ci8vIFNvcnQgZ3JvdXBz4oCmCmlmKHNvcnRHcm91cHMpZ3JvdXBJbmRleC5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIHNvcnRHcm91cHMoZ3JvdXBTdW1zW2FdLGdyb3VwU3Vtc1tiXSl9KTsKLy8gU29ydCBzdWJncm91cHPigKYKaWYoc29ydFN1Ymdyb3VwcylzdWJncm91cEluZGV4LmZvckVhY2goZnVuY3Rpb24oZCxpKXtkLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gc29ydFN1Ymdyb3VwcyhtYXRyaXhbaV1bYV0sbWF0cml4W2ldW2JdKX0pfSk7Ci8vIENvbnZlcnQgdGhlIHN1bSB0byBzY2FsaW5nIGZhY3RvciBmb3IgWzAsIDJwaV0uCi8vIFRPRE8gQWxsb3cgc3RhcnQgYW5kIGVuZCBhbmdsZSB0byBiZSBzcGVjaWZpZWQ/Ci8vIFRPRE8gQWxsb3cgcGFkZGluZyB0byBiZSBzcGVjaWZpZWQgYXMgcGVyY2VudGFnZT8Kaz1tYXgoMCx0YXUtcGFkQW5nbGUqbikvaztkeD1rP3BhZEFuZ2xlOnRhdS9uOwovLyBDb21wdXRlIHRoZSBzdGFydCBhbmQgZW5kIGFuZ2xlIGZvciBlYWNoIGdyb3VwIGFuZCBzdWJncm91cC4KLy8gTm90ZTogT3BlcmEgaGFzIGEgYnVnIHJlb3JkZXJpbmcgb2JqZWN0IGxpdGVyYWwgcHJvcGVydGllcyEKeD0wLGk9LTE7d2hpbGUoKytpPG4pe3gwPXgsaj0tMTt3aGlsZSgrK2o8bil7dmFyIGRpPWdyb3VwSW5kZXhbaV0sZGo9c3ViZ3JvdXBJbmRleFtkaV1bal0sdj1tYXRyaXhbZGldW2RqXSxhMD14LGExPXgrPXYqaztzdWJncm91cHNbZGoqbitkaV09e2luZGV4OmRpLHN1YmluZGV4OmRqLHN0YXJ0QW5nbGU6YTAsZW5kQW5nbGU6YTEsdmFsdWU6dn19Z3JvdXBzW2RpXT17aW5kZXg6ZGksc3RhcnRBbmdsZTp4MCxlbmRBbmdsZTp4LHZhbHVlOmdyb3VwU3Vtc1tkaV19O3grPWR4fQovLyBHZW5lcmF0ZSBjaG9yZHMgZm9yIGVhY2ggKG5vbi1lbXB0eSkgc3ViZ3JvdXAtc3ViZ3JvdXAgbGluay4KaT0tMTt3aGlsZSgrK2k8bil7aj1pLTE7d2hpbGUoKytqPG4pe3ZhciBzb3VyY2U9c3ViZ3JvdXBzW2oqbitpXSx0YXJnZXQ9c3ViZ3JvdXBzW2kqbitqXTtpZihzb3VyY2UudmFsdWV8fHRhcmdldC52YWx1ZSl7Y2hvcmRzLnB1c2goc291cmNlLnZhbHVlPHRhcmdldC52YWx1ZT97c291cmNlOnRhcmdldCx0YXJnZXQ6c291cmNlfTp7c291cmNlOnNvdXJjZSx0YXJnZXQ6dGFyZ2V0fSl9fX1yZXR1cm4gc29ydENob3Jkcz9jaG9yZHMuc29ydChzb3J0Q2hvcmRzKTpjaG9yZHN9Y2hvcmQucGFkQW5nbGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhZEFuZ2xlPW1heCgwLF8pLGNob3JkKTpwYWRBbmdsZX07Y2hvcmQuc29ydEdyb3Vwcz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc29ydEdyb3Vwcz1fLGNob3JkKTpzb3J0R3JvdXBzfTtjaG9yZC5zb3J0U3ViZ3JvdXBzPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzb3J0U3ViZ3JvdXBzPV8sY2hvcmQpOnNvcnRTdWJncm91cHN9O2Nob3JkLnNvcnRDaG9yZHM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KF89PW51bGw/c29ydENob3Jkcz1udWxsOihzb3J0Q2hvcmRzPWNvbXBhcmVWYWx1ZShfKSkuXz1fLGNob3JkKTpzb3J0Q2hvcmRzJiZzb3J0Q2hvcmRzLl99O3JldHVybiBjaG9yZH12YXIgc2xpY2U9QXJyYXkucHJvdG90eXBlLnNsaWNlO2Z1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB4fX1mdW5jdGlvbiBkZWZhdWx0U291cmNlKGQpe3JldHVybiBkLnNvdXJjZX1mdW5jdGlvbiBkZWZhdWx0VGFyZ2V0KGQpe3JldHVybiBkLnRhcmdldH1mdW5jdGlvbiBkZWZhdWx0UmFkaXVzKGQpe3JldHVybiBkLnJhZGl1c31mdW5jdGlvbiBkZWZhdWx0U3RhcnRBbmdsZShkKXtyZXR1cm4gZC5zdGFydEFuZ2xlfWZ1bmN0aW9uIGRlZmF1bHRFbmRBbmdsZShkKXtyZXR1cm4gZC5lbmRBbmdsZX1mdW5jdGlvbiByaWJib24oKXt2YXIgc291cmNlPWRlZmF1bHRTb3VyY2UsdGFyZ2V0PWRlZmF1bHRUYXJnZXQscmFkaXVzPWRlZmF1bHRSYWRpdXMsc3RhcnRBbmdsZT1kZWZhdWx0U3RhcnRBbmdsZSxlbmRBbmdsZT1kZWZhdWx0RW5kQW5nbGUsY29udGV4dD1udWxsO2Z1bmN0aW9uIHJpYmJvbigpe3ZhciBidWZmZXIsYXJndj1zbGljZS5jYWxsKGFyZ3VtZW50cykscz1zb3VyY2UuYXBwbHkodGhpcyxhcmd2KSx0PXRhcmdldC5hcHBseSh0aGlzLGFyZ3YpLHNyPStyYWRpdXMuYXBwbHkodGhpcywoYXJndlswXT1zLGFyZ3YpKSxzYTA9c3RhcnRBbmdsZS5hcHBseSh0aGlzLGFyZ3YpLWhhbGZQaSxzYTE9ZW5kQW5nbGUuYXBwbHkodGhpcyxhcmd2KS1oYWxmUGksc3gwPXNyKmNvcyhzYTApLHN5MD1zcipzaW4oc2EwKSx0cj0rcmFkaXVzLmFwcGx5KHRoaXMsKGFyZ3ZbMF09dCxhcmd2KSksdGEwPXN0YXJ0QW5nbGUuYXBwbHkodGhpcyxhcmd2KS1oYWxmUGksdGExPWVuZEFuZ2xlLmFwcGx5KHRoaXMsYXJndiktaGFsZlBpO2lmKCFjb250ZXh0KWNvbnRleHQ9YnVmZmVyPWQzUGF0aC5wYXRoKCk7Y29udGV4dC5tb3ZlVG8oc3gwLHN5MCk7Y29udGV4dC5hcmMoMCwwLHNyLHNhMCxzYTEpO2lmKHNhMCE9PXRhMHx8c2ExIT09dGExKXsvLyBUT0RPIHNyICE9PSB0cj8KY29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKDAsMCx0cipjb3ModGEwKSx0cipzaW4odGEwKSk7Y29udGV4dC5hcmMoMCwwLHRyLHRhMCx0YTEpfWNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLDAsc3gwLHN5MCk7Y29udGV4dC5jbG9zZVBhdGgoKTtpZihidWZmZXIpcmV0dXJuIGNvbnRleHQ9bnVsbCxidWZmZXIrIiJ8fG51bGx9cmliYm9uLnJhZGl1cz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocmFkaXVzPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxyaWJib24pOnJhZGl1c307cmliYm9uLnN0YXJ0QW5nbGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHN0YXJ0QW5nbGU9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLHJpYmJvbik6c3RhcnRBbmdsZX07cmliYm9uLmVuZEFuZ2xlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhlbmRBbmdsZT10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXykscmliYm9uKTplbmRBbmdsZX07cmliYm9uLnNvdXJjZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc291cmNlPV8scmliYm9uKTpzb3VyY2V9O3JpYmJvbi50YXJnZXQ9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRhcmdldD1fLHJpYmJvbik6dGFyZ2V0fTtyaWJib24uY29udGV4dD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oY29udGV4dD1fPT1udWxsP251bGw6XyxyaWJib24pOmNvbnRleHR9O3JldHVybiByaWJib259ZXhwb3J0cy5jaG9yZD1jaG9yZDtleHBvcnRzLnJpYmJvbj1yaWJib247T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0seyJkMy1hcnJheSI6MjksImQzLXBhdGgiOjQ2fV0sMzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLWNvbGxlY3Rpb24vIHYxLjAuNyBDb3B5cmlnaHQgMjAxOCBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZmFjdG9yeSk6ZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgcHJlZml4PSIkIjtmdW5jdGlvbiBNYXAoKXt9TWFwLnByb3RvdHlwZT1tYXAucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpNYXAsaGFzOmZ1bmN0aW9uKGtleSl7cmV0dXJuIHByZWZpeCtrZXkgaW4gdGhpc30sZ2V0OmZ1bmN0aW9uKGtleSl7cmV0dXJuIHRoaXNbcHJlZml4K2tleV19LHNldDpmdW5jdGlvbihrZXksdmFsdWUpe3RoaXNbcHJlZml4K2tleV09dmFsdWU7cmV0dXJuIHRoaXN9LHJlbW92ZTpmdW5jdGlvbihrZXkpe3ZhciBwcm9wZXJ0eT1wcmVmaXgra2V5O3JldHVybiBwcm9wZXJ0eSBpbiB0aGlzJiZkZWxldGUgdGhpc1twcm9wZXJ0eV19LGNsZWFyOmZ1bmN0aW9uKCl7Zm9yKHZhciBwcm9wZXJ0eSBpbiB0aGlzKWlmKHByb3BlcnR5WzBdPT09cHJlZml4KWRlbGV0ZSB0aGlzW3Byb3BlcnR5XX0sa2V5czpmdW5jdGlvbigpe3ZhciBrZXlzPVtdO2Zvcih2YXIgcHJvcGVydHkgaW4gdGhpcylpZihwcm9wZXJ0eVswXT09PXByZWZpeClrZXlzLnB1c2gocHJvcGVydHkuc2xpY2UoMSkpO3JldHVybiBrZXlzfSx2YWx1ZXM6ZnVuY3Rpb24oKXt2YXIgdmFsdWVzPVtdO2Zvcih2YXIgcHJvcGVydHkgaW4gdGhpcylpZihwcm9wZXJ0eVswXT09PXByZWZpeCl2YWx1ZXMucHVzaCh0aGlzW3Byb3BlcnR5XSk7cmV0dXJuIHZhbHVlc30sZW50cmllczpmdW5jdGlvbigpe3ZhciBlbnRyaWVzPVtdO2Zvcih2YXIgcHJvcGVydHkgaW4gdGhpcylpZihwcm9wZXJ0eVswXT09PXByZWZpeCllbnRyaWVzLnB1c2goe2tleTpwcm9wZXJ0eS5zbGljZSgxKSx2YWx1ZTp0aGlzW3Byb3BlcnR5XX0pO3JldHVybiBlbnRyaWVzfSxzaXplOmZ1bmN0aW9uKCl7dmFyIHNpemU9MDtmb3IodmFyIHByb3BlcnR5IGluIHRoaXMpaWYocHJvcGVydHlbMF09PT1wcmVmaXgpKytzaXplO3JldHVybiBzaXplfSxlbXB0eTpmdW5jdGlvbigpe2Zvcih2YXIgcHJvcGVydHkgaW4gdGhpcylpZihwcm9wZXJ0eVswXT09PXByZWZpeClyZXR1cm4gZmFsc2U7cmV0dXJuIHRydWV9LGVhY2g6ZnVuY3Rpb24oZil7Zm9yKHZhciBwcm9wZXJ0eSBpbiB0aGlzKWlmKHByb3BlcnR5WzBdPT09cHJlZml4KWYodGhpc1twcm9wZXJ0eV0scHJvcGVydHkuc2xpY2UoMSksdGhpcyl9fTtmdW5jdGlvbiBtYXAob2JqZWN0LGYpe3ZhciBtYXA9bmV3IE1hcDsKLy8gQ29weSBjb25zdHJ1Y3Rvci4KaWYob2JqZWN0IGluc3RhbmNlb2YgTWFwKW9iamVjdC5lYWNoKGZ1bmN0aW9uKHZhbHVlLGtleSl7bWFwLnNldChrZXksdmFsdWUpfSk7Ci8vIEluZGV4IGFycmF5IGJ5IG51bWVyaWMgaW5kZXggb3Igc3BlY2lmaWVkIGtleSBmdW5jdGlvbi4KZWxzZSBpZihBcnJheS5pc0FycmF5KG9iamVjdCkpe3ZhciBpPS0xLG49b2JqZWN0Lmxlbmd0aCxvO2lmKGY9PW51bGwpd2hpbGUoKytpPG4pbWFwLnNldChpLG9iamVjdFtpXSk7ZWxzZSB3aGlsZSgrK2k8biltYXAuc2V0KGYobz1vYmplY3RbaV0saSxvYmplY3QpLG8pfQovLyBDb252ZXJ0IG9iamVjdCB0byBtYXAuCmVsc2UgaWYob2JqZWN0KWZvcih2YXIga2V5IGluIG9iamVjdCltYXAuc2V0KGtleSxvYmplY3Rba2V5XSk7cmV0dXJuIG1hcH1mdW5jdGlvbiBuZXN0KCl7dmFyIGtleXM9W10sc29ydEtleXM9W10sc29ydFZhbHVlcyxyb2xsdXAsbmVzdDtmdW5jdGlvbiBhcHBseShhcnJheSxkZXB0aCxjcmVhdGVSZXN1bHQsc2V0UmVzdWx0KXtpZihkZXB0aD49a2V5cy5sZW5ndGgpe2lmKHNvcnRWYWx1ZXMhPW51bGwpYXJyYXkuc29ydChzb3J0VmFsdWVzKTtyZXR1cm4gcm9sbHVwIT1udWxsP3JvbGx1cChhcnJheSk6YXJyYXl9dmFyIGk9LTEsbj1hcnJheS5sZW5ndGgsa2V5PWtleXNbZGVwdGgrK10sa2V5VmFsdWUsdmFsdWUsdmFsdWVzQnlLZXk9bWFwKCksdmFsdWVzLHJlc3VsdD1jcmVhdGVSZXN1bHQoKTt3aGlsZSgrK2k8bil7aWYodmFsdWVzPXZhbHVlc0J5S2V5LmdldChrZXlWYWx1ZT1rZXkodmFsdWU9YXJyYXlbaV0pKyIiKSl7dmFsdWVzLnB1c2godmFsdWUpfWVsc2V7dmFsdWVzQnlLZXkuc2V0KGtleVZhbHVlLFt2YWx1ZV0pfX12YWx1ZXNCeUtleS5lYWNoKGZ1bmN0aW9uKHZhbHVlcyxrZXkpe3NldFJlc3VsdChyZXN1bHQsa2V5LGFwcGx5KHZhbHVlcyxkZXB0aCxjcmVhdGVSZXN1bHQsc2V0UmVzdWx0KSl9KTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGVudHJpZXMobWFwJCQxLGRlcHRoKXtpZigrK2RlcHRoPmtleXMubGVuZ3RoKXJldHVybiBtYXAkJDE7dmFyIGFycmF5LHNvcnRLZXk9c29ydEtleXNbZGVwdGgtMV07aWYocm9sbHVwIT1udWxsJiZkZXB0aD49a2V5cy5sZW5ndGgpYXJyYXk9bWFwJCQxLmVudHJpZXMoKTtlbHNlIGFycmF5PVtdLG1hcCQkMS5lYWNoKGZ1bmN0aW9uKHYsayl7YXJyYXkucHVzaCh7a2V5OmssdmFsdWVzOmVudHJpZXModixkZXB0aCl9KX0pO3JldHVybiBzb3J0S2V5IT1udWxsP2FycmF5LnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gc29ydEtleShhLmtleSxiLmtleSl9KTphcnJheX1yZXR1cm4gbmVzdD17b2JqZWN0OmZ1bmN0aW9uKGFycmF5KXtyZXR1cm4gYXBwbHkoYXJyYXksMCxjcmVhdGVPYmplY3Qsc2V0T2JqZWN0KX0sbWFwOmZ1bmN0aW9uKGFycmF5KXtyZXR1cm4gYXBwbHkoYXJyYXksMCxjcmVhdGVNYXAsc2V0TWFwKX0sZW50cmllczpmdW5jdGlvbihhcnJheSl7cmV0dXJuIGVudHJpZXMoYXBwbHkoYXJyYXksMCxjcmVhdGVNYXAsc2V0TWFwKSwwKX0sa2V5OmZ1bmN0aW9uKGQpe2tleXMucHVzaChkKTtyZXR1cm4gbmVzdH0sc29ydEtleXM6ZnVuY3Rpb24ob3JkZXIpe3NvcnRLZXlzW2tleXMubGVuZ3RoLTFdPW9yZGVyO3JldHVybiBuZXN0fSxzb3J0VmFsdWVzOmZ1bmN0aW9uKG9yZGVyKXtzb3J0VmFsdWVzPW9yZGVyO3JldHVybiBuZXN0fSxyb2xsdXA6ZnVuY3Rpb24oZil7cm9sbHVwPWY7cmV0dXJuIG5lc3R9fX1mdW5jdGlvbiBjcmVhdGVPYmplY3QoKXtyZXR1cm57fX1mdW5jdGlvbiBzZXRPYmplY3Qob2JqZWN0LGtleSx2YWx1ZSl7b2JqZWN0W2tleV09dmFsdWV9ZnVuY3Rpb24gY3JlYXRlTWFwKCl7cmV0dXJuIG1hcCgpfWZ1bmN0aW9uIHNldE1hcChtYXAkJDEsa2V5LHZhbHVlKXttYXAkJDEuc2V0KGtleSx2YWx1ZSl9ZnVuY3Rpb24gU2V0KCl7fXZhciBwcm90bz1tYXAucHJvdG90eXBlO1NldC5wcm90b3R5cGU9c2V0LnByb3RvdHlwZT17Y29uc3RydWN0b3I6U2V0LGhhczpwcm90by5oYXMsYWRkOmZ1bmN0aW9uKHZhbHVlKXt2YWx1ZSs9IiI7dGhpc1twcmVmaXgrdmFsdWVdPXZhbHVlO3JldHVybiB0aGlzfSxyZW1vdmU6cHJvdG8ucmVtb3ZlLGNsZWFyOnByb3RvLmNsZWFyLHZhbHVlczpwcm90by5rZXlzLHNpemU6cHJvdG8uc2l6ZSxlbXB0eTpwcm90by5lbXB0eSxlYWNoOnByb3RvLmVhY2h9O2Z1bmN0aW9uIHNldChvYmplY3QsZil7dmFyIHNldD1uZXcgU2V0OwovLyBDb3B5IGNvbnN0cnVjdG9yLgppZihvYmplY3QgaW5zdGFuY2VvZiBTZXQpb2JqZWN0LmVhY2goZnVuY3Rpb24odmFsdWUpe3NldC5hZGQodmFsdWUpfSk7Ci8vIE90aGVyd2lzZSwgYXNzdW1lIGl04oCZcyBhbiBhcnJheS4KZWxzZSBpZihvYmplY3Qpe3ZhciBpPS0xLG49b2JqZWN0Lmxlbmd0aDtpZihmPT1udWxsKXdoaWxlKCsraTxuKXNldC5hZGQob2JqZWN0W2ldKTtlbHNlIHdoaWxlKCsraTxuKXNldC5hZGQoZihvYmplY3RbaV0saSxvYmplY3QpKX1yZXR1cm4gc2V0fWZ1bmN0aW9uIGtleXMobWFwKXt2YXIga2V5cz1bXTtmb3IodmFyIGtleSBpbiBtYXApa2V5cy5wdXNoKGtleSk7cmV0dXJuIGtleXN9ZnVuY3Rpb24gdmFsdWVzKG1hcCl7dmFyIHZhbHVlcz1bXTtmb3IodmFyIGtleSBpbiBtYXApdmFsdWVzLnB1c2gobWFwW2tleV0pO3JldHVybiB2YWx1ZXN9ZnVuY3Rpb24gZW50cmllcyhtYXApe3ZhciBlbnRyaWVzPVtdO2Zvcih2YXIga2V5IGluIG1hcCllbnRyaWVzLnB1c2goe2tleTprZXksdmFsdWU6bWFwW2tleV19KTtyZXR1cm4gZW50cmllc31leHBvcnRzLm5lc3Q9bmVzdDtleHBvcnRzLnNldD1zZXQ7ZXhwb3J0cy5tYXA9bWFwO2V4cG9ydHMua2V5cz1rZXlzO2V4cG9ydHMudmFsdWVzPXZhbHVlcztleHBvcnRzLmVudHJpZXM9ZW50cmllcztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7fV0sMzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLWNvbG9yLyB2MS40LjAgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyJdLGZhY3RvcnkpOihnbG9iYWw9Z2xvYmFsfHxzZWxmLGZhY3RvcnkoZ2xvYmFsLmQzPWdsb2JhbC5kM3x8e30pKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGRlZmluZShjb25zdHJ1Y3RvcixmYWN0b3J5LHByb3RvdHlwZSl7Y29uc3RydWN0b3IucHJvdG90eXBlPWZhY3RvcnkucHJvdG90eXBlPXByb3RvdHlwZTtwcm90b3R5cGUuY29uc3RydWN0b3I9Y29uc3RydWN0b3J9ZnVuY3Rpb24gZXh0ZW5kKHBhcmVudCxkZWZpbml0aW9uKXt2YXIgcHJvdG90eXBlPU9iamVjdC5jcmVhdGUocGFyZW50LnByb3RvdHlwZSk7Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbilwcm90b3R5cGVba2V5XT1kZWZpbml0aW9uW2tleV07cmV0dXJuIHByb3RvdHlwZX1mdW5jdGlvbiBDb2xvcigpe312YXIgZGFya2VyPS43O3ZhciBicmlnaHRlcj0xL2Rhcmtlcjt2YXIgcmVJPSJcXHMqKFsrLV0/XFxkKylcXHMqIixyZU49IlxccyooWystXT9cXGQqXFwuP1xcZCsoPzpbZUVdWystXT9cXGQrKT8pXFxzKiIscmVQPSJcXHMqKFsrLV0/XFxkKlxcLj9cXGQrKD86W2VFXVsrLV0/XFxkKyk/KSVcXHMqIixyZUhleD0vXiMoWzAtOWEtZl17Myw4fSkkLyxyZVJnYkludGVnZXI9bmV3IFJlZ0V4cCgiXnJnYlxcKCIrW3JlSSxyZUkscmVJXSsiXFwpJCIpLHJlUmdiUGVyY2VudD1uZXcgUmVnRXhwKCJecmdiXFwoIitbcmVQLHJlUCxyZVBdKyJcXCkkIikscmVSZ2JhSW50ZWdlcj1uZXcgUmVnRXhwKCJecmdiYVxcKCIrW3JlSSxyZUkscmVJLHJlTl0rIlxcKSQiKSxyZVJnYmFQZXJjZW50PW5ldyBSZWdFeHAoIl5yZ2JhXFwoIitbcmVQLHJlUCxyZVAscmVOXSsiXFwpJCIpLHJlSHNsUGVyY2VudD1uZXcgUmVnRXhwKCJeaHNsXFwoIitbcmVOLHJlUCxyZVBdKyJcXCkkIikscmVIc2xhUGVyY2VudD1uZXcgUmVnRXhwKCJeaHNsYVxcKCIrW3JlTixyZVAscmVQLHJlTl0rIlxcKSQiKTt2YXIgbmFtZWQ9e2FsaWNlYmx1ZToxNTc5MjM4MyxhbnRpcXVld2hpdGU6MTY0NDQzNzUsYXF1YTo2NTUzNSxhcXVhbWFyaW5lOjgzODg1NjQsYXp1cmU6MTU3OTQxNzUsYmVpZ2U6MTYxMTkyNjAsYmlzcXVlOjE2NzcwMjQ0LGJsYWNrOjAsYmxhbmNoZWRhbG1vbmQ6MTY3NzIwNDUsYmx1ZToyNTUsYmx1ZXZpb2xldDo5MDU1MjAyLGJyb3duOjEwODI0MjM0LGJ1cmx5d29vZDoxNDU5NjIzMSxjYWRldGJsdWU6NjI2NjUyOCxjaGFydHJldXNlOjgzODgzNTIsY2hvY29sYXRlOjEzNzg5NDcwLGNvcmFsOjE2NzQ0MjcyLGNvcm5mbG93ZXJibHVlOjY1OTE5ODEsY29ybnNpbGs6MTY3NzUzODgsY3JpbXNvbjoxNDQyMzEwMCxjeWFuOjY1NTM1LGRhcmtibHVlOjEzOSxkYXJrY3lhbjozNTcyMyxkYXJrZ29sZGVucm9kOjEyMDkyOTM5LGRhcmtncmF5OjExMTE5MDE3LGRhcmtncmVlbjoyNTYwMCxkYXJrZ3JleToxMTExOTAxNyxkYXJra2hha2k6MTI0MzMyNTksZGFya21hZ2VudGE6OTEwOTY0MyxkYXJrb2xpdmVncmVlbjo1NTk3OTk5LGRhcmtvcmFuZ2U6MTY3NDc1MjAsZGFya29yY2hpZDoxMDA0MDAxMixkYXJrcmVkOjkxMDk1MDQsZGFya3NhbG1vbjoxNTMwODQxMCxkYXJrc2VhZ3JlZW46OTQxOTkxOSxkYXJrc2xhdGVibHVlOjQ3MzQzNDcsZGFya3NsYXRlZ3JheTozMTAwNDk1LGRhcmtzbGF0ZWdyZXk6MzEwMDQ5NSxkYXJrdHVycXVvaXNlOjUyOTQ1LGRhcmt2aW9sZXQ6OTY5OTUzOSxkZWVwcGluazoxNjcxNjk0NyxkZWVwc2t5Ymx1ZTo0OTE1MSxkaW1ncmF5OjY5MDgyNjUsZGltZ3JleTo2OTA4MjY1LGRvZGdlcmJsdWU6MjAwMzE5OSxmaXJlYnJpY2s6MTE2NzQxNDYsZmxvcmFsd2hpdGU6MTY3NzU5MjAsZm9yZXN0Z3JlZW46MjI2Mzg0MixmdWNoc2lhOjE2NzExOTM1LGdhaW5zYm9ybzoxNDQ3NDQ2MCxnaG9zdHdoaXRlOjE2MzE2NjcxLGdvbGQ6MTY3NjY3MjAsZ29sZGVucm9kOjE0MzI5MTIwLGdyYXk6ODQyMTUwNCxncmVlbjozMjc2OCxncmVlbnllbGxvdzoxMTQwMzA1NSxncmV5Ojg0MjE1MDQsaG9uZXlkZXc6MTU3OTQxNjAsaG90cGluazoxNjczODc0MCxpbmRpYW5yZWQ6MTM0NTg1MjQsaW5kaWdvOjQ5MTUzMzAsaXZvcnk6MTY3NzcyMDAsa2hha2k6MTU3ODc2NjAsbGF2ZW5kZXI6MTUxMzI0MTAsbGF2ZW5kZXJibHVzaDoxNjc3MzM2NSxsYXduZ3JlZW46ODE5MDk3NixsZW1vbmNoaWZmb246MTY3NzU4ODUsbGlnaHRibHVlOjExMzkzMjU0LGxpZ2h0Y29yYWw6MTU3NjE1MzYsbGlnaHRjeWFuOjE0NzQ1NTk5LGxpZ2h0Z29sZGVucm9keWVsbG93OjE2NDQ4MjEwLGxpZ2h0Z3JheToxMzg4MjMyMyxsaWdodGdyZWVuOjk0OTgyNTYsbGlnaHRncmV5OjEzODgyMzIzLGxpZ2h0cGluazoxNjc1ODQ2NSxsaWdodHNhbG1vbjoxNjc1Mjc2MixsaWdodHNlYWdyZWVuOjIxNDI4OTAsbGlnaHRza3libHVlOjg5MDAzNDYsbGlnaHRzbGF0ZWdyYXk6NzgzMzc1MyxsaWdodHNsYXRlZ3JleTo3ODMzNzUzLGxpZ2h0c3RlZWxibHVlOjExNTg0NzM0LGxpZ2h0eWVsbG93OjE2Nzc3MTg0LGxpbWU6NjUyODAsbGltZWdyZWVuOjMzMjkzMzAsbGluZW46MTY0NDU2NzAsbWFnZW50YToxNjcxMTkzNSxtYXJvb246ODM4ODYwOCxtZWRpdW1hcXVhbWFyaW5lOjY3MzczMjIsbWVkaXVtYmx1ZToyMDUsbWVkaXVtb3JjaGlkOjEyMjExNjY3LG1lZGl1bXB1cnBsZTo5NjYyNjgzLG1lZGl1bXNlYWdyZWVuOjM5NzgwOTcsbWVkaXVtc2xhdGVibHVlOjgwODc3OTAsbWVkaXVtc3ByaW5nZ3JlZW46NjQxNTQsbWVkaXVtdHVycXVvaXNlOjQ3NzIzMDAsbWVkaXVtdmlvbGV0cmVkOjEzMDQ3MTczLG1pZG5pZ2h0Ymx1ZToxNjQ0OTEyLG1pbnRjcmVhbToxNjEyMTg1MCxtaXN0eXJvc2U6MTY3NzAyNzMsbW9jY2FzaW46MTY3NzAyMjksbmF2YWpvd2hpdGU6MTY3Njg2ODUsbmF2eToxMjgsb2xkbGFjZToxNjY0MzU1OCxvbGl2ZTo4NDIxMzc2LG9saXZlZHJhYjo3MDQ4NzM5LG9yYW5nZToxNjc1MzkyMCxvcmFuZ2VyZWQ6MTY3MjkzNDQsb3JjaGlkOjE0MzE1NzM0LHBhbGVnb2xkZW5yb2Q6MTU2NTcxMzAscGFsZWdyZWVuOjEwMDI1ODgwLHBhbGV0dXJxdW9pc2U6MTE1Mjk5NjYscGFsZXZpb2xldHJlZDoxNDM4MTIwMyxwYXBheWF3aGlwOjE2NzczMDc3LHBlYWNocHVmZjoxNjc2NzY3MyxwZXJ1OjEzNDY4OTkxLHBpbms6MTY3NjEwMzUscGx1bToxNDUyNDYzNyxwb3dkZXJibHVlOjExNTkxOTEwLHB1cnBsZTo4Mzg4NzM2LHJlYmVjY2FwdXJwbGU6NjY5Nzg4MSxyZWQ6MTY3MTE2ODAscm9zeWJyb3duOjEyMzU3NTE5LHJveWFsYmx1ZTo0Mjg2OTQ1LHNhZGRsZWJyb3duOjkxMjcxODcsc2FsbW9uOjE2NDE2ODgyLHNhbmR5YnJvd246MTYwMzI4NjQsc2VhZ3JlZW46MzA1MDMyNyxzZWFzaGVsbDoxNjc3NDYzOCxzaWVubmE6MTA1MDY3OTcsc2lsdmVyOjEyNjMyMjU2LHNreWJsdWU6ODkwMDMzMSxzbGF0ZWJsdWU6Njk3MDA2MSxzbGF0ZWdyYXk6NzM3Mjk0NCxzbGF0ZWdyZXk6NzM3Mjk0NCxzbm93OjE2Nzc1OTMwLHNwcmluZ2dyZWVuOjY1NDA3LHN0ZWVsYmx1ZTo0NjIwOTgwLHRhbjoxMzgwODc4MCx0ZWFsOjMyODk2LHRoaXN0bGU6MTQyMDQ4ODgsdG9tYXRvOjE2NzM3MDk1LHR1cnF1b2lzZTo0MjUxODU2LHZpb2xldDoxNTYzMTA4Nix3aGVhdDoxNjExMzMzMSx3aGl0ZToxNjc3NzIxNSx3aGl0ZXNtb2tlOjE2MTE5Mjg1LHllbGxvdzoxNjc3Njk2MCx5ZWxsb3dncmVlbjoxMDE0NTA3NH07ZGVmaW5lKENvbG9yLGNvbG9yLHtjb3B5OmZ1bmN0aW9uKGNoYW5uZWxzKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgdGhpcy5jb25zdHJ1Y3Rvcix0aGlzLGNoYW5uZWxzKX0sZGlzcGxheWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZ2IoKS5kaXNwbGF5YWJsZSgpfSxoZXg6Y29sb3JfZm9ybWF0SGV4LC8vIERlcHJlY2F0ZWQhIFVzZSBjb2xvci5mb3JtYXRIZXguCmZvcm1hdEhleDpjb2xvcl9mb3JtYXRIZXgsZm9ybWF0SHNsOmNvbG9yX2Zvcm1hdEhzbCxmb3JtYXRSZ2I6Y29sb3JfZm9ybWF0UmdiLHRvU3RyaW5nOmNvbG9yX2Zvcm1hdFJnYn0pO2Z1bmN0aW9uIGNvbG9yX2Zvcm1hdEhleCgpe3JldHVybiB0aGlzLnJnYigpLmZvcm1hdEhleCgpfWZ1bmN0aW9uIGNvbG9yX2Zvcm1hdEhzbCgpe3JldHVybiBoc2xDb252ZXJ0KHRoaXMpLmZvcm1hdEhzbCgpfWZ1bmN0aW9uIGNvbG9yX2Zvcm1hdFJnYigpe3JldHVybiB0aGlzLnJnYigpLmZvcm1hdFJnYigpfWZ1bmN0aW9uIGNvbG9yKGZvcm1hdCl7dmFyIG0sbDtmb3JtYXQ9KGZvcm1hdCsiIikudHJpbSgpLnRvTG93ZXJDYXNlKCk7cmV0dXJuKG09cmVIZXguZXhlYyhmb3JtYXQpKT8obD1tWzFdLmxlbmd0aCxtPXBhcnNlSW50KG1bMV0sMTYpLGw9PT02P3JnYm4obSk6bD09PTM/bmV3IFJnYihtPj44JjE1fG0+PjQmMjQwLG0+PjQmMTV8bSYyNDAsKG0mMTUpPDw0fG0mMTUsMSk6bD09PTg/bmV3IFJnYihtPj4yNCYyNTUsbT4+MTYmMjU1LG0+PjgmMjU1LChtJjI1NSkvMjU1KTpsPT09ND9uZXcgUmdiKG0+PjEyJjE1fG0+PjgmMjQwLG0+PjgmMTV8bT4+NCYyNDAsbT4+NCYxNXxtJjI0MCwoKG0mMTUpPDw0fG0mMTUpLzI1NSk6bnVsbCk6Ly8gaW52YWxpZCBoZXgKKG09cmVSZ2JJbnRlZ2VyLmV4ZWMoZm9ybWF0KSk/bmV3IFJnYihtWzFdLG1bMl0sbVszXSwxKToobT1yZVJnYlBlcmNlbnQuZXhlYyhmb3JtYXQpKT9uZXcgUmdiKG1bMV0qMjU1LzEwMCxtWzJdKjI1NS8xMDAsbVszXSoyNTUvMTAwLDEpOihtPXJlUmdiYUludGVnZXIuZXhlYyhmb3JtYXQpKT9yZ2JhKG1bMV0sbVsyXSxtWzNdLG1bNF0pOihtPXJlUmdiYVBlcmNlbnQuZXhlYyhmb3JtYXQpKT9yZ2JhKG1bMV0qMjU1LzEwMCxtWzJdKjI1NS8xMDAsbVszXSoyNTUvMTAwLG1bNF0pOihtPXJlSHNsUGVyY2VudC5leGVjKGZvcm1hdCkpP2hzbGEobVsxXSxtWzJdLzEwMCxtWzNdLzEwMCwxKToobT1yZUhzbGFQZXJjZW50LmV4ZWMoZm9ybWF0KSk/aHNsYShtWzFdLG1bMl0vMTAwLG1bM10vMTAwLG1bNF0pOm5hbWVkLmhhc093blByb3BlcnR5KGZvcm1hdCk/cmdibihuYW1lZFtmb3JtYXRdKTpmb3JtYXQ9PT0idHJhbnNwYXJlbnQiP25ldyBSZ2IoTmFOLE5hTixOYU4sMCk6bnVsbH1mdW5jdGlvbiByZ2JuKG4pe3JldHVybiBuZXcgUmdiKG4+PjE2JjI1NSxuPj44JjI1NSxuJjI1NSwxKX1mdW5jdGlvbiByZ2JhKHIsZyxiLGEpe2lmKGE8PTApcj1nPWI9TmFOO3JldHVybiBuZXcgUmdiKHIsZyxiLGEpfWZ1bmN0aW9uIHJnYkNvbnZlcnQobyl7aWYoIShvIGluc3RhbmNlb2YgQ29sb3IpKW89Y29sb3Iobyk7aWYoIW8pcmV0dXJuIG5ldyBSZ2I7bz1vLnJnYigpO3JldHVybiBuZXcgUmdiKG8ucixvLmcsby5iLG8ub3BhY2l0eSl9ZnVuY3Rpb24gcmdiKHIsZyxiLG9wYWNpdHkpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPT09MT9yZ2JDb252ZXJ0KHIpOm5ldyBSZ2IocixnLGIsb3BhY2l0eT09bnVsbD8xOm9wYWNpdHkpfWZ1bmN0aW9uIFJnYihyLGcsYixvcGFjaXR5KXt0aGlzLnI9K3I7dGhpcy5nPStnO3RoaXMuYj0rYjt0aGlzLm9wYWNpdHk9K29wYWNpdHl9ZGVmaW5lKFJnYixyZ2IsZXh0ZW5kKENvbG9yLHticmlnaHRlcjpmdW5jdGlvbihrKXtrPWs9PW51bGw/YnJpZ2h0ZXI6TWF0aC5wb3coYnJpZ2h0ZXIsayk7cmV0dXJuIG5ldyBSZ2IodGhpcy5yKmssdGhpcy5nKmssdGhpcy5iKmssdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKGspe2s9az09bnVsbD9kYXJrZXI6TWF0aC5wb3coZGFya2VyLGspO3JldHVybiBuZXcgUmdiKHRoaXMuciprLHRoaXMuZyprLHRoaXMuYiprLHRoaXMub3BhY2l0eSl9LHJnYjpmdW5jdGlvbigpe3JldHVybiB0aGlzfSxkaXNwbGF5YWJsZTpmdW5jdGlvbigpe3JldHVybi0uNTw9dGhpcy5yJiZ0aGlzLnI8MjU1LjUmJigtLjU8PXRoaXMuZyYmdGhpcy5nPDI1NS41KSYmKC0uNTw9dGhpcy5iJiZ0aGlzLmI8MjU1LjUpJiYoMDw9dGhpcy5vcGFjaXR5JiZ0aGlzLm9wYWNpdHk8PTEpfSxoZXg6cmdiX2Zvcm1hdEhleCwvLyBEZXByZWNhdGVkISBVc2UgY29sb3IuZm9ybWF0SGV4Lgpmb3JtYXRIZXg6cmdiX2Zvcm1hdEhleCxmb3JtYXRSZ2I6cmdiX2Zvcm1hdFJnYix0b1N0cmluZzpyZ2JfZm9ybWF0UmdifSkpO2Z1bmN0aW9uIHJnYl9mb3JtYXRIZXgoKXtyZXR1cm4iIyIraGV4KHRoaXMucikraGV4KHRoaXMuZykraGV4KHRoaXMuYil9ZnVuY3Rpb24gcmdiX2Zvcm1hdFJnYigpe3ZhciBhPXRoaXMub3BhY2l0eTthPWlzTmFOKGEpPzE6TWF0aC5tYXgoMCxNYXRoLm1pbigxLGEpKTtyZXR1cm4oYT09PTE/InJnYigiOiJyZ2JhKCIpK01hdGgubWF4KDAsTWF0aC5taW4oMjU1LE1hdGgucm91bmQodGhpcy5yKXx8MCkpKyIsICIrTWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCh0aGlzLmcpfHwwKSkrIiwgIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKHRoaXMuYil8fDApKSsoYT09PTE/IikiOiIsICIrYSsiKSIpfWZ1bmN0aW9uIGhleCh2YWx1ZSl7dmFsdWU9TWF0aC5tYXgoMCxNYXRoLm1pbigyNTUsTWF0aC5yb3VuZCh2YWx1ZSl8fDApKTtyZXR1cm4odmFsdWU8MTY/IjAiOiIiKSt2YWx1ZS50b1N0cmluZygxNil9ZnVuY3Rpb24gaHNsYShoLHMsbCxhKXtpZihhPD0wKWg9cz1sPU5hTjtlbHNlIGlmKGw8PTB8fGw+PTEpaD1zPU5hTjtlbHNlIGlmKHM8PTApaD1OYU47cmV0dXJuIG5ldyBIc2woaCxzLGwsYSl9ZnVuY3Rpb24gaHNsQ29udmVydChvKXtpZihvIGluc3RhbmNlb2YgSHNsKXJldHVybiBuZXcgSHNsKG8uaCxvLnMsby5sLG8ub3BhY2l0eSk7aWYoIShvIGluc3RhbmNlb2YgQ29sb3IpKW89Y29sb3Iobyk7aWYoIW8pcmV0dXJuIG5ldyBIc2w7aWYobyBpbnN0YW5jZW9mIEhzbClyZXR1cm4gbztvPW8ucmdiKCk7dmFyIHI9by5yLzI1NSxnPW8uZy8yNTUsYj1vLmIvMjU1LG1pbj1NYXRoLm1pbihyLGcsYiksbWF4PU1hdGgubWF4KHIsZyxiKSxoPU5hTixzPW1heC1taW4sbD0obWF4K21pbikvMjtpZihzKXtpZihyPT09bWF4KWg9KGctYikvcysoZzxiKSo2O2Vsc2UgaWYoZz09PW1heCloPShiLXIpL3MrMjtlbHNlIGg9KHItZykvcys0O3MvPWw8LjU/bWF4K21pbjoyLW1heC1taW47aCo9NjB9ZWxzZXtzPWw+MCYmbDwxPzA6aH1yZXR1cm4gbmV3IEhzbChoLHMsbCxvLm9wYWNpdHkpfWZ1bmN0aW9uIGhzbChoLHMsbCxvcGFjaXR5KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD09PTE/aHNsQ29udmVydChoKTpuZXcgSHNsKGgscyxsLG9wYWNpdHk9PW51bGw/MTpvcGFjaXR5KX1mdW5jdGlvbiBIc2woaCxzLGwsb3BhY2l0eSl7dGhpcy5oPStoO3RoaXMucz0rczt0aGlzLmw9K2w7dGhpcy5vcGFjaXR5PStvcGFjaXR5fWRlZmluZShIc2wsaHNsLGV4dGVuZChDb2xvcix7YnJpZ2h0ZXI6ZnVuY3Rpb24oayl7az1rPT1udWxsP2JyaWdodGVyOk1hdGgucG93KGJyaWdodGVyLGspO3JldHVybiBuZXcgSHNsKHRoaXMuaCx0aGlzLnMsdGhpcy5sKmssdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKGspe2s9az09bnVsbD9kYXJrZXI6TWF0aC5wb3coZGFya2VyLGspO3JldHVybiBuZXcgSHNsKHRoaXMuaCx0aGlzLnMsdGhpcy5sKmssdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7dmFyIGg9dGhpcy5oJTM2MCsodGhpcy5oPDApKjM2MCxzPWlzTmFOKGgpfHxpc05hTih0aGlzLnMpPzA6dGhpcy5zLGw9dGhpcy5sLG0yPWwrKGw8LjU/bDoxLWwpKnMsbTE9MipsLW0yO3JldHVybiBuZXcgUmdiKGhzbDJyZ2IoaD49MjQwP2gtMjQwOmgrMTIwLG0xLG0yKSxoc2wycmdiKGgsbTEsbTIpLGhzbDJyZ2IoaDwxMjA/aCsyNDA6aC0xMjAsbTEsbTIpLHRoaXMub3BhY2l0eSl9LGRpc3BsYXlhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuKDA8PXRoaXMucyYmdGhpcy5zPD0xfHxpc05hTih0aGlzLnMpKSYmKDA8PXRoaXMubCYmdGhpcy5sPD0xKSYmKDA8PXRoaXMub3BhY2l0eSYmdGhpcy5vcGFjaXR5PD0xKX0sZm9ybWF0SHNsOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vcGFjaXR5O2E9aXNOYU4oYSk/MTpNYXRoLm1heCgwLE1hdGgubWluKDEsYSkpO3JldHVybihhPT09MT8iaHNsKCI6ImhzbGEoIikrKHRoaXMuaHx8MCkrIiwgIisodGhpcy5zfHwwKSoxMDArIiUsICIrKHRoaXMubHx8MCkqMTAwKyIlIisoYT09PTE/IikiOiIsICIrYSsiKSIpfX0pKTsKLyogRnJvbSBGdkQgMTMuMzcsIENTUyBDb2xvciBNb2R1bGUgTGV2ZWwgMyAqL2Z1bmN0aW9uIGhzbDJyZ2IoaCxtMSxtMil7cmV0dXJuKGg8NjA/bTErKG0yLW0xKSpoLzYwOmg8MTgwP20yOmg8MjQwP20xKyhtMi1tMSkqKDI0MC1oKS82MDptMSkqMjU1fXZhciBkZWcycmFkPU1hdGguUEkvMTgwO3ZhciByYWQyZGVnPTE4MC9NYXRoLlBJOwovLyBodHRwczovL29ic2VydmFibGVocS5jb20vQG1ib3N0b2NrL2xhYi1hbmQtcmdiCnZhciBLPTE4LFhuPS45NjQyMixZbj0xLFpuPS44MjUyMSx0MD00LzI5LHQxPTYvMjksdDI9Myp0MSp0MSx0Mz10MSp0MSp0MTtmdW5jdGlvbiBsYWJDb252ZXJ0KG8pe2lmKG8gaW5zdGFuY2VvZiBMYWIpcmV0dXJuIG5ldyBMYWIoby5sLG8uYSxvLmIsby5vcGFjaXR5KTtpZihvIGluc3RhbmNlb2YgSGNsKXJldHVybiBoY2wybGFiKG8pO2lmKCEobyBpbnN0YW5jZW9mIFJnYikpbz1yZ2JDb252ZXJ0KG8pO3ZhciByPXJnYjJscmdiKG8uciksZz1yZ2IybHJnYihvLmcpLGI9cmdiMmxyZ2Ioby5iKSx5PXh5ejJsYWIoKC4yMjI1MDQ1KnIrLjcxNjg3ODYqZysuMDYwNjE2OSpiKS9ZbikseCx6O2lmKHI9PT1nJiZnPT09Yil4PXo9eTtlbHNle3g9eHl6MmxhYigoLjQzNjA3NDcqcisuMzg1MDY0OSpnKy4xNDMwODA0KmIpL1huKTt6PXh5ejJsYWIoKC4wMTM5MzIyKnIrLjA5NzEwNDUqZysuNzE0MTczMypiKS9abil9cmV0dXJuIG5ldyBMYWIoMTE2KnktMTYsNTAwKih4LXkpLDIwMCooeS16KSxvLm9wYWNpdHkpfWZ1bmN0aW9uIGdyYXkobCxvcGFjaXR5KXtyZXR1cm4gbmV3IExhYihsLDAsMCxvcGFjaXR5PT1udWxsPzE6b3BhY2l0eSl9ZnVuY3Rpb24gbGFiKGwsYSxiLG9wYWNpdHkpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPT09MT9sYWJDb252ZXJ0KGwpOm5ldyBMYWIobCxhLGIsb3BhY2l0eT09bnVsbD8xOm9wYWNpdHkpfWZ1bmN0aW9uIExhYihsLGEsYixvcGFjaXR5KXt0aGlzLmw9K2w7dGhpcy5hPSthO3RoaXMuYj0rYjt0aGlzLm9wYWNpdHk9K29wYWNpdHl9ZGVmaW5lKExhYixsYWIsZXh0ZW5kKENvbG9yLHticmlnaHRlcjpmdW5jdGlvbihrKXtyZXR1cm4gbmV3IExhYih0aGlzLmwrSyooaz09bnVsbD8xOmspLHRoaXMuYSx0aGlzLmIsdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKGspe3JldHVybiBuZXcgTGFiKHRoaXMubC1LKihrPT1udWxsPzE6ayksdGhpcy5hLHRoaXMuYix0aGlzLm9wYWNpdHkpfSxyZ2I6ZnVuY3Rpb24oKXt2YXIgeT0odGhpcy5sKzE2KS8xMTYseD1pc05hTih0aGlzLmEpP3k6eSt0aGlzLmEvNTAwLHo9aXNOYU4odGhpcy5iKT95OnktdGhpcy5iLzIwMDt4PVhuKmxhYjJ4eXooeCk7eT1ZbipsYWIyeHl6KHkpO3o9Wm4qbGFiMnh5eih6KTtyZXR1cm4gbmV3IFJnYihscmdiMnJnYigzLjEzMzg1NjEqeC0xLjYxNjg2NjcqeS0uNDkwNjE0Nip6KSxscmdiMnJnYigtLjk3ODc2ODQqeCsxLjkxNjE0MTUqeSsuMDMzNDU0KnopLGxyZ2IycmdiKC4wNzE5NDUzKngtLjIyODk5MTQqeSsxLjQwNTI0MjcqeiksdGhpcy5vcGFjaXR5KX19KSk7ZnVuY3Rpb24geHl6MmxhYih0KXtyZXR1cm4gdD50Mz9NYXRoLnBvdyh0LDEvMyk6dC90Mit0MH1mdW5jdGlvbiBsYWIyeHl6KHQpe3JldHVybiB0PnQxP3QqdCp0OnQyKih0LXQwKX1mdW5jdGlvbiBscmdiMnJnYih4KXtyZXR1cm4gMjU1Kih4PD0uMDAzMTMwOD8xMi45Mip4OjEuMDU1Kk1hdGgucG93KHgsMS8yLjQpLS4wNTUpfWZ1bmN0aW9uIHJnYjJscmdiKHgpe3JldHVybih4Lz0yNTUpPD0uMDQwNDU/eC8xMi45MjpNYXRoLnBvdygoeCsuMDU1KS8xLjA1NSwyLjQpfWZ1bmN0aW9uIGhjbENvbnZlcnQobyl7aWYobyBpbnN0YW5jZW9mIEhjbClyZXR1cm4gbmV3IEhjbChvLmgsby5jLG8ubCxvLm9wYWNpdHkpO2lmKCEobyBpbnN0YW5jZW9mIExhYikpbz1sYWJDb252ZXJ0KG8pO2lmKG8uYT09PTAmJm8uYj09PTApcmV0dXJuIG5ldyBIY2woTmFOLDA8by5sJiZvLmw8MTAwPzA6TmFOLG8ubCxvLm9wYWNpdHkpO3ZhciBoPU1hdGguYXRhbjIoby5iLG8uYSkqcmFkMmRlZztyZXR1cm4gbmV3IEhjbChoPDA/aCszNjA6aCxNYXRoLnNxcnQoby5hKm8uYStvLmIqby5iKSxvLmwsby5vcGFjaXR5KX1mdW5jdGlvbiBsY2gobCxjLGgsb3BhY2l0eSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg9PT0xP2hjbENvbnZlcnQobCk6bmV3IEhjbChoLGMsbCxvcGFjaXR5PT1udWxsPzE6b3BhY2l0eSl9ZnVuY3Rpb24gaGNsKGgsYyxsLG9wYWNpdHkpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPT09MT9oY2xDb252ZXJ0KGgpOm5ldyBIY2woaCxjLGwsb3BhY2l0eT09bnVsbD8xOm9wYWNpdHkpfWZ1bmN0aW9uIEhjbChoLGMsbCxvcGFjaXR5KXt0aGlzLmg9K2g7dGhpcy5jPStjO3RoaXMubD0rbDt0aGlzLm9wYWNpdHk9K29wYWNpdHl9ZnVuY3Rpb24gaGNsMmxhYihvKXtpZihpc05hTihvLmgpKXJldHVybiBuZXcgTGFiKG8ubCwwLDAsby5vcGFjaXR5KTt2YXIgaD1vLmgqZGVnMnJhZDtyZXR1cm4gbmV3IExhYihvLmwsTWF0aC5jb3MoaCkqby5jLE1hdGguc2luKGgpKm8uYyxvLm9wYWNpdHkpfWRlZmluZShIY2wsaGNsLGV4dGVuZChDb2xvcix7YnJpZ2h0ZXI6ZnVuY3Rpb24oayl7cmV0dXJuIG5ldyBIY2wodGhpcy5oLHRoaXMuYyx0aGlzLmwrSyooaz09bnVsbD8xOmspLHRoaXMub3BhY2l0eSl9LGRhcmtlcjpmdW5jdGlvbihrKXtyZXR1cm4gbmV3IEhjbCh0aGlzLmgsdGhpcy5jLHRoaXMubC1LKihrPT1udWxsPzE6ayksdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7cmV0dXJuIGhjbDJsYWIodGhpcykucmdiKCl9fSkpO3ZhciBBPS0uMTQ4NjEsQj0rMS43ODI3NyxDPS0uMjkyMjcsRD0tLjkwNjQ5LEU9KzEuOTcyOTQsRUQ9RSpELEVCPUUqQixCQ19EQT1CKkMtRCpBO2Z1bmN0aW9uIGN1YmVoZWxpeENvbnZlcnQobyl7aWYobyBpbnN0YW5jZW9mIEN1YmVoZWxpeClyZXR1cm4gbmV3IEN1YmVoZWxpeChvLmgsby5zLG8ubCxvLm9wYWNpdHkpO2lmKCEobyBpbnN0YW5jZW9mIFJnYikpbz1yZ2JDb252ZXJ0KG8pO3ZhciByPW8uci8yNTUsZz1vLmcvMjU1LGI9by5iLzI1NSxsPShCQ19EQSpiK0VEKnItRUIqZykvKEJDX0RBK0VELUVCKSxibD1iLWwsaz0oRSooZy1sKS1DKmJsKS9ELHM9TWF0aC5zcXJ0KGsqaytibCpibCkvKEUqbCooMS1sKSksLy8gTmFOIGlmIGw9MCBvciBsPTEKaD1zP01hdGguYXRhbjIoayxibCkqcmFkMmRlZy0xMjA6TmFOO3JldHVybiBuZXcgQ3ViZWhlbGl4KGg8MD9oKzM2MDpoLHMsbCxvLm9wYWNpdHkpfWZ1bmN0aW9uIGN1YmVoZWxpeChoLHMsbCxvcGFjaXR5KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD09PTE/Y3ViZWhlbGl4Q29udmVydChoKTpuZXcgQ3ViZWhlbGl4KGgscyxsLG9wYWNpdHk9PW51bGw/MTpvcGFjaXR5KX1mdW5jdGlvbiBDdWJlaGVsaXgoaCxzLGwsb3BhY2l0eSl7dGhpcy5oPStoO3RoaXMucz0rczt0aGlzLmw9K2w7dGhpcy5vcGFjaXR5PStvcGFjaXR5fWRlZmluZShDdWJlaGVsaXgsY3ViZWhlbGl4LGV4dGVuZChDb2xvcix7YnJpZ2h0ZXI6ZnVuY3Rpb24oayl7az1rPT1udWxsP2JyaWdodGVyOk1hdGgucG93KGJyaWdodGVyLGspO3JldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCx0aGlzLnMsdGhpcy5sKmssdGhpcy5vcGFjaXR5KX0sZGFya2VyOmZ1bmN0aW9uKGspe2s9az09bnVsbD9kYXJrZXI6TWF0aC5wb3coZGFya2VyLGspO3JldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCx0aGlzLnMsdGhpcy5sKmssdGhpcy5vcGFjaXR5KX0scmdiOmZ1bmN0aW9uKCl7dmFyIGg9aXNOYU4odGhpcy5oKT8wOih0aGlzLmgrMTIwKSpkZWcycmFkLGw9K3RoaXMubCxhPWlzTmFOKHRoaXMucyk/MDp0aGlzLnMqbCooMS1sKSxjb3NoPU1hdGguY29zKGgpLHNpbmg9TWF0aC5zaW4oaCk7cmV0dXJuIG5ldyBSZ2IoMjU1KihsK2EqKEEqY29zaCtCKnNpbmgpKSwyNTUqKGwrYSooQypjb3NoK0Qqc2luaCkpLDI1NSoobCthKihFKmNvc2gpKSx0aGlzLm9wYWNpdHkpfX0pKTtleHBvcnRzLmNvbG9yPWNvbG9yO2V4cG9ydHMuY3ViZWhlbGl4PWN1YmVoZWxpeDtleHBvcnRzLmdyYXk9Z3JheTtleHBvcnRzLmhjbD1oY2w7ZXhwb3J0cy5oc2w9aHNsO2V4cG9ydHMubGFiPWxhYjtleHBvcnRzLmxjaD1sY2g7ZXhwb3J0cy5yZ2I9cmdiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSwzNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtY29udG91ci8gdjEuMy4yIENvcHlyaWdodCAyMDE4IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMscmVxdWlyZSgiZDMtYXJyYXkiKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLWFycmF5Il0sZmFjdG9yeSk6ZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMpfSkodGhpcyxmdW5jdGlvbihleHBvcnRzLGQzQXJyYXkpeyJ1c2Ugc3RyaWN0Ijt2YXIgYXJyYXk9QXJyYXkucHJvdG90eXBlO3ZhciBzbGljZT1hcnJheS5zbGljZTtmdW5jdGlvbiBhc2NlbmRpbmcoYSxiKXtyZXR1cm4gYS1ifWZ1bmN0aW9uIGFyZWEocmluZyl7dmFyIGk9MCxuPXJpbmcubGVuZ3RoLGFyZWE9cmluZ1tuLTFdWzFdKnJpbmdbMF1bMF0tcmluZ1tuLTFdWzBdKnJpbmdbMF1bMV07d2hpbGUoKytpPG4pYXJlYSs9cmluZ1tpLTFdWzFdKnJpbmdbaV1bMF0tcmluZ1tpLTFdWzBdKnJpbmdbaV1bMV07cmV0dXJuIGFyZWF9ZnVuY3Rpb24gY29uc3RhbnQoeCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHh9fWZ1bmN0aW9uIGNvbnRhaW5zKHJpbmcsaG9sZSl7dmFyIGk9LTEsbj1ob2xlLmxlbmd0aCxjO3doaWxlKCsraTxuKWlmKGM9cmluZ0NvbnRhaW5zKHJpbmcsaG9sZVtpXSkpcmV0dXJuIGM7cmV0dXJuIDB9ZnVuY3Rpb24gcmluZ0NvbnRhaW5zKHJpbmcscG9pbnQpe3ZhciB4PXBvaW50WzBdLHk9cG9pbnRbMV0sY29udGFpbnM9LTE7Zm9yKHZhciBpPTAsbj1yaW5nLmxlbmd0aCxqPW4tMTtpPG47aj1pKyspe3ZhciBwaT1yaW5nW2ldLHhpPXBpWzBdLHlpPXBpWzFdLHBqPXJpbmdbal0seGo9cGpbMF0seWo9cGpbMV07aWYoc2VnbWVudENvbnRhaW5zKHBpLHBqLHBvaW50KSlyZXR1cm4gMDtpZih5aT55IT09eWo+eSYmeDwoeGoteGkpKih5LXlpKS8oeWoteWkpK3hpKWNvbnRhaW5zPS1jb250YWluc31yZXR1cm4gY29udGFpbnN9ZnVuY3Rpb24gc2VnbWVudENvbnRhaW5zKGEsYixjKXt2YXIgaTtyZXR1cm4gY29sbGluZWFyKGEsYixjKSYmd2l0aGluKGFbaT0rKGFbMF09PT1iWzBdKV0sY1tpXSxiW2ldKX1mdW5jdGlvbiBjb2xsaW5lYXIoYSxiLGMpe3JldHVybihiWzBdLWFbMF0pKihjWzFdLWFbMV0pPT09KGNbMF0tYVswXSkqKGJbMV0tYVsxXSl9ZnVuY3Rpb24gd2l0aGluKHAscSxyKXtyZXR1cm4gcDw9cSYmcTw9cnx8cjw9cSYmcTw9cH1mdW5jdGlvbiBub29wKCl7fXZhciBjYXNlcz1bW10sW1tbMSwxLjVdLFsuNSwxXV1dLFtbWzEuNSwxXSxbMSwxLjVdXV0sW1tbMS41LDFdLFsuNSwxXV1dLFtbWzEsLjVdLFsxLjUsMV1dXSxbW1sxLDEuNV0sWy41LDFdXSxbWzEsLjVdLFsxLjUsMV1dXSxbW1sxLC41XSxbMSwxLjVdXV0sW1tbMSwuNV0sWy41LDFdXV0sW1tbLjUsMV0sWzEsLjVdXV0sW1tbMSwxLjVdLFsxLC41XV1dLFtbWy41LDFdLFsxLC41XV0sW1sxLjUsMV0sWzEsMS41XV1dLFtbWzEuNSwxXSxbMSwuNV1dXSxbW1suNSwxXSxbMS41LDFdXV0sW1tbMSwxLjVdLFsxLjUsMV1dXSxbW1suNSwxXSxbMSwxLjVdXV0sW11dO2Z1bmN0aW9uIGNvbnRvdXJzKCl7dmFyIGR4PTEsZHk9MSx0aHJlc2hvbGQ9ZDNBcnJheS50aHJlc2hvbGRTdHVyZ2VzLHNtb290aD1zbW9vdGhMaW5lYXI7ZnVuY3Rpb24gY29udG91cnModmFsdWVzKXt2YXIgdHo9dGhyZXNob2xkKHZhbHVlcyk7Ci8vIENvbnZlcnQgbnVtYmVyIG9mIHRocmVzaG9sZHMgaW50byB1bmlmb3JtIHRocmVzaG9sZHMuCmlmKCFBcnJheS5pc0FycmF5KHR6KSl7dmFyIGRvbWFpbj1kM0FycmF5LmV4dGVudCh2YWx1ZXMpLHN0YXJ0PWRvbWFpblswXSxzdG9wPWRvbWFpblsxXTt0ej1kM0FycmF5LnRpY2tTdGVwKHN0YXJ0LHN0b3AsdHopO3R6PWQzQXJyYXkucmFuZ2UoTWF0aC5mbG9vcihzdGFydC90eikqdHosTWF0aC5mbG9vcihzdG9wL3R6KSp0eix0eil9ZWxzZXt0ej10ei5zbGljZSgpLnNvcnQoYXNjZW5kaW5nKX1yZXR1cm4gdHoubWFwKGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gY29udG91cih2YWx1ZXMsdmFsdWUpfSl9Ci8vIEFjY3VtdWxhdGUsIHNtb290aCBjb250b3VyIHJpbmdzLCBhc3NpZ24gaG9sZXMgdG8gZXh0ZXJpb3IgcmluZ3MuCi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9tYm9zdG9jay9zaGFwZWZpbGUvYmxvYi92MC42LjIvc2hwL3BvbHlnb24uanMKZnVuY3Rpb24gY29udG91cih2YWx1ZXMsdmFsdWUpe3ZhciBwb2x5Z29ucz1bXSxob2xlcz1bXTtpc29yaW5ncyh2YWx1ZXMsdmFsdWUsZnVuY3Rpb24ocmluZyl7c21vb3RoKHJpbmcsdmFsdWVzLHZhbHVlKTtpZihhcmVhKHJpbmcpPjApcG9seWdvbnMucHVzaChbcmluZ10pO2Vsc2UgaG9sZXMucHVzaChyaW5nKX0pO2hvbGVzLmZvckVhY2goZnVuY3Rpb24oaG9sZSl7Zm9yKHZhciBpPTAsbj1wb2x5Z29ucy5sZW5ndGgscG9seWdvbjtpPG47KytpKXtpZihjb250YWlucygocG9seWdvbj1wb2x5Z29uc1tpXSlbMF0saG9sZSkhPT0tMSl7cG9seWdvbi5wdXNoKGhvbGUpO3JldHVybn19fSk7cmV0dXJue3R5cGU6Ik11bHRpUG9seWdvbiIsdmFsdWU6dmFsdWUsY29vcmRpbmF0ZXM6cG9seWdvbnN9fQovLyBNYXJjaGluZyBzcXVhcmVzIHdpdGggaXNvbGluZXMgc3RpdGNoZWQgaW50byByaW5ncy4KLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL3RvcG9qc29uL3RvcG9qc29uLWNsaWVudC9ibG9iL3YzLjAuMC9zcmMvc3RpdGNoLmpzCmZ1bmN0aW9uIGlzb3JpbmdzKHZhbHVlcyx2YWx1ZSxjYWxsYmFjayl7dmFyIGZyYWdtZW50QnlTdGFydD1uZXcgQXJyYXksZnJhZ21lbnRCeUVuZD1uZXcgQXJyYXkseCx5LHQwLHQxLHQyLHQzOwovLyBTcGVjaWFsIGNhc2UgZm9yIHRoZSBmaXJzdCByb3cgKHkgPSAtMSwgdDIgPSB0MyA9IDApLgp4PXk9LTE7dDE9dmFsdWVzWzBdPj12YWx1ZTtjYXNlc1t0MTw8MV0uZm9yRWFjaChzdGl0Y2gpO3doaWxlKCsreDxkeC0xKXt0MD10MSx0MT12YWx1ZXNbeCsxXT49dmFsdWU7Y2FzZXNbdDB8dDE8PDFdLmZvckVhY2goc3RpdGNoKX1jYXNlc1t0MTw8MF0uZm9yRWFjaChzdGl0Y2gpOwovLyBHZW5lcmFsIGNhc2UgZm9yIHRoZSBpbnRlcm1lZGlhdGUgcm93cy4Kd2hpbGUoKyt5PGR5LTEpe3g9LTE7dDE9dmFsdWVzW3kqZHgrZHhdPj12YWx1ZTt0Mj12YWx1ZXNbeSpkeF0+PXZhbHVlO2Nhc2VzW3QxPDwxfHQyPDwyXS5mb3JFYWNoKHN0aXRjaCk7d2hpbGUoKyt4PGR4LTEpe3QwPXQxLHQxPXZhbHVlc1t5KmR4K2R4K3grMV0+PXZhbHVlO3QzPXQyLHQyPXZhbHVlc1t5KmR4K3grMV0+PXZhbHVlO2Nhc2VzW3QwfHQxPDwxfHQyPDwyfHQzPDwzXS5mb3JFYWNoKHN0aXRjaCl9Y2FzZXNbdDF8dDI8PDNdLmZvckVhY2goc3RpdGNoKX0KLy8gU3BlY2lhbCBjYXNlIGZvciB0aGUgbGFzdCByb3cgKHkgPSBkeSAtIDEsIHQwID0gdDEgPSAwKS4KeD0tMTt0Mj12YWx1ZXNbeSpkeF0+PXZhbHVlO2Nhc2VzW3QyPDwyXS5mb3JFYWNoKHN0aXRjaCk7d2hpbGUoKyt4PGR4LTEpe3QzPXQyLHQyPXZhbHVlc1t5KmR4K3grMV0+PXZhbHVlO2Nhc2VzW3QyPDwyfHQzPDwzXS5mb3JFYWNoKHN0aXRjaCl9Y2FzZXNbdDI8PDNdLmZvckVhY2goc3RpdGNoKTtmdW5jdGlvbiBzdGl0Y2gobGluZSl7dmFyIHN0YXJ0PVtsaW5lWzBdWzBdK3gsbGluZVswXVsxXSt5XSxlbmQ9W2xpbmVbMV1bMF0reCxsaW5lWzFdWzFdK3ldLHN0YXJ0SW5kZXg9aW5kZXgoc3RhcnQpLGVuZEluZGV4PWluZGV4KGVuZCksZixnO2lmKGY9ZnJhZ21lbnRCeUVuZFtzdGFydEluZGV4XSl7aWYoZz1mcmFnbWVudEJ5U3RhcnRbZW5kSW5kZXhdKXtkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07ZGVsZXRlIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XTtpZihmPT09Zyl7Zi5yaW5nLnB1c2goZW5kKTtjYWxsYmFjayhmLnJpbmcpfWVsc2V7ZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdPWZyYWdtZW50QnlFbmRbZy5lbmRdPXtzdGFydDpmLnN0YXJ0LGVuZDpnLmVuZCxyaW5nOmYucmluZy5jb25jYXQoZy5yaW5nKX19fWVsc2V7ZGVsZXRlIGZyYWdtZW50QnlFbmRbZi5lbmRdO2YucmluZy5wdXNoKGVuZCk7ZnJhZ21lbnRCeUVuZFtmLmVuZD1lbmRJbmRleF09Zn19ZWxzZSBpZihmPWZyYWdtZW50QnlTdGFydFtlbmRJbmRleF0pe2lmKGc9ZnJhZ21lbnRCeUVuZFtzdGFydEluZGV4XSl7ZGVsZXRlIGZyYWdtZW50QnlTdGFydFtmLnN0YXJ0XTtkZWxldGUgZnJhZ21lbnRCeUVuZFtnLmVuZF07aWYoZj09PWcpe2YucmluZy5wdXNoKGVuZCk7Y2FsbGJhY2soZi5yaW5nKX1lbHNle2ZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XT1mcmFnbWVudEJ5RW5kW2YuZW5kXT17c3RhcnQ6Zy5zdGFydCxlbmQ6Zi5lbmQscmluZzpnLnJpbmcuY29uY2F0KGYucmluZyl9fX1lbHNle2RlbGV0ZSBmcmFnbWVudEJ5U3RhcnRbZi5zdGFydF07Zi5yaW5nLnVuc2hpZnQoc3RhcnQpO2ZyYWdtZW50QnlTdGFydFtmLnN0YXJ0PXN0YXJ0SW5kZXhdPWZ9fWVsc2V7ZnJhZ21lbnRCeVN0YXJ0W3N0YXJ0SW5kZXhdPWZyYWdtZW50QnlFbmRbZW5kSW5kZXhdPXtzdGFydDpzdGFydEluZGV4LGVuZDplbmRJbmRleCxyaW5nOltzdGFydCxlbmRdfX19fWZ1bmN0aW9uIGluZGV4KHBvaW50KXtyZXR1cm4gcG9pbnRbMF0qMitwb2ludFsxXSooZHgrMSkqNH1mdW5jdGlvbiBzbW9vdGhMaW5lYXIocmluZyx2YWx1ZXMsdmFsdWUpe3JpbmcuZm9yRWFjaChmdW5jdGlvbihwb2ludCl7dmFyIHg9cG9pbnRbMF0seT1wb2ludFsxXSx4dD14fDAseXQ9eXwwLHYwLHYxPXZhbHVlc1t5dCpkeCt4dF07aWYoeD4wJiZ4PGR4JiZ4dD09PXgpe3YwPXZhbHVlc1t5dCpkeCt4dC0xXTtwb2ludFswXT14Kyh2YWx1ZS12MCkvKHYxLXYwKS0uNX1pZih5PjAmJnk8ZHkmJnl0PT09eSl7djA9dmFsdWVzWyh5dC0xKSpkeCt4dF07cG9pbnRbMV09eSsodmFsdWUtdjApLyh2MS12MCktLjV9fSl9Y29udG91cnMuY29udG91cj1jb250b3VyO2NvbnRvdXJzLnNpemU9ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuW2R4LGR5XTt2YXIgXzA9TWF0aC5jZWlsKF9bMF0pLF8xPU1hdGguY2VpbChfWzFdKTtpZighKF8wPjApfHwhKF8xPjApKXRocm93IG5ldyBFcnJvcigiaW52YWxpZCBzaXplIik7cmV0dXJuIGR4PV8wLGR5PV8xLGNvbnRvdXJzfTtjb250b3Vycy50aHJlc2hvbGRzPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aHJlc2hvbGQ9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186QXJyYXkuaXNBcnJheShfKT9jb25zdGFudChzbGljZS5jYWxsKF8pKTpjb25zdGFudChfKSxjb250b3Vycyk6dGhyZXNob2xkfTtjb250b3Vycy5zbW9vdGg9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHNtb290aD1fP3Ntb290aExpbmVhcjpub29wLGNvbnRvdXJzKTpzbW9vdGg9PT1zbW9vdGhMaW5lYXJ9O3JldHVybiBjb250b3Vyc30KLy8gVE9ETyBPcHRpbWl6ZSBlZGdlIGNhc2VzLgovLyBUT0RPIE9wdGltaXplIGluZGV4IGNhbGN1bGF0aW9uLgovLyBUT0RPIE9wdGltaXplIGFyZ3VtZW50cy4KZnVuY3Rpb24gYmx1clgoc291cmNlLHRhcmdldCxyKXt2YXIgbj1zb3VyY2Uud2lkdGgsbT1zb3VyY2UuaGVpZ2h0LHc9KHI8PDEpKzE7Zm9yKHZhciBqPTA7ajxtOysrail7Zm9yKHZhciBpPTAsc3I9MDtpPG4rcjsrK2kpe2lmKGk8bil7c3IrPXNvdXJjZS5kYXRhW2kraipuXX1pZihpPj1yKXtpZihpPj13KXtzci09c291cmNlLmRhdGFbaS13K2oqbl19dGFyZ2V0LmRhdGFbaS1yK2oqbl09c3IvTWF0aC5taW4oaSsxLG4tMSt3LWksdyl9fX19Ci8vIFRPRE8gT3B0aW1pemUgZWRnZSBjYXNlcy4KLy8gVE9ETyBPcHRpbWl6ZSBpbmRleCBjYWxjdWxhdGlvbi4KLy8gVE9ETyBPcHRpbWl6ZSBhcmd1bWVudHMuCmZ1bmN0aW9uIGJsdXJZKHNvdXJjZSx0YXJnZXQscil7dmFyIG49c291cmNlLndpZHRoLG09c291cmNlLmhlaWdodCx3PShyPDwxKSsxO2Zvcih2YXIgaT0wO2k8bjsrK2kpe2Zvcih2YXIgaj0wLHNyPTA7ajxtK3I7KytqKXtpZihqPG0pe3NyKz1zb3VyY2UuZGF0YVtpK2oqbl19aWYoaj49cil7aWYoaj49dyl7c3ItPXNvdXJjZS5kYXRhW2krKGotdykqbl19dGFyZ2V0LmRhdGFbaSsoai1yKSpuXT1zci9NYXRoLm1pbihqKzEsbS0xK3ctaix3KX19fX1mdW5jdGlvbiBkZWZhdWx0WChkKXtyZXR1cm4gZFswXX1mdW5jdGlvbiBkZWZhdWx0WShkKXtyZXR1cm4gZFsxXX1mdW5jdGlvbiBkZWZhdWx0V2VpZ2h0KCl7cmV0dXJuIDF9ZnVuY3Rpb24gZGVuc2l0eSgpe3ZhciB4PWRlZmF1bHRYLHk9ZGVmYXVsdFksd2VpZ2h0PWRlZmF1bHRXZWlnaHQsZHg9OTYwLGR5PTUwMCxyPTIwLC8vIGJsdXIgcmFkaXVzCms9MiwvLyBsb2cyKGdyaWQgY2VsbCBzaXplKQpvPXIqMywvLyBncmlkIG9mZnNldCwgdG8gcGFkIGZvciBibHVyCm49ZHgrbyoyPj5rLC8vIGdyaWQgd2lkdGgKbT1keStvKjI+PmssLy8gZ3JpZCBoZWlnaHQKdGhyZXNob2xkPWNvbnN0YW50KDIwKTtmdW5jdGlvbiBkZW5zaXR5KGRhdGEpe3ZhciB2YWx1ZXMwPW5ldyBGbG9hdDMyQXJyYXkobiptKSx2YWx1ZXMxPW5ldyBGbG9hdDMyQXJyYXkobiptKTtkYXRhLmZvckVhY2goZnVuY3Rpb24oZCxpLGRhdGEpe3ZhciB4aT0reChkLGksZGF0YSkrbz4+ayx5aT0reShkLGksZGF0YSkrbz4+ayx3aT0rd2VpZ2h0KGQsaSxkYXRhKTtpZih4aT49MCYmeGk8biYmeWk+PTAmJnlpPG0pe3ZhbHVlczBbeGkreWkqbl0rPXdpfX0pOwovLyBUT0RPIE9wdGltaXplLgpibHVyWCh7d2lkdGg6bixoZWlnaHQ6bSxkYXRhOnZhbHVlczB9LHt3aWR0aDpuLGhlaWdodDptLGRhdGE6dmFsdWVzMX0scj4+ayk7Ymx1clkoe3dpZHRoOm4saGVpZ2h0Om0sZGF0YTp2YWx1ZXMxfSx7d2lkdGg6bixoZWlnaHQ6bSxkYXRhOnZhbHVlczB9LHI+PmspO2JsdXJYKHt3aWR0aDpuLGhlaWdodDptLGRhdGE6dmFsdWVzMH0se3dpZHRoOm4saGVpZ2h0Om0sZGF0YTp2YWx1ZXMxfSxyPj5rKTtibHVyWSh7d2lkdGg6bixoZWlnaHQ6bSxkYXRhOnZhbHVlczF9LHt3aWR0aDpuLGhlaWdodDptLGRhdGE6dmFsdWVzMH0scj4+ayk7Ymx1clgoe3dpZHRoOm4saGVpZ2h0Om0sZGF0YTp2YWx1ZXMwfSx7d2lkdGg6bixoZWlnaHQ6bSxkYXRhOnZhbHVlczF9LHI+PmspO2JsdXJZKHt3aWR0aDpuLGhlaWdodDptLGRhdGE6dmFsdWVzMX0se3dpZHRoOm4saGVpZ2h0Om0sZGF0YTp2YWx1ZXMwfSxyPj5rKTt2YXIgdHo9dGhyZXNob2xkKHZhbHVlczApOwovLyBDb252ZXJ0IG51bWJlciBvZiB0aHJlc2hvbGRzIGludG8gdW5pZm9ybSB0aHJlc2hvbGRzLgppZighQXJyYXkuaXNBcnJheSh0eikpe3ZhciBzdG9wPWQzQXJyYXkubWF4KHZhbHVlczApO3R6PWQzQXJyYXkudGlja1N0ZXAoMCxzdG9wLHR6KTt0ej1kM0FycmF5LnJhbmdlKDAsTWF0aC5mbG9vcihzdG9wL3R6KSp0eix0eik7dHouc2hpZnQoKX1yZXR1cm4gY29udG91cnMoKS50aHJlc2hvbGRzKHR6KS5zaXplKFtuLG1dKSh2YWx1ZXMwKS5tYXAodHJhbnNmb3JtKX1mdW5jdGlvbiB0cmFuc2Zvcm0oZ2VvbWV0cnkpe2dlb21ldHJ5LnZhbHVlKj1NYXRoLnBvdygyLC0yKmspOy8vIERlbnNpdHkgaW4gcG9pbnRzIHBlciBzcXVhcmUgcGl4ZWwuCmdlb21ldHJ5LmNvb3JkaW5hdGVzLmZvckVhY2godHJhbnNmb3JtUG9seWdvbik7cmV0dXJuIGdlb21ldHJ5fWZ1bmN0aW9uIHRyYW5zZm9ybVBvbHlnb24oY29vcmRpbmF0ZXMpe2Nvb3JkaW5hdGVzLmZvckVhY2godHJhbnNmb3JtUmluZyl9ZnVuY3Rpb24gdHJhbnNmb3JtUmluZyhjb29yZGluYXRlcyl7Y29vcmRpbmF0ZXMuZm9yRWFjaCh0cmFuc2Zvcm1Qb2ludCl9Ci8vIFRPRE8gT3B0aW1pemUuCmZ1bmN0aW9uIHRyYW5zZm9ybVBvaW50KGNvb3JkaW5hdGVzKXtjb29yZGluYXRlc1swXT1jb29yZGluYXRlc1swXSpNYXRoLnBvdygyLGspLW87Y29vcmRpbmF0ZXNbMV09Y29vcmRpbmF0ZXNbMV0qTWF0aC5wb3coMixrKS1vfWZ1bmN0aW9uIHJlc2l6ZSgpe289ciozO249ZHgrbyoyPj5rO209ZHkrbyoyPj5rO3JldHVybiBkZW5zaXR5fWRlbnNpdHkueD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksZGVuc2l0eSk6eH07ZGVuc2l0eS55PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh5PXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxkZW5zaXR5KTp5fTtkZW5zaXR5LndlaWdodD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8od2VpZ2h0PXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxkZW5zaXR5KTp3ZWlnaHR9O2RlbnNpdHkuc2l6ZT1mdW5jdGlvbihfKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bZHgsZHldO3ZhciBfMD1NYXRoLmNlaWwoX1swXSksXzE9TWF0aC5jZWlsKF9bMV0pO2lmKCEoXzA+PTApJiYhKF8wPj0wKSl0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgc2l6ZSIpO3JldHVybiBkeD1fMCxkeT1fMSxyZXNpemUoKX07ZGVuc2l0eS5jZWxsU2l6ZT1mdW5jdGlvbihfKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gMTw8aztpZighKChfPStfKT49MSkpdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGNlbGwgc2l6ZSIpO3JldHVybiBrPU1hdGguZmxvb3IoTWF0aC5sb2coXykvTWF0aC5MTjIpLHJlc2l6ZSgpfTtkZW5zaXR5LnRocmVzaG9sZHM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRocmVzaG9sZD10eXBlb2YgXz09PSJmdW5jdGlvbiI/XzpBcnJheS5pc0FycmF5KF8pP2NvbnN0YW50KHNsaWNlLmNhbGwoXykpOmNvbnN0YW50KF8pLGRlbnNpdHkpOnRocmVzaG9sZH07ZGVuc2l0eS5iYW5kd2lkdGg9ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIE1hdGguc3FydChyKihyKzEpKTtpZighKChfPStfKT49MCkpdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGJhbmR3aWR0aCIpO3JldHVybiByPU1hdGgucm91bmQoKE1hdGguc3FydCg0Kl8qXysxKS0xKS8yKSxyZXNpemUoKX07cmV0dXJuIGRlbnNpdHl9ZXhwb3J0cy5jb250b3Vycz1jb250b3VycztleHBvcnRzLmNvbnRvdXJEZW5zaXR5PWRlbnNpdHk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0seyJkMy1hcnJheSI6Mjl9XSwzNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtZGlzcGF0Y2gvIHYxLjAuNiBDb3B5cmlnaHQgMjAxOSBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSkpfSkodGhpcyxmdW5jdGlvbihleHBvcnRzKXsidXNlIHN0cmljdCI7dmFyIG5vb3A9e3ZhbHVlOmZ1bmN0aW9uKCl7fX07ZnVuY3Rpb24gZGlzcGF0Y2goKXtmb3IodmFyIGk9MCxuPWFyZ3VtZW50cy5sZW5ndGgsXz17fSx0O2k8bjsrK2kpe2lmKCEodD1hcmd1bWVudHNbaV0rIiIpfHx0IGluIF98fC9bXHMuXS8udGVzdCh0KSl0aHJvdyBuZXcgRXJyb3IoImlsbGVnYWwgdHlwZTogIit0KTtfW3RdPVtdfXJldHVybiBuZXcgRGlzcGF0Y2goXyl9ZnVuY3Rpb24gRGlzcGF0Y2goXyl7dGhpcy5fPV99ZnVuY3Rpb24gcGFyc2VUeXBlbmFtZXModHlwZW5hbWVzLHR5cGVzKXtyZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxccysvKS5tYXAoZnVuY3Rpb24odCl7dmFyIG5hbWU9IiIsaT10LmluZGV4T2YoIi4iKTtpZihpPj0wKW5hbWU9dC5zbGljZShpKzEpLHQ9dC5zbGljZSgwLGkpO2lmKHQmJiF0eXBlcy5oYXNPd25Qcm9wZXJ0eSh0KSl0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIit0KTtyZXR1cm57dHlwZTp0LG5hbWU6bmFtZX19KX1EaXNwYXRjaC5wcm90b3R5cGU9ZGlzcGF0Y2gucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpEaXNwYXRjaCxvbjpmdW5jdGlvbih0eXBlbmFtZSxjYWxsYmFjayl7dmFyIF89dGhpcy5fLFQ9cGFyc2VUeXBlbmFtZXModHlwZW5hbWUrIiIsXyksdCxpPS0xLG49VC5sZW5ndGg7Ci8vIElmIG5vIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJldHVybiB0aGUgY2FsbGJhY2sgb2YgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuCmlmKGFyZ3VtZW50cy5sZW5ndGg8Mil7d2hpbGUoKytpPG4paWYoKHQ9KHR5cGVuYW1lPVRbaV0pLnR5cGUpJiYodD1nZXQoX1t0XSx0eXBlbmFtZS5uYW1lKSkpcmV0dXJuIHQ7cmV0dXJufQovLyBJZiBhIHR5cGUgd2FzIHNwZWNpZmllZCwgc2V0IHRoZSBjYWxsYmFjayBmb3IgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuCi8vIE90aGVyd2lzZSwgaWYgYSBudWxsIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJlbW92ZSBjYWxsYmFja3Mgb2YgdGhlIGdpdmVuIG5hbWUuCmlmKGNhbGxiYWNrIT1udWxsJiZ0eXBlb2YgY2FsbGJhY2shPT0iZnVuY3Rpb24iKXRocm93IG5ldyBFcnJvcigiaW52YWxpZCBjYWxsYmFjazogIitjYWxsYmFjayk7d2hpbGUoKytpPG4pe2lmKHQ9KHR5cGVuYW1lPVRbaV0pLnR5cGUpX1t0XT1zZXQoX1t0XSx0eXBlbmFtZS5uYW1lLGNhbGxiYWNrKTtlbHNlIGlmKGNhbGxiYWNrPT1udWxsKWZvcih0IGluIF8pX1t0XT1zZXQoX1t0XSx0eXBlbmFtZS5uYW1lLG51bGwpfXJldHVybiB0aGlzfSxjb3B5OmZ1bmN0aW9uKCl7dmFyIGNvcHk9e30sXz10aGlzLl87Zm9yKHZhciB0IGluIF8pY29weVt0XT1fW3RdLnNsaWNlKCk7cmV0dXJuIG5ldyBEaXNwYXRjaChjb3B5KX0sY2FsbDpmdW5jdGlvbih0eXBlLHRoYXQpe2lmKChuPWFyZ3VtZW50cy5sZW5ndGgtMik+MClmb3IodmFyIGFyZ3M9bmV3IEFycmF5KG4pLGk9MCxuLHQ7aTxuOysraSlhcmdzW2ldPWFyZ3VtZW50c1tpKzJdO2lmKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpdGhyb3cgbmV3IEVycm9yKCJ1bmtub3duIHR5cGU6ICIrdHlwZSk7Zm9yKHQ9dGhpcy5fW3R5cGVdLGk9MCxuPXQubGVuZ3RoO2k8bjsrK2kpdFtpXS52YWx1ZS5hcHBseSh0aGF0LGFyZ3MpfSxhcHBseTpmdW5jdGlvbih0eXBlLHRoYXQsYXJncyl7aWYoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSl0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIit0eXBlKTtmb3IodmFyIHQ9dGhpcy5fW3R5cGVdLGk9MCxuPXQubGVuZ3RoO2k8bjsrK2kpdFtpXS52YWx1ZS5hcHBseSh0aGF0LGFyZ3MpfX07ZnVuY3Rpb24gZ2V0KHR5cGUsbmFtZSl7Zm9yKHZhciBpPTAsbj10eXBlLmxlbmd0aCxjO2k8bjsrK2kpe2lmKChjPXR5cGVbaV0pLm5hbWU9PT1uYW1lKXtyZXR1cm4gYy52YWx1ZX19fWZ1bmN0aW9uIHNldCh0eXBlLG5hbWUsY2FsbGJhY2spe2Zvcih2YXIgaT0wLG49dHlwZS5sZW5ndGg7aTxuOysraSl7aWYodHlwZVtpXS5uYW1lPT09bmFtZSl7dHlwZVtpXT1ub29wLHR5cGU9dHlwZS5zbGljZSgwLGkpLmNvbmNhdCh0eXBlLnNsaWNlKGkrMSkpO2JyZWFrfX1pZihjYWxsYmFjayE9bnVsbCl0eXBlLnB1c2goe25hbWU6bmFtZSx2YWx1ZTpjYWxsYmFja30pO3JldHVybiB0eXBlfWV4cG9ydHMuZGlzcGF0Y2g9ZGlzcGF0Y2g7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0se31dLDM3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy1kcmFnLyB2MS4yLjUgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyxyZXF1aXJlKCJkMy1kaXNwYXRjaCIpLHJlcXVpcmUoImQzLXNlbGVjdGlvbiIpKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIiwiZDMtZGlzcGF0Y2giLCJkMy1zZWxlY3Rpb24iXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9LGdsb2JhbC5kMyxnbG9iYWwuZDMpKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM0Rpc3BhdGNoLGQzU2VsZWN0aW9uKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbm9wcm9wYWdhdGlvbigpe2QzU2VsZWN0aW9uLmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIG5vZXZlbnQoKXtkM1NlbGVjdGlvbi5ldmVudC5wcmV2ZW50RGVmYXVsdCgpO2QzU2VsZWN0aW9uLmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIG5vZHJhZyh2aWV3KXt2YXIgcm9vdD12aWV3LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxzZWxlY3Rpb249ZDNTZWxlY3Rpb24uc2VsZWN0KHZpZXcpLm9uKCJkcmFnc3RhcnQuZHJhZyIsbm9ldmVudCx0cnVlKTtpZigib25zZWxlY3RzdGFydCJpbiByb290KXtzZWxlY3Rpb24ub24oInNlbGVjdHN0YXJ0LmRyYWciLG5vZXZlbnQsdHJ1ZSl9ZWxzZXtyb290Ll9fbm9zZWxlY3Q9cm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0O3Jvb3Quc3R5bGUuTW96VXNlclNlbGVjdD0ibm9uZSJ9fWZ1bmN0aW9uIHllc2RyYWcodmlldyxub2NsaWNrKXt2YXIgcm9vdD12aWV3LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxzZWxlY3Rpb249ZDNTZWxlY3Rpb24uc2VsZWN0KHZpZXcpLm9uKCJkcmFnc3RhcnQuZHJhZyIsbnVsbCk7aWYobm9jbGljayl7c2VsZWN0aW9uLm9uKCJjbGljay5kcmFnIixub2V2ZW50LHRydWUpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtzZWxlY3Rpb24ub24oImNsaWNrLmRyYWciLG51bGwpfSwwKX1pZigib25zZWxlY3RzdGFydCJpbiByb290KXtzZWxlY3Rpb24ub24oInNlbGVjdHN0YXJ0LmRyYWciLG51bGwpfWVsc2V7cm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0PXJvb3QuX19ub3NlbGVjdDtkZWxldGUgcm9vdC5fX25vc2VsZWN0fX1mdW5jdGlvbiBjb25zdGFudCh4KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4geH19ZnVuY3Rpb24gRHJhZ0V2ZW50KHRhcmdldCx0eXBlLHN1YmplY3QsaWQsYWN0aXZlLHgseSxkeCxkeSxkaXNwYXRjaCl7dGhpcy50YXJnZXQ9dGFyZ2V0O3RoaXMudHlwZT10eXBlO3RoaXMuc3ViamVjdD1zdWJqZWN0O3RoaXMuaWRlbnRpZmllcj1pZDt0aGlzLmFjdGl2ZT1hY3RpdmU7dGhpcy54PXg7dGhpcy55PXk7dGhpcy5keD1keDt0aGlzLmR5PWR5O3RoaXMuXz1kaXNwYXRjaH1EcmFnRXZlbnQucHJvdG90eXBlLm9uPWZ1bmN0aW9uKCl7dmFyIHZhbHVlPXRoaXMuXy5vbi5hcHBseSh0aGlzLl8sYXJndW1lbnRzKTtyZXR1cm4gdmFsdWU9PT10aGlzLl8/dGhpczp2YWx1ZX07Ci8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LgpmdW5jdGlvbiBkZWZhdWx0RmlsdGVyKCl7cmV0dXJuIWQzU2VsZWN0aW9uLmV2ZW50LmN0cmxLZXkmJiFkM1NlbGVjdGlvbi5ldmVudC5idXR0b259ZnVuY3Rpb24gZGVmYXVsdENvbnRhaW5lcigpe3JldHVybiB0aGlzLnBhcmVudE5vZGV9ZnVuY3Rpb24gZGVmYXVsdFN1YmplY3QoZCl7cmV0dXJuIGQ9PW51bGw/e3g6ZDNTZWxlY3Rpb24uZXZlbnQueCx5OmQzU2VsZWN0aW9uLmV2ZW50Lnl9OmR9ZnVuY3Rpb24gZGVmYXVsdFRvdWNoYWJsZSgpe3JldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHN8fCJvbnRvdWNoc3RhcnQiaW4gdGhpc31mdW5jdGlvbiBkcmFnKCl7dmFyIGZpbHRlcj1kZWZhdWx0RmlsdGVyLGNvbnRhaW5lcj1kZWZhdWx0Q29udGFpbmVyLHN1YmplY3Q9ZGVmYXVsdFN1YmplY3QsdG91Y2hhYmxlPWRlZmF1bHRUb3VjaGFibGUsZ2VzdHVyZXM9e30sbGlzdGVuZXJzPWQzRGlzcGF0Y2guZGlzcGF0Y2goInN0YXJ0IiwiZHJhZyIsImVuZCIpLGFjdGl2ZT0wLG1vdXNlZG93bngsbW91c2Vkb3dueSxtb3VzZW1vdmluZyx0b3VjaGVuZGluZyxjbGlja0Rpc3RhbmNlMj0wO2Z1bmN0aW9uIGRyYWcoc2VsZWN0aW9uKXtzZWxlY3Rpb24ub24oIm1vdXNlZG93bi5kcmFnIixtb3VzZWRvd25lZCkuZmlsdGVyKHRvdWNoYWJsZSkub24oInRvdWNoc3RhcnQuZHJhZyIsdG91Y2hzdGFydGVkKS5vbigidG91Y2htb3ZlLmRyYWciLHRvdWNobW92ZWQpLm9uKCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWciLHRvdWNoZW5kZWQpLnN0eWxlKCJ0b3VjaC1hY3Rpb24iLCJub25lIikuc3R5bGUoIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvciIsInJnYmEoMCwwLDAsMCkiKX1mdW5jdGlvbiBtb3VzZWRvd25lZCgpe2lmKHRvdWNoZW5kaW5nfHwhZmlsdGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSlyZXR1cm47dmFyIGdlc3R1cmU9YmVmb3Jlc3RhcnQoIm1vdXNlIixjb250YWluZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGQzU2VsZWN0aW9uLm1vdXNlLHRoaXMsYXJndW1lbnRzKTtpZighZ2VzdHVyZSlyZXR1cm47ZDNTZWxlY3Rpb24uc2VsZWN0KGQzU2VsZWN0aW9uLmV2ZW50LnZpZXcpLm9uKCJtb3VzZW1vdmUuZHJhZyIsbW91c2Vtb3ZlZCx0cnVlKS5vbigibW91c2V1cC5kcmFnIixtb3VzZXVwcGVkLHRydWUpO25vZHJhZyhkM1NlbGVjdGlvbi5ldmVudC52aWV3KTtub3Byb3BhZ2F0aW9uKCk7bW91c2Vtb3Zpbmc9ZmFsc2U7bW91c2Vkb3dueD1kM1NlbGVjdGlvbi5ldmVudC5jbGllbnRYO21vdXNlZG93bnk9ZDNTZWxlY3Rpb24uZXZlbnQuY2xpZW50WTtnZXN0dXJlKCJzdGFydCIpfWZ1bmN0aW9uIG1vdXNlbW92ZWQoKXtub2V2ZW50KCk7aWYoIW1vdXNlbW92aW5nKXt2YXIgZHg9ZDNTZWxlY3Rpb24uZXZlbnQuY2xpZW50WC1tb3VzZWRvd254LGR5PWQzU2VsZWN0aW9uLmV2ZW50LmNsaWVudFktbW91c2Vkb3dueTttb3VzZW1vdmluZz1keCpkeCtkeSpkeT5jbGlja0Rpc3RhbmNlMn1nZXN0dXJlcy5tb3VzZSgiZHJhZyIpfWZ1bmN0aW9uIG1vdXNldXBwZWQoKXtkM1NlbGVjdGlvbi5zZWxlY3QoZDNTZWxlY3Rpb24uZXZlbnQudmlldykub24oIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZyIsbnVsbCk7eWVzZHJhZyhkM1NlbGVjdGlvbi5ldmVudC52aWV3LG1vdXNlbW92aW5nKTtub2V2ZW50KCk7Z2VzdHVyZXMubW91c2UoImVuZCIpfWZ1bmN0aW9uIHRvdWNoc3RhcnRlZCgpe2lmKCFmaWx0ZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpKXJldHVybjt2YXIgdG91Y2hlcz1kM1NlbGVjdGlvbi5ldmVudC5jaGFuZ2VkVG91Y2hlcyxjPWNvbnRhaW5lci5hcHBseSh0aGlzLGFyZ3VtZW50cyksbj10b3VjaGVzLmxlbmd0aCxpLGdlc3R1cmU7Zm9yKGk9MDtpPG47KytpKXtpZihnZXN0dXJlPWJlZm9yZXN0YXJ0KHRvdWNoZXNbaV0uaWRlbnRpZmllcixjLGQzU2VsZWN0aW9uLnRvdWNoLHRoaXMsYXJndW1lbnRzKSl7bm9wcm9wYWdhdGlvbigpO2dlc3R1cmUoInN0YXJ0Iil9fX1mdW5jdGlvbiB0b3VjaG1vdmVkKCl7dmFyIHRvdWNoZXM9ZDNTZWxlY3Rpb24uZXZlbnQuY2hhbmdlZFRvdWNoZXMsbj10b3VjaGVzLmxlbmd0aCxpLGdlc3R1cmU7Zm9yKGk9MDtpPG47KytpKXtpZihnZXN0dXJlPWdlc3R1cmVzW3RvdWNoZXNbaV0uaWRlbnRpZmllcl0pe25vZXZlbnQoKTtnZXN0dXJlKCJkcmFnIil9fX1mdW5jdGlvbiB0b3VjaGVuZGVkKCl7dmFyIHRvdWNoZXM9ZDNTZWxlY3Rpb24uZXZlbnQuY2hhbmdlZFRvdWNoZXMsbj10b3VjaGVzLmxlbmd0aCxpLGdlc3R1cmU7aWYodG91Y2hlbmRpbmcpY2xlYXJUaW1lb3V0KHRvdWNoZW5kaW5nKTt0b3VjaGVuZGluZz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dG91Y2hlbmRpbmc9bnVsbH0sNTAwKTsvLyBHaG9zdCBjbGlja3MgYXJlIGRlbGF5ZWQhCmZvcihpPTA7aTxuOysraSl7aWYoZ2VzdHVyZT1nZXN0dXJlc1t0b3VjaGVzW2ldLmlkZW50aWZpZXJdKXtub3Byb3BhZ2F0aW9uKCk7Z2VzdHVyZSgiZW5kIil9fX1mdW5jdGlvbiBiZWZvcmVzdGFydChpZCxjb250YWluZXIscG9pbnQsdGhhdCxhcmdzKXt2YXIgcD1wb2ludChjb250YWluZXIsaWQpLHMsZHgsZHksc3VibGlzdGVuZXJzPWxpc3RlbmVycy5jb3B5KCk7aWYoIWQzU2VsZWN0aW9uLmN1c3RvbUV2ZW50KG5ldyBEcmFnRXZlbnQoZHJhZywiYmVmb3Jlc3RhcnQiLHMsaWQsYWN0aXZlLHBbMF0scFsxXSwwLDAsc3VibGlzdGVuZXJzKSxmdW5jdGlvbigpe2lmKChkM1NlbGVjdGlvbi5ldmVudC5zdWJqZWN0PXM9c3ViamVjdC5hcHBseSh0aGF0LGFyZ3MpKT09bnVsbClyZXR1cm4gZmFsc2U7ZHg9cy54LXBbMF18fDA7ZHk9cy55LXBbMV18fDA7cmV0dXJuIHRydWV9KSlyZXR1cm47cmV0dXJuIGZ1bmN0aW9uIGdlc3R1cmUodHlwZSl7dmFyIHAwPXAsbjtzd2l0Y2godHlwZSl7Y2FzZSJzdGFydCI6Z2VzdHVyZXNbaWRdPWdlc3R1cmUsbj1hY3RpdmUrKzticmVhaztjYXNlImVuZCI6ZGVsZXRlIGdlc3R1cmVzW2lkXSwtLWFjdGl2ZTsvLyBub2JyZWFrCmNhc2UiZHJhZyI6cD1wb2ludChjb250YWluZXIsaWQpLG49YWN0aXZlO2JyZWFrfWQzU2VsZWN0aW9uLmN1c3RvbUV2ZW50KG5ldyBEcmFnRXZlbnQoZHJhZyx0eXBlLHMsaWQsbixwWzBdK2R4LHBbMV0rZHkscFswXS1wMFswXSxwWzFdLXAwWzFdLHN1Ymxpc3RlbmVycyksc3VibGlzdGVuZXJzLmFwcGx5LHN1Ymxpc3RlbmVycyxbdHlwZSx0aGF0LGFyZ3NdKX19ZHJhZy5maWx0ZXI9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGZpbHRlcj10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCghIV8pLGRyYWcpOmZpbHRlcn07ZHJhZy5jb250YWluZXI9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGNvbnRhaW5lcj10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudChfKSxkcmFnKTpjb250YWluZXJ9O2RyYWcuc3ViamVjdD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc3ViamVjdD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudChfKSxkcmFnKTpzdWJqZWN0fTtkcmFnLnRvdWNoYWJsZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odG91Y2hhYmxlPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCEhXyksZHJhZyk6dG91Y2hhYmxlfTtkcmFnLm9uPWZ1bmN0aW9uKCl7dmFyIHZhbHVlPWxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsYXJndW1lbnRzKTtyZXR1cm4gdmFsdWU9PT1saXN0ZW5lcnM/ZHJhZzp2YWx1ZX07ZHJhZy5jbGlja0Rpc3RhbmNlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjbGlja0Rpc3RhbmNlMj0oXz0rXykqXyxkcmFnKTpNYXRoLnNxcnQoY2xpY2tEaXN0YW5jZTIpfTtyZXR1cm4gZHJhZ31leHBvcnRzLmRyYWc9ZHJhZztleHBvcnRzLmRyYWdEaXNhYmxlPW5vZHJhZztleHBvcnRzLmRyYWdFbmFibGU9eWVzZHJhZztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7ImQzLWRpc3BhdGNoIjozNiwiZDMtc2VsZWN0aW9uIjo1Mn1dLDM4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy1kc3YvIHYxLjIuMCBDb3B5cmlnaHQgMjAxOSBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSkpfSkodGhpcyxmdW5jdGlvbihleHBvcnRzKXsidXNlIHN0cmljdCI7dmFyIEVPTD17fSxFT0Y9e30sUVVPVEU9MzQsTkVXTElORT0xMCxSRVRVUk49MTM7ZnVuY3Rpb24gb2JqZWN0Q29udmVydGVyKGNvbHVtbnMpe3JldHVybiBuZXcgRnVuY3Rpb24oImQiLCJyZXR1cm4geyIrY29sdW1ucy5tYXAoZnVuY3Rpb24obmFtZSxpKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkobmFtZSkrIjogZFsiK2krJ10gfHwgIiInfSkuam9pbigiLCIpKyJ9Iil9ZnVuY3Rpb24gY3VzdG9tQ29udmVydGVyKGNvbHVtbnMsZil7dmFyIG9iamVjdD1vYmplY3RDb252ZXJ0ZXIoY29sdW1ucyk7cmV0dXJuIGZ1bmN0aW9uKHJvdyxpKXtyZXR1cm4gZihvYmplY3Qocm93KSxpLGNvbHVtbnMpfX0KLy8gQ29tcHV0ZSB1bmlxdWUgY29sdW1ucyBpbiBvcmRlciBvZiBkaXNjb3ZlcnkuCmZ1bmN0aW9uIGluZmVyQ29sdW1ucyhyb3dzKXt2YXIgY29sdW1uU2V0PU9iamVjdC5jcmVhdGUobnVsbCksY29sdW1ucz1bXTtyb3dzLmZvckVhY2goZnVuY3Rpb24ocm93KXtmb3IodmFyIGNvbHVtbiBpbiByb3cpe2lmKCEoY29sdW1uIGluIGNvbHVtblNldCkpe2NvbHVtbnMucHVzaChjb2x1bW5TZXRbY29sdW1uXT1jb2x1bW4pfX19KTtyZXR1cm4gY29sdW1uc31mdW5jdGlvbiBwYWQodmFsdWUsd2lkdGgpe3ZhciBzPXZhbHVlKyIiLGxlbmd0aD1zLmxlbmd0aDtyZXR1cm4gbGVuZ3RoPHdpZHRoP25ldyBBcnJheSh3aWR0aC1sZW5ndGgrMSkuam9pbigwKStzOnN9ZnVuY3Rpb24gZm9ybWF0WWVhcih5ZWFyKXtyZXR1cm4geWVhcjwwPyItIitwYWQoLXllYXIsNik6eWVhcj45OTk5PyIrIitwYWQoeWVhciw2KTpwYWQoeWVhciw0KX1mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUpe3ZhciBob3Vycz1kYXRlLmdldFVUQ0hvdXJzKCksbWludXRlcz1kYXRlLmdldFVUQ01pbnV0ZXMoKSxzZWNvbmRzPWRhdGUuZ2V0VVRDU2Vjb25kcygpLG1pbGxpc2Vjb25kcz1kYXRlLmdldFVUQ01pbGxpc2Vjb25kcygpO3JldHVybiBpc05hTihkYXRlKT8iSW52YWxpZCBEYXRlIjpmb3JtYXRZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSkrIi0iK3BhZChkYXRlLmdldFVUQ01vbnRoKCkrMSwyKSsiLSIrcGFkKGRhdGUuZ2V0VVRDRGF0ZSgpLDIpKyhtaWxsaXNlY29uZHM/IlQiK3BhZChob3VycywyKSsiOiIrcGFkKG1pbnV0ZXMsMikrIjoiK3BhZChzZWNvbmRzLDIpKyIuIitwYWQobWlsbGlzZWNvbmRzLDMpKyJaIjpzZWNvbmRzPyJUIitwYWQoaG91cnMsMikrIjoiK3BhZChtaW51dGVzLDIpKyI6IitwYWQoc2Vjb25kcywyKSsiWiI6bWludXRlc3x8aG91cnM/IlQiK3BhZChob3VycywyKSsiOiIrcGFkKG1pbnV0ZXMsMikrIloiOiIiKX1mdW5jdGlvbiBkc3YoZGVsaW1pdGVyKXt2YXIgcmVGb3JtYXQ9bmV3IFJlZ0V4cCgnWyInK2RlbGltaXRlcisiXG5ccl0iKSxERUxJTUlURVI9ZGVsaW1pdGVyLmNoYXJDb2RlQXQoMCk7ZnVuY3Rpb24gcGFyc2UodGV4dCxmKXt2YXIgY29udmVydCxjb2x1bW5zLHJvd3M9cGFyc2VSb3dzKHRleHQsZnVuY3Rpb24ocm93LGkpe2lmKGNvbnZlcnQpcmV0dXJuIGNvbnZlcnQocm93LGktMSk7Y29sdW1ucz1yb3csY29udmVydD1mP2N1c3RvbUNvbnZlcnRlcihyb3csZik6b2JqZWN0Q29udmVydGVyKHJvdyl9KTtyb3dzLmNvbHVtbnM9Y29sdW1uc3x8W107cmV0dXJuIHJvd3N9ZnVuY3Rpb24gcGFyc2VSb3dzKHRleHQsZil7dmFyIHJvd3M9W10sLy8gb3V0cHV0IHJvd3MKTj10ZXh0Lmxlbmd0aCxJPTAsLy8gY3VycmVudCBjaGFyYWN0ZXIgaW5kZXgKbj0wLC8vIGN1cnJlbnQgbGluZSBudW1iZXIKdCwvLyBjdXJyZW50IHRva2VuCmVvZj1OPD0wLC8vIGN1cnJlbnQgdG9rZW4gZm9sbG93ZWQgYnkgRU9GPwplb2w9ZmFsc2U7Ly8gY3VycmVudCB0b2tlbiBmb2xsb3dlZCBieSBFT0w/Ci8vIFN0cmlwIHRoZSB0cmFpbGluZyBuZXdsaW5lLgppZih0ZXh0LmNoYXJDb2RlQXQoTi0xKT09PU5FV0xJTkUpLS1OO2lmKHRleHQuY2hhckNvZGVBdChOLTEpPT09UkVUVVJOKS0tTjtmdW5jdGlvbiB0b2tlbigpe2lmKGVvZilyZXR1cm4gRU9GO2lmKGVvbClyZXR1cm4gZW9sPWZhbHNlLEVPTDsKLy8gVW5lc2NhcGUgcXVvdGVzLgp2YXIgaSxqPUksYztpZih0ZXh0LmNoYXJDb2RlQXQoaik9PT1RVU9URSl7d2hpbGUoSSsrPE4mJnRleHQuY2hhckNvZGVBdChJKSE9PVFVT1RFfHx0ZXh0LmNoYXJDb2RlQXQoKytJKT09PVFVT1RFKTtpZigoaT1JKT49Tillb2Y9dHJ1ZTtlbHNlIGlmKChjPXRleHQuY2hhckNvZGVBdChJKyspKT09PU5FV0xJTkUpZW9sPXRydWU7ZWxzZSBpZihjPT09UkVUVVJOKXtlb2w9dHJ1ZTtpZih0ZXh0LmNoYXJDb2RlQXQoSSk9PT1ORVdMSU5FKSsrSX1yZXR1cm4gdGV4dC5zbGljZShqKzEsaS0xKS5yZXBsYWNlKC8iIi9nLCciJyl9Ci8vIEZpbmQgbmV4dCBkZWxpbWl0ZXIgb3IgbmV3bGluZS4Kd2hpbGUoSTxOKXtpZigoYz10ZXh0LmNoYXJDb2RlQXQoaT1JKyspKT09PU5FV0xJTkUpZW9sPXRydWU7ZWxzZSBpZihjPT09UkVUVVJOKXtlb2w9dHJ1ZTtpZih0ZXh0LmNoYXJDb2RlQXQoSSk9PT1ORVdMSU5FKSsrSX1lbHNlIGlmKGMhPT1ERUxJTUlURVIpY29udGludWU7cmV0dXJuIHRleHQuc2xpY2UoaixpKX0KLy8gUmV0dXJuIGxhc3QgdG9rZW4gYmVmb3JlIEVPRi4KcmV0dXJuIGVvZj10cnVlLHRleHQuc2xpY2UoaixOKX13aGlsZSgodD10b2tlbigpKSE9PUVPRil7dmFyIHJvdz1bXTt3aGlsZSh0IT09RU9MJiZ0IT09RU9GKXJvdy5wdXNoKHQpLHQ9dG9rZW4oKTtpZihmJiYocm93PWYocm93LG4rKykpPT1udWxsKWNvbnRpbnVlO3Jvd3MucHVzaChyb3cpfXJldHVybiByb3dzfWZ1bmN0aW9uIHByZWZvcm1hdEJvZHkocm93cyxjb2x1bW5zKXtyZXR1cm4gcm93cy5tYXAoZnVuY3Rpb24ocm93KXtyZXR1cm4gY29sdW1ucy5tYXAoZnVuY3Rpb24oY29sdW1uKXtyZXR1cm4gZm9ybWF0VmFsdWUocm93W2NvbHVtbl0pfSkuam9pbihkZWxpbWl0ZXIpfSl9ZnVuY3Rpb24gZm9ybWF0KHJvd3MsY29sdW1ucyl7aWYoY29sdW1ucz09bnVsbCljb2x1bW5zPWluZmVyQ29sdW1ucyhyb3dzKTtyZXR1cm5bY29sdW1ucy5tYXAoZm9ybWF0VmFsdWUpLmpvaW4oZGVsaW1pdGVyKV0uY29uY2F0KHByZWZvcm1hdEJvZHkocm93cyxjb2x1bW5zKSkuam9pbigiXG4iKX1mdW5jdGlvbiBmb3JtYXRCb2R5KHJvd3MsY29sdW1ucyl7aWYoY29sdW1ucz09bnVsbCljb2x1bW5zPWluZmVyQ29sdW1ucyhyb3dzKTtyZXR1cm4gcHJlZm9ybWF0Qm9keShyb3dzLGNvbHVtbnMpLmpvaW4oIlxuIil9ZnVuY3Rpb24gZm9ybWF0Um93cyhyb3dzKXtyZXR1cm4gcm93cy5tYXAoZm9ybWF0Um93KS5qb2luKCJcbiIpfWZ1bmN0aW9uIGZvcm1hdFJvdyhyb3cpe3JldHVybiByb3cubWFwKGZvcm1hdFZhbHVlKS5qb2luKGRlbGltaXRlcil9ZnVuY3Rpb24gZm9ybWF0VmFsdWUodmFsdWUpe3JldHVybiB2YWx1ZT09bnVsbD8iIjp2YWx1ZSBpbnN0YW5jZW9mIERhdGU/Zm9ybWF0RGF0ZSh2YWx1ZSk6cmVGb3JtYXQudGVzdCh2YWx1ZSs9IiIpPyciJyt2YWx1ZS5yZXBsYWNlKC8iL2csJyIiJykrJyInOnZhbHVlfXJldHVybntwYXJzZTpwYXJzZSxwYXJzZVJvd3M6cGFyc2VSb3dzLGZvcm1hdDpmb3JtYXQsZm9ybWF0Qm9keTpmb3JtYXRCb2R5LGZvcm1hdFJvd3M6Zm9ybWF0Um93cyxmb3JtYXRSb3c6Zm9ybWF0Um93LGZvcm1hdFZhbHVlOmZvcm1hdFZhbHVlfX12YXIgY3N2PWRzdigiLCIpO3ZhciBjc3ZQYXJzZT1jc3YucGFyc2U7dmFyIGNzdlBhcnNlUm93cz1jc3YucGFyc2VSb3dzO3ZhciBjc3ZGb3JtYXQ9Y3N2LmZvcm1hdDt2YXIgY3N2Rm9ybWF0Qm9keT1jc3YuZm9ybWF0Qm9keTt2YXIgY3N2Rm9ybWF0Um93cz1jc3YuZm9ybWF0Um93czt2YXIgY3N2Rm9ybWF0Um93PWNzdi5mb3JtYXRSb3c7dmFyIGNzdkZvcm1hdFZhbHVlPWNzdi5mb3JtYXRWYWx1ZTt2YXIgdHN2PWRzdigiXHQiKTt2YXIgdHN2UGFyc2U9dHN2LnBhcnNlO3ZhciB0c3ZQYXJzZVJvd3M9dHN2LnBhcnNlUm93czt2YXIgdHN2Rm9ybWF0PXRzdi5mb3JtYXQ7dmFyIHRzdkZvcm1hdEJvZHk9dHN2LmZvcm1hdEJvZHk7dmFyIHRzdkZvcm1hdFJvd3M9dHN2LmZvcm1hdFJvd3M7dmFyIHRzdkZvcm1hdFJvdz10c3YuZm9ybWF0Um93O3ZhciB0c3ZGb3JtYXRWYWx1ZT10c3YuZm9ybWF0VmFsdWU7ZnVuY3Rpb24gYXV0b1R5cGUob2JqZWN0KXtmb3IodmFyIGtleSBpbiBvYmplY3Qpe3ZhciB2YWx1ZT1vYmplY3Rba2V5XS50cmltKCksbnVtYmVyLG07aWYoIXZhbHVlKXZhbHVlPW51bGw7ZWxzZSBpZih2YWx1ZT09PSJ0cnVlIil2YWx1ZT10cnVlO2Vsc2UgaWYodmFsdWU9PT0iZmFsc2UiKXZhbHVlPWZhbHNlO2Vsc2UgaWYodmFsdWU9PT0iTmFOIil2YWx1ZT1OYU47ZWxzZSBpZighaXNOYU4obnVtYmVyPSt2YWx1ZSkpdmFsdWU9bnVtYmVyO2Vsc2UgaWYobT12YWx1ZS5tYXRjaCgvXihbLStdXGR7Mn0pP1xkezR9KC1cZHsyfSgtXGR7Mn0pPyk/KFRcZHsyfTpcZHsyfSg6XGR7Mn0oXC5cZHszfSk/KT8oWnxbLStdXGR7Mn06XGR7Mn0pPyk/JC8pKXtpZihmaXh0eiYmISFtWzRdJiYhbVs3XSl2YWx1ZT12YWx1ZS5yZXBsYWNlKC8tL2csIi8iKS5yZXBsYWNlKC9ULywiICIpO3ZhbHVlPW5ldyBEYXRlKHZhbHVlKX1lbHNlIGNvbnRpbnVlO29iamVjdFtrZXldPXZhbHVlfXJldHVybiBvYmplY3R9Ci8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kMy9kMy1kc3YvaXNzdWVzLzQ1CnZhciBmaXh0ej1uZXcgRGF0ZSgiMjAxOS0wMS0wMVQwMDowMCIpLmdldEhvdXJzKCl8fG5ldyBEYXRlKCIyMDE5LTA3LTAxVDAwOjAwIikuZ2V0SG91cnMoKTtleHBvcnRzLmF1dG9UeXBlPWF1dG9UeXBlO2V4cG9ydHMuY3N2Rm9ybWF0PWNzdkZvcm1hdDtleHBvcnRzLmNzdkZvcm1hdEJvZHk9Y3N2Rm9ybWF0Qm9keTtleHBvcnRzLmNzdkZvcm1hdFJvdz1jc3ZGb3JtYXRSb3c7ZXhwb3J0cy5jc3ZGb3JtYXRSb3dzPWNzdkZvcm1hdFJvd3M7ZXhwb3J0cy5jc3ZGb3JtYXRWYWx1ZT1jc3ZGb3JtYXRWYWx1ZTtleHBvcnRzLmNzdlBhcnNlPWNzdlBhcnNlO2V4cG9ydHMuY3N2UGFyc2VSb3dzPWNzdlBhcnNlUm93cztleHBvcnRzLmRzdkZvcm1hdD1kc3Y7ZXhwb3J0cy50c3ZGb3JtYXQ9dHN2Rm9ybWF0O2V4cG9ydHMudHN2Rm9ybWF0Qm9keT10c3ZGb3JtYXRCb2R5O2V4cG9ydHMudHN2Rm9ybWF0Um93PXRzdkZvcm1hdFJvdztleHBvcnRzLnRzdkZvcm1hdFJvd3M9dHN2Rm9ybWF0Um93cztleHBvcnRzLnRzdkZvcm1hdFZhbHVlPXRzdkZvcm1hdFZhbHVlO2V4cG9ydHMudHN2UGFyc2U9dHN2UGFyc2U7ZXhwb3J0cy50c3ZQYXJzZVJvd3M9dHN2UGFyc2VSb3dzO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSwzOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtZWFzZS8gdjEuMC42IENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBsaW5lYXIodCl7cmV0dXJuK3R9ZnVuY3Rpb24gcXVhZEluKHQpe3JldHVybiB0KnR9ZnVuY3Rpb24gcXVhZE91dCh0KXtyZXR1cm4gdCooMi10KX1mdW5jdGlvbiBxdWFkSW5PdXQodCl7cmV0dXJuKCh0Kj0yKTw9MT90KnQ6LS10KigyLXQpKzEpLzJ9ZnVuY3Rpb24gY3ViaWNJbih0KXtyZXR1cm4gdCp0KnR9ZnVuY3Rpb24gY3ViaWNPdXQodCl7cmV0dXJuLS10KnQqdCsxfWZ1bmN0aW9uIGN1YmljSW5PdXQodCl7cmV0dXJuKCh0Kj0yKTw9MT90KnQqdDoodC09MikqdCp0KzIpLzJ9dmFyIGV4cG9uZW50PTM7dmFyIHBvbHlJbj1mdW5jdGlvbiBjdXN0b20oZSl7ZT0rZTtmdW5jdGlvbiBwb2x5SW4odCl7cmV0dXJuIE1hdGgucG93KHQsZSl9cG9seUluLmV4cG9uZW50PWN1c3RvbTtyZXR1cm4gcG9seUlufShleHBvbmVudCk7dmFyIHBvbHlPdXQ9ZnVuY3Rpb24gY3VzdG9tKGUpe2U9K2U7ZnVuY3Rpb24gcG9seU91dCh0KXtyZXR1cm4gMS1NYXRoLnBvdygxLXQsZSl9cG9seU91dC5leHBvbmVudD1jdXN0b207cmV0dXJuIHBvbHlPdXR9KGV4cG9uZW50KTt2YXIgcG9seUluT3V0PWZ1bmN0aW9uIGN1c3RvbShlKXtlPStlO2Z1bmN0aW9uIHBvbHlJbk91dCh0KXtyZXR1cm4oKHQqPTIpPD0xP01hdGgucG93KHQsZSk6Mi1NYXRoLnBvdygyLXQsZSkpLzJ9cG9seUluT3V0LmV4cG9uZW50PWN1c3RvbTtyZXR1cm4gcG9seUluT3V0fShleHBvbmVudCk7dmFyIHBpPU1hdGguUEksaGFsZlBpPXBpLzI7ZnVuY3Rpb24gc2luSW4odCl7cmV0dXJuIDEtTWF0aC5jb3ModCpoYWxmUGkpfWZ1bmN0aW9uIHNpbk91dCh0KXtyZXR1cm4gTWF0aC5zaW4odCpoYWxmUGkpfWZ1bmN0aW9uIHNpbkluT3V0KHQpe3JldHVybigxLU1hdGguY29zKHBpKnQpKS8yfWZ1bmN0aW9uIGV4cEluKHQpe3JldHVybiBNYXRoLnBvdygyLDEwKnQtMTApfWZ1bmN0aW9uIGV4cE91dCh0KXtyZXR1cm4gMS1NYXRoLnBvdygyLC0xMCp0KX1mdW5jdGlvbiBleHBJbk91dCh0KXtyZXR1cm4oKHQqPTIpPD0xP01hdGgucG93KDIsMTAqdC0xMCk6Mi1NYXRoLnBvdygyLDEwLTEwKnQpKS8yfWZ1bmN0aW9uIGNpcmNsZUluKHQpe3JldHVybiAxLU1hdGguc3FydCgxLXQqdCl9ZnVuY3Rpb24gY2lyY2xlT3V0KHQpe3JldHVybiBNYXRoLnNxcnQoMS0gLS10KnQpfWZ1bmN0aW9uIGNpcmNsZUluT3V0KHQpe3JldHVybigodCo9Mik8PTE/MS1NYXRoLnNxcnQoMS10KnQpOk1hdGguc3FydCgxLSh0LT0yKSp0KSsxKS8yfXZhciBiMT00LzExLGIyPTYvMTEsYjM9OC8xMSxiND0zLzQsYjU9OS8xMSxiNj0xMC8xMSxiNz0xNS8xNixiOD0yMS8yMixiOT02My82NCxiMD0xL2IxL2IxO2Z1bmN0aW9uIGJvdW5jZUluKHQpe3JldHVybiAxLWJvdW5jZU91dCgxLXQpfWZ1bmN0aW9uIGJvdW5jZU91dCh0KXtyZXR1cm4odD0rdCk8YjE/YjAqdCp0OnQ8YjM/YjAqKHQtPWIyKSp0K2I0OnQ8YjY/YjAqKHQtPWI1KSp0K2I3OmIwKih0LT1iOCkqdCtiOX1mdW5jdGlvbiBib3VuY2VJbk91dCh0KXtyZXR1cm4oKHQqPTIpPD0xPzEtYm91bmNlT3V0KDEtdCk6Ym91bmNlT3V0KHQtMSkrMSkvMn12YXIgb3ZlcnNob290PTEuNzAxNTg7dmFyIGJhY2tJbj1mdW5jdGlvbiBjdXN0b20ocyl7cz0rcztmdW5jdGlvbiBiYWNrSW4odCl7cmV0dXJuIHQqdCooKHMrMSkqdC1zKX1iYWNrSW4ub3ZlcnNob290PWN1c3RvbTtyZXR1cm4gYmFja0lufShvdmVyc2hvb3QpO3ZhciBiYWNrT3V0PWZ1bmN0aW9uIGN1c3RvbShzKXtzPStzO2Z1bmN0aW9uIGJhY2tPdXQodCl7cmV0dXJuLS10KnQqKChzKzEpKnQrcykrMX1iYWNrT3V0Lm92ZXJzaG9vdD1jdXN0b207cmV0dXJuIGJhY2tPdXR9KG92ZXJzaG9vdCk7dmFyIGJhY2tJbk91dD1mdW5jdGlvbiBjdXN0b20ocyl7cz0rcztmdW5jdGlvbiBiYWNrSW5PdXQodCl7cmV0dXJuKCh0Kj0yKTwxP3QqdCooKHMrMSkqdC1zKToodC09MikqdCooKHMrMSkqdCtzKSsyKS8yfWJhY2tJbk91dC5vdmVyc2hvb3Q9Y3VzdG9tO3JldHVybiBiYWNrSW5PdXR9KG92ZXJzaG9vdCk7dmFyIHRhdT0yKk1hdGguUEksYW1wbGl0dWRlPTEscGVyaW9kPS4zO3ZhciBlbGFzdGljSW49ZnVuY3Rpb24gY3VzdG9tKGEscCl7dmFyIHM9TWF0aC5hc2luKDEvKGE9TWF0aC5tYXgoMSxhKSkpKihwLz10YXUpO2Z1bmN0aW9uIGVsYXN0aWNJbih0KXtyZXR1cm4gYSpNYXRoLnBvdygyLDEwKi0tdCkqTWF0aC5zaW4oKHMtdCkvcCl9ZWxhc3RpY0luLmFtcGxpdHVkZT1mdW5jdGlvbihhKXtyZXR1cm4gY3VzdG9tKGEscCp0YXUpfTtlbGFzdGljSW4ucGVyaW9kPWZ1bmN0aW9uKHApe3JldHVybiBjdXN0b20oYSxwKX07cmV0dXJuIGVsYXN0aWNJbn0oYW1wbGl0dWRlLHBlcmlvZCk7dmFyIGVsYXN0aWNPdXQ9ZnVuY3Rpb24gY3VzdG9tKGEscCl7dmFyIHM9TWF0aC5hc2luKDEvKGE9TWF0aC5tYXgoMSxhKSkpKihwLz10YXUpO2Z1bmN0aW9uIGVsYXN0aWNPdXQodCl7cmV0dXJuIDEtYSpNYXRoLnBvdygyLC0xMCoodD0rdCkpKk1hdGguc2luKCh0K3MpL3ApfWVsYXN0aWNPdXQuYW1wbGl0dWRlPWZ1bmN0aW9uKGEpe3JldHVybiBjdXN0b20oYSxwKnRhdSl9O2VsYXN0aWNPdXQucGVyaW9kPWZ1bmN0aW9uKHApe3JldHVybiBjdXN0b20oYSxwKX07cmV0dXJuIGVsYXN0aWNPdXR9KGFtcGxpdHVkZSxwZXJpb2QpO3ZhciBlbGFzdGljSW5PdXQ9ZnVuY3Rpb24gY3VzdG9tKGEscCl7dmFyIHM9TWF0aC5hc2luKDEvKGE9TWF0aC5tYXgoMSxhKSkpKihwLz10YXUpO2Z1bmN0aW9uIGVsYXN0aWNJbk91dCh0KXtyZXR1cm4oKHQ9dCoyLTEpPDA/YSpNYXRoLnBvdygyLDEwKnQpKk1hdGguc2luKChzLXQpL3ApOjItYSpNYXRoLnBvdygyLC0xMCp0KSpNYXRoLnNpbigocyt0KS9wKSkvMn1lbGFzdGljSW5PdXQuYW1wbGl0dWRlPWZ1bmN0aW9uKGEpe3JldHVybiBjdXN0b20oYSxwKnRhdSl9O2VsYXN0aWNJbk91dC5wZXJpb2Q9ZnVuY3Rpb24ocCl7cmV0dXJuIGN1c3RvbShhLHApfTtyZXR1cm4gZWxhc3RpY0luT3V0fShhbXBsaXR1ZGUscGVyaW9kKTtleHBvcnRzLmVhc2VCYWNrPWJhY2tJbk91dDtleHBvcnRzLmVhc2VCYWNrSW49YmFja0luO2V4cG9ydHMuZWFzZUJhY2tJbk91dD1iYWNrSW5PdXQ7ZXhwb3J0cy5lYXNlQmFja091dD1iYWNrT3V0O2V4cG9ydHMuZWFzZUJvdW5jZT1ib3VuY2VPdXQ7ZXhwb3J0cy5lYXNlQm91bmNlSW49Ym91bmNlSW47ZXhwb3J0cy5lYXNlQm91bmNlSW5PdXQ9Ym91bmNlSW5PdXQ7ZXhwb3J0cy5lYXNlQm91bmNlT3V0PWJvdW5jZU91dDtleHBvcnRzLmVhc2VDaXJjbGU9Y2lyY2xlSW5PdXQ7ZXhwb3J0cy5lYXNlQ2lyY2xlSW49Y2lyY2xlSW47ZXhwb3J0cy5lYXNlQ2lyY2xlSW5PdXQ9Y2lyY2xlSW5PdXQ7ZXhwb3J0cy5lYXNlQ2lyY2xlT3V0PWNpcmNsZU91dDtleHBvcnRzLmVhc2VDdWJpYz1jdWJpY0luT3V0O2V4cG9ydHMuZWFzZUN1YmljSW49Y3ViaWNJbjtleHBvcnRzLmVhc2VDdWJpY0luT3V0PWN1YmljSW5PdXQ7ZXhwb3J0cy5lYXNlQ3ViaWNPdXQ9Y3ViaWNPdXQ7ZXhwb3J0cy5lYXNlRWxhc3RpYz1lbGFzdGljT3V0O2V4cG9ydHMuZWFzZUVsYXN0aWNJbj1lbGFzdGljSW47ZXhwb3J0cy5lYXNlRWxhc3RpY0luT3V0PWVsYXN0aWNJbk91dDtleHBvcnRzLmVhc2VFbGFzdGljT3V0PWVsYXN0aWNPdXQ7ZXhwb3J0cy5lYXNlRXhwPWV4cEluT3V0O2V4cG9ydHMuZWFzZUV4cEluPWV4cEluO2V4cG9ydHMuZWFzZUV4cEluT3V0PWV4cEluT3V0O2V4cG9ydHMuZWFzZUV4cE91dD1leHBPdXQ7ZXhwb3J0cy5lYXNlTGluZWFyPWxpbmVhcjtleHBvcnRzLmVhc2VQb2x5PXBvbHlJbk91dDtleHBvcnRzLmVhc2VQb2x5SW49cG9seUluO2V4cG9ydHMuZWFzZVBvbHlJbk91dD1wb2x5SW5PdXQ7ZXhwb3J0cy5lYXNlUG9seU91dD1wb2x5T3V0O2V4cG9ydHMuZWFzZVF1YWQ9cXVhZEluT3V0O2V4cG9ydHMuZWFzZVF1YWRJbj1xdWFkSW47ZXhwb3J0cy5lYXNlUXVhZEluT3V0PXF1YWRJbk91dDtleHBvcnRzLmVhc2VRdWFkT3V0PXF1YWRPdXQ7ZXhwb3J0cy5lYXNlU2luPXNpbkluT3V0O2V4cG9ydHMuZWFzZVNpbkluPXNpbkluO2V4cG9ydHMuZWFzZVNpbkluT3V0PXNpbkluT3V0O2V4cG9ydHMuZWFzZVNpbk91dD1zaW5PdXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0se31dLDQwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy1mZXRjaC8gdjEuMS4yIENvcHlyaWdodCAyMDE4IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMscmVxdWlyZSgiZDMtZHN2IikpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiLCJkMy1kc3YiXSxmYWN0b3J5KTpmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9LGdsb2JhbC5kMyl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMsZDNEc3YpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiByZXNwb25zZUJsb2IocmVzcG9uc2Upe2lmKCFyZXNwb25zZS5vayl0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzKyIgIityZXNwb25zZS5zdGF0dXNUZXh0KTtyZXR1cm4gcmVzcG9uc2UuYmxvYigpfWZ1bmN0aW9uIGJsb2IoaW5wdXQsaW5pdCl7cmV0dXJuIGZldGNoKGlucHV0LGluaXQpLnRoZW4ocmVzcG9uc2VCbG9iKX1mdW5jdGlvbiByZXNwb25zZUFycmF5QnVmZmVyKHJlc3BvbnNlKXtpZighcmVzcG9uc2Uub2spdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cysiICIrcmVzcG9uc2Uuc3RhdHVzVGV4dCk7cmV0dXJuIHJlc3BvbnNlLmFycmF5QnVmZmVyKCl9ZnVuY3Rpb24gYnVmZmVyKGlucHV0LGluaXQpe3JldHVybiBmZXRjaChpbnB1dCxpbml0KS50aGVuKHJlc3BvbnNlQXJyYXlCdWZmZXIpfWZ1bmN0aW9uIHJlc3BvbnNlVGV4dChyZXNwb25zZSl7aWYoIXJlc3BvbnNlLm9rKXRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMrIiAiK3Jlc3BvbnNlLnN0YXR1c1RleHQpO3JldHVybiByZXNwb25zZS50ZXh0KCl9ZnVuY3Rpb24gdGV4dChpbnB1dCxpbml0KXtyZXR1cm4gZmV0Y2goaW5wdXQsaW5pdCkudGhlbihyZXNwb25zZVRleHQpfWZ1bmN0aW9uIGRzdlBhcnNlKHBhcnNlKXtyZXR1cm4gZnVuY3Rpb24oaW5wdXQsaW5pdCxyb3cpe2lmKGFyZ3VtZW50cy5sZW5ndGg9PT0yJiZ0eXBlb2YgaW5pdD09PSJmdW5jdGlvbiIpcm93PWluaXQsaW5pdD11bmRlZmluZWQ7cmV0dXJuIHRleHQoaW5wdXQsaW5pdCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7cmV0dXJuIHBhcnNlKHJlc3BvbnNlLHJvdyl9KX19ZnVuY3Rpb24gZHN2KGRlbGltaXRlcixpbnB1dCxpbml0LHJvdyl7aWYoYXJndW1lbnRzLmxlbmd0aD09PTMmJnR5cGVvZiBpbml0PT09ImZ1bmN0aW9uIilyb3c9aW5pdCxpbml0PXVuZGVmaW5lZDt2YXIgZm9ybWF0PWQzRHN2LmRzdkZvcm1hdChkZWxpbWl0ZXIpO3JldHVybiB0ZXh0KGlucHV0LGluaXQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe3JldHVybiBmb3JtYXQucGFyc2UocmVzcG9uc2Uscm93KX0pfXZhciBjc3Y9ZHN2UGFyc2UoZDNEc3YuY3N2UGFyc2UpO3ZhciB0c3Y9ZHN2UGFyc2UoZDNEc3YudHN2UGFyc2UpO2Z1bmN0aW9uIGltYWdlKGlucHV0LGluaXQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7dmFyIGltYWdlPW5ldyBJbWFnZTtmb3IodmFyIGtleSBpbiBpbml0KWltYWdlW2tleV09aW5pdFtrZXldO2ltYWdlLm9uZXJyb3I9cmVqZWN0O2ltYWdlLm9ubG9hZD1mdW5jdGlvbigpe3Jlc29sdmUoaW1hZ2UpfTtpbWFnZS5zcmM9aW5wdXR9KX1mdW5jdGlvbiByZXNwb25zZUpzb24ocmVzcG9uc2Upe2lmKCFyZXNwb25zZS5vayl0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzKyIgIityZXNwb25zZS5zdGF0dXNUZXh0KTtyZXR1cm4gcmVzcG9uc2UuanNvbigpfWZ1bmN0aW9uIGpzb24oaW5wdXQsaW5pdCl7cmV0dXJuIGZldGNoKGlucHV0LGluaXQpLnRoZW4ocmVzcG9uc2VKc29uKX1mdW5jdGlvbiBwYXJzZXIodHlwZSl7cmV0dXJuIGZ1bmN0aW9uKGlucHV0LGluaXQpe3JldHVybiB0ZXh0KGlucHV0LGluaXQpLnRoZW4oZnVuY3Rpb24odGV4dCQkMSl7cmV0dXJuKG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyh0ZXh0JCQxLHR5cGUpfSl9fXZhciB4bWw9cGFyc2VyKCJhcHBsaWNhdGlvbi94bWwiKTt2YXIgaHRtbD1wYXJzZXIoInRleHQvaHRtbCIpO3ZhciBzdmc9cGFyc2VyKCJpbWFnZS9zdmcreG1sIik7ZXhwb3J0cy5ibG9iPWJsb2I7ZXhwb3J0cy5idWZmZXI9YnVmZmVyO2V4cG9ydHMuZHN2PWRzdjtleHBvcnRzLmNzdj1jc3Y7ZXhwb3J0cy50c3Y9dHN2O2V4cG9ydHMuaW1hZ2U9aW1hZ2U7ZXhwb3J0cy5qc29uPWpzb247ZXhwb3J0cy50ZXh0PXRleHQ7ZXhwb3J0cy54bWw9eG1sO2V4cG9ydHMuaHRtbD1odG1sO2V4cG9ydHMuc3ZnPXN2ZztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7ImQzLWRzdiI6Mzh9XSw0MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtZm9yY2UvIHYxLjIuMSBDb3B5cmlnaHQgMjAxOSBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzLHJlcXVpcmUoImQzLXF1YWR0cmVlIikscmVxdWlyZSgiZDMtY29sbGVjdGlvbiIpLHJlcXVpcmUoImQzLWRpc3BhdGNoIikscmVxdWlyZSgiZDMtdGltZXIiKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLXF1YWR0cmVlIiwiZDMtY29sbGVjdGlvbiIsImQzLWRpc3BhdGNoIiwiZDMtdGltZXIiXSxmYWN0b3J5KTpmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9LGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMyl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMsZDNRdWFkdHJlZSxkM0NvbGxlY3Rpb24sZDNEaXNwYXRjaCxkM1RpbWVyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gY2VudGVyKHgseSl7dmFyIG5vZGVzO2lmKHg9PW51bGwpeD0wO2lmKHk9PW51bGwpeT0wO2Z1bmN0aW9uIGZvcmNlKCl7dmFyIGksbj1ub2Rlcy5sZW5ndGgsbm9kZSxzeD0wLHN5PTA7Zm9yKGk9MDtpPG47KytpKXtub2RlPW5vZGVzW2ldLHN4Kz1ub2RlLngsc3krPW5vZGUueX1mb3Ioc3g9c3gvbi14LHN5PXN5L24teSxpPTA7aTxuOysraSl7bm9kZT1ub2Rlc1tpXSxub2RlLngtPXN4LG5vZGUueS09c3l9fWZvcmNlLmluaXRpYWxpemU9ZnVuY3Rpb24oXyl7bm9kZXM9X307Zm9yY2UueD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeD0rXyxmb3JjZSk6eH07Zm9yY2UueT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeT0rXyxmb3JjZSk6eX07cmV0dXJuIGZvcmNlfWZ1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB4fX1mdW5jdGlvbiBqaWdnbGUoKXtyZXR1cm4oTWF0aC5yYW5kb20oKS0uNSkqMWUtNn1mdW5jdGlvbiB4KGQpe3JldHVybiBkLngrZC52eH1mdW5jdGlvbiB5KGQpe3JldHVybiBkLnkrZC52eX1mdW5jdGlvbiBjb2xsaWRlKHJhZGl1cyl7dmFyIG5vZGVzLHJhZGlpLHN0cmVuZ3RoPTEsaXRlcmF0aW9ucz0xO2lmKHR5cGVvZiByYWRpdXMhPT0iZnVuY3Rpb24iKXJhZGl1cz1jb25zdGFudChyYWRpdXM9PW51bGw/MTorcmFkaXVzKTtmdW5jdGlvbiBmb3JjZSgpe3ZhciBpLG49bm9kZXMubGVuZ3RoLHRyZWUsbm9kZSx4aSx5aSxyaSxyaTI7Zm9yKHZhciBrPTA7azxpdGVyYXRpb25zOysrayl7dHJlZT1kM1F1YWR0cmVlLnF1YWR0cmVlKG5vZGVzLHgseSkudmlzaXRBZnRlcihwcmVwYXJlKTtmb3IoaT0wO2k8bjsrK2kpe25vZGU9bm9kZXNbaV07cmk9cmFkaWlbbm9kZS5pbmRleF0scmkyPXJpKnJpO3hpPW5vZGUueCtub2RlLnZ4O3lpPW5vZGUueStub2RlLnZ5O3RyZWUudmlzaXQoYXBwbHkpfX1mdW5jdGlvbiBhcHBseShxdWFkLHgwLHkwLHgxLHkxKXt2YXIgZGF0YT1xdWFkLmRhdGEscmo9cXVhZC5yLHI9cmkrcmo7aWYoZGF0YSl7aWYoZGF0YS5pbmRleD5ub2RlLmluZGV4KXt2YXIgeD14aS1kYXRhLngtZGF0YS52eCx5PXlpLWRhdGEueS1kYXRhLnZ5LGw9eCp4K3kqeTtpZihsPHIqcil7aWYoeD09PTApeD1qaWdnbGUoKSxsKz14Kng7aWYoeT09PTApeT1qaWdnbGUoKSxsKz15Knk7bD0oci0obD1NYXRoLnNxcnQobCkpKS9sKnN0cmVuZ3RoO25vZGUudngrPSh4Kj1sKSoocj0ocmoqPXJqKS8ocmkyK3JqKSk7bm9kZS52eSs9KHkqPWwpKnI7ZGF0YS52eC09eCoocj0xLXIpO2RhdGEudnktPXkqcn19cmV0dXJufXJldHVybiB4MD54aStyfHx4MTx4aS1yfHx5MD55aStyfHx5MTx5aS1yfX1mdW5jdGlvbiBwcmVwYXJlKHF1YWQpe2lmKHF1YWQuZGF0YSlyZXR1cm4gcXVhZC5yPXJhZGlpW3F1YWQuZGF0YS5pbmRleF07Zm9yKHZhciBpPXF1YWQucj0wO2k8NDsrK2kpe2lmKHF1YWRbaV0mJnF1YWRbaV0ucj5xdWFkLnIpe3F1YWQucj1xdWFkW2ldLnJ9fX1mdW5jdGlvbiBpbml0aWFsaXplKCl7aWYoIW5vZGVzKXJldHVybjt2YXIgaSxuPW5vZGVzLmxlbmd0aCxub2RlO3JhZGlpPW5ldyBBcnJheShuKTtmb3IoaT0wO2k8bjsrK2kpbm9kZT1ub2Rlc1tpXSxyYWRpaVtub2RlLmluZGV4XT0rcmFkaXVzKG5vZGUsaSxub2Rlcyl9Zm9yY2UuaW5pdGlhbGl6ZT1mdW5jdGlvbihfKXtub2Rlcz1fO2luaXRpYWxpemUoKX07Zm9yY2UuaXRlcmF0aW9ucz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaXRlcmF0aW9ucz0rXyxmb3JjZSk6aXRlcmF0aW9uc307Zm9yY2Uuc3RyZW5ndGg9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHN0cmVuZ3RoPStfLGZvcmNlKTpzdHJlbmd0aH07Zm9yY2UucmFkaXVzPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyYWRpdXM9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGluaXRpYWxpemUoKSxmb3JjZSk6cmFkaXVzfTtyZXR1cm4gZm9yY2V9ZnVuY3Rpb24gaW5kZXgoZCl7cmV0dXJuIGQuaW5kZXh9ZnVuY3Rpb24gZmluZChub2RlQnlJZCxub2RlSWQpe3ZhciBub2RlPW5vZGVCeUlkLmdldChub2RlSWQpO2lmKCFub2RlKXRocm93IG5ldyBFcnJvcigibWlzc2luZzogIitub2RlSWQpO3JldHVybiBub2RlfWZ1bmN0aW9uIGxpbmsobGlua3Mpe3ZhciBpZD1pbmRleCxzdHJlbmd0aD1kZWZhdWx0U3RyZW5ndGgsc3RyZW5ndGhzLGRpc3RhbmNlPWNvbnN0YW50KDMwKSxkaXN0YW5jZXMsbm9kZXMsY291bnQsYmlhcyxpdGVyYXRpb25zPTE7aWYobGlua3M9PW51bGwpbGlua3M9W107ZnVuY3Rpb24gZGVmYXVsdFN0cmVuZ3RoKGxpbmspe3JldHVybiAxL01hdGgubWluKGNvdW50W2xpbmsuc291cmNlLmluZGV4XSxjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pfWZ1bmN0aW9uIGZvcmNlKGFscGhhKXtmb3IodmFyIGs9MCxuPWxpbmtzLmxlbmd0aDtrPGl0ZXJhdGlvbnM7KytrKXtmb3IodmFyIGk9MCxsaW5rLHNvdXJjZSx0YXJnZXQseCx5LGwsYjtpPG47KytpKXtsaW5rPWxpbmtzW2ldLHNvdXJjZT1saW5rLnNvdXJjZSx0YXJnZXQ9bGluay50YXJnZXQ7eD10YXJnZXQueCt0YXJnZXQudngtc291cmNlLngtc291cmNlLnZ4fHxqaWdnbGUoKTt5PXRhcmdldC55K3RhcmdldC52eS1zb3VyY2UueS1zb3VyY2Uudnl8fGppZ2dsZSgpO2w9TWF0aC5zcXJ0KHgqeCt5KnkpO2w9KGwtZGlzdGFuY2VzW2ldKS9sKmFscGhhKnN0cmVuZ3Roc1tpXTt4Kj1sLHkqPWw7dGFyZ2V0LnZ4LT14KihiPWJpYXNbaV0pO3RhcmdldC52eS09eSpiO3NvdXJjZS52eCs9eCooYj0xLWIpO3NvdXJjZS52eSs9eSpifX19ZnVuY3Rpb24gaW5pdGlhbGl6ZSgpe2lmKCFub2RlcylyZXR1cm47dmFyIGksbj1ub2Rlcy5sZW5ndGgsbT1saW5rcy5sZW5ndGgsbm9kZUJ5SWQ9ZDNDb2xsZWN0aW9uLm1hcChub2RlcyxpZCksbGluaztmb3IoaT0wLGNvdW50PW5ldyBBcnJheShuKTtpPG07KytpKXtsaW5rPWxpbmtzW2ldLGxpbmsuaW5kZXg9aTtpZih0eXBlb2YgbGluay5zb3VyY2UhPT0ib2JqZWN0IilsaW5rLnNvdXJjZT1maW5kKG5vZGVCeUlkLGxpbmsuc291cmNlKTtpZih0eXBlb2YgbGluay50YXJnZXQhPT0ib2JqZWN0IilsaW5rLnRhcmdldD1maW5kKG5vZGVCeUlkLGxpbmsudGFyZ2V0KTtjb3VudFtsaW5rLnNvdXJjZS5pbmRleF09KGNvdW50W2xpbmsuc291cmNlLmluZGV4XXx8MCkrMTtjb3VudFtsaW5rLnRhcmdldC5pbmRleF09KGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XXx8MCkrMX1mb3IoaT0wLGJpYXM9bmV3IEFycmF5KG0pO2k8bTsrK2kpe2xpbms9bGlua3NbaV0sYmlhc1tpXT1jb3VudFtsaW5rLnNvdXJjZS5pbmRleF0vKGNvdW50W2xpbmsuc291cmNlLmluZGV4XStjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pfXN0cmVuZ3Rocz1uZXcgQXJyYXkobSksaW5pdGlhbGl6ZVN0cmVuZ3RoKCk7ZGlzdGFuY2VzPW5ldyBBcnJheShtKSxpbml0aWFsaXplRGlzdGFuY2UoKX1mdW5jdGlvbiBpbml0aWFsaXplU3RyZW5ndGgoKXtpZighbm9kZXMpcmV0dXJuO2Zvcih2YXIgaT0wLG49bGlua3MubGVuZ3RoO2k8bjsrK2kpe3N0cmVuZ3Roc1tpXT0rc3RyZW5ndGgobGlua3NbaV0saSxsaW5rcyl9fWZ1bmN0aW9uIGluaXRpYWxpemVEaXN0YW5jZSgpe2lmKCFub2RlcylyZXR1cm47Zm9yKHZhciBpPTAsbj1saW5rcy5sZW5ndGg7aTxuOysraSl7ZGlzdGFuY2VzW2ldPStkaXN0YW5jZShsaW5rc1tpXSxpLGxpbmtzKX19Zm9yY2UuaW5pdGlhbGl6ZT1mdW5jdGlvbihfKXtub2Rlcz1fO2luaXRpYWxpemUoKX07Zm9yY2UubGlua3M9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGxpbmtzPV8saW5pdGlhbGl6ZSgpLGZvcmNlKTpsaW5rc307Zm9yY2UuaWQ9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGlkPV8sZm9yY2UpOmlkfTtmb3JjZS5pdGVyYXRpb25zPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpdGVyYXRpb25zPStfLGZvcmNlKTppdGVyYXRpb25zfTtmb3JjZS5zdHJlbmd0aD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc3RyZW5ndGg9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGluaXRpYWxpemVTdHJlbmd0aCgpLGZvcmNlKTpzdHJlbmd0aH07Zm9yY2UuZGlzdGFuY2U9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGRpc3RhbmNlPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxpbml0aWFsaXplRGlzdGFuY2UoKSxmb3JjZSk6ZGlzdGFuY2V9O3JldHVybiBmb3JjZX1mdW5jdGlvbiB4JDEoZCl7cmV0dXJuIGQueH1mdW5jdGlvbiB5JDEoZCl7cmV0dXJuIGQueX12YXIgaW5pdGlhbFJhZGl1cz0xMCxpbml0aWFsQW5nbGU9TWF0aC5QSSooMy1NYXRoLnNxcnQoNSkpO2Z1bmN0aW9uIHNpbXVsYXRpb24obm9kZXMpe3ZhciBzaW11bGF0aW9uLGFscGhhPTEsYWxwaGFNaW49LjAwMSxhbHBoYURlY2F5PTEtTWF0aC5wb3coYWxwaGFNaW4sMS8zMDApLGFscGhhVGFyZ2V0PTAsdmVsb2NpdHlEZWNheT0uNixmb3JjZXM9ZDNDb2xsZWN0aW9uLm1hcCgpLHN0ZXBwZXI9ZDNUaW1lci50aW1lcihzdGVwKSxldmVudD1kM0Rpc3BhdGNoLmRpc3BhdGNoKCJ0aWNrIiwiZW5kIik7aWYobm9kZXM9PW51bGwpbm9kZXM9W107ZnVuY3Rpb24gc3RlcCgpe3RpY2soKTtldmVudC5jYWxsKCJ0aWNrIixzaW11bGF0aW9uKTtpZihhbHBoYTxhbHBoYU1pbil7c3RlcHBlci5zdG9wKCk7ZXZlbnQuY2FsbCgiZW5kIixzaW11bGF0aW9uKX19ZnVuY3Rpb24gdGljayhpdGVyYXRpb25zKXt2YXIgaSxuPW5vZGVzLmxlbmd0aCxub2RlO2lmKGl0ZXJhdGlvbnM9PT11bmRlZmluZWQpaXRlcmF0aW9ucz0xO2Zvcih2YXIgaz0wO2s8aXRlcmF0aW9uczsrK2spe2FscGhhKz0oYWxwaGFUYXJnZXQtYWxwaGEpKmFscGhhRGVjYXk7Zm9yY2VzLmVhY2goZnVuY3Rpb24oZm9yY2Upe2ZvcmNlKGFscGhhKX0pO2ZvcihpPTA7aTxuOysraSl7bm9kZT1ub2Rlc1tpXTtpZihub2RlLmZ4PT1udWxsKW5vZGUueCs9bm9kZS52eCo9dmVsb2NpdHlEZWNheTtlbHNlIG5vZGUueD1ub2RlLmZ4LG5vZGUudng9MDtpZihub2RlLmZ5PT1udWxsKW5vZGUueSs9bm9kZS52eSo9dmVsb2NpdHlEZWNheTtlbHNlIG5vZGUueT1ub2RlLmZ5LG5vZGUudnk9MH19cmV0dXJuIHNpbXVsYXRpb259ZnVuY3Rpb24gaW5pdGlhbGl6ZU5vZGVzKCl7Zm9yKHZhciBpPTAsbj1ub2Rlcy5sZW5ndGgsbm9kZTtpPG47KytpKXtub2RlPW5vZGVzW2ldLG5vZGUuaW5kZXg9aTtpZihub2RlLmZ4IT1udWxsKW5vZGUueD1ub2RlLmZ4O2lmKG5vZGUuZnkhPW51bGwpbm9kZS55PW5vZGUuZnk7aWYoaXNOYU4obm9kZS54KXx8aXNOYU4obm9kZS55KSl7dmFyIHJhZGl1cz1pbml0aWFsUmFkaXVzKk1hdGguc3FydChpKSxhbmdsZT1pKmluaXRpYWxBbmdsZTtub2RlLng9cmFkaXVzKk1hdGguY29zKGFuZ2xlKTtub2RlLnk9cmFkaXVzKk1hdGguc2luKGFuZ2xlKX1pZihpc05hTihub2RlLnZ4KXx8aXNOYU4obm9kZS52eSkpe25vZGUudng9bm9kZS52eT0wfX19ZnVuY3Rpb24gaW5pdGlhbGl6ZUZvcmNlKGZvcmNlKXtpZihmb3JjZS5pbml0aWFsaXplKWZvcmNlLmluaXRpYWxpemUobm9kZXMpO3JldHVybiBmb3JjZX1pbml0aWFsaXplTm9kZXMoKTtyZXR1cm4gc2ltdWxhdGlvbj17dGljazp0aWNrLHJlc3RhcnQ6ZnVuY3Rpb24oKXtyZXR1cm4gc3RlcHBlci5yZXN0YXJ0KHN0ZXApLHNpbXVsYXRpb259LHN0b3A6ZnVuY3Rpb24oKXtyZXR1cm4gc3RlcHBlci5zdG9wKCksc2ltdWxhdGlvbn0sbm9kZXM6ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG5vZGVzPV8saW5pdGlhbGl6ZU5vZGVzKCksZm9yY2VzLmVhY2goaW5pdGlhbGl6ZUZvcmNlKSxzaW11bGF0aW9uKTpub2Rlc30sYWxwaGE6ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGFscGhhPStfLHNpbXVsYXRpb24pOmFscGhhfSxhbHBoYU1pbjpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYWxwaGFNaW49K18sc2ltdWxhdGlvbik6YWxwaGFNaW59LGFscGhhRGVjYXk6ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGFscGhhRGVjYXk9K18sc2ltdWxhdGlvbik6K2FscGhhRGVjYXl9LGFscGhhVGFyZ2V0OmZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhbHBoYVRhcmdldD0rXyxzaW11bGF0aW9uKTphbHBoYVRhcmdldH0sdmVsb2NpdHlEZWNheTpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odmVsb2NpdHlEZWNheT0xLV8sc2ltdWxhdGlvbik6MS12ZWxvY2l0eURlY2F5fSxmb3JjZTpmdW5jdGlvbihuYW1lLF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/KF89PW51bGw/Zm9yY2VzLnJlbW92ZShuYW1lKTpmb3JjZXMuc2V0KG5hbWUsaW5pdGlhbGl6ZUZvcmNlKF8pKSxzaW11bGF0aW9uKTpmb3JjZXMuZ2V0KG5hbWUpfSxmaW5kOmZ1bmN0aW9uKHgseSxyYWRpdXMpe3ZhciBpPTAsbj1ub2Rlcy5sZW5ndGgsZHgsZHksZDIsbm9kZSxjbG9zZXN0O2lmKHJhZGl1cz09bnVsbClyYWRpdXM9SW5maW5pdHk7ZWxzZSByYWRpdXMqPXJhZGl1cztmb3IoaT0wO2k8bjsrK2kpe25vZGU9bm9kZXNbaV07ZHg9eC1ub2RlLng7ZHk9eS1ub2RlLnk7ZDI9ZHgqZHgrZHkqZHk7aWYoZDI8cmFkaXVzKWNsb3Nlc3Q9bm9kZSxyYWRpdXM9ZDJ9cmV0dXJuIGNsb3Nlc3R9LG9uOmZ1bmN0aW9uKG5hbWUsXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MT8oZXZlbnQub24obmFtZSxfKSxzaW11bGF0aW9uKTpldmVudC5vbihuYW1lKX19fWZ1bmN0aW9uIG1hbnlCb2R5KCl7dmFyIG5vZGVzLG5vZGUsYWxwaGEsc3RyZW5ndGg9Y29uc3RhbnQoLTMwKSxzdHJlbmd0aHMsZGlzdGFuY2VNaW4yPTEsZGlzdGFuY2VNYXgyPUluZmluaXR5LHRoZXRhMj0uODE7ZnVuY3Rpb24gZm9yY2UoXyl7dmFyIGksbj1ub2Rlcy5sZW5ndGgsdHJlZT1kM1F1YWR0cmVlLnF1YWR0cmVlKG5vZGVzLHgkMSx5JDEpLnZpc2l0QWZ0ZXIoYWNjdW11bGF0ZSk7Zm9yKGFscGhhPV8saT0wO2k8bjsrK2kpbm9kZT1ub2Rlc1tpXSx0cmVlLnZpc2l0KGFwcGx5KX1mdW5jdGlvbiBpbml0aWFsaXplKCl7aWYoIW5vZGVzKXJldHVybjt2YXIgaSxuPW5vZGVzLmxlbmd0aCxub2RlO3N0cmVuZ3Rocz1uZXcgQXJyYXkobik7Zm9yKGk9MDtpPG47KytpKW5vZGU9bm9kZXNbaV0sc3RyZW5ndGhzW25vZGUuaW5kZXhdPStzdHJlbmd0aChub2RlLGksbm9kZXMpfWZ1bmN0aW9uIGFjY3VtdWxhdGUocXVhZCl7dmFyIHN0cmVuZ3RoPTAscSxjLHdlaWdodD0wLHgseSxpOwovLyBGb3IgaW50ZXJuYWwgbm9kZXMsIGFjY3VtdWxhdGUgZm9yY2VzIGZyb20gY2hpbGQgcXVhZHJhbnRzLgppZihxdWFkLmxlbmd0aCl7Zm9yKHg9eT1pPTA7aTw0OysraSl7aWYoKHE9cXVhZFtpXSkmJihjPU1hdGguYWJzKHEudmFsdWUpKSl7c3RyZW5ndGgrPXEudmFsdWUsd2VpZ2h0Kz1jLHgrPWMqcS54LHkrPWMqcS55fX1xdWFkLng9eC93ZWlnaHQ7cXVhZC55PXkvd2VpZ2h0fQovLyBGb3IgbGVhZiBub2RlcywgYWNjdW11bGF0ZSBmb3JjZXMgZnJvbSBjb2luY2lkZW50IHF1YWRyYW50cy4KZWxzZXtxPXF1YWQ7cS54PXEuZGF0YS54O3EueT1xLmRhdGEueTtkb3tzdHJlbmd0aCs9c3RyZW5ndGhzW3EuZGF0YS5pbmRleF19d2hpbGUocT1xLm5leHQpfXF1YWQudmFsdWU9c3RyZW5ndGh9ZnVuY3Rpb24gYXBwbHkocXVhZCx4MSxfLHgyKXtpZighcXVhZC52YWx1ZSlyZXR1cm4gdHJ1ZTt2YXIgeD1xdWFkLngtbm9kZS54LHk9cXVhZC55LW5vZGUueSx3PXgyLXgxLGw9eCp4K3kqeTsKLy8gQXBwbHkgdGhlIEJhcm5lcy1IdXQgYXBwcm94aW1hdGlvbiBpZiBwb3NzaWJsZS4KLy8gTGltaXQgZm9yY2VzIGZvciB2ZXJ5IGNsb3NlIG5vZGVzOyByYW5kb21pemUgZGlyZWN0aW9uIGlmIGNvaW5jaWRlbnQuCmlmKHcqdy90aGV0YTI8bCl7aWYobDxkaXN0YW5jZU1heDIpe2lmKHg9PT0wKXg9amlnZ2xlKCksbCs9eCp4O2lmKHk9PT0wKXk9amlnZ2xlKCksbCs9eSp5O2lmKGw8ZGlzdGFuY2VNaW4yKWw9TWF0aC5zcXJ0KGRpc3RhbmNlTWluMipsKTtub2RlLnZ4Kz14KnF1YWQudmFsdWUqYWxwaGEvbDtub2RlLnZ5Kz15KnF1YWQudmFsdWUqYWxwaGEvbH1yZXR1cm4gdHJ1ZX0KLy8gT3RoZXJ3aXNlLCBwcm9jZXNzIHBvaW50cyBkaXJlY3RseS4KZWxzZSBpZihxdWFkLmxlbmd0aHx8bD49ZGlzdGFuY2VNYXgyKXJldHVybjsKLy8gTGltaXQgZm9yY2VzIGZvciB2ZXJ5IGNsb3NlIG5vZGVzOyByYW5kb21pemUgZGlyZWN0aW9uIGlmIGNvaW5jaWRlbnQuCmlmKHF1YWQuZGF0YSE9PW5vZGV8fHF1YWQubmV4dCl7aWYoeD09PTApeD1qaWdnbGUoKSxsKz14Kng7aWYoeT09PTApeT1qaWdnbGUoKSxsKz15Knk7aWYobDxkaXN0YW5jZU1pbjIpbD1NYXRoLnNxcnQoZGlzdGFuY2VNaW4yKmwpfWRve2lmKHF1YWQuZGF0YSE9PW5vZGUpe3c9c3RyZW5ndGhzW3F1YWQuZGF0YS5pbmRleF0qYWxwaGEvbDtub2RlLnZ4Kz14Knc7bm9kZS52eSs9eSp3fX13aGlsZShxdWFkPXF1YWQubmV4dCl9Zm9yY2UuaW5pdGlhbGl6ZT1mdW5jdGlvbihfKXtub2Rlcz1fO2luaXRpYWxpemUoKX07Zm9yY2Uuc3RyZW5ndGg9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHN0cmVuZ3RoPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxpbml0aWFsaXplKCksZm9yY2UpOnN0cmVuZ3RofTtmb3JjZS5kaXN0YW5jZU1pbj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZGlzdGFuY2VNaW4yPV8qXyxmb3JjZSk6TWF0aC5zcXJ0KGRpc3RhbmNlTWluMil9O2ZvcmNlLmRpc3RhbmNlTWF4PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhkaXN0YW5jZU1heDI9XypfLGZvcmNlKTpNYXRoLnNxcnQoZGlzdGFuY2VNYXgyKX07Zm9yY2UudGhldGE9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoZXRhMj1fKl8sZm9yY2UpOk1hdGguc3FydCh0aGV0YTIpfTtyZXR1cm4gZm9yY2V9ZnVuY3Rpb24gcmFkaWFsKHJhZGl1cyx4LHkpe3ZhciBub2RlcyxzdHJlbmd0aD1jb25zdGFudCguMSksc3RyZW5ndGhzLHJhZGl1c2VzO2lmKHR5cGVvZiByYWRpdXMhPT0iZnVuY3Rpb24iKXJhZGl1cz1jb25zdGFudCgrcmFkaXVzKTtpZih4PT1udWxsKXg9MDtpZih5PT1udWxsKXk9MDtmdW5jdGlvbiBmb3JjZShhbHBoYSl7Zm9yKHZhciBpPTAsbj1ub2Rlcy5sZW5ndGg7aTxuOysraSl7dmFyIG5vZGU9bm9kZXNbaV0sZHg9bm9kZS54LXh8fDFlLTYsZHk9bm9kZS55LXl8fDFlLTYscj1NYXRoLnNxcnQoZHgqZHgrZHkqZHkpLGs9KHJhZGl1c2VzW2ldLXIpKnN0cmVuZ3Roc1tpXSphbHBoYS9yO25vZGUudngrPWR4Kms7bm9kZS52eSs9ZHkqa319ZnVuY3Rpb24gaW5pdGlhbGl6ZSgpe2lmKCFub2RlcylyZXR1cm47dmFyIGksbj1ub2Rlcy5sZW5ndGg7c3RyZW5ndGhzPW5ldyBBcnJheShuKTtyYWRpdXNlcz1uZXcgQXJyYXkobik7Zm9yKGk9MDtpPG47KytpKXtyYWRpdXNlc1tpXT0rcmFkaXVzKG5vZGVzW2ldLGksbm9kZXMpO3N0cmVuZ3Roc1tpXT1pc05hTihyYWRpdXNlc1tpXSk/MDorc3RyZW5ndGgobm9kZXNbaV0saSxub2Rlcyl9fWZvcmNlLmluaXRpYWxpemU9ZnVuY3Rpb24oXyl7bm9kZXM9Xyxpbml0aWFsaXplKCl9O2ZvcmNlLnN0cmVuZ3RoPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzdHJlbmd0aD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksaW5pdGlhbGl6ZSgpLGZvcmNlKTpzdHJlbmd0aH07Zm9yY2UucmFkaXVzPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyYWRpdXM9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGluaXRpYWxpemUoKSxmb3JjZSk6cmFkaXVzfTtmb3JjZS54PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4PStfLGZvcmNlKTp4fTtmb3JjZS55PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh5PStfLGZvcmNlKTp5fTtyZXR1cm4gZm9yY2V9ZnVuY3Rpb24geCQyKHgpe3ZhciBzdHJlbmd0aD1jb25zdGFudCguMSksbm9kZXMsc3RyZW5ndGhzLHh6O2lmKHR5cGVvZiB4IT09ImZ1bmN0aW9uIil4PWNvbnN0YW50KHg9PW51bGw/MDoreCk7ZnVuY3Rpb24gZm9yY2UoYWxwaGEpe2Zvcih2YXIgaT0wLG49bm9kZXMubGVuZ3RoLG5vZGU7aTxuOysraSl7bm9kZT1ub2Rlc1tpXSxub2RlLnZ4Kz0oeHpbaV0tbm9kZS54KSpzdHJlbmd0aHNbaV0qYWxwaGF9fWZ1bmN0aW9uIGluaXRpYWxpemUoKXtpZighbm9kZXMpcmV0dXJuO3ZhciBpLG49bm9kZXMubGVuZ3RoO3N0cmVuZ3Rocz1uZXcgQXJyYXkobik7eHo9bmV3IEFycmF5KG4pO2ZvcihpPTA7aTxuOysraSl7c3RyZW5ndGhzW2ldPWlzTmFOKHh6W2ldPSt4KG5vZGVzW2ldLGksbm9kZXMpKT8wOitzdHJlbmd0aChub2Rlc1tpXSxpLG5vZGVzKX19Zm9yY2UuaW5pdGlhbGl6ZT1mdW5jdGlvbihfKXtub2Rlcz1fO2luaXRpYWxpemUoKX07Zm9yY2Uuc3RyZW5ndGg9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHN0cmVuZ3RoPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxpbml0aWFsaXplKCksZm9yY2UpOnN0cmVuZ3RofTtmb3JjZS54PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4PXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxpbml0aWFsaXplKCksZm9yY2UpOnh9O3JldHVybiBmb3JjZX1mdW5jdGlvbiB5JDIoeSl7dmFyIHN0cmVuZ3RoPWNvbnN0YW50KC4xKSxub2RlcyxzdHJlbmd0aHMseXo7aWYodHlwZW9mIHkhPT0iZnVuY3Rpb24iKXk9Y29uc3RhbnQoeT09bnVsbD8wOit5KTtmdW5jdGlvbiBmb3JjZShhbHBoYSl7Zm9yKHZhciBpPTAsbj1ub2Rlcy5sZW5ndGgsbm9kZTtpPG47KytpKXtub2RlPW5vZGVzW2ldLG5vZGUudnkrPSh5eltpXS1ub2RlLnkpKnN0cmVuZ3Roc1tpXSphbHBoYX19ZnVuY3Rpb24gaW5pdGlhbGl6ZSgpe2lmKCFub2RlcylyZXR1cm47dmFyIGksbj1ub2Rlcy5sZW5ndGg7c3RyZW5ndGhzPW5ldyBBcnJheShuKTt5ej1uZXcgQXJyYXkobik7Zm9yKGk9MDtpPG47KytpKXtzdHJlbmd0aHNbaV09aXNOYU4oeXpbaV09K3kobm9kZXNbaV0saSxub2RlcykpPzA6K3N0cmVuZ3RoKG5vZGVzW2ldLGksbm9kZXMpfX1mb3JjZS5pbml0aWFsaXplPWZ1bmN0aW9uKF8pe25vZGVzPV87aW5pdGlhbGl6ZSgpfTtmb3JjZS5zdHJlbmd0aD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc3RyZW5ndGg9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGluaXRpYWxpemUoKSxmb3JjZSk6c3RyZW5ndGh9O2ZvcmNlLnk9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHk9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGluaXRpYWxpemUoKSxmb3JjZSk6eX07cmV0dXJuIGZvcmNlfWV4cG9ydHMuZm9yY2VDZW50ZXI9Y2VudGVyO2V4cG9ydHMuZm9yY2VDb2xsaWRlPWNvbGxpZGU7ZXhwb3J0cy5mb3JjZUxpbms9bGluaztleHBvcnRzLmZvcmNlTWFueUJvZHk9bWFueUJvZHk7ZXhwb3J0cy5mb3JjZVJhZGlhbD1yYWRpYWw7ZXhwb3J0cy5mb3JjZVNpbXVsYXRpb249c2ltdWxhdGlvbjtleHBvcnRzLmZvcmNlWD14JDI7ZXhwb3J0cy5mb3JjZVk9eSQyO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHsiZDMtY29sbGVjdGlvbiI6MzMsImQzLWRpc3BhdGNoIjozNiwiZDMtcXVhZHRyZWUiOjQ4LCJkMy10aW1lciI6NTZ9XSw0MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtZm9ybWF0LyB2MS40LjIgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyJdLGZhY3RvcnkpOihnbG9iYWw9Z2xvYmFsfHxzZWxmLGZhY3RvcnkoZ2xvYmFsLmQzPWdsb2JhbC5kM3x8e30pKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7InVzZSBzdHJpY3QiOwovLyBDb21wdXRlcyB0aGUgZGVjaW1hbCBjb2VmZmljaWVudCBhbmQgZXhwb25lbnQgb2YgdGhlIHNwZWNpZmllZCBudW1iZXIgeCB3aXRoCi8vIHNpZ25pZmljYW50IGRpZ2l0cyBwLCB3aGVyZSB4IGlzIHBvc2l0aXZlIGFuZCBwIGlzIGluIFsxLCAyMV0gb3IgdW5kZWZpbmVkLgovLyBGb3IgZXhhbXBsZSwgZm9ybWF0RGVjaW1hbCgxLjIzKSByZXR1cm5zIFsiMTIzIiwgMF0uCmZ1bmN0aW9uIGZvcm1hdERlY2ltYWwoeCxwKXtpZigoaT0oeD1wP3gudG9FeHBvbmVudGlhbChwLTEpOngudG9FeHBvbmVudGlhbCgpKS5pbmRleE9mKCJlIikpPDApcmV0dXJuIG51bGw7Ly8gTmFOLCDCsUluZmluaXR5CnZhciBpLGNvZWZmaWNpZW50PXguc2xpY2UoMCxpKTsKLy8gVGhlIHN0cmluZyByZXR1cm5lZCBieSB0b0V4cG9uZW50aWFsIGVpdGhlciBoYXMgdGhlIGZvcm0gXGRcLlxkK2VbLStdXGQrCi8vIChlLmcuLCAxLjJlKzMpIG9yIHRoZSBmb3JtIFxkZVstK11cZCsgKGUuZy4sIDFlKzMpLgpyZXR1cm5bY29lZmZpY2llbnQubGVuZ3RoPjE/Y29lZmZpY2llbnRbMF0rY29lZmZpY2llbnQuc2xpY2UoMik6Y29lZmZpY2llbnQsK3guc2xpY2UoaSsxKV19ZnVuY3Rpb24gZXhwb25lbnQoeCl7cmV0dXJuIHg9Zm9ybWF0RGVjaW1hbChNYXRoLmFicyh4KSkseD94WzFdOk5hTn1mdW5jdGlvbiBmb3JtYXRHcm91cChncm91cGluZyx0aG91c2FuZHMpe3JldHVybiBmdW5jdGlvbih2YWx1ZSx3aWR0aCl7dmFyIGk9dmFsdWUubGVuZ3RoLHQ9W10saj0wLGc9Z3JvdXBpbmdbMF0sbGVuZ3RoPTA7d2hpbGUoaT4wJiZnPjApe2lmKGxlbmd0aCtnKzE+d2lkdGgpZz1NYXRoLm1heCgxLHdpZHRoLWxlbmd0aCk7dC5wdXNoKHZhbHVlLnN1YnN0cmluZyhpLT1nLGkrZykpO2lmKChsZW5ndGgrPWcrMSk+d2lkdGgpYnJlYWs7Zz1ncm91cGluZ1tqPShqKzEpJWdyb3VwaW5nLmxlbmd0aF19cmV0dXJuIHQucmV2ZXJzZSgpLmpvaW4odGhvdXNhbmRzKX19ZnVuY3Rpb24gZm9ybWF0TnVtZXJhbHMobnVtZXJhbHMpe3JldHVybiBmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHZhbHVlLnJlcGxhY2UoL1swLTldL2csZnVuY3Rpb24oaSl7cmV0dXJuIG51bWVyYWxzWytpXX0pfX0KLy8gW1tmaWxsXWFsaWduXVtzaWduXVtzeW1ib2xdWzBdW3dpZHRoXVssXVsucHJlY2lzaW9uXVt+XVt0eXBlXQp2YXIgcmU9L14oPzooLik/KFs8Pj1eXSkpPyhbK1wtKCBdKT8oWyQjXSk/KDApPyhcZCspPygsKT8oXC5cZCspPyh+KT8oW2EteiVdKT8kL2k7ZnVuY3Rpb24gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllcil7aWYoIShtYXRjaD1yZS5leGVjKHNwZWNpZmllcikpKXRocm93IG5ldyBFcnJvcigiaW52YWxpZCBmb3JtYXQ6ICIrc3BlY2lmaWVyKTt2YXIgbWF0Y2g7cmV0dXJuIG5ldyBGb3JtYXRTcGVjaWZpZXIoe2ZpbGw6bWF0Y2hbMV0sYWxpZ246bWF0Y2hbMl0sc2lnbjptYXRjaFszXSxzeW1ib2w6bWF0Y2hbNF0semVybzptYXRjaFs1XSx3aWR0aDptYXRjaFs2XSxjb21tYTptYXRjaFs3XSxwcmVjaXNpb246bWF0Y2hbOF0mJm1hdGNoWzhdLnNsaWNlKDEpLHRyaW06bWF0Y2hbOV0sdHlwZTptYXRjaFsxMF19KX1mb3JtYXRTcGVjaWZpZXIucHJvdG90eXBlPUZvcm1hdFNwZWNpZmllci5wcm90b3R5cGU7Ly8gaW5zdGFuY2VvZgpmdW5jdGlvbiBGb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKXt0aGlzLmZpbGw9c3BlY2lmaWVyLmZpbGw9PT11bmRlZmluZWQ/IiAiOnNwZWNpZmllci5maWxsKyIiO3RoaXMuYWxpZ249c3BlY2lmaWVyLmFsaWduPT09dW5kZWZpbmVkPyI+IjpzcGVjaWZpZXIuYWxpZ24rIiI7dGhpcy5zaWduPXNwZWNpZmllci5zaWduPT09dW5kZWZpbmVkPyItIjpzcGVjaWZpZXIuc2lnbisiIjt0aGlzLnN5bWJvbD1zcGVjaWZpZXIuc3ltYm9sPT09dW5kZWZpbmVkPyIiOnNwZWNpZmllci5zeW1ib2wrIiI7dGhpcy56ZXJvPSEhc3BlY2lmaWVyLnplcm87dGhpcy53aWR0aD1zcGVjaWZpZXIud2lkdGg9PT11bmRlZmluZWQ/dW5kZWZpbmVkOitzcGVjaWZpZXIud2lkdGg7dGhpcy5jb21tYT0hIXNwZWNpZmllci5jb21tYTt0aGlzLnByZWNpc2lvbj1zcGVjaWZpZXIucHJlY2lzaW9uPT09dW5kZWZpbmVkP3VuZGVmaW5lZDorc3BlY2lmaWVyLnByZWNpc2lvbjt0aGlzLnRyaW09ISFzcGVjaWZpZXIudHJpbTt0aGlzLnR5cGU9c3BlY2lmaWVyLnR5cGU9PT11bmRlZmluZWQ/IiI6c3BlY2lmaWVyLnR5cGUrIiJ9Rm9ybWF0U3BlY2lmaWVyLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbGwrdGhpcy5hbGlnbit0aGlzLnNpZ24rdGhpcy5zeW1ib2wrKHRoaXMuemVybz8iMCI6IiIpKyh0aGlzLndpZHRoPT09dW5kZWZpbmVkPyIiOk1hdGgubWF4KDEsdGhpcy53aWR0aHwwKSkrKHRoaXMuY29tbWE/IiwiOiIiKSsodGhpcy5wcmVjaXNpb249PT11bmRlZmluZWQ/IiI6Ii4iK01hdGgubWF4KDAsdGhpcy5wcmVjaXNpb258MCkpKyh0aGlzLnRyaW0/In4iOiIiKSt0aGlzLnR5cGV9OwovLyBUcmltcyBpbnNpZ25pZmljYW50IHplcm9zLCBlLmcuLCByZXBsYWNlcyAxLjIwMDBrIHdpdGggMS4yay4KZnVuY3Rpb24gZm9ybWF0VHJpbShzKXtvdXQ6Zm9yKHZhciBuPXMubGVuZ3RoLGk9MSxpMD0tMSxpMTtpPG47KytpKXtzd2l0Y2goc1tpXSl7Y2FzZSIuIjppMD1pMT1pO2JyZWFrO2Nhc2UiMCI6aWYoaTA9PT0wKWkwPWk7aTE9aTticmVhaztkZWZhdWx0OmlmKGkwPjApe2lmKCErc1tpXSlicmVhayBvdXQ7aTA9MH1icmVha319cmV0dXJuIGkwPjA/cy5zbGljZSgwLGkwKStzLnNsaWNlKGkxKzEpOnN9dmFyIHByZWZpeEV4cG9uZW50O2Z1bmN0aW9uIGZvcm1hdFByZWZpeEF1dG8oeCxwKXt2YXIgZD1mb3JtYXREZWNpbWFsKHgscCk7aWYoIWQpcmV0dXJuIHgrIiI7dmFyIGNvZWZmaWNpZW50PWRbMF0sZXhwb25lbnQ9ZFsxXSxpPWV4cG9uZW50LShwcmVmaXhFeHBvbmVudD1NYXRoLm1heCgtOCxNYXRoLm1pbig4LE1hdGguZmxvb3IoZXhwb25lbnQvMykpKSozKSsxLG49Y29lZmZpY2llbnQubGVuZ3RoO3JldHVybiBpPT09bj9jb2VmZmljaWVudDppPm4/Y29lZmZpY2llbnQrbmV3IEFycmF5KGktbisxKS5qb2luKCIwIik6aT4wP2NvZWZmaWNpZW50LnNsaWNlKDAsaSkrIi4iK2NvZWZmaWNpZW50LnNsaWNlKGkpOiIwLiIrbmV3IEFycmF5KDEtaSkuam9pbigiMCIpK2Zvcm1hdERlY2ltYWwoeCxNYXRoLm1heCgwLHAraS0xKSlbMF07Ly8gbGVzcyB0aGFuIDF5IQp9ZnVuY3Rpb24gZm9ybWF0Um91bmRlZCh4LHApe3ZhciBkPWZvcm1hdERlY2ltYWwoeCxwKTtpZighZClyZXR1cm4geCsiIjt2YXIgY29lZmZpY2llbnQ9ZFswXSxleHBvbmVudD1kWzFdO3JldHVybiBleHBvbmVudDwwPyIwLiIrbmV3IEFycmF5KC1leHBvbmVudCkuam9pbigiMCIpK2NvZWZmaWNpZW50OmNvZWZmaWNpZW50Lmxlbmd0aD5leHBvbmVudCsxP2NvZWZmaWNpZW50LnNsaWNlKDAsZXhwb25lbnQrMSkrIi4iK2NvZWZmaWNpZW50LnNsaWNlKGV4cG9uZW50KzEpOmNvZWZmaWNpZW50K25ldyBBcnJheShleHBvbmVudC1jb2VmZmljaWVudC5sZW5ndGgrMikuam9pbigiMCIpfXZhciBmb3JtYXRUeXBlcz17IiUiOmZ1bmN0aW9uKHgscCl7cmV0dXJuKHgqMTAwKS50b0ZpeGVkKHApfSxiOmZ1bmN0aW9uKHgpe3JldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDIpfSxjOmZ1bmN0aW9uKHgpe3JldHVybiB4KyIifSxkOmZ1bmN0aW9uKHgpe3JldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDEwKX0sZTpmdW5jdGlvbih4LHApe3JldHVybiB4LnRvRXhwb25lbnRpYWwocCl9LGY6ZnVuY3Rpb24oeCxwKXtyZXR1cm4geC50b0ZpeGVkKHApfSxnOmZ1bmN0aW9uKHgscCl7cmV0dXJuIHgudG9QcmVjaXNpb24ocCl9LG86ZnVuY3Rpb24oeCl7cmV0dXJuIE1hdGgucm91bmQoeCkudG9TdHJpbmcoOCl9LHA6ZnVuY3Rpb24oeCxwKXtyZXR1cm4gZm9ybWF0Um91bmRlZCh4KjEwMCxwKX0scjpmb3JtYXRSb3VuZGVkLHM6Zm9ybWF0UHJlZml4QXV0byxYOmZ1bmN0aW9uKHgpe3JldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSx4OmZ1bmN0aW9uKHgpe3JldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDE2KX19O2Z1bmN0aW9uIGlkZW50aXR5KHgpe3JldHVybiB4fXZhciBtYXA9QXJyYXkucHJvdG90eXBlLm1hcCxwcmVmaXhlcz1bInkiLCJ6IiwiYSIsImYiLCJwIiwibiIsIsK1IiwibSIsIiIsImsiLCJNIiwiRyIsIlQiLCJQIiwiRSIsIloiLCJZIl07ZnVuY3Rpb24gZm9ybWF0TG9jYWxlKGxvY2FsZSl7dmFyIGdyb3VwPWxvY2FsZS5ncm91cGluZz09PXVuZGVmaW5lZHx8bG9jYWxlLnRob3VzYW5kcz09PXVuZGVmaW5lZD9pZGVudGl0eTpmb3JtYXRHcm91cChtYXAuY2FsbChsb2NhbGUuZ3JvdXBpbmcsTnVtYmVyKSxsb2NhbGUudGhvdXNhbmRzKyIiKSxjdXJyZW5jeVByZWZpeD1sb2NhbGUuY3VycmVuY3k9PT11bmRlZmluZWQ/IiI6bG9jYWxlLmN1cnJlbmN5WzBdKyIiLGN1cnJlbmN5U3VmZml4PWxvY2FsZS5jdXJyZW5jeT09PXVuZGVmaW5lZD8iIjpsb2NhbGUuY3VycmVuY3lbMV0rIiIsZGVjaW1hbD1sb2NhbGUuZGVjaW1hbD09PXVuZGVmaW5lZD8iLiI6bG9jYWxlLmRlY2ltYWwrIiIsbnVtZXJhbHM9bG9jYWxlLm51bWVyYWxzPT09dW5kZWZpbmVkP2lkZW50aXR5OmZvcm1hdE51bWVyYWxzKG1hcC5jYWxsKGxvY2FsZS5udW1lcmFscyxTdHJpbmcpKSxwZXJjZW50PWxvY2FsZS5wZXJjZW50PT09dW5kZWZpbmVkPyIlIjpsb2NhbGUucGVyY2VudCsiIixtaW51cz1sb2NhbGUubWludXM9PT11bmRlZmluZWQ/Ii0iOmxvY2FsZS5taW51cysiIixuYW49bG9jYWxlLm5hbj09PXVuZGVmaW5lZD8iTmFOIjpsb2NhbGUubmFuKyIiO2Z1bmN0aW9uIG5ld0Zvcm1hdChzcGVjaWZpZXIpe3NwZWNpZmllcj1mb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKTt2YXIgZmlsbD1zcGVjaWZpZXIuZmlsbCxhbGlnbj1zcGVjaWZpZXIuYWxpZ24sc2lnbj1zcGVjaWZpZXIuc2lnbixzeW1ib2w9c3BlY2lmaWVyLnN5bWJvbCx6ZXJvPXNwZWNpZmllci56ZXJvLHdpZHRoPXNwZWNpZmllci53aWR0aCxjb21tYT1zcGVjaWZpZXIuY29tbWEscHJlY2lzaW9uPXNwZWNpZmllci5wcmVjaXNpb24sdHJpbT1zcGVjaWZpZXIudHJpbSx0eXBlPXNwZWNpZmllci50eXBlOwovLyBUaGUgIm4iIHR5cGUgaXMgYW4gYWxpYXMgZm9yICIsZyIuCmlmKHR5cGU9PT0ibiIpY29tbWE9dHJ1ZSx0eXBlPSJnIjsKLy8gVGhlICIiIHR5cGUsIGFuZCBhbnkgaW52YWxpZCB0eXBlLCBpcyBhbiBhbGlhcyBmb3IgIi4xMn5nIi4KZWxzZSBpZighZm9ybWF0VHlwZXNbdHlwZV0pcHJlY2lzaW9uPT09dW5kZWZpbmVkJiYocHJlY2lzaW9uPTEyKSx0cmltPXRydWUsdHlwZT0iZyI7Ci8vIElmIHplcm8gZmlsbCBpcyBzcGVjaWZpZWQsIHBhZGRpbmcgZ29lcyBhZnRlciBzaWduIGFuZCBiZWZvcmUgZGlnaXRzLgppZih6ZXJvfHxmaWxsPT09IjAiJiZhbGlnbj09PSI9Iil6ZXJvPXRydWUsZmlsbD0iMCIsYWxpZ249Ij0iOwovLyBDb21wdXRlIHRoZSBwcmVmaXggYW5kIHN1ZmZpeC4KLy8gRm9yIFNJLXByZWZpeCwgdGhlIHN1ZmZpeCBpcyBsYXppbHkgY29tcHV0ZWQuCnZhciBwcmVmaXg9c3ltYm9sPT09IiQiP2N1cnJlbmN5UHJlZml4OnN5bWJvbD09PSIjIiYmL1tib3hYXS8udGVzdCh0eXBlKT8iMCIrdHlwZS50b0xvd2VyQ2FzZSgpOiIiLHN1ZmZpeD1zeW1ib2w9PT0iJCI/Y3VycmVuY3lTdWZmaXg6L1slcF0vLnRlc3QodHlwZSk/cGVyY2VudDoiIjsKLy8gV2hhdCBmb3JtYXQgZnVuY3Rpb24gc2hvdWxkIHdlIHVzZT8KLy8gSXMgdGhpcyBhbiBpbnRlZ2VyIHR5cGU/Ci8vIENhbiB0aGlzIHR5cGUgZ2VuZXJhdGUgZXhwb25lbnRpYWwgbm90YXRpb24/CnZhciBmb3JtYXRUeXBlPWZvcm1hdFR5cGVzW3R5cGVdLG1heWJlU3VmZml4PS9bZGVmZ3BycyVdLy50ZXN0KHR5cGUpOwovLyBTZXQgdGhlIGRlZmF1bHQgcHJlY2lzaW9uIGlmIG5vdCBzcGVjaWZpZWQsCi8vIG9yIGNsYW1wIHRoZSBzcGVjaWZpZWQgcHJlY2lzaW9uIHRvIHRoZSBzdXBwb3J0ZWQgcmFuZ2UuCi8vIEZvciBzaWduaWZpY2FudCBwcmVjaXNpb24sIGl0IG11c3QgYmUgaW4gWzEsIDIxXS4KLy8gRm9yIGZpeGVkIHByZWNpc2lvbiwgaXQgbXVzdCBiZSBpbiBbMCwgMjBdLgpwcmVjaXNpb249cHJlY2lzaW9uPT09dW5kZWZpbmVkPzY6L1tncHJzXS8udGVzdCh0eXBlKT9NYXRoLm1heCgxLE1hdGgubWluKDIxLHByZWNpc2lvbikpOk1hdGgubWF4KDAsTWF0aC5taW4oMjAscHJlY2lzaW9uKSk7ZnVuY3Rpb24gZm9ybWF0KHZhbHVlKXt2YXIgdmFsdWVQcmVmaXg9cHJlZml4LHZhbHVlU3VmZml4PXN1ZmZpeCxpLG4sYztpZih0eXBlPT09ImMiKXt2YWx1ZVN1ZmZpeD1mb3JtYXRUeXBlKHZhbHVlKSt2YWx1ZVN1ZmZpeDt2YWx1ZT0iIn1lbHNle3ZhbHVlPSt2YWx1ZTsKLy8gUGVyZm9ybSB0aGUgaW5pdGlhbCBmb3JtYXR0aW5nLgp2YXIgdmFsdWVOZWdhdGl2ZT12YWx1ZTwwO3ZhbHVlPWlzTmFOKHZhbHVlKT9uYW46Zm9ybWF0VHlwZShNYXRoLmFicyh2YWx1ZSkscHJlY2lzaW9uKTsKLy8gVHJpbSBpbnNpZ25pZmljYW50IHplcm9zLgppZih0cmltKXZhbHVlPWZvcm1hdFRyaW0odmFsdWUpOwovLyBJZiBhIG5lZ2F0aXZlIHZhbHVlIHJvdW5kcyB0byB6ZXJvIGR1cmluZyBmb3JtYXR0aW5nLCB0cmVhdCBhcyBwb3NpdGl2ZS4KaWYodmFsdWVOZWdhdGl2ZSYmK3ZhbHVlPT09MCl2YWx1ZU5lZ2F0aXZlPWZhbHNlOwovLyBDb21wdXRlIHRoZSBwcmVmaXggYW5kIHN1ZmZpeC4KdmFsdWVQcmVmaXg9KHZhbHVlTmVnYXRpdmU/c2lnbj09PSIoIj9zaWduOm1pbnVzOnNpZ249PT0iLSJ8fHNpZ249PT0iKCI/IiI6c2lnbikrdmFsdWVQcmVmaXg7dmFsdWVTdWZmaXg9KHR5cGU9PT0icyI/cHJlZml4ZXNbOCtwcmVmaXhFeHBvbmVudC8zXToiIikrdmFsdWVTdWZmaXgrKHZhbHVlTmVnYXRpdmUmJnNpZ249PT0iKCI/IikiOiIiKTsKLy8gQnJlYWsgdGhlIGZvcm1hdHRlZCB2YWx1ZSBpbnRvIHRoZSBpbnRlZ2VyIOKAnHZhbHVl4oCdIHBhcnQgdGhhdCBjYW4gYmUKLy8gZ3JvdXBlZCwgYW5kIGZyYWN0aW9uYWwgb3IgZXhwb25lbnRpYWwg4oCcc3VmZml44oCdIHBhcnQgdGhhdCBpcyBub3QuCmlmKG1heWJlU3VmZml4KXtpPS0xLG49dmFsdWUubGVuZ3RoO3doaWxlKCsraTxuKXtpZihjPXZhbHVlLmNoYXJDb2RlQXQoaSksNDg+Y3x8Yz41Nyl7dmFsdWVTdWZmaXg9KGM9PT00Nj9kZWNpbWFsK3ZhbHVlLnNsaWNlKGkrMSk6dmFsdWUuc2xpY2UoaSkpK3ZhbHVlU3VmZml4O3ZhbHVlPXZhbHVlLnNsaWNlKDAsaSk7YnJlYWt9fX19Ci8vIElmIHRoZSBmaWxsIGNoYXJhY3RlciBpcyBub3QgIjAiLCBncm91cGluZyBpcyBhcHBsaWVkIGJlZm9yZSBwYWRkaW5nLgppZihjb21tYSYmIXplcm8pdmFsdWU9Z3JvdXAodmFsdWUsSW5maW5pdHkpOwovLyBDb21wdXRlIHRoZSBwYWRkaW5nLgp2YXIgbGVuZ3RoPXZhbHVlUHJlZml4Lmxlbmd0aCt2YWx1ZS5sZW5ndGgrdmFsdWVTdWZmaXgubGVuZ3RoLHBhZGRpbmc9bGVuZ3RoPHdpZHRoP25ldyBBcnJheSh3aWR0aC1sZW5ndGgrMSkuam9pbihmaWxsKToiIjsKLy8gSWYgdGhlIGZpbGwgY2hhcmFjdGVyIGlzICIwIiwgZ3JvdXBpbmcgaXMgYXBwbGllZCBhZnRlciBwYWRkaW5nLgppZihjb21tYSYmemVybyl2YWx1ZT1ncm91cChwYWRkaW5nK3ZhbHVlLHBhZGRpbmcubGVuZ3RoP3dpZHRoLXZhbHVlU3VmZml4Lmxlbmd0aDpJbmZpbml0eSkscGFkZGluZz0iIjsKLy8gUmVjb25zdHJ1Y3QgdGhlIGZpbmFsIG91dHB1dCBiYXNlZCBvbiB0aGUgZGVzaXJlZCBhbGlnbm1lbnQuCnN3aXRjaChhbGlnbil7Y2FzZSI8Ijp2YWx1ZT12YWx1ZVByZWZpeCt2YWx1ZSt2YWx1ZVN1ZmZpeCtwYWRkaW5nO2JyZWFrO2Nhc2UiPSI6dmFsdWU9dmFsdWVQcmVmaXgrcGFkZGluZyt2YWx1ZSt2YWx1ZVN1ZmZpeDticmVhaztjYXNlIl4iOnZhbHVlPXBhZGRpbmcuc2xpY2UoMCxsZW5ndGg9cGFkZGluZy5sZW5ndGg+PjEpK3ZhbHVlUHJlZml4K3ZhbHVlK3ZhbHVlU3VmZml4K3BhZGRpbmcuc2xpY2UobGVuZ3RoKTticmVhaztkZWZhdWx0OnZhbHVlPXBhZGRpbmcrdmFsdWVQcmVmaXgrdmFsdWUrdmFsdWVTdWZmaXg7YnJlYWt9cmV0dXJuIG51bWVyYWxzKHZhbHVlKX1mb3JtYXQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gc3BlY2lmaWVyKyIifTtyZXR1cm4gZm9ybWF0fWZ1bmN0aW9uIGZvcm1hdFByZWZpeChzcGVjaWZpZXIsdmFsdWUpe3ZhciBmPW5ld0Zvcm1hdCgoc3BlY2lmaWVyPWZvcm1hdFNwZWNpZmllcihzcGVjaWZpZXIpLHNwZWNpZmllci50eXBlPSJmIixzcGVjaWZpZXIpKSxlPU1hdGgubWF4KC04LE1hdGgubWluKDgsTWF0aC5mbG9vcihleHBvbmVudCh2YWx1ZSkvMykpKSozLGs9TWF0aC5wb3coMTAsLWUpLHByZWZpeD1wcmVmaXhlc1s4K2UvM107cmV0dXJuIGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gZihrKnZhbHVlKStwcmVmaXh9fXJldHVybntmb3JtYXQ6bmV3Rm9ybWF0LGZvcm1hdFByZWZpeDpmb3JtYXRQcmVmaXh9fXZhciBsb2NhbGU7ZGVmYXVsdExvY2FsZSh7ZGVjaW1hbDoiLiIsdGhvdXNhbmRzOiIsIixncm91cGluZzpbM10sY3VycmVuY3k6WyIkIiwiIl0sbWludXM6Ii0ifSk7ZnVuY3Rpb24gZGVmYXVsdExvY2FsZShkZWZpbml0aW9uKXtsb2NhbGU9Zm9ybWF0TG9jYWxlKGRlZmluaXRpb24pO2V4cG9ydHMuZm9ybWF0PWxvY2FsZS5mb3JtYXQ7ZXhwb3J0cy5mb3JtYXRQcmVmaXg9bG9jYWxlLmZvcm1hdFByZWZpeDtyZXR1cm4gbG9jYWxlfWZ1bmN0aW9uIHByZWNpc2lvbkZpeGVkKHN0ZXApe3JldHVybiBNYXRoLm1heCgwLC1leHBvbmVudChNYXRoLmFicyhzdGVwKSkpfWZ1bmN0aW9uIHByZWNpc2lvblByZWZpeChzdGVwLHZhbHVlKXtyZXR1cm4gTWF0aC5tYXgoMCxNYXRoLm1heCgtOCxNYXRoLm1pbig4LE1hdGguZmxvb3IoZXhwb25lbnQodmFsdWUpLzMpKSkqMy1leHBvbmVudChNYXRoLmFicyhzdGVwKSkpfWZ1bmN0aW9uIHByZWNpc2lvblJvdW5kKHN0ZXAsbWF4KXtzdGVwPU1hdGguYWJzKHN0ZXApLG1heD1NYXRoLmFicyhtYXgpLXN0ZXA7cmV0dXJuIE1hdGgubWF4KDAsZXhwb25lbnQobWF4KS1leHBvbmVudChzdGVwKSkrMX1leHBvcnRzLkZvcm1hdFNwZWNpZmllcj1Gb3JtYXRTcGVjaWZpZXI7ZXhwb3J0cy5mb3JtYXREZWZhdWx0TG9jYWxlPWRlZmF1bHRMb2NhbGU7ZXhwb3J0cy5mb3JtYXRMb2NhbGU9Zm9ybWF0TG9jYWxlO2V4cG9ydHMuZm9ybWF0U3BlY2lmaWVyPWZvcm1hdFNwZWNpZmllcjtleHBvcnRzLnByZWNpc2lvbkZpeGVkPXByZWNpc2lvbkZpeGVkO2V4cG9ydHMucHJlY2lzaW9uUHJlZml4PXByZWNpc2lvblByZWZpeDtleHBvcnRzLnByZWNpc2lvblJvdW5kPXByZWNpc2lvblJvdW5kO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSw0MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtZ2VvLyB2MS4xMS45IENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMscmVxdWlyZSgiZDMtYXJyYXkiKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLWFycmF5Il0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMpKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM0FycmF5KXsidXNlIHN0cmljdCI7Ci8vIEFkZHMgZmxvYXRpbmcgcG9pbnQgbnVtYmVycyB3aXRoIHR3aWNlIHRoZSBub3JtYWwgcHJlY2lzaW9uLgovLyBSZWZlcmVuY2U6IEouIFIuIFNoZXdjaHVrLCBBZGFwdGl2ZSBQcmVjaXNpb24gRmxvYXRpbmctUG9pbnQgQXJpdGhtZXRpYyBhbmQKLy8gRmFzdCBSb2J1c3QgR2VvbWV0cmljIFByZWRpY2F0ZXMsIERpc2NyZXRlICYgQ29tcHV0YXRpb25hbCBHZW9tZXRyeSAxOCgzKQovLyAzMDXigJMzNjMgKDE5OTcpLgovLyBDb2RlIGFkYXB0ZWQgZnJvbSBHZW9ncmFwaGljTGliIGJ5IENoYXJsZXMgRi4gRi4gS2FybmV5LAovLyBodHRwOi8vZ2VvZ3JhcGhpY2xpYi5zb3VyY2Vmb3JnZS5uZXQvCmZ1bmN0aW9uIGFkZGVyKCl7cmV0dXJuIG5ldyBBZGRlcn1mdW5jdGlvbiBBZGRlcigpe3RoaXMucmVzZXQoKX1BZGRlci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkFkZGVyLHJlc2V0OmZ1bmN0aW9uKCl7dGhpcy5zPS8vIHJvdW5kZWQgdmFsdWUKdGhpcy50PTA7Ly8gZXhhY3QgZXJyb3IKfSxhZGQ6ZnVuY3Rpb24oeSl7YWRkKHRlbXAseSx0aGlzLnQpO2FkZCh0aGlzLHRlbXAucyx0aGlzLnMpO2lmKHRoaXMucyl0aGlzLnQrPXRlbXAudDtlbHNlIHRoaXMucz10ZW1wLnR9LHZhbHVlT2Y6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zfX07dmFyIHRlbXA9bmV3IEFkZGVyO2Z1bmN0aW9uIGFkZChhZGRlcixhLGIpe3ZhciB4PWFkZGVyLnM9YStiLGJ2PXgtYSxhdj14LWJ2O2FkZGVyLnQ9YS1hdisoYi1idil9dmFyIGVwc2lsb249MWUtNjt2YXIgZXBzaWxvbjI9MWUtMTI7dmFyIHBpPU1hdGguUEk7dmFyIGhhbGZQaT1waS8yO3ZhciBxdWFydGVyUGk9cGkvNDt2YXIgdGF1PXBpKjI7dmFyIGRlZ3JlZXM9MTgwL3BpO3ZhciByYWRpYW5zPXBpLzE4MDt2YXIgYWJzPU1hdGguYWJzO3ZhciBhdGFuPU1hdGguYXRhbjt2YXIgYXRhbjI9TWF0aC5hdGFuMjt2YXIgY29zPU1hdGguY29zO3ZhciBjZWlsPU1hdGguY2VpbDt2YXIgZXhwPU1hdGguZXhwO3ZhciBsb2c9TWF0aC5sb2c7dmFyIHBvdz1NYXRoLnBvdzt2YXIgc2luPU1hdGguc2luO3ZhciBzaWduPU1hdGguc2lnbnx8ZnVuY3Rpb24oeCl7cmV0dXJuIHg+MD8xOng8MD8tMTowfTt2YXIgc3FydD1NYXRoLnNxcnQ7dmFyIHRhbj1NYXRoLnRhbjtmdW5jdGlvbiBhY29zKHgpe3JldHVybiB4PjE/MDp4PC0xP3BpOk1hdGguYWNvcyh4KX1mdW5jdGlvbiBhc2luKHgpe3JldHVybiB4PjE/aGFsZlBpOng8LTE/LWhhbGZQaTpNYXRoLmFzaW4oeCl9ZnVuY3Rpb24gaGF2ZXJzaW4oeCl7cmV0dXJuKHg9c2luKHgvMikpKnh9ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBzdHJlYW1HZW9tZXRyeShnZW9tZXRyeSxzdHJlYW0pe2lmKGdlb21ldHJ5JiZzdHJlYW1HZW9tZXRyeVR5cGUuaGFzT3duUHJvcGVydHkoZ2VvbWV0cnkudHlwZSkpe3N0cmVhbUdlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSxzdHJlYW0pfX12YXIgc3RyZWFtT2JqZWN0VHlwZT17RmVhdHVyZTpmdW5jdGlvbihvYmplY3Qsc3RyZWFtKXtzdHJlYW1HZW9tZXRyeShvYmplY3QuZ2VvbWV0cnksc3RyZWFtKX0sRmVhdHVyZUNvbGxlY3Rpb246ZnVuY3Rpb24ob2JqZWN0LHN0cmVhbSl7dmFyIGZlYXR1cmVzPW9iamVjdC5mZWF0dXJlcyxpPS0xLG49ZmVhdHVyZXMubGVuZ3RoO3doaWxlKCsraTxuKXN0cmVhbUdlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LHN0cmVhbSl9fTt2YXIgc3RyZWFtR2VvbWV0cnlUeXBlPXtTcGhlcmU6ZnVuY3Rpb24ob2JqZWN0LHN0cmVhbSl7c3RyZWFtLnNwaGVyZSgpfSxQb2ludDpmdW5jdGlvbihvYmplY3Qsc3RyZWFtKXtvYmplY3Q9b2JqZWN0LmNvb3JkaW5hdGVzO3N0cmVhbS5wb2ludChvYmplY3RbMF0sb2JqZWN0WzFdLG9iamVjdFsyXSl9LE11bHRpUG9pbnQ6ZnVuY3Rpb24ob2JqZWN0LHN0cmVhbSl7dmFyIGNvb3JkaW5hdGVzPW9iamVjdC5jb29yZGluYXRlcyxpPS0xLG49Y29vcmRpbmF0ZXMubGVuZ3RoO3doaWxlKCsraTxuKW9iamVjdD1jb29yZGluYXRlc1tpXSxzdHJlYW0ucG9pbnQob2JqZWN0WzBdLG9iamVjdFsxXSxvYmplY3RbMl0pfSxMaW5lU3RyaW5nOmZ1bmN0aW9uKG9iamVjdCxzdHJlYW0pe3N0cmVhbUxpbmUob2JqZWN0LmNvb3JkaW5hdGVzLHN0cmVhbSwwKX0sTXVsdGlMaW5lU3RyaW5nOmZ1bmN0aW9uKG9iamVjdCxzdHJlYW0pe3ZhciBjb29yZGluYXRlcz1vYmplY3QuY29vcmRpbmF0ZXMsaT0tMSxuPWNvb3JkaW5hdGVzLmxlbmd0aDt3aGlsZSgrK2k8bilzdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLHN0cmVhbSwwKX0sUG9seWdvbjpmdW5jdGlvbihvYmplY3Qsc3RyZWFtKXtzdHJlYW1Qb2x5Z29uKG9iamVjdC5jb29yZGluYXRlcyxzdHJlYW0pfSxNdWx0aVBvbHlnb246ZnVuY3Rpb24ob2JqZWN0LHN0cmVhbSl7dmFyIGNvb3JkaW5hdGVzPW9iamVjdC5jb29yZGluYXRlcyxpPS0xLG49Y29vcmRpbmF0ZXMubGVuZ3RoO3doaWxlKCsraTxuKXN0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXNbaV0sc3RyZWFtKX0sR2VvbWV0cnlDb2xsZWN0aW9uOmZ1bmN0aW9uKG9iamVjdCxzdHJlYW0pe3ZhciBnZW9tZXRyaWVzPW9iamVjdC5nZW9tZXRyaWVzLGk9LTEsbj1nZW9tZXRyaWVzLmxlbmd0aDt3aGlsZSgrK2k8bilzdHJlYW1HZW9tZXRyeShnZW9tZXRyaWVzW2ldLHN0cmVhbSl9fTtmdW5jdGlvbiBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzLHN0cmVhbSxjbG9zZWQpe3ZhciBpPS0xLG49Y29vcmRpbmF0ZXMubGVuZ3RoLWNsb3NlZCxjb29yZGluYXRlO3N0cmVhbS5saW5lU3RhcnQoKTt3aGlsZSgrK2k8biljb29yZGluYXRlPWNvb3JkaW5hdGVzW2ldLHN0cmVhbS5wb2ludChjb29yZGluYXRlWzBdLGNvb3JkaW5hdGVbMV0sY29vcmRpbmF0ZVsyXSk7c3RyZWFtLmxpbmVFbmQoKX1mdW5jdGlvbiBzdHJlYW1Qb2x5Z29uKGNvb3JkaW5hdGVzLHN0cmVhbSl7dmFyIGk9LTEsbj1jb29yZGluYXRlcy5sZW5ndGg7c3RyZWFtLnBvbHlnb25TdGFydCgpO3doaWxlKCsraTxuKXN0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sc3RyZWFtLDEpO3N0cmVhbS5wb2x5Z29uRW5kKCl9ZnVuY3Rpb24gZ2VvU3RyZWFtKG9iamVjdCxzdHJlYW0pe2lmKG9iamVjdCYmc3RyZWFtT2JqZWN0VHlwZS5oYXNPd25Qcm9wZXJ0eShvYmplY3QudHlwZSkpe3N0cmVhbU9iamVjdFR5cGVbb2JqZWN0LnR5cGVdKG9iamVjdCxzdHJlYW0pfWVsc2V7c3RyZWFtR2VvbWV0cnkob2JqZWN0LHN0cmVhbSl9fXZhciBhcmVhUmluZ1N1bT1hZGRlcigpO3ZhciBhcmVhU3VtPWFkZGVyKCksbGFtYmRhMDAscGhpMDAsbGFtYmRhMCxjb3NQaGkwLHNpblBoaTA7dmFyIGFyZWFTdHJlYW09e3BvaW50Om5vb3AsbGluZVN0YXJ0Om5vb3AsbGluZUVuZDpub29wLHBvbHlnb25TdGFydDpmdW5jdGlvbigpe2FyZWFSaW5nU3VtLnJlc2V0KCk7YXJlYVN0cmVhbS5saW5lU3RhcnQ9YXJlYVJpbmdTdGFydDthcmVhU3RyZWFtLmxpbmVFbmQ9YXJlYVJpbmdFbmR9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt2YXIgYXJlYVJpbmc9K2FyZWFSaW5nU3VtO2FyZWFTdW0uYWRkKGFyZWFSaW5nPDA/dGF1K2FyZWFSaW5nOmFyZWFSaW5nKTt0aGlzLmxpbmVTdGFydD10aGlzLmxpbmVFbmQ9dGhpcy5wb2ludD1ub29wfSxzcGhlcmU6ZnVuY3Rpb24oKXthcmVhU3VtLmFkZCh0YXUpfX07ZnVuY3Rpb24gYXJlYVJpbmdTdGFydCgpe2FyZWFTdHJlYW0ucG9pbnQ9YXJlYVBvaW50Rmlyc3R9ZnVuY3Rpb24gYXJlYVJpbmdFbmQoKXthcmVhUG9pbnQobGFtYmRhMDAscGhpMDApfWZ1bmN0aW9uIGFyZWFQb2ludEZpcnN0KGxhbWJkYSxwaGkpe2FyZWFTdHJlYW0ucG9pbnQ9YXJlYVBvaW50O2xhbWJkYTAwPWxhbWJkYSxwaGkwMD1waGk7bGFtYmRhKj1yYWRpYW5zLHBoaSo9cmFkaWFucztsYW1iZGEwPWxhbWJkYSxjb3NQaGkwPWNvcyhwaGk9cGhpLzIrcXVhcnRlclBpKSxzaW5QaGkwPXNpbihwaGkpfWZ1bmN0aW9uIGFyZWFQb2ludChsYW1iZGEscGhpKXtsYW1iZGEqPXJhZGlhbnMscGhpKj1yYWRpYW5zO3BoaT1waGkvMitxdWFydGVyUGk7Ly8gaGFsZiB0aGUgYW5ndWxhciBkaXN0YW5jZSBmcm9tIHNvdXRoIHBvbGUKLy8gU3BoZXJpY2FsIGV4Y2VzcyBFIGZvciBhIHNwaGVyaWNhbCB0cmlhbmdsZSB3aXRoIHZlcnRpY2VzOiBzb3V0aCBwb2xlLAovLyBwcmV2aW91cyBwb2ludCwgY3VycmVudCBwb2ludC4gIFVzZXMgYSBmb3JtdWxhIGRlcml2ZWQgZnJvbSBDYWdub2xp4oCZcwovLyB0aGVvcmVtLiAgU2VlIFRvZGh1bnRlciwgU3BoZXJpY2FsIFRyaWcuICgxODcxKSwgU2VjLiAxMDMsIEVxLiAoMikuCnZhciBkTGFtYmRhPWxhbWJkYS1sYW1iZGEwLHNkTGFtYmRhPWRMYW1iZGE+PTA/MTotMSxhZExhbWJkYT1zZExhbWJkYSpkTGFtYmRhLGNvc1BoaT1jb3MocGhpKSxzaW5QaGk9c2luKHBoaSksaz1zaW5QaGkwKnNpblBoaSx1PWNvc1BoaTAqY29zUGhpK2sqY29zKGFkTGFtYmRhKSx2PWsqc2RMYW1iZGEqc2luKGFkTGFtYmRhKTthcmVhUmluZ1N1bS5hZGQoYXRhbjIodix1KSk7Ci8vIEFkdmFuY2UgdGhlIHByZXZpb3VzIHBvaW50cy4KbGFtYmRhMD1sYW1iZGEsY29zUGhpMD1jb3NQaGksc2luUGhpMD1zaW5QaGl9ZnVuY3Rpb24gYXJlYShvYmplY3Qpe2FyZWFTdW0ucmVzZXQoKTtnZW9TdHJlYW0ob2JqZWN0LGFyZWFTdHJlYW0pO3JldHVybiBhcmVhU3VtKjJ9ZnVuY3Rpb24gc3BoZXJpY2FsKGNhcnRlc2lhbil7cmV0dXJuW2F0YW4yKGNhcnRlc2lhblsxXSxjYXJ0ZXNpYW5bMF0pLGFzaW4oY2FydGVzaWFuWzJdKV19ZnVuY3Rpb24gY2FydGVzaWFuKHNwaGVyaWNhbCl7dmFyIGxhbWJkYT1zcGhlcmljYWxbMF0scGhpPXNwaGVyaWNhbFsxXSxjb3NQaGk9Y29zKHBoaSk7cmV0dXJuW2Nvc1BoaSpjb3MobGFtYmRhKSxjb3NQaGkqc2luKGxhbWJkYSksc2luKHBoaSldfWZ1bmN0aW9uIGNhcnRlc2lhbkRvdChhLGIpe3JldHVybiBhWzBdKmJbMF0rYVsxXSpiWzFdK2FbMl0qYlsyXX1mdW5jdGlvbiBjYXJ0ZXNpYW5Dcm9zcyhhLGIpe3JldHVyblthWzFdKmJbMl0tYVsyXSpiWzFdLGFbMl0qYlswXS1hWzBdKmJbMl0sYVswXSpiWzFdLWFbMV0qYlswXV19Ci8vIFRPRE8gcmV0dXJuIGEKZnVuY3Rpb24gY2FydGVzaWFuQWRkSW5QbGFjZShhLGIpe2FbMF0rPWJbMF0sYVsxXSs9YlsxXSxhWzJdKz1iWzJdfWZ1bmN0aW9uIGNhcnRlc2lhblNjYWxlKHZlY3RvcixrKXtyZXR1cm5bdmVjdG9yWzBdKmssdmVjdG9yWzFdKmssdmVjdG9yWzJdKmtdfQovLyBUT0RPIHJldHVybiBkCmZ1bmN0aW9uIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoZCl7dmFyIGw9c3FydChkWzBdKmRbMF0rZFsxXSpkWzFdK2RbMl0qZFsyXSk7ZFswXS89bCxkWzFdLz1sLGRbMl0vPWx9dmFyIGxhbWJkYTAkMSxwaGkwLGxhbWJkYTEscGhpMSwvLyBib3VuZHMKbGFtYmRhMiwvLyBwcmV2aW91cyBsYW1iZGEtY29vcmRpbmF0ZQpsYW1iZGEwMCQxLHBoaTAwJDEsLy8gZmlyc3QgcG9pbnQKcDAsLy8gcHJldmlvdXMgM0QgcG9pbnQKZGVsdGFTdW09YWRkZXIoKSxyYW5nZXMscmFuZ2U7dmFyIGJvdW5kc1N0cmVhbT17cG9pbnQ6Ym91bmRzUG9pbnQsbGluZVN0YXJ0OmJvdW5kc0xpbmVTdGFydCxsaW5lRW5kOmJvdW5kc0xpbmVFbmQscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7Ym91bmRzU3RyZWFtLnBvaW50PWJvdW5kc1JpbmdQb2ludDtib3VuZHNTdHJlYW0ubGluZVN0YXJ0PWJvdW5kc1JpbmdTdGFydDtib3VuZHNTdHJlYW0ubGluZUVuZD1ib3VuZHNSaW5nRW5kO2RlbHRhU3VtLnJlc2V0KCk7YXJlYVN0cmVhbS5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe2FyZWFTdHJlYW0ucG9seWdvbkVuZCgpO2JvdW5kc1N0cmVhbS5wb2ludD1ib3VuZHNQb2ludDtib3VuZHNTdHJlYW0ubGluZVN0YXJ0PWJvdW5kc0xpbmVTdGFydDtib3VuZHNTdHJlYW0ubGluZUVuZD1ib3VuZHNMaW5lRW5kO2lmKGFyZWFSaW5nU3VtPDApbGFtYmRhMCQxPS0obGFtYmRhMT0xODApLHBoaTA9LShwaGkxPTkwKTtlbHNlIGlmKGRlbHRhU3VtPmVwc2lsb24pcGhpMT05MDtlbHNlIGlmKGRlbHRhU3VtPC1lcHNpbG9uKXBoaTA9LTkwO3JhbmdlWzBdPWxhbWJkYTAkMSxyYW5nZVsxXT1sYW1iZGExfSxzcGhlcmU6ZnVuY3Rpb24oKXtsYW1iZGEwJDE9LShsYW1iZGExPTE4MCkscGhpMD0tKHBoaTE9OTApfX07ZnVuY3Rpb24gYm91bmRzUG9pbnQobGFtYmRhLHBoaSl7cmFuZ2VzLnB1c2gocmFuZ2U9W2xhbWJkYTAkMT1sYW1iZGEsbGFtYmRhMT1sYW1iZGFdKTtpZihwaGk8cGhpMClwaGkwPXBoaTtpZihwaGk+cGhpMSlwaGkxPXBoaX1mdW5jdGlvbiBsaW5lUG9pbnQobGFtYmRhLHBoaSl7dmFyIHA9Y2FydGVzaWFuKFtsYW1iZGEqcmFkaWFucyxwaGkqcmFkaWFuc10pO2lmKHAwKXt2YXIgbm9ybWFsPWNhcnRlc2lhbkNyb3NzKHAwLHApLGVxdWF0b3JpYWw9W25vcm1hbFsxXSwtbm9ybWFsWzBdLDBdLGluZmxlY3Rpb249Y2FydGVzaWFuQ3Jvc3MoZXF1YXRvcmlhbCxub3JtYWwpO2NhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoaW5mbGVjdGlvbik7aW5mbGVjdGlvbj1zcGhlcmljYWwoaW5mbGVjdGlvbik7dmFyIGRlbHRhPWxhbWJkYS1sYW1iZGEyLHNpZ249ZGVsdGE+MD8xOi0xLGxhbWJkYWk9aW5mbGVjdGlvblswXSpkZWdyZWVzKnNpZ24scGhpaSxhbnRpbWVyaWRpYW49YWJzKGRlbHRhKT4xODA7aWYoYW50aW1lcmlkaWFuXihzaWduKmxhbWJkYTI8bGFtYmRhaSYmbGFtYmRhaTxzaWduKmxhbWJkYSkpe3BoaWk9aW5mbGVjdGlvblsxXSpkZWdyZWVzO2lmKHBoaWk+cGhpMSlwaGkxPXBoaWl9ZWxzZSBpZihsYW1iZGFpPShsYW1iZGFpKzM2MCklMzYwLTE4MCxhbnRpbWVyaWRpYW5eKHNpZ24qbGFtYmRhMjxsYW1iZGFpJiZsYW1iZGFpPHNpZ24qbGFtYmRhKSl7cGhpaT0taW5mbGVjdGlvblsxXSpkZWdyZWVzO2lmKHBoaWk8cGhpMClwaGkwPXBoaWl9ZWxzZXtpZihwaGk8cGhpMClwaGkwPXBoaTtpZihwaGk+cGhpMSlwaGkxPXBoaX1pZihhbnRpbWVyaWRpYW4pe2lmKGxhbWJkYTxsYW1iZGEyKXtpZihhbmdsZShsYW1iZGEwJDEsbGFtYmRhKT5hbmdsZShsYW1iZGEwJDEsbGFtYmRhMSkpbGFtYmRhMT1sYW1iZGF9ZWxzZXtpZihhbmdsZShsYW1iZGEsbGFtYmRhMSk+YW5nbGUobGFtYmRhMCQxLGxhbWJkYTEpKWxhbWJkYTAkMT1sYW1iZGF9fWVsc2V7aWYobGFtYmRhMT49bGFtYmRhMCQxKXtpZihsYW1iZGE8bGFtYmRhMCQxKWxhbWJkYTAkMT1sYW1iZGE7aWYobGFtYmRhPmxhbWJkYTEpbGFtYmRhMT1sYW1iZGF9ZWxzZXtpZihsYW1iZGE+bGFtYmRhMil7aWYoYW5nbGUobGFtYmRhMCQxLGxhbWJkYSk+YW5nbGUobGFtYmRhMCQxLGxhbWJkYTEpKWxhbWJkYTE9bGFtYmRhfWVsc2V7aWYoYW5nbGUobGFtYmRhLGxhbWJkYTEpPmFuZ2xlKGxhbWJkYTAkMSxsYW1iZGExKSlsYW1iZGEwJDE9bGFtYmRhfX19fWVsc2V7cmFuZ2VzLnB1c2gocmFuZ2U9W2xhbWJkYTAkMT1sYW1iZGEsbGFtYmRhMT1sYW1iZGFdKX1pZihwaGk8cGhpMClwaGkwPXBoaTtpZihwaGk+cGhpMSlwaGkxPXBoaTtwMD1wLGxhbWJkYTI9bGFtYmRhfWZ1bmN0aW9uIGJvdW5kc0xpbmVTdGFydCgpe2JvdW5kc1N0cmVhbS5wb2ludD1saW5lUG9pbnR9ZnVuY3Rpb24gYm91bmRzTGluZUVuZCgpe3JhbmdlWzBdPWxhbWJkYTAkMSxyYW5nZVsxXT1sYW1iZGExO2JvdW5kc1N0cmVhbS5wb2ludD1ib3VuZHNQb2ludDtwMD1udWxsfWZ1bmN0aW9uIGJvdW5kc1JpbmdQb2ludChsYW1iZGEscGhpKXtpZihwMCl7dmFyIGRlbHRhPWxhbWJkYS1sYW1iZGEyO2RlbHRhU3VtLmFkZChhYnMoZGVsdGEpPjE4MD9kZWx0YSsoZGVsdGE+MD8zNjA6LTM2MCk6ZGVsdGEpfWVsc2V7bGFtYmRhMDAkMT1sYW1iZGEscGhpMDAkMT1waGl9YXJlYVN0cmVhbS5wb2ludChsYW1iZGEscGhpKTtsaW5lUG9pbnQobGFtYmRhLHBoaSl9ZnVuY3Rpb24gYm91bmRzUmluZ1N0YXJ0KCl7YXJlYVN0cmVhbS5saW5lU3RhcnQoKX1mdW5jdGlvbiBib3VuZHNSaW5nRW5kKCl7Ym91bmRzUmluZ1BvaW50KGxhbWJkYTAwJDEscGhpMDAkMSk7YXJlYVN0cmVhbS5saW5lRW5kKCk7aWYoYWJzKGRlbHRhU3VtKT5lcHNpbG9uKWxhbWJkYTAkMT0tKGxhbWJkYTE9MTgwKTtyYW5nZVswXT1sYW1iZGEwJDEscmFuZ2VbMV09bGFtYmRhMTtwMD1udWxsfQovLyBGaW5kcyB0aGUgbGVmdC1yaWdodCBkaXN0YW5jZSBiZXR3ZWVuIHR3byBsb25naXR1ZGVzLgovLyBUaGlzIGlzIGFsbW9zdCB0aGUgc2FtZSBhcyAobGFtYmRhMSAtIGxhbWJkYTAgKyAzNjDCsCkgJSAzNjDCsCwgZXhjZXB0IHRoYXQgd2Ugd2FudAovLyB0aGUgZGlzdGFuY2UgYmV0d2VlbiDCsTE4MMKwIHRvIGJlIDM2MMKwLgpmdW5jdGlvbiBhbmdsZShsYW1iZGEwLGxhbWJkYTEpe3JldHVybihsYW1iZGExLT1sYW1iZGEwKTwwP2xhbWJkYTErMzYwOmxhbWJkYTF9ZnVuY3Rpb24gcmFuZ2VDb21wYXJlKGEsYil7cmV0dXJuIGFbMF0tYlswXX1mdW5jdGlvbiByYW5nZUNvbnRhaW5zKHJhbmdlLHgpe3JldHVybiByYW5nZVswXTw9cmFuZ2VbMV0/cmFuZ2VbMF08PXgmJng8PXJhbmdlWzFdOng8cmFuZ2VbMF18fHJhbmdlWzFdPHh9ZnVuY3Rpb24gYm91bmRzKGZlYXR1cmUpe3ZhciBpLG4sYSxiLG1lcmdlZCxkZWx0YU1heCxkZWx0YTtwaGkxPWxhbWJkYTE9LShsYW1iZGEwJDE9cGhpMD1JbmZpbml0eSk7cmFuZ2VzPVtdO2dlb1N0cmVhbShmZWF0dXJlLGJvdW5kc1N0cmVhbSk7Ci8vIEZpcnN0LCBzb3J0IHJhbmdlcyBieSB0aGVpciBtaW5pbXVtIGxvbmdpdHVkZXMuCmlmKG49cmFuZ2VzLmxlbmd0aCl7cmFuZ2VzLnNvcnQocmFuZ2VDb21wYXJlKTsKLy8gVGhlbiwgbWVyZ2UgYW55IHJhbmdlcyB0aGF0IG92ZXJsYXAuCmZvcihpPTEsYT1yYW5nZXNbMF0sbWVyZ2VkPVthXTtpPG47KytpKXtiPXJhbmdlc1tpXTtpZihyYW5nZUNvbnRhaW5zKGEsYlswXSl8fHJhbmdlQ29udGFpbnMoYSxiWzFdKSl7aWYoYW5nbGUoYVswXSxiWzFdKT5hbmdsZShhWzBdLGFbMV0pKWFbMV09YlsxXTtpZihhbmdsZShiWzBdLGFbMV0pPmFuZ2xlKGFbMF0sYVsxXSkpYVswXT1iWzBdfWVsc2V7bWVyZ2VkLnB1c2goYT1iKX19Ci8vIEZpbmFsbHksIGZpbmQgdGhlIGxhcmdlc3QgZ2FwIGJldHdlZW4gdGhlIG1lcmdlZCByYW5nZXMuCi8vIFRoZSBmaW5hbCBib3VuZGluZyBib3ggd2lsbCBiZSB0aGUgaW52ZXJzZSBvZiB0aGlzIGdhcC4KZm9yKGRlbHRhTWF4PS1JbmZpbml0eSxuPW1lcmdlZC5sZW5ndGgtMSxpPTAsYT1tZXJnZWRbbl07aTw9bjthPWIsKytpKXtiPW1lcmdlZFtpXTtpZigoZGVsdGE9YW5nbGUoYVsxXSxiWzBdKSk+ZGVsdGFNYXgpZGVsdGFNYXg9ZGVsdGEsbGFtYmRhMCQxPWJbMF0sbGFtYmRhMT1hWzFdfX1yYW5nZXM9cmFuZ2U9bnVsbDtyZXR1cm4gbGFtYmRhMCQxPT09SW5maW5pdHl8fHBoaTA9PT1JbmZpbml0eT9bW05hTixOYU5dLFtOYU4sTmFOXV06W1tsYW1iZGEwJDEscGhpMF0sW2xhbWJkYTEscGhpMV1dfXZhciBXMCxXMSxYMCxZMCxaMCxYMSxZMSxaMSxYMixZMixaMixsYW1iZGEwMCQyLHBoaTAwJDIsLy8gZmlyc3QgcG9pbnQKeDAseTAsejA7Ly8gcHJldmlvdXMgcG9pbnQKdmFyIGNlbnRyb2lkU3RyZWFtPXtzcGhlcmU6bm9vcCxwb2ludDpjZW50cm9pZFBvaW50LGxpbmVTdGFydDpjZW50cm9pZExpbmVTdGFydCxsaW5lRW5kOmNlbnRyb2lkTGluZUVuZCxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQ9Y2VudHJvaWRSaW5nU3RhcnQ7Y2VudHJvaWRTdHJlYW0ubGluZUVuZD1jZW50cm9pZFJpbmdFbmR9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQ9Y2VudHJvaWRMaW5lU3RhcnQ7Y2VudHJvaWRTdHJlYW0ubGluZUVuZD1jZW50cm9pZExpbmVFbmR9fTsKLy8gQXJpdGhtZXRpYyBtZWFuIG9mIENhcnRlc2lhbiB2ZWN0b3JzLgpmdW5jdGlvbiBjZW50cm9pZFBvaW50KGxhbWJkYSxwaGkpe2xhbWJkYSo9cmFkaWFucyxwaGkqPXJhZGlhbnM7dmFyIGNvc1BoaT1jb3MocGhpKTtjZW50cm9pZFBvaW50Q2FydGVzaWFuKGNvc1BoaSpjb3MobGFtYmRhKSxjb3NQaGkqc2luKGxhbWJkYSksc2luKHBoaSkpfWZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeCx5LHopeysrVzA7WDArPSh4LVgwKS9XMDtZMCs9KHktWTApL1cwO1owKz0oei1aMCkvVzB9ZnVuY3Rpb24gY2VudHJvaWRMaW5lU3RhcnQoKXtjZW50cm9pZFN0cmVhbS5wb2ludD1jZW50cm9pZExpbmVQb2ludEZpcnN0fWZ1bmN0aW9uIGNlbnRyb2lkTGluZVBvaW50Rmlyc3QobGFtYmRhLHBoaSl7bGFtYmRhKj1yYWRpYW5zLHBoaSo9cmFkaWFuczt2YXIgY29zUGhpPWNvcyhwaGkpO3gwPWNvc1BoaSpjb3MobGFtYmRhKTt5MD1jb3NQaGkqc2luKGxhbWJkYSk7ejA9c2luKHBoaSk7Y2VudHJvaWRTdHJlYW0ucG9pbnQ9Y2VudHJvaWRMaW5lUG9pbnQ7Y2VudHJvaWRQb2ludENhcnRlc2lhbih4MCx5MCx6MCl9ZnVuY3Rpb24gY2VudHJvaWRMaW5lUG9pbnQobGFtYmRhLHBoaSl7bGFtYmRhKj1yYWRpYW5zLHBoaSo9cmFkaWFuczt2YXIgY29zUGhpPWNvcyhwaGkpLHg9Y29zUGhpKmNvcyhsYW1iZGEpLHk9Y29zUGhpKnNpbihsYW1iZGEpLHo9c2luKHBoaSksdz1hdGFuMihzcXJ0KCh3PXkwKnotejAqeSkqdysodz16MCp4LXgwKnopKncrKHc9eDAqeS15MCp4KSp3KSx4MCp4K3kwKnkrejAqeik7VzErPXc7WDErPXcqKHgwKyh4MD14KSk7WTErPXcqKHkwKyh5MD15KSk7WjErPXcqKHowKyh6MD16KSk7Y2VudHJvaWRQb2ludENhcnRlc2lhbih4MCx5MCx6MCl9ZnVuY3Rpb24gY2VudHJvaWRMaW5lRW5kKCl7Y2VudHJvaWRTdHJlYW0ucG9pbnQ9Y2VudHJvaWRQb2ludH0KLy8gU2VlIEouIEUuIEJyb2NrLCBUaGUgSW5lcnRpYSBUZW5zb3IgZm9yIGEgU3BoZXJpY2FsIFRyaWFuZ2xlLAovLyBKLiBBcHBsaWVkIE1lY2hhbmljcyA0MiwgMjM5ICgxOTc1KS4KZnVuY3Rpb24gY2VudHJvaWRSaW5nU3RhcnQoKXtjZW50cm9pZFN0cmVhbS5wb2ludD1jZW50cm9pZFJpbmdQb2ludEZpcnN0fWZ1bmN0aW9uIGNlbnRyb2lkUmluZ0VuZCgpe2NlbnRyb2lkUmluZ1BvaW50KGxhbWJkYTAwJDIscGhpMDAkMik7Y2VudHJvaWRTdHJlYW0ucG9pbnQ9Y2VudHJvaWRQb2ludH1mdW5jdGlvbiBjZW50cm9pZFJpbmdQb2ludEZpcnN0KGxhbWJkYSxwaGkpe2xhbWJkYTAwJDI9bGFtYmRhLHBoaTAwJDI9cGhpO2xhbWJkYSo9cmFkaWFucyxwaGkqPXJhZGlhbnM7Y2VudHJvaWRTdHJlYW0ucG9pbnQ9Y2VudHJvaWRSaW5nUG9pbnQ7dmFyIGNvc1BoaT1jb3MocGhpKTt4MD1jb3NQaGkqY29zKGxhbWJkYSk7eTA9Y29zUGhpKnNpbihsYW1iZGEpO3owPXNpbihwaGkpO2NlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAseTAsejApfWZ1bmN0aW9uIGNlbnRyb2lkUmluZ1BvaW50KGxhbWJkYSxwaGkpe2xhbWJkYSo9cmFkaWFucyxwaGkqPXJhZGlhbnM7dmFyIGNvc1BoaT1jb3MocGhpKSx4PWNvc1BoaSpjb3MobGFtYmRhKSx5PWNvc1BoaSpzaW4obGFtYmRhKSx6PXNpbihwaGkpLGN4PXkwKnotejAqeSxjeT16MCp4LXgwKnosY3o9eDAqeS15MCp4LG09c3FydChjeCpjeCtjeSpjeStjeipjeiksdz1hc2luKG0pLC8vIGxpbmUgd2VpZ2h0ID0gYW5nbGUKdj1tJiYtdy9tOy8vIGFyZWEgd2VpZ2h0IG11bHRpcGxpZXIKWDIrPXYqY3g7WTIrPXYqY3k7WjIrPXYqY3o7VzErPXc7WDErPXcqKHgwKyh4MD14KSk7WTErPXcqKHkwKyh5MD15KSk7WjErPXcqKHowKyh6MD16KSk7Y2VudHJvaWRQb2ludENhcnRlc2lhbih4MCx5MCx6MCl9ZnVuY3Rpb24gY2VudHJvaWQob2JqZWN0KXtXMD1XMT1YMD1ZMD1aMD1YMT1ZMT1aMT1YMj1ZMj1aMj0wO2dlb1N0cmVhbShvYmplY3QsY2VudHJvaWRTdHJlYW0pO3ZhciB4PVgyLHk9WTIsej1aMixtPXgqeCt5Knkreip6OwovLyBJZiB0aGUgYXJlYS13ZWlnaHRlZCBjY2VudHJvaWQgaXMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbGVuZ3RoLXdlaWdodGVkIGNjZW50cm9pZC4KaWYobTxlcHNpbG9uMil7eD1YMSx5PVkxLHo9WjE7Ci8vIElmIHRoZSBmZWF0dXJlIGhhcyB6ZXJvIGxlbmd0aCwgZmFsbCBiYWNrIHRvIGFyaXRobWV0aWMgbWVhbiBvZiBwb2ludCB2ZWN0b3JzLgppZihXMTxlcHNpbG9uKXg9WDAseT1ZMCx6PVowO209eCp4K3kqeSt6Kno7Ci8vIElmIHRoZSBmZWF0dXJlIHN0aWxsIGhhcyBhbiB1bmRlZmluZWQgY2NlbnRyb2lkLCB0aGVuIHJldHVybi4KaWYobTxlcHNpbG9uMilyZXR1cm5bTmFOLE5hTl19cmV0dXJuW2F0YW4yKHkseCkqZGVncmVlcyxhc2luKHovc3FydChtKSkqZGVncmVlc119ZnVuY3Rpb24gY29uc3RhbnQoeCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHh9fWZ1bmN0aW9uIGNvbXBvc2UoYSxiKXtmdW5jdGlvbiBjb21wb3NlKHgseSl7cmV0dXJuIHg9YSh4LHkpLGIoeFswXSx4WzFdKX1pZihhLmludmVydCYmYi5pbnZlcnQpY29tcG9zZS5pbnZlcnQ9ZnVuY3Rpb24oeCx5KXtyZXR1cm4geD1iLmludmVydCh4LHkpLHgmJmEuaW52ZXJ0KHhbMF0seFsxXSl9O3JldHVybiBjb21wb3NlfWZ1bmN0aW9uIHJvdGF0aW9uSWRlbnRpdHkobGFtYmRhLHBoaSl7cmV0dXJuW2FicyhsYW1iZGEpPnBpP2xhbWJkYStNYXRoLnJvdW5kKC1sYW1iZGEvdGF1KSp0YXU6bGFtYmRhLHBoaV19cm90YXRpb25JZGVudGl0eS5pbnZlcnQ9cm90YXRpb25JZGVudGl0eTtmdW5jdGlvbiByb3RhdGVSYWRpYW5zKGRlbHRhTGFtYmRhLGRlbHRhUGhpLGRlbHRhR2FtbWEpe3JldHVybihkZWx0YUxhbWJkYSU9dGF1KT9kZWx0YVBoaXx8ZGVsdGFHYW1tYT9jb21wb3NlKHJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSxyb3RhdGlvblBoaUdhbW1hKGRlbHRhUGhpLGRlbHRhR2FtbWEpKTpyb3RhdGlvbkxhbWJkYShkZWx0YUxhbWJkYSk6ZGVsdGFQaGl8fGRlbHRhR2FtbWE/cm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSxkZWx0YUdhbW1hKTpyb3RhdGlvbklkZW50aXR5fWZ1bmN0aW9uIGZvcndhcmRSb3RhdGlvbkxhbWJkYShkZWx0YUxhbWJkYSl7cmV0dXJuIGZ1bmN0aW9uKGxhbWJkYSxwaGkpe3JldHVybiBsYW1iZGErPWRlbHRhTGFtYmRhLFtsYW1iZGE+cGk/bGFtYmRhLXRhdTpsYW1iZGE8LXBpP2xhbWJkYSt0YXU6bGFtYmRhLHBoaV19fWZ1bmN0aW9uIHJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKXt2YXIgcm90YXRpb249Zm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKTtyb3RhdGlvbi5pbnZlcnQ9Zm9yd2FyZFJvdGF0aW9uTGFtYmRhKC1kZWx0YUxhbWJkYSk7cmV0dXJuIHJvdGF0aW9ufWZ1bmN0aW9uIHJvdGF0aW9uUGhpR2FtbWEoZGVsdGFQaGksZGVsdGFHYW1tYSl7dmFyIGNvc0RlbHRhUGhpPWNvcyhkZWx0YVBoaSksc2luRGVsdGFQaGk9c2luKGRlbHRhUGhpKSxjb3NEZWx0YUdhbW1hPWNvcyhkZWx0YUdhbW1hKSxzaW5EZWx0YUdhbW1hPXNpbihkZWx0YUdhbW1hKTtmdW5jdGlvbiByb3RhdGlvbihsYW1iZGEscGhpKXt2YXIgY29zUGhpPWNvcyhwaGkpLHg9Y29zKGxhbWJkYSkqY29zUGhpLHk9c2luKGxhbWJkYSkqY29zUGhpLHo9c2luKHBoaSksaz16KmNvc0RlbHRhUGhpK3gqc2luRGVsdGFQaGk7cmV0dXJuW2F0YW4yKHkqY29zRGVsdGFHYW1tYS1rKnNpbkRlbHRhR2FtbWEseCpjb3NEZWx0YVBoaS16KnNpbkRlbHRhUGhpKSxhc2luKGsqY29zRGVsdGFHYW1tYSt5KnNpbkRlbHRhR2FtbWEpXX1yb3RhdGlvbi5pbnZlcnQ9ZnVuY3Rpb24obGFtYmRhLHBoaSl7dmFyIGNvc1BoaT1jb3MocGhpKSx4PWNvcyhsYW1iZGEpKmNvc1BoaSx5PXNpbihsYW1iZGEpKmNvc1BoaSx6PXNpbihwaGkpLGs9eipjb3NEZWx0YUdhbW1hLXkqc2luRGVsdGFHYW1tYTtyZXR1cm5bYXRhbjIoeSpjb3NEZWx0YUdhbW1hK3oqc2luRGVsdGFHYW1tYSx4KmNvc0RlbHRhUGhpK2sqc2luRGVsdGFQaGkpLGFzaW4oaypjb3NEZWx0YVBoaS14KnNpbkRlbHRhUGhpKV19O3JldHVybiByb3RhdGlvbn1mdW5jdGlvbiByb3RhdGlvbihyb3RhdGUpe3JvdGF0ZT1yb3RhdGVSYWRpYW5zKHJvdGF0ZVswXSpyYWRpYW5zLHJvdGF0ZVsxXSpyYWRpYW5zLHJvdGF0ZS5sZW5ndGg+Mj9yb3RhdGVbMl0qcmFkaWFuczowKTtmdW5jdGlvbiBmb3J3YXJkKGNvb3JkaW5hdGVzKXtjb29yZGluYXRlcz1yb3RhdGUoY29vcmRpbmF0ZXNbMF0qcmFkaWFucyxjb29yZGluYXRlc1sxXSpyYWRpYW5zKTtyZXR1cm4gY29vcmRpbmF0ZXNbMF0qPWRlZ3JlZXMsY29vcmRpbmF0ZXNbMV0qPWRlZ3JlZXMsY29vcmRpbmF0ZXN9Zm9yd2FyZC5pbnZlcnQ9ZnVuY3Rpb24oY29vcmRpbmF0ZXMpe2Nvb3JkaW5hdGVzPXJvdGF0ZS5pbnZlcnQoY29vcmRpbmF0ZXNbMF0qcmFkaWFucyxjb29yZGluYXRlc1sxXSpyYWRpYW5zKTtyZXR1cm4gY29vcmRpbmF0ZXNbMF0qPWRlZ3JlZXMsY29vcmRpbmF0ZXNbMV0qPWRlZ3JlZXMsY29vcmRpbmF0ZXN9O3JldHVybiBmb3J3YXJkfQovLyBHZW5lcmF0ZXMgYSBjaXJjbGUgY2VudGVyZWQgYXQgWzDCsCwgMMKwXSwgd2l0aCBhIGdpdmVuIHJhZGl1cyBhbmQgcHJlY2lzaW9uLgpmdW5jdGlvbiBjaXJjbGVTdHJlYW0oc3RyZWFtLHJhZGl1cyxkZWx0YSxkaXJlY3Rpb24sdDAsdDEpe2lmKCFkZWx0YSlyZXR1cm47dmFyIGNvc1JhZGl1cz1jb3MocmFkaXVzKSxzaW5SYWRpdXM9c2luKHJhZGl1cyksc3RlcD1kaXJlY3Rpb24qZGVsdGE7aWYodDA9PW51bGwpe3QwPXJhZGl1cytkaXJlY3Rpb24qdGF1O3QxPXJhZGl1cy1zdGVwLzJ9ZWxzZXt0MD1jaXJjbGVSYWRpdXMoY29zUmFkaXVzLHQwKTt0MT1jaXJjbGVSYWRpdXMoY29zUmFkaXVzLHQxKTtpZihkaXJlY3Rpb24+MD90MDx0MTp0MD50MSl0MCs9ZGlyZWN0aW9uKnRhdX1mb3IodmFyIHBvaW50LHQ9dDA7ZGlyZWN0aW9uPjA/dD50MTp0PHQxO3QtPXN0ZXApe3BvaW50PXNwaGVyaWNhbChbY29zUmFkaXVzLC1zaW5SYWRpdXMqY29zKHQpLC1zaW5SYWRpdXMqc2luKHQpXSk7c3RyZWFtLnBvaW50KHBvaW50WzBdLHBvaW50WzFdKX19Ci8vIFJldHVybnMgdGhlIHNpZ25lZCBhbmdsZSBvZiBhIGNhcnRlc2lhbiBwb2ludCByZWxhdGl2ZSB0byBbY29zUmFkaXVzLCAwLCAwXS4KZnVuY3Rpb24gY2lyY2xlUmFkaXVzKGNvc1JhZGl1cyxwb2ludCl7cG9pbnQ9Y2FydGVzaWFuKHBvaW50KSxwb2ludFswXS09Y29zUmFkaXVzO2NhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UocG9pbnQpO3ZhciByYWRpdXM9YWNvcygtcG9pbnRbMV0pO3JldHVybigoLXBvaW50WzJdPDA/LXJhZGl1czpyYWRpdXMpK3RhdS1lcHNpbG9uKSV0YXV9ZnVuY3Rpb24gY2lyY2xlKCl7dmFyIGNlbnRlcj1jb25zdGFudChbMCwwXSkscmFkaXVzPWNvbnN0YW50KDkwKSxwcmVjaXNpb249Y29uc3RhbnQoNikscmluZyxyb3RhdGUsc3RyZWFtPXtwb2ludDpwb2ludH07ZnVuY3Rpb24gcG9pbnQoeCx5KXtyaW5nLnB1c2goeD1yb3RhdGUoeCx5KSk7eFswXSo9ZGVncmVlcyx4WzFdKj1kZWdyZWVzfWZ1bmN0aW9uIGNpcmNsZSgpe3ZhciBjPWNlbnRlci5hcHBseSh0aGlzLGFyZ3VtZW50cykscj1yYWRpdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpKnJhZGlhbnMscD1wcmVjaXNpb24uYXBwbHkodGhpcyxhcmd1bWVudHMpKnJhZGlhbnM7cmluZz1bXTtyb3RhdGU9cm90YXRlUmFkaWFucygtY1swXSpyYWRpYW5zLC1jWzFdKnJhZGlhbnMsMCkuaW52ZXJ0O2NpcmNsZVN0cmVhbShzdHJlYW0scixwLDEpO2M9e3R5cGU6IlBvbHlnb24iLGNvb3JkaW5hdGVzOltyaW5nXX07cmluZz1yb3RhdGU9bnVsbDtyZXR1cm4gY31jaXJjbGUuY2VudGVyPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjZW50ZXI9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoWytfWzBdLCtfWzFdXSksY2lyY2xlKTpjZW50ZXJ9O2NpcmNsZS5yYWRpdXM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHJhZGl1cz10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksY2lyY2xlKTpyYWRpdXN9O2NpcmNsZS5wcmVjaXNpb249ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHByZWNpc2lvbj10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksY2lyY2xlKTpwcmVjaXNpb259O3JldHVybiBjaXJjbGV9ZnVuY3Rpb24gY2xpcEJ1ZmZlcigpe3ZhciBsaW5lcz1bXSxsaW5lO3JldHVybntwb2ludDpmdW5jdGlvbih4LHkpe2xpbmUucHVzaChbeCx5XSl9LGxpbmVTdGFydDpmdW5jdGlvbigpe2xpbmVzLnB1c2gobGluZT1bXSl9LGxpbmVFbmQ6bm9vcCxyZWpvaW46ZnVuY3Rpb24oKXtpZihsaW5lcy5sZW5ndGg+MSlsaW5lcy5wdXNoKGxpbmVzLnBvcCgpLmNvbmNhdChsaW5lcy5zaGlmdCgpKSl9LHJlc3VsdDpmdW5jdGlvbigpe3ZhciByZXN1bHQ9bGluZXM7bGluZXM9W107bGluZT1udWxsO3JldHVybiByZXN1bHR9fX1mdW5jdGlvbiBwb2ludEVxdWFsKGEsYil7cmV0dXJuIGFicyhhWzBdLWJbMF0pPGVwc2lsb24mJmFicyhhWzFdLWJbMV0pPGVwc2lsb259ZnVuY3Rpb24gSW50ZXJzZWN0aW9uKHBvaW50LHBvaW50cyxvdGhlcixlbnRyeSl7dGhpcy54PXBvaW50O3RoaXMuej1wb2ludHM7dGhpcy5vPW90aGVyOy8vIGFub3RoZXIgaW50ZXJzZWN0aW9uCnRoaXMuZT1lbnRyeTsvLyBpcyBhbiBlbnRyeT8KdGhpcy52PWZhbHNlOy8vIHZpc2l0ZWQKdGhpcy5uPXRoaXMucD1udWxsOy8vIG5leHQgJiBwcmV2aW91cwp9Ci8vIEEgZ2VuZXJhbGl6ZWQgcG9seWdvbiBjbGlwcGluZyBhbGdvcml0aG06IGdpdmVuIGEgcG9seWdvbiB0aGF0IGhhcyBiZWVuIGN1dAovLyBpbnRvIGl0cyB2aXNpYmxlIGxpbmUgc2VnbWVudHMsIGFuZCByZWpvaW5zIHRoZSBzZWdtZW50cyBieSBpbnRlcnBvbGF0aW5nCi8vIGFsb25nIHRoZSBjbGlwIGVkZ2UuCmZ1bmN0aW9uIGNsaXBSZWpvaW4oc2VnbWVudHMsY29tcGFyZUludGVyc2VjdGlvbixzdGFydEluc2lkZSxpbnRlcnBvbGF0ZSxzdHJlYW0pe3ZhciBzdWJqZWN0PVtdLGNsaXA9W10saSxuO3NlZ21lbnRzLmZvckVhY2goZnVuY3Rpb24oc2VnbWVudCl7aWYoKG49c2VnbWVudC5sZW5ndGgtMSk8PTApcmV0dXJuO3ZhciBuLHAwPXNlZ21lbnRbMF0scDE9c2VnbWVudFtuXSx4OwovLyBJZiB0aGUgZmlyc3QgYW5kIGxhc3QgcG9pbnRzIG9mIGEgc2VnbWVudCBhcmUgY29pbmNpZGVudCwgdGhlbiB0cmVhdCBhcyBhCi8vIGNsb3NlZCByaW5nLiBUT0RPIGlmIGFsbCByaW5ncyBhcmUgY2xvc2VkLCB0aGVuIHRoZSB3aW5kaW5nIG9yZGVyIG9mIHRoZQovLyBleHRlcmlvciByaW5nIHNob3VsZCBiZSBjaGVja2VkLgppZihwb2ludEVxdWFsKHAwLHAxKSl7c3RyZWFtLmxpbmVTdGFydCgpO2ZvcihpPTA7aTxuOysraSlzdHJlYW0ucG9pbnQoKHAwPXNlZ21lbnRbaV0pWzBdLHAwWzFdKTtzdHJlYW0ubGluZUVuZCgpO3JldHVybn1zdWJqZWN0LnB1c2goeD1uZXcgSW50ZXJzZWN0aW9uKHAwLHNlZ21lbnQsbnVsbCx0cnVlKSk7Y2xpcC5wdXNoKHgubz1uZXcgSW50ZXJzZWN0aW9uKHAwLG51bGwseCxmYWxzZSkpO3N1YmplY3QucHVzaCh4PW5ldyBJbnRlcnNlY3Rpb24ocDEsc2VnbWVudCxudWxsLGZhbHNlKSk7Y2xpcC5wdXNoKHgubz1uZXcgSW50ZXJzZWN0aW9uKHAxLG51bGwseCx0cnVlKSl9KTtpZighc3ViamVjdC5sZW5ndGgpcmV0dXJuO2NsaXAuc29ydChjb21wYXJlSW50ZXJzZWN0aW9uKTtsaW5rKHN1YmplY3QpO2xpbmsoY2xpcCk7Zm9yKGk9MCxuPWNsaXAubGVuZ3RoO2k8bjsrK2kpe2NsaXBbaV0uZT1zdGFydEluc2lkZT0hc3RhcnRJbnNpZGV9dmFyIHN0YXJ0PXN1YmplY3RbMF0scG9pbnRzLHBvaW50O3doaWxlKDEpewovLyBGaW5kIGZpcnN0IHVudmlzaXRlZCBpbnRlcnNlY3Rpb24uCnZhciBjdXJyZW50PXN0YXJ0LGlzU3ViamVjdD10cnVlO3doaWxlKGN1cnJlbnQudilpZigoY3VycmVudD1jdXJyZW50Lm4pPT09c3RhcnQpcmV0dXJuO3BvaW50cz1jdXJyZW50Lno7c3RyZWFtLmxpbmVTdGFydCgpO2Rve2N1cnJlbnQudj1jdXJyZW50Lm8udj10cnVlO2lmKGN1cnJlbnQuZSl7aWYoaXNTdWJqZWN0KXtmb3IoaT0wLG49cG9pbnRzLmxlbmd0aDtpPG47KytpKXN0cmVhbS5wb2ludCgocG9pbnQ9cG9pbnRzW2ldKVswXSxwb2ludFsxXSl9ZWxzZXtpbnRlcnBvbGF0ZShjdXJyZW50LngsY3VycmVudC5uLngsMSxzdHJlYW0pfWN1cnJlbnQ9Y3VycmVudC5ufWVsc2V7aWYoaXNTdWJqZWN0KXtwb2ludHM9Y3VycmVudC5wLno7Zm9yKGk9cG9pbnRzLmxlbmd0aC0xO2k+PTA7LS1pKXN0cmVhbS5wb2ludCgocG9pbnQ9cG9pbnRzW2ldKVswXSxwb2ludFsxXSl9ZWxzZXtpbnRlcnBvbGF0ZShjdXJyZW50LngsY3VycmVudC5wLngsLTEsc3RyZWFtKX1jdXJyZW50PWN1cnJlbnQucH1jdXJyZW50PWN1cnJlbnQubztwb2ludHM9Y3VycmVudC56O2lzU3ViamVjdD0haXNTdWJqZWN0fXdoaWxlKCFjdXJyZW50LnYpO3N0cmVhbS5saW5lRW5kKCl9fWZ1bmN0aW9uIGxpbmsoYXJyYXkpe2lmKCEobj1hcnJheS5sZW5ndGgpKXJldHVybjt2YXIgbixpPTAsYT1hcnJheVswXSxiO3doaWxlKCsraTxuKXthLm49Yj1hcnJheVtpXTtiLnA9YTthPWJ9YS5uPWI9YXJyYXlbMF07Yi5wPWF9dmFyIHN1bT1hZGRlcigpO2Z1bmN0aW9uIGxvbmdpdHVkZShwb2ludCl7aWYoYWJzKHBvaW50WzBdKTw9cGkpcmV0dXJuIHBvaW50WzBdO2Vsc2UgcmV0dXJuIHNpZ24ocG9pbnRbMF0pKigoYWJzKHBvaW50WzBdKStwaSkldGF1LXBpKX1mdW5jdGlvbiBwb2x5Z29uQ29udGFpbnMocG9seWdvbixwb2ludCl7dmFyIGxhbWJkYT1sb25naXR1ZGUocG9pbnQpLHBoaT1wb2ludFsxXSxzaW5QaGk9c2luKHBoaSksbm9ybWFsPVtzaW4obGFtYmRhKSwtY29zKGxhbWJkYSksMF0sYW5nbGU9MCx3aW5kaW5nPTA7c3VtLnJlc2V0KCk7aWYoc2luUGhpPT09MSlwaGk9aGFsZlBpK2Vwc2lsb247ZWxzZSBpZihzaW5QaGk9PT0tMSlwaGk9LWhhbGZQaS1lcHNpbG9uO2Zvcih2YXIgaT0wLG49cG9seWdvbi5sZW5ndGg7aTxuOysraSl7aWYoIShtPShyaW5nPXBvbHlnb25baV0pLmxlbmd0aCkpY29udGludWU7dmFyIHJpbmcsbSxwb2ludDA9cmluZ1ttLTFdLGxhbWJkYTA9bG9uZ2l0dWRlKHBvaW50MCkscGhpMD1wb2ludDBbMV0vMitxdWFydGVyUGksc2luUGhpMD1zaW4ocGhpMCksY29zUGhpMD1jb3MocGhpMCk7Zm9yKHZhciBqPTA7ajxtOysraixsYW1iZGEwPWxhbWJkYTEsc2luUGhpMD1zaW5QaGkxLGNvc1BoaTA9Y29zUGhpMSxwb2ludDA9cG9pbnQxKXt2YXIgcG9pbnQxPXJpbmdbal0sbGFtYmRhMT1sb25naXR1ZGUocG9pbnQxKSxwaGkxPXBvaW50MVsxXS8yK3F1YXJ0ZXJQaSxzaW5QaGkxPXNpbihwaGkxKSxjb3NQaGkxPWNvcyhwaGkxKSxkZWx0YT1sYW1iZGExLWxhbWJkYTAsc2lnbj1kZWx0YT49MD8xOi0xLGFic0RlbHRhPXNpZ24qZGVsdGEsYW50aW1lcmlkaWFuPWFic0RlbHRhPnBpLGs9c2luUGhpMCpzaW5QaGkxO3N1bS5hZGQoYXRhbjIoaypzaWduKnNpbihhYnNEZWx0YSksY29zUGhpMCpjb3NQaGkxK2sqY29zKGFic0RlbHRhKSkpO2FuZ2xlKz1hbnRpbWVyaWRpYW4/ZGVsdGErc2lnbip0YXU6ZGVsdGE7Ci8vIEFyZSB0aGUgbG9uZ2l0dWRlcyBlaXRoZXIgc2lkZSBvZiB0aGUgcG9pbnTigJlzIG1lcmlkaWFuIChsYW1iZGEpLAovLyBhbmQgYXJlIHRoZSBsYXRpdHVkZXMgc21hbGxlciB0aGFuIHRoZSBwYXJhbGxlbCAocGhpKT8KaWYoYW50aW1lcmlkaWFuXmxhbWJkYTA+PWxhbWJkYV5sYW1iZGExPj1sYW1iZGEpe3ZhciBhcmM9Y2FydGVzaWFuQ3Jvc3MoY2FydGVzaWFuKHBvaW50MCksY2FydGVzaWFuKHBvaW50MSkpO2NhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoYXJjKTt2YXIgaW50ZXJzZWN0aW9uPWNhcnRlc2lhbkNyb3NzKG5vcm1hbCxhcmMpO2NhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoaW50ZXJzZWN0aW9uKTt2YXIgcGhpQXJjPShhbnRpbWVyaWRpYW5eZGVsdGE+PTA/LTE6MSkqYXNpbihpbnRlcnNlY3Rpb25bMl0pO2lmKHBoaT5waGlBcmN8fHBoaT09PXBoaUFyYyYmKGFyY1swXXx8YXJjWzFdKSl7d2luZGluZys9YW50aW1lcmlkaWFuXmRlbHRhPj0wPzE6LTF9fX19Ci8vIEZpcnN0LCBkZXRlcm1pbmUgd2hldGhlciB0aGUgU291dGggcG9sZSBpcyBpbnNpZGUgb3Igb3V0c2lkZToKLy8KLy8gSXQgaXMgaW5zaWRlIGlmOgovLyAqIHRoZSBwb2x5Z29uIHdpbmRzIGFyb3VuZCBpdCBpbiBhIGNsb2Nrd2lzZSBkaXJlY3Rpb24uCi8vICogdGhlIHBvbHlnb24gZG9lcyBub3QgKGN1bXVsYXRpdmVseSkgd2luZCBhcm91bmQgaXQsIGJ1dCBoYXMgYSBuZWdhdGl2ZQovLyAgIChjb3VudGVyLWNsb2Nrd2lzZSkgYXJlYS4KLy8KLy8gU2Vjb25kLCBjb3VudCB0aGUgKHNpZ25lZCkgbnVtYmVyIG9mIHRpbWVzIGEgc2VnbWVudCBjcm9zc2VzIGEgbGFtYmRhCi8vIGZyb20gdGhlIHBvaW50IHRvIHRoZSBTb3V0aCBwb2xlLiAgSWYgaXQgaXMgemVybywgdGhlbiB0aGUgcG9pbnQgaXMgdGhlCi8vIHNhbWUgc2lkZSBhcyB0aGUgU291dGggcG9sZS4KcmV0dXJuKGFuZ2xlPC1lcHNpbG9ufHxhbmdsZTxlcHNpbG9uJiZzdW08LWVwc2lsb24pXndpbmRpbmcmMX1mdW5jdGlvbiBjbGlwKHBvaW50VmlzaWJsZSxjbGlwTGluZSxpbnRlcnBvbGF0ZSxzdGFydCl7cmV0dXJuIGZ1bmN0aW9uKHNpbmspe3ZhciBsaW5lPWNsaXBMaW5lKHNpbmspLHJpbmdCdWZmZXI9Y2xpcEJ1ZmZlcigpLHJpbmdTaW5rPWNsaXBMaW5lKHJpbmdCdWZmZXIpLHBvbHlnb25TdGFydGVkPWZhbHNlLHBvbHlnb24sc2VnbWVudHMscmluZzt2YXIgY2xpcD17cG9pbnQ6cG9pbnQsbGluZVN0YXJ0OmxpbmVTdGFydCxsaW5lRW5kOmxpbmVFbmQscG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7Y2xpcC5wb2ludD1wb2ludFJpbmc7Y2xpcC5saW5lU3RhcnQ9cmluZ1N0YXJ0O2NsaXAubGluZUVuZD1yaW5nRW5kO3NlZ21lbnRzPVtdO3BvbHlnb249W119LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtjbGlwLnBvaW50PXBvaW50O2NsaXAubGluZVN0YXJ0PWxpbmVTdGFydDtjbGlwLmxpbmVFbmQ9bGluZUVuZDtzZWdtZW50cz1kM0FycmF5Lm1lcmdlKHNlZ21lbnRzKTt2YXIgc3RhcnRJbnNpZGU9cG9seWdvbkNvbnRhaW5zKHBvbHlnb24sc3RhcnQpO2lmKHNlZ21lbnRzLmxlbmd0aCl7aWYoIXBvbHlnb25TdGFydGVkKXNpbmsucG9seWdvblN0YXJ0KCkscG9seWdvblN0YXJ0ZWQ9dHJ1ZTtjbGlwUmVqb2luKHNlZ21lbnRzLGNvbXBhcmVJbnRlcnNlY3Rpb24sc3RhcnRJbnNpZGUsaW50ZXJwb2xhdGUsc2luayl9ZWxzZSBpZihzdGFydEluc2lkZSl7aWYoIXBvbHlnb25TdGFydGVkKXNpbmsucG9seWdvblN0YXJ0KCkscG9seWdvblN0YXJ0ZWQ9dHJ1ZTtzaW5rLmxpbmVTdGFydCgpO2ludGVycG9sYXRlKG51bGwsbnVsbCwxLHNpbmspO3NpbmsubGluZUVuZCgpfWlmKHBvbHlnb25TdGFydGVkKXNpbmsucG9seWdvbkVuZCgpLHBvbHlnb25TdGFydGVkPWZhbHNlO3NlZ21lbnRzPXBvbHlnb249bnVsbH0sc3BoZXJlOmZ1bmN0aW9uKCl7c2luay5wb2x5Z29uU3RhcnQoKTtzaW5rLmxpbmVTdGFydCgpO2ludGVycG9sYXRlKG51bGwsbnVsbCwxLHNpbmspO3NpbmsubGluZUVuZCgpO3NpbmsucG9seWdvbkVuZCgpfX07ZnVuY3Rpb24gcG9pbnQobGFtYmRhLHBoaSl7aWYocG9pbnRWaXNpYmxlKGxhbWJkYSxwaGkpKXNpbmsucG9pbnQobGFtYmRhLHBoaSl9ZnVuY3Rpb24gcG9pbnRMaW5lKGxhbWJkYSxwaGkpe2xpbmUucG9pbnQobGFtYmRhLHBoaSl9ZnVuY3Rpb24gbGluZVN0YXJ0KCl7Y2xpcC5wb2ludD1wb2ludExpbmU7bGluZS5saW5lU3RhcnQoKX1mdW5jdGlvbiBsaW5lRW5kKCl7Y2xpcC5wb2ludD1wb2ludDtsaW5lLmxpbmVFbmQoKX1mdW5jdGlvbiBwb2ludFJpbmcobGFtYmRhLHBoaSl7cmluZy5wdXNoKFtsYW1iZGEscGhpXSk7cmluZ1NpbmsucG9pbnQobGFtYmRhLHBoaSl9ZnVuY3Rpb24gcmluZ1N0YXJ0KCl7cmluZ1NpbmsubGluZVN0YXJ0KCk7cmluZz1bXX1mdW5jdGlvbiByaW5nRW5kKCl7cG9pbnRSaW5nKHJpbmdbMF1bMF0scmluZ1swXVsxXSk7cmluZ1NpbmsubGluZUVuZCgpO3ZhciBjbGVhbj1yaW5nU2luay5jbGVhbigpLHJpbmdTZWdtZW50cz1yaW5nQnVmZmVyLnJlc3VsdCgpLGksbj1yaW5nU2VnbWVudHMubGVuZ3RoLG0sc2VnbWVudCxwb2ludDtyaW5nLnBvcCgpO3BvbHlnb24ucHVzaChyaW5nKTtyaW5nPW51bGw7aWYoIW4pcmV0dXJuOwovLyBObyBpbnRlcnNlY3Rpb25zLgppZihjbGVhbiYxKXtzZWdtZW50PXJpbmdTZWdtZW50c1swXTtpZigobT1zZWdtZW50Lmxlbmd0aC0xKT4wKXtpZighcG9seWdvblN0YXJ0ZWQpc2luay5wb2x5Z29uU3RhcnQoKSxwb2x5Z29uU3RhcnRlZD10cnVlO3NpbmsubGluZVN0YXJ0KCk7Zm9yKGk9MDtpPG07KytpKXNpbmsucG9pbnQoKHBvaW50PXNlZ21lbnRbaV0pWzBdLHBvaW50WzFdKTtzaW5rLmxpbmVFbmQoKX1yZXR1cm59Ci8vIFJlam9pbiBjb25uZWN0ZWQgc2VnbWVudHMuCi8vIFRPRE8gcmV1c2UgcmluZ0J1ZmZlci5yZWpvaW4oKT8KaWYobj4xJiZjbGVhbiYyKXJpbmdTZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5wb3AoKS5jb25jYXQocmluZ1NlZ21lbnRzLnNoaWZ0KCkpKTtzZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5maWx0ZXIodmFsaWRTZWdtZW50KSl9cmV0dXJuIGNsaXB9fWZ1bmN0aW9uIHZhbGlkU2VnbWVudChzZWdtZW50KXtyZXR1cm4gc2VnbWVudC5sZW5ndGg+MX0KLy8gSW50ZXJzZWN0aW9ucyBhcmUgc29ydGVkIGFsb25nIHRoZSBjbGlwIGVkZ2UuIEZvciBib3RoIGFudGltZXJpZGlhbiBjdXR0aW5nCi8vIGFuZCBjaXJjbGUgY2xpcHBpbmcsIHRoZSBzYW1lIGNvbXBhcmlzb24gaXMgdXNlZC4KZnVuY3Rpb24gY29tcGFyZUludGVyc2VjdGlvbihhLGIpe3JldHVybigoYT1hLngpWzBdPDA/YVsxXS1oYWxmUGktZXBzaWxvbjpoYWxmUGktYVsxXSktKChiPWIueClbMF08MD9iWzFdLWhhbGZQaS1lcHNpbG9uOmhhbGZQaS1iWzFdKX12YXIgY2xpcEFudGltZXJpZGlhbj1jbGlwKGZ1bmN0aW9uKCl7cmV0dXJuIHRydWV9LGNsaXBBbnRpbWVyaWRpYW5MaW5lLGNsaXBBbnRpbWVyaWRpYW5JbnRlcnBvbGF0ZSxbLXBpLC1oYWxmUGldKTsKLy8gVGFrZXMgYSBsaW5lIGFuZCBjdXRzIGludG8gdmlzaWJsZSBzZWdtZW50cy4gUmV0dXJuIHZhbHVlczogMCAtIHRoZXJlIHdlcmUKLy8gaW50ZXJzZWN0aW9ucyBvciB0aGUgbGluZSB3YXMgZW1wdHk7IDEgLSBubyBpbnRlcnNlY3Rpb25zOyAyIC0gdGhlcmUgd2VyZQovLyBpbnRlcnNlY3Rpb25zLCBhbmQgdGhlIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzIHNob3VsZCBiZSByZWpvaW5lZC4KZnVuY3Rpb24gY2xpcEFudGltZXJpZGlhbkxpbmUoc3RyZWFtKXt2YXIgbGFtYmRhMD1OYU4scGhpMD1OYU4sc2lnbjA9TmFOLGNsZWFuOy8vIG5vIGludGVyc2VjdGlvbnMKcmV0dXJue2xpbmVTdGFydDpmdW5jdGlvbigpe3N0cmVhbS5saW5lU3RhcnQoKTtjbGVhbj0xfSxwb2ludDpmdW5jdGlvbihsYW1iZGExLHBoaTEpe3ZhciBzaWduMT1sYW1iZGExPjA/cGk6LXBpLGRlbHRhPWFicyhsYW1iZGExLWxhbWJkYTApO2lmKGFicyhkZWx0YS1waSk8ZXBzaWxvbil7Ly8gbGluZSBjcm9zc2VzIGEgcG9sZQpzdHJlYW0ucG9pbnQobGFtYmRhMCxwaGkwPShwaGkwK3BoaTEpLzI+MD9oYWxmUGk6LWhhbGZQaSk7c3RyZWFtLnBvaW50KHNpZ24wLHBoaTApO3N0cmVhbS5saW5lRW5kKCk7c3RyZWFtLmxpbmVTdGFydCgpO3N0cmVhbS5wb2ludChzaWduMSxwaGkwKTtzdHJlYW0ucG9pbnQobGFtYmRhMSxwaGkwKTtjbGVhbj0wfWVsc2UgaWYoc2lnbjAhPT1zaWduMSYmZGVsdGE+PXBpKXsvLyBsaW5lIGNyb3NzZXMgYW50aW1lcmlkaWFuCmlmKGFicyhsYW1iZGEwLXNpZ24wKTxlcHNpbG9uKWxhbWJkYTAtPXNpZ24wKmVwc2lsb247Ly8gaGFuZGxlIGRlZ2VuZXJhY2llcwppZihhYnMobGFtYmRhMS1zaWduMSk8ZXBzaWxvbilsYW1iZGExLT1zaWduMSplcHNpbG9uO3BoaTA9Y2xpcEFudGltZXJpZGlhbkludGVyc2VjdChsYW1iZGEwLHBoaTAsbGFtYmRhMSxwaGkxKTtzdHJlYW0ucG9pbnQoc2lnbjAscGhpMCk7c3RyZWFtLmxpbmVFbmQoKTtzdHJlYW0ubGluZVN0YXJ0KCk7c3RyZWFtLnBvaW50KHNpZ24xLHBoaTApO2NsZWFuPTB9c3RyZWFtLnBvaW50KGxhbWJkYTA9bGFtYmRhMSxwaGkwPXBoaTEpO3NpZ24wPXNpZ24xfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3RyZWFtLmxpbmVFbmQoKTtsYW1iZGEwPXBoaTA9TmFOfSxjbGVhbjpmdW5jdGlvbigpe3JldHVybiAyLWNsZWFuOy8vIGlmIGludGVyc2VjdGlvbnMsIHJlam9pbiBmaXJzdCBhbmQgbGFzdCBzZWdtZW50cwp9fX1mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KGxhbWJkYTAscGhpMCxsYW1iZGExLHBoaTEpe3ZhciBjb3NQaGkwLGNvc1BoaTEsc2luTGFtYmRhMExhbWJkYTE9c2luKGxhbWJkYTAtbGFtYmRhMSk7cmV0dXJuIGFicyhzaW5MYW1iZGEwTGFtYmRhMSk+ZXBzaWxvbj9hdGFuKChzaW4ocGhpMCkqKGNvc1BoaTE9Y29zKHBoaTEpKSpzaW4obGFtYmRhMSktc2luKHBoaTEpKihjb3NQaGkwPWNvcyhwaGkwKSkqc2luKGxhbWJkYTApKS8oY29zUGhpMCpjb3NQaGkxKnNpbkxhbWJkYTBMYW1iZGExKSk6KHBoaTArcGhpMSkvMn1mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUoZnJvbSx0byxkaXJlY3Rpb24sc3RyZWFtKXt2YXIgcGhpO2lmKGZyb209PW51bGwpe3BoaT1kaXJlY3Rpb24qaGFsZlBpO3N0cmVhbS5wb2ludCgtcGkscGhpKTtzdHJlYW0ucG9pbnQoMCxwaGkpO3N0cmVhbS5wb2ludChwaSxwaGkpO3N0cmVhbS5wb2ludChwaSwwKTtzdHJlYW0ucG9pbnQocGksLXBoaSk7c3RyZWFtLnBvaW50KDAsLXBoaSk7c3RyZWFtLnBvaW50KC1waSwtcGhpKTtzdHJlYW0ucG9pbnQoLXBpLDApO3N0cmVhbS5wb2ludCgtcGkscGhpKX1lbHNlIGlmKGFicyhmcm9tWzBdLXRvWzBdKT5lcHNpbG9uKXt2YXIgbGFtYmRhPWZyb21bMF08dG9bMF0/cGk6LXBpO3BoaT1kaXJlY3Rpb24qbGFtYmRhLzI7c3RyZWFtLnBvaW50KC1sYW1iZGEscGhpKTtzdHJlYW0ucG9pbnQoMCxwaGkpO3N0cmVhbS5wb2ludChsYW1iZGEscGhpKX1lbHNle3N0cmVhbS5wb2ludCh0b1swXSx0b1sxXSl9fWZ1bmN0aW9uIGNsaXBDaXJjbGUocmFkaXVzKXt2YXIgY3I9Y29zKHJhZGl1cyksZGVsdGE9NipyYWRpYW5zLHNtYWxsUmFkaXVzPWNyPjAsbm90SGVtaXNwaGVyZT1hYnMoY3IpPmVwc2lsb247Ly8gVE9ETyBvcHRpbWlzZSBmb3IgdGhpcyBjb21tb24gY2FzZQpmdW5jdGlvbiBpbnRlcnBvbGF0ZShmcm9tLHRvLGRpcmVjdGlvbixzdHJlYW0pe2NpcmNsZVN0cmVhbShzdHJlYW0scmFkaXVzLGRlbHRhLGRpcmVjdGlvbixmcm9tLHRvKX1mdW5jdGlvbiB2aXNpYmxlKGxhbWJkYSxwaGkpe3JldHVybiBjb3MobGFtYmRhKSpjb3MocGhpKT5jcn0KLy8gVGFrZXMgYSBsaW5lIGFuZCBjdXRzIGludG8gdmlzaWJsZSBzZWdtZW50cy4gUmV0dXJuIHZhbHVlcyB1c2VkIGZvciBwb2x5Z29uCi8vIGNsaXBwaW5nOiAwIC0gdGhlcmUgd2VyZSBpbnRlcnNlY3Rpb25zIG9yIHRoZSBsaW5lIHdhcyBlbXB0eTsgMSAtIG5vCi8vIGludGVyc2VjdGlvbnMgMiAtIHRoZXJlIHdlcmUgaW50ZXJzZWN0aW9ucywgYW5kIHRoZSBmaXJzdCBhbmQgbGFzdCBzZWdtZW50cwovLyBzaG91bGQgYmUgcmVqb2luZWQuCmZ1bmN0aW9uIGNsaXBMaW5lKHN0cmVhbSl7dmFyIHBvaW50MCwvLyBwcmV2aW91cyBwb2ludApjMCwvLyBjb2RlIGZvciBwcmV2aW91cyBwb2ludAp2MCwvLyB2aXNpYmlsaXR5IG9mIHByZXZpb3VzIHBvaW50CnYwMCwvLyB2aXNpYmlsaXR5IG9mIGZpcnN0IHBvaW50CmNsZWFuOy8vIG5vIGludGVyc2VjdGlvbnMKcmV0dXJue2xpbmVTdGFydDpmdW5jdGlvbigpe3YwMD12MD1mYWxzZTtjbGVhbj0xfSxwb2ludDpmdW5jdGlvbihsYW1iZGEscGhpKXt2YXIgcG9pbnQxPVtsYW1iZGEscGhpXSxwb2ludDIsdj12aXNpYmxlKGxhbWJkYSxwaGkpLGM9c21hbGxSYWRpdXM/dj8wOmNvZGUobGFtYmRhLHBoaSk6dj9jb2RlKGxhbWJkYSsobGFtYmRhPDA/cGk6LXBpKSxwaGkpOjA7aWYoIXBvaW50MCYmKHYwMD12MD12KSlzdHJlYW0ubGluZVN0YXJ0KCk7Ci8vIEhhbmRsZSBkZWdlbmVyYWNpZXMuCi8vIFRPRE8gaWdub3JlIGlmIG5vdCBjbGlwcGluZyBwb2x5Z29ucy4KaWYodiE9PXYwKXtwb2ludDI9aW50ZXJzZWN0KHBvaW50MCxwb2ludDEpO2lmKCFwb2ludDJ8fHBvaW50RXF1YWwocG9pbnQwLHBvaW50Mil8fHBvaW50RXF1YWwocG9pbnQxLHBvaW50Mikpe3BvaW50MVswXSs9ZXBzaWxvbjtwb2ludDFbMV0rPWVwc2lsb247dj12aXNpYmxlKHBvaW50MVswXSxwb2ludDFbMV0pfX1pZih2IT09djApe2NsZWFuPTA7aWYodil7Ci8vIG91dHNpZGUgZ29pbmcgaW4Kc3RyZWFtLmxpbmVTdGFydCgpO3BvaW50Mj1pbnRlcnNlY3QocG9pbnQxLHBvaW50MCk7c3RyZWFtLnBvaW50KHBvaW50MlswXSxwb2ludDJbMV0pfWVsc2V7Ci8vIGluc2lkZSBnb2luZyBvdXQKcG9pbnQyPWludGVyc2VjdChwb2ludDAscG9pbnQxKTtzdHJlYW0ucG9pbnQocG9pbnQyWzBdLHBvaW50MlsxXSk7c3RyZWFtLmxpbmVFbmQoKX1wb2ludDA9cG9pbnQyfWVsc2UgaWYobm90SGVtaXNwaGVyZSYmcG9pbnQwJiZzbWFsbFJhZGl1c152KXt2YXIgdDsKLy8gSWYgdGhlIGNvZGVzIGZvciB0d28gcG9pbnRzIGFyZSBkaWZmZXJlbnQsIG9yIGFyZSBib3RoIHplcm8sCi8vIGFuZCB0aGVyZSB0aGlzIHNlZ21lbnQgaW50ZXJzZWN0cyB3aXRoIHRoZSBzbWFsbCBjaXJjbGUuCmlmKCEoYyZjMCkmJih0PWludGVyc2VjdChwb2ludDEscG9pbnQwLHRydWUpKSl7Y2xlYW49MDtpZihzbWFsbFJhZGl1cyl7c3RyZWFtLmxpbmVTdGFydCgpO3N0cmVhbS5wb2ludCh0WzBdWzBdLHRbMF1bMV0pO3N0cmVhbS5wb2ludCh0WzFdWzBdLHRbMV1bMV0pO3N0cmVhbS5saW5lRW5kKCl9ZWxzZXtzdHJlYW0ucG9pbnQodFsxXVswXSx0WzFdWzFdKTtzdHJlYW0ubGluZUVuZCgpO3N0cmVhbS5saW5lU3RhcnQoKTtzdHJlYW0ucG9pbnQodFswXVswXSx0WzBdWzFdKX19fWlmKHYmJighcG9pbnQwfHwhcG9pbnRFcXVhbChwb2ludDAscG9pbnQxKSkpe3N0cmVhbS5wb2ludChwb2ludDFbMF0scG9pbnQxWzFdKX1wb2ludDA9cG9pbnQxLHYwPXYsYzA9Y30sbGluZUVuZDpmdW5jdGlvbigpe2lmKHYwKXN0cmVhbS5saW5lRW5kKCk7cG9pbnQwPW51bGx9LAovLyBSZWpvaW4gZmlyc3QgYW5kIGxhc3Qgc2VnbWVudHMgaWYgdGhlcmUgd2VyZSBpbnRlcnNlY3Rpb25zIGFuZCB0aGUgZmlyc3QKLy8gYW5kIGxhc3QgcG9pbnRzIHdlcmUgdmlzaWJsZS4KY2xlYW46ZnVuY3Rpb24oKXtyZXR1cm4gY2xlYW58KHYwMCYmdjApPDwxfX19Ci8vIEludGVyc2VjdHMgdGhlIGdyZWF0IGNpcmNsZSBiZXR3ZWVuIGEgYW5kIGIgd2l0aCB0aGUgY2xpcCBjaXJjbGUuCmZ1bmN0aW9uIGludGVyc2VjdChhLGIsdHdvKXt2YXIgcGE9Y2FydGVzaWFuKGEpLHBiPWNhcnRlc2lhbihiKTsKLy8gV2UgaGF2ZSB0d28gcGxhbmVzLCBuMS5wID0gZDEgYW5kIG4yLnAgPSBkMi4KLy8gRmluZCBpbnRlcnNlY3Rpb24gbGluZSBwKHQpID0gYzEgbjEgKyBjMiBuMiArIHQgKG4xIOKoryBuMikuCnZhciBuMT1bMSwwLDBdLC8vIG5vcm1hbApuMj1jYXJ0ZXNpYW5Dcm9zcyhwYSxwYiksbjJuMj1jYXJ0ZXNpYW5Eb3QobjIsbjIpLG4xbjI9bjJbMF0sLy8gY2FydGVzaWFuRG90KG4xLCBuMiksCmRldGVybWluYW50PW4ybjItbjFuMipuMW4yOwovLyBUd28gcG9sYXIgcG9pbnRzLgppZighZGV0ZXJtaW5hbnQpcmV0dXJuIXR3byYmYTt2YXIgYzE9Y3IqbjJuMi9kZXRlcm1pbmFudCxjMj0tY3IqbjFuMi9kZXRlcm1pbmFudCxuMXhuMj1jYXJ0ZXNpYW5Dcm9zcyhuMSxuMiksQT1jYXJ0ZXNpYW5TY2FsZShuMSxjMSksQj1jYXJ0ZXNpYW5TY2FsZShuMixjMik7Y2FydGVzaWFuQWRkSW5QbGFjZShBLEIpOwovLyBTb2x2ZSB8cCh0KXxeMiA9IDEuCnZhciB1PW4xeG4yLHc9Y2FydGVzaWFuRG90KEEsdSksdXU9Y2FydGVzaWFuRG90KHUsdSksdDI9dyp3LXV1KihjYXJ0ZXNpYW5Eb3QoQSxBKS0xKTtpZih0MjwwKXJldHVybjt2YXIgdD1zcXJ0KHQyKSxxPWNhcnRlc2lhblNjYWxlKHUsKC13LXQpL3V1KTtjYXJ0ZXNpYW5BZGRJblBsYWNlKHEsQSk7cT1zcGhlcmljYWwocSk7aWYoIXR3bylyZXR1cm4gcTsKLy8gVHdvIGludGVyc2VjdGlvbiBwb2ludHMuCnZhciBsYW1iZGEwPWFbMF0sbGFtYmRhMT1iWzBdLHBoaTA9YVsxXSxwaGkxPWJbMV0sejtpZihsYW1iZGExPGxhbWJkYTApej1sYW1iZGEwLGxhbWJkYTA9bGFtYmRhMSxsYW1iZGExPXo7dmFyIGRlbHRhPWxhbWJkYTEtbGFtYmRhMCxwb2xhcj1hYnMoZGVsdGEtcGkpPGVwc2lsb24sbWVyaWRpYW49cG9sYXJ8fGRlbHRhPGVwc2lsb247aWYoIXBvbGFyJiZwaGkxPHBoaTApej1waGkwLHBoaTA9cGhpMSxwaGkxPXo7Ci8vIENoZWNrIHRoYXQgdGhlIGZpcnN0IHBvaW50IGlzIGJldHdlZW4gYSBhbmQgYi4KaWYobWVyaWRpYW4/cG9sYXI/cGhpMCtwaGkxPjBecVsxXTwoYWJzKHFbMF0tbGFtYmRhMCk8ZXBzaWxvbj9waGkwOnBoaTEpOnBoaTA8PXFbMV0mJnFbMV08PXBoaTE6ZGVsdGE+cGleKGxhbWJkYTA8PXFbMF0mJnFbMF08PWxhbWJkYTEpKXt2YXIgcTE9Y2FydGVzaWFuU2NhbGUodSwoLXcrdCkvdXUpO2NhcnRlc2lhbkFkZEluUGxhY2UocTEsQSk7cmV0dXJuW3Esc3BoZXJpY2FsKHExKV19fQovLyBHZW5lcmF0ZXMgYSA0LWJpdCB2ZWN0b3IgcmVwcmVzZW50aW5nIHRoZSBsb2NhdGlvbiBvZiBhIHBvaW50IHJlbGF0aXZlIHRvCi8vIHRoZSBzbWFsbCBjaXJjbGUncyBib3VuZGluZyBib3guCmZ1bmN0aW9uIGNvZGUobGFtYmRhLHBoaSl7dmFyIHI9c21hbGxSYWRpdXM/cmFkaXVzOnBpLXJhZGl1cyxjb2RlPTA7aWYobGFtYmRhPC1yKWNvZGV8PTE7Ly8gbGVmdAplbHNlIGlmKGxhbWJkYT5yKWNvZGV8PTI7Ly8gcmlnaHQKaWYocGhpPC1yKWNvZGV8PTQ7Ly8gYmVsb3cKZWxzZSBpZihwaGk+ciljb2RlfD04Oy8vIGFib3ZlCnJldHVybiBjb2RlfXJldHVybiBjbGlwKHZpc2libGUsY2xpcExpbmUsaW50ZXJwb2xhdGUsc21hbGxSYWRpdXM/WzAsLXJhZGl1c106Wy1waSxyYWRpdXMtcGldKX1mdW5jdGlvbiBjbGlwTGluZShhLGIseDAseTAseDEseTEpe3ZhciBheD1hWzBdLGF5PWFbMV0sYng9YlswXSxieT1iWzFdLHQwPTAsdDE9MSxkeD1ieC1heCxkeT1ieS1heSxyO3I9eDAtYXg7aWYoIWR4JiZyPjApcmV0dXJuO3IvPWR4O2lmKGR4PDApe2lmKHI8dDApcmV0dXJuO2lmKHI8dDEpdDE9cn1lbHNlIGlmKGR4PjApe2lmKHI+dDEpcmV0dXJuO2lmKHI+dDApdDA9cn1yPXgxLWF4O2lmKCFkeCYmcjwwKXJldHVybjtyLz1keDtpZihkeDwwKXtpZihyPnQxKXJldHVybjtpZihyPnQwKXQwPXJ9ZWxzZSBpZihkeD4wKXtpZihyPHQwKXJldHVybjtpZihyPHQxKXQxPXJ9cj15MC1heTtpZighZHkmJnI+MClyZXR1cm47ci89ZHk7aWYoZHk8MCl7aWYocjx0MClyZXR1cm47aWYocjx0MSl0MT1yfWVsc2UgaWYoZHk+MCl7aWYocj50MSlyZXR1cm47aWYocj50MCl0MD1yfXI9eTEtYXk7aWYoIWR5JiZyPDApcmV0dXJuO3IvPWR5O2lmKGR5PDApe2lmKHI+dDEpcmV0dXJuO2lmKHI+dDApdDA9cn1lbHNlIGlmKGR5PjApe2lmKHI8dDApcmV0dXJuO2lmKHI8dDEpdDE9cn1pZih0MD4wKWFbMF09YXgrdDAqZHgsYVsxXT1heSt0MCpkeTtpZih0MTwxKWJbMF09YXgrdDEqZHgsYlsxXT1heSt0MSpkeTtyZXR1cm4gdHJ1ZX12YXIgY2xpcE1heD0xZTksY2xpcE1pbj0tY2xpcE1heDsKLy8gVE9ETyBVc2UgZDMtcG9seWdvbuKAmXMgcG9seWdvbkNvbnRhaW5zIGhlcmUgZm9yIHRoZSByaW5nIGNoZWNrPwovLyBUT0RPIEVsaW1pbmF0ZSBkdXBsaWNhdGUgYnVmZmVyaW5nIGluIGNsaXBCdWZmZXIgYW5kIHBvbHlnb24ucHVzaD8KZnVuY3Rpb24gY2xpcFJlY3RhbmdsZSh4MCx5MCx4MSx5MSl7ZnVuY3Rpb24gdmlzaWJsZSh4LHkpe3JldHVybiB4MDw9eCYmeDw9eDEmJnkwPD15JiZ5PD15MX1mdW5jdGlvbiBpbnRlcnBvbGF0ZShmcm9tLHRvLGRpcmVjdGlvbixzdHJlYW0pe3ZhciBhPTAsYTE9MDtpZihmcm9tPT1udWxsfHwoYT1jb3JuZXIoZnJvbSxkaXJlY3Rpb24pKSE9PShhMT1jb3JuZXIodG8sZGlyZWN0aW9uKSl8fGNvbXBhcmVQb2ludChmcm9tLHRvKTwwXmRpcmVjdGlvbj4wKXtkb3tzdHJlYW0ucG9pbnQoYT09PTB8fGE9PT0zP3gwOngxLGE+MT95MTp5MCl9d2hpbGUoKGE9KGErZGlyZWN0aW9uKzQpJTQpIT09YTEpfWVsc2V7c3RyZWFtLnBvaW50KHRvWzBdLHRvWzFdKX19ZnVuY3Rpb24gY29ybmVyKHAsZGlyZWN0aW9uKXtyZXR1cm4gYWJzKHBbMF0teDApPGVwc2lsb24/ZGlyZWN0aW9uPjA/MDozOmFicyhwWzBdLXgxKTxlcHNpbG9uP2RpcmVjdGlvbj4wPzI6MTphYnMocFsxXS15MCk8ZXBzaWxvbj9kaXJlY3Rpb24+MD8xOjA6ZGlyZWN0aW9uPjA/MzoyOy8vIGFicyhwWzFdIC0geTEpIDwgZXBzaWxvbgp9ZnVuY3Rpb24gY29tcGFyZUludGVyc2VjdGlvbihhLGIpe3JldHVybiBjb21wYXJlUG9pbnQoYS54LGIueCl9ZnVuY3Rpb24gY29tcGFyZVBvaW50KGEsYil7dmFyIGNhPWNvcm5lcihhLDEpLGNiPWNvcm5lcihiLDEpO3JldHVybiBjYSE9PWNiP2NhLWNiOmNhPT09MD9iWzFdLWFbMV06Y2E9PT0xP2FbMF0tYlswXTpjYT09PTI/YVsxXS1iWzFdOmJbMF0tYVswXX1yZXR1cm4gZnVuY3Rpb24oc3RyZWFtKXt2YXIgYWN0aXZlU3RyZWFtPXN0cmVhbSxidWZmZXJTdHJlYW09Y2xpcEJ1ZmZlcigpLHNlZ21lbnRzLHBvbHlnb24scmluZyx4X18seV9fLHZfXywvLyBmaXJzdCBwb2ludAp4Xyx5Xyx2XywvLyBwcmV2aW91cyBwb2ludApmaXJzdCxjbGVhbjt2YXIgY2xpcFN0cmVhbT17cG9pbnQ6cG9pbnQsbGluZVN0YXJ0OmxpbmVTdGFydCxsaW5lRW5kOmxpbmVFbmQscG9seWdvblN0YXJ0OnBvbHlnb25TdGFydCxwb2x5Z29uRW5kOnBvbHlnb25FbmR9O2Z1bmN0aW9uIHBvaW50KHgseSl7aWYodmlzaWJsZSh4LHkpKWFjdGl2ZVN0cmVhbS5wb2ludCh4LHkpfWZ1bmN0aW9uIHBvbHlnb25JbnNpZGUoKXt2YXIgd2luZGluZz0wO2Zvcih2YXIgaT0wLG49cG9seWdvbi5sZW5ndGg7aTxuOysraSl7Zm9yKHZhciByaW5nPXBvbHlnb25baV0saj0xLG09cmluZy5sZW5ndGgscG9pbnQ9cmluZ1swXSxhMCxhMSxiMD1wb2ludFswXSxiMT1wb2ludFsxXTtqPG07KytqKXthMD1iMCxhMT1iMSxwb2ludD1yaW5nW2pdLGIwPXBvaW50WzBdLGIxPXBvaW50WzFdO2lmKGExPD15MSl7aWYoYjE+eTEmJihiMC1hMCkqKHkxLWExKT4oYjEtYTEpKih4MC1hMCkpKyt3aW5kaW5nfWVsc2V7aWYoYjE8PXkxJiYoYjAtYTApKih5MS1hMSk8KGIxLWExKSooeDAtYTApKS0td2luZGluZ319fXJldHVybiB3aW5kaW5nfQovLyBCdWZmZXIgZ2VvbWV0cnkgd2l0aGluIGEgcG9seWdvbiBhbmQgdGhlbiBjbGlwIGl0IGVuIG1hc3NlLgpmdW5jdGlvbiBwb2x5Z29uU3RhcnQoKXthY3RpdmVTdHJlYW09YnVmZmVyU3RyZWFtLHNlZ21lbnRzPVtdLHBvbHlnb249W10sY2xlYW49dHJ1ZX1mdW5jdGlvbiBwb2x5Z29uRW5kKCl7dmFyIHN0YXJ0SW5zaWRlPXBvbHlnb25JbnNpZGUoKSxjbGVhbkluc2lkZT1jbGVhbiYmc3RhcnRJbnNpZGUsdmlzaWJsZT0oc2VnbWVudHM9ZDNBcnJheS5tZXJnZShzZWdtZW50cykpLmxlbmd0aDtpZihjbGVhbkluc2lkZXx8dmlzaWJsZSl7c3RyZWFtLnBvbHlnb25TdGFydCgpO2lmKGNsZWFuSW5zaWRlKXtzdHJlYW0ubGluZVN0YXJ0KCk7aW50ZXJwb2xhdGUobnVsbCxudWxsLDEsc3RyZWFtKTtzdHJlYW0ubGluZUVuZCgpfWlmKHZpc2libGUpe2NsaXBSZWpvaW4oc2VnbWVudHMsY29tcGFyZUludGVyc2VjdGlvbixzdGFydEluc2lkZSxpbnRlcnBvbGF0ZSxzdHJlYW0pfXN0cmVhbS5wb2x5Z29uRW5kKCl9YWN0aXZlU3RyZWFtPXN0cmVhbSxzZWdtZW50cz1wb2x5Z29uPXJpbmc9bnVsbH1mdW5jdGlvbiBsaW5lU3RhcnQoKXtjbGlwU3RyZWFtLnBvaW50PWxpbmVQb2ludDtpZihwb2x5Z29uKXBvbHlnb24ucHVzaChyaW5nPVtdKTtmaXJzdD10cnVlO3ZfPWZhbHNlO3hfPXlfPU5hTn0KLy8gVE9ETyByYXRoZXIgdGhhbiBzcGVjaWFsLWNhc2UgcG9seWdvbnMsIHNpbXBseSBoYW5kbGUgdGhlbSBzZXBhcmF0ZWx5LgovLyBJZGVhbGx5LCBjb2luY2lkZW50IGludGVyc2VjdGlvbiBwb2ludHMgc2hvdWxkIGJlIGppdHRlcmVkIHRvIGF2b2lkCi8vIGNsaXBwaW5nIGlzc3Vlcy4KZnVuY3Rpb24gbGluZUVuZCgpe2lmKHNlZ21lbnRzKXtsaW5lUG9pbnQoeF9fLHlfXyk7aWYodl9fJiZ2XylidWZmZXJTdHJlYW0ucmVqb2luKCk7c2VnbWVudHMucHVzaChidWZmZXJTdHJlYW0ucmVzdWx0KCkpfWNsaXBTdHJlYW0ucG9pbnQ9cG9pbnQ7aWYodl8pYWN0aXZlU3RyZWFtLmxpbmVFbmQoKX1mdW5jdGlvbiBsaW5lUG9pbnQoeCx5KXt2YXIgdj12aXNpYmxlKHgseSk7aWYocG9seWdvbilyaW5nLnB1c2goW3gseV0pO2lmKGZpcnN0KXt4X189eCx5X189eSx2X189djtmaXJzdD1mYWxzZTtpZih2KXthY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7YWN0aXZlU3RyZWFtLnBvaW50KHgseSl9fWVsc2V7aWYodiYmdl8pYWN0aXZlU3RyZWFtLnBvaW50KHgseSk7ZWxzZXt2YXIgYT1beF89TWF0aC5tYXgoY2xpcE1pbixNYXRoLm1pbihjbGlwTWF4LHhfKSkseV89TWF0aC5tYXgoY2xpcE1pbixNYXRoLm1pbihjbGlwTWF4LHlfKSldLGI9W3g9TWF0aC5tYXgoY2xpcE1pbixNYXRoLm1pbihjbGlwTWF4LHgpKSx5PU1hdGgubWF4KGNsaXBNaW4sTWF0aC5taW4oY2xpcE1heCx5KSldO2lmKGNsaXBMaW5lKGEsYix4MCx5MCx4MSx5MSkpe2lmKCF2Xyl7YWN0aXZlU3RyZWFtLmxpbmVTdGFydCgpO2FjdGl2ZVN0cmVhbS5wb2ludChhWzBdLGFbMV0pfWFjdGl2ZVN0cmVhbS5wb2ludChiWzBdLGJbMV0pO2lmKCF2KWFjdGl2ZVN0cmVhbS5saW5lRW5kKCk7Y2xlYW49ZmFsc2V9ZWxzZSBpZih2KXthY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7YWN0aXZlU3RyZWFtLnBvaW50KHgseSk7Y2xlYW49ZmFsc2V9fX14Xz14LHlfPXksdl89dn1yZXR1cm4gY2xpcFN0cmVhbX19ZnVuY3Rpb24gZXh0ZW50KCl7dmFyIHgwPTAseTA9MCx4MT05NjAseTE9NTAwLGNhY2hlLGNhY2hlU3RyZWFtLGNsaXA7cmV0dXJuIGNsaXA9e3N0cmVhbTpmdW5jdGlvbihzdHJlYW0pe3JldHVybiBjYWNoZSYmY2FjaGVTdHJlYW09PT1zdHJlYW0/Y2FjaGU6Y2FjaGU9Y2xpcFJlY3RhbmdsZSh4MCx5MCx4MSx5MSkoY2FjaGVTdHJlYW09c3RyZWFtKX0sZXh0ZW50OmZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4MD0rX1swXVswXSx5MD0rX1swXVsxXSx4MT0rX1sxXVswXSx5MT0rX1sxXVsxXSxjYWNoZT1jYWNoZVN0cmVhbT1udWxsLGNsaXApOltbeDAseTBdLFt4MSx5MV1dfX19dmFyIGxlbmd0aFN1bT1hZGRlcigpLGxhbWJkYTAkMixzaW5QaGkwJDEsY29zUGhpMCQxO3ZhciBsZW5ndGhTdHJlYW09e3NwaGVyZTpub29wLHBvaW50Om5vb3AsbGluZVN0YXJ0Omxlbmd0aExpbmVTdGFydCxsaW5lRW5kOm5vb3AscG9seWdvblN0YXJ0Om5vb3AscG9seWdvbkVuZDpub29wfTtmdW5jdGlvbiBsZW5ndGhMaW5lU3RhcnQoKXtsZW5ndGhTdHJlYW0ucG9pbnQ9bGVuZ3RoUG9pbnRGaXJzdDtsZW5ndGhTdHJlYW0ubGluZUVuZD1sZW5ndGhMaW5lRW5kfWZ1bmN0aW9uIGxlbmd0aExpbmVFbmQoKXtsZW5ndGhTdHJlYW0ucG9pbnQ9bGVuZ3RoU3RyZWFtLmxpbmVFbmQ9bm9vcH1mdW5jdGlvbiBsZW5ndGhQb2ludEZpcnN0KGxhbWJkYSxwaGkpe2xhbWJkYSo9cmFkaWFucyxwaGkqPXJhZGlhbnM7bGFtYmRhMCQyPWxhbWJkYSxzaW5QaGkwJDE9c2luKHBoaSksY29zUGhpMCQxPWNvcyhwaGkpO2xlbmd0aFN0cmVhbS5wb2ludD1sZW5ndGhQb2ludH1mdW5jdGlvbiBsZW5ndGhQb2ludChsYW1iZGEscGhpKXtsYW1iZGEqPXJhZGlhbnMscGhpKj1yYWRpYW5zO3ZhciBzaW5QaGk9c2luKHBoaSksY29zUGhpPWNvcyhwaGkpLGRlbHRhPWFicyhsYW1iZGEtbGFtYmRhMCQyKSxjb3NEZWx0YT1jb3MoZGVsdGEpLHNpbkRlbHRhPXNpbihkZWx0YSkseD1jb3NQaGkqc2luRGVsdGEseT1jb3NQaGkwJDEqc2luUGhpLXNpblBoaTAkMSpjb3NQaGkqY29zRGVsdGEsej1zaW5QaGkwJDEqc2luUGhpK2Nvc1BoaTAkMSpjb3NQaGkqY29zRGVsdGE7bGVuZ3RoU3VtLmFkZChhdGFuMihzcXJ0KHgqeCt5KnkpLHopKTtsYW1iZGEwJDI9bGFtYmRhLHNpblBoaTAkMT1zaW5QaGksY29zUGhpMCQxPWNvc1BoaX1mdW5jdGlvbiBsZW5ndGgob2JqZWN0KXtsZW5ndGhTdW0ucmVzZXQoKTtnZW9TdHJlYW0ob2JqZWN0LGxlbmd0aFN0cmVhbSk7cmV0dXJuK2xlbmd0aFN1bX12YXIgY29vcmRpbmF0ZXM9W251bGwsbnVsbF0sb2JqZWN0PXt0eXBlOiJMaW5lU3RyaW5nIixjb29yZGluYXRlczpjb29yZGluYXRlc307ZnVuY3Rpb24gZGlzdGFuY2UoYSxiKXtjb29yZGluYXRlc1swXT1hO2Nvb3JkaW5hdGVzWzFdPWI7cmV0dXJuIGxlbmd0aChvYmplY3QpfXZhciBjb250YWluc09iamVjdFR5cGU9e0ZlYXR1cmU6ZnVuY3Rpb24ob2JqZWN0LHBvaW50KXtyZXR1cm4gY29udGFpbnNHZW9tZXRyeShvYmplY3QuZ2VvbWV0cnkscG9pbnQpfSxGZWF0dXJlQ29sbGVjdGlvbjpmdW5jdGlvbihvYmplY3QscG9pbnQpe3ZhciBmZWF0dXJlcz1vYmplY3QuZmVhdHVyZXMsaT0tMSxuPWZlYXR1cmVzLmxlbmd0aDt3aGlsZSgrK2k8bilpZihjb250YWluc0dlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LHBvaW50KSlyZXR1cm4gdHJ1ZTtyZXR1cm4gZmFsc2V9fTt2YXIgY29udGFpbnNHZW9tZXRyeVR5cGU9e1NwaGVyZTpmdW5jdGlvbigpe3JldHVybiB0cnVlfSxQb2ludDpmdW5jdGlvbihvYmplY3QscG9pbnQpe3JldHVybiBjb250YWluc1BvaW50KG9iamVjdC5jb29yZGluYXRlcyxwb2ludCl9LE11bHRpUG9pbnQ6ZnVuY3Rpb24ob2JqZWN0LHBvaW50KXt2YXIgY29vcmRpbmF0ZXM9b2JqZWN0LmNvb3JkaW5hdGVzLGk9LTEsbj1jb29yZGluYXRlcy5sZW5ndGg7d2hpbGUoKytpPG4paWYoY29udGFpbnNQb2ludChjb29yZGluYXRlc1tpXSxwb2ludCkpcmV0dXJuIHRydWU7cmV0dXJuIGZhbHNlfSxMaW5lU3RyaW5nOmZ1bmN0aW9uKG9iamVjdCxwb2ludCl7cmV0dXJuIGNvbnRhaW5zTGluZShvYmplY3QuY29vcmRpbmF0ZXMscG9pbnQpfSxNdWx0aUxpbmVTdHJpbmc6ZnVuY3Rpb24ob2JqZWN0LHBvaW50KXt2YXIgY29vcmRpbmF0ZXM9b2JqZWN0LmNvb3JkaW5hdGVzLGk9LTEsbj1jb29yZGluYXRlcy5sZW5ndGg7d2hpbGUoKytpPG4paWYoY29udGFpbnNMaW5lKGNvb3JkaW5hdGVzW2ldLHBvaW50KSlyZXR1cm4gdHJ1ZTtyZXR1cm4gZmFsc2V9LFBvbHlnb246ZnVuY3Rpb24ob2JqZWN0LHBvaW50KXtyZXR1cm4gY29udGFpbnNQb2x5Z29uKG9iamVjdC5jb29yZGluYXRlcyxwb2ludCl9LE11bHRpUG9seWdvbjpmdW5jdGlvbihvYmplY3QscG9pbnQpe3ZhciBjb29yZGluYXRlcz1vYmplY3QuY29vcmRpbmF0ZXMsaT0tMSxuPWNvb3JkaW5hdGVzLmxlbmd0aDt3aGlsZSgrK2k8bilpZihjb250YWluc1BvbHlnb24oY29vcmRpbmF0ZXNbaV0scG9pbnQpKXJldHVybiB0cnVlO3JldHVybiBmYWxzZX0sR2VvbWV0cnlDb2xsZWN0aW9uOmZ1bmN0aW9uKG9iamVjdCxwb2ludCl7dmFyIGdlb21ldHJpZXM9b2JqZWN0Lmdlb21ldHJpZXMsaT0tMSxuPWdlb21ldHJpZXMubGVuZ3RoO3doaWxlKCsraTxuKWlmKGNvbnRhaW5zR2VvbWV0cnkoZ2VvbWV0cmllc1tpXSxwb2ludCkpcmV0dXJuIHRydWU7cmV0dXJuIGZhbHNlfX07ZnVuY3Rpb24gY29udGFpbnNHZW9tZXRyeShnZW9tZXRyeSxwb2ludCl7cmV0dXJuIGdlb21ldHJ5JiZjb250YWluc0dlb21ldHJ5VHlwZS5oYXNPd25Qcm9wZXJ0eShnZW9tZXRyeS50eXBlKT9jb250YWluc0dlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSxwb2ludCk6ZmFsc2V9ZnVuY3Rpb24gY29udGFpbnNQb2ludChjb29yZGluYXRlcyxwb2ludCl7cmV0dXJuIGRpc3RhbmNlKGNvb3JkaW5hdGVzLHBvaW50KT09PTB9ZnVuY3Rpb24gY29udGFpbnNMaW5lKGNvb3JkaW5hdGVzLHBvaW50KXt2YXIgYW8sYm8sYWI7Zm9yKHZhciBpPTAsbj1jb29yZGluYXRlcy5sZW5ndGg7aTxuO2krKyl7Ym89ZGlzdGFuY2UoY29vcmRpbmF0ZXNbaV0scG9pbnQpO2lmKGJvPT09MClyZXR1cm4gdHJ1ZTtpZihpPjApe2FiPWRpc3RhbmNlKGNvb3JkaW5hdGVzW2ldLGNvb3JkaW5hdGVzW2ktMV0pO2lmKGFiPjAmJmFvPD1hYiYmYm88PWFiJiYoYW8rYm8tYWIpKigxLU1hdGgucG93KChhby1ibykvYWIsMikpPGVwc2lsb24yKmFiKXJldHVybiB0cnVlfWFvPWJvfXJldHVybiBmYWxzZX1mdW5jdGlvbiBjb250YWluc1BvbHlnb24oY29vcmRpbmF0ZXMscG9pbnQpe3JldHVybiEhcG9seWdvbkNvbnRhaW5zKGNvb3JkaW5hdGVzLm1hcChyaW5nUmFkaWFucykscG9pbnRSYWRpYW5zKHBvaW50KSl9ZnVuY3Rpb24gcmluZ1JhZGlhbnMocmluZyl7cmV0dXJuIHJpbmc9cmluZy5tYXAocG9pbnRSYWRpYW5zKSxyaW5nLnBvcCgpLHJpbmd9ZnVuY3Rpb24gcG9pbnRSYWRpYW5zKHBvaW50KXtyZXR1cm5bcG9pbnRbMF0qcmFkaWFucyxwb2ludFsxXSpyYWRpYW5zXX1mdW5jdGlvbiBjb250YWlucyhvYmplY3QscG9pbnQpe3JldHVybihvYmplY3QmJmNvbnRhaW5zT2JqZWN0VHlwZS5oYXNPd25Qcm9wZXJ0eShvYmplY3QudHlwZSk/Y29udGFpbnNPYmplY3RUeXBlW29iamVjdC50eXBlXTpjb250YWluc0dlb21ldHJ5KShvYmplY3QscG9pbnQpfWZ1bmN0aW9uIGdyYXRpY3VsZVgoeTAseTEsZHkpe3ZhciB5PWQzQXJyYXkucmFuZ2UoeTAseTEtZXBzaWxvbixkeSkuY29uY2F0KHkxKTtyZXR1cm4gZnVuY3Rpb24oeCl7cmV0dXJuIHkubWFwKGZ1bmN0aW9uKHkpe3JldHVyblt4LHldfSl9fWZ1bmN0aW9uIGdyYXRpY3VsZVkoeDAseDEsZHgpe3ZhciB4PWQzQXJyYXkucmFuZ2UoeDAseDEtZXBzaWxvbixkeCkuY29uY2F0KHgxKTtyZXR1cm4gZnVuY3Rpb24oeSl7cmV0dXJuIHgubWFwKGZ1bmN0aW9uKHgpe3JldHVyblt4LHldfSl9fWZ1bmN0aW9uIGdyYXRpY3VsZSgpe3ZhciB4MSx4MCxYMSxYMCx5MSx5MCxZMSxZMCxkeD0xMCxkeT1keCxEWD05MCxEWT0zNjAseCx5LFgsWSxwcmVjaXNpb249Mi41O2Z1bmN0aW9uIGdyYXRpY3VsZSgpe3JldHVybnt0eXBlOiJNdWx0aUxpbmVTdHJpbmciLGNvb3JkaW5hdGVzOmxpbmVzKCl9fWZ1bmN0aW9uIGxpbmVzKCl7cmV0dXJuIGQzQXJyYXkucmFuZ2UoY2VpbChYMC9EWCkqRFgsWDEsRFgpLm1hcChYKS5jb25jYXQoZDNBcnJheS5yYW5nZShjZWlsKFkwL0RZKSpEWSxZMSxEWSkubWFwKFkpKS5jb25jYXQoZDNBcnJheS5yYW5nZShjZWlsKHgwL2R4KSpkeCx4MSxkeCkuZmlsdGVyKGZ1bmN0aW9uKHgpe3JldHVybiBhYnMoeCVEWCk+ZXBzaWxvbn0pLm1hcCh4KSkuY29uY2F0KGQzQXJyYXkucmFuZ2UoY2VpbCh5MC9keSkqZHkseTEsZHkpLmZpbHRlcihmdW5jdGlvbih5KXtyZXR1cm4gYWJzKHklRFkpPmVwc2lsb259KS5tYXAoeSkpfWdyYXRpY3VsZS5saW5lcz1mdW5jdGlvbigpe3JldHVybiBsaW5lcygpLm1hcChmdW5jdGlvbihjb29yZGluYXRlcyl7cmV0dXJue3R5cGU6IkxpbmVTdHJpbmciLGNvb3JkaW5hdGVzOmNvb3JkaW5hdGVzfX0pfTtncmF0aWN1bGUub3V0bGluZT1mdW5jdGlvbigpe3JldHVybnt0eXBlOiJQb2x5Z29uIixjb29yZGluYXRlczpbWChYMCkuY29uY2F0KFkoWTEpLnNsaWNlKDEpLFgoWDEpLnJldmVyc2UoKS5zbGljZSgxKSxZKFkwKS5yZXZlcnNlKCkuc2xpY2UoMSkpXX19O2dyYXRpY3VsZS5leHRlbnQ9ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGdyYXRpY3VsZS5leHRlbnRNaW5vcigpO3JldHVybiBncmF0aWN1bGUuZXh0ZW50TWFqb3IoXykuZXh0ZW50TWlub3IoXyl9O2dyYXRpY3VsZS5leHRlbnRNYWpvcj1mdW5jdGlvbihfKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bW1gwLFkwXSxbWDEsWTFdXTtYMD0rX1swXVswXSxYMT0rX1sxXVswXTtZMD0rX1swXVsxXSxZMT0rX1sxXVsxXTtpZihYMD5YMSlfPVgwLFgwPVgxLFgxPV87aWYoWTA+WTEpXz1ZMCxZMD1ZMSxZMT1fO3JldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbil9O2dyYXRpY3VsZS5leHRlbnRNaW5vcj1mdW5jdGlvbihfKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bW3gwLHkwXSxbeDEseTFdXTt4MD0rX1swXVswXSx4MT0rX1sxXVswXTt5MD0rX1swXVsxXSx5MT0rX1sxXVsxXTtpZih4MD54MSlfPXgwLHgwPXgxLHgxPV87aWYoeTA+eTEpXz15MCx5MD15MSx5MT1fO3JldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbil9O2dyYXRpY3VsZS5zdGVwPWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBncmF0aWN1bGUuc3RlcE1pbm9yKCk7cmV0dXJuIGdyYXRpY3VsZS5zdGVwTWFqb3IoXykuc3RlcE1pbm9yKF8pfTtncmF0aWN1bGUuc3RlcE1ham9yPWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybltEWCxEWV07RFg9K19bMF0sRFk9K19bMV07cmV0dXJuIGdyYXRpY3VsZX07Z3JhdGljdWxlLnN0ZXBNaW5vcj1mdW5jdGlvbihfKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bZHgsZHldO2R4PStfWzBdLGR5PStfWzFdO3JldHVybiBncmF0aWN1bGV9O2dyYXRpY3VsZS5wcmVjaXNpb249ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHByZWNpc2lvbjtwcmVjaXNpb249K187eD1ncmF0aWN1bGVYKHkwLHkxLDkwKTt5PWdyYXRpY3VsZVkoeDAseDEscHJlY2lzaW9uKTtYPWdyYXRpY3VsZVgoWTAsWTEsOTApO1k9Z3JhdGljdWxlWShYMCxYMSxwcmVjaXNpb24pO3JldHVybiBncmF0aWN1bGV9O3JldHVybiBncmF0aWN1bGUuZXh0ZW50TWFqb3IoW1stMTgwLC05MCtlcHNpbG9uXSxbMTgwLDkwLWVwc2lsb25dXSkuZXh0ZW50TWlub3IoW1stMTgwLC04MC1lcHNpbG9uXSxbMTgwLDgwK2Vwc2lsb25dXSl9ZnVuY3Rpb24gZ3JhdGljdWxlMTAoKXtyZXR1cm4gZ3JhdGljdWxlKCkoKX1mdW5jdGlvbiBpbnRlcnBvbGF0ZShhLGIpe3ZhciB4MD1hWzBdKnJhZGlhbnMseTA9YVsxXSpyYWRpYW5zLHgxPWJbMF0qcmFkaWFucyx5MT1iWzFdKnJhZGlhbnMsY3kwPWNvcyh5MCksc3kwPXNpbih5MCksY3kxPWNvcyh5MSksc3kxPXNpbih5MSksa3gwPWN5MCpjb3MoeDApLGt5MD1jeTAqc2luKHgwKSxreDE9Y3kxKmNvcyh4MSksa3kxPWN5MSpzaW4oeDEpLGQ9Miphc2luKHNxcnQoaGF2ZXJzaW4oeTEteTApK2N5MCpjeTEqaGF2ZXJzaW4oeDEteDApKSksaz1zaW4oZCk7dmFyIGludGVycG9sYXRlPWQ/ZnVuY3Rpb24odCl7dmFyIEI9c2luKHQqPWQpL2ssQT1zaW4oZC10KS9rLHg9QSpreDArQipreDEseT1BKmt5MCtCKmt5MSx6PUEqc3kwK0Iqc3kxO3JldHVyblthdGFuMih5LHgpKmRlZ3JlZXMsYXRhbjIoeixzcXJ0KHgqeCt5KnkpKSpkZWdyZWVzXX06ZnVuY3Rpb24oKXtyZXR1cm5beDAqZGVncmVlcyx5MCpkZWdyZWVzXX07aW50ZXJwb2xhdGUuZGlzdGFuY2U9ZDtyZXR1cm4gaW50ZXJwb2xhdGV9ZnVuY3Rpb24gaWRlbnRpdHkoeCl7cmV0dXJuIHh9dmFyIGFyZWFTdW0kMT1hZGRlcigpLGFyZWFSaW5nU3VtJDE9YWRkZXIoKSx4MDAseTAwLHgwJDEseTAkMTt2YXIgYXJlYVN0cmVhbSQxPXtwb2ludDpub29wLGxpbmVTdGFydDpub29wLGxpbmVFbmQ6bm9vcCxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXthcmVhU3RyZWFtJDEubGluZVN0YXJ0PWFyZWFSaW5nU3RhcnQkMTthcmVhU3RyZWFtJDEubGluZUVuZD1hcmVhUmluZ0VuZCQxfSxwb2x5Z29uRW5kOmZ1bmN0aW9uKCl7YXJlYVN0cmVhbSQxLmxpbmVTdGFydD1hcmVhU3RyZWFtJDEubGluZUVuZD1hcmVhU3RyZWFtJDEucG9pbnQ9bm9vcDthcmVhU3VtJDEuYWRkKGFicyhhcmVhUmluZ1N1bSQxKSk7YXJlYVJpbmdTdW0kMS5yZXNldCgpfSxyZXN1bHQ6ZnVuY3Rpb24oKXt2YXIgYXJlYT1hcmVhU3VtJDEvMjthcmVhU3VtJDEucmVzZXQoKTtyZXR1cm4gYXJlYX19O2Z1bmN0aW9uIGFyZWFSaW5nU3RhcnQkMSgpe2FyZWFTdHJlYW0kMS5wb2ludD1hcmVhUG9pbnRGaXJzdCQxfWZ1bmN0aW9uIGFyZWFQb2ludEZpcnN0JDEoeCx5KXthcmVhU3RyZWFtJDEucG9pbnQ9YXJlYVBvaW50JDE7eDAwPXgwJDE9eCx5MDA9eTAkMT15fWZ1bmN0aW9uIGFyZWFQb2ludCQxKHgseSl7YXJlYVJpbmdTdW0kMS5hZGQoeTAkMSp4LXgwJDEqeSk7eDAkMT14LHkwJDE9eX1mdW5jdGlvbiBhcmVhUmluZ0VuZCQxKCl7YXJlYVBvaW50JDEoeDAwLHkwMCl9dmFyIHgwJDI9SW5maW5pdHkseTAkMj14MCQyLHgxPS14MCQyLHkxPXgxO3ZhciBib3VuZHNTdHJlYW0kMT17cG9pbnQ6Ym91bmRzUG9pbnQkMSxsaW5lU3RhcnQ6bm9vcCxsaW5lRW5kOm5vb3AscG9seWdvblN0YXJ0Om5vb3AscG9seWdvbkVuZDpub29wLHJlc3VsdDpmdW5jdGlvbigpe3ZhciBib3VuZHM9W1t4MCQyLHkwJDJdLFt4MSx5MV1dO3gxPXkxPS0oeTAkMj14MCQyPUluZmluaXR5KTtyZXR1cm4gYm91bmRzfX07ZnVuY3Rpb24gYm91bmRzUG9pbnQkMSh4LHkpe2lmKHg8eDAkMil4MCQyPXg7aWYoeD54MSl4MT14O2lmKHk8eTAkMil5MCQyPXk7aWYoeT55MSl5MT15fQovLyBUT0RPIEVuZm9yY2UgcG9zaXRpdmUgYXJlYSBmb3IgZXh0ZXJpb3IsIG5lZ2F0aXZlIGFyZWEgZm9yIGludGVyaW9yPwp2YXIgWDAkMT0wLFkwJDE9MCxaMCQxPTAsWDEkMT0wLFkxJDE9MCxaMSQxPTAsWDIkMT0wLFkyJDE9MCxaMiQxPTAseDAwJDEseTAwJDEseDAkMyx5MCQzO3ZhciBjZW50cm9pZFN0cmVhbSQxPXtwb2ludDpjZW50cm9pZFBvaW50JDEsbGluZVN0YXJ0OmNlbnRyb2lkTGluZVN0YXJ0JDEsbGluZUVuZDpjZW50cm9pZExpbmVFbmQkMSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtjZW50cm9pZFN0cmVhbSQxLmxpbmVTdGFydD1jZW50cm9pZFJpbmdTdGFydCQxO2NlbnRyb2lkU3RyZWFtJDEubGluZUVuZD1jZW50cm9pZFJpbmdFbmQkMX0scG9seWdvbkVuZDpmdW5jdGlvbigpe2NlbnRyb2lkU3RyZWFtJDEucG9pbnQ9Y2VudHJvaWRQb2ludCQxO2NlbnRyb2lkU3RyZWFtJDEubGluZVN0YXJ0PWNlbnRyb2lkTGluZVN0YXJ0JDE7Y2VudHJvaWRTdHJlYW0kMS5saW5lRW5kPWNlbnRyb2lkTGluZUVuZCQxfSxyZXN1bHQ6ZnVuY3Rpb24oKXt2YXIgY2VudHJvaWQ9WjIkMT9bWDIkMS9aMiQxLFkyJDEvWjIkMV06WjEkMT9bWDEkMS9aMSQxLFkxJDEvWjEkMV06WjAkMT9bWDAkMS9aMCQxLFkwJDEvWjAkMV06W05hTixOYU5dO1gwJDE9WTAkMT1aMCQxPVgxJDE9WTEkMT1aMSQxPVgyJDE9WTIkMT1aMiQxPTA7cmV0dXJuIGNlbnRyb2lkfX07ZnVuY3Rpb24gY2VudHJvaWRQb2ludCQxKHgseSl7WDAkMSs9eDtZMCQxKz15OysrWjAkMX1mdW5jdGlvbiBjZW50cm9pZExpbmVTdGFydCQxKCl7Y2VudHJvaWRTdHJlYW0kMS5wb2ludD1jZW50cm9pZFBvaW50Rmlyc3RMaW5lfWZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRGaXJzdExpbmUoeCx5KXtjZW50cm9pZFN0cmVhbSQxLnBvaW50PWNlbnRyb2lkUG9pbnRMaW5lO2NlbnRyb2lkUG9pbnQkMSh4MCQzPXgseTAkMz15KX1mdW5jdGlvbiBjZW50cm9pZFBvaW50TGluZSh4LHkpe3ZhciBkeD14LXgwJDMsZHk9eS15MCQzLHo9c3FydChkeCpkeCtkeSpkeSk7WDEkMSs9eiooeDAkMyt4KS8yO1kxJDErPXoqKHkwJDMreSkvMjtaMSQxKz16O2NlbnRyb2lkUG9pbnQkMSh4MCQzPXgseTAkMz15KX1mdW5jdGlvbiBjZW50cm9pZExpbmVFbmQkMSgpe2NlbnRyb2lkU3RyZWFtJDEucG9pbnQ9Y2VudHJvaWRQb2ludCQxfWZ1bmN0aW9uIGNlbnRyb2lkUmluZ1N0YXJ0JDEoKXtjZW50cm9pZFN0cmVhbSQxLnBvaW50PWNlbnRyb2lkUG9pbnRGaXJzdFJpbmd9ZnVuY3Rpb24gY2VudHJvaWRSaW5nRW5kJDEoKXtjZW50cm9pZFBvaW50UmluZyh4MDAkMSx5MDAkMSl9ZnVuY3Rpb24gY2VudHJvaWRQb2ludEZpcnN0UmluZyh4LHkpe2NlbnRyb2lkU3RyZWFtJDEucG9pbnQ9Y2VudHJvaWRQb2ludFJpbmc7Y2VudHJvaWRQb2ludCQxKHgwMCQxPXgwJDM9eCx5MDAkMT15MCQzPXkpfWZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRSaW5nKHgseSl7dmFyIGR4PXgteDAkMyxkeT15LXkwJDMsej1zcXJ0KGR4KmR4K2R5KmR5KTtYMSQxKz16Kih4MCQzK3gpLzI7WTEkMSs9eiooeTAkMyt5KS8yO1oxJDErPXo7ej15MCQzKngteDAkMyp5O1gyJDErPXoqKHgwJDMreCk7WTIkMSs9eiooeTAkMyt5KTtaMiQxKz16KjM7Y2VudHJvaWRQb2ludCQxKHgwJDM9eCx5MCQzPXkpfWZ1bmN0aW9uIFBhdGhDb250ZXh0KGNvbnRleHQpe3RoaXMuX2NvbnRleHQ9Y29udGV4dH1QYXRoQ29udGV4dC5wcm90b3R5cGU9e19yYWRpdXM6NC41LHBvaW50UmFkaXVzOmZ1bmN0aW9uKF8pe3JldHVybiB0aGlzLl9yYWRpdXM9Xyx0aGlzfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe2lmKHRoaXMuX2xpbmU9PT0wKXRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7dGhpcy5fcG9pbnQ9TmFOfSxwb2ludDpmdW5jdGlvbih4LHkpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnt0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LHkpO3RoaXMuX3BvaW50PTE7YnJlYWt9Y2FzZSAxOnt0aGlzLl9jb250ZXh0LmxpbmVUbyh4LHkpO2JyZWFrfWRlZmF1bHQ6e3RoaXMuX2NvbnRleHQubW92ZVRvKHgrdGhpcy5fcmFkaXVzLHkpO3RoaXMuX2NvbnRleHQuYXJjKHgseSx0aGlzLl9yYWRpdXMsMCx0YXUpO2JyZWFrfX19LHJlc3VsdDpub29wfTt2YXIgbGVuZ3RoU3VtJDE9YWRkZXIoKSxsZW5ndGhSaW5nLHgwMCQyLHkwMCQyLHgwJDQseTAkNDt2YXIgbGVuZ3RoU3RyZWFtJDE9e3BvaW50Om5vb3AsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7bGVuZ3RoU3RyZWFtJDEucG9pbnQ9bGVuZ3RoUG9pbnRGaXJzdCQxfSxsaW5lRW5kOmZ1bmN0aW9uKCl7aWYobGVuZ3RoUmluZylsZW5ndGhQb2ludCQxKHgwMCQyLHkwMCQyKTtsZW5ndGhTdHJlYW0kMS5wb2ludD1ub29wfSxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtsZW5ndGhSaW5nPXRydWV9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXtsZW5ndGhSaW5nPW51bGx9LHJlc3VsdDpmdW5jdGlvbigpe3ZhciBsZW5ndGg9K2xlbmd0aFN1bSQxO2xlbmd0aFN1bSQxLnJlc2V0KCk7cmV0dXJuIGxlbmd0aH19O2Z1bmN0aW9uIGxlbmd0aFBvaW50Rmlyc3QkMSh4LHkpe2xlbmd0aFN0cmVhbSQxLnBvaW50PWxlbmd0aFBvaW50JDE7eDAwJDI9eDAkND14LHkwMCQyPXkwJDQ9eX1mdW5jdGlvbiBsZW5ndGhQb2ludCQxKHgseSl7eDAkNC09eCx5MCQ0LT15O2xlbmd0aFN1bSQxLmFkZChzcXJ0KHgwJDQqeDAkNCt5MCQ0KnkwJDQpKTt4MCQ0PXgseTAkND15fWZ1bmN0aW9uIFBhdGhTdHJpbmcoKXt0aGlzLl9zdHJpbmc9W119UGF0aFN0cmluZy5wcm90b3R5cGU9e19yYWRpdXM6NC41LF9jaXJjbGU6Y2lyY2xlJDEoNC41KSxwb2ludFJhZGl1czpmdW5jdGlvbihfKXtpZigoXz0rXykhPT10aGlzLl9yYWRpdXMpdGhpcy5fcmFkaXVzPV8sdGhpcy5fY2lyY2xlPW51bGw7cmV0dXJuIHRoaXN9LHBvbHlnb25TdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0scG9seWdvbkVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7aWYodGhpcy5fbGluZT09PTApdGhpcy5fc3RyaW5nLnB1c2goIloiKTt0aGlzLl9wb2ludD1OYU59LHBvaW50OmZ1bmN0aW9uKHgseSl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6e3RoaXMuX3N0cmluZy5wdXNoKCJNIix4LCIsIix5KTt0aGlzLl9wb2ludD0xO2JyZWFrfWNhc2UgMTp7dGhpcy5fc3RyaW5nLnB1c2goIkwiLHgsIiwiLHkpO2JyZWFrfWRlZmF1bHQ6e2lmKHRoaXMuX2NpcmNsZT09bnVsbCl0aGlzLl9jaXJjbGU9Y2lyY2xlJDEodGhpcy5fcmFkaXVzKTt0aGlzLl9zdHJpbmcucHVzaCgiTSIseCwiLCIseSx0aGlzLl9jaXJjbGUpO2JyZWFrfX19LHJlc3VsdDpmdW5jdGlvbigpe2lmKHRoaXMuX3N0cmluZy5sZW5ndGgpe3ZhciByZXN1bHQ9dGhpcy5fc3RyaW5nLmpvaW4oIiIpO3RoaXMuX3N0cmluZz1bXTtyZXR1cm4gcmVzdWx0fWVsc2V7cmV0dXJuIG51bGx9fX07ZnVuY3Rpb24gY2lyY2xlJDEocmFkaXVzKXtyZXR1cm4ibTAsIityYWRpdXMrImEiK3JhZGl1cysiLCIrcmFkaXVzKyIgMCAxLDEgMCwiKy0yKnJhZGl1cysiYSIrcmFkaXVzKyIsIityYWRpdXMrIiAwIDEsMSAwLCIrMipyYWRpdXMrInoifWZ1bmN0aW9uIGluZGV4KHByb2plY3Rpb24sY29udGV4dCl7dmFyIHBvaW50UmFkaXVzPTQuNSxwcm9qZWN0aW9uU3RyZWFtLGNvbnRleHRTdHJlYW07ZnVuY3Rpb24gcGF0aChvYmplY3Qpe2lmKG9iamVjdCl7aWYodHlwZW9mIHBvaW50UmFkaXVzPT09ImZ1bmN0aW9uIiljb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKCtwb2ludFJhZGl1cy5hcHBseSh0aGlzLGFyZ3VtZW50cykpO2dlb1N0cmVhbShvYmplY3QscHJvamVjdGlvblN0cmVhbShjb250ZXh0U3RyZWFtKSl9cmV0dXJuIGNvbnRleHRTdHJlYW0ucmVzdWx0KCl9cGF0aC5hcmVhPWZ1bmN0aW9uKG9iamVjdCl7Z2VvU3RyZWFtKG9iamVjdCxwcm9qZWN0aW9uU3RyZWFtKGFyZWFTdHJlYW0kMSkpO3JldHVybiBhcmVhU3RyZWFtJDEucmVzdWx0KCl9O3BhdGgubWVhc3VyZT1mdW5jdGlvbihvYmplY3Qpe2dlb1N0cmVhbShvYmplY3QscHJvamVjdGlvblN0cmVhbShsZW5ndGhTdHJlYW0kMSkpO3JldHVybiBsZW5ndGhTdHJlYW0kMS5yZXN1bHQoKX07cGF0aC5ib3VuZHM9ZnVuY3Rpb24ob2JqZWN0KXtnZW9TdHJlYW0ob2JqZWN0LHByb2plY3Rpb25TdHJlYW0oYm91bmRzU3RyZWFtJDEpKTtyZXR1cm4gYm91bmRzU3RyZWFtJDEucmVzdWx0KCl9O3BhdGguY2VudHJvaWQ9ZnVuY3Rpb24ob2JqZWN0KXtnZW9TdHJlYW0ob2JqZWN0LHByb2plY3Rpb25TdHJlYW0oY2VudHJvaWRTdHJlYW0kMSkpO3JldHVybiBjZW50cm9pZFN0cmVhbSQxLnJlc3VsdCgpfTtwYXRoLnByb2plY3Rpb249ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHByb2plY3Rpb25TdHJlYW09Xz09bnVsbD8ocHJvamVjdGlvbj1udWxsLGlkZW50aXR5KToocHJvamVjdGlvbj1fKS5zdHJlYW0scGF0aCk6cHJvamVjdGlvbn07cGF0aC5jb250ZXh0PWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBjb250ZXh0O2NvbnRleHRTdHJlYW09Xz09bnVsbD8oY29udGV4dD1udWxsLG5ldyBQYXRoU3RyaW5nKTpuZXcgUGF0aENvbnRleHQoY29udGV4dD1fKTtpZih0eXBlb2YgcG9pbnRSYWRpdXMhPT0iZnVuY3Rpb24iKWNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMocG9pbnRSYWRpdXMpO3JldHVybiBwYXRofTtwYXRoLnBvaW50UmFkaXVzPWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBwb2ludFJhZGl1cztwb2ludFJhZGl1cz10eXBlb2YgXz09PSJmdW5jdGlvbiI/XzooY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cygrXyksK18pO3JldHVybiBwYXRofTtyZXR1cm4gcGF0aC5wcm9qZWN0aW9uKHByb2plY3Rpb24pLmNvbnRleHQoY29udGV4dCl9ZnVuY3Rpb24gdHJhbnNmb3JtKG1ldGhvZHMpe3JldHVybntzdHJlYW06dHJhbnNmb3JtZXIobWV0aG9kcyl9fWZ1bmN0aW9uIHRyYW5zZm9ybWVyKG1ldGhvZHMpe3JldHVybiBmdW5jdGlvbihzdHJlYW0pe3ZhciBzPW5ldyBUcmFuc2Zvcm1TdHJlYW07Zm9yKHZhciBrZXkgaW4gbWV0aG9kcylzW2tleV09bWV0aG9kc1trZXldO3Muc3RyZWFtPXN0cmVhbTtyZXR1cm4gc319ZnVuY3Rpb24gVHJhbnNmb3JtU3RyZWFtKCl7fVRyYW5zZm9ybVN0cmVhbS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRyYW5zZm9ybVN0cmVhbSxwb2ludDpmdW5jdGlvbih4LHkpe3RoaXMuc3RyZWFtLnBvaW50KHgseSl9LHNwaGVyZTpmdW5jdGlvbigpe3RoaXMuc3RyZWFtLnNwaGVyZSgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe3RoaXMuc3RyZWFtLmxpbmVFbmQoKX0scG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5zdHJlYW0ucG9seWdvblN0YXJ0KCl9LHBvbHlnb25FbmQ6ZnVuY3Rpb24oKXt0aGlzLnN0cmVhbS5wb2x5Z29uRW5kKCl9fTtmdW5jdGlvbiBmaXQocHJvamVjdGlvbixmaXRCb3VuZHMsb2JqZWN0KXt2YXIgY2xpcD1wcm9qZWN0aW9uLmNsaXBFeHRlbnQmJnByb2plY3Rpb24uY2xpcEV4dGVudCgpO3Byb2plY3Rpb24uc2NhbGUoMTUwKS50cmFuc2xhdGUoWzAsMF0pO2lmKGNsaXAhPW51bGwpcHJvamVjdGlvbi5jbGlwRXh0ZW50KG51bGwpO2dlb1N0cmVhbShvYmplY3QscHJvamVjdGlvbi5zdHJlYW0oYm91bmRzU3RyZWFtJDEpKTtmaXRCb3VuZHMoYm91bmRzU3RyZWFtJDEucmVzdWx0KCkpO2lmKGNsaXAhPW51bGwpcHJvamVjdGlvbi5jbGlwRXh0ZW50KGNsaXApO3JldHVybiBwcm9qZWN0aW9ufWZ1bmN0aW9uIGZpdEV4dGVudChwcm9qZWN0aW9uLGV4dGVudCxvYmplY3Qpe3JldHVybiBmaXQocHJvamVjdGlvbixmdW5jdGlvbihiKXt2YXIgdz1leHRlbnRbMV1bMF0tZXh0ZW50WzBdWzBdLGg9ZXh0ZW50WzFdWzFdLWV4dGVudFswXVsxXSxrPU1hdGgubWluKHcvKGJbMV1bMF0tYlswXVswXSksaC8oYlsxXVsxXS1iWzBdWzFdKSkseD0rZXh0ZW50WzBdWzBdKyh3LWsqKGJbMV1bMF0rYlswXVswXSkpLzIseT0rZXh0ZW50WzBdWzFdKyhoLWsqKGJbMV1bMV0rYlswXVsxXSkpLzI7cHJvamVjdGlvbi5zY2FsZSgxNTAqaykudHJhbnNsYXRlKFt4LHldKX0sb2JqZWN0KX1mdW5jdGlvbiBmaXRTaXplKHByb2plY3Rpb24sc2l6ZSxvYmplY3Qpe3JldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbixbWzAsMF0sc2l6ZV0sb2JqZWN0KX1mdW5jdGlvbiBmaXRXaWR0aChwcm9qZWN0aW9uLHdpZHRoLG9iamVjdCl7cmV0dXJuIGZpdChwcm9qZWN0aW9uLGZ1bmN0aW9uKGIpe3ZhciB3PSt3aWR0aCxrPXcvKGJbMV1bMF0tYlswXVswXSkseD0ody1rKihiWzFdWzBdK2JbMF1bMF0pKS8yLHk9LWsqYlswXVsxXTtwcm9qZWN0aW9uLnNjYWxlKDE1MCprKS50cmFuc2xhdGUoW3gseV0pfSxvYmplY3QpfWZ1bmN0aW9uIGZpdEhlaWdodChwcm9qZWN0aW9uLGhlaWdodCxvYmplY3Qpe3JldHVybiBmaXQocHJvamVjdGlvbixmdW5jdGlvbihiKXt2YXIgaD0raGVpZ2h0LGs9aC8oYlsxXVsxXS1iWzBdWzFdKSx4PS1rKmJbMF1bMF0seT0oaC1rKihiWzFdWzFdK2JbMF1bMV0pKS8yO3Byb2plY3Rpb24uc2NhbGUoMTUwKmspLnRyYW5zbGF0ZShbeCx5XSl9LG9iamVjdCl9dmFyIG1heERlcHRoPTE2LC8vIG1heGltdW0gZGVwdGggb2Ygc3ViZGl2aXNpb24KY29zTWluRGlzdGFuY2U9Y29zKDMwKnJhZGlhbnMpOy8vIGNvcyhtaW5pbXVtIGFuZ3VsYXIgZGlzdGFuY2UpCmZ1bmN0aW9uIHJlc2FtcGxlKHByb2plY3QsZGVsdGEyKXtyZXR1cm4rZGVsdGEyP3Jlc2FtcGxlJDEocHJvamVjdCxkZWx0YTIpOnJlc2FtcGxlTm9uZShwcm9qZWN0KX1mdW5jdGlvbiByZXNhbXBsZU5vbmUocHJvamVjdCl7cmV0dXJuIHRyYW5zZm9ybWVyKHtwb2ludDpmdW5jdGlvbih4LHkpe3g9cHJvamVjdCh4LHkpO3RoaXMuc3RyZWFtLnBvaW50KHhbMF0seFsxXSl9fSl9ZnVuY3Rpb24gcmVzYW1wbGUkMShwcm9qZWN0LGRlbHRhMil7ZnVuY3Rpb24gcmVzYW1wbGVMaW5lVG8oeDAseTAsbGFtYmRhMCxhMCxiMCxjMCx4MSx5MSxsYW1iZGExLGExLGIxLGMxLGRlcHRoLHN0cmVhbSl7dmFyIGR4PXgxLXgwLGR5PXkxLXkwLGQyPWR4KmR4K2R5KmR5O2lmKGQyPjQqZGVsdGEyJiZkZXB0aC0tKXt2YXIgYT1hMCthMSxiPWIwK2IxLGM9YzArYzEsbT1zcXJ0KGEqYStiKmIrYypjKSxwaGkyPWFzaW4oYy89bSksbGFtYmRhMj1hYnMoYWJzKGMpLTEpPGVwc2lsb258fGFicyhsYW1iZGEwLWxhbWJkYTEpPGVwc2lsb24/KGxhbWJkYTArbGFtYmRhMSkvMjphdGFuMihiLGEpLHA9cHJvamVjdChsYW1iZGEyLHBoaTIpLHgyPXBbMF0seTI9cFsxXSxkeDI9eDIteDAsZHkyPXkyLXkwLGR6PWR5KmR4Mi1keCpkeTI7aWYoZHoqZHovZDI+ZGVsdGEyfHxhYnMoKGR4KmR4MitkeSpkeTIpL2QyLS41KT4uM3x8YTAqYTErYjAqYjErYzAqYzE8Y29zTWluRGlzdGFuY2Upey8vIGFuZ3VsYXIgZGlzdGFuY2UKcmVzYW1wbGVMaW5lVG8oeDAseTAsbGFtYmRhMCxhMCxiMCxjMCx4Mix5MixsYW1iZGEyLGEvPW0sYi89bSxjLGRlcHRoLHN0cmVhbSk7c3RyZWFtLnBvaW50KHgyLHkyKTtyZXNhbXBsZUxpbmVUbyh4Mix5MixsYW1iZGEyLGEsYixjLHgxLHkxLGxhbWJkYTEsYTEsYjEsYzEsZGVwdGgsc3RyZWFtKX19fXJldHVybiBmdW5jdGlvbihzdHJlYW0pe3ZhciBsYW1iZGEwMCx4MDAseTAwLGEwMCxiMDAsYzAwLC8vIGZpcnN0IHBvaW50CmxhbWJkYTAseDAseTAsYTAsYjAsYzA7Ly8gcHJldmlvdXMgcG9pbnQKdmFyIHJlc2FtcGxlU3RyZWFtPXtwb2ludDpwb2ludCxsaW5lU3RhcnQ6bGluZVN0YXJ0LGxpbmVFbmQ6bGluZUVuZCxwb2x5Z29uU3RhcnQ6ZnVuY3Rpb24oKXtzdHJlYW0ucG9seWdvblN0YXJ0KCk7cmVzYW1wbGVTdHJlYW0ubGluZVN0YXJ0PXJpbmdTdGFydH0scG9seWdvbkVuZDpmdW5jdGlvbigpe3N0cmVhbS5wb2x5Z29uRW5kKCk7cmVzYW1wbGVTdHJlYW0ubGluZVN0YXJ0PWxpbmVTdGFydH19O2Z1bmN0aW9uIHBvaW50KHgseSl7eD1wcm9qZWN0KHgseSk7c3RyZWFtLnBvaW50KHhbMF0seFsxXSl9ZnVuY3Rpb24gbGluZVN0YXJ0KCl7eDA9TmFOO3Jlc2FtcGxlU3RyZWFtLnBvaW50PWxpbmVQb2ludDtzdHJlYW0ubGluZVN0YXJ0KCl9ZnVuY3Rpb24gbGluZVBvaW50KGxhbWJkYSxwaGkpe3ZhciBjPWNhcnRlc2lhbihbbGFtYmRhLHBoaV0pLHA9cHJvamVjdChsYW1iZGEscGhpKTtyZXNhbXBsZUxpbmVUbyh4MCx5MCxsYW1iZGEwLGEwLGIwLGMwLHgwPXBbMF0seTA9cFsxXSxsYW1iZGEwPWxhbWJkYSxhMD1jWzBdLGIwPWNbMV0sYzA9Y1syXSxtYXhEZXB0aCxzdHJlYW0pO3N0cmVhbS5wb2ludCh4MCx5MCl9ZnVuY3Rpb24gbGluZUVuZCgpe3Jlc2FtcGxlU3RyZWFtLnBvaW50PXBvaW50O3N0cmVhbS5saW5lRW5kKCl9ZnVuY3Rpb24gcmluZ1N0YXJ0KCl7bGluZVN0YXJ0KCk7cmVzYW1wbGVTdHJlYW0ucG9pbnQ9cmluZ1BvaW50O3Jlc2FtcGxlU3RyZWFtLmxpbmVFbmQ9cmluZ0VuZH1mdW5jdGlvbiByaW5nUG9pbnQobGFtYmRhLHBoaSl7bGluZVBvaW50KGxhbWJkYTAwPWxhbWJkYSxwaGkpLHgwMD14MCx5MDA9eTAsYTAwPWEwLGIwMD1iMCxjMDA9YzA7cmVzYW1wbGVTdHJlYW0ucG9pbnQ9bGluZVBvaW50fWZ1bmN0aW9uIHJpbmdFbmQoKXtyZXNhbXBsZUxpbmVUbyh4MCx5MCxsYW1iZGEwLGEwLGIwLGMwLHgwMCx5MDAsbGFtYmRhMDAsYTAwLGIwMCxjMDAsbWF4RGVwdGgsc3RyZWFtKTtyZXNhbXBsZVN0cmVhbS5saW5lRW5kPWxpbmVFbmQ7bGluZUVuZCgpfXJldHVybiByZXNhbXBsZVN0cmVhbX19dmFyIHRyYW5zZm9ybVJhZGlhbnM9dHJhbnNmb3JtZXIoe3BvaW50OmZ1bmN0aW9uKHgseSl7dGhpcy5zdHJlYW0ucG9pbnQoeCpyYWRpYW5zLHkqcmFkaWFucyl9fSk7ZnVuY3Rpb24gdHJhbnNmb3JtUm90YXRlKHJvdGF0ZSl7cmV0dXJuIHRyYW5zZm9ybWVyKHtwb2ludDpmdW5jdGlvbih4LHkpe3ZhciByPXJvdGF0ZSh4LHkpO3JldHVybiB0aGlzLnN0cmVhbS5wb2ludChyWzBdLHJbMV0pfX0pfWZ1bmN0aW9uIHNjYWxlVHJhbnNsYXRlKGssZHgsZHkpe2Z1bmN0aW9uIHRyYW5zZm9ybSh4LHkpe3JldHVybltkeCtrKngsZHktayp5XX10cmFuc2Zvcm0uaW52ZXJ0PWZ1bmN0aW9uKHgseSl7cmV0dXJuWyh4LWR4KS9rLChkeS15KS9rXX07cmV0dXJuIHRyYW5zZm9ybX1mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZVJvdGF0ZShrLGR4LGR5LGFscGhhKXt2YXIgY29zQWxwaGE9Y29zKGFscGhhKSxzaW5BbHBoYT1zaW4oYWxwaGEpLGE9Y29zQWxwaGEqayxiPXNpbkFscGhhKmssYWk9Y29zQWxwaGEvayxiaT1zaW5BbHBoYS9rLGNpPShzaW5BbHBoYSpkeS1jb3NBbHBoYSpkeCkvayxmaT0oc2luQWxwaGEqZHgrY29zQWxwaGEqZHkpL2s7ZnVuY3Rpb24gdHJhbnNmb3JtKHgseSl7cmV0dXJuW2EqeC1iKnkrZHgsZHktYip4LWEqeV19dHJhbnNmb3JtLmludmVydD1mdW5jdGlvbih4LHkpe3JldHVyblthaSp4LWJpKnkrY2ksZmktYmkqeC1haSp5XX07cmV0dXJuIHRyYW5zZm9ybX1mdW5jdGlvbiBwcm9qZWN0aW9uKHByb2plY3Qpe3JldHVybiBwcm9qZWN0aW9uTXV0YXRvcihmdW5jdGlvbigpe3JldHVybiBwcm9qZWN0fSkoKX1mdW5jdGlvbiBwcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpe3ZhciBwcm9qZWN0LGs9MTUwLC8vIHNjYWxlCng9NDgwLHk9MjUwLC8vIHRyYW5zbGF0ZQpsYW1iZGE9MCxwaGk9MCwvLyBjZW50ZXIKZGVsdGFMYW1iZGE9MCxkZWx0YVBoaT0wLGRlbHRhR2FtbWE9MCxyb3RhdGUsLy8gcHJlLXJvdGF0ZQphbHBoYT0wLC8vIHBvc3Qtcm90YXRlCnRoZXRhPW51bGwscHJlY2xpcD1jbGlwQW50aW1lcmlkaWFuLC8vIHByZS1jbGlwIGFuZ2xlCngwPW51bGwseTAseDEseTEscG9zdGNsaXA9aWRlbnRpdHksLy8gcG9zdC1jbGlwIGV4dGVudApkZWx0YTI9LjUsLy8gcHJlY2lzaW9uCnByb2plY3RSZXNhbXBsZSxwcm9qZWN0VHJhbnNmb3JtLHByb2plY3RSb3RhdGVUcmFuc2Zvcm0sY2FjaGUsY2FjaGVTdHJlYW07ZnVuY3Rpb24gcHJvamVjdGlvbihwb2ludCl7cmV0dXJuIHByb2plY3RSb3RhdGVUcmFuc2Zvcm0ocG9pbnRbMF0qcmFkaWFucyxwb2ludFsxXSpyYWRpYW5zKX1mdW5jdGlvbiBpbnZlcnQocG9pbnQpe3BvaW50PXByb2plY3RSb3RhdGVUcmFuc2Zvcm0uaW52ZXJ0KHBvaW50WzBdLHBvaW50WzFdKTtyZXR1cm4gcG9pbnQmJltwb2ludFswXSpkZWdyZWVzLHBvaW50WzFdKmRlZ3JlZXNdfXByb2plY3Rpb24uc3RyZWFtPWZ1bmN0aW9uKHN0cmVhbSl7cmV0dXJuIGNhY2hlJiZjYWNoZVN0cmVhbT09PXN0cmVhbT9jYWNoZTpjYWNoZT10cmFuc2Zvcm1SYWRpYW5zKHRyYW5zZm9ybVJvdGF0ZShyb3RhdGUpKHByZWNsaXAocHJvamVjdFJlc2FtcGxlKHBvc3RjbGlwKGNhY2hlU3RyZWFtPXN0cmVhbSkpKSkpfTtwcm9qZWN0aW9uLnByZWNsaXA9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHByZWNsaXA9Xyx0aGV0YT11bmRlZmluZWQscmVzZXQoKSk6cHJlY2xpcH07cHJvamVjdGlvbi5wb3N0Y2xpcD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocG9zdGNsaXA9Xyx4MD15MD14MT15MT1udWxsLHJlc2V0KCkpOnBvc3RjbGlwfTtwcm9qZWN0aW9uLmNsaXBBbmdsZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocHJlY2xpcD0rXz9jbGlwQ2lyY2xlKHRoZXRhPV8qcmFkaWFucyk6KHRoZXRhPW51bGwsY2xpcEFudGltZXJpZGlhbikscmVzZXQoKSk6dGhldGEqZGVncmVlc307cHJvamVjdGlvbi5jbGlwRXh0ZW50PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwb3N0Y2xpcD1fPT1udWxsPyh4MD15MD14MT15MT1udWxsLGlkZW50aXR5KTpjbGlwUmVjdGFuZ2xlKHgwPStfWzBdWzBdLHkwPStfWzBdWzFdLHgxPStfWzFdWzBdLHkxPStfWzFdWzFdKSxyZXNldCgpKTp4MD09bnVsbD9udWxsOltbeDAseTBdLFt4MSx5MV1dfTtwcm9qZWN0aW9uLnNjYWxlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhrPStfLHJlY2VudGVyKCkpOmt9O3Byb2plY3Rpb24udHJhbnNsYXRlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4PStfWzBdLHk9K19bMV0scmVjZW50ZXIoKSk6W3gseV19O3Byb2plY3Rpb24uY2VudGVyPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhsYW1iZGE9X1swXSUzNjAqcmFkaWFucyxwaGk9X1sxXSUzNjAqcmFkaWFucyxyZWNlbnRlcigpKTpbbGFtYmRhKmRlZ3JlZXMscGhpKmRlZ3JlZXNdfTtwcm9qZWN0aW9uLnJvdGF0ZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZGVsdGFMYW1iZGE9X1swXSUzNjAqcmFkaWFucyxkZWx0YVBoaT1fWzFdJTM2MCpyYWRpYW5zLGRlbHRhR2FtbWE9Xy5sZW5ndGg+Mj9fWzJdJTM2MCpyYWRpYW5zOjAscmVjZW50ZXIoKSk6W2RlbHRhTGFtYmRhKmRlZ3JlZXMsZGVsdGFQaGkqZGVncmVlcyxkZWx0YUdhbW1hKmRlZ3JlZXNdfTtwcm9qZWN0aW9uLmFuZ2xlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhbHBoYT1fJTM2MCpyYWRpYW5zLHJlY2VudGVyKCkpOmFscGhhKmRlZ3JlZXN9O3Byb2plY3Rpb24ucHJlY2lzaW9uPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwcm9qZWN0UmVzYW1wbGU9cmVzYW1wbGUocHJvamVjdFRyYW5zZm9ybSxkZWx0YTI9XypfKSxyZXNldCgpKTpzcXJ0KGRlbHRhMil9O3Byb2plY3Rpb24uZml0RXh0ZW50PWZ1bmN0aW9uKGV4dGVudCxvYmplY3Qpe3JldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbixleHRlbnQsb2JqZWN0KX07cHJvamVjdGlvbi5maXRTaXplPWZ1bmN0aW9uKHNpemUsb2JqZWN0KXtyZXR1cm4gZml0U2l6ZShwcm9qZWN0aW9uLHNpemUsb2JqZWN0KX07cHJvamVjdGlvbi5maXRXaWR0aD1mdW5jdGlvbih3aWR0aCxvYmplY3Qpe3JldHVybiBmaXRXaWR0aChwcm9qZWN0aW9uLHdpZHRoLG9iamVjdCl9O3Byb2plY3Rpb24uZml0SGVpZ2h0PWZ1bmN0aW9uKGhlaWdodCxvYmplY3Qpe3JldHVybiBmaXRIZWlnaHQocHJvamVjdGlvbixoZWlnaHQsb2JqZWN0KX07ZnVuY3Rpb24gcmVjZW50ZXIoKXt2YXIgY2VudGVyPXNjYWxlVHJhbnNsYXRlUm90YXRlKGssMCwwLGFscGhhKS5hcHBseShudWxsLHByb2plY3QobGFtYmRhLHBoaSkpLHRyYW5zZm9ybT0oYWxwaGE/c2NhbGVUcmFuc2xhdGVSb3RhdGU6c2NhbGVUcmFuc2xhdGUpKGsseC1jZW50ZXJbMF0seS1jZW50ZXJbMV0sYWxwaGEpO3JvdGF0ZT1yb3RhdGVSYWRpYW5zKGRlbHRhTGFtYmRhLGRlbHRhUGhpLGRlbHRhR2FtbWEpO3Byb2plY3RUcmFuc2Zvcm09Y29tcG9zZShwcm9qZWN0LHRyYW5zZm9ybSk7cHJvamVjdFJvdGF0ZVRyYW5zZm9ybT1jb21wb3NlKHJvdGF0ZSxwcm9qZWN0VHJhbnNmb3JtKTtwcm9qZWN0UmVzYW1wbGU9cmVzYW1wbGUocHJvamVjdFRyYW5zZm9ybSxkZWx0YTIpO3JldHVybiByZXNldCgpfWZ1bmN0aW9uIHJlc2V0KCl7Y2FjaGU9Y2FjaGVTdHJlYW09bnVsbDtyZXR1cm4gcHJvamVjdGlvbn1yZXR1cm4gZnVuY3Rpb24oKXtwcm9qZWN0PXByb2plY3RBdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cHJvamVjdGlvbi5pbnZlcnQ9cHJvamVjdC5pbnZlcnQmJmludmVydDtyZXR1cm4gcmVjZW50ZXIoKX19ZnVuY3Rpb24gY29uaWNQcm9qZWN0aW9uKHByb2plY3RBdCl7dmFyIHBoaTA9MCxwaGkxPXBpLzMsbT1wcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpLHA9bShwaGkwLHBoaTEpO3AucGFyYWxsZWxzPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP20ocGhpMD1fWzBdKnJhZGlhbnMscGhpMT1fWzFdKnJhZGlhbnMpOltwaGkwKmRlZ3JlZXMscGhpMSpkZWdyZWVzXX07cmV0dXJuIHB9ZnVuY3Rpb24gY3lsaW5kcmljYWxFcXVhbEFyZWFSYXcocGhpMCl7dmFyIGNvc1BoaTA9Y29zKHBoaTApO2Z1bmN0aW9uIGZvcndhcmQobGFtYmRhLHBoaSl7cmV0dXJuW2xhbWJkYSpjb3NQaGkwLHNpbihwaGkpL2Nvc1BoaTBdfWZvcndhcmQuaW52ZXJ0PWZ1bmN0aW9uKHgseSl7cmV0dXJuW3gvY29zUGhpMCxhc2luKHkqY29zUGhpMCldfTtyZXR1cm4gZm9yd2FyZH1mdW5jdGlvbiBjb25pY0VxdWFsQXJlYVJhdyh5MCx5MSl7dmFyIHN5MD1zaW4oeTApLG49KHN5MCtzaW4oeTEpKS8yOwovLyBBcmUgdGhlIHBhcmFsbGVscyBzeW1tZXRyaWNhbCBhcm91bmQgdGhlIEVxdWF0b3I/CmlmKGFicyhuKTxlcHNpbG9uKXJldHVybiBjeWxpbmRyaWNhbEVxdWFsQXJlYVJhdyh5MCk7dmFyIGM9MStzeTAqKDIqbi1zeTApLHIwPXNxcnQoYykvbjtmdW5jdGlvbiBwcm9qZWN0KHgseSl7dmFyIHI9c3FydChjLTIqbipzaW4oeSkpL247cmV0dXJuW3Iqc2luKHgqPW4pLHIwLXIqY29zKHgpXX1wcm9qZWN0LmludmVydD1mdW5jdGlvbih4LHkpe3ZhciByMHk9cjAteTtyZXR1cm5bYXRhbjIoeCxhYnMocjB5KSkvbipzaWduKHIweSksYXNpbigoYy0oeCp4K3IweSpyMHkpKm4qbikvKDIqbikpXX07cmV0dXJuIHByb2plY3R9ZnVuY3Rpb24gY29uaWNFcXVhbEFyZWEoKXtyZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljRXF1YWxBcmVhUmF3KS5zY2FsZSgxNTUuNDI0KS5jZW50ZXIoWzAsMzMuNjQ0Ml0pfWZ1bmN0aW9uIGFsYmVycygpe3JldHVybiBjb25pY0VxdWFsQXJlYSgpLnBhcmFsbGVscyhbMjkuNSw0NS41XSkuc2NhbGUoMTA3MCkudHJhbnNsYXRlKFs0ODAsMjUwXSkucm90YXRlKFs5NiwwXSkuY2VudGVyKFstLjYsMzguN10pfQovLyBUaGUgcHJvamVjdGlvbnMgbXVzdCBoYXZlIG11dHVhbGx5IGV4Y2x1c2l2ZSBjbGlwIHJlZ2lvbnMgb24gdGhlIHNwaGVyZSwKLy8gYXMgdGhpcyB3aWxsIGF2b2lkIGVtaXR0aW5nIGludGVybGVhdmluZyBsaW5lcyBhbmQgcG9seWdvbnMuCmZ1bmN0aW9uIG11bHRpcGxleChzdHJlYW1zKXt2YXIgbj1zdHJlYW1zLmxlbmd0aDtyZXR1cm57cG9pbnQ6ZnVuY3Rpb24oeCx5KXt2YXIgaT0tMTt3aGlsZSgrK2k8bilzdHJlYW1zW2ldLnBvaW50KHgseSl9LHNwaGVyZTpmdW5jdGlvbigpe3ZhciBpPS0xO3doaWxlKCsraTxuKXN0cmVhbXNbaV0uc3BoZXJlKCl9LGxpbmVTdGFydDpmdW5jdGlvbigpe3ZhciBpPS0xO3doaWxlKCsraTxuKXN0cmVhbXNbaV0ubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXt2YXIgaT0tMTt3aGlsZSgrK2k8bilzdHJlYW1zW2ldLmxpbmVFbmQoKX0scG9seWdvblN0YXJ0OmZ1bmN0aW9uKCl7dmFyIGk9LTE7d2hpbGUoKytpPG4pc3RyZWFtc1tpXS5wb2x5Z29uU3RhcnQoKX0scG9seWdvbkVuZDpmdW5jdGlvbigpe3ZhciBpPS0xO3doaWxlKCsraTxuKXN0cmVhbXNbaV0ucG9seWdvbkVuZCgpfX19Ci8vIEEgY29tcG9zaXRlIHByb2plY3Rpb24gZm9yIHRoZSBVbml0ZWQgU3RhdGVzLCBjb25maWd1cmVkIGJ5IGRlZmF1bHQgZm9yCi8vIDk2MMOXNTAwLiBUaGUgcHJvamVjdGlvbiBhbHNvIHdvcmtzIHF1aXRlIHdlbGwgYXQgOTYww5c2MDAgaWYgeW91IGNoYW5nZSB0aGUKLy8gc2NhbGUgdG8gMTI4NSBhbmQgYWRqdXN0IHRoZSB0cmFuc2xhdGUgYWNjb3JkaW5nbHkuIFRoZSBzZXQgb2Ygc3RhbmRhcmQKLy8gcGFyYWxsZWxzIGZvciBlYWNoIHJlZ2lvbiBjb21lcyBmcm9tIFVTR1MsIHdoaWNoIGlzIHB1Ymxpc2hlZCBoZXJlOgovLyBodHRwOi8vZWdzYy51c2dzLmdvdi9pc2IvcHVicy9NYXBQcm9qZWN0aW9ucy9wcm9qZWN0aW9ucy5odG1sI2FsYmVycwpmdW5jdGlvbiBhbGJlcnNVc2EoKXt2YXIgY2FjaGUsY2FjaGVTdHJlYW0sbG93ZXI0OD1hbGJlcnMoKSxsb3dlcjQ4UG9pbnQsYWxhc2thPWNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsxNTQsMF0pLmNlbnRlcihbLTIsNTguNV0pLnBhcmFsbGVscyhbNTUsNjVdKSxhbGFza2FQb2ludCwvLyBFUFNHOjMzMzgKaGF3YWlpPWNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsxNTcsMF0pLmNlbnRlcihbLTMsMTkuOV0pLnBhcmFsbGVscyhbOCwxOF0pLGhhd2FpaVBvaW50LC8vIEVTUkk6MTAyMDA3CnBvaW50LHBvaW50U3RyZWFtPXtwb2ludDpmdW5jdGlvbih4LHkpe3BvaW50PVt4LHldfX07ZnVuY3Rpb24gYWxiZXJzVXNhKGNvb3JkaW5hdGVzKXt2YXIgeD1jb29yZGluYXRlc1swXSx5PWNvb3JkaW5hdGVzWzFdO3JldHVybiBwb2ludD1udWxsLChsb3dlcjQ4UG9pbnQucG9pbnQoeCx5KSxwb2ludCl8fChhbGFza2FQb2ludC5wb2ludCh4LHkpLHBvaW50KXx8KGhhd2FpaVBvaW50LnBvaW50KHgseSkscG9pbnQpfWFsYmVyc1VzYS5pbnZlcnQ9ZnVuY3Rpb24oY29vcmRpbmF0ZXMpe3ZhciBrPWxvd2VyNDguc2NhbGUoKSx0PWxvd2VyNDgudHJhbnNsYXRlKCkseD0oY29vcmRpbmF0ZXNbMF0tdFswXSkvayx5PShjb29yZGluYXRlc1sxXS10WzFdKS9rO3JldHVybih5Pj0uMTImJnk8LjIzNCYmeD49LS40MjUmJng8LS4yMTQ/YWxhc2thOnk+PS4xNjYmJnk8LjIzNCYmeD49LS4yMTQmJng8LS4xMTU/aGF3YWlpOmxvd2VyNDgpLmludmVydChjb29yZGluYXRlcyl9O2FsYmVyc1VzYS5zdHJlYW09ZnVuY3Rpb24oc3RyZWFtKXtyZXR1cm4gY2FjaGUmJmNhY2hlU3RyZWFtPT09c3RyZWFtP2NhY2hlOmNhY2hlPW11bHRpcGxleChbbG93ZXI0OC5zdHJlYW0oY2FjaGVTdHJlYW09c3RyZWFtKSxhbGFza2Euc3RyZWFtKHN0cmVhbSksaGF3YWlpLnN0cmVhbShzdHJlYW0pXSl9O2FsYmVyc1VzYS5wcmVjaXNpb249ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGxvd2VyNDgucHJlY2lzaW9uKCk7bG93ZXI0OC5wcmVjaXNpb24oXyksYWxhc2thLnByZWNpc2lvbihfKSxoYXdhaWkucHJlY2lzaW9uKF8pO3JldHVybiByZXNldCgpfTthbGJlcnNVc2Euc2NhbGU9ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGxvd2VyNDguc2NhbGUoKTtsb3dlcjQ4LnNjYWxlKF8pLGFsYXNrYS5zY2FsZShfKi4zNSksaGF3YWlpLnNjYWxlKF8pO3JldHVybiBhbGJlcnNVc2EudHJhbnNsYXRlKGxvd2VyNDgudHJhbnNsYXRlKCkpfTthbGJlcnNVc2EudHJhbnNsYXRlPWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBsb3dlcjQ4LnRyYW5zbGF0ZSgpO3ZhciBrPWxvd2VyNDguc2NhbGUoKSx4PStfWzBdLHk9K19bMV07bG93ZXI0OFBvaW50PWxvd2VyNDgudHJhbnNsYXRlKF8pLmNsaXBFeHRlbnQoW1t4LS40NTUqayx5LS4yMzgqa10sW3grLjQ1NSprLHkrLjIzOCprXV0pLnN0cmVhbShwb2ludFN0cmVhbSk7YWxhc2thUG9pbnQ9YWxhc2thLnRyYW5zbGF0ZShbeC0uMzA3KmsseSsuMjAxKmtdKS5jbGlwRXh0ZW50KFtbeC0uNDI1KmsrZXBzaWxvbix5Ky4xMiprK2Vwc2lsb25dLFt4LS4yMTQqay1lcHNpbG9uLHkrLjIzNCprLWVwc2lsb25dXSkuc3RyZWFtKHBvaW50U3RyZWFtKTtoYXdhaWlQb2ludD1oYXdhaWkudHJhbnNsYXRlKFt4LS4yMDUqayx5Ky4yMTIqa10pLmNsaXBFeHRlbnQoW1t4LS4yMTQqaytlcHNpbG9uLHkrLjE2NiprK2Vwc2lsb25dLFt4LS4xMTUqay1lcHNpbG9uLHkrLjIzNCprLWVwc2lsb25dXSkuc3RyZWFtKHBvaW50U3RyZWFtKTtyZXR1cm4gcmVzZXQoKX07YWxiZXJzVXNhLmZpdEV4dGVudD1mdW5jdGlvbihleHRlbnQsb2JqZWN0KXtyZXR1cm4gZml0RXh0ZW50KGFsYmVyc1VzYSxleHRlbnQsb2JqZWN0KX07YWxiZXJzVXNhLmZpdFNpemU9ZnVuY3Rpb24oc2l6ZSxvYmplY3Qpe3JldHVybiBmaXRTaXplKGFsYmVyc1VzYSxzaXplLG9iamVjdCl9O2FsYmVyc1VzYS5maXRXaWR0aD1mdW5jdGlvbih3aWR0aCxvYmplY3Qpe3JldHVybiBmaXRXaWR0aChhbGJlcnNVc2Esd2lkdGgsb2JqZWN0KX07YWxiZXJzVXNhLmZpdEhlaWdodD1mdW5jdGlvbihoZWlnaHQsb2JqZWN0KXtyZXR1cm4gZml0SGVpZ2h0KGFsYmVyc1VzYSxoZWlnaHQsb2JqZWN0KX07ZnVuY3Rpb24gcmVzZXQoKXtjYWNoZT1jYWNoZVN0cmVhbT1udWxsO3JldHVybiBhbGJlcnNVc2F9cmV0dXJuIGFsYmVyc1VzYS5zY2FsZSgxMDcwKX1mdW5jdGlvbiBhemltdXRoYWxSYXcoc2NhbGUpe3JldHVybiBmdW5jdGlvbih4LHkpe3ZhciBjeD1jb3MoeCksY3k9Y29zKHkpLGs9c2NhbGUoY3gqY3kpO3JldHVybltrKmN5KnNpbih4KSxrKnNpbih5KV19fWZ1bmN0aW9uIGF6aW11dGhhbEludmVydChhbmdsZSl7cmV0dXJuIGZ1bmN0aW9uKHgseSl7dmFyIHo9c3FydCh4KngreSp5KSxjPWFuZ2xlKHopLHNjPXNpbihjKSxjYz1jb3MoYyk7cmV0dXJuW2F0YW4yKHgqc2MseipjYyksYXNpbih6JiZ5KnNjL3opXX19dmFyIGF6aW11dGhhbEVxdWFsQXJlYVJhdz1hemltdXRoYWxSYXcoZnVuY3Rpb24oY3hjeSl7cmV0dXJuIHNxcnQoMi8oMStjeGN5KSl9KTthemltdXRoYWxFcXVhbEFyZWFSYXcuaW52ZXJ0PWF6aW11dGhhbEludmVydChmdW5jdGlvbih6KXtyZXR1cm4gMiphc2luKHovMil9KTtmdW5jdGlvbiBhemltdXRoYWxFcXVhbEFyZWEoKXtyZXR1cm4gcHJvamVjdGlvbihhemltdXRoYWxFcXVhbEFyZWFSYXcpLnNjYWxlKDEyNC43NSkuY2xpcEFuZ2xlKDE4MC0uMDAxKX12YXIgYXppbXV0aGFsRXF1aWRpc3RhbnRSYXc9YXppbXV0aGFsUmF3KGZ1bmN0aW9uKGMpe3JldHVybihjPWFjb3MoYykpJiZjL3NpbihjKX0pO2F6aW11dGhhbEVxdWlkaXN0YW50UmF3LmludmVydD1hemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeil7cmV0dXJuIHp9KTtmdW5jdGlvbiBhemltdXRoYWxFcXVpZGlzdGFudCgpe3JldHVybiBwcm9qZWN0aW9uKGF6aW11dGhhbEVxdWlkaXN0YW50UmF3KS5zY2FsZSg3OS40MTg4KS5jbGlwQW5nbGUoMTgwLS4wMDEpfWZ1bmN0aW9uIG1lcmNhdG9yUmF3KGxhbWJkYSxwaGkpe3JldHVybltsYW1iZGEsbG9nKHRhbigoaGFsZlBpK3BoaSkvMikpXX1tZXJjYXRvclJhdy5pbnZlcnQ9ZnVuY3Rpb24oeCx5KXtyZXR1cm5beCwyKmF0YW4oZXhwKHkpKS1oYWxmUGldfTtmdW5jdGlvbiBtZXJjYXRvcigpe3JldHVybiBtZXJjYXRvclByb2plY3Rpb24obWVyY2F0b3JSYXcpLnNjYWxlKDk2MS90YXUpfWZ1bmN0aW9uIG1lcmNhdG9yUHJvamVjdGlvbihwcm9qZWN0KXt2YXIgbT1wcm9qZWN0aW9uKHByb2plY3QpLGNlbnRlcj1tLmNlbnRlcixzY2FsZT1tLnNjYWxlLHRyYW5zbGF0ZT1tLnRyYW5zbGF0ZSxjbGlwRXh0ZW50PW0uY2xpcEV4dGVudCx4MD1udWxsLHkwLHgxLHkxOy8vIGNsaXAgZXh0ZW50Cm0uc2NhbGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHNjYWxlKF8pLHJlY2xpcCgpKTpzY2FsZSgpfTttLnRyYW5zbGF0ZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odHJhbnNsYXRlKF8pLHJlY2xpcCgpKTp0cmFuc2xhdGUoKX07bS5jZW50ZXI9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGNlbnRlcihfKSxyZWNsaXAoKSk6Y2VudGVyKCl9O20uY2xpcEV4dGVudD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oXz09bnVsbD94MD15MD14MT15MT1udWxsOih4MD0rX1swXVswXSx5MD0rX1swXVsxXSx4MT0rX1sxXVswXSx5MT0rX1sxXVsxXSkscmVjbGlwKCkpOngwPT1udWxsP251bGw6W1t4MCx5MF0sW3gxLHkxXV19O2Z1bmN0aW9uIHJlY2xpcCgpe3ZhciBrPXBpKnNjYWxlKCksdD1tKHJvdGF0aW9uKG0ucm90YXRlKCkpLmludmVydChbMCwwXSkpO3JldHVybiBjbGlwRXh0ZW50KHgwPT1udWxsP1tbdFswXS1rLHRbMV0ta10sW3RbMF0rayx0WzFdK2tdXTpwcm9qZWN0PT09bWVyY2F0b3JSYXc/W1tNYXRoLm1heCh0WzBdLWsseDApLHkwXSxbTWF0aC5taW4odFswXStrLHgxKSx5MV1dOltbeDAsTWF0aC5tYXgodFsxXS1rLHkwKV0sW3gxLE1hdGgubWluKHRbMV0rayx5MSldXSl9cmV0dXJuIHJlY2xpcCgpfWZ1bmN0aW9uIHRhbnkoeSl7cmV0dXJuIHRhbigoaGFsZlBpK3kpLzIpfWZ1bmN0aW9uIGNvbmljQ29uZm9ybWFsUmF3KHkwLHkxKXt2YXIgY3kwPWNvcyh5MCksbj15MD09PXkxP3Npbih5MCk6bG9nKGN5MC9jb3MoeTEpKS9sb2codGFueSh5MSkvdGFueSh5MCkpLGY9Y3kwKnBvdyh0YW55KHkwKSxuKS9uO2lmKCFuKXJldHVybiBtZXJjYXRvclJhdztmdW5jdGlvbiBwcm9qZWN0KHgseSl7aWYoZj4wKXtpZih5PC1oYWxmUGkrZXBzaWxvbil5PS1oYWxmUGkrZXBzaWxvbn1lbHNle2lmKHk+aGFsZlBpLWVwc2lsb24peT1oYWxmUGktZXBzaWxvbn12YXIgcj1mL3Bvdyh0YW55KHkpLG4pO3JldHVybltyKnNpbihuKngpLGYtcipjb3Mobip4KV19cHJvamVjdC5pbnZlcnQ9ZnVuY3Rpb24oeCx5KXt2YXIgZnk9Zi15LHI9c2lnbihuKSpzcXJ0KHgqeCtmeSpmeSk7cmV0dXJuW2F0YW4yKHgsYWJzKGZ5KSkvbipzaWduKGZ5KSwyKmF0YW4ocG93KGYvciwxL24pKS1oYWxmUGldfTtyZXR1cm4gcHJvamVjdH1mdW5jdGlvbiBjb25pY0NvbmZvcm1hbCgpe3JldHVybiBjb25pY1Byb2plY3Rpb24oY29uaWNDb25mb3JtYWxSYXcpLnNjYWxlKDEwOS41KS5wYXJhbGxlbHMoWzMwLDMwXSl9ZnVuY3Rpb24gZXF1aXJlY3Rhbmd1bGFyUmF3KGxhbWJkYSxwaGkpe3JldHVybltsYW1iZGEscGhpXX1lcXVpcmVjdGFuZ3VsYXJSYXcuaW52ZXJ0PWVxdWlyZWN0YW5ndWxhclJhdztmdW5jdGlvbiBlcXVpcmVjdGFuZ3VsYXIoKXtyZXR1cm4gcHJvamVjdGlvbihlcXVpcmVjdGFuZ3VsYXJSYXcpLnNjYWxlKDE1Mi42Myl9ZnVuY3Rpb24gY29uaWNFcXVpZGlzdGFudFJhdyh5MCx5MSl7dmFyIGN5MD1jb3MoeTApLG49eTA9PT15MT9zaW4oeTApOihjeTAtY29zKHkxKSkvKHkxLXkwKSxnPWN5MC9uK3kwO2lmKGFicyhuKTxlcHNpbG9uKXJldHVybiBlcXVpcmVjdGFuZ3VsYXJSYXc7ZnVuY3Rpb24gcHJvamVjdCh4LHkpe3ZhciBneT1nLXksbng9bip4O3JldHVybltneSpzaW4obngpLGctZ3kqY29zKG54KV19cHJvamVjdC5pbnZlcnQ9ZnVuY3Rpb24oeCx5KXt2YXIgZ3k9Zy15O3JldHVyblthdGFuMih4LGFicyhneSkpL24qc2lnbihneSksZy1zaWduKG4pKnNxcnQoeCp4K2d5Kmd5KV19O3JldHVybiBwcm9qZWN0fWZ1bmN0aW9uIGNvbmljRXF1aWRpc3RhbnQoKXtyZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljRXF1aWRpc3RhbnRSYXcpLnNjYWxlKDEzMS4xNTQpLmNlbnRlcihbMCwxMy45Mzg5XSl9dmFyIEExPTEuMzQwMjY0LEEyPS0uMDgxMTA2LEEzPTg5M2UtNixBND0uMDAzNzk2LE09c3FydCgzKS8yLGl0ZXJhdGlvbnM9MTI7ZnVuY3Rpb24gZXF1YWxFYXJ0aFJhdyhsYW1iZGEscGhpKXt2YXIgbD1hc2luKE0qc2luKHBoaSkpLGwyPWwqbCxsNj1sMipsMipsMjtyZXR1cm5bbGFtYmRhKmNvcyhsKS8oTSooQTErMypBMipsMitsNiooNypBMys5KkE0KmwyKSkpLGwqKEExK0EyKmwyK2w2KihBMytBNCpsMikpXX1lcXVhbEVhcnRoUmF3LmludmVydD1mdW5jdGlvbih4LHkpe3ZhciBsPXksbDI9bCpsLGw2PWwyKmwyKmwyO2Zvcih2YXIgaT0wLGRlbHRhLGZ5LGZweTtpPGl0ZXJhdGlvbnM7KytpKXtmeT1sKihBMStBMipsMitsNiooQTMrQTQqbDIpKS15O2ZweT1BMSszKkEyKmwyK2w2Kig3KkEzKzkqQTQqbDIpO2wtPWRlbHRhPWZ5L2ZweSxsMj1sKmwsbDY9bDIqbDIqbDI7aWYoYWJzKGRlbHRhKTxlcHNpbG9uMilicmVha31yZXR1cm5bTSp4KihBMSszKkEyKmwyK2w2Kig3KkEzKzkqQTQqbDIpKS9jb3MobCksYXNpbihzaW4obCkvTSldfTtmdW5jdGlvbiBlcXVhbEVhcnRoKCl7cmV0dXJuIHByb2plY3Rpb24oZXF1YWxFYXJ0aFJhdykuc2NhbGUoMTc3LjE1OCl9ZnVuY3Rpb24gZ25vbW9uaWNSYXcoeCx5KXt2YXIgY3k9Y29zKHkpLGs9Y29zKHgpKmN5O3JldHVybltjeSpzaW4oeCkvayxzaW4oeSkva119Z25vbW9uaWNSYXcuaW52ZXJ0PWF6aW11dGhhbEludmVydChhdGFuKTtmdW5jdGlvbiBnbm9tb25pYygpe3JldHVybiBwcm9qZWN0aW9uKGdub21vbmljUmF3KS5zY2FsZSgxNDQuMDQ5KS5jbGlwQW5nbGUoNjApfWZ1bmN0aW9uIHNjYWxlVHJhbnNsYXRlJDEoa3gsa3ksdHgsdHkpe3JldHVybiBreD09PTEmJmt5PT09MSYmdHg9PT0wJiZ0eT09PTA/aWRlbnRpdHk6dHJhbnNmb3JtZXIoe3BvaW50OmZ1bmN0aW9uKHgseSl7dGhpcy5zdHJlYW0ucG9pbnQoeCpreCt0eCx5Kmt5K3R5KX19KX1mdW5jdGlvbiBpZGVudGl0eSQxKCl7dmFyIGs9MSx0eD0wLHR5PTAsc3g9MSxzeT0xLHRyYW5zZm9ybT1pZGVudGl0eSwvLyBzY2FsZSwgdHJhbnNsYXRlIGFuZCByZWZsZWN0CngwPW51bGwseTAseDEseTEsLy8gY2xpcCBleHRlbnQKcG9zdGNsaXA9aWRlbnRpdHksY2FjaGUsY2FjaGVTdHJlYW0scHJvamVjdGlvbjtmdW5jdGlvbiByZXNldCgpe2NhY2hlPWNhY2hlU3RyZWFtPW51bGw7cmV0dXJuIHByb2plY3Rpb259cmV0dXJuIHByb2plY3Rpb249e3N0cmVhbTpmdW5jdGlvbihzdHJlYW0pe3JldHVybiBjYWNoZSYmY2FjaGVTdHJlYW09PT1zdHJlYW0/Y2FjaGU6Y2FjaGU9dHJhbnNmb3JtKHBvc3RjbGlwKGNhY2hlU3RyZWFtPXN0cmVhbSkpfSxwb3N0Y2xpcDpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocG9zdGNsaXA9Xyx4MD15MD14MT15MT1udWxsLHJlc2V0KCkpOnBvc3RjbGlwfSxjbGlwRXh0ZW50OmZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwb3N0Y2xpcD1fPT1udWxsPyh4MD15MD14MT15MT1udWxsLGlkZW50aXR5KTpjbGlwUmVjdGFuZ2xlKHgwPStfWzBdWzBdLHkwPStfWzBdWzFdLHgxPStfWzFdWzBdLHkxPStfWzFdWzFdKSxyZXNldCgpKTp4MD09bnVsbD9udWxsOltbeDAseTBdLFt4MSx5MV1dfSxzY2FsZTpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odHJhbnNmb3JtPXNjYWxlVHJhbnNsYXRlJDEoKGs9K18pKnN4LGsqc3ksdHgsdHkpLHJlc2V0KCkpOmt9LHRyYW5zbGF0ZTpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odHJhbnNmb3JtPXNjYWxlVHJhbnNsYXRlJDEoaypzeCxrKnN5LHR4PStfWzBdLHR5PStfWzFdKSxyZXNldCgpKTpbdHgsdHldfSxyZWZsZWN0WDpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odHJhbnNmb3JtPXNjYWxlVHJhbnNsYXRlJDEoayooc3g9Xz8tMToxKSxrKnN5LHR4LHR5KSxyZXNldCgpKTpzeDwwfSxyZWZsZWN0WTpmdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odHJhbnNmb3JtPXNjYWxlVHJhbnNsYXRlJDEoaypzeCxrKihzeT1fPy0xOjEpLHR4LHR5KSxyZXNldCgpKTpzeTwwfSxmaXRFeHRlbnQ6ZnVuY3Rpb24oZXh0ZW50LG9iamVjdCl7cmV0dXJuIGZpdEV4dGVudChwcm9qZWN0aW9uLGV4dGVudCxvYmplY3QpfSxmaXRTaXplOmZ1bmN0aW9uKHNpemUsb2JqZWN0KXtyZXR1cm4gZml0U2l6ZShwcm9qZWN0aW9uLHNpemUsb2JqZWN0KX0sZml0V2lkdGg6ZnVuY3Rpb24od2lkdGgsb2JqZWN0KXtyZXR1cm4gZml0V2lkdGgocHJvamVjdGlvbix3aWR0aCxvYmplY3QpfSxmaXRIZWlnaHQ6ZnVuY3Rpb24oaGVpZ2h0LG9iamVjdCl7cmV0dXJuIGZpdEhlaWdodChwcm9qZWN0aW9uLGhlaWdodCxvYmplY3QpfX19ZnVuY3Rpb24gbmF0dXJhbEVhcnRoMVJhdyhsYW1iZGEscGhpKXt2YXIgcGhpMj1waGkqcGhpLHBoaTQ9cGhpMipwaGkyO3JldHVybltsYW1iZGEqKC44NzA3LS4xMzE5NzkqcGhpMitwaGk0KigtLjAxMzc5MStwaGk0KiguMDAzOTcxKnBoaTItLjAwMTUyOSpwaGk0KSkpLHBoaSooMS4wMDcyMjYrcGhpMiooLjAxNTA4NStwaGk0KigtLjA0NDQ3NSsuMDI4ODc0KnBoaTItLjAwNTkxNipwaGk0KSkpXX1uYXR1cmFsRWFydGgxUmF3LmludmVydD1mdW5jdGlvbih4LHkpe3ZhciBwaGk9eSxpPTI1LGRlbHRhO2Rve3ZhciBwaGkyPXBoaSpwaGkscGhpND1waGkyKnBoaTI7cGhpLT1kZWx0YT0ocGhpKigxLjAwNzIyNitwaGkyKiguMDE1MDg1K3BoaTQqKC0uMDQ0NDc1Ky4wMjg4NzQqcGhpMi0uMDA1OTE2KnBoaTQpKSkteSkvKDEuMDA3MjI2K3BoaTIqKC4wMTUwODUqMytwaGk0KigtLjA0NDQ3NSo3Ky4wMjg4NzQqOSpwaGkyLS4wMDU5MTYqMTEqcGhpNCkpKX13aGlsZShhYnMoZGVsdGEpPmVwc2lsb24mJi0taT4wKTtyZXR1cm5beC8oLjg3MDcrKHBoaTI9cGhpKnBoaSkqKC0uMTMxOTc5K3BoaTIqKC0uMDEzNzkxK3BoaTIqcGhpMipwaGkyKiguMDAzOTcxLS4wMDE1MjkqcGhpMikpKSkscGhpXX07ZnVuY3Rpb24gbmF0dXJhbEVhcnRoMSgpe3JldHVybiBwcm9qZWN0aW9uKG5hdHVyYWxFYXJ0aDFSYXcpLnNjYWxlKDE3NS4yOTUpfWZ1bmN0aW9uIG9ydGhvZ3JhcGhpY1Jhdyh4LHkpe3JldHVybltjb3MoeSkqc2luKHgpLHNpbih5KV19b3J0aG9ncmFwaGljUmF3LmludmVydD1hemltdXRoYWxJbnZlcnQoYXNpbik7ZnVuY3Rpb24gb3J0aG9ncmFwaGljKCl7cmV0dXJuIHByb2plY3Rpb24ob3J0aG9ncmFwaGljUmF3KS5zY2FsZSgyNDkuNSkuY2xpcEFuZ2xlKDkwK2Vwc2lsb24pfWZ1bmN0aW9uIHN0ZXJlb2dyYXBoaWNSYXcoeCx5KXt2YXIgY3k9Y29zKHkpLGs9MStjb3MoeCkqY3k7cmV0dXJuW2N5KnNpbih4KS9rLHNpbih5KS9rXX1zdGVyZW9ncmFwaGljUmF3LmludmVydD1hemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeil7cmV0dXJuIDIqYXRhbih6KX0pO2Z1bmN0aW9uIHN0ZXJlb2dyYXBoaWMoKXtyZXR1cm4gcHJvamVjdGlvbihzdGVyZW9ncmFwaGljUmF3KS5zY2FsZSgyNTApLmNsaXBBbmdsZSgxNDIpfWZ1bmN0aW9uIHRyYW5zdmVyc2VNZXJjYXRvclJhdyhsYW1iZGEscGhpKXtyZXR1cm5bbG9nKHRhbigoaGFsZlBpK3BoaSkvMikpLC1sYW1iZGFdfXRyYW5zdmVyc2VNZXJjYXRvclJhdy5pbnZlcnQ9ZnVuY3Rpb24oeCx5KXtyZXR1cm5bLXksMiphdGFuKGV4cCh4KSktaGFsZlBpXX07ZnVuY3Rpb24gdHJhbnN2ZXJzZU1lcmNhdG9yKCl7dmFyIG09bWVyY2F0b3JQcm9qZWN0aW9uKHRyYW5zdmVyc2VNZXJjYXRvclJhdyksY2VudGVyPW0uY2VudGVyLHJvdGF0ZT1tLnJvdGF0ZTttLmNlbnRlcj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9jZW50ZXIoWy1fWzFdLF9bMF1dKTooXz1jZW50ZXIoKSxbX1sxXSwtX1swXV0pfTttLnJvdGF0ZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9yb3RhdGUoW19bMF0sX1sxXSxfLmxlbmd0aD4yP19bMl0rOTA6OTBdKTooXz1yb3RhdGUoKSxbX1swXSxfWzFdLF9bMl0tOTBdKX07cmV0dXJuIHJvdGF0ZShbMCwwLDkwXSkuc2NhbGUoMTU5LjE1NSl9ZXhwb3J0cy5nZW9BbGJlcnM9YWxiZXJzO2V4cG9ydHMuZ2VvQWxiZXJzVXNhPWFsYmVyc1VzYTtleHBvcnRzLmdlb0FyZWE9YXJlYTtleHBvcnRzLmdlb0F6aW11dGhhbEVxdWFsQXJlYT1hemltdXRoYWxFcXVhbEFyZWE7ZXhwb3J0cy5nZW9BemltdXRoYWxFcXVhbEFyZWFSYXc9YXppbXV0aGFsRXF1YWxBcmVhUmF3O2V4cG9ydHMuZ2VvQXppbXV0aGFsRXF1aWRpc3RhbnQ9YXppbXV0aGFsRXF1aWRpc3RhbnQ7ZXhwb3J0cy5nZW9BemltdXRoYWxFcXVpZGlzdGFudFJhdz1hemltdXRoYWxFcXVpZGlzdGFudFJhdztleHBvcnRzLmdlb0JvdW5kcz1ib3VuZHM7ZXhwb3J0cy5nZW9DZW50cm9pZD1jZW50cm9pZDtleHBvcnRzLmdlb0NpcmNsZT1jaXJjbGU7ZXhwb3J0cy5nZW9DbGlwQW50aW1lcmlkaWFuPWNsaXBBbnRpbWVyaWRpYW47ZXhwb3J0cy5nZW9DbGlwQ2lyY2xlPWNsaXBDaXJjbGU7ZXhwb3J0cy5nZW9DbGlwRXh0ZW50PWV4dGVudDtleHBvcnRzLmdlb0NsaXBSZWN0YW5nbGU9Y2xpcFJlY3RhbmdsZTtleHBvcnRzLmdlb0NvbmljQ29uZm9ybWFsPWNvbmljQ29uZm9ybWFsO2V4cG9ydHMuZ2VvQ29uaWNDb25mb3JtYWxSYXc9Y29uaWNDb25mb3JtYWxSYXc7ZXhwb3J0cy5nZW9Db25pY0VxdWFsQXJlYT1jb25pY0VxdWFsQXJlYTtleHBvcnRzLmdlb0NvbmljRXF1YWxBcmVhUmF3PWNvbmljRXF1YWxBcmVhUmF3O2V4cG9ydHMuZ2VvQ29uaWNFcXVpZGlzdGFudD1jb25pY0VxdWlkaXN0YW50O2V4cG9ydHMuZ2VvQ29uaWNFcXVpZGlzdGFudFJhdz1jb25pY0VxdWlkaXN0YW50UmF3O2V4cG9ydHMuZ2VvQ29udGFpbnM9Y29udGFpbnM7ZXhwb3J0cy5nZW9EaXN0YW5jZT1kaXN0YW5jZTtleHBvcnRzLmdlb0VxdWFsRWFydGg9ZXF1YWxFYXJ0aDtleHBvcnRzLmdlb0VxdWFsRWFydGhSYXc9ZXF1YWxFYXJ0aFJhdztleHBvcnRzLmdlb0VxdWlyZWN0YW5ndWxhcj1lcXVpcmVjdGFuZ3VsYXI7ZXhwb3J0cy5nZW9FcXVpcmVjdGFuZ3VsYXJSYXc9ZXF1aXJlY3Rhbmd1bGFyUmF3O2V4cG9ydHMuZ2VvR25vbW9uaWM9Z25vbW9uaWM7ZXhwb3J0cy5nZW9Hbm9tb25pY1Jhdz1nbm9tb25pY1JhdztleHBvcnRzLmdlb0dyYXRpY3VsZT1ncmF0aWN1bGU7ZXhwb3J0cy5nZW9HcmF0aWN1bGUxMD1ncmF0aWN1bGUxMDtleHBvcnRzLmdlb0lkZW50aXR5PWlkZW50aXR5JDE7ZXhwb3J0cy5nZW9JbnRlcnBvbGF0ZT1pbnRlcnBvbGF0ZTtleHBvcnRzLmdlb0xlbmd0aD1sZW5ndGg7ZXhwb3J0cy5nZW9NZXJjYXRvcj1tZXJjYXRvcjtleHBvcnRzLmdlb01lcmNhdG9yUmF3PW1lcmNhdG9yUmF3O2V4cG9ydHMuZ2VvTmF0dXJhbEVhcnRoMT1uYXR1cmFsRWFydGgxO2V4cG9ydHMuZ2VvTmF0dXJhbEVhcnRoMVJhdz1uYXR1cmFsRWFydGgxUmF3O2V4cG9ydHMuZ2VvT3J0aG9ncmFwaGljPW9ydGhvZ3JhcGhpYztleHBvcnRzLmdlb09ydGhvZ3JhcGhpY1Jhdz1vcnRob2dyYXBoaWNSYXc7ZXhwb3J0cy5nZW9QYXRoPWluZGV4O2V4cG9ydHMuZ2VvUHJvamVjdGlvbj1wcm9qZWN0aW9uO2V4cG9ydHMuZ2VvUHJvamVjdGlvbk11dGF0b3I9cHJvamVjdGlvbk11dGF0b3I7ZXhwb3J0cy5nZW9Sb3RhdGlvbj1yb3RhdGlvbjtleHBvcnRzLmdlb1N0ZXJlb2dyYXBoaWM9c3RlcmVvZ3JhcGhpYztleHBvcnRzLmdlb1N0ZXJlb2dyYXBoaWNSYXc9c3RlcmVvZ3JhcGhpY1JhdztleHBvcnRzLmdlb1N0cmVhbT1nZW9TdHJlYW07ZXhwb3J0cy5nZW9UcmFuc2Zvcm09dHJhbnNmb3JtO2V4cG9ydHMuZ2VvVHJhbnN2ZXJzZU1lcmNhdG9yPXRyYW5zdmVyc2VNZXJjYXRvcjtleHBvcnRzLmdlb1RyYW5zdmVyc2VNZXJjYXRvclJhdz10cmFuc3ZlcnNlTWVyY2F0b3JSYXc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0seyJkMy1hcnJheSI6Mjl9XSw0NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtaGllcmFyY2h5LyB2MS4xLjkgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyJdLGZhY3RvcnkpOihnbG9iYWw9Z2xvYmFsfHxzZWxmLGZhY3RvcnkoZ2xvYmFsLmQzPWdsb2JhbC5kM3x8e30pKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uKGEsYil7cmV0dXJuIGEucGFyZW50PT09Yi5wYXJlbnQ/MToyfWZ1bmN0aW9uIG1lYW5YKGNoaWxkcmVuKXtyZXR1cm4gY2hpbGRyZW4ucmVkdWNlKG1lYW5YUmVkdWNlLDApL2NoaWxkcmVuLmxlbmd0aH1mdW5jdGlvbiBtZWFuWFJlZHVjZSh4LGMpe3JldHVybiB4K2MueH1mdW5jdGlvbiBtYXhZKGNoaWxkcmVuKXtyZXR1cm4gMStjaGlsZHJlbi5yZWR1Y2UobWF4WVJlZHVjZSwwKX1mdW5jdGlvbiBtYXhZUmVkdWNlKHksYyl7cmV0dXJuIE1hdGgubWF4KHksYy55KX1mdW5jdGlvbiBsZWFmTGVmdChub2RlKXt2YXIgY2hpbGRyZW47d2hpbGUoY2hpbGRyZW49bm9kZS5jaGlsZHJlbilub2RlPWNoaWxkcmVuWzBdO3JldHVybiBub2RlfWZ1bmN0aW9uIGxlYWZSaWdodChub2RlKXt2YXIgY2hpbGRyZW47d2hpbGUoY2hpbGRyZW49bm9kZS5jaGlsZHJlbilub2RlPWNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aC0xXTtyZXR1cm4gbm9kZX1mdW5jdGlvbiBjbHVzdGVyKCl7dmFyIHNlcGFyYXRpb249ZGVmYXVsdFNlcGFyYXRpb24sZHg9MSxkeT0xLG5vZGVTaXplPWZhbHNlO2Z1bmN0aW9uIGNsdXN0ZXIocm9vdCl7dmFyIHByZXZpb3VzTm9kZSx4PTA7Ci8vIEZpcnN0IHdhbGssIGNvbXB1dGluZyB0aGUgaW5pdGlhbCB4ICYgeSB2YWx1ZXMuCnJvb3QuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpe3ZhciBjaGlsZHJlbj1ub2RlLmNoaWxkcmVuO2lmKGNoaWxkcmVuKXtub2RlLng9bWVhblgoY2hpbGRyZW4pO25vZGUueT1tYXhZKGNoaWxkcmVuKX1lbHNle25vZGUueD1wcmV2aW91c05vZGU/eCs9c2VwYXJhdGlvbihub2RlLHByZXZpb3VzTm9kZSk6MDtub2RlLnk9MDtwcmV2aW91c05vZGU9bm9kZX19KTt2YXIgbGVmdD1sZWFmTGVmdChyb290KSxyaWdodD1sZWFmUmlnaHQocm9vdCkseDA9bGVmdC54LXNlcGFyYXRpb24obGVmdCxyaWdodCkvMix4MT1yaWdodC54K3NlcGFyYXRpb24ocmlnaHQsbGVmdCkvMjsKLy8gU2Vjb25kIHdhbGssIG5vcm1hbGl6aW5nIHggJiB5IHRvIHRoZSBkZXNpcmVkIHNpemUuCnJldHVybiByb290LmVhY2hBZnRlcihub2RlU2l6ZT9mdW5jdGlvbihub2RlKXtub2RlLng9KG5vZGUueC1yb290LngpKmR4O25vZGUueT0ocm9vdC55LW5vZGUueSkqZHl9OmZ1bmN0aW9uKG5vZGUpe25vZGUueD0obm9kZS54LXgwKS8oeDEteDApKmR4O25vZGUueT0oMS0ocm9vdC55P25vZGUueS9yb290Lnk6MSkpKmR5fSl9Y2x1c3Rlci5zZXBhcmF0aW9uPWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzZXBhcmF0aW9uPXgsY2x1c3Rlcik6c2VwYXJhdGlvbn07Y2x1c3Rlci5zaXplPWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhub2RlU2l6ZT1mYWxzZSxkeD0reFswXSxkeT0reFsxXSxjbHVzdGVyKTpub2RlU2l6ZT9udWxsOltkeCxkeV19O2NsdXN0ZXIubm9kZVNpemU9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG5vZGVTaXplPXRydWUsZHg9K3hbMF0sZHk9K3hbMV0sY2x1c3Rlcik6bm9kZVNpemU/W2R4LGR5XTpudWxsfTtyZXR1cm4gY2x1c3Rlcn1mdW5jdGlvbiBjb3VudChub2RlKXt2YXIgc3VtPTAsY2hpbGRyZW49bm9kZS5jaGlsZHJlbixpPWNoaWxkcmVuJiZjaGlsZHJlbi5sZW5ndGg7aWYoIWkpc3VtPTE7ZWxzZSB3aGlsZSgtLWk+PTApc3VtKz1jaGlsZHJlbltpXS52YWx1ZTtub2RlLnZhbHVlPXN1bX1mdW5jdGlvbiBub2RlX2NvdW50KCl7cmV0dXJuIHRoaXMuZWFjaEFmdGVyKGNvdW50KX1mdW5jdGlvbiBub2RlX2VhY2goY2FsbGJhY2spe3ZhciBub2RlPXRoaXMsY3VycmVudCxuZXh0PVtub2RlXSxjaGlsZHJlbixpLG47ZG97Y3VycmVudD1uZXh0LnJldmVyc2UoKSxuZXh0PVtdO3doaWxlKG5vZGU9Y3VycmVudC5wb3AoKSl7Y2FsbGJhY2sobm9kZSksY2hpbGRyZW49bm9kZS5jaGlsZHJlbjtpZihjaGlsZHJlbilmb3IoaT0wLG49Y2hpbGRyZW4ubGVuZ3RoO2k8bjsrK2kpe25leHQucHVzaChjaGlsZHJlbltpXSl9fX13aGlsZShuZXh0Lmxlbmd0aCk7cmV0dXJuIHRoaXN9ZnVuY3Rpb24gbm9kZV9lYWNoQmVmb3JlKGNhbGxiYWNrKXt2YXIgbm9kZT10aGlzLG5vZGVzPVtub2RlXSxjaGlsZHJlbixpO3doaWxlKG5vZGU9bm9kZXMucG9wKCkpe2NhbGxiYWNrKG5vZGUpLGNoaWxkcmVuPW5vZGUuY2hpbGRyZW47aWYoY2hpbGRyZW4pZm9yKGk9Y2hpbGRyZW4ubGVuZ3RoLTE7aT49MDstLWkpe25vZGVzLnB1c2goY2hpbGRyZW5baV0pfX1yZXR1cm4gdGhpc31mdW5jdGlvbiBub2RlX2VhY2hBZnRlcihjYWxsYmFjayl7dmFyIG5vZGU9dGhpcyxub2Rlcz1bbm9kZV0sbmV4dD1bXSxjaGlsZHJlbixpLG47d2hpbGUobm9kZT1ub2Rlcy5wb3AoKSl7bmV4dC5wdXNoKG5vZGUpLGNoaWxkcmVuPW5vZGUuY2hpbGRyZW47aWYoY2hpbGRyZW4pZm9yKGk9MCxuPWNoaWxkcmVuLmxlbmd0aDtpPG47KytpKXtub2Rlcy5wdXNoKGNoaWxkcmVuW2ldKX19d2hpbGUobm9kZT1uZXh0LnBvcCgpKXtjYWxsYmFjayhub2RlKX1yZXR1cm4gdGhpc31mdW5jdGlvbiBub2RlX3N1bSh2YWx1ZSl7cmV0dXJuIHRoaXMuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpe3ZhciBzdW09K3ZhbHVlKG5vZGUuZGF0YSl8fDAsY2hpbGRyZW49bm9kZS5jaGlsZHJlbixpPWNoaWxkcmVuJiZjaGlsZHJlbi5sZW5ndGg7d2hpbGUoLS1pPj0wKXN1bSs9Y2hpbGRyZW5baV0udmFsdWU7bm9kZS52YWx1ZT1zdW19KX1mdW5jdGlvbiBub2RlX3NvcnQoY29tcGFyZSl7cmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKXtpZihub2RlLmNoaWxkcmVuKXtub2RlLmNoaWxkcmVuLnNvcnQoY29tcGFyZSl9fSl9ZnVuY3Rpb24gbm9kZV9wYXRoKGVuZCl7dmFyIHN0YXJ0PXRoaXMsYW5jZXN0b3I9bGVhc3RDb21tb25BbmNlc3RvcihzdGFydCxlbmQpLG5vZGVzPVtzdGFydF07d2hpbGUoc3RhcnQhPT1hbmNlc3Rvcil7c3RhcnQ9c3RhcnQucGFyZW50O25vZGVzLnB1c2goc3RhcnQpfXZhciBrPW5vZGVzLmxlbmd0aDt3aGlsZShlbmQhPT1hbmNlc3Rvcil7bm9kZXMuc3BsaWNlKGssMCxlbmQpO2VuZD1lbmQucGFyZW50fXJldHVybiBub2Rlc31mdW5jdGlvbiBsZWFzdENvbW1vbkFuY2VzdG9yKGEsYil7aWYoYT09PWIpcmV0dXJuIGE7dmFyIGFOb2Rlcz1hLmFuY2VzdG9ycygpLGJOb2Rlcz1iLmFuY2VzdG9ycygpLGM9bnVsbDthPWFOb2Rlcy5wb3AoKTtiPWJOb2Rlcy5wb3AoKTt3aGlsZShhPT09Yil7Yz1hO2E9YU5vZGVzLnBvcCgpO2I9Yk5vZGVzLnBvcCgpfXJldHVybiBjfWZ1bmN0aW9uIG5vZGVfYW5jZXN0b3JzKCl7dmFyIG5vZGU9dGhpcyxub2Rlcz1bbm9kZV07d2hpbGUobm9kZT1ub2RlLnBhcmVudCl7bm9kZXMucHVzaChub2RlKX1yZXR1cm4gbm9kZXN9ZnVuY3Rpb24gbm9kZV9kZXNjZW5kYW50cygpe3ZhciBub2Rlcz1bXTt0aGlzLmVhY2goZnVuY3Rpb24obm9kZSl7bm9kZXMucHVzaChub2RlKX0pO3JldHVybiBub2Rlc31mdW5jdGlvbiBub2RlX2xlYXZlcygpe3ZhciBsZWF2ZXM9W107dGhpcy5lYWNoQmVmb3JlKGZ1bmN0aW9uKG5vZGUpe2lmKCFub2RlLmNoaWxkcmVuKXtsZWF2ZXMucHVzaChub2RlKX19KTtyZXR1cm4gbGVhdmVzfWZ1bmN0aW9uIG5vZGVfbGlua3MoKXt2YXIgcm9vdD10aGlzLGxpbmtzPVtdO3Jvb3QuZWFjaChmdW5jdGlvbihub2RlKXtpZihub2RlIT09cm9vdCl7Ly8gRG9u4oCZdCBpbmNsdWRlIHRoZSByb2904oCZcyBwYXJlbnQsIGlmIGFueS4KbGlua3MucHVzaCh7c291cmNlOm5vZGUucGFyZW50LHRhcmdldDpub2RlfSl9fSk7cmV0dXJuIGxpbmtzfWZ1bmN0aW9uIGhpZXJhcmNoeShkYXRhLGNoaWxkcmVuKXt2YXIgcm9vdD1uZXcgTm9kZShkYXRhKSx2YWx1ZWQ9K2RhdGEudmFsdWUmJihyb290LnZhbHVlPWRhdGEudmFsdWUpLG5vZGUsbm9kZXM9W3Jvb3RdLGNoaWxkLGNoaWxkcyxpLG47aWYoY2hpbGRyZW49PW51bGwpY2hpbGRyZW49ZGVmYXVsdENoaWxkcmVuO3doaWxlKG5vZGU9bm9kZXMucG9wKCkpe2lmKHZhbHVlZClub2RlLnZhbHVlPStub2RlLmRhdGEudmFsdWU7aWYoKGNoaWxkcz1jaGlsZHJlbihub2RlLmRhdGEpKSYmKG49Y2hpbGRzLmxlbmd0aCkpe25vZGUuY2hpbGRyZW49bmV3IEFycmF5KG4pO2ZvcihpPW4tMTtpPj0wOy0taSl7bm9kZXMucHVzaChjaGlsZD1ub2RlLmNoaWxkcmVuW2ldPW5ldyBOb2RlKGNoaWxkc1tpXSkpO2NoaWxkLnBhcmVudD1ub2RlO2NoaWxkLmRlcHRoPW5vZGUuZGVwdGgrMX19fXJldHVybiByb290LmVhY2hCZWZvcmUoY29tcHV0ZUhlaWdodCl9ZnVuY3Rpb24gbm9kZV9jb3B5KCl7cmV0dXJuIGhpZXJhcmNoeSh0aGlzKS5lYWNoQmVmb3JlKGNvcHlEYXRhKX1mdW5jdGlvbiBkZWZhdWx0Q2hpbGRyZW4oZCl7cmV0dXJuIGQuY2hpbGRyZW59ZnVuY3Rpb24gY29weURhdGEobm9kZSl7bm9kZS5kYXRhPW5vZGUuZGF0YS5kYXRhfWZ1bmN0aW9uIGNvbXB1dGVIZWlnaHQobm9kZSl7dmFyIGhlaWdodD0wO2Rve25vZGUuaGVpZ2h0PWhlaWdodH13aGlsZSgobm9kZT1ub2RlLnBhcmVudCkmJm5vZGUuaGVpZ2h0PCsraGVpZ2h0KX1mdW5jdGlvbiBOb2RlKGRhdGEpe3RoaXMuZGF0YT1kYXRhO3RoaXMuZGVwdGg9dGhpcy5oZWlnaHQ9MDt0aGlzLnBhcmVudD1udWxsfU5vZGUucHJvdG90eXBlPWhpZXJhcmNoeS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOk5vZGUsY291bnQ6bm9kZV9jb3VudCxlYWNoOm5vZGVfZWFjaCxlYWNoQWZ0ZXI6bm9kZV9lYWNoQWZ0ZXIsZWFjaEJlZm9yZTpub2RlX2VhY2hCZWZvcmUsc3VtOm5vZGVfc3VtLHNvcnQ6bm9kZV9zb3J0LHBhdGg6bm9kZV9wYXRoLGFuY2VzdG9yczpub2RlX2FuY2VzdG9ycyxkZXNjZW5kYW50czpub2RlX2Rlc2NlbmRhbnRzLGxlYXZlczpub2RlX2xlYXZlcyxsaW5rczpub2RlX2xpbmtzLGNvcHk6bm9kZV9jb3B5fTt2YXIgc2xpY2U9QXJyYXkucHJvdG90eXBlLnNsaWNlO2Z1bmN0aW9uIHNodWZmbGUoYXJyYXkpe3ZhciBtPWFycmF5Lmxlbmd0aCx0LGk7d2hpbGUobSl7aT1NYXRoLnJhbmRvbSgpKm0tLXwwO3Q9YXJyYXlbbV07YXJyYXlbbV09YXJyYXlbaV07YXJyYXlbaV09dH1yZXR1cm4gYXJyYXl9ZnVuY3Rpb24gZW5jbG9zZShjaXJjbGVzKXt2YXIgaT0wLG49KGNpcmNsZXM9c2h1ZmZsZShzbGljZS5jYWxsKGNpcmNsZXMpKSkubGVuZ3RoLEI9W10scCxlO3doaWxlKGk8bil7cD1jaXJjbGVzW2ldO2lmKGUmJmVuY2xvc2VzV2VhayhlLHApKSsraTtlbHNlIGU9ZW5jbG9zZUJhc2lzKEI9ZXh0ZW5kQmFzaXMoQixwKSksaT0wfXJldHVybiBlfWZ1bmN0aW9uIGV4dGVuZEJhc2lzKEIscCl7dmFyIGksajtpZihlbmNsb3Nlc1dlYWtBbGwocCxCKSlyZXR1cm5bcF07Ci8vIElmIHdlIGdldCBoZXJlIHRoZW4gQiBtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIGVsZW1lbnQuCmZvcihpPTA7aTxCLmxlbmd0aDsrK2kpe2lmKGVuY2xvc2VzTm90KHAsQltpXSkmJmVuY2xvc2VzV2Vha0FsbChlbmNsb3NlQmFzaXMyKEJbaV0scCksQikpe3JldHVybltCW2ldLHBdfX0KLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBCIG11c3QgaGF2ZSBhdCBsZWFzdCB0d28gZWxlbWVudHMuCmZvcihpPTA7aTxCLmxlbmd0aC0xOysraSl7Zm9yKGo9aSsxO2o8Qi5sZW5ndGg7KytqKXtpZihlbmNsb3Nlc05vdChlbmNsb3NlQmFzaXMyKEJbaV0sQltqXSkscCkmJmVuY2xvc2VzTm90KGVuY2xvc2VCYXNpczIoQltpXSxwKSxCW2pdKSYmZW5jbG9zZXNOb3QoZW5jbG9zZUJhc2lzMihCW2pdLHApLEJbaV0pJiZlbmNsb3Nlc1dlYWtBbGwoZW5jbG9zZUJhc2lzMyhCW2ldLEJbal0scCksQikpe3JldHVybltCW2ldLEJbal0scF19fX0KLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBzb21ldGhpbmcgaXMgdmVyeSB3cm9uZy4KdGhyb3cgbmV3IEVycm9yfWZ1bmN0aW9uIGVuY2xvc2VzTm90KGEsYil7dmFyIGRyPWEuci1iLnIsZHg9Yi54LWEueCxkeT1iLnktYS55O3JldHVybiBkcjwwfHxkcipkcjxkeCpkeCtkeSpkeX1mdW5jdGlvbiBlbmNsb3Nlc1dlYWsoYSxiKXt2YXIgZHI9YS5yLWIucisxZS02LGR4PWIueC1hLngsZHk9Yi55LWEueTtyZXR1cm4gZHI+MCYmZHIqZHI+ZHgqZHgrZHkqZHl9ZnVuY3Rpb24gZW5jbG9zZXNXZWFrQWxsKGEsQil7Zm9yKHZhciBpPTA7aTxCLmxlbmd0aDsrK2kpe2lmKCFlbmNsb3Nlc1dlYWsoYSxCW2ldKSl7cmV0dXJuIGZhbHNlfX1yZXR1cm4gdHJ1ZX1mdW5jdGlvbiBlbmNsb3NlQmFzaXMoQil7c3dpdGNoKEIubGVuZ3RoKXtjYXNlIDE6cmV0dXJuIGVuY2xvc2VCYXNpczEoQlswXSk7Y2FzZSAyOnJldHVybiBlbmNsb3NlQmFzaXMyKEJbMF0sQlsxXSk7Y2FzZSAzOnJldHVybiBlbmNsb3NlQmFzaXMzKEJbMF0sQlsxXSxCWzJdKX19ZnVuY3Rpb24gZW5jbG9zZUJhc2lzMShhKXtyZXR1cm57eDphLngseTphLnkscjphLnJ9fWZ1bmN0aW9uIGVuY2xvc2VCYXNpczIoYSxiKXt2YXIgeDE9YS54LHkxPWEueSxyMT1hLnIseDI9Yi54LHkyPWIueSxyMj1iLnIseDIxPXgyLXgxLHkyMT15Mi15MSxyMjE9cjItcjEsbD1NYXRoLnNxcnQoeDIxKngyMSt5MjEqeTIxKTtyZXR1cm57eDooeDEreDIreDIxL2wqcjIxKS8yLHk6KHkxK3kyK3kyMS9sKnIyMSkvMixyOihsK3IxK3IyKS8yfX1mdW5jdGlvbiBlbmNsb3NlQmFzaXMzKGEsYixjKXt2YXIgeDE9YS54LHkxPWEueSxyMT1hLnIseDI9Yi54LHkyPWIueSxyMj1iLnIseDM9Yy54LHkzPWMueSxyMz1jLnIsYTI9eDEteDIsYTM9eDEteDMsYjI9eTEteTIsYjM9eTEteTMsYzI9cjItcjEsYzM9cjMtcjEsZDE9eDEqeDEreTEqeTEtcjEqcjEsZDI9ZDEteDIqeDIteTIqeTIrcjIqcjIsZDM9ZDEteDMqeDMteTMqeTMrcjMqcjMsYWI9YTMqYjItYTIqYjMseGE9KGIyKmQzLWIzKmQyKS8oYWIqMikteDEseGI9KGIzKmMyLWIyKmMzKS9hYix5YT0oYTMqZDItYTIqZDMpLyhhYioyKS15MSx5Yj0oYTIqYzMtYTMqYzIpL2FiLEE9eGIqeGIreWIqeWItMSxCPTIqKHIxK3hhKnhiK3lhKnliKSxDPXhhKnhhK3lhKnlhLXIxKnIxLHI9LShBPyhCK01hdGguc3FydChCKkItNCpBKkMpKS8oMipBKTpDL0IpO3JldHVybnt4OngxK3hhK3hiKnIseTp5MSt5YSt5YipyLHI6cn19ZnVuY3Rpb24gcGxhY2UoYixhLGMpe3ZhciBkeD1iLngtYS54LHgsYTIsZHk9Yi55LWEueSx5LGIyLGQyPWR4KmR4K2R5KmR5O2lmKGQyKXthMj1hLnIrYy5yLGEyKj1hMjtiMj1iLnIrYy5yLGIyKj1iMjtpZihhMj5iMil7eD0oZDIrYjItYTIpLygyKmQyKTt5PU1hdGguc3FydChNYXRoLm1heCgwLGIyL2QyLXgqeCkpO2MueD1iLngteCpkeC15KmR5O2MueT1iLnkteCpkeSt5KmR4fWVsc2V7eD0oZDIrYTItYjIpLygyKmQyKTt5PU1hdGguc3FydChNYXRoLm1heCgwLGEyL2QyLXgqeCkpO2MueD1hLngreCpkeC15KmR5O2MueT1hLnkreCpkeSt5KmR4fX1lbHNle2MueD1hLngrYy5yO2MueT1hLnl9fWZ1bmN0aW9uIGludGVyc2VjdHMoYSxiKXt2YXIgZHI9YS5yK2Iuci0xZS02LGR4PWIueC1hLngsZHk9Yi55LWEueTtyZXR1cm4gZHI+MCYmZHIqZHI+ZHgqZHgrZHkqZHl9ZnVuY3Rpb24gc2NvcmUobm9kZSl7dmFyIGE9bm9kZS5fLGI9bm9kZS5uZXh0Ll8sYWI9YS5yK2IucixkeD0oYS54KmIucitiLngqYS5yKS9hYixkeT0oYS55KmIucitiLnkqYS5yKS9hYjtyZXR1cm4gZHgqZHgrZHkqZHl9ZnVuY3Rpb24gTm9kZSQxKGNpcmNsZSl7dGhpcy5fPWNpcmNsZTt0aGlzLm5leHQ9bnVsbDt0aGlzLnByZXZpb3VzPW51bGx9ZnVuY3Rpb24gcGFja0VuY2xvc2UoY2lyY2xlcyl7aWYoIShuPWNpcmNsZXMubGVuZ3RoKSlyZXR1cm4gMDt2YXIgYSxiLGMsbixhYSxjYSxpLGosayxzaixzazsKLy8gUGxhY2UgdGhlIGZpcnN0IGNpcmNsZS4KYT1jaXJjbGVzWzBdLGEueD0wLGEueT0wO2lmKCEobj4xKSlyZXR1cm4gYS5yOwovLyBQbGFjZSB0aGUgc2Vjb25kIGNpcmNsZS4KYj1jaXJjbGVzWzFdLGEueD0tYi5yLGIueD1hLnIsYi55PTA7aWYoIShuPjIpKXJldHVybiBhLnIrYi5yOwovLyBQbGFjZSB0aGUgdGhpcmQgY2lyY2xlLgpwbGFjZShiLGEsYz1jaXJjbGVzWzJdKTsKLy8gSW5pdGlhbGl6ZSB0aGUgZnJvbnQtY2hhaW4gdXNpbmcgdGhlIGZpcnN0IHRocmVlIGNpcmNsZXMgYSwgYiBhbmQgYy4KYT1uZXcgTm9kZSQxKGEpLGI9bmV3IE5vZGUkMShiKSxjPW5ldyBOb2RlJDEoYyk7YS5uZXh0PWMucHJldmlvdXM9YjtiLm5leHQ9YS5wcmV2aW91cz1jO2MubmV4dD1iLnByZXZpb3VzPWE7Ci8vIEF0dGVtcHQgdG8gcGxhY2UgZWFjaCByZW1haW5pbmcgY2lyY2xl4oCmCnBhY2s6Zm9yKGk9MztpPG47KytpKXtwbGFjZShhLl8sYi5fLGM9Y2lyY2xlc1tpXSksYz1uZXcgTm9kZSQxKGMpOwovLyBGaW5kIHRoZSBjbG9zZXN0IGludGVyc2VjdGluZyBjaXJjbGUgb24gdGhlIGZyb250LWNoYWluLCBpZiBhbnkuCi8vIOKAnENsb3NlbmVzc+KAnSBpcyBkZXRlcm1pbmVkIGJ5IGxpbmVhciBkaXN0YW5jZSBhbG9uZyB0aGUgZnJvbnQtY2hhaW4uCi8vIOKAnEFoZWFk4oCdIG9yIOKAnGJlaGluZOKAnSBpcyBsaWtld2lzZSBkZXRlcm1pbmVkIGJ5IGxpbmVhciBkaXN0YW5jZS4Kaj1iLm5leHQsaz1hLnByZXZpb3VzLHNqPWIuXy5yLHNrPWEuXy5yO2Rve2lmKHNqPD1zayl7aWYoaW50ZXJzZWN0cyhqLl8sYy5fKSl7Yj1qLGEubmV4dD1iLGIucHJldmlvdXM9YSwtLWk7Y29udGludWUgcGFja31zais9ai5fLnIsaj1qLm5leHR9ZWxzZXtpZihpbnRlcnNlY3RzKGsuXyxjLl8pKXthPWssYS5uZXh0PWIsYi5wcmV2aW91cz1hLC0taTtjb250aW51ZSBwYWNrfXNrKz1rLl8ucixrPWsucHJldmlvdXN9fXdoaWxlKGohPT1rLm5leHQpOwovLyBTdWNjZXNzISBJbnNlcnQgdGhlIG5ldyBjaXJjbGUgYyBiZXR3ZWVuIGEgYW5kIGIuCmMucHJldmlvdXM9YSxjLm5leHQ9YixhLm5leHQ9Yi5wcmV2aW91cz1iPWM7Ci8vIENvbXB1dGUgdGhlIG5ldyBjbG9zZXN0IGNpcmNsZSBwYWlyIHRvIHRoZSBjZW50cm9pZC4KYWE9c2NvcmUoYSk7d2hpbGUoKGM9Yy5uZXh0KSE9PWIpe2lmKChjYT1zY29yZShjKSk8YWEpe2E9YyxhYT1jYX19Yj1hLm5leHR9Ci8vIENvbXB1dGUgdGhlIGVuY2xvc2luZyBjaXJjbGUgb2YgdGhlIGZyb250IGNoYWluLgphPVtiLl9dLGM9Yjt3aGlsZSgoYz1jLm5leHQpIT09YilhLnB1c2goYy5fKTtjPWVuY2xvc2UoYSk7Ci8vIFRyYW5zbGF0ZSB0aGUgY2lyY2xlcyB0byBwdXQgdGhlIGVuY2xvc2luZyBjaXJjbGUgYXJvdW5kIHRoZSBvcmlnaW4uCmZvcihpPTA7aTxuOysraSlhPWNpcmNsZXNbaV0sYS54LT1jLngsYS55LT1jLnk7cmV0dXJuIGMucn1mdW5jdGlvbiBzaWJsaW5ncyhjaXJjbGVzKXtwYWNrRW5jbG9zZShjaXJjbGVzKTtyZXR1cm4gY2lyY2xlc31mdW5jdGlvbiBvcHRpb25hbChmKXtyZXR1cm4gZj09bnVsbD9udWxsOnJlcXVpcmVkKGYpfWZ1bmN0aW9uIHJlcXVpcmVkKGYpe2lmKHR5cGVvZiBmIT09ImZ1bmN0aW9uIil0aHJvdyBuZXcgRXJyb3I7cmV0dXJuIGZ9ZnVuY3Rpb24gY29uc3RhbnRaZXJvKCl7cmV0dXJuIDB9ZnVuY3Rpb24gY29uc3RhbnQoeCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHh9fWZ1bmN0aW9uIGRlZmF1bHRSYWRpdXMoZCl7cmV0dXJuIE1hdGguc3FydChkLnZhbHVlKX1mdW5jdGlvbiBpbmRleCgpe3ZhciByYWRpdXM9bnVsbCxkeD0xLGR5PTEscGFkZGluZz1jb25zdGFudFplcm87ZnVuY3Rpb24gcGFjayhyb290KXtyb290Lng9ZHgvMixyb290Lnk9ZHkvMjtpZihyYWRpdXMpe3Jvb3QuZWFjaEJlZm9yZShyYWRpdXNMZWFmKHJhZGl1cykpLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4ocGFkZGluZywuNSkpLmVhY2hCZWZvcmUodHJhbnNsYXRlQ2hpbGQoMSkpfWVsc2V7cm9vdC5lYWNoQmVmb3JlKHJhZGl1c0xlYWYoZGVmYXVsdFJhZGl1cykpLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4oY29uc3RhbnRaZXJvLDEpKS5lYWNoQWZ0ZXIocGFja0NoaWxkcmVuKHBhZGRpbmcscm9vdC5yL01hdGgubWluKGR4LGR5KSkpLmVhY2hCZWZvcmUodHJhbnNsYXRlQ2hpbGQoTWF0aC5taW4oZHgsZHkpLygyKnJvb3QucikpKX1yZXR1cm4gcm9vdH1wYWNrLnJhZGl1cz1mdW5jdGlvbih4KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocmFkaXVzPW9wdGlvbmFsKHgpLHBhY2spOnJhZGl1c307cGFjay5zaXplPWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhkeD0reFswXSxkeT0reFsxXSxwYWNrKTpbZHgsZHldfTtwYWNrLnBhZGRpbmc9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhZGRpbmc9dHlwZW9mIHg9PT0iZnVuY3Rpb24iP3g6Y29uc3RhbnQoK3gpLHBhY2spOnBhZGRpbmd9O3JldHVybiBwYWNrfWZ1bmN0aW9uIHJhZGl1c0xlYWYocmFkaXVzKXtyZXR1cm4gZnVuY3Rpb24obm9kZSl7aWYoIW5vZGUuY2hpbGRyZW4pe25vZGUucj1NYXRoLm1heCgwLCtyYWRpdXMobm9kZSl8fDApfX19ZnVuY3Rpb24gcGFja0NoaWxkcmVuKHBhZGRpbmcsayl7cmV0dXJuIGZ1bmN0aW9uKG5vZGUpe2lmKGNoaWxkcmVuPW5vZGUuY2hpbGRyZW4pe3ZhciBjaGlsZHJlbixpLG49Y2hpbGRyZW4ubGVuZ3RoLHI9cGFkZGluZyhub2RlKSprfHwwLGU7aWYocilmb3IoaT0wO2k8bjsrK2kpY2hpbGRyZW5baV0ucis9cjtlPXBhY2tFbmNsb3NlKGNoaWxkcmVuKTtpZihyKWZvcihpPTA7aTxuOysraSljaGlsZHJlbltpXS5yLT1yO25vZGUucj1lK3J9fX1mdW5jdGlvbiB0cmFuc2xhdGVDaGlsZChrKXtyZXR1cm4gZnVuY3Rpb24obm9kZSl7dmFyIHBhcmVudD1ub2RlLnBhcmVudDtub2RlLnIqPWs7aWYocGFyZW50KXtub2RlLng9cGFyZW50Lngraypub2RlLng7bm9kZS55PXBhcmVudC55K2sqbm9kZS55fX19ZnVuY3Rpb24gcm91bmROb2RlKG5vZGUpe25vZGUueDA9TWF0aC5yb3VuZChub2RlLngwKTtub2RlLnkwPU1hdGgucm91bmQobm9kZS55MCk7bm9kZS54MT1NYXRoLnJvdW5kKG5vZGUueDEpO25vZGUueTE9TWF0aC5yb3VuZChub2RlLnkxKX1mdW5jdGlvbiB0cmVlbWFwRGljZShwYXJlbnQseDAseTAseDEseTEpe3ZhciBub2Rlcz1wYXJlbnQuY2hpbGRyZW4sbm9kZSxpPS0xLG49bm9kZXMubGVuZ3RoLGs9cGFyZW50LnZhbHVlJiYoeDEteDApL3BhcmVudC52YWx1ZTt3aGlsZSgrK2k8bil7bm9kZT1ub2Rlc1tpXSxub2RlLnkwPXkwLG5vZGUueTE9eTE7bm9kZS54MD14MCxub2RlLngxPXgwKz1ub2RlLnZhbHVlKmt9fWZ1bmN0aW9uIHBhcnRpdGlvbigpe3ZhciBkeD0xLGR5PTEscGFkZGluZz0wLHJvdW5kPWZhbHNlO2Z1bmN0aW9uIHBhcnRpdGlvbihyb290KXt2YXIgbj1yb290LmhlaWdodCsxO3Jvb3QueDA9cm9vdC55MD1wYWRkaW5nO3Jvb3QueDE9ZHg7cm9vdC55MT1keS9uO3Jvb3QuZWFjaEJlZm9yZShwb3NpdGlvbk5vZGUoZHksbikpO2lmKHJvdW5kKXJvb3QuZWFjaEJlZm9yZShyb3VuZE5vZGUpO3JldHVybiByb290fWZ1bmN0aW9uIHBvc2l0aW9uTm9kZShkeSxuKXtyZXR1cm4gZnVuY3Rpb24obm9kZSl7aWYobm9kZS5jaGlsZHJlbil7dHJlZW1hcERpY2Uobm9kZSxub2RlLngwLGR5Kihub2RlLmRlcHRoKzEpL24sbm9kZS54MSxkeSoobm9kZS5kZXB0aCsyKS9uKX12YXIgeDA9bm9kZS54MCx5MD1ub2RlLnkwLHgxPW5vZGUueDEtcGFkZGluZyx5MT1ub2RlLnkxLXBhZGRpbmc7aWYoeDE8eDApeDA9eDE9KHgwK3gxKS8yO2lmKHkxPHkwKXkwPXkxPSh5MCt5MSkvMjtub2RlLngwPXgwO25vZGUueTA9eTA7bm9kZS54MT14MTtub2RlLnkxPXkxfX1wYXJ0aXRpb24ucm91bmQ9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHJvdW5kPSEheCxwYXJ0aXRpb24pOnJvdW5kfTtwYXJ0aXRpb24uc2l6ZT1mdW5jdGlvbih4KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZHg9K3hbMF0sZHk9K3hbMV0scGFydGl0aW9uKTpbZHgsZHldfTtwYXJ0aXRpb24ucGFkZGluZz1mdW5jdGlvbih4KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocGFkZGluZz0reCxwYXJ0aXRpb24pOnBhZGRpbmd9O3JldHVybiBwYXJ0aXRpb259dmFyIGtleVByZWZpeD0iJCIsLy8gUHJvdGVjdCBhZ2FpbnN0IGtleXMgbGlrZSDigJxfX3Byb3RvX1/igJ0uCnByZXJvb3Q9e2RlcHRoOi0xfSxhbWJpZ3VvdXM9e307ZnVuY3Rpb24gZGVmYXVsdElkKGQpe3JldHVybiBkLmlkfWZ1bmN0aW9uIGRlZmF1bHRQYXJlbnRJZChkKXtyZXR1cm4gZC5wYXJlbnRJZH1mdW5jdGlvbiBzdHJhdGlmeSgpe3ZhciBpZD1kZWZhdWx0SWQscGFyZW50SWQ9ZGVmYXVsdFBhcmVudElkO2Z1bmN0aW9uIHN0cmF0aWZ5KGRhdGEpe3ZhciBkLGksbj1kYXRhLmxlbmd0aCxyb290LHBhcmVudCxub2RlLG5vZGVzPW5ldyBBcnJheShuKSxub2RlSWQsbm9kZUtleSxub2RlQnlLZXk9e307Zm9yKGk9MDtpPG47KytpKXtkPWRhdGFbaV0sbm9kZT1ub2Rlc1tpXT1uZXcgTm9kZShkKTtpZigobm9kZUlkPWlkKGQsaSxkYXRhKSkhPW51bGwmJihub2RlSWQrPSIiKSl7bm9kZUtleT1rZXlQcmVmaXgrKG5vZGUuaWQ9bm9kZUlkKTtub2RlQnlLZXlbbm9kZUtleV09bm9kZUtleSBpbiBub2RlQnlLZXk/YW1iaWd1b3VzOm5vZGV9fWZvcihpPTA7aTxuOysraSl7bm9kZT1ub2Rlc1tpXSxub2RlSWQ9cGFyZW50SWQoZGF0YVtpXSxpLGRhdGEpO2lmKG5vZGVJZD09bnVsbHx8IShub2RlSWQrPSIiKSl7aWYocm9vdCl0aHJvdyBuZXcgRXJyb3IoIm11bHRpcGxlIHJvb3RzIik7cm9vdD1ub2RlfWVsc2V7cGFyZW50PW5vZGVCeUtleVtrZXlQcmVmaXgrbm9kZUlkXTtpZighcGFyZW50KXRocm93IG5ldyBFcnJvcigibWlzc2luZzogIitub2RlSWQpO2lmKHBhcmVudD09PWFtYmlndW91cyl0aHJvdyBuZXcgRXJyb3IoImFtYmlndW91czogIitub2RlSWQpO2lmKHBhcmVudC5jaGlsZHJlbilwYXJlbnQuY2hpbGRyZW4ucHVzaChub2RlKTtlbHNlIHBhcmVudC5jaGlsZHJlbj1bbm9kZV07bm9kZS5wYXJlbnQ9cGFyZW50fX1pZighcm9vdCl0aHJvdyBuZXcgRXJyb3IoIm5vIHJvb3QiKTtyb290LnBhcmVudD1wcmVyb290O3Jvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKXtub2RlLmRlcHRoPW5vZGUucGFyZW50LmRlcHRoKzE7LS1ufSkuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtyb290LnBhcmVudD1udWxsO2lmKG4+MCl0aHJvdyBuZXcgRXJyb3IoImN5Y2xlIik7cmV0dXJuIHJvb3R9c3RyYXRpZnkuaWQ9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGlkPXJlcXVpcmVkKHgpLHN0cmF0aWZ5KTppZH07c3RyYXRpZnkucGFyZW50SWQ9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhcmVudElkPXJlcXVpcmVkKHgpLHN0cmF0aWZ5KTpwYXJlbnRJZH07cmV0dXJuIHN0cmF0aWZ5fWZ1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uJDEoYSxiKXtyZXR1cm4gYS5wYXJlbnQ9PT1iLnBhcmVudD8xOjJ9Ci8vIGZ1bmN0aW9uIHJhZGlhbFNlcGFyYXRpb24oYSwgYikgewovLyAgIHJldHVybiAoYS5wYXJlbnQgPT09IGIucGFyZW50ID8gMSA6IDIpIC8gYS5kZXB0aDsKLy8gfQovLyBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGxlZnQgY29udG91ciBvZiBhIHN1YnRyZWUgKG9yCi8vIHN1YmZvcmVzdCkuIEl0IHJldHVybnMgdGhlIHN1Y2Nlc3NvciBvZiB2IG9uIHRoaXMgY29udG91ci4gVGhpcyBzdWNjZXNzb3IgaXMKLy8gZWl0aGVyIGdpdmVuIGJ5IHRoZSBsZWZ0bW9zdCBjaGlsZCBvZiB2IG9yIGJ5IHRoZSB0aHJlYWQgb2Ygdi4gVGhlIGZ1bmN0aW9uCi8vIHJldHVybnMgbnVsbCBpZiBhbmQgb25seSBpZiB2IGlzIG9uIHRoZSBoaWdoZXN0IGxldmVsIG9mIGl0cyBzdWJ0cmVlLgpmdW5jdGlvbiBuZXh0TGVmdCh2KXt2YXIgY2hpbGRyZW49di5jaGlsZHJlbjtyZXR1cm4gY2hpbGRyZW4/Y2hpbGRyZW5bMF06di50fQovLyBUaGlzIGZ1bmN0aW9uIHdvcmtzIGFuYWxvZ291c2x5IHRvIG5leHRMZWZ0LgpmdW5jdGlvbiBuZXh0UmlnaHQodil7dmFyIGNoaWxkcmVuPXYuY2hpbGRyZW47cmV0dXJuIGNoaWxkcmVuP2NoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aC0xXTp2LnR9Ci8vIFNoaWZ0cyB0aGUgY3VycmVudCBzdWJ0cmVlIHJvb3RlZCBhdCB3Ky4gVGhpcyBpcyBkb25lIGJ5IGluY3JlYXNpbmcKLy8gcHJlbGltKHcrKSBhbmQgbW9kKHcrKSBieSBzaGlmdC4KZnVuY3Rpb24gbW92ZVN1YnRyZWUod20sd3Asc2hpZnQpe3ZhciBjaGFuZ2U9c2hpZnQvKHdwLmktd20uaSk7d3AuYy09Y2hhbmdlO3dwLnMrPXNoaWZ0O3dtLmMrPWNoYW5nZTt3cC56Kz1zaGlmdDt3cC5tKz1zaGlmdH0KLy8gQWxsIG90aGVyIHNoaWZ0cywgYXBwbGllZCB0byB0aGUgc21hbGxlciBzdWJ0cmVlcyBiZXR3ZWVuIHctIGFuZCB3KywgYXJlCi8vIHBlcmZvcm1lZCBieSB0aGlzIGZ1bmN0aW9uLiBUbyBwcmVwYXJlIHRoZSBzaGlmdHMsIHdlIGhhdmUgdG8gYWRqdXN0Ci8vIGNoYW5nZSh3KyksIHNoaWZ0KHcrKSwgYW5kIGNoYW5nZSh3LSkuCmZ1bmN0aW9uIGV4ZWN1dGVTaGlmdHModil7dmFyIHNoaWZ0PTAsY2hhbmdlPTAsY2hpbGRyZW49di5jaGlsZHJlbixpPWNoaWxkcmVuLmxlbmd0aCx3O3doaWxlKC0taT49MCl7dz1jaGlsZHJlbltpXTt3LnorPXNoaWZ0O3cubSs9c2hpZnQ7c2hpZnQrPXcucysoY2hhbmdlKz13LmMpfX0KLy8gSWYgdmkt4oCZcyBhbmNlc3RvciBpcyBhIHNpYmxpbmcgb2YgdiwgcmV0dXJucyB2aS3igJlzIGFuY2VzdG9yLiBPdGhlcndpc2UsCi8vIHJldHVybnMgdGhlIHNwZWNpZmllZCAoZGVmYXVsdCkgYW5jZXN0b3IuCmZ1bmN0aW9uIG5leHRBbmNlc3Rvcih2aW0sdixhbmNlc3Rvcil7cmV0dXJuIHZpbS5hLnBhcmVudD09PXYucGFyZW50P3ZpbS5hOmFuY2VzdG9yfWZ1bmN0aW9uIFRyZWVOb2RlKG5vZGUsaSl7dGhpcy5fPW5vZGU7dGhpcy5wYXJlbnQ9bnVsbDt0aGlzLmNoaWxkcmVuPW51bGw7dGhpcy5BPW51bGw7Ly8gZGVmYXVsdCBhbmNlc3Rvcgp0aGlzLmE9dGhpczsvLyBhbmNlc3Rvcgp0aGlzLno9MDsvLyBwcmVsaW0KdGhpcy5tPTA7Ly8gbW9kCnRoaXMuYz0wOy8vIGNoYW5nZQp0aGlzLnM9MDsvLyBzaGlmdAp0aGlzLnQ9bnVsbDsvLyB0aHJlYWQKdGhpcy5pPWk7Ly8gbnVtYmVyCn1UcmVlTm9kZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOb2RlLnByb3RvdHlwZSk7ZnVuY3Rpb24gdHJlZVJvb3Qocm9vdCl7dmFyIHRyZWU9bmV3IFRyZWVOb2RlKHJvb3QsMCksbm9kZSxub2Rlcz1bdHJlZV0sY2hpbGQsY2hpbGRyZW4saSxuO3doaWxlKG5vZGU9bm9kZXMucG9wKCkpe2lmKGNoaWxkcmVuPW5vZGUuXy5jaGlsZHJlbil7bm9kZS5jaGlsZHJlbj1uZXcgQXJyYXkobj1jaGlsZHJlbi5sZW5ndGgpO2ZvcihpPW4tMTtpPj0wOy0taSl7bm9kZXMucHVzaChjaGlsZD1ub2RlLmNoaWxkcmVuW2ldPW5ldyBUcmVlTm9kZShjaGlsZHJlbltpXSxpKSk7Y2hpbGQucGFyZW50PW5vZGV9fX0odHJlZS5wYXJlbnQ9bmV3IFRyZWVOb2RlKG51bGwsMCkpLmNoaWxkcmVuPVt0cmVlXTtyZXR1cm4gdHJlZX0KLy8gTm9kZS1saW5rIHRyZWUgZGlhZ3JhbSB1c2luZyB0aGUgUmVpbmdvbGQtVGlsZm9yZCAidGlkeSIgYWxnb3JpdGhtCmZ1bmN0aW9uIHRyZWUoKXt2YXIgc2VwYXJhdGlvbj1kZWZhdWx0U2VwYXJhdGlvbiQxLGR4PTEsZHk9MSxub2RlU2l6ZT1udWxsO2Z1bmN0aW9uIHRyZWUocm9vdCl7dmFyIHQ9dHJlZVJvb3Qocm9vdCk7Ci8vIENvbXB1dGUgdGhlIGxheW91dCB1c2luZyBCdWNoaGVpbSBldCBhbC7igJlzIGFsZ29yaXRobS4KdC5lYWNoQWZ0ZXIoZmlyc3RXYWxrKSx0LnBhcmVudC5tPS10Lno7dC5lYWNoQmVmb3JlKHNlY29uZFdhbGspOwovLyBJZiBhIGZpeGVkIG5vZGUgc2l6ZSBpcyBzcGVjaWZpZWQsIHNjYWxlIHggYW5kIHkuCmlmKG5vZGVTaXplKXJvb3QuZWFjaEJlZm9yZShzaXplTm9kZSk7Ci8vIElmIGEgZml4ZWQgdHJlZSBzaXplIGlzIHNwZWNpZmllZCwgc2NhbGUgeCBhbmQgeSBiYXNlZCBvbiB0aGUgZXh0ZW50LgovLyBDb21wdXRlIHRoZSBsZWZ0LW1vc3QsIHJpZ2h0LW1vc3QsIGFuZCBkZXB0aC1tb3N0IG5vZGVzIGZvciBleHRlbnRzLgplbHNle3ZhciBsZWZ0PXJvb3QscmlnaHQ9cm9vdCxib3R0b209cm9vdDtyb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSl7aWYobm9kZS54PGxlZnQueClsZWZ0PW5vZGU7aWYobm9kZS54PnJpZ2h0LngpcmlnaHQ9bm9kZTtpZihub2RlLmRlcHRoPmJvdHRvbS5kZXB0aClib3R0b209bm9kZX0pO3ZhciBzPWxlZnQ9PT1yaWdodD8xOnNlcGFyYXRpb24obGVmdCxyaWdodCkvMix0eD1zLWxlZnQueCxreD1keC8ocmlnaHQueCtzK3R4KSxreT1keS8oYm90dG9tLmRlcHRofHwxKTtyb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSl7bm9kZS54PShub2RlLngrdHgpKmt4O25vZGUueT1ub2RlLmRlcHRoKmt5fSl9cmV0dXJuIHJvb3R9Ci8vIENvbXB1dGVzIGEgcHJlbGltaW5hcnkgeC1jb29yZGluYXRlIGZvciB2LiBCZWZvcmUgdGhhdCwgRklSU1QgV0FMSyBpcwovLyBhcHBsaWVkIHJlY3Vyc2l2ZWx5IHRvIHRoZSBjaGlsZHJlbiBvZiB2LCBhcyB3ZWxsIGFzIHRoZSBmdW5jdGlvbgovLyBBUFBPUlRJT04uIEFmdGVyIHNwYWNpbmcgb3V0IHRoZSBjaGlsZHJlbiBieSBjYWxsaW5nIEVYRUNVVEUgU0hJRlRTLCB0aGUKLy8gbm9kZSB2IGlzIHBsYWNlZCB0byB0aGUgbWlkcG9pbnQgb2YgaXRzIG91dGVybW9zdCBjaGlsZHJlbi4KZnVuY3Rpb24gZmlyc3RXYWxrKHYpe3ZhciBjaGlsZHJlbj12LmNoaWxkcmVuLHNpYmxpbmdzPXYucGFyZW50LmNoaWxkcmVuLHc9di5pP3NpYmxpbmdzW3YuaS0xXTpudWxsO2lmKGNoaWxkcmVuKXtleGVjdXRlU2hpZnRzKHYpO3ZhciBtaWRwb2ludD0oY2hpbGRyZW5bMF0ueitjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGgtMV0ueikvMjtpZih3KXt2Lno9dy56K3NlcGFyYXRpb24odi5fLHcuXyk7di5tPXYuei1taWRwb2ludH1lbHNle3Yuej1taWRwb2ludH19ZWxzZSBpZih3KXt2Lno9dy56K3NlcGFyYXRpb24odi5fLHcuXyl9di5wYXJlbnQuQT1hcHBvcnRpb24odix3LHYucGFyZW50LkF8fHNpYmxpbmdzWzBdKX0KLy8gQ29tcHV0ZXMgYWxsIHJlYWwgeC1jb29yZGluYXRlcyBieSBzdW1taW5nIHVwIHRoZSBtb2RpZmllcnMgcmVjdXJzaXZlbHkuCmZ1bmN0aW9uIHNlY29uZFdhbGsodil7di5fLng9di56K3YucGFyZW50Lm07di5tKz12LnBhcmVudC5tfQovLyBUaGUgY29yZSBvZiB0aGUgYWxnb3JpdGhtLiBIZXJlLCBhIG5ldyBzdWJ0cmVlIGlzIGNvbWJpbmVkIHdpdGggdGhlCi8vIHByZXZpb3VzIHN1YnRyZWVzLiBUaHJlYWRzIGFyZSB1c2VkIHRvIHRyYXZlcnNlIHRoZSBpbnNpZGUgYW5kIG91dHNpZGUKLy8gY29udG91cnMgb2YgdGhlIGxlZnQgYW5kIHJpZ2h0IHN1YnRyZWUgdXAgdG8gdGhlIGhpZ2hlc3QgY29tbW9uIGxldmVsLiBUaGUKLy8gdmVydGljZXMgdXNlZCBmb3IgdGhlIHRyYXZlcnNhbHMgYXJlIHZpKywgdmktLCB2by0sIGFuZCB2byssIHdoZXJlIHRoZQovLyBzdXBlcnNjcmlwdCBvIG1lYW5zIG91dHNpZGUgYW5kIGkgbWVhbnMgaW5zaWRlLCB0aGUgc3Vic2NyaXB0IC0gbWVhbnMgbGVmdAovLyBzdWJ0cmVlIGFuZCArIG1lYW5zIHJpZ2h0IHN1YnRyZWUuIEZvciBzdW1taW5nIHVwIHRoZSBtb2RpZmllcnMgYWxvbmcgdGhlCi8vIGNvbnRvdXIsIHdlIHVzZSByZXNwZWN0aXZlIHZhcmlhYmxlcyBzaSssIHNpLSwgc28tLCBhbmQgc28rLiBXaGVuZXZlciB0d28KLy8gbm9kZXMgb2YgdGhlIGluc2lkZSBjb250b3VycyBjb25mbGljdCwgd2UgY29tcHV0ZSB0aGUgbGVmdCBvbmUgb2YgdGhlCi8vIGdyZWF0ZXN0IHVuY29tbW9uIGFuY2VzdG9ycyB1c2luZyB0aGUgZnVuY3Rpb24gQU5DRVNUT1IgYW5kIGNhbGwgTU9WRQovLyBTVUJUUkVFIHRvIHNoaWZ0IHRoZSBzdWJ0cmVlIGFuZCBwcmVwYXJlIHRoZSBzaGlmdHMgb2Ygc21hbGxlciBzdWJ0cmVlcy4KLy8gRmluYWxseSwgd2UgYWRkIGEgbmV3IHRocmVhZCAoaWYgbmVjZXNzYXJ5KS4KZnVuY3Rpb24gYXBwb3J0aW9uKHYsdyxhbmNlc3Rvcil7aWYodyl7dmFyIHZpcD12LHZvcD12LHZpbT13LHZvbT12aXAucGFyZW50LmNoaWxkcmVuWzBdLHNpcD12aXAubSxzb3A9dm9wLm0sc2ltPXZpbS5tLHNvbT12b20ubSxzaGlmdDt3aGlsZSh2aW09bmV4dFJpZ2h0KHZpbSksdmlwPW5leHRMZWZ0KHZpcCksdmltJiZ2aXApe3ZvbT1uZXh0TGVmdCh2b20pO3ZvcD1uZXh0UmlnaHQodm9wKTt2b3AuYT12O3NoaWZ0PXZpbS56K3NpbS12aXAuei1zaXArc2VwYXJhdGlvbih2aW0uXyx2aXAuXyk7aWYoc2hpZnQ+MCl7bW92ZVN1YnRyZWUobmV4dEFuY2VzdG9yKHZpbSx2LGFuY2VzdG9yKSx2LHNoaWZ0KTtzaXArPXNoaWZ0O3NvcCs9c2hpZnR9c2ltKz12aW0ubTtzaXArPXZpcC5tO3NvbSs9dm9tLm07c29wKz12b3AubX1pZih2aW0mJiFuZXh0UmlnaHQodm9wKSl7dm9wLnQ9dmltO3ZvcC5tKz1zaW0tc29wfWlmKHZpcCYmIW5leHRMZWZ0KHZvbSkpe3ZvbS50PXZpcDt2b20ubSs9c2lwLXNvbTthbmNlc3Rvcj12fX1yZXR1cm4gYW5jZXN0b3J9ZnVuY3Rpb24gc2l6ZU5vZGUobm9kZSl7bm9kZS54Kj1keDtub2RlLnk9bm9kZS5kZXB0aCpkeX10cmVlLnNlcGFyYXRpb249ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHNlcGFyYXRpb249eCx0cmVlKTpzZXBhcmF0aW9ufTt0cmVlLnNpemU9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG5vZGVTaXplPWZhbHNlLGR4PSt4WzBdLGR5PSt4WzFdLHRyZWUpOm5vZGVTaXplP251bGw6W2R4LGR5XX07dHJlZS5ub2RlU2l6ZT1mdW5jdGlvbih4KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obm9kZVNpemU9dHJ1ZSxkeD0reFswXSxkeT0reFsxXSx0cmVlKTpub2RlU2l6ZT9bZHgsZHldOm51bGx9O3JldHVybiB0cmVlfWZ1bmN0aW9uIHRyZWVtYXBTbGljZShwYXJlbnQseDAseTAseDEseTEpe3ZhciBub2Rlcz1wYXJlbnQuY2hpbGRyZW4sbm9kZSxpPS0xLG49bm9kZXMubGVuZ3RoLGs9cGFyZW50LnZhbHVlJiYoeTEteTApL3BhcmVudC52YWx1ZTt3aGlsZSgrK2k8bil7bm9kZT1ub2Rlc1tpXSxub2RlLngwPXgwLG5vZGUueDE9eDE7bm9kZS55MD15MCxub2RlLnkxPXkwKz1ub2RlLnZhbHVlKmt9fXZhciBwaGk9KDErTWF0aC5zcXJ0KDUpKS8yO2Z1bmN0aW9uIHNxdWFyaWZ5UmF0aW8ocmF0aW8scGFyZW50LHgwLHkwLHgxLHkxKXt2YXIgcm93cz1bXSxub2Rlcz1wYXJlbnQuY2hpbGRyZW4scm93LG5vZGVWYWx1ZSxpMD0wLGkxPTAsbj1ub2Rlcy5sZW5ndGgsZHgsZHksdmFsdWU9cGFyZW50LnZhbHVlLHN1bVZhbHVlLG1pblZhbHVlLG1heFZhbHVlLG5ld1JhdGlvLG1pblJhdGlvLGFscGhhLGJldGE7d2hpbGUoaTA8bil7ZHg9eDEteDAsZHk9eTEteTA7Ci8vIEZpbmQgdGhlIG5leHQgbm9uLWVtcHR5IG5vZGUuCmRve3N1bVZhbHVlPW5vZGVzW2kxKytdLnZhbHVlfXdoaWxlKCFzdW1WYWx1ZSYmaTE8bik7bWluVmFsdWU9bWF4VmFsdWU9c3VtVmFsdWU7YWxwaGE9TWF0aC5tYXgoZHkvZHgsZHgvZHkpLyh2YWx1ZSpyYXRpbyk7YmV0YT1zdW1WYWx1ZSpzdW1WYWx1ZSphbHBoYTttaW5SYXRpbz1NYXRoLm1heChtYXhWYWx1ZS9iZXRhLGJldGEvbWluVmFsdWUpOwovLyBLZWVwIGFkZGluZyBub2RlcyB3aGlsZSB0aGUgYXNwZWN0IHJhdGlvIG1haW50YWlucyBvciBpbXByb3Zlcy4KZm9yKDtpMTxuOysraTEpe3N1bVZhbHVlKz1ub2RlVmFsdWU9bm9kZXNbaTFdLnZhbHVlO2lmKG5vZGVWYWx1ZTxtaW5WYWx1ZSltaW5WYWx1ZT1ub2RlVmFsdWU7aWYobm9kZVZhbHVlPm1heFZhbHVlKW1heFZhbHVlPW5vZGVWYWx1ZTtiZXRhPXN1bVZhbHVlKnN1bVZhbHVlKmFscGhhO25ld1JhdGlvPU1hdGgubWF4KG1heFZhbHVlL2JldGEsYmV0YS9taW5WYWx1ZSk7aWYobmV3UmF0aW8+bWluUmF0aW8pe3N1bVZhbHVlLT1ub2RlVmFsdWU7YnJlYWt9bWluUmF0aW89bmV3UmF0aW99Ci8vIFBvc2l0aW9uIGFuZCByZWNvcmQgdGhlIHJvdyBvcmllbnRhdGlvbi4Kcm93cy5wdXNoKHJvdz17dmFsdWU6c3VtVmFsdWUsZGljZTpkeDxkeSxjaGlsZHJlbjpub2Rlcy5zbGljZShpMCxpMSl9KTtpZihyb3cuZGljZSl0cmVlbWFwRGljZShyb3cseDAseTAseDEsdmFsdWU/eTArPWR5KnN1bVZhbHVlL3ZhbHVlOnkxKTtlbHNlIHRyZWVtYXBTbGljZShyb3cseDAseTAsdmFsdWU/eDArPWR4KnN1bVZhbHVlL3ZhbHVlOngxLHkxKTt2YWx1ZS09c3VtVmFsdWUsaTA9aTF9cmV0dXJuIHJvd3N9dmFyIHNxdWFyaWZ5PWZ1bmN0aW9uIGN1c3RvbShyYXRpbyl7ZnVuY3Rpb24gc3F1YXJpZnkocGFyZW50LHgwLHkwLHgxLHkxKXtzcXVhcmlmeVJhdGlvKHJhdGlvLHBhcmVudCx4MCx5MCx4MSx5MSl9c3F1YXJpZnkucmF0aW89ZnVuY3Rpb24oeCl7cmV0dXJuIGN1c3RvbSgoeD0reCk+MT94OjEpfTtyZXR1cm4gc3F1YXJpZnl9KHBoaSk7ZnVuY3Rpb24gaW5kZXgkMSgpe3ZhciB0aWxlPXNxdWFyaWZ5LHJvdW5kPWZhbHNlLGR4PTEsZHk9MSxwYWRkaW5nU3RhY2s9WzBdLHBhZGRpbmdJbm5lcj1jb25zdGFudFplcm8scGFkZGluZ1RvcD1jb25zdGFudFplcm8scGFkZGluZ1JpZ2h0PWNvbnN0YW50WmVybyxwYWRkaW5nQm90dG9tPWNvbnN0YW50WmVybyxwYWRkaW5nTGVmdD1jb25zdGFudFplcm87ZnVuY3Rpb24gdHJlZW1hcChyb290KXtyb290LngwPXJvb3QueTA9MDtyb290LngxPWR4O3Jvb3QueTE9ZHk7cm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZSk7cGFkZGluZ1N0YWNrPVswXTtpZihyb3VuZClyb290LmVhY2hCZWZvcmUocm91bmROb2RlKTtyZXR1cm4gcm9vdH1mdW5jdGlvbiBwb3NpdGlvbk5vZGUobm9kZSl7dmFyIHA9cGFkZGluZ1N0YWNrW25vZGUuZGVwdGhdLHgwPW5vZGUueDArcCx5MD1ub2RlLnkwK3AseDE9bm9kZS54MS1wLHkxPW5vZGUueTEtcDtpZih4MTx4MCl4MD14MT0oeDAreDEpLzI7aWYoeTE8eTApeTA9eTE9KHkwK3kxKS8yO25vZGUueDA9eDA7bm9kZS55MD15MDtub2RlLngxPXgxO25vZGUueTE9eTE7aWYobm9kZS5jaGlsZHJlbil7cD1wYWRkaW5nU3RhY2tbbm9kZS5kZXB0aCsxXT1wYWRkaW5nSW5uZXIobm9kZSkvMjt4MCs9cGFkZGluZ0xlZnQobm9kZSktcDt5MCs9cGFkZGluZ1RvcChub2RlKS1wO3gxLT1wYWRkaW5nUmlnaHQobm9kZSktcDt5MS09cGFkZGluZ0JvdHRvbShub2RlKS1wO2lmKHgxPHgwKXgwPXgxPSh4MCt4MSkvMjtpZih5MTx5MCl5MD15MT0oeTAreTEpLzI7dGlsZShub2RlLHgwLHkwLHgxLHkxKX19dHJlZW1hcC5yb3VuZD1mdW5jdGlvbih4KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocm91bmQ9ISF4LHRyZWVtYXApOnJvdW5kfTt0cmVlbWFwLnNpemU9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGR4PSt4WzBdLGR5PSt4WzFdLHRyZWVtYXApOltkeCxkeV19O3RyZWVtYXAudGlsZT1mdW5jdGlvbih4KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGlsZT1yZXF1aXJlZCh4KSx0cmVlbWFwKTp0aWxlfTt0cmVlbWFwLnBhZGRpbmc9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dHJlZW1hcC5wYWRkaW5nSW5uZXIoeCkucGFkZGluZ091dGVyKHgpOnRyZWVtYXAucGFkZGluZ0lubmVyKCl9O3RyZWVtYXAucGFkZGluZ0lubmVyPWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwYWRkaW5nSW5uZXI9dHlwZW9mIHg9PT0iZnVuY3Rpb24iP3g6Y29uc3RhbnQoK3gpLHRyZWVtYXApOnBhZGRpbmdJbm5lcn07dHJlZW1hcC5wYWRkaW5nT3V0ZXI9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dHJlZW1hcC5wYWRkaW5nVG9wKHgpLnBhZGRpbmdSaWdodCh4KS5wYWRkaW5nQm90dG9tKHgpLnBhZGRpbmdMZWZ0KHgpOnRyZWVtYXAucGFkZGluZ1RvcCgpfTt0cmVlbWFwLnBhZGRpbmdUb3A9ZnVuY3Rpb24oeCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhZGRpbmdUb3A9dHlwZW9mIHg9PT0iZnVuY3Rpb24iP3g6Y29uc3RhbnQoK3gpLHRyZWVtYXApOnBhZGRpbmdUb3B9O3RyZWVtYXAucGFkZGluZ1JpZ2h0PWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwYWRkaW5nUmlnaHQ9dHlwZW9mIHg9PT0iZnVuY3Rpb24iP3g6Y29uc3RhbnQoK3gpLHRyZWVtYXApOnBhZGRpbmdSaWdodH07dHJlZW1hcC5wYWRkaW5nQm90dG9tPWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwYWRkaW5nQm90dG9tPXR5cGVvZiB4PT09ImZ1bmN0aW9uIj94OmNvbnN0YW50KCt4KSx0cmVlbWFwKTpwYWRkaW5nQm90dG9tfTt0cmVlbWFwLnBhZGRpbmdMZWZ0PWZ1bmN0aW9uKHgpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhwYWRkaW5nTGVmdD10eXBlb2YgeD09PSJmdW5jdGlvbiI/eDpjb25zdGFudCgreCksdHJlZW1hcCk6cGFkZGluZ0xlZnR9O3JldHVybiB0cmVlbWFwfWZ1bmN0aW9uIGJpbmFyeShwYXJlbnQseDAseTAseDEseTEpe3ZhciBub2Rlcz1wYXJlbnQuY2hpbGRyZW4saSxuPW5vZGVzLmxlbmd0aCxzdW0sc3Vtcz1uZXcgQXJyYXkobisxKTtmb3Ioc3Vtc1swXT1zdW09aT0wO2k8bjsrK2kpe3N1bXNbaSsxXT1zdW0rPW5vZGVzW2ldLnZhbHVlfXBhcnRpdGlvbigwLG4scGFyZW50LnZhbHVlLHgwLHkwLHgxLHkxKTtmdW5jdGlvbiBwYXJ0aXRpb24oaSxqLHZhbHVlLHgwLHkwLHgxLHkxKXtpZihpPj1qLTEpe3ZhciBub2RlPW5vZGVzW2ldO25vZGUueDA9eDAsbm9kZS55MD15MDtub2RlLngxPXgxLG5vZGUueTE9eTE7cmV0dXJufXZhciB2YWx1ZU9mZnNldD1zdW1zW2ldLHZhbHVlVGFyZ2V0PXZhbHVlLzIrdmFsdWVPZmZzZXQsaz1pKzEsaGk9ai0xO3doaWxlKGs8aGkpe3ZhciBtaWQ9aytoaT4+PjE7aWYoc3Vtc1ttaWRdPHZhbHVlVGFyZ2V0KWs9bWlkKzE7ZWxzZSBoaT1taWR9aWYodmFsdWVUYXJnZXQtc3Vtc1trLTFdPHN1bXNba10tdmFsdWVUYXJnZXQmJmkrMTxrKS0tazt2YXIgdmFsdWVMZWZ0PXN1bXNba10tdmFsdWVPZmZzZXQsdmFsdWVSaWdodD12YWx1ZS12YWx1ZUxlZnQ7aWYoeDEteDA+eTEteTApe3ZhciB4az0oeDAqdmFsdWVSaWdodCt4MSp2YWx1ZUxlZnQpL3ZhbHVlO3BhcnRpdGlvbihpLGssdmFsdWVMZWZ0LHgwLHkwLHhrLHkxKTtwYXJ0aXRpb24oayxqLHZhbHVlUmlnaHQseGsseTAseDEseTEpfWVsc2V7dmFyIHlrPSh5MCp2YWx1ZVJpZ2h0K3kxKnZhbHVlTGVmdCkvdmFsdWU7cGFydGl0aW9uKGksayx2YWx1ZUxlZnQseDAseTAseDEseWspO3BhcnRpdGlvbihrLGosdmFsdWVSaWdodCx4MCx5ayx4MSx5MSl9fX1mdW5jdGlvbiBzbGljZURpY2UocGFyZW50LHgwLHkwLHgxLHkxKXsocGFyZW50LmRlcHRoJjE/dHJlZW1hcFNsaWNlOnRyZWVtYXBEaWNlKShwYXJlbnQseDAseTAseDEseTEpfXZhciByZXNxdWFyaWZ5PWZ1bmN0aW9uIGN1c3RvbShyYXRpbyl7ZnVuY3Rpb24gcmVzcXVhcmlmeShwYXJlbnQseDAseTAseDEseTEpe2lmKChyb3dzPXBhcmVudC5fc3F1YXJpZnkpJiZyb3dzLnJhdGlvPT09cmF0aW8pe3ZhciByb3dzLHJvdyxub2RlcyxpLGo9LTEsbixtPXJvd3MubGVuZ3RoLHZhbHVlPXBhcmVudC52YWx1ZTt3aGlsZSgrK2o8bSl7cm93PXJvd3Nbal0sbm9kZXM9cm93LmNoaWxkcmVuO2ZvcihpPXJvdy52YWx1ZT0wLG49bm9kZXMubGVuZ3RoO2k8bjsrK2kpcm93LnZhbHVlKz1ub2Rlc1tpXS52YWx1ZTtpZihyb3cuZGljZSl0cmVlbWFwRGljZShyb3cseDAseTAseDEseTArPSh5MS15MCkqcm93LnZhbHVlL3ZhbHVlKTtlbHNlIHRyZWVtYXBTbGljZShyb3cseDAseTAseDArPSh4MS14MCkqcm93LnZhbHVlL3ZhbHVlLHkxKTt2YWx1ZS09cm93LnZhbHVlfX1lbHNle3BhcmVudC5fc3F1YXJpZnk9cm93cz1zcXVhcmlmeVJhdGlvKHJhdGlvLHBhcmVudCx4MCx5MCx4MSx5MSk7cm93cy5yYXRpbz1yYXRpb319cmVzcXVhcmlmeS5yYXRpbz1mdW5jdGlvbih4KXtyZXR1cm4gY3VzdG9tKCh4PSt4KT4xP3g6MSl9O3JldHVybiByZXNxdWFyaWZ5fShwaGkpO2V4cG9ydHMuY2x1c3Rlcj1jbHVzdGVyO2V4cG9ydHMuaGllcmFyY2h5PWhpZXJhcmNoeTtleHBvcnRzLnBhY2s9aW5kZXg7ZXhwb3J0cy5wYWNrRW5jbG9zZT1lbmNsb3NlO2V4cG9ydHMucGFja1NpYmxpbmdzPXNpYmxpbmdzO2V4cG9ydHMucGFydGl0aW9uPXBhcnRpdGlvbjtleHBvcnRzLnN0cmF0aWZ5PXN0cmF0aWZ5O2V4cG9ydHMudHJlZT10cmVlO2V4cG9ydHMudHJlZW1hcD1pbmRleCQxO2V4cG9ydHMudHJlZW1hcEJpbmFyeT1iaW5hcnk7ZXhwb3J0cy50cmVlbWFwRGljZT10cmVlbWFwRGljZTtleHBvcnRzLnRyZWVtYXBSZXNxdWFyaWZ5PXJlc3F1YXJpZnk7ZXhwb3J0cy50cmVlbWFwU2xpY2U9dHJlZW1hcFNsaWNlO2V4cG9ydHMudHJlZW1hcFNsaWNlRGljZT1zbGljZURpY2U7ZXhwb3J0cy50cmVlbWFwU3F1YXJpZnk9c3F1YXJpZnk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0se31dLDQ1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy1pbnRlcnBvbGF0ZS8gdjEuNC4wIENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMscmVxdWlyZSgiZDMtY29sb3IiKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLWNvbG9yIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMpKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM0NvbG9yKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYmFzaXModDEsdjAsdjEsdjIsdjMpe3ZhciB0Mj10MSp0MSx0Mz10Mip0MTtyZXR1cm4oKDEtMyp0MSszKnQyLXQzKSp2MCsoNC02KnQyKzMqdDMpKnYxKygxKzMqdDErMyp0Mi0zKnQzKSp2Mit0Myp2MykvNn1mdW5jdGlvbiBiYXNpcyQxKHZhbHVlcyl7dmFyIG49dmFsdWVzLmxlbmd0aC0xO3JldHVybiBmdW5jdGlvbih0KXt2YXIgaT10PD0wP3Q9MDp0Pj0xPyh0PTEsbi0xKTpNYXRoLmZsb29yKHQqbiksdjE9dmFsdWVzW2ldLHYyPXZhbHVlc1tpKzFdLHYwPWk+MD92YWx1ZXNbaS0xXToyKnYxLXYyLHYzPWk8bi0xP3ZhbHVlc1tpKzJdOjIqdjItdjE7cmV0dXJuIGJhc2lzKCh0LWkvbikqbix2MCx2MSx2Mix2Myl9fWZ1bmN0aW9uIGJhc2lzQ2xvc2VkKHZhbHVlcyl7dmFyIG49dmFsdWVzLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGk9TWF0aC5mbG9vcigoKHQlPTEpPDA/Kyt0OnQpKm4pLHYwPXZhbHVlc1soaStuLTEpJW5dLHYxPXZhbHVlc1tpJW5dLHYyPXZhbHVlc1soaSsxKSVuXSx2Mz12YWx1ZXNbKGkrMiklbl07cmV0dXJuIGJhc2lzKCh0LWkvbikqbix2MCx2MSx2Mix2Myl9fWZ1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB4fX1mdW5jdGlvbiBsaW5lYXIoYSxkKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGErdCpkfX1mdW5jdGlvbiBleHBvbmVudGlhbChhLGIseSl7cmV0dXJuIGE9TWF0aC5wb3coYSx5KSxiPU1hdGgucG93KGIseSktYSx5PTEveSxmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5wb3coYSt0KmIseSl9fWZ1bmN0aW9uIGh1ZShhLGIpe3ZhciBkPWItYTtyZXR1cm4gZD9saW5lYXIoYSxkPjE4MHx8ZDwtMTgwP2QtMzYwKk1hdGgucm91bmQoZC8zNjApOmQpOmNvbnN0YW50KGlzTmFOKGEpP2I6YSl9ZnVuY3Rpb24gZ2FtbWEoeSl7cmV0dXJuKHk9K3kpPT09MT9ub2dhbW1hOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGItYT9leHBvbmVudGlhbChhLGIseSk6Y29uc3RhbnQoaXNOYU4oYSk/YjphKX19ZnVuY3Rpb24gbm9nYW1tYShhLGIpe3ZhciBkPWItYTtyZXR1cm4gZD9saW5lYXIoYSxkKTpjb25zdGFudChpc05hTihhKT9iOmEpfXZhciByZ2I9ZnVuY3Rpb24gcmdiR2FtbWEoeSl7dmFyIGNvbG9yPWdhbW1hKHkpO2Z1bmN0aW9uIHJnYihzdGFydCxlbmQpe3ZhciByPWNvbG9yKChzdGFydD1kM0NvbG9yLnJnYihzdGFydCkpLnIsKGVuZD1kM0NvbG9yLnJnYihlbmQpKS5yKSxnPWNvbG9yKHN0YXJ0LmcsZW5kLmcpLGI9Y29sb3Ioc3RhcnQuYixlbmQuYiksb3BhY2l0eT1ub2dhbW1hKHN0YXJ0Lm9wYWNpdHksZW5kLm9wYWNpdHkpO3JldHVybiBmdW5jdGlvbih0KXtzdGFydC5yPXIodCk7c3RhcnQuZz1nKHQpO3N0YXJ0LmI9Yih0KTtzdGFydC5vcGFjaXR5PW9wYWNpdHkodCk7cmV0dXJuIHN0YXJ0KyIifX1yZ2IuZ2FtbWE9cmdiR2FtbWE7cmV0dXJuIHJnYn0oMSk7ZnVuY3Rpb24gcmdiU3BsaW5lKHNwbGluZSl7cmV0dXJuIGZ1bmN0aW9uKGNvbG9ycyl7dmFyIG49Y29sb3JzLmxlbmd0aCxyPW5ldyBBcnJheShuKSxnPW5ldyBBcnJheShuKSxiPW5ldyBBcnJheShuKSxpLGNvbG9yO2ZvcihpPTA7aTxuOysraSl7Y29sb3I9ZDNDb2xvci5yZ2IoY29sb3JzW2ldKTtyW2ldPWNvbG9yLnJ8fDA7Z1tpXT1jb2xvci5nfHwwO2JbaV09Y29sb3IuYnx8MH1yPXNwbGluZShyKTtnPXNwbGluZShnKTtiPXNwbGluZShiKTtjb2xvci5vcGFjaXR5PTE7cmV0dXJuIGZ1bmN0aW9uKHQpe2NvbG9yLnI9cih0KTtjb2xvci5nPWcodCk7Y29sb3IuYj1iKHQpO3JldHVybiBjb2xvcisiIn19fXZhciByZ2JCYXNpcz1yZ2JTcGxpbmUoYmFzaXMkMSk7dmFyIHJnYkJhc2lzQ2xvc2VkPXJnYlNwbGluZShiYXNpc0Nsb3NlZCk7ZnVuY3Rpb24gbnVtYmVyQXJyYXkoYSxiKXtpZighYiliPVtdO3ZhciBuPWE/TWF0aC5taW4oYi5sZW5ndGgsYS5sZW5ndGgpOjAsYz1iLnNsaWNlKCksaTtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKGk9MDtpPG47KytpKWNbaV09YVtpXSooMS10KStiW2ldKnQ7cmV0dXJuIGN9fWZ1bmN0aW9uIGlzTnVtYmVyQXJyYXkoeCl7cmV0dXJuIEFycmF5QnVmZmVyLmlzVmlldyh4KSYmISh4IGluc3RhbmNlb2YgRGF0YVZpZXcpfWZ1bmN0aW9uIGFycmF5KGEsYil7cmV0dXJuKGlzTnVtYmVyQXJyYXkoYik/bnVtYmVyQXJyYXk6Z2VuZXJpY0FycmF5KShhLGIpfWZ1bmN0aW9uIGdlbmVyaWNBcnJheShhLGIpe3ZhciBuYj1iP2IubGVuZ3RoOjAsbmE9YT9NYXRoLm1pbihuYixhLmxlbmd0aCk6MCx4PW5ldyBBcnJheShuYSksYz1uZXcgQXJyYXkobmIpLGk7Zm9yKGk9MDtpPG5hOysraSl4W2ldPXZhbHVlKGFbaV0sYltpXSk7Zm9yKDtpPG5iOysraSljW2ldPWJbaV07cmV0dXJuIGZ1bmN0aW9uKHQpe2ZvcihpPTA7aTxuYTsrK2kpY1tpXT14W2ldKHQpO3JldHVybiBjfX1mdW5jdGlvbiBkYXRlKGEsYil7dmFyIGQ9bmV3IERhdGU7cmV0dXJuIGE9K2EsYj0rYixmdW5jdGlvbih0KXtyZXR1cm4gZC5zZXRUaW1lKGEqKDEtdCkrYip0KSxkfX1mdW5jdGlvbiBudW1iZXIoYSxiKXtyZXR1cm4gYT0rYSxiPStiLGZ1bmN0aW9uKHQpe3JldHVybiBhKigxLXQpK2IqdH19ZnVuY3Rpb24gb2JqZWN0KGEsYil7dmFyIGk9e30sYz17fSxrO2lmKGE9PT1udWxsfHx0eXBlb2YgYSE9PSJvYmplY3QiKWE9e307aWYoYj09PW51bGx8fHR5cGVvZiBiIT09Im9iamVjdCIpYj17fTtmb3IoayBpbiBiKXtpZihrIGluIGEpe2lba109dmFsdWUoYVtrXSxiW2tdKX1lbHNle2Nba109YltrXX19cmV0dXJuIGZ1bmN0aW9uKHQpe2ZvcihrIGluIGkpY1trXT1pW2tdKHQpO3JldHVybiBjfX12YXIgcmVBPS9bLStdPyg/OlxkK1wuP1xkKnxcLj9cZCspKD86W2VFXVstK10/XGQrKT8vZyxyZUI9bmV3IFJlZ0V4cChyZUEuc291cmNlLCJnIik7ZnVuY3Rpb24gemVybyhiKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYn19ZnVuY3Rpb24gb25lKGIpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gYih0KSsiIn19ZnVuY3Rpb24gc3RyaW5nKGEsYil7dmFyIGJpPXJlQS5sYXN0SW5kZXg9cmVCLmxhc3RJbmRleD0wLC8vIHNjYW4gaW5kZXggZm9yIG5leHQgbnVtYmVyIGluIGIKYW0sLy8gY3VycmVudCBtYXRjaCBpbiBhCmJtLC8vIGN1cnJlbnQgbWF0Y2ggaW4gYgpicywvLyBzdHJpbmcgcHJlY2VkaW5nIGN1cnJlbnQgbnVtYmVyIGluIGIsIGlmIGFueQppPS0xLC8vIGluZGV4IGluIHMKcz1bXSwvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnMKcT1bXTsvLyBudW1iZXIgaW50ZXJwb2xhdG9ycwovLyBDb2VyY2UgaW5wdXRzIHRvIHN0cmluZ3MuCmE9YSsiIixiPWIrIiI7Ci8vIEludGVycG9sYXRlIHBhaXJzIG9mIG51bWJlcnMgaW4gYSAmIGIuCndoaWxlKChhbT1yZUEuZXhlYyhhKSkmJihibT1yZUIuZXhlYyhiKSkpe2lmKChicz1ibS5pbmRleCk+Ymkpey8vIGEgc3RyaW5nIHByZWNlZGVzIHRoZSBuZXh0IG51bWJlciBpbiBiCmJzPWIuc2xpY2UoYmksYnMpO2lmKHNbaV0pc1tpXSs9YnM7Ly8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmcKZWxzZSBzWysraV09YnN9aWYoKGFtPWFtWzBdKT09PShibT1ibVswXSkpey8vIG51bWJlcnMgaW4gYSAmIGIgbWF0Y2gKaWYoc1tpXSlzW2ldKz1ibTsvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZwplbHNlIHNbKytpXT1ibX1lbHNley8vIGludGVycG9sYXRlIG5vbi1tYXRjaGluZyBudW1iZXJzCnNbKytpXT1udWxsO3EucHVzaCh7aTppLHg6bnVtYmVyKGFtLGJtKX0pfWJpPXJlQi5sYXN0SW5kZXh9Ci8vIEFkZCByZW1haW5zIG9mIGIuCmlmKGJpPGIubGVuZ3RoKXticz1iLnNsaWNlKGJpKTtpZihzW2ldKXNbaV0rPWJzOy8vIGNvYWxlc2NlIHdpdGggcHJldmlvdXMgc3RyaW5nCmVsc2Ugc1srK2ldPWJzfQovLyBTcGVjaWFsIG9wdGltaXphdGlvbiBmb3Igb25seSBhIHNpbmdsZSBtYXRjaC4KLy8gT3RoZXJ3aXNlLCBpbnRlcnBvbGF0ZSBlYWNoIG9mIHRoZSBudW1iZXJzIGFuZCByZWpvaW4gdGhlIHN0cmluZy4KcmV0dXJuIHMubGVuZ3RoPDI/cVswXT9vbmUocVswXS54KTp6ZXJvKGIpOihiPXEubGVuZ3RoLGZ1bmN0aW9uKHQpe2Zvcih2YXIgaT0wLG87aTxiOysraSlzWyhvPXFbaV0pLmldPW8ueCh0KTtyZXR1cm4gcy5qb2luKCIiKX0pfWZ1bmN0aW9uIHZhbHVlKGEsYil7dmFyIHQ9dHlwZW9mIGIsYztyZXR1cm4gYj09bnVsbHx8dD09PSJib29sZWFuIj9jb25zdGFudChiKToodD09PSJudW1iZXIiP251bWJlcjp0PT09InN0cmluZyI/KGM9ZDNDb2xvci5jb2xvcihiKSk/KGI9YyxyZ2IpOnN0cmluZzpiIGluc3RhbmNlb2YgZDNDb2xvci5jb2xvcj9yZ2I6YiBpbnN0YW5jZW9mIERhdGU/ZGF0ZTppc051bWJlckFycmF5KGIpP251bWJlckFycmF5OkFycmF5LmlzQXJyYXkoYik/Z2VuZXJpY0FycmF5OnR5cGVvZiBiLnZhbHVlT2YhPT0iZnVuY3Rpb24iJiZ0eXBlb2YgYi50b1N0cmluZyE9PSJmdW5jdGlvbiJ8fGlzTmFOKGIpP29iamVjdDpudW1iZXIpKGEsYil9ZnVuY3Rpb24gZGlzY3JldGUocmFuZ2Upe3ZhciBuPXJhbmdlLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHJhbmdlW01hdGgubWF4KDAsTWF0aC5taW4obi0xLE1hdGguZmxvb3IodCpuKSkpXX19ZnVuY3Rpb24gaHVlJDEoYSxiKXt2YXIgaT1odWUoK2EsK2IpO3JldHVybiBmdW5jdGlvbih0KXt2YXIgeD1pKHQpO3JldHVybiB4LTM2MCpNYXRoLmZsb29yKHgvMzYwKX19ZnVuY3Rpb24gcm91bmQoYSxiKXtyZXR1cm4gYT0rYSxiPStiLGZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnJvdW5kKGEqKDEtdCkrYip0KX19dmFyIGRlZ3JlZXM9MTgwL01hdGguUEk7dmFyIGlkZW50aXR5PXt0cmFuc2xhdGVYOjAsdHJhbnNsYXRlWTowLHJvdGF0ZTowLHNrZXdYOjAsc2NhbGVYOjEsc2NhbGVZOjF9O2Z1bmN0aW9uIGRlY29tcG9zZShhLGIsYyxkLGUsZil7dmFyIHNjYWxlWCxzY2FsZVksc2tld1g7aWYoc2NhbGVYPU1hdGguc3FydChhKmErYipiKSlhLz1zY2FsZVgsYi89c2NhbGVYO2lmKHNrZXdYPWEqYytiKmQpYy09YSpza2V3WCxkLT1iKnNrZXdYO2lmKHNjYWxlWT1NYXRoLnNxcnQoYypjK2QqZCkpYy89c2NhbGVZLGQvPXNjYWxlWSxza2V3WC89c2NhbGVZO2lmKGEqZDxiKmMpYT0tYSxiPS1iLHNrZXdYPS1za2V3WCxzY2FsZVg9LXNjYWxlWDtyZXR1cm57dHJhbnNsYXRlWDplLHRyYW5zbGF0ZVk6Zixyb3RhdGU6TWF0aC5hdGFuMihiLGEpKmRlZ3JlZXMsc2tld1g6TWF0aC5hdGFuKHNrZXdYKSpkZWdyZWVzLHNjYWxlWDpzY2FsZVgsc2NhbGVZOnNjYWxlWX19dmFyIGNzc05vZGUsY3NzUm9vdCxjc3NWaWV3LHN2Z05vZGU7ZnVuY3Rpb24gcGFyc2VDc3ModmFsdWUpe2lmKHZhbHVlPT09Im5vbmUiKXJldHVybiBpZGVudGl0eTtpZighY3NzTm9kZSljc3NOb2RlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIkRJViIpLGNzc1Jvb3Q9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGNzc1ZpZXc9ZG9jdW1lbnQuZGVmYXVsdFZpZXc7Y3NzTm9kZS5zdHlsZS50cmFuc2Zvcm09dmFsdWU7dmFsdWU9Y3NzVmlldy5nZXRDb21wdXRlZFN0eWxlKGNzc1Jvb3QuYXBwZW5kQ2hpbGQoY3NzTm9kZSksbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZSgidHJhbnNmb3JtIik7Y3NzUm9vdC5yZW1vdmVDaGlsZChjc3NOb2RlKTt2YWx1ZT12YWx1ZS5zbGljZSg3LC0xKS5zcGxpdCgiLCIpO3JldHVybiBkZWNvbXBvc2UoK3ZhbHVlWzBdLCt2YWx1ZVsxXSwrdmFsdWVbMl0sK3ZhbHVlWzNdLCt2YWx1ZVs0XSwrdmFsdWVbNV0pfWZ1bmN0aW9uIHBhcnNlU3ZnKHZhbHVlKXtpZih2YWx1ZT09bnVsbClyZXR1cm4gaWRlbnRpdHk7aWYoIXN2Z05vZGUpc3ZnTm9kZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwiZyIpO3N2Z05vZGUuc2V0QXR0cmlidXRlKCJ0cmFuc2Zvcm0iLHZhbHVlKTtpZighKHZhbHVlPXN2Z05vZGUudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKSkpcmV0dXJuIGlkZW50aXR5O3ZhbHVlPXZhbHVlLm1hdHJpeDtyZXR1cm4gZGVjb21wb3NlKHZhbHVlLmEsdmFsdWUuYix2YWx1ZS5jLHZhbHVlLmQsdmFsdWUuZSx2YWx1ZS5mKX1mdW5jdGlvbiBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZSxweENvbW1hLHB4UGFyZW4sZGVnUGFyZW4pe2Z1bmN0aW9uIHBvcChzKXtyZXR1cm4gcy5sZW5ndGg/cy5wb3AoKSsiICI6IiJ9ZnVuY3Rpb24gdHJhbnNsYXRlKHhhLHlhLHhiLHliLHMscSl7aWYoeGEhPT14Ynx8eWEhPT15Yil7dmFyIGk9cy5wdXNoKCJ0cmFuc2xhdGUoIixudWxsLHB4Q29tbWEsbnVsbCxweFBhcmVuKTtxLnB1c2goe2k6aS00LHg6bnVtYmVyKHhhLHhiKX0se2k6aS0yLHg6bnVtYmVyKHlhLHliKX0pfWVsc2UgaWYoeGJ8fHliKXtzLnB1c2goInRyYW5zbGF0ZSgiK3hiK3B4Q29tbWEreWIrcHhQYXJlbil9fWZ1bmN0aW9uIHJvdGF0ZShhLGIscyxxKXtpZihhIT09Yil7aWYoYS1iPjE4MCliKz0zNjA7ZWxzZSBpZihiLWE+MTgwKWErPTM2MDsvLyBzaG9ydGVzdCBwYXRoCnEucHVzaCh7aTpzLnB1c2gocG9wKHMpKyJyb3RhdGUoIixudWxsLGRlZ1BhcmVuKS0yLHg6bnVtYmVyKGEsYil9KX1lbHNlIGlmKGIpe3MucHVzaChwb3AocykrInJvdGF0ZSgiK2IrZGVnUGFyZW4pfX1mdW5jdGlvbiBza2V3WChhLGIscyxxKXtpZihhIT09Yil7cS5wdXNoKHtpOnMucHVzaChwb3AocykrInNrZXdYKCIsbnVsbCxkZWdQYXJlbiktMix4Om51bWJlcihhLGIpfSl9ZWxzZSBpZihiKXtzLnB1c2gocG9wKHMpKyJza2V3WCgiK2IrZGVnUGFyZW4pfX1mdW5jdGlvbiBzY2FsZSh4YSx5YSx4Yix5YixzLHEpe2lmKHhhIT09eGJ8fHlhIT09eWIpe3ZhciBpPXMucHVzaChwb3AocykrInNjYWxlKCIsbnVsbCwiLCIsbnVsbCwiKSIpO3EucHVzaCh7aTppLTQseDpudW1iZXIoeGEseGIpfSx7aTppLTIseDpudW1iZXIoeWEseWIpfSl9ZWxzZSBpZih4YiE9PTF8fHliIT09MSl7cy5wdXNoKHBvcChzKSsic2NhbGUoIit4YisiLCIreWIrIikiKX19cmV0dXJuIGZ1bmN0aW9uKGEsYil7dmFyIHM9W10sLy8gc3RyaW5nIGNvbnN0YW50cyBhbmQgcGxhY2Vob2xkZXJzCnE9W107Ly8gbnVtYmVyIGludGVycG9sYXRvcnMKYT1wYXJzZShhKSxiPXBhcnNlKGIpO3RyYW5zbGF0ZShhLnRyYW5zbGF0ZVgsYS50cmFuc2xhdGVZLGIudHJhbnNsYXRlWCxiLnRyYW5zbGF0ZVkscyxxKTtyb3RhdGUoYS5yb3RhdGUsYi5yb3RhdGUscyxxKTtza2V3WChhLnNrZXdYLGIuc2tld1gscyxxKTtzY2FsZShhLnNjYWxlWCxhLnNjYWxlWSxiLnNjYWxlWCxiLnNjYWxlWSxzLHEpO2E9Yj1udWxsOy8vIGdjCnJldHVybiBmdW5jdGlvbih0KXt2YXIgaT0tMSxuPXEubGVuZ3RoLG87d2hpbGUoKytpPG4pc1sobz1xW2ldKS5pXT1vLngodCk7cmV0dXJuIHMuam9pbigiIil9fX12YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3M9aW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2VDc3MsInB4LCAiLCJweCkiLCJkZWcpIik7dmFyIGludGVycG9sYXRlVHJhbnNmb3JtU3ZnPWludGVycG9sYXRlVHJhbnNmb3JtKHBhcnNlU3ZnLCIsICIsIikiLCIpIik7dmFyIHJobz1NYXRoLlNRUlQyLHJobzI9MixyaG80PTQsZXBzaWxvbjI9MWUtMTI7ZnVuY3Rpb24gY29zaCh4KXtyZXR1cm4oKHg9TWF0aC5leHAoeCkpKzEveCkvMn1mdW5jdGlvbiBzaW5oKHgpe3JldHVybigoeD1NYXRoLmV4cCh4KSktMS94KS8yfWZ1bmN0aW9uIHRhbmgoeCl7cmV0dXJuKCh4PU1hdGguZXhwKDIqeCkpLTEpLyh4KzEpfQovLyBwMCA9IFt1eDAsIHV5MCwgdzBdCi8vIHAxID0gW3V4MSwgdXkxLCB3MV0KZnVuY3Rpb24gem9vbShwMCxwMSl7dmFyIHV4MD1wMFswXSx1eTA9cDBbMV0sdzA9cDBbMl0sdXgxPXAxWzBdLHV5MT1wMVsxXSx3MT1wMVsyXSxkeD11eDEtdXgwLGR5PXV5MS11eTAsZDI9ZHgqZHgrZHkqZHksaSxTOwovLyBTcGVjaWFsIGNhc2UgZm9yIHUwIOKJhSB1MS4KaWYoZDI8ZXBzaWxvbjIpe1M9TWF0aC5sb2codzEvdzApL3JobztpPWZ1bmN0aW9uKHQpe3JldHVyblt1eDArdCpkeCx1eTArdCpkeSx3MCpNYXRoLmV4cChyaG8qdCpTKV19fQovLyBHZW5lcmFsIGNhc2UuCmVsc2V7dmFyIGQxPU1hdGguc3FydChkMiksYjA9KHcxKncxLXcwKncwK3JobzQqZDIpLygyKncwKnJobzIqZDEpLGIxPSh3MSp3MS13MCp3MC1yaG80KmQyKS8oMip3MSpyaG8yKmQxKSxyMD1NYXRoLmxvZyhNYXRoLnNxcnQoYjAqYjArMSktYjApLHIxPU1hdGgubG9nKE1hdGguc3FydChiMSpiMSsxKS1iMSk7Uz0ocjEtcjApL3JobztpPWZ1bmN0aW9uKHQpe3ZhciBzPXQqUyxjb3NocjA9Y29zaChyMCksdT13MC8ocmhvMipkMSkqKGNvc2hyMCp0YW5oKHJobypzK3IwKS1zaW5oKHIwKSk7cmV0dXJuW3V4MCt1KmR4LHV5MCt1KmR5LHcwKmNvc2hyMC9jb3NoKHJobypzK3IwKV19fWkuZHVyYXRpb249UyoxZTM7cmV0dXJuIGl9ZnVuY3Rpb24gaHNsKGh1ZSl7cmV0dXJuIGZ1bmN0aW9uKHN0YXJ0LGVuZCl7dmFyIGg9aHVlKChzdGFydD1kM0NvbG9yLmhzbChzdGFydCkpLmgsKGVuZD1kM0NvbG9yLmhzbChlbmQpKS5oKSxzPW5vZ2FtbWEoc3RhcnQucyxlbmQucyksbD1ub2dhbW1hKHN0YXJ0LmwsZW5kLmwpLG9wYWNpdHk9bm9nYW1tYShzdGFydC5vcGFjaXR5LGVuZC5vcGFjaXR5KTtyZXR1cm4gZnVuY3Rpb24odCl7c3RhcnQuaD1oKHQpO3N0YXJ0LnM9cyh0KTtzdGFydC5sPWwodCk7c3RhcnQub3BhY2l0eT1vcGFjaXR5KHQpO3JldHVybiBzdGFydCsiIn19fXZhciBoc2wkMT1oc2woaHVlKTt2YXIgaHNsTG9uZz1oc2wobm9nYW1tYSk7ZnVuY3Rpb24gbGFiKHN0YXJ0LGVuZCl7dmFyIGw9bm9nYW1tYSgoc3RhcnQ9ZDNDb2xvci5sYWIoc3RhcnQpKS5sLChlbmQ9ZDNDb2xvci5sYWIoZW5kKSkubCksYT1ub2dhbW1hKHN0YXJ0LmEsZW5kLmEpLGI9bm9nYW1tYShzdGFydC5iLGVuZC5iKSxvcGFjaXR5PW5vZ2FtbWEoc3RhcnQub3BhY2l0eSxlbmQub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3N0YXJ0Lmw9bCh0KTtzdGFydC5hPWEodCk7c3RhcnQuYj1iKHQpO3N0YXJ0Lm9wYWNpdHk9b3BhY2l0eSh0KTtyZXR1cm4gc3RhcnQrIiJ9fWZ1bmN0aW9uIGhjbChodWUpe3JldHVybiBmdW5jdGlvbihzdGFydCxlbmQpe3ZhciBoPWh1ZSgoc3RhcnQ9ZDNDb2xvci5oY2woc3RhcnQpKS5oLChlbmQ9ZDNDb2xvci5oY2woZW5kKSkuaCksYz1ub2dhbW1hKHN0YXJ0LmMsZW5kLmMpLGw9bm9nYW1tYShzdGFydC5sLGVuZC5sKSxvcGFjaXR5PW5vZ2FtbWEoc3RhcnQub3BhY2l0eSxlbmQub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3N0YXJ0Lmg9aCh0KTtzdGFydC5jPWModCk7c3RhcnQubD1sKHQpO3N0YXJ0Lm9wYWNpdHk9b3BhY2l0eSh0KTtyZXR1cm4gc3RhcnQrIiJ9fX12YXIgaGNsJDE9aGNsKGh1ZSk7dmFyIGhjbExvbmc9aGNsKG5vZ2FtbWEpO2Z1bmN0aW9uIGN1YmVoZWxpeChodWUpe3JldHVybiBmdW5jdGlvbiBjdWJlaGVsaXhHYW1tYSh5KXt5PSt5O2Z1bmN0aW9uIGN1YmVoZWxpeChzdGFydCxlbmQpe3ZhciBoPWh1ZSgoc3RhcnQ9ZDNDb2xvci5jdWJlaGVsaXgoc3RhcnQpKS5oLChlbmQ9ZDNDb2xvci5jdWJlaGVsaXgoZW5kKSkuaCkscz1ub2dhbW1hKHN0YXJ0LnMsZW5kLnMpLGw9bm9nYW1tYShzdGFydC5sLGVuZC5sKSxvcGFjaXR5PW5vZ2FtbWEoc3RhcnQub3BhY2l0eSxlbmQub3BhY2l0eSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3N0YXJ0Lmg9aCh0KTtzdGFydC5zPXModCk7c3RhcnQubD1sKE1hdGgucG93KHQseSkpO3N0YXJ0Lm9wYWNpdHk9b3BhY2l0eSh0KTtyZXR1cm4gc3RhcnQrIiJ9fWN1YmVoZWxpeC5nYW1tYT1jdWJlaGVsaXhHYW1tYTtyZXR1cm4gY3ViZWhlbGl4fSgxKX12YXIgY3ViZWhlbGl4JDE9Y3ViZWhlbGl4KGh1ZSk7dmFyIGN1YmVoZWxpeExvbmc9Y3ViZWhlbGl4KG5vZ2FtbWEpO2Z1bmN0aW9uIHBpZWNld2lzZShpbnRlcnBvbGF0ZSx2YWx1ZXMpe3ZhciBpPTAsbj12YWx1ZXMubGVuZ3RoLTEsdj12YWx1ZXNbMF0sST1uZXcgQXJyYXkobjwwPzA6bik7d2hpbGUoaTxuKUlbaV09aW50ZXJwb2xhdGUodix2PXZhbHVlc1srK2ldKTtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGk9TWF0aC5tYXgoMCxNYXRoLm1pbihuLTEsTWF0aC5mbG9vcih0Kj1uKSkpO3JldHVybiBJW2ldKHQtaSl9fWZ1bmN0aW9uIHF1YW50aXplKGludGVycG9sYXRvcixuKXt2YXIgc2FtcGxlcz1uZXcgQXJyYXkobik7Zm9yKHZhciBpPTA7aTxuOysraSlzYW1wbGVzW2ldPWludGVycG9sYXRvcihpLyhuLTEpKTtyZXR1cm4gc2FtcGxlc31leHBvcnRzLmludGVycG9sYXRlPXZhbHVlO2V4cG9ydHMuaW50ZXJwb2xhdGVBcnJheT1hcnJheTtleHBvcnRzLmludGVycG9sYXRlQmFzaXM9YmFzaXMkMTtleHBvcnRzLmludGVycG9sYXRlQmFzaXNDbG9zZWQ9YmFzaXNDbG9zZWQ7ZXhwb3J0cy5pbnRlcnBvbGF0ZUN1YmVoZWxpeD1jdWJlaGVsaXgkMTtleHBvcnRzLmludGVycG9sYXRlQ3ViZWhlbGl4TG9uZz1jdWJlaGVsaXhMb25nO2V4cG9ydHMuaW50ZXJwb2xhdGVEYXRlPWRhdGU7ZXhwb3J0cy5pbnRlcnBvbGF0ZURpc2NyZXRlPWRpc2NyZXRlO2V4cG9ydHMuaW50ZXJwb2xhdGVIY2w9aGNsJDE7ZXhwb3J0cy5pbnRlcnBvbGF0ZUhjbExvbmc9aGNsTG9uZztleHBvcnRzLmludGVycG9sYXRlSHNsPWhzbCQxO2V4cG9ydHMuaW50ZXJwb2xhdGVIc2xMb25nPWhzbExvbmc7ZXhwb3J0cy5pbnRlcnBvbGF0ZUh1ZT1odWUkMTtleHBvcnRzLmludGVycG9sYXRlTGFiPWxhYjtleHBvcnRzLmludGVycG9sYXRlTnVtYmVyPW51bWJlcjtleHBvcnRzLmludGVycG9sYXRlTnVtYmVyQXJyYXk9bnVtYmVyQXJyYXk7ZXhwb3J0cy5pbnRlcnBvbGF0ZU9iamVjdD1vYmplY3Q7ZXhwb3J0cy5pbnRlcnBvbGF0ZVJnYj1yZ2I7ZXhwb3J0cy5pbnRlcnBvbGF0ZVJnYkJhc2lzPXJnYkJhc2lzO2V4cG9ydHMuaW50ZXJwb2xhdGVSZ2JCYXNpc0Nsb3NlZD1yZ2JCYXNpc0Nsb3NlZDtleHBvcnRzLmludGVycG9sYXRlUm91bmQ9cm91bmQ7ZXhwb3J0cy5pbnRlcnBvbGF0ZVN0cmluZz1zdHJpbmc7ZXhwb3J0cy5pbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcz1pbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcztleHBvcnRzLmludGVycG9sYXRlVHJhbnNmb3JtU3ZnPWludGVycG9sYXRlVHJhbnNmb3JtU3ZnO2V4cG9ydHMuaW50ZXJwb2xhdGVab29tPXpvb207ZXhwb3J0cy5waWVjZXdpc2U9cGllY2V3aXNlO2V4cG9ydHMucXVhbnRpemU9cXVhbnRpemU7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0seyJkMy1jb2xvciI6MzR9XSw0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtcGF0aC8gdjEuMC45IENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgcGk9TWF0aC5QSSx0YXU9MipwaSxlcHNpbG9uPTFlLTYsdGF1RXBzaWxvbj10YXUtZXBzaWxvbjtmdW5jdGlvbiBQYXRoKCl7dGhpcy5feDA9dGhpcy5feTA9Ly8gc3RhcnQgb2YgY3VycmVudCBzdWJwYXRoCnRoaXMuX3gxPXRoaXMuX3kxPW51bGw7Ly8gZW5kIG9mIGN1cnJlbnQgc3VicGF0aAp0aGlzLl89IiJ9ZnVuY3Rpb24gcGF0aCgpe3JldHVybiBuZXcgUGF0aH1QYXRoLnByb3RvdHlwZT1wYXRoLnByb3RvdHlwZT17Y29uc3RydWN0b3I6UGF0aCxtb3ZlVG86ZnVuY3Rpb24oeCx5KXt0aGlzLl8rPSJNIisodGhpcy5feDA9dGhpcy5feDE9K3gpKyIsIisodGhpcy5feTA9dGhpcy5feTE9K3kpfSxjbG9zZVBhdGg6ZnVuY3Rpb24oKXtpZih0aGlzLl94MSE9PW51bGwpe3RoaXMuX3gxPXRoaXMuX3gwLHRoaXMuX3kxPXRoaXMuX3kwO3RoaXMuXys9IloifX0sbGluZVRvOmZ1bmN0aW9uKHgseSl7dGhpcy5fKz0iTCIrKHRoaXMuX3gxPSt4KSsiLCIrKHRoaXMuX3kxPSt5KX0scXVhZHJhdGljQ3VydmVUbzpmdW5jdGlvbih4MSx5MSx4LHkpe3RoaXMuXys9IlEiKyAreDErIiwiKyAreTErIiwiKyh0aGlzLl94MT0reCkrIiwiKyh0aGlzLl95MT0reSl9LGJlemllckN1cnZlVG86ZnVuY3Rpb24oeDEseTEseDIseTIseCx5KXt0aGlzLl8rPSJDIisgK3gxKyIsIisgK3kxKyIsIisgK3gyKyIsIisgK3kyKyIsIisodGhpcy5feDE9K3gpKyIsIisodGhpcy5feTE9K3kpfSxhcmNUbzpmdW5jdGlvbih4MSx5MSx4Mix5MixyKXt4MT0reDEseTE9K3kxLHgyPSt4Mix5Mj0reTIscj0rcjt2YXIgeDA9dGhpcy5feDEseTA9dGhpcy5feTEseDIxPXgyLXgxLHkyMT15Mi15MSx4MDE9eDAteDEseTAxPXkwLXkxLGwwMV8yPXgwMSp4MDEreTAxKnkwMTsKLy8gSXMgdGhlIHJhZGl1cyBuZWdhdGl2ZT8gRXJyb3IuCmlmKHI8MCl0aHJvdyBuZXcgRXJyb3IoIm5lZ2F0aXZlIHJhZGl1czogIityKTsKLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MSx5MSkuCmlmKHRoaXMuX3gxPT09bnVsbCl7dGhpcy5fKz0iTSIrKHRoaXMuX3gxPXgxKSsiLCIrKHRoaXMuX3kxPXkxKX0KLy8gT3IsIGlzICh4MSx5MSkgY29pbmNpZGVudCB3aXRoICh4MCx5MCk/IERvIG5vdGhpbmcuCmVsc2UgaWYoIShsMDFfMj5lcHNpbG9uKSk7ZWxzZSBpZighKE1hdGguYWJzKHkwMSp4MjEteTIxKngwMSk+ZXBzaWxvbil8fCFyKXt0aGlzLl8rPSJMIisodGhpcy5feDE9eDEpKyIsIisodGhpcy5feTE9eTEpfQovLyBPdGhlcndpc2UsIGRyYXcgYW4gYXJjIQplbHNle3ZhciB4MjA9eDIteDAseTIwPXkyLXkwLGwyMV8yPXgyMSp4MjEreTIxKnkyMSxsMjBfMj14MjAqeDIwK3kyMCp5MjAsbDIxPU1hdGguc3FydChsMjFfMiksbDAxPU1hdGguc3FydChsMDFfMiksbD1yKk1hdGgudGFuKChwaS1NYXRoLmFjb3MoKGwyMV8yK2wwMV8yLWwyMF8yKS8oMipsMjEqbDAxKSkpLzIpLHQwMT1sL2wwMSx0MjE9bC9sMjE7Ci8vIElmIHRoZSBzdGFydCB0YW5nZW50IGlzIG5vdCBjb2luY2lkZW50IHdpdGggKHgwLHkwKSwgbGluZSB0by4KaWYoTWF0aC5hYnModDAxLTEpPmVwc2lsb24pe3RoaXMuXys9IkwiKyh4MSt0MDEqeDAxKSsiLCIrKHkxK3QwMSp5MDEpfXRoaXMuXys9IkEiK3IrIiwiK3IrIiwwLDAsIisgKyh5MDEqeDIwPngwMSp5MjApKyIsIisodGhpcy5feDE9eDErdDIxKngyMSkrIiwiKyh0aGlzLl95MT15MSt0MjEqeTIxKX19LGFyYzpmdW5jdGlvbih4LHkscixhMCxhMSxjY3cpe3g9K3gseT0reSxyPStyLGNjdz0hIWNjdzt2YXIgZHg9cipNYXRoLmNvcyhhMCksZHk9cipNYXRoLnNpbihhMCkseDA9eCtkeCx5MD15K2R5LGN3PTFeY2N3LGRhPWNjdz9hMC1hMTphMS1hMDsKLy8gSXMgdGhlIHJhZGl1cyBuZWdhdGl2ZT8gRXJyb3IuCmlmKHI8MCl0aHJvdyBuZXcgRXJyb3IoIm5lZ2F0aXZlIHJhZGl1czogIityKTsKLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MCx5MCkuCmlmKHRoaXMuX3gxPT09bnVsbCl7dGhpcy5fKz0iTSIreDArIiwiK3kwfQovLyBPciwgaXMgKHgwLHkwKSBub3QgY29pbmNpZGVudCB3aXRoIHRoZSBwcmV2aW91cyBwb2ludD8gTGluZSB0byAoeDAseTApLgplbHNlIGlmKE1hdGguYWJzKHRoaXMuX3gxLXgwKT5lcHNpbG9ufHxNYXRoLmFicyh0aGlzLl95MS15MCk+ZXBzaWxvbil7dGhpcy5fKz0iTCIreDArIiwiK3kwfQovLyBJcyB0aGlzIGFyYyBlbXB0eT8gV2XigJlyZSBkb25lLgppZighcilyZXR1cm47Ci8vIERvZXMgdGhlIGFuZ2xlIGdvIHRoZSB3cm9uZyB3YXk/IEZsaXAgdGhlIGRpcmVjdGlvbi4KaWYoZGE8MClkYT1kYSV0YXUrdGF1OwovLyBJcyB0aGlzIGEgY29tcGxldGUgY2lyY2xlPyBEcmF3IHR3byBhcmNzIHRvIGNvbXBsZXRlIHRoZSBjaXJjbGUuCmlmKGRhPnRhdUVwc2lsb24pe3RoaXMuXys9IkEiK3IrIiwiK3IrIiwwLDEsIitjdysiLCIrKHgtZHgpKyIsIisoeS1keSkrIkEiK3IrIiwiK3IrIiwwLDEsIitjdysiLCIrKHRoaXMuX3gxPXgwKSsiLCIrKHRoaXMuX3kxPXkwKX0KLy8gSXMgdGhpcyBhcmMgbm9uLWVtcHR5PyBEcmF3IGFuIGFyYyEKZWxzZSBpZihkYT5lcHNpbG9uKXt0aGlzLl8rPSJBIityKyIsIityKyIsMCwiKyArKGRhPj1waSkrIiwiK2N3KyIsIisodGhpcy5feDE9eCtyKk1hdGguY29zKGExKSkrIiwiKyh0aGlzLl95MT15K3IqTWF0aC5zaW4oYTEpKX19LHJlY3Q6ZnVuY3Rpb24oeCx5LHcsaCl7dGhpcy5fKz0iTSIrKHRoaXMuX3gwPXRoaXMuX3gxPSt4KSsiLCIrKHRoaXMuX3kwPXRoaXMuX3kxPSt5KSsiaCIrICt3KyJ2IisgK2grImgiKy13KyJaIn0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ffX07ZXhwb3J0cy5wYXRoPXBhdGg7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0se31dLDQ3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy1wb2x5Z29uLyB2MS4wLjYgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyJdLGZhY3RvcnkpOihnbG9iYWw9Z2xvYmFsfHxzZWxmLGZhY3RvcnkoZ2xvYmFsLmQzPWdsb2JhbC5kM3x8e30pKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGFyZWEocG9seWdvbil7dmFyIGk9LTEsbj1wb2x5Z29uLmxlbmd0aCxhLGI9cG9seWdvbltuLTFdLGFyZWE9MDt3aGlsZSgrK2k8bil7YT1iO2I9cG9seWdvbltpXTthcmVhKz1hWzFdKmJbMF0tYVswXSpiWzFdfXJldHVybiBhcmVhLzJ9ZnVuY3Rpb24gY2VudHJvaWQocG9seWdvbil7dmFyIGk9LTEsbj1wb2x5Z29uLmxlbmd0aCx4PTAseT0wLGEsYj1wb2x5Z29uW24tMV0sYyxrPTA7d2hpbGUoKytpPG4pe2E9YjtiPXBvbHlnb25baV07ays9Yz1hWzBdKmJbMV0tYlswXSphWzFdO3grPShhWzBdK2JbMF0pKmM7eSs9KGFbMV0rYlsxXSkqY31yZXR1cm4gayo9MyxbeC9rLHkva119Ci8vIFJldHVybnMgdGhlIDJEIGNyb3NzIHByb2R1Y3Qgb2YgQUIgYW5kIEFDIHZlY3RvcnMsIGkuZS4sIHRoZSB6LWNvbXBvbmVudCBvZgovLyB0aGUgM0QgY3Jvc3MgcHJvZHVjdCBpbiBhIHF1YWRyYW50IEkgQ2FydGVzaWFuIGNvb3JkaW5hdGUgc3lzdGVtICgreCBpcwovLyByaWdodCwgK3kgaXMgdXApLiBSZXR1cm5zIGEgcG9zaXRpdmUgdmFsdWUgaWYgQUJDIGlzIGNvdW50ZXItY2xvY2t3aXNlLAovLyBuZWdhdGl2ZSBpZiBjbG9ja3dpc2UsIGFuZCB6ZXJvIGlmIHRoZSBwb2ludHMgYXJlIGNvbGxpbmVhci4KZnVuY3Rpb24gY3Jvc3MoYSxiLGMpe3JldHVybihiWzBdLWFbMF0pKihjWzFdLWFbMV0pLShiWzFdLWFbMV0pKihjWzBdLWFbMF0pfWZ1bmN0aW9uIGxleGljb2dyYXBoaWNPcmRlcihhLGIpe3JldHVybiBhWzBdLWJbMF18fGFbMV0tYlsxXX0KLy8gQ29tcHV0ZXMgdGhlIHVwcGVyIGNvbnZleCBodWxsIHBlciB0aGUgbW9ub3RvbmUgY2hhaW4gYWxnb3JpdGhtLgovLyBBc3N1bWVzIHBvaW50cy5sZW5ndGggPj0gMywgaXMgc29ydGVkIGJ5IHgsIHVuaXF1ZSBpbiB5LgovLyBSZXR1cm5zIGFuIGFycmF5IG9mIGluZGljZXMgaW50byBwb2ludHMgaW4gbGVmdC10by1yaWdodCBvcmRlci4KZnVuY3Rpb24gY29tcHV0ZVVwcGVySHVsbEluZGV4ZXMocG9pbnRzKXt2YXIgbj1wb2ludHMubGVuZ3RoLGluZGV4ZXM9WzAsMV0sc2l6ZT0yO2Zvcih2YXIgaT0yO2k8bjsrK2kpe3doaWxlKHNpemU+MSYmY3Jvc3MocG9pbnRzW2luZGV4ZXNbc2l6ZS0yXV0scG9pbnRzW2luZGV4ZXNbc2l6ZS0xXV0scG9pbnRzW2ldKTw9MCktLXNpemU7aW5kZXhlc1tzaXplKytdPWl9cmV0dXJuIGluZGV4ZXMuc2xpY2UoMCxzaXplKTsvLyByZW1vdmUgcG9wcGVkIHBvaW50cwp9ZnVuY3Rpb24gaHVsbChwb2ludHMpe2lmKChuPXBvaW50cy5sZW5ndGgpPDMpcmV0dXJuIG51bGw7dmFyIGksbixzb3J0ZWRQb2ludHM9bmV3IEFycmF5KG4pLGZsaXBwZWRQb2ludHM9bmV3IEFycmF5KG4pO2ZvcihpPTA7aTxuOysraSlzb3J0ZWRQb2ludHNbaV09Wytwb2ludHNbaV1bMF0sK3BvaW50c1tpXVsxXSxpXTtzb3J0ZWRQb2ludHMuc29ydChsZXhpY29ncmFwaGljT3JkZXIpO2ZvcihpPTA7aTxuOysraSlmbGlwcGVkUG9pbnRzW2ldPVtzb3J0ZWRQb2ludHNbaV1bMF0sLXNvcnRlZFBvaW50c1tpXVsxXV07dmFyIHVwcGVySW5kZXhlcz1jb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhzb3J0ZWRQb2ludHMpLGxvd2VySW5kZXhlcz1jb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhmbGlwcGVkUG9pbnRzKTsKLy8gQ29uc3RydWN0IHRoZSBodWxsIHBvbHlnb24sIHJlbW92aW5nIHBvc3NpYmxlIGR1cGxpY2F0ZSBlbmRwb2ludHMuCnZhciBza2lwTGVmdD1sb3dlckluZGV4ZXNbMF09PT11cHBlckluZGV4ZXNbMF0sc2tpcFJpZ2h0PWxvd2VySW5kZXhlc1tsb3dlckluZGV4ZXMubGVuZ3RoLTFdPT09dXBwZXJJbmRleGVzW3VwcGVySW5kZXhlcy5sZW5ndGgtMV0saHVsbD1bXTsKLy8gQWRkIHVwcGVyIGh1bGwgaW4gcmlnaHQtdG8tbCBvcmRlci4KLy8gVGhlbiBhZGQgbG93ZXIgaHVsbCBpbiBsZWZ0LXRvLXJpZ2h0IG9yZGVyLgpmb3IoaT11cHBlckluZGV4ZXMubGVuZ3RoLTE7aT49MDstLWkpaHVsbC5wdXNoKHBvaW50c1tzb3J0ZWRQb2ludHNbdXBwZXJJbmRleGVzW2ldXVsyXV0pO2ZvcihpPStza2lwTGVmdDtpPGxvd2VySW5kZXhlcy5sZW5ndGgtc2tpcFJpZ2h0OysraSlodWxsLnB1c2gocG9pbnRzW3NvcnRlZFBvaW50c1tsb3dlckluZGV4ZXNbaV1dWzJdXSk7cmV0dXJuIGh1bGx9ZnVuY3Rpb24gY29udGFpbnMocG9seWdvbixwb2ludCl7dmFyIG49cG9seWdvbi5sZW5ndGgscD1wb2x5Z29uW24tMV0seD1wb2ludFswXSx5PXBvaW50WzFdLHgwPXBbMF0seTA9cFsxXSx4MSx5MSxpbnNpZGU9ZmFsc2U7Zm9yKHZhciBpPTA7aTxuOysraSl7cD1wb2x5Z29uW2ldLHgxPXBbMF0seTE9cFsxXTtpZih5MT55IT09eTA+eSYmeDwoeDAteDEpKih5LXkxKS8oeTAteTEpK3gxKWluc2lkZT0haW5zaWRlO3gwPXgxLHkwPXkxfXJldHVybiBpbnNpZGV9ZnVuY3Rpb24gbGVuZ3RoKHBvbHlnb24pe3ZhciBpPS0xLG49cG9seWdvbi5sZW5ndGgsYj1wb2x5Z29uW24tMV0seGEseWEseGI9YlswXSx5Yj1iWzFdLHBlcmltZXRlcj0wO3doaWxlKCsraTxuKXt4YT14Yjt5YT15YjtiPXBvbHlnb25baV07eGI9YlswXTt5Yj1iWzFdO3hhLT14Yjt5YS09eWI7cGVyaW1ldGVyKz1NYXRoLnNxcnQoeGEqeGEreWEqeWEpfXJldHVybiBwZXJpbWV0ZXJ9ZXhwb3J0cy5wb2x5Z29uQXJlYT1hcmVhO2V4cG9ydHMucG9seWdvbkNlbnRyb2lkPWNlbnRyb2lkO2V4cG9ydHMucG9seWdvbkNvbnRhaW5zPWNvbnRhaW5zO2V4cG9ydHMucG9seWdvbkh1bGw9aHVsbDtleHBvcnRzLnBvbHlnb25MZW5ndGg9bGVuZ3RoO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSw0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtcXVhZHRyZWUvIHYxLjAuNyBDb3B5cmlnaHQgMjAxOSBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSkpfSkodGhpcyxmdW5jdGlvbihleHBvcnRzKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gdHJlZV9hZGQoZCl7dmFyIHg9K3RoaXMuX3guY2FsbChudWxsLGQpLHk9K3RoaXMuX3kuY2FsbChudWxsLGQpO3JldHVybiBhZGQodGhpcy5jb3Zlcih4LHkpLHgseSxkKX1mdW5jdGlvbiBhZGQodHJlZSx4LHksZCl7aWYoaXNOYU4oeCl8fGlzTmFOKHkpKXJldHVybiB0cmVlOy8vIGlnbm9yZSBpbnZhbGlkIHBvaW50cwp2YXIgcGFyZW50LG5vZGU9dHJlZS5fcm9vdCxsZWFmPXtkYXRhOmR9LHgwPXRyZWUuX3gwLHkwPXRyZWUuX3kwLHgxPXRyZWUuX3gxLHkxPXRyZWUuX3kxLHhtLHltLHhwLHlwLHJpZ2h0LGJvdHRvbSxpLGo7Ci8vIElmIHRoZSB0cmVlIGlzIGVtcHR5LCBpbml0aWFsaXplIHRoZSByb290IGFzIGEgbGVhZi4KaWYoIW5vZGUpcmV0dXJuIHRyZWUuX3Jvb3Q9bGVhZix0cmVlOwovLyBGaW5kIHRoZSBleGlzdGluZyBsZWFmIGZvciB0aGUgbmV3IHBvaW50LCBvciBhZGQgaXQuCndoaWxlKG5vZGUubGVuZ3RoKXtpZihyaWdodD14Pj0oeG09KHgwK3gxKS8yKSl4MD14bTtlbHNlIHgxPXhtO2lmKGJvdHRvbT15Pj0oeW09KHkwK3kxKS8yKSl5MD15bTtlbHNlIHkxPXltO2lmKHBhcmVudD1ub2RlLCEobm9kZT1ub2RlW2k9Ym90dG9tPDwxfHJpZ2h0XSkpcmV0dXJuIHBhcmVudFtpXT1sZWFmLHRyZWV9Ci8vIElzIHRoZSBuZXcgcG9pbnQgaXMgZXhhY3RseSBjb2luY2lkZW50IHdpdGggdGhlIGV4aXN0aW5nIHBvaW50Pwp4cD0rdHJlZS5feC5jYWxsKG51bGwsbm9kZS5kYXRhKTt5cD0rdHJlZS5feS5jYWxsKG51bGwsbm9kZS5kYXRhKTtpZih4PT09eHAmJnk9PT15cClyZXR1cm4gbGVhZi5uZXh0PW5vZGUscGFyZW50P3BhcmVudFtpXT1sZWFmOnRyZWUuX3Jvb3Q9bGVhZix0cmVlOwovLyBPdGhlcndpc2UsIHNwbGl0IHRoZSBsZWFmIG5vZGUgdW50aWwgdGhlIG9sZCBhbmQgbmV3IHBvaW50IGFyZSBzZXBhcmF0ZWQuCmRve3BhcmVudD1wYXJlbnQ/cGFyZW50W2ldPW5ldyBBcnJheSg0KTp0cmVlLl9yb290PW5ldyBBcnJheSg0KTtpZihyaWdodD14Pj0oeG09KHgwK3gxKS8yKSl4MD14bTtlbHNlIHgxPXhtO2lmKGJvdHRvbT15Pj0oeW09KHkwK3kxKS8yKSl5MD15bTtlbHNlIHkxPXltfXdoaWxlKChpPWJvdHRvbTw8MXxyaWdodCk9PT0oaj0oeXA+PXltKTw8MXx4cD49eG0pKTtyZXR1cm4gcGFyZW50W2pdPW5vZGUscGFyZW50W2ldPWxlYWYsdHJlZX1mdW5jdGlvbiBhZGRBbGwoZGF0YSl7dmFyIGQsaSxuPWRhdGEubGVuZ3RoLHgseSx4ej1uZXcgQXJyYXkobikseXo9bmV3IEFycmF5KG4pLHgwPUluZmluaXR5LHkwPUluZmluaXR5LHgxPS1JbmZpbml0eSx5MT0tSW5maW5pdHk7Ci8vIENvbXB1dGUgdGhlIHBvaW50cyBhbmQgdGhlaXIgZXh0ZW50Lgpmb3IoaT0wO2k8bjsrK2kpe2lmKGlzTmFOKHg9K3RoaXMuX3guY2FsbChudWxsLGQ9ZGF0YVtpXSkpfHxpc05hTih5PSt0aGlzLl95LmNhbGwobnVsbCxkKSkpY29udGludWU7eHpbaV09eDt5eltpXT15O2lmKHg8eDApeDA9eDtpZih4PngxKXgxPXg7aWYoeTx5MCl5MD15O2lmKHk+eTEpeTE9eX0KLy8gSWYgdGhlcmUgd2VyZSBubyAodmFsaWQpIHBvaW50cywgYWJvcnQuCmlmKHgwPngxfHx5MD55MSlyZXR1cm4gdGhpczsKLy8gRXhwYW5kIHRoZSB0cmVlIHRvIGNvdmVyIHRoZSBuZXcgcG9pbnRzLgp0aGlzLmNvdmVyKHgwLHkwKS5jb3Zlcih4MSx5MSk7Ci8vIEFkZCB0aGUgbmV3IHBvaW50cy4KZm9yKGk9MDtpPG47KytpKXthZGQodGhpcyx4eltpXSx5eltpXSxkYXRhW2ldKX1yZXR1cm4gdGhpc31mdW5jdGlvbiB0cmVlX2NvdmVyKHgseSl7aWYoaXNOYU4oeD0reCl8fGlzTmFOKHk9K3kpKXJldHVybiB0aGlzOy8vIGlnbm9yZSBpbnZhbGlkIHBvaW50cwp2YXIgeDA9dGhpcy5feDAseTA9dGhpcy5feTAseDE9dGhpcy5feDEseTE9dGhpcy5feTE7Ci8vIElmIHRoZSBxdWFkdHJlZSBoYXMgbm8gZXh0ZW50LCBpbml0aWFsaXplIHRoZW0uCi8vIEludGVnZXIgZXh0ZW50IGFyZSBuZWNlc3Nhcnkgc28gdGhhdCBpZiB3ZSBsYXRlciBkb3VibGUgdGhlIGV4dGVudCwKLy8gdGhlIGV4aXN0aW5nIHF1YWRyYW50IGJvdW5kYXJpZXMgZG9u4oCZdCBjaGFuZ2UgZHVlIHRvIGZsb2F0aW5nIHBvaW50IGVycm9yIQppZihpc05hTih4MCkpe3gxPSh4MD1NYXRoLmZsb29yKHgpKSsxO3kxPSh5MD1NYXRoLmZsb29yKHkpKSsxfQovLyBPdGhlcndpc2UsIGRvdWJsZSByZXBlYXRlZGx5IHRvIGNvdmVyLgplbHNle3ZhciB6PXgxLXgwLG5vZGU9dGhpcy5fcm9vdCxwYXJlbnQsaTt3aGlsZSh4MD54fHx4Pj14MXx8eTA+eXx8eT49eTEpe2k9KHk8eTApPDwxfHg8eDA7cGFyZW50PW5ldyBBcnJheSg0KSxwYXJlbnRbaV09bm9kZSxub2RlPXBhcmVudCx6Kj0yO3N3aXRjaChpKXtjYXNlIDA6eDE9eDAreix5MT15MCt6O2JyZWFrO2Nhc2UgMTp4MD14MS16LHkxPXkwK3o7YnJlYWs7Y2FzZSAyOngxPXgwK3oseTA9eTEtejticmVhaztjYXNlIDM6eDA9eDEteix5MD15MS16O2JyZWFrfX1pZih0aGlzLl9yb290JiZ0aGlzLl9yb290Lmxlbmd0aCl0aGlzLl9yb290PW5vZGV9dGhpcy5feDA9eDA7dGhpcy5feTA9eTA7dGhpcy5feDE9eDE7dGhpcy5feTE9eTE7cmV0dXJuIHRoaXN9ZnVuY3Rpb24gdHJlZV9kYXRhKCl7dmFyIGRhdGE9W107dGhpcy52aXNpdChmdW5jdGlvbihub2RlKXtpZighbm9kZS5sZW5ndGgpZG97ZGF0YS5wdXNoKG5vZGUuZGF0YSl9d2hpbGUobm9kZT1ub2RlLm5leHQpfSk7cmV0dXJuIGRhdGF9ZnVuY3Rpb24gdHJlZV9leHRlbnQoXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5jb3ZlcigrX1swXVswXSwrX1swXVsxXSkuY292ZXIoK19bMV1bMF0sK19bMV1bMV0pOmlzTmFOKHRoaXMuX3gwKT91bmRlZmluZWQ6W1t0aGlzLl94MCx0aGlzLl95MF0sW3RoaXMuX3gxLHRoaXMuX3kxXV19ZnVuY3Rpb24gUXVhZChub2RlLHgwLHkwLHgxLHkxKXt0aGlzLm5vZGU9bm9kZTt0aGlzLngwPXgwO3RoaXMueTA9eTA7dGhpcy54MT14MTt0aGlzLnkxPXkxfWZ1bmN0aW9uIHRyZWVfZmluZCh4LHkscmFkaXVzKXt2YXIgZGF0YSx4MD10aGlzLl94MCx5MD10aGlzLl95MCx4MSx5MSx4Mix5Mix4Mz10aGlzLl94MSx5Mz10aGlzLl95MSxxdWFkcz1bXSxub2RlPXRoaXMuX3Jvb3QscSxpO2lmKG5vZGUpcXVhZHMucHVzaChuZXcgUXVhZChub2RlLHgwLHkwLHgzLHkzKSk7aWYocmFkaXVzPT1udWxsKXJhZGl1cz1JbmZpbml0eTtlbHNle3gwPXgtcmFkaXVzLHkwPXktcmFkaXVzO3gzPXgrcmFkaXVzLHkzPXkrcmFkaXVzO3JhZGl1cyo9cmFkaXVzfXdoaWxlKHE9cXVhZHMucG9wKCkpewovLyBTdG9wIHNlYXJjaGluZyBpZiB0aGlzIHF1YWRyYW50IGNhbuKAmXQgY29udGFpbiBhIGNsb3NlciBub2RlLgppZighKG5vZGU9cS5ub2RlKXx8KHgxPXEueDApPngzfHwoeTE9cS55MCk+eTN8fCh4Mj1xLngxKTx4MHx8KHkyPXEueTEpPHkwKWNvbnRpbnVlOwovLyBCaXNlY3QgdGhlIGN1cnJlbnQgcXVhZHJhbnQuCmlmKG5vZGUubGVuZ3RoKXt2YXIgeG09KHgxK3gyKS8yLHltPSh5MSt5MikvMjtxdWFkcy5wdXNoKG5ldyBRdWFkKG5vZGVbM10seG0seW0seDIseTIpLG5ldyBRdWFkKG5vZGVbMl0seDEseW0seG0seTIpLG5ldyBRdWFkKG5vZGVbMV0seG0seTEseDIseW0pLG5ldyBRdWFkKG5vZGVbMF0seDEseTEseG0seW0pKTsKLy8gVmlzaXQgdGhlIGNsb3Nlc3QgcXVhZHJhbnQgZmlyc3QuCmlmKGk9KHk+PXltKTw8MXx4Pj14bSl7cT1xdWFkc1txdWFkcy5sZW5ndGgtMV07cXVhZHNbcXVhZHMubGVuZ3RoLTFdPXF1YWRzW3F1YWRzLmxlbmd0aC0xLWldO3F1YWRzW3F1YWRzLmxlbmd0aC0xLWldPXF9fQovLyBWaXNpdCB0aGlzIHBvaW50LiAoVmlzaXRpbmcgY29pbmNpZGVudCBwb2ludHMgaXNu4oCZdCBuZWNlc3NhcnkhKQplbHNle3ZhciBkeD14LSt0aGlzLl94LmNhbGwobnVsbCxub2RlLmRhdGEpLGR5PXktK3RoaXMuX3kuY2FsbChudWxsLG5vZGUuZGF0YSksZDI9ZHgqZHgrZHkqZHk7aWYoZDI8cmFkaXVzKXt2YXIgZD1NYXRoLnNxcnQocmFkaXVzPWQyKTt4MD14LWQseTA9eS1kO3gzPXgrZCx5Mz15K2Q7ZGF0YT1ub2RlLmRhdGF9fX1yZXR1cm4gZGF0YX1mdW5jdGlvbiB0cmVlX3JlbW92ZShkKXtpZihpc05hTih4PSt0aGlzLl94LmNhbGwobnVsbCxkKSl8fGlzTmFOKHk9K3RoaXMuX3kuY2FsbChudWxsLGQpKSlyZXR1cm4gdGhpczsvLyBpZ25vcmUgaW52YWxpZCBwb2ludHMKdmFyIHBhcmVudCxub2RlPXRoaXMuX3Jvb3QscmV0YWluZXIscHJldmlvdXMsbmV4dCx4MD10aGlzLl94MCx5MD10aGlzLl95MCx4MT10aGlzLl94MSx5MT10aGlzLl95MSx4LHkseG0seW0scmlnaHQsYm90dG9tLGksajsKLy8gSWYgdGhlIHRyZWUgaXMgZW1wdHksIGluaXRpYWxpemUgdGhlIHJvb3QgYXMgYSBsZWFmLgppZighbm9kZSlyZXR1cm4gdGhpczsKLy8gRmluZCB0aGUgbGVhZiBub2RlIGZvciB0aGUgcG9pbnQuCi8vIFdoaWxlIGRlc2NlbmRpbmcsIGFsc28gcmV0YWluIHRoZSBkZWVwZXN0IHBhcmVudCB3aXRoIGEgbm9uLXJlbW92ZWQgc2libGluZy4KaWYobm9kZS5sZW5ndGgpd2hpbGUodHJ1ZSl7aWYocmlnaHQ9eD49KHhtPSh4MCt4MSkvMikpeDA9eG07ZWxzZSB4MT14bTtpZihib3R0b209eT49KHltPSh5MCt5MSkvMikpeTA9eW07ZWxzZSB5MT15bTtpZighKHBhcmVudD1ub2RlLG5vZGU9bm9kZVtpPWJvdHRvbTw8MXxyaWdodF0pKXJldHVybiB0aGlzO2lmKCFub2RlLmxlbmd0aClicmVhaztpZihwYXJlbnRbaSsxJjNdfHxwYXJlbnRbaSsyJjNdfHxwYXJlbnRbaSszJjNdKXJldGFpbmVyPXBhcmVudCxqPWl9Ci8vIEZpbmQgdGhlIHBvaW50IHRvIHJlbW92ZS4Kd2hpbGUobm9kZS5kYXRhIT09ZClpZighKHByZXZpb3VzPW5vZGUsbm9kZT1ub2RlLm5leHQpKXJldHVybiB0aGlzO2lmKG5leHQ9bm9kZS5uZXh0KWRlbGV0ZSBub2RlLm5leHQ7Ci8vIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb2luY2lkZW50IHBvaW50cywgcmVtb3ZlIGp1c3QgdGhlIHBvaW50LgppZihwcmV2aW91cylyZXR1cm4gbmV4dD9wcmV2aW91cy5uZXh0PW5leHQ6ZGVsZXRlIHByZXZpb3VzLm5leHQsdGhpczsKLy8gSWYgdGhpcyBpcyB0aGUgcm9vdCBwb2ludCwgcmVtb3ZlIGl0LgppZighcGFyZW50KXJldHVybiB0aGlzLl9yb290PW5leHQsdGhpczsKLy8gUmVtb3ZlIHRoaXMgbGVhZi4KbmV4dD9wYXJlbnRbaV09bmV4dDpkZWxldGUgcGFyZW50W2ldOwovLyBJZiB0aGUgcGFyZW50IG5vdyBjb250YWlucyBleGFjdGx5IG9uZSBsZWFmLCBjb2xsYXBzZSBzdXBlcmZsdW91cyBwYXJlbnRzLgppZigobm9kZT1wYXJlbnRbMF18fHBhcmVudFsxXXx8cGFyZW50WzJdfHxwYXJlbnRbM10pJiZub2RlPT09KHBhcmVudFszXXx8cGFyZW50WzJdfHxwYXJlbnRbMV18fHBhcmVudFswXSkmJiFub2RlLmxlbmd0aCl7aWYocmV0YWluZXIpcmV0YWluZXJbal09bm9kZTtlbHNlIHRoaXMuX3Jvb3Q9bm9kZX1yZXR1cm4gdGhpc31mdW5jdGlvbiByZW1vdmVBbGwoZGF0YSl7Zm9yKHZhciBpPTAsbj1kYXRhLmxlbmd0aDtpPG47KytpKXRoaXMucmVtb3ZlKGRhdGFbaV0pO3JldHVybiB0aGlzfWZ1bmN0aW9uIHRyZWVfcm9vdCgpe3JldHVybiB0aGlzLl9yb290fWZ1bmN0aW9uIHRyZWVfc2l6ZSgpe3ZhciBzaXplPTA7dGhpcy52aXNpdChmdW5jdGlvbihub2RlKXtpZighbm9kZS5sZW5ndGgpZG97KytzaXplfXdoaWxlKG5vZGU9bm9kZS5uZXh0KX0pO3JldHVybiBzaXplfWZ1bmN0aW9uIHRyZWVfdmlzaXQoY2FsbGJhY2spe3ZhciBxdWFkcz1bXSxxLG5vZGU9dGhpcy5fcm9vdCxjaGlsZCx4MCx5MCx4MSx5MTtpZihub2RlKXF1YWRzLnB1c2gobmV3IFF1YWQobm9kZSx0aGlzLl94MCx0aGlzLl95MCx0aGlzLl94MSx0aGlzLl95MSkpO3doaWxlKHE9cXVhZHMucG9wKCkpe2lmKCFjYWxsYmFjayhub2RlPXEubm9kZSx4MD1xLngwLHkwPXEueTAseDE9cS54MSx5MT1xLnkxKSYmbm9kZS5sZW5ndGgpe3ZhciB4bT0oeDAreDEpLzIseW09KHkwK3kxKS8yO2lmKGNoaWxkPW5vZGVbM10pcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCx4bSx5bSx4MSx5MSkpO2lmKGNoaWxkPW5vZGVbMl0pcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCx4MCx5bSx4bSx5MSkpO2lmKGNoaWxkPW5vZGVbMV0pcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCx4bSx5MCx4MSx5bSkpO2lmKGNoaWxkPW5vZGVbMF0pcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCx4MCx5MCx4bSx5bSkpfX1yZXR1cm4gdGhpc31mdW5jdGlvbiB0cmVlX3Zpc2l0QWZ0ZXIoY2FsbGJhY2spe3ZhciBxdWFkcz1bXSxuZXh0PVtdLHE7aWYodGhpcy5fcm9vdClxdWFkcy5wdXNoKG5ldyBRdWFkKHRoaXMuX3Jvb3QsdGhpcy5feDAsdGhpcy5feTAsdGhpcy5feDEsdGhpcy5feTEpKTt3aGlsZShxPXF1YWRzLnBvcCgpKXt2YXIgbm9kZT1xLm5vZGU7aWYobm9kZS5sZW5ndGgpe3ZhciBjaGlsZCx4MD1xLngwLHkwPXEueTAseDE9cS54MSx5MT1xLnkxLHhtPSh4MCt4MSkvMix5bT0oeTAreTEpLzI7aWYoY2hpbGQ9bm9kZVswXSlxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLHgwLHkwLHhtLHltKSk7aWYoY2hpbGQ9bm9kZVsxXSlxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLHhtLHkwLHgxLHltKSk7aWYoY2hpbGQ9bm9kZVsyXSlxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLHgwLHltLHhtLHkxKSk7aWYoY2hpbGQ9bm9kZVszXSlxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLHhtLHltLHgxLHkxKSl9bmV4dC5wdXNoKHEpfXdoaWxlKHE9bmV4dC5wb3AoKSl7Y2FsbGJhY2socS5ub2RlLHEueDAscS55MCxxLngxLHEueTEpfXJldHVybiB0aGlzfWZ1bmN0aW9uIGRlZmF1bHRYKGQpe3JldHVybiBkWzBdfWZ1bmN0aW9uIHRyZWVfeChfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5feD1fLHRoaXMpOnRoaXMuX3h9ZnVuY3Rpb24gZGVmYXVsdFkoZCl7cmV0dXJuIGRbMV19ZnVuY3Rpb24gdHJlZV95KF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl95PV8sdGhpcyk6dGhpcy5feX1mdW5jdGlvbiBxdWFkdHJlZShub2Rlcyx4LHkpe3ZhciB0cmVlPW5ldyBRdWFkdHJlZSh4PT1udWxsP2RlZmF1bHRYOngseT09bnVsbD9kZWZhdWx0WTp5LE5hTixOYU4sTmFOLE5hTik7cmV0dXJuIG5vZGVzPT1udWxsP3RyZWU6dHJlZS5hZGRBbGwobm9kZXMpfWZ1bmN0aW9uIFF1YWR0cmVlKHgseSx4MCx5MCx4MSx5MSl7dGhpcy5feD14O3RoaXMuX3k9eTt0aGlzLl94MD14MDt0aGlzLl95MD15MDt0aGlzLl94MT14MTt0aGlzLl95MT15MTt0aGlzLl9yb290PXVuZGVmaW5lZH1mdW5jdGlvbiBsZWFmX2NvcHkobGVhZil7dmFyIGNvcHk9e2RhdGE6bGVhZi5kYXRhfSxuZXh0PWNvcHk7d2hpbGUobGVhZj1sZWFmLm5leHQpbmV4dD1uZXh0Lm5leHQ9e2RhdGE6bGVhZi5kYXRhfTtyZXR1cm4gY29weX12YXIgdHJlZVByb3RvPXF1YWR0cmVlLnByb3RvdHlwZT1RdWFkdHJlZS5wcm90b3R5cGU7dHJlZVByb3RvLmNvcHk9ZnVuY3Rpb24oKXt2YXIgY29weT1uZXcgUXVhZHRyZWUodGhpcy5feCx0aGlzLl95LHRoaXMuX3gwLHRoaXMuX3kwLHRoaXMuX3gxLHRoaXMuX3kxKSxub2RlPXRoaXMuX3Jvb3Qsbm9kZXMsY2hpbGQ7aWYoIW5vZGUpcmV0dXJuIGNvcHk7aWYoIW5vZGUubGVuZ3RoKXJldHVybiBjb3B5Ll9yb290PWxlYWZfY29weShub2RlKSxjb3B5O25vZGVzPVt7c291cmNlOm5vZGUsdGFyZ2V0OmNvcHkuX3Jvb3Q9bmV3IEFycmF5KDQpfV07d2hpbGUobm9kZT1ub2Rlcy5wb3AoKSl7Zm9yKHZhciBpPTA7aTw0OysraSl7aWYoY2hpbGQ9bm9kZS5zb3VyY2VbaV0pe2lmKGNoaWxkLmxlbmd0aClub2Rlcy5wdXNoKHtzb3VyY2U6Y2hpbGQsdGFyZ2V0Om5vZGUudGFyZ2V0W2ldPW5ldyBBcnJheSg0KX0pO2Vsc2Ugbm9kZS50YXJnZXRbaV09bGVhZl9jb3B5KGNoaWxkKX19fXJldHVybiBjb3B5fTt0cmVlUHJvdG8uYWRkPXRyZWVfYWRkO3RyZWVQcm90by5hZGRBbGw9YWRkQWxsO3RyZWVQcm90by5jb3Zlcj10cmVlX2NvdmVyO3RyZWVQcm90by5kYXRhPXRyZWVfZGF0YTt0cmVlUHJvdG8uZXh0ZW50PXRyZWVfZXh0ZW50O3RyZWVQcm90by5maW5kPXRyZWVfZmluZDt0cmVlUHJvdG8ucmVtb3ZlPXRyZWVfcmVtb3ZlO3RyZWVQcm90by5yZW1vdmVBbGw9cmVtb3ZlQWxsO3RyZWVQcm90by5yb290PXRyZWVfcm9vdDt0cmVlUHJvdG8uc2l6ZT10cmVlX3NpemU7dHJlZVByb3RvLnZpc2l0PXRyZWVfdmlzaXQ7dHJlZVByb3RvLnZpc2l0QWZ0ZXI9dHJlZV92aXNpdEFmdGVyO3RyZWVQcm90by54PXRyZWVfeDt0cmVlUHJvdG8ueT10cmVlX3k7ZXhwb3J0cy5xdWFkdHJlZT1xdWFkdHJlZTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7fV0sNDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLXJhbmRvbS8gdjEuMS4yIENvcHlyaWdodCAyMDE4IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTpmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGRlZmF1bHRTb3VyY2UoKXtyZXR1cm4gTWF0aC5yYW5kb20oKX12YXIgdW5pZm9ybT1mdW5jdGlvbiBzb3VyY2VSYW5kb21Vbmlmb3JtKHNvdXJjZSl7ZnVuY3Rpb24gcmFuZG9tVW5pZm9ybShtaW4sbWF4KXttaW49bWluPT1udWxsPzA6K21pbjttYXg9bWF4PT1udWxsPzE6K21heDtpZihhcmd1bWVudHMubGVuZ3RoPT09MSltYXg9bWluLG1pbj0wO2Vsc2UgbWF4LT1taW47cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHNvdXJjZSgpKm1heCttaW59fXJhbmRvbVVuaWZvcm0uc291cmNlPXNvdXJjZVJhbmRvbVVuaWZvcm07cmV0dXJuIHJhbmRvbVVuaWZvcm19KGRlZmF1bHRTb3VyY2UpO3ZhciBub3JtYWw9ZnVuY3Rpb24gc291cmNlUmFuZG9tTm9ybWFsKHNvdXJjZSl7ZnVuY3Rpb24gcmFuZG9tTm9ybWFsKG11LHNpZ21hKXt2YXIgeCxyO211PW11PT1udWxsPzA6K211O3NpZ21hPXNpZ21hPT1udWxsPzE6K3NpZ21hO3JldHVybiBmdW5jdGlvbigpe3ZhciB5OwovLyBJZiBhdmFpbGFibGUsIHVzZSB0aGUgc2Vjb25kIHByZXZpb3VzbHktZ2VuZXJhdGVkIHVuaWZvcm0gcmFuZG9tLgppZih4IT1udWxsKXk9eCx4PW51bGw7Ci8vIE90aGVyd2lzZSwgZ2VuZXJhdGUgYSBuZXcgeCBhbmQgeS4KZWxzZSBkb3t4PXNvdXJjZSgpKjItMTt5PXNvdXJjZSgpKjItMTtyPXgqeCt5Knl9d2hpbGUoIXJ8fHI+MSk7cmV0dXJuIG11K3NpZ21hKnkqTWF0aC5zcXJ0KC0yKk1hdGgubG9nKHIpL3IpfX1yYW5kb21Ob3JtYWwuc291cmNlPXNvdXJjZVJhbmRvbU5vcm1hbDtyZXR1cm4gcmFuZG9tTm9ybWFsfShkZWZhdWx0U291cmNlKTt2YXIgbG9nTm9ybWFsPWZ1bmN0aW9uIHNvdXJjZVJhbmRvbUxvZ05vcm1hbChzb3VyY2Upe2Z1bmN0aW9uIHJhbmRvbUxvZ05vcm1hbCgpe3ZhciByYW5kb21Ob3JtYWw9bm9ybWFsLnNvdXJjZShzb3VyY2UpLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5leHAocmFuZG9tTm9ybWFsKCkpfX1yYW5kb21Mb2dOb3JtYWwuc291cmNlPXNvdXJjZVJhbmRvbUxvZ05vcm1hbDtyZXR1cm4gcmFuZG9tTG9nTm9ybWFsfShkZWZhdWx0U291cmNlKTt2YXIgaXJ3aW5IYWxsPWZ1bmN0aW9uIHNvdXJjZVJhbmRvbUlyd2luSGFsbChzb3VyY2Upe2Z1bmN0aW9uIHJhbmRvbUlyd2luSGFsbChuKXtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIHN1bT0wLGk9MDtpPG47KytpKXN1bSs9c291cmNlKCk7cmV0dXJuIHN1bX19cmFuZG9tSXJ3aW5IYWxsLnNvdXJjZT1zb3VyY2VSYW5kb21JcndpbkhhbGw7cmV0dXJuIHJhbmRvbUlyd2luSGFsbH0oZGVmYXVsdFNvdXJjZSk7dmFyIGJhdGVzPWZ1bmN0aW9uIHNvdXJjZVJhbmRvbUJhdGVzKHNvdXJjZSl7ZnVuY3Rpb24gcmFuZG9tQmF0ZXMobil7dmFyIHJhbmRvbUlyd2luSGFsbD1pcndpbkhhbGwuc291cmNlKHNvdXJjZSkobik7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHJhbmRvbUlyd2luSGFsbCgpL259fXJhbmRvbUJhdGVzLnNvdXJjZT1zb3VyY2VSYW5kb21CYXRlcztyZXR1cm4gcmFuZG9tQmF0ZXN9KGRlZmF1bHRTb3VyY2UpO3ZhciBleHBvbmVudGlhbD1mdW5jdGlvbiBzb3VyY2VSYW5kb21FeHBvbmVudGlhbChzb3VyY2Upe2Z1bmN0aW9uIHJhbmRvbUV4cG9uZW50aWFsKGxhbWJkYSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLU1hdGgubG9nKDEtc291cmNlKCkpL2xhbWJkYX19cmFuZG9tRXhwb25lbnRpYWwuc291cmNlPXNvdXJjZVJhbmRvbUV4cG9uZW50aWFsO3JldHVybiByYW5kb21FeHBvbmVudGlhbH0oZGVmYXVsdFNvdXJjZSk7ZXhwb3J0cy5yYW5kb21Vbmlmb3JtPXVuaWZvcm07ZXhwb3J0cy5yYW5kb21Ob3JtYWw9bm9ybWFsO2V4cG9ydHMucmFuZG9tTG9nTm9ybWFsPWxvZ05vcm1hbDtleHBvcnRzLnJhbmRvbUJhdGVzPWJhdGVzO2V4cG9ydHMucmFuZG9tSXJ3aW5IYWxsPWlyd2luSGFsbDtleHBvcnRzLnJhbmRvbUV4cG9uZW50aWFsPWV4cG9uZW50aWFsO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSw1MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtc2NhbGUtY2hyb21hdGljLyB2MS41LjAgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyxyZXF1aXJlKCJkMy1pbnRlcnBvbGF0ZSIpLHJlcXVpcmUoImQzLWNvbG9yIikpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiLCJkMy1pbnRlcnBvbGF0ZSIsImQzLWNvbG9yIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMsZ2xvYmFsLmQzKSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMsZDNJbnRlcnBvbGF0ZSxkM0NvbG9yKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gY29sb3JzKHNwZWNpZmllcil7dmFyIG49c3BlY2lmaWVyLmxlbmd0aC82fDAsY29sb3JzPW5ldyBBcnJheShuKSxpPTA7d2hpbGUoaTxuKWNvbG9yc1tpXT0iIyIrc3BlY2lmaWVyLnNsaWNlKGkqNiwrK2kqNik7cmV0dXJuIGNvbG9yc312YXIgY2F0ZWdvcnkxMD1jb2xvcnMoIjFmNzdiNGZmN2YwZTJjYTAyY2Q2MjcyODk0NjdiZDhjNTY0YmUzNzdjMjdmN2Y3ZmJjYmQyMjE3YmVjZiIpO3ZhciBBY2NlbnQ9Y29sb3JzKCI3ZmM5N2ZiZWFlZDRmZGMwODZmZmZmOTkzODZjYjBmMDAyN2ZiZjViMTc2NjY2NjYiKTt2YXIgRGFyazI9Y29sb3JzKCIxYjllNzdkOTVmMDI3NTcwYjNlNzI5OGE2NmE2MWVlNmFiMDJhNjc2MWQ2NjY2NjYiKTt2YXIgUGFpcmVkPWNvbG9ycygiYTZjZWUzMWY3OGI0YjJkZjhhMzNhMDJjZmI5YTk5ZTMxYTFjZmRiZjZmZmY3ZjAwY2FiMmQ2NmEzZDlhZmZmZjk5YjE1OTI4Iik7dmFyIFBhc3RlbDE9Y29sb3JzKCJmYmI0YWViM2NkZTNjY2ViYzVkZWNiZTRmZWQ5YTZmZmZmY2NlNWQ4YmRmZGRhZWNmMmYyZjIiKTt2YXIgUGFzdGVsMj1jb2xvcnMoImIzZTJjZGZkY2RhY2NiZDVlOGY0Y2FlNGU2ZjVjOWZmZjJhZWYxZTJjY2NjY2NjYyIpO3ZhciBTZXQxPWNvbG9ycygiZTQxYTFjMzc3ZWI4NGRhZjRhOTg0ZWEzZmY3ZjAwZmZmZjMzYTY1NjI4Zjc4MWJmOTk5OTk5Iik7dmFyIFNldDI9Y29sb3JzKCI2NmMyYTVmYzhkNjI4ZGEwY2JlNzhhYzNhNmQ4NTRmZmQ5MmZlNWM0OTRiM2IzYjMiKTt2YXIgU2V0Mz1jb2xvcnMoIjhkZDNjN2ZmZmZiM2JlYmFkYWZiODA3MjgwYjFkM2ZkYjQ2MmIzZGU2OWZjY2RlNWQ5ZDlkOWJjODBiZGNjZWJjNWZmZWQ2ZiIpO3ZhciBUYWJsZWF1MTA9Y29sb3JzKCI0ZTc5YTdmMjhlMmNlMTU3NTk3NmI3YjI1OWExNGZlZGM5NDlhZjdhYTFmZjlkYTc5Yzc1NWZiYWIwYWIiKTtmdW5jdGlvbiByYW1wKHNjaGVtZSl7cmV0dXJuIGQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVSZ2JCYXNpcyhzY2hlbWVbc2NoZW1lLmxlbmd0aC0xXSl9dmFyIHNjaGVtZT1uZXcgQXJyYXkoMykuY29uY2F0KCJkOGIzNjVmNWY1ZjU1YWI0YWMiLCJhNjYxMWFkZmMyN2Q4MGNkYzEwMTg1NzEiLCJhNjYxMWFkZmMyN2RmNWY1ZjU4MGNkYzEwMTg1NzEiLCI4YzUxMGFkOGIzNjVmNmU4YzNjN2VhZTU1YWI0YWMwMTY2NWUiLCI4YzUxMGFkOGIzNjVmNmU4YzNmNWY1ZjVjN2VhZTU1YWI0YWMwMTY2NWUiLCI4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUiLCI4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNmNWY1ZjVjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUiLCI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzAiLCI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNmNWY1ZjVjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzAiKS5tYXAoY29sb3JzKTt2YXIgQnJCRz1yYW1wKHNjaGVtZSk7dmFyIHNjaGVtZSQxPW5ldyBBcnJheSgzKS5jb25jYXQoImFmOGRjM2Y3ZjdmNzdmYmY3YiIsIjdiMzI5NGMyYTVjZmE2ZGJhMDAwODgzNyIsIjdiMzI5NGMyYTVjZmY3ZjdmN2E2ZGJhMDAwODgzNyIsIjc2MmE4M2FmOGRjM2U3ZDRlOGQ5ZjBkMzdmYmY3YjFiNzgzNyIsIjc2MmE4M2FmOGRjM2U3ZDRlOGY3ZjdmN2Q5ZjBkMzdmYmY3YjFiNzgzNyIsIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNyIsIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNyIsIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYiIsIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYiIpLm1hcChjb2xvcnMpO3ZhciBQUkduPXJhbXAoc2NoZW1lJDEpO3ZhciBzY2hlbWUkMj1uZXcgQXJyYXkoMykuY29uY2F0KCJlOWEzYzlmN2Y3ZjdhMWQ3NmEiLCJkMDFjOGJmMWI2ZGFiOGUxODY0ZGFjMjYiLCJkMDFjOGJmMWI2ZGFmN2Y3ZjdiOGUxODY0ZGFjMjYiLCJjNTFiN2RlOWEzYzlmZGUwZWZlNmY1ZDBhMWQ3NmE0ZDkyMjEiLCJjNTFiN2RlOWEzYzlmZGUwZWZmN2Y3ZjdlNmY1ZDBhMWQ3NmE0ZDkyMjEiLCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEiLCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEiLCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTkiLCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTkiKS5tYXAoY29sb3JzKTt2YXIgUGlZRz1yYW1wKHNjaGVtZSQyKTt2YXIgc2NoZW1lJDM9bmV3IEFycmF5KDMpLmNvbmNhdCgiOTk4ZWMzZjdmN2Y3ZjFhMzQwIiwiNWUzYzk5YjJhYmQyZmRiODYzZTY2MTAxIiwiNWUzYzk5YjJhYmQyZjdmN2Y3ZmRiODYzZTY2MTAxIiwiNTQyNzg4OTk4ZWMzZDhkYWViZmVlMGI2ZjFhMzQwYjM1ODA2IiwiNTQyNzg4OTk4ZWMzZDhkYWViZjdmN2Y3ZmVlMGI2ZjFhMzQwYjM1ODA2IiwiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2IiwiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2IiwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4IiwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4IikubWFwKGNvbG9ycyk7dmFyIFB1T3I9cmFtcChzY2hlbWUkMyk7dmFyIHNjaGVtZSQ0PW5ldyBBcnJheSgzKS5jb25jYXQoImVmOGE2MmY3ZjdmNzY3YTljZiIsImNhMDAyMGY0YTU4MjkyYzVkZTA1NzFiMCIsImNhMDAyMGY0YTU4MmY3ZjdmNzkyYzVkZTA1NzFiMCIsImIyMTgyYmVmOGE2MmZkZGJjN2QxZTVmMDY3YTljZjIxNjZhYyIsImIyMTgyYmVmOGE2MmZkZGJjN2Y3ZjdmN2QxZTVmMDY3YTljZjIxNjZhYyIsImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYyIsImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYyIsIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MSIsIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MSIpLm1hcChjb2xvcnMpO3ZhciBSZEJ1PXJhbXAoc2NoZW1lJDQpO3ZhciBzY2hlbWUkNT1uZXcgQXJyYXkoMykuY29uY2F0KCJlZjhhNjJmZmZmZmY5OTk5OTkiLCJjYTAwMjBmNGE1ODJiYWJhYmE0MDQwNDAiLCJjYTAwMjBmNGE1ODJmZmZmZmZiYWJhYmE0MDQwNDAiLCJiMjE4MmJlZjhhNjJmZGRiYzdlMGUwZTA5OTk5OTk0ZDRkNGQiLCJiMjE4MmJlZjhhNjJmZGRiYzdmZmZmZmZlMGUwZTA5OTk5OTk0ZDRkNGQiLCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQiLCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQiLCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWEiLCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWEiKS5tYXAoY29sb3JzKTt2YXIgUmRHeT1yYW1wKHNjaGVtZSQ1KTt2YXIgc2NoZW1lJDY9bmV3IEFycmF5KDMpLmNvbmNhdCgiZmM4ZDU5ZmZmZmJmOTFiZmRiIiwiZDcxOTFjZmRhZTYxYWJkOWU5MmM3YmI2IiwiZDcxOTFjZmRhZTYxZmZmZmJmYWJkOWU5MmM3YmI2IiwiZDczMDI3ZmM4ZDU5ZmVlMDkwZTBmM2Y4OTFiZmRiNDU3NWI0IiwiZDczMDI3ZmM4ZDU5ZmVlMDkwZmZmZmJmZTBmM2Y4OTFiZmRiNDU3NWI0IiwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0IiwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0IiwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1IiwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1IikubWFwKGNvbG9ycyk7dmFyIFJkWWxCdT1yYW1wKHNjaGVtZSQ2KTt2YXIgc2NoZW1lJDc9bmV3IEFycmF5KDMpLmNvbmNhdCgiZmM4ZDU5ZmZmZmJmOTFjZjYwIiwiZDcxOTFjZmRhZTYxYTZkOTZhMWE5NjQxIiwiZDcxOTFjZmRhZTYxZmZmZmJmYTZkOTZhMWE5NjQxIiwiZDczMDI3ZmM4ZDU5ZmVlMDhiZDllZjhiOTFjZjYwMWE5ODUwIiwiZDczMDI3ZmM4ZDU5ZmVlMDhiZmZmZmJmZDllZjhiOTFjZjYwMWE5ODUwIiwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwIiwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwIiwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwMDA2ODM3IiwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwMDA2ODM3IikubWFwKGNvbG9ycyk7dmFyIFJkWWxHbj1yYW1wKHNjaGVtZSQ3KTt2YXIgc2NoZW1lJDg9bmV3IEFycmF5KDMpLmNvbmNhdCgiZmM4ZDU5ZmZmZmJmOTlkNTk0IiwiZDcxOTFjZmRhZTYxYWJkZGE0MmI4M2JhIiwiZDcxOTFjZmRhZTYxZmZmZmJmYWJkZGE0MmI4M2JhIiwiZDUzZTRmZmM4ZDU5ZmVlMDhiZTZmNTk4OTlkNTk0MzI4OGJkIiwiZDUzZTRmZmM4ZDU5ZmVlMDhiZmZmZmJmZTZmNTk4OTlkNTk0MzI4OGJkIiwiZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkIiwiZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkIiwiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyIiwiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyIikubWFwKGNvbG9ycyk7dmFyIFNwZWN0cmFsPXJhbXAoc2NoZW1lJDgpO3ZhciBzY2hlbWUkOT1uZXcgQXJyYXkoMykuY29uY2F0KCJlNWY1Zjk5OWQ4YzkyY2EyNWYiLCJlZGY4ZmJiMmUyZTI2NmMyYTQyMzhiNDUiLCJlZGY4ZmJiMmUyZTI2NmMyYTQyY2EyNWYwMDZkMmMiLCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQyY2EyNWYwMDZkMmMiLCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjQiLCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjQiLCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDZkMmMwMDQ0MWIiKS5tYXAoY29sb3JzKTt2YXIgQnVHbj1yYW1wKHNjaGVtZSQ5KTt2YXIgc2NoZW1lJGE9bmV3IEFycmF5KDMpLmNvbmNhdCgiZTBlY2Y0OWViY2RhODg1NmE3IiwiZWRmOGZiYjNjZGUzOGM5NmM2ODg0MTlkIiwiZWRmOGZiYjNjZGUzOGM5NmM2ODg1NmE3ODEwZjdjIiwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2ODg1NmE3ODEwZjdjIiwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiIiwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiIiwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkODEwZjdjNGQwMDRiIikubWFwKGNvbG9ycyk7dmFyIEJ1UHU9cmFtcChzY2hlbWUkYSk7dmFyIHNjaGVtZSRiPW5ldyBBcnJheSgzKS5jb25jYXQoImUwZjNkYmE4ZGRiNTQzYTJjYSIsImYwZjllOGJhZTRiYzdiY2NjNDJiOGNiZSIsImYwZjllOGJhZTRiYzdiY2NjNDQzYTJjYTA4NjhhYyIsImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhYyIsImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZSIsImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZSIsImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MSIpLm1hcChjb2xvcnMpO3ZhciBHbkJ1PXJhbXAoc2NoZW1lJGIpO3ZhciBzY2hlbWUkYz1uZXcgQXJyYXkoMykuY29uY2F0KCJmZWU4YzhmZGJiODRlMzRhMzMiLCJmZWYwZDlmZGNjOGFmYzhkNTlkNzMwMWYiLCJmZWYwZDlmZGNjOGFmYzhkNTllMzRhMzNiMzAwMDAiLCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllMzRhMzNiMzAwMDAiLCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDAiLCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDAiLCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWZiMzAwMDA3ZjAwMDAiKS5tYXAoY29sb3JzKTt2YXIgT3JSZD1yYW1wKHNjaGVtZSRjKTt2YXIgc2NoZW1lJGQ9bmV3IEFycmF5KDMpLmNvbmNhdCgiZWNlMmYwYTZiZGRiMWM5MDk5IiwiZjZlZmY3YmRjOWUxNjdhOWNmMDI4MThhIiwiZjZlZmY3YmRjOWUxNjdhOWNmMWM5MDk5MDE2YzU5IiwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMWM5MDk5MDE2YzU5IiwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwIiwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwIiwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2YzU5MDE0NjM2IikubWFwKGNvbG9ycyk7dmFyIFB1QnVHbj1yYW1wKHNjaGVtZSRkKTt2YXIgc2NoZW1lJGU9bmV3IEFycmF5KDMpLmNvbmNhdCgiZWNlN2YyYTZiZGRiMmI4Y2JlIiwiZjFlZWY2YmRjOWUxNzRhOWNmMDU3MGIwIiwiZjFlZWY2YmRjOWUxNzRhOWNmMmI4Y2JlMDQ1YThkIiwiZjFlZWY2ZDBkMWU2YTZiZGRiNzRhOWNmMmI4Y2JlMDQ1YThkIiwiZjFlZWY2ZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiIiwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiIiwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDQ1YThkMDIzODU4IikubWFwKGNvbG9ycyk7dmFyIFB1QnU9cmFtcChzY2hlbWUkZSk7dmFyIHNjaGVtZSRmPW5ldyBBcnJheSgzKS5jb25jYXQoImU3ZTFlZmM5OTRjN2RkMWM3NyIsImYxZWVmNmQ3YjVkOGRmNjViMGNlMTI1NiIsImYxZWVmNmQ3YjVkOGRmNjViMGRkMWM3Nzk4MDA0MyIsImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGRkMWM3Nzk4MDA0MyIsImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1NjkxMDAzZiIsImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1NjkxMDAzZiIsImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1Njk4MDA0MzY3MDAxZiIpLm1hcChjb2xvcnMpO3ZhciBQdVJkPXJhbXAoc2NoZW1lJGYpO3ZhciBzY2hlbWUkZz1uZXcgQXJyYXkoMykuY29uY2F0KCJmZGUwZGRmYTlmYjVjNTFiOGEiLCJmZWViZTJmYmI0YjlmNzY4YTFhZTAxN2UiLCJmZWViZTJmYmI0YjlmNzY4YTFjNTFiOGE3YTAxNzciLCJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFjNTFiOGE3YTAxNzciLCJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzciLCJmZmY3ZjNmZGUwZGRmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzciLCJmZmY3ZjNmZGUwZGRmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzc0OTAwNmEiKS5tYXAoY29sb3JzKTt2YXIgUmRQdT1yYW1wKHNjaGVtZSRnKTt2YXIgc2NoZW1lJGg9bmV3IEFycmF5KDMpLmNvbmNhdCgiZWRmOGIxN2ZjZGJiMmM3ZmI4IiwiZmZmZmNjYTFkYWI0NDFiNmM0MjI1ZWE4IiwiZmZmZmNjYTFkYWI0NDFiNmM0MmM3ZmI4MjUzNDk0IiwiZmZmZmNjYzdlOWI0N2ZjZGJiNDFiNmM0MmM3ZmI4MjUzNDk0IiwiZmZmZmNjYzdlOWI0N2ZjZGJiNDFiNmM0MWQ5MWMwMjI1ZWE4MGMyYzg0IiwiZmZmZmQ5ZWRmOGIxYzdlOWI0N2ZjZGJiNDFiNmM0MWQ5MWMwMjI1ZWE4MGMyYzg0IiwiZmZmZmQ5ZWRmOGIxYzdlOWI0N2ZjZGJiNDFiNmM0MWQ5MWMwMjI1ZWE4MjUzNDk0MDgxZDU4IikubWFwKGNvbG9ycyk7dmFyIFlsR25CdT1yYW1wKHNjaGVtZSRoKTt2YXIgc2NoZW1lJGk9bmV3IEFycmF5KDMpLmNvbmNhdCgiZjdmY2I5YWRkZDhlMzFhMzU0IiwiZmZmZmNjYzJlNjk5NzhjNjc5MjM4NDQzIiwiZmZmZmNjYzJlNjk5NzhjNjc5MzFhMzU0MDA2ODM3IiwiZmZmZmNjZDlmMGEzYWRkZDhlNzhjNjc5MzFhMzU0MDA2ODM3IiwiZmZmZmNjZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyIiwiZmZmZmU1ZjdmY2I5ZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyIiwiZmZmZmU1ZjdmY2I5ZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA2ODM3MDA0NTI5IikubWFwKGNvbG9ycyk7dmFyIFlsR249cmFtcChzY2hlbWUkaSk7dmFyIHNjaGVtZSRqPW5ldyBBcnJheSgzKS5jb25jYXQoImZmZjdiY2ZlYzQ0ZmQ5NWYwZSIsImZmZmZkNGZlZDk4ZWZlOTkyOWNjNGMwMiIsImZmZmZkNGZlZDk4ZWZlOTkyOWQ5NWYwZTk5MzQwNCIsImZmZmZkNGZlZTM5MWZlYzQ0ZmZlOTkyOWQ5NWYwZTk5MzQwNCIsImZmZmZkNGZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjhjMmQwNCIsImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjhjMmQwNCIsImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjk5MzQwNDY2MjUwNiIpLm1hcChjb2xvcnMpO3ZhciBZbE9yQnI9cmFtcChzY2hlbWUkaik7dmFyIHNjaGVtZSRrPW5ldyBBcnJheSgzKS5jb25jYXQoImZmZWRhMGZlYjI0Y2YwM2IyMCIsImZmZmZiMmZlY2M1Y2ZkOGQzY2UzMWExYyIsImZmZmZiMmZlY2M1Y2ZkOGQzY2YwM2IyMGJkMDAyNiIsImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNiIsImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNiIsImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNiIsImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNiIpLm1hcChjb2xvcnMpO3ZhciBZbE9yUmQ9cmFtcChzY2hlbWUkayk7dmFyIHNjaGVtZSRsPW5ldyBBcnJheSgzKS5jb25jYXQoImRlZWJmNzllY2FlMTMxODJiZCIsImVmZjNmZmJkZDdlNzZiYWVkNjIxNzFiNSIsImVmZjNmZmJkZDdlNzZiYWVkNjMxODJiZDA4NTE5YyIsImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5YyIsImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NCIsImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NCIsImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YiIpLm1hcChjb2xvcnMpO3ZhciBCbHVlcz1yYW1wKHNjaGVtZSRsKTt2YXIgc2NoZW1lJG09bmV3IEFycmF5KDMpLmNvbmNhdCgiZTVmNWUwYTFkOTliMzFhMzU0IiwiZWRmOGU5YmFlNGIzNzRjNDc2MjM4YjQ1IiwiZWRmOGU5YmFlNGIzNzRjNDc2MzFhMzU0MDA2ZDJjIiwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2MzFhMzU0MDA2ZDJjIiwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyIiwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyIiwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA2ZDJjMDA0NDFiIikubWFwKGNvbG9ycyk7dmFyIEdyZWVucz1yYW1wKHNjaGVtZSRtKTt2YXIgc2NoZW1lJG49bmV3IEFycmF5KDMpLmNvbmNhdCgiZjBmMGYwYmRiZGJkNjM2MzYzIiwiZjdmN2Y3Y2NjY2NjOTY5Njk2NTI1MjUyIiwiZjdmN2Y3Y2NjY2NjOTY5Njk2NjM2MzYzMjUyNTI1IiwiZjdmN2Y3ZDlkOWQ5YmRiZGJkOTY5Njk2NjM2MzYzMjUyNTI1IiwiZjdmN2Y3ZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1IiwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1IiwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1MDAwMDAwIikubWFwKGNvbG9ycyk7dmFyIEdyZXlzPXJhbXAoc2NoZW1lJG4pO3ZhciBzY2hlbWUkbz1uZXcgQXJyYXkoMykuY29uY2F0KCJlZmVkZjViY2JkZGM3NTZiYjEiLCJmMmYwZjdjYmM5ZTI5ZTlhYzg2YTUxYTMiLCJmMmYwZjdjYmM5ZTI5ZTlhYzg3NTZiYjE1NDI3OGYiLCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg3NTZiYjE1NDI3OGYiLCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODYiLCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODYiLCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM1NDI3OGYzZjAwN2QiKS5tYXAoY29sb3JzKTt2YXIgUHVycGxlcz1yYW1wKHNjaGVtZSRvKTt2YXIgc2NoZW1lJHA9bmV3IEFycmF5KDMpLmNvbmNhdCgiZmVlMGQyZmM5MjcyZGUyZDI2IiwiZmVlNWQ5ZmNhZTkxZmI2YTRhY2IxODFkIiwiZmVlNWQ5ZmNhZTkxZmI2YTRhZGUyZDI2YTUwZjE1IiwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZGUyZDI2YTUwZjE1IiwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkIiwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkIiwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkYTUwZjE1NjcwMDBkIikubWFwKGNvbG9ycyk7dmFyIFJlZHM9cmFtcChzY2hlbWUkcCk7dmFyIHNjaGVtZSRxPW5ldyBBcnJheSgzKS5jb25jYXQoImZlZTZjZWZkYWU2YmU2NTUwZCIsImZlZWRkZWZkYmU4NWZkOGQzY2Q5NDcwMSIsImZlZWRkZWZkYmU4NWZkOGQzY2U2NTUwZGE2MzYwMyIsImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwMyIsImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNCIsImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNCIsImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNCIpLm1hcChjb2xvcnMpO3ZhciBPcmFuZ2VzPXJhbXAoc2NoZW1lJHEpO2Z1bmN0aW9uIGNpdmlkaXModCl7dD1NYXRoLm1heCgwLE1hdGgubWluKDEsdCkpO3JldHVybiJyZ2IoIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKC00LjU0LXQqKDM1LjM0LXQqKDIzODEuNzMtdCooNjQwMi43LXQqKDcwMjQuNzItdCoyNzEwLjU3KSkpKSkpKSsiLCAiK01hdGgubWF4KDAsTWF0aC5taW4oMjU1LE1hdGgucm91bmQoMzIuNDkrdCooMTcwLjczK3QqKDUyLjgyLXQqKDEzMS40Ni10KigxNzYuNTgtdCo2Ny4zNykpKSkpKSkrIiwgIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKDgxLjI0K3QqKDQ0Mi4zNi10KigyNDgyLjQzLXQqKDYxNjcuMjQtdCooNjYxNC45NC10KjI0NzUuNjcpKSkpKSkpKyIpIn12YXIgY3ViZWhlbGl4PWQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nKGQzQ29sb3IuY3ViZWhlbGl4KDMwMCwuNSwwKSxkM0NvbG9yLmN1YmVoZWxpeCgtMjQwLC41LDEpKTt2YXIgd2FybT1kM0ludGVycG9sYXRlLmludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyhkM0NvbG9yLmN1YmVoZWxpeCgtMTAwLC43NSwuMzUpLGQzQ29sb3IuY3ViZWhlbGl4KDgwLDEuNSwuOCkpO3ZhciBjb29sPWQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nKGQzQ29sb3IuY3ViZWhlbGl4KDI2MCwuNzUsLjM1KSxkM0NvbG9yLmN1YmVoZWxpeCg4MCwxLjUsLjgpKTt2YXIgYz1kM0NvbG9yLmN1YmVoZWxpeCgpO2Z1bmN0aW9uIHJhaW5ib3codCl7aWYodDwwfHx0PjEpdC09TWF0aC5mbG9vcih0KTt2YXIgdHM9TWF0aC5hYnModC0uNSk7Yy5oPTM2MCp0LTEwMDtjLnM9MS41LTEuNSp0cztjLmw9LjgtLjkqdHM7cmV0dXJuIGMrIiJ9dmFyIGMkMT1kM0NvbG9yLnJnYigpLHBpXzFfMz1NYXRoLlBJLzMscGlfMl8zPU1hdGguUEkqMi8zO2Z1bmN0aW9uIHNpbmVib3codCl7dmFyIHg7dD0oLjUtdCkqTWF0aC5QSTtjJDEucj0yNTUqKHg9TWF0aC5zaW4odCkpKng7YyQxLmc9MjU1Kih4PU1hdGguc2luKHQrcGlfMV8zKSkqeDtjJDEuYj0yNTUqKHg9TWF0aC5zaW4odCtwaV8yXzMpKSp4O3JldHVybiBjJDErIiJ9ZnVuY3Rpb24gdHVyYm8odCl7dD1NYXRoLm1heCgwLE1hdGgubWluKDEsdCkpO3JldHVybiJyZ2IoIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKDM0LjYxK3QqKDExNzIuMzMtdCooMTA3OTMuNTYtdCooMzMzMDAuMTItdCooMzgzOTQuNDktdCoxNDgyNS4wNSkpKSkpKSkrIiwgIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKDIzLjMxK3QqKDU1Ny4zMyt0KigxMjI1LjMzLXQqKDM1NzQuOTYtdCooMTA3My43Nyt0KjcwNy41NikpKSkpKSkrIiwgIitNYXRoLm1heCgwLE1hdGgubWluKDI1NSxNYXRoLnJvdW5kKDI3LjIrdCooMzIxMS4xLXQqKDE1MzI3Ljk3LXQqKDI3ODE0LXQqKDIyNTY5LjE4LXQqNjgzOC42NikpKSkpKSkrIikifWZ1bmN0aW9uIHJhbXAkMShyYW5nZSl7dmFyIG49cmFuZ2UubGVuZ3RoO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gcmFuZ2VbTWF0aC5tYXgoMCxNYXRoLm1pbihuLTEsTWF0aC5mbG9vcih0Km4pKSldfX12YXIgdmlyaWRpcz1yYW1wJDEoY29sb3JzKCI0NDAxNTQ0NDAyNTY0NTA0NTc0NTA1NTk0NjA3NWE0NjA4NWM0NjBhNWQ0NjBiNWU0NzBkNjA0NzBlNjE0NzEwNjM0NzExNjQ0NzEzNjU0ODE0Njc0ODE2Njg0ODE3Njk0ODE4NmE0ODFhNmM0ODFiNmQ0ODFjNmU0ODFkNmY0ODFmNzA0ODIwNzE0ODIxNzM0ODIzNzQ0ODI0NzU0ODI1NzY0ODI2Nzc0ODI4Nzg0ODI5Nzk0NzJhN2E0NzJjN2E0NzJkN2I0NzJlN2M0NzJmN2Q0NjMwN2U0NjMyN2U0NjMzN2Y0NjM0ODA0NTM1ODE0NTM3ODE0NTM4ODI0NDM5ODM0NDNhODM0NDNiODQ0MzNkODQ0MzNlODU0MjNmODU0MjQwODY0MjQxODY0MTQyODc0MTQ0ODc0MDQ1ODg0MDQ2ODgzZjQ3ODgzZjQ4ODkzZTQ5ODkzZTRhODkzZTRjOGEzZDRkOGEzZDRlOGEzYzRmOGEzYzUwOGIzYjUxOGIzYjUyOGIzYTUzOGIzYTU0OGMzOTU1OGMzOTU2OGMzODU4OGMzODU5OGMzNzVhOGMzNzViOGQzNjVjOGQzNjVkOGQzNTVlOGQzNTVmOGQzNDYwOGQzNDYxOGQzMzYyOGQzMzYzOGQzMjY0OGUzMjY1OGUzMTY2OGUzMTY3OGUzMTY4OGUzMDY5OGUzMDZhOGUyZjZiOGUyZjZjOGUyZTZkOGUyZTZlOGUyZTZmOGUyZDcwOGUyZDcxOGUyYzcxOGUyYzcyOGUyYzczOGUyYjc0OGUyYjc1OGUyYTc2OGUyYTc3OGUyYTc4OGUyOTc5OGUyOTdhOGUyOTdiOGUyODdjOGUyODdkOGUyNzdlOGUyNzdmOGUyNzgwOGUyNjgxOGUyNjgyOGUyNjgyOGUyNTgzOGUyNTg0OGUyNTg1OGUyNDg2OGUyNDg3OGUyMzg4OGUyMzg5OGUyMzhhOGQyMjhiOGQyMjhjOGQyMjhkOGQyMThlOGQyMThmOGQyMTkwOGQyMTkxOGMyMDkyOGMyMDkyOGMyMDkzOGMxZjk0OGMxZjk1OGIxZjk2OGIxZjk3OGIxZjk4OGIxZjk5OGExZjlhOGExZTliOGExZTljODkxZTlkODkxZjllODkxZjlmODgxZmEwODgxZmExODgxZmExODcxZmEyODcyMGEzODYyMGE0ODYyMWE1ODUyMWE2ODUyMmE3ODUyMmE4ODQyM2E5ODMyNGFhODMyNWFiODIyNWFjODIyNmFkODEyN2FkODEyOGFlODAyOWFmN2YyYWIwN2YyY2IxN2UyZGIyN2QyZWIzN2MyZmI0N2MzMWI1N2IzMmI2N2EzNGI2NzkzNWI3NzkzN2I4NzgzOGI5NzczYWJhNzYzYmJiNzUzZGJjNzQzZmJjNzM0MGJkNzI0MmJlNzE0NGJmNzA0NmMwNmY0OGMxNmU0YWMxNmQ0Y2MyNmM0ZWMzNmI1MGM0NmE1MmM1Njk1NGM1Njg1NmM2Njc1OGM3NjU1YWM4NjQ1Y2M4NjM1ZWM5NjI2MGNhNjA2M2NiNWY2NWNiNWU2N2NjNWM2OWNkNWI2Y2NkNWE2ZWNlNTg3MGNmNTc3M2QwNTY3NWQwNTQ3N2QxNTM3YWQxNTE3Y2QyNTA3ZmQzNGU4MWQzNGQ4NGQ0NGI4NmQ1NDk4OWQ1NDg4YmQ2NDY4ZWQ2NDU5MGQ3NDM5M2Q3NDE5NWQ4NDA5OGQ4M2U5YmQ5M2M5ZGQ5M2JhMGRhMzlhMmRhMzdhNWRiMzZhOGRiMzRhYWRjMzJhZGRjMzBiMGRkMmZiMmRkMmRiNWRlMmJiOGRlMjliYWRlMjhiZGRmMjZjMGRmMjVjMmRmMjNjNWUwMjFjOGUwMjBjYWUxMWZjZGUxMWRkMGUxMWNkMmUyMWJkNWUyMWFkOGUyMTlkYWUzMTlkZGUzMThkZmUzMThlMmU0MThlNWU0MTllN2U0MTllYWU1MWFlY2U1MWJlZmU1MWNmMWU1MWRmNGU2MWVmNmU2MjBmOGU2MjFmYmU3MjNmZGU3MjUiKSk7dmFyIG1hZ21hPXJhbXAkMShjb2xvcnMoIjAwMDAwNDAxMDAwNTAxMDEwNjAxMDEwODAyMDEwOTAyMDIwYjAyMDIwZDAzMDMwZjAzMDMxMjA0MDQxNDA1MDQxNjA2MDUxODA2MDUxYTA3MDYxYzA4MDcxZTA5MDcyMDBhMDgyMjBiMDkyNDBjMDkyNjBkMGEyOTBlMGIyYjEwMGIyZDExMGMyZjEyMGQzMTEzMGQzNDE0MGUzNjE1MGUzODE2MGYzYjE4MGYzZDE5MTAzZjFhMTA0MjFjMTA0NDFkMTE0NzFlMTE0OTIwMTE0YjIxMTE0ZTIyMTE1MDI0MTI1MzI1MTI1NTI3MTI1ODI5MTE1YTJhMTE1YzJjMTE1ZjJkMTE2MTJmMTE2MzMxMTE2NTMzMTA2NzM0MTA2OTM2MTA2YjM4MTA2YzM5MGY2ZTNiMGY3MDNkMGY3MTNmMGY3MjQwMGY3NDQyMGY3NTQ0MGY3NjQ1MTA3NzQ3MTA3ODQ5MTA3ODRhMTA3OTRjMTE3YTRlMTE3YjRmMTI3YjUxMTI3YzUyMTM3YzU0MTM3ZDU2MTQ3ZDU3MTU3ZTU5MTU3ZTVhMTY3ZTVjMTY3ZjVkMTc3ZjVmMTg3ZjYwMTg4MDYyMTk4MDY0MWE4MDY1MWE4MDY3MWI4MDY4MWM4MTZhMWM4MTZiMWQ4MTZkMWQ4MTZlMWU4MTcwMWY4MTcyMWY4MTczMjA4MTc1MjE4MTc2MjE4MTc4MjI4MTc5MjI4MjdiMjM4MjdjMjM4MjdlMjQ4MjgwMjU4MjgxMjU4MTgzMjY4MTg0MjY4MTg2Mjc4MTg4Mjc4MTg5Mjg4MThiMjk4MThjMjk4MThlMmE4MTkwMmE4MTkxMmI4MTkzMmI4MDk0MmM4MDk2MmM4MDk4MmQ4MDk5MmQ4MDliMmU3ZjljMmU3ZjllMmY3ZmEwMmY3ZmExMzA3ZWEzMzA3ZWE1MzE3ZWE2MzE3ZGE4MzI3ZGFhMzM3ZGFiMzM3Y2FkMzQ3Y2FlMzQ3YmIwMzU3YmIyMzU3YmIzMzY3YWI1MzY3YWI3Mzc3OWI4Mzc3OWJhMzg3OGJjMzk3OGJkMzk3N2JmM2E3N2MwM2E3NmMyM2I3NWM0M2M3NWM1M2M3NGM3M2Q3M2M4M2U3M2NhM2U3MmNjM2Y3MWNkNDA3MWNmNDA3MGQwNDE2ZmQyNDI2ZmQzNDM2ZWQ1NDQ2ZGQ2NDU2Y2Q4NDU2Y2Q5NDY2YmRiNDc2YWRjNDg2OWRlNDk2OGRmNGE2OGUwNGM2N2UyNGQ2NmUzNGU2NWU0NGY2NGU1NTA2NGU3NTI2M2U4NTM2MmU5NTQ2MmVhNTY2MWViNTc2MGVjNTg2MGVkNWE1ZmVlNWI1ZWVmNWQ1ZWYwNWY1ZWYxNjA1ZGYyNjI1ZGYyNjQ1Y2YzNjU1Y2Y0Njc1Y2Y0Njk1Y2Y1NmI1Y2Y2NmM1Y2Y2NmU1Y2Y3NzA1Y2Y3NzI1Y2Y4NzQ1Y2Y4NzY1Y2Y5Nzg1ZGY5Nzk1ZGY5N2I1ZGZhN2Q1ZWZhN2Y1ZWZhODE1ZmZiODM1ZmZiODU2MGZiODc2MWZjODk2MWZjOGE2MmZjOGM2M2ZjOGU2NGZjOTA2NWZkOTI2NmZkOTQ2N2ZkOTY2OGZkOTg2OWZkOWE2YWZkOWI2YmZlOWQ2Y2ZlOWY2ZGZlYTE2ZWZlYTM2ZmZlYTU3MWZlYTc3MmZlYTk3M2ZlYWE3NGZlYWM3NmZlYWU3N2ZlYjA3OGZlYjI3YWZlYjQ3YmZlYjY3Y2ZlYjc3ZWZlYjk3ZmZlYmI4MWZlYmQ4MmZlYmY4NGZlYzE4NWZlYzI4N2ZlYzQ4OGZlYzY4YWZlYzg4Y2ZlY2E4ZGZlY2M4ZmZlY2Q5MGZlY2Y5MmZlZDE5NGZlZDM5NWZlZDU5N2ZlZDc5OWZlZDg5YWZkZGE5Y2ZkZGM5ZWZkZGVhMGZkZTBhMWZkZTJhM2ZkZTNhNWZkZTVhN2ZkZTdhOWZkZTlhYWZkZWJhY2ZjZWNhZWZjZWViMGZjZjBiMmZjZjJiNGZjZjRiNmZjZjZiOGZjZjdiOWZjZjliYmZjZmJiZGZjZmRiZiIpKTt2YXIgaW5mZXJubz1yYW1wJDEoY29sb3JzKCIwMDAwMDQwMTAwMDUwMTAxMDYwMTAxMDgwMjAxMGEwMjAyMGMwMjAyMGUwMzAyMTAwNDAzMTIwNDAzMTQwNTA0MTcwNjA0MTkwNzA1MWIwODA1MWQwOTA2MWYwYTA3MjIwYjA3MjQwYzA4MjYwZDA4MjkwZTA5MmIxMDA5MmQxMTBhMzAxMjBhMzIxNDBiMzQxNTBiMzcxNjBiMzkxODBjM2MxOTBjM2UxYjBjNDExYzBjNDMxZTBjNDUxZjBjNDgyMTBjNGEyMzBjNGMyNDBjNGYyNjBjNTEyODBiNTMyOTBiNTUyYjBiNTcyZDBiNTkyZjBhNWIzMTBhNWMzMjBhNWUzNDBhNWYzNjA5NjEzODA5NjIzOTA5NjMzYjA5NjQzZDA5NjUzZTA5NjY0MDBhNjc0MjBhNjg0NDBhNjg0NTBhNjk0NzBiNmE0OTBiNmE0YTBjNmI0YzBjNmI0ZDBkNmM0ZjBkNmM1MTBlNmM1MjBlNmQ1NDBmNmQ1NTBmNmQ1NzEwNmU1OTEwNmU1YTExNmU1YzEyNmU1ZDEyNmU1ZjEzNmU2MTEzNmU2MjE0NmU2NDE1NmU2NTE1NmU2NzE2NmU2OTE2NmU2YTE3NmU2YzE4NmU2ZDE4NmU2ZjE5NmU3MTE5NmU3MjFhNmU3NDFhNmU3NTFiNmU3NzFjNmQ3ODFjNmQ3YTFkNmQ3YzFkNmQ3ZDFlNmQ3ZjFlNmM4MDFmNmM4MjIwNmM4NDIwNmI4NTIxNmI4NzIxNmI4ODIyNmE4YTIyNmE4YzIzNjk4ZDIzNjk4ZjI0Njk5MDI1Njg5MjI1Njg5MzI2Njc5NTI2Njc5NzI3NjY5ODI3NjY5YTI4NjU5YjI5NjQ5ZDI5NjQ5ZjJhNjNhMDJhNjNhMjJiNjJhMzJjNjFhNTJjNjBhNjJkNjBhODJlNWZhOTJlNWVhYjJmNWVhZDMwNWRhZTMwNWNiMDMxNWJiMTMyNWFiMzMyNWFiNDMzNTliNjM0NThiNzM1NTdiOTM1NTZiYTM2NTViYzM3NTRiZDM4NTNiZjM5NTJjMDNhNTFjMTNhNTBjMzNiNGZjNDNjNGVjNjNkNGRjNzNlNGNjODNmNGJjYTQwNGFjYjQxNDljYzQyNDhjZTQzNDdjZjQ0NDZkMDQ1NDVkMjQ2NDRkMzQ3NDNkNDQ4NDJkNTRhNDFkNzRiM2ZkODRjM2VkOTRkM2RkYTRlM2NkYjUwM2JkZDUxM2FkZTUyMzhkZjUzMzdlMDU1MzZlMTU2MzVlMjU3MzRlMzU5MzNlNDVhMzFlNTVjMzBlNjVkMmZlNzVlMmVlODYwMmRlOTYxMmJlYTYzMmFlYjY0MjllYjY2MjhlYzY3MjZlZDY5MjVlZTZhMjRlZjZjMjNlZjZlMjFmMDZmMjBmMTcxMWZmMTczMWRmMjc0MWNmMzc2MWJmMzc4MTlmNDc5MThmNTdiMTdmNTdkMTVmNjdlMTRmNjgwMTNmNzgyMTJmNzg0MTBmODg1MGZmODg3MGVmODg5MGNmOThiMGJmOThjMGFmOThlMDlmYTkwMDhmYTkyMDdmYTk0MDdmYjk2MDZmYjk3MDZmYjk5MDZmYjliMDZmYjlkMDdmYzlmMDdmY2ExMDhmY2EzMDlmY2E1MGFmY2E2MGNmY2E4MGRmY2FhMGZmY2FjMTFmY2FlMTJmY2IwMTRmY2IyMTZmY2I0MThmYmI2MWFmYmI4MWRmYmJhMWZmYmJjMjFmYmJlMjNmYWMwMjZmYWMyMjhmYWM0MmFmYWM2MmRmOWM3MmZmOWM5MzJmOWNiMzVmOGNkMzdmOGNmM2FmN2QxM2RmN2QzNDBmNmQ1NDNmNmQ3NDZmNWQ5NDlmNWRiNGNmNGRkNGZmNGRmNTNmNGUxNTZmM2UzNWFmM2U1NWRmMmU2NjFmMmU4NjVmMmVhNjlmMWVjNmRmMWVkNzFmMWVmNzVmMWYxNzlmMmYyN2RmMmY0ODJmM2Y1ODZmM2Y2OGFmNGY4OGVmNWY5OTJmNmZhOTZmOGZiOWFmOWZjOWRmYWZkYTFmY2ZmYTQiKSk7dmFyIHBsYXNtYT1yYW1wJDEoY29sb3JzKCIwZDA4ODcxMDA3ODgxMzA3ODkxNjA3OGExOTA2OGMxYjA2OGQxZDA2OGUyMDA2OGYyMjA2OTAyNDA2OTEyNjA1OTEyODA1OTIyYTA1OTMyYzA1OTQyZTA1OTUyZjA1OTYzMTA1OTczMzA1OTczNTA0OTgzNzA0OTkzODA0OWEzYTA0OWEzYzA0OWIzZTA0OWMzZjA0OWM0MTA0OWQ0MzAzOWU0NDAzOWU0NjAzOWY0ODAzOWY0OTAzYTA0YjAzYTE0YzAyYTE0ZTAyYTI1MDAyYTI1MTAyYTM1MzAyYTM1NTAyYTQ1NjAxYTQ1ODAxYTQ1OTAxYTU1YjAxYTU1YzAxYTY1ZTAxYTY2MDAxYTY2MTAwYTc2MzAwYTc2NDAwYTc2NjAwYTc2NzAwYTg2OTAwYTg2YTAwYTg2YzAwYTg2ZTAwYTg2ZjAwYTg3MTAwYTg3MjAxYTg3NDAxYTg3NTAxYTg3NzAxYTg3ODAxYTg3YTAyYTg3YjAyYTg3ZDAzYTg3ZTAzYTg4MDA0YTg4MTA0YTc4MzA1YTc4NDA1YTc4NjA2YTY4NzA3YTY4ODA4YTY4YTA5YTU4YjBhYTU4ZDBiYTU4ZTBjYTQ4ZjBkYTQ5MTBlYTM5MjBmYTM5NDEwYTI5NTExYTE5NjEzYTE5ODE0YTA5OTE1OWY5YTE2OWY5YzE3OWU5ZDE4OWQ5ZTE5OWRhMDFhOWNhMTFiOWJhMjFkOWFhMzFlOWFhNTFmOTlhNjIwOThhNzIxOTdhODIyOTZhYTIzOTVhYjI0OTRhYzI2OTRhZDI3OTNhZTI4OTJiMDI5OTFiMTJhOTBiMjJiOGZiMzJjOGViNDJlOGRiNTJmOGNiNjMwOGJiNzMxOGFiODMyODliYTMzODhiYjM0ODhiYzM1ODdiZDM3ODZiZTM4ODViZjM5ODRjMDNhODNjMTNiODJjMjNjODFjMzNkODBjNDNlN2ZjNTQwN2VjNjQxN2RjNzQyN2NjODQzN2JjOTQ0N2FjYTQ1N2FjYjQ2NzljYzQ3NzhjYzQ5NzdjZDRhNzZjZTRiNzVjZjRjNzRkMDRkNzNkMTRlNzJkMjRmNzFkMzUxNzFkNDUyNzBkNTUzNmZkNTU0NmVkNjU1NmRkNzU2NmNkODU3NmJkOTU4NmFkYTVhNmFkYTViNjlkYjVjNjhkYzVkNjdkZDVlNjZkZTVmNjVkZTYxNjRkZjYyNjNlMDYzNjNlMTY0NjJlMjY1NjFlMjY2NjBlMzY4NWZlNDY5NWVlNTZhNWRlNTZiNWRlNjZjNWNlNzZlNWJlNzZmNWFlODcwNTllOTcxNThlOTcyNTdlYTc0NTdlYjc1NTZlYjc2NTVlYzc3NTRlZDc5NTNlZDdhNTJlZTdiNTFlZjdjNTFlZjdlNTBmMDdmNGZmMDgwNGVmMTgxNGRmMTgzNGNmMjg0NGJmMzg1NGJmMzg3NGFmNDg4NDlmNDg5NDhmNThiNDdmNThjNDZmNjhkNDVmNjhmNDRmNzkwNDRmNzkxNDNmNzkzNDJmODk0NDFmODk1NDBmOTk3M2ZmOTk4M2VmOTlhM2VmYTliM2RmYTljM2NmYTllM2JmYjlmM2FmYmExMzlmYmEyMzhmY2EzMzhmY2E1MzdmY2E2MzZmY2E4MzVmY2E5MzRmZGFiMzNmZGFjMzNmZGFlMzJmZGFmMzFmZGIxMzBmZGIyMmZmZGI0MmZmZGI1MmVmZWI3MmRmZWI4MmNmZWJhMmNmZWJiMmJmZWJkMmFmZWJlMmFmZWMwMjlmZGMyMjlmZGMzMjhmZGM1MjdmZGM2MjdmZGM4MjdmZGNhMjZmZGNiMjZmY2NkMjVmY2NlMjVmY2QwMjVmY2QyMjVmYmQzMjRmYmQ1MjRmYmQ3MjRmYWQ4MjRmYWRhMjRmOWRjMjRmOWRkMjVmOGRmMjVmOGUxMjVmN2UyMjVmN2U0MjVmNmU2MjZmNmU4MjZmNWU5MjZmNWViMjdmNGVkMjdmM2VlMjdmM2YwMjdmMmYyMjdmMWY0MjZmMWY1MjVmMGY3MjRmMGY5MjEiKSk7ZXhwb3J0cy5pbnRlcnBvbGF0ZUJsdWVzPUJsdWVzO2V4cG9ydHMuaW50ZXJwb2xhdGVCckJHPUJyQkc7ZXhwb3J0cy5pbnRlcnBvbGF0ZUJ1R249QnVHbjtleHBvcnRzLmludGVycG9sYXRlQnVQdT1CdVB1O2V4cG9ydHMuaW50ZXJwb2xhdGVDaXZpZGlzPWNpdmlkaXM7ZXhwb3J0cy5pbnRlcnBvbGF0ZUNvb2w9Y29vbDtleHBvcnRzLmludGVycG9sYXRlQ3ViZWhlbGl4RGVmYXVsdD1jdWJlaGVsaXg7ZXhwb3J0cy5pbnRlcnBvbGF0ZUduQnU9R25CdTtleHBvcnRzLmludGVycG9sYXRlR3JlZW5zPUdyZWVucztleHBvcnRzLmludGVycG9sYXRlR3JleXM9R3JleXM7ZXhwb3J0cy5pbnRlcnBvbGF0ZUluZmVybm89aW5mZXJubztleHBvcnRzLmludGVycG9sYXRlTWFnbWE9bWFnbWE7ZXhwb3J0cy5pbnRlcnBvbGF0ZU9yUmQ9T3JSZDtleHBvcnRzLmludGVycG9sYXRlT3Jhbmdlcz1PcmFuZ2VzO2V4cG9ydHMuaW50ZXJwb2xhdGVQUkduPVBSR247ZXhwb3J0cy5pbnRlcnBvbGF0ZVBpWUc9UGlZRztleHBvcnRzLmludGVycG9sYXRlUGxhc21hPXBsYXNtYTtleHBvcnRzLmludGVycG9sYXRlUHVCdT1QdUJ1O2V4cG9ydHMuaW50ZXJwb2xhdGVQdUJ1R249UHVCdUduO2V4cG9ydHMuaW50ZXJwb2xhdGVQdU9yPVB1T3I7ZXhwb3J0cy5pbnRlcnBvbGF0ZVB1UmQ9UHVSZDtleHBvcnRzLmludGVycG9sYXRlUHVycGxlcz1QdXJwbGVzO2V4cG9ydHMuaW50ZXJwb2xhdGVSYWluYm93PXJhaW5ib3c7ZXhwb3J0cy5pbnRlcnBvbGF0ZVJkQnU9UmRCdTtleHBvcnRzLmludGVycG9sYXRlUmRHeT1SZEd5O2V4cG9ydHMuaW50ZXJwb2xhdGVSZFB1PVJkUHU7ZXhwb3J0cy5pbnRlcnBvbGF0ZVJkWWxCdT1SZFlsQnU7ZXhwb3J0cy5pbnRlcnBvbGF0ZVJkWWxHbj1SZFlsR247ZXhwb3J0cy5pbnRlcnBvbGF0ZVJlZHM9UmVkcztleHBvcnRzLmludGVycG9sYXRlU2luZWJvdz1zaW5lYm93O2V4cG9ydHMuaW50ZXJwb2xhdGVTcGVjdHJhbD1TcGVjdHJhbDtleHBvcnRzLmludGVycG9sYXRlVHVyYm89dHVyYm87ZXhwb3J0cy5pbnRlcnBvbGF0ZVZpcmlkaXM9dmlyaWRpcztleHBvcnRzLmludGVycG9sYXRlV2FybT13YXJtO2V4cG9ydHMuaW50ZXJwb2xhdGVZbEduPVlsR247ZXhwb3J0cy5pbnRlcnBvbGF0ZVlsR25CdT1ZbEduQnU7ZXhwb3J0cy5pbnRlcnBvbGF0ZVlsT3JCcj1ZbE9yQnI7ZXhwb3J0cy5pbnRlcnBvbGF0ZVlsT3JSZD1ZbE9yUmQ7ZXhwb3J0cy5zY2hlbWVBY2NlbnQ9QWNjZW50O2V4cG9ydHMuc2NoZW1lQmx1ZXM9c2NoZW1lJGw7ZXhwb3J0cy5zY2hlbWVCckJHPXNjaGVtZTtleHBvcnRzLnNjaGVtZUJ1R249c2NoZW1lJDk7ZXhwb3J0cy5zY2hlbWVCdVB1PXNjaGVtZSRhO2V4cG9ydHMuc2NoZW1lQ2F0ZWdvcnkxMD1jYXRlZ29yeTEwO2V4cG9ydHMuc2NoZW1lRGFyazI9RGFyazI7ZXhwb3J0cy5zY2hlbWVHbkJ1PXNjaGVtZSRiO2V4cG9ydHMuc2NoZW1lR3JlZW5zPXNjaGVtZSRtO2V4cG9ydHMuc2NoZW1lR3JleXM9c2NoZW1lJG47ZXhwb3J0cy5zY2hlbWVPclJkPXNjaGVtZSRjO2V4cG9ydHMuc2NoZW1lT3Jhbmdlcz1zY2hlbWUkcTtleHBvcnRzLnNjaGVtZVBSR249c2NoZW1lJDE7ZXhwb3J0cy5zY2hlbWVQYWlyZWQ9UGFpcmVkO2V4cG9ydHMuc2NoZW1lUGFzdGVsMT1QYXN0ZWwxO2V4cG9ydHMuc2NoZW1lUGFzdGVsMj1QYXN0ZWwyO2V4cG9ydHMuc2NoZW1lUGlZRz1zY2hlbWUkMjtleHBvcnRzLnNjaGVtZVB1QnU9c2NoZW1lJGU7ZXhwb3J0cy5zY2hlbWVQdUJ1R249c2NoZW1lJGQ7ZXhwb3J0cy5zY2hlbWVQdU9yPXNjaGVtZSQzO2V4cG9ydHMuc2NoZW1lUHVSZD1zY2hlbWUkZjtleHBvcnRzLnNjaGVtZVB1cnBsZXM9c2NoZW1lJG87ZXhwb3J0cy5zY2hlbWVSZEJ1PXNjaGVtZSQ0O2V4cG9ydHMuc2NoZW1lUmRHeT1zY2hlbWUkNTtleHBvcnRzLnNjaGVtZVJkUHU9c2NoZW1lJGc7ZXhwb3J0cy5zY2hlbWVSZFlsQnU9c2NoZW1lJDY7ZXhwb3J0cy5zY2hlbWVSZFlsR249c2NoZW1lJDc7ZXhwb3J0cy5zY2hlbWVSZWRzPXNjaGVtZSRwO2V4cG9ydHMuc2NoZW1lU2V0MT1TZXQxO2V4cG9ydHMuc2NoZW1lU2V0Mj1TZXQyO2V4cG9ydHMuc2NoZW1lU2V0Mz1TZXQzO2V4cG9ydHMuc2NoZW1lU3BlY3RyYWw9c2NoZW1lJDg7ZXhwb3J0cy5zY2hlbWVUYWJsZWF1MTA9VGFibGVhdTEwO2V4cG9ydHMuc2NoZW1lWWxHbj1zY2hlbWUkaTtleHBvcnRzLnNjaGVtZVlsR25CdT1zY2hlbWUkaDtleHBvcnRzLnNjaGVtZVlsT3JCcj1zY2hlbWUkajtleHBvcnRzLnNjaGVtZVlsT3JSZD1zY2hlbWUkaztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7ImQzLWNvbG9yIjozNCwiZDMtaW50ZXJwb2xhdGUiOjQ1fV0sNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLXNjYWxlLyB2Mi4yLjIgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyxyZXF1aXJlKCJkMy1jb2xsZWN0aW9uIikscmVxdWlyZSgiZDMtYXJyYXkiKSxyZXF1aXJlKCJkMy1pbnRlcnBvbGF0ZSIpLHJlcXVpcmUoImQzLWZvcm1hdCIpLHJlcXVpcmUoImQzLXRpbWUiKSxyZXF1aXJlKCJkMy10aW1lLWZvcm1hdCIpKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIiwiZDMtY29sbGVjdGlvbiIsImQzLWFycmF5IiwiZDMtaW50ZXJwb2xhdGUiLCJkMy1mb3JtYXQiLCJkMy10aW1lIiwiZDMtdGltZS1mb3JtYXQiXSxmYWN0b3J5KTpmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9LGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM0NvbGxlY3Rpb24sZDNBcnJheSxkM0ludGVycG9sYXRlLGQzRm9ybWF0LGQzVGltZSxkM1RpbWVGb3JtYXQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpbml0UmFuZ2UoZG9tYWluLHJhbmdlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOmJyZWFrO2Nhc2UgMTp0aGlzLnJhbmdlKGRvbWFpbik7YnJlYWs7ZGVmYXVsdDp0aGlzLnJhbmdlKHJhbmdlKS5kb21haW4oZG9tYWluKTticmVha31yZXR1cm4gdGhpc31mdW5jdGlvbiBpbml0SW50ZXJwb2xhdG9yKGRvbWFpbixpbnRlcnBvbGF0b3Ipe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6YnJlYWs7Y2FzZSAxOnRoaXMuaW50ZXJwb2xhdG9yKGRvbWFpbik7YnJlYWs7ZGVmYXVsdDp0aGlzLmludGVycG9sYXRvcihpbnRlcnBvbGF0b3IpLmRvbWFpbihkb21haW4pO2JyZWFrfXJldHVybiB0aGlzfXZhciBhcnJheT1BcnJheS5wcm90b3R5cGU7dmFyIG1hcD1hcnJheS5tYXA7dmFyIHNsaWNlPWFycmF5LnNsaWNlO3ZhciBpbXBsaWNpdD17bmFtZToiaW1wbGljaXQifTtmdW5jdGlvbiBvcmRpbmFsKCl7dmFyIGluZGV4PWQzQ29sbGVjdGlvbi5tYXAoKSxkb21haW49W10scmFuZ2U9W10sdW5rbm93bj1pbXBsaWNpdDtmdW5jdGlvbiBzY2FsZShkKXt2YXIga2V5PWQrIiIsaT1pbmRleC5nZXQoa2V5KTtpZighaSl7aWYodW5rbm93biE9PWltcGxpY2l0KXJldHVybiB1bmtub3duO2luZGV4LnNldChrZXksaT1kb21haW4ucHVzaChkKSl9cmV0dXJuIHJhbmdlWyhpLTEpJXJhbmdlLmxlbmd0aF19c2NhbGUuZG9tYWluPWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBkb21haW4uc2xpY2UoKTtkb21haW49W10saW5kZXg9ZDNDb2xsZWN0aW9uLm1hcCgpO3ZhciBpPS0xLG49Xy5sZW5ndGgsZCxrZXk7d2hpbGUoKytpPG4paWYoIWluZGV4LmhhcyhrZXk9KGQ9X1tpXSkrIiIpKWluZGV4LnNldChrZXksZG9tYWluLnB1c2goZCkpO3JldHVybiBzY2FsZX07c2NhbGUucmFuZ2U9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHJhbmdlPXNsaWNlLmNhbGwoXyksc2NhbGUpOnJhbmdlLnNsaWNlKCl9O3NjYWxlLnVua25vd249ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHVua25vd249XyxzY2FsZSk6dW5rbm93bn07c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBvcmRpbmFsKGRvbWFpbixyYW5nZSkudW5rbm93bih1bmtub3duKX07aW5pdFJhbmdlLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyk7cmV0dXJuIHNjYWxlfWZ1bmN0aW9uIGJhbmQoKXt2YXIgc2NhbGU9b3JkaW5hbCgpLnVua25vd24odW5kZWZpbmVkKSxkb21haW49c2NhbGUuZG9tYWluLG9yZGluYWxSYW5nZT1zY2FsZS5yYW5nZSxyYW5nZT1bMCwxXSxzdGVwLGJhbmR3aWR0aCxyb3VuZD1mYWxzZSxwYWRkaW5nSW5uZXI9MCxwYWRkaW5nT3V0ZXI9MCxhbGlnbj0uNTtkZWxldGUgc2NhbGUudW5rbm93bjtmdW5jdGlvbiByZXNjYWxlKCl7dmFyIG49ZG9tYWluKCkubGVuZ3RoLHJldmVyc2U9cmFuZ2VbMV08cmFuZ2VbMF0sc3RhcnQ9cmFuZ2VbcmV2ZXJzZS0wXSxzdG9wPXJhbmdlWzEtcmV2ZXJzZV07c3RlcD0oc3RvcC1zdGFydCkvTWF0aC5tYXgoMSxuLXBhZGRpbmdJbm5lcitwYWRkaW5nT3V0ZXIqMik7aWYocm91bmQpc3RlcD1NYXRoLmZsb29yKHN0ZXApO3N0YXJ0Kz0oc3RvcC1zdGFydC1zdGVwKihuLXBhZGRpbmdJbm5lcikpKmFsaWduO2JhbmR3aWR0aD1zdGVwKigxLXBhZGRpbmdJbm5lcik7aWYocm91bmQpc3RhcnQ9TWF0aC5yb3VuZChzdGFydCksYmFuZHdpZHRoPU1hdGgucm91bmQoYmFuZHdpZHRoKTt2YXIgdmFsdWVzPWQzQXJyYXkucmFuZ2UobikubWFwKGZ1bmN0aW9uKGkpe3JldHVybiBzdGFydCtzdGVwKml9KTtyZXR1cm4gb3JkaW5hbFJhbmdlKHJldmVyc2U/dmFsdWVzLnJldmVyc2UoKTp2YWx1ZXMpfXNjYWxlLmRvbWFpbj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZG9tYWluKF8pLHJlc2NhbGUoKSk6ZG9tYWluKCl9O3NjYWxlLnJhbmdlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyYW5nZT1bK19bMF0sK19bMV1dLHJlc2NhbGUoKSk6cmFuZ2Uuc2xpY2UoKX07c2NhbGUucmFuZ2VSb3VuZD1mdW5jdGlvbihfKXtyZXR1cm4gcmFuZ2U9WytfWzBdLCtfWzFdXSxyb3VuZD10cnVlLHJlc2NhbGUoKX07c2NhbGUuYmFuZHdpZHRoPWZ1bmN0aW9uKCl7cmV0dXJuIGJhbmR3aWR0aH07c2NhbGUuc3RlcD1mdW5jdGlvbigpe3JldHVybiBzdGVwfTtzY2FsZS5yb3VuZD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocm91bmQ9ISFfLHJlc2NhbGUoKSk6cm91bmR9O3NjYWxlLnBhZGRpbmc9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhZGRpbmdJbm5lcj1NYXRoLm1pbigxLHBhZGRpbmdPdXRlcj0rXykscmVzY2FsZSgpKTpwYWRkaW5nSW5uZXJ9O3NjYWxlLnBhZGRpbmdJbm5lcj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocGFkZGluZ0lubmVyPU1hdGgubWluKDEsXykscmVzY2FsZSgpKTpwYWRkaW5nSW5uZXJ9O3NjYWxlLnBhZGRpbmdPdXRlcj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocGFkZGluZ091dGVyPStfLHJlc2NhbGUoKSk6cGFkZGluZ091dGVyfTtzY2FsZS5hbGlnbj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYWxpZ249TWF0aC5tYXgoMCxNYXRoLm1pbigxLF8pKSxyZXNjYWxlKCkpOmFsaWdufTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGJhbmQoZG9tYWluKCkscmFuZ2UpLnJvdW5kKHJvdW5kKS5wYWRkaW5nSW5uZXIocGFkZGluZ0lubmVyKS5wYWRkaW5nT3V0ZXIocGFkZGluZ091dGVyKS5hbGlnbihhbGlnbil9O3JldHVybiBpbml0UmFuZ2UuYXBwbHkocmVzY2FsZSgpLGFyZ3VtZW50cyl9ZnVuY3Rpb24gcG9pbnRpc2goc2NhbGUpe3ZhciBjb3B5PXNjYWxlLmNvcHk7c2NhbGUucGFkZGluZz1zY2FsZS5wYWRkaW5nT3V0ZXI7ZGVsZXRlIHNjYWxlLnBhZGRpbmdJbm5lcjtkZWxldGUgc2NhbGUucGFkZGluZ091dGVyO3NjYWxlLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gcG9pbnRpc2goY29weSgpKX07cmV0dXJuIHNjYWxlfWZ1bmN0aW9uIHBvaW50KCl7cmV0dXJuIHBvaW50aXNoKGJhbmQuYXBwbHkobnVsbCxhcmd1bWVudHMpLnBhZGRpbmdJbm5lcigxKSl9ZnVuY3Rpb24gY29uc3RhbnQoeCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHh9fWZ1bmN0aW9uIG51bWJlcih4KXtyZXR1cm4reH12YXIgdW5pdD1bMCwxXTtmdW5jdGlvbiBpZGVudGl0eSh4KXtyZXR1cm4geH1mdW5jdGlvbiBub3JtYWxpemUoYSxiKXtyZXR1cm4oYi09YT0rYSk/ZnVuY3Rpb24oeCl7cmV0dXJuKHgtYSkvYn06Y29uc3RhbnQoaXNOYU4oYik/TmFOOi41KX1mdW5jdGlvbiBjbGFtcGVyKGRvbWFpbil7dmFyIGE9ZG9tYWluWzBdLGI9ZG9tYWluW2RvbWFpbi5sZW5ndGgtMV0sdDtpZihhPmIpdD1hLGE9YixiPXQ7cmV0dXJuIGZ1bmN0aW9uKHgpe3JldHVybiBNYXRoLm1heChhLE1hdGgubWluKGIseCkpfX0KLy8gbm9ybWFsaXplKGEsIGIpKHgpIHRha2VzIGEgZG9tYWluIHZhbHVlIHggaW4gW2EsYl0gYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcGFyYW1ldGVyIHQgaW4gWzAsMV0uCi8vIGludGVycG9sYXRlKGEsIGIpKHQpIHRha2VzIGEgcGFyYW1ldGVyIHQgaW4gWzAsMV0gYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmFuZ2UgdmFsdWUgeCBpbiBbYSxiXS4KZnVuY3Rpb24gYmltYXAoZG9tYWluLHJhbmdlLGludGVycG9sYXRlKXt2YXIgZDA9ZG9tYWluWzBdLGQxPWRvbWFpblsxXSxyMD1yYW5nZVswXSxyMT1yYW5nZVsxXTtpZihkMTxkMClkMD1ub3JtYWxpemUoZDEsZDApLHIwPWludGVycG9sYXRlKHIxLHIwKTtlbHNlIGQwPW5vcm1hbGl6ZShkMCxkMSkscjA9aW50ZXJwb2xhdGUocjAscjEpO3JldHVybiBmdW5jdGlvbih4KXtyZXR1cm4gcjAoZDAoeCkpfX1mdW5jdGlvbiBwb2x5bWFwKGRvbWFpbixyYW5nZSxpbnRlcnBvbGF0ZSl7dmFyIGo9TWF0aC5taW4oZG9tYWluLmxlbmd0aCxyYW5nZS5sZW5ndGgpLTEsZD1uZXcgQXJyYXkoaikscj1uZXcgQXJyYXkoaiksaT0tMTsKLy8gUmV2ZXJzZSBkZXNjZW5kaW5nIGRvbWFpbnMuCmlmKGRvbWFpbltqXTxkb21haW5bMF0pe2RvbWFpbj1kb21haW4uc2xpY2UoKS5yZXZlcnNlKCk7cmFuZ2U9cmFuZ2Uuc2xpY2UoKS5yZXZlcnNlKCl9d2hpbGUoKytpPGope2RbaV09bm9ybWFsaXplKGRvbWFpbltpXSxkb21haW5baSsxXSk7cltpXT1pbnRlcnBvbGF0ZShyYW5nZVtpXSxyYW5nZVtpKzFdKX1yZXR1cm4gZnVuY3Rpb24oeCl7dmFyIGk9ZDNBcnJheS5iaXNlY3QoZG9tYWluLHgsMSxqKS0xO3JldHVybiByW2ldKGRbaV0oeCkpfX1mdW5jdGlvbiBjb3B5KHNvdXJjZSx0YXJnZXQpe3JldHVybiB0YXJnZXQuZG9tYWluKHNvdXJjZS5kb21haW4oKSkucmFuZ2Uoc291cmNlLnJhbmdlKCkpLmludGVycG9sYXRlKHNvdXJjZS5pbnRlcnBvbGF0ZSgpKS5jbGFtcChzb3VyY2UuY2xhbXAoKSkudW5rbm93bihzb3VyY2UudW5rbm93bigpKX1mdW5jdGlvbiB0cmFuc2Zvcm1lcigpe3ZhciBkb21haW49dW5pdCxyYW5nZT11bml0LGludGVycG9sYXRlPWQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGUsdHJhbnNmb3JtLHVudHJhbnNmb3JtLHVua25vd24sY2xhbXA9aWRlbnRpdHkscGllY2V3aXNlLG91dHB1dCxpbnB1dDtmdW5jdGlvbiByZXNjYWxlKCl7cGllY2V3aXNlPU1hdGgubWluKGRvbWFpbi5sZW5ndGgscmFuZ2UubGVuZ3RoKT4yP3BvbHltYXA6YmltYXA7b3V0cHV0PWlucHV0PW51bGw7cmV0dXJuIHNjYWxlfWZ1bmN0aW9uIHNjYWxlKHgpe3JldHVybiBpc05hTih4PSt4KT91bmtub3duOihvdXRwdXR8fChvdXRwdXQ9cGllY2V3aXNlKGRvbWFpbi5tYXAodHJhbnNmb3JtKSxyYW5nZSxpbnRlcnBvbGF0ZSkpKSh0cmFuc2Zvcm0oY2xhbXAoeCkpKX1zY2FsZS5pbnZlcnQ9ZnVuY3Rpb24oeSl7cmV0dXJuIGNsYW1wKHVudHJhbnNmb3JtKChpbnB1dHx8KGlucHV0PXBpZWNld2lzZShyYW5nZSxkb21haW4ubWFwKHRyYW5zZm9ybSksZDNJbnRlcnBvbGF0ZS5pbnRlcnBvbGF0ZU51bWJlcikpKSh5KSkpfTtzY2FsZS5kb21haW49ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGRvbWFpbj1tYXAuY2FsbChfLG51bWJlciksY2xhbXA9PT1pZGVudGl0eXx8KGNsYW1wPWNsYW1wZXIoZG9tYWluKSkscmVzY2FsZSgpKTpkb21haW4uc2xpY2UoKX07c2NhbGUucmFuZ2U9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHJhbmdlPXNsaWNlLmNhbGwoXykscmVzY2FsZSgpKTpyYW5nZS5zbGljZSgpfTtzY2FsZS5yYW5nZVJvdW5kPWZ1bmN0aW9uKF8pe3JldHVybiByYW5nZT1zbGljZS5jYWxsKF8pLGludGVycG9sYXRlPWQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVSb3VuZCxyZXNjYWxlKCl9O3NjYWxlLmNsYW1wPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjbGFtcD1fP2NsYW1wZXIoZG9tYWluKTppZGVudGl0eSxzY2FsZSk6Y2xhbXAhPT1pZGVudGl0eX07c2NhbGUuaW50ZXJwb2xhdGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGludGVycG9sYXRlPV8scmVzY2FsZSgpKTppbnRlcnBvbGF0ZX07c2NhbGUudW5rbm93bj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odW5rbm93bj1fLHNjYWxlKTp1bmtub3dufTtyZXR1cm4gZnVuY3Rpb24odCx1KXt0cmFuc2Zvcm09dCx1bnRyYW5zZm9ybT11O3JldHVybiByZXNjYWxlKCl9fWZ1bmN0aW9uIGNvbnRpbnVvdXModHJhbnNmb3JtLHVudHJhbnNmb3JtKXtyZXR1cm4gdHJhbnNmb3JtZXIoKSh0cmFuc2Zvcm0sdW50cmFuc2Zvcm0pfWZ1bmN0aW9uIHRpY2tGb3JtYXQoc3RhcnQsc3RvcCxjb3VudCxzcGVjaWZpZXIpe3ZhciBzdGVwPWQzQXJyYXkudGlja1N0ZXAoc3RhcnQsc3RvcCxjb3VudCkscHJlY2lzaW9uO3NwZWNpZmllcj1kM0Zvcm1hdC5mb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyPT1udWxsPyIsZiI6c3BlY2lmaWVyKTtzd2l0Y2goc3BlY2lmaWVyLnR5cGUpe2Nhc2UicyI6e3ZhciB2YWx1ZT1NYXRoLm1heChNYXRoLmFicyhzdGFydCksTWF0aC5hYnMoc3RvcCkpO2lmKHNwZWNpZmllci5wcmVjaXNpb249PW51bGwmJiFpc05hTihwcmVjaXNpb249ZDNGb3JtYXQucHJlY2lzaW9uUHJlZml4KHN0ZXAsdmFsdWUpKSlzcGVjaWZpZXIucHJlY2lzaW9uPXByZWNpc2lvbjtyZXR1cm4gZDNGb3JtYXQuZm9ybWF0UHJlZml4KHNwZWNpZmllcix2YWx1ZSl9Y2FzZSIiOmNhc2UiZSI6Y2FzZSJnIjpjYXNlInAiOmNhc2UiciI6e2lmKHNwZWNpZmllci5wcmVjaXNpb249PW51bGwmJiFpc05hTihwcmVjaXNpb249ZDNGb3JtYXQucHJlY2lzaW9uUm91bmQoc3RlcCxNYXRoLm1heChNYXRoLmFicyhzdGFydCksTWF0aC5hYnMoc3RvcCkpKSkpc3BlY2lmaWVyLnByZWNpc2lvbj1wcmVjaXNpb24tKHNwZWNpZmllci50eXBlPT09ImUiKTticmVha31jYXNlImYiOmNhc2UiJSI6e2lmKHNwZWNpZmllci5wcmVjaXNpb249PW51bGwmJiFpc05hTihwcmVjaXNpb249ZDNGb3JtYXQucHJlY2lzaW9uRml4ZWQoc3RlcCkpKXNwZWNpZmllci5wcmVjaXNpb249cHJlY2lzaW9uLShzcGVjaWZpZXIudHlwZT09PSIlIikqMjticmVha319cmV0dXJuIGQzRm9ybWF0LmZvcm1hdChzcGVjaWZpZXIpfWZ1bmN0aW9uIGxpbmVhcmlzaChzY2FsZSl7dmFyIGRvbWFpbj1zY2FsZS5kb21haW47c2NhbGUudGlja3M9ZnVuY3Rpb24oY291bnQpe3ZhciBkPWRvbWFpbigpO3JldHVybiBkM0FycmF5LnRpY2tzKGRbMF0sZFtkLmxlbmd0aC0xXSxjb3VudD09bnVsbD8xMDpjb3VudCl9O3NjYWxlLnRpY2tGb3JtYXQ9ZnVuY3Rpb24oY291bnQsc3BlY2lmaWVyKXt2YXIgZD1kb21haW4oKTtyZXR1cm4gdGlja0Zvcm1hdChkWzBdLGRbZC5sZW5ndGgtMV0sY291bnQ9PW51bGw/MTA6Y291bnQsc3BlY2lmaWVyKX07c2NhbGUubmljZT1mdW5jdGlvbihjb3VudCl7aWYoY291bnQ9PW51bGwpY291bnQ9MTA7dmFyIGQ9ZG9tYWluKCksaTA9MCxpMT1kLmxlbmd0aC0xLHN0YXJ0PWRbaTBdLHN0b3A9ZFtpMV0sc3RlcDtpZihzdG9wPHN0YXJ0KXtzdGVwPXN0YXJ0LHN0YXJ0PXN0b3Asc3RvcD1zdGVwO3N0ZXA9aTAsaTA9aTEsaTE9c3RlcH1zdGVwPWQzQXJyYXkudGlja0luY3JlbWVudChzdGFydCxzdG9wLGNvdW50KTtpZihzdGVwPjApe3N0YXJ0PU1hdGguZmxvb3Ioc3RhcnQvc3RlcCkqc3RlcDtzdG9wPU1hdGguY2VpbChzdG9wL3N0ZXApKnN0ZXA7c3RlcD1kM0FycmF5LnRpY2tJbmNyZW1lbnQoc3RhcnQsc3RvcCxjb3VudCl9ZWxzZSBpZihzdGVwPDApe3N0YXJ0PU1hdGguY2VpbChzdGFydCpzdGVwKS9zdGVwO3N0b3A9TWF0aC5mbG9vcihzdG9wKnN0ZXApL3N0ZXA7c3RlcD1kM0FycmF5LnRpY2tJbmNyZW1lbnQoc3RhcnQsc3RvcCxjb3VudCl9aWYoc3RlcD4wKXtkW2kwXT1NYXRoLmZsb29yKHN0YXJ0L3N0ZXApKnN0ZXA7ZFtpMV09TWF0aC5jZWlsKHN0b3Avc3RlcCkqc3RlcDtkb21haW4oZCl9ZWxzZSBpZihzdGVwPDApe2RbaTBdPU1hdGguY2VpbChzdGFydCpzdGVwKS9zdGVwO2RbaTFdPU1hdGguZmxvb3Ioc3RvcCpzdGVwKS9zdGVwO2RvbWFpbihkKX1yZXR1cm4gc2NhbGV9O3JldHVybiBzY2FsZX1mdW5jdGlvbiBsaW5lYXIoKXt2YXIgc2NhbGU9Y29udGludW91cyhpZGVudGl0eSxpZGVudGl0eSk7c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBjb3B5KHNjYWxlLGxpbmVhcigpKX07aW5pdFJhbmdlLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyk7cmV0dXJuIGxpbmVhcmlzaChzY2FsZSl9ZnVuY3Rpb24gaWRlbnRpdHkkMShkb21haW4pe3ZhciB1bmtub3duO2Z1bmN0aW9uIHNjYWxlKHgpe3JldHVybiBpc05hTih4PSt4KT91bmtub3duOnh9c2NhbGUuaW52ZXJ0PXNjYWxlO3NjYWxlLmRvbWFpbj1zY2FsZS5yYW5nZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZG9tYWluPW1hcC5jYWxsKF8sbnVtYmVyKSxzY2FsZSk6ZG9tYWluLnNsaWNlKCl9O3NjYWxlLnVua25vd249ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHVua25vd249XyxzY2FsZSk6dW5rbm93bn07c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBpZGVudGl0eSQxKGRvbWFpbikudW5rbm93bih1bmtub3duKX07ZG9tYWluPWFyZ3VtZW50cy5sZW5ndGg/bWFwLmNhbGwoZG9tYWluLG51bWJlcik6WzAsMV07cmV0dXJuIGxpbmVhcmlzaChzY2FsZSl9ZnVuY3Rpb24gbmljZShkb21haW4saW50ZXJ2YWwpe2RvbWFpbj1kb21haW4uc2xpY2UoKTt2YXIgaTA9MCxpMT1kb21haW4ubGVuZ3RoLTEseDA9ZG9tYWluW2kwXSx4MT1kb21haW5baTFdLHQ7aWYoeDE8eDApe3Q9aTAsaTA9aTEsaTE9dDt0PXgwLHgwPXgxLHgxPXR9ZG9tYWluW2kwXT1pbnRlcnZhbC5mbG9vcih4MCk7ZG9tYWluW2kxXT1pbnRlcnZhbC5jZWlsKHgxKTtyZXR1cm4gZG9tYWlufWZ1bmN0aW9uIHRyYW5zZm9ybUxvZyh4KXtyZXR1cm4gTWF0aC5sb2coeCl9ZnVuY3Rpb24gdHJhbnNmb3JtRXhwKHgpe3JldHVybiBNYXRoLmV4cCh4KX1mdW5jdGlvbiB0cmFuc2Zvcm1Mb2duKHgpe3JldHVybi1NYXRoLmxvZygteCl9ZnVuY3Rpb24gdHJhbnNmb3JtRXhwbih4KXtyZXR1cm4tTWF0aC5leHAoLXgpfWZ1bmN0aW9uIHBvdzEwKHgpe3JldHVybiBpc0Zpbml0ZSh4KT8rKCIxZSIreCk6eDwwPzA6eH1mdW5jdGlvbiBwb3dwKGJhc2Upe3JldHVybiBiYXNlPT09MTA/cG93MTA6YmFzZT09PU1hdGguRT9NYXRoLmV4cDpmdW5jdGlvbih4KXtyZXR1cm4gTWF0aC5wb3coYmFzZSx4KX19ZnVuY3Rpb24gbG9ncChiYXNlKXtyZXR1cm4gYmFzZT09PU1hdGguRT9NYXRoLmxvZzpiYXNlPT09MTAmJk1hdGgubG9nMTB8fGJhc2U9PT0yJiZNYXRoLmxvZzJ8fChiYXNlPU1hdGgubG9nKGJhc2UpLGZ1bmN0aW9uKHgpe3JldHVybiBNYXRoLmxvZyh4KS9iYXNlfSl9ZnVuY3Rpb24gcmVmbGVjdChmKXtyZXR1cm4gZnVuY3Rpb24oeCl7cmV0dXJuLWYoLXgpfX1mdW5jdGlvbiBsb2dnaXNoKHRyYW5zZm9ybSl7dmFyIHNjYWxlPXRyYW5zZm9ybSh0cmFuc2Zvcm1Mb2csdHJhbnNmb3JtRXhwKSxkb21haW49c2NhbGUuZG9tYWluLGJhc2U9MTAsbG9ncyxwb3dzO2Z1bmN0aW9uIHJlc2NhbGUoKXtsb2dzPWxvZ3AoYmFzZSkscG93cz1wb3dwKGJhc2UpO2lmKGRvbWFpbigpWzBdPDApe2xvZ3M9cmVmbGVjdChsb2dzKSxwb3dzPXJlZmxlY3QocG93cyk7dHJhbnNmb3JtKHRyYW5zZm9ybUxvZ24sdHJhbnNmb3JtRXhwbil9ZWxzZXt0cmFuc2Zvcm0odHJhbnNmb3JtTG9nLHRyYW5zZm9ybUV4cCl9cmV0dXJuIHNjYWxlfXNjYWxlLmJhc2U9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGJhc2U9K18scmVzY2FsZSgpKTpiYXNlfTtzY2FsZS5kb21haW49ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGRvbWFpbihfKSxyZXNjYWxlKCkpOmRvbWFpbigpfTtzY2FsZS50aWNrcz1mdW5jdGlvbihjb3VudCl7dmFyIGQ9ZG9tYWluKCksdT1kWzBdLHY9ZFtkLmxlbmd0aC0xXSxyO2lmKHI9djx1KWk9dSx1PXYsdj1pO3ZhciBpPWxvZ3ModSksaj1sb2dzKHYpLHAsayx0LG49Y291bnQ9PW51bGw/MTA6K2NvdW50LHo9W107aWYoIShiYXNlJTEpJiZqLWk8bil7aT1NYXRoLnJvdW5kKGkpLTEsaj1NYXRoLnJvdW5kKGopKzE7aWYodT4wKWZvcig7aTxqOysraSl7Zm9yKGs9MSxwPXBvd3MoaSk7azxiYXNlOysrayl7dD1wKms7aWYodDx1KWNvbnRpbnVlO2lmKHQ+dilicmVhazt6LnB1c2godCl9fWVsc2UgZm9yKDtpPGo7KytpKXtmb3Ioaz1iYXNlLTEscD1wb3dzKGkpO2s+PTE7LS1rKXt0PXAqaztpZih0PHUpY29udGludWU7aWYodD52KWJyZWFrO3oucHVzaCh0KX19fWVsc2V7ej1kM0FycmF5LnRpY2tzKGksaixNYXRoLm1pbihqLWksbikpLm1hcChwb3dzKX1yZXR1cm4gcj96LnJldmVyc2UoKTp6fTtzY2FsZS50aWNrRm9ybWF0PWZ1bmN0aW9uKGNvdW50LHNwZWNpZmllcil7aWYoc3BlY2lmaWVyPT1udWxsKXNwZWNpZmllcj1iYXNlPT09MTA/Ii4wZSI6IiwiO2lmKHR5cGVvZiBzcGVjaWZpZXIhPT0iZnVuY3Rpb24iKXNwZWNpZmllcj1kM0Zvcm1hdC5mb3JtYXQoc3BlY2lmaWVyKTtpZihjb3VudD09PUluZmluaXR5KXJldHVybiBzcGVjaWZpZXI7aWYoY291bnQ9PW51bGwpY291bnQ9MTA7dmFyIGs9TWF0aC5tYXgoMSxiYXNlKmNvdW50L3NjYWxlLnRpY2tzKCkubGVuZ3RoKTsvLyBUT0RPIGZhc3QgZXN0aW1hdGU/CnJldHVybiBmdW5jdGlvbihkKXt2YXIgaT1kL3Bvd3MoTWF0aC5yb3VuZChsb2dzKGQpKSk7aWYoaSpiYXNlPGJhc2UtLjUpaSo9YmFzZTtyZXR1cm4gaTw9az9zcGVjaWZpZXIoZCk6IiJ9fTtzY2FsZS5uaWNlPWZ1bmN0aW9uKCl7cmV0dXJuIGRvbWFpbihuaWNlKGRvbWFpbigpLHtmbG9vcjpmdW5jdGlvbih4KXtyZXR1cm4gcG93cyhNYXRoLmZsb29yKGxvZ3MoeCkpKX0sY2VpbDpmdW5jdGlvbih4KXtyZXR1cm4gcG93cyhNYXRoLmNlaWwobG9ncyh4KSkpfX0pKX07cmV0dXJuIHNjYWxlfWZ1bmN0aW9uIGxvZygpe3ZhciBzY2FsZT1sb2dnaXNoKHRyYW5zZm9ybWVyKCkpLmRvbWFpbihbMSwxMF0pO3NjYWxlLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gY29weShzY2FsZSxsb2coKSkuYmFzZShzY2FsZS5iYXNlKCkpfTtpbml0UmFuZ2UuYXBwbHkoc2NhbGUsYXJndW1lbnRzKTtyZXR1cm4gc2NhbGV9ZnVuY3Rpb24gdHJhbnNmb3JtU3ltbG9nKGMpe3JldHVybiBmdW5jdGlvbih4KXtyZXR1cm4gTWF0aC5zaWduKHgpKk1hdGgubG9nMXAoTWF0aC5hYnMoeC9jKSl9fWZ1bmN0aW9uIHRyYW5zZm9ybVN5bWV4cChjKXtyZXR1cm4gZnVuY3Rpb24oeCl7cmV0dXJuIE1hdGguc2lnbih4KSpNYXRoLmV4cG0xKE1hdGguYWJzKHgpKSpjfX1mdW5jdGlvbiBzeW1sb2dpc2godHJhbnNmb3JtKXt2YXIgYz0xLHNjYWxlPXRyYW5zZm9ybSh0cmFuc2Zvcm1TeW1sb2coYyksdHJhbnNmb3JtU3ltZXhwKGMpKTtzY2FsZS5jb25zdGFudD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90cmFuc2Zvcm0odHJhbnNmb3JtU3ltbG9nKGM9K18pLHRyYW5zZm9ybVN5bWV4cChjKSk6Y307cmV0dXJuIGxpbmVhcmlzaChzY2FsZSl9ZnVuY3Rpb24gc3ltbG9nKCl7dmFyIHNjYWxlPXN5bWxvZ2lzaCh0cmFuc2Zvcm1lcigpKTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNvcHkoc2NhbGUsc3ltbG9nKCkpLmNvbnN0YW50KHNjYWxlLmNvbnN0YW50KCkpfTtyZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gdHJhbnNmb3JtUG93KGV4cG9uZW50KXtyZXR1cm4gZnVuY3Rpb24oeCl7cmV0dXJuIHg8MD8tTWF0aC5wb3coLXgsZXhwb25lbnQpOk1hdGgucG93KHgsZXhwb25lbnQpfX1mdW5jdGlvbiB0cmFuc2Zvcm1TcXJ0KHgpe3JldHVybiB4PDA/LU1hdGguc3FydCgteCk6TWF0aC5zcXJ0KHgpfWZ1bmN0aW9uIHRyYW5zZm9ybVNxdWFyZSh4KXtyZXR1cm4geDwwPy14Kng6eCp4fWZ1bmN0aW9uIHBvd2lzaCh0cmFuc2Zvcm0pe3ZhciBzY2FsZT10cmFuc2Zvcm0oaWRlbnRpdHksaWRlbnRpdHkpLGV4cG9uZW50PTE7ZnVuY3Rpb24gcmVzY2FsZSgpe3JldHVybiBleHBvbmVudD09PTE/dHJhbnNmb3JtKGlkZW50aXR5LGlkZW50aXR5KTpleHBvbmVudD09PS41P3RyYW5zZm9ybSh0cmFuc2Zvcm1TcXJ0LHRyYW5zZm9ybVNxdWFyZSk6dHJhbnNmb3JtKHRyYW5zZm9ybVBvdyhleHBvbmVudCksdHJhbnNmb3JtUG93KDEvZXhwb25lbnQpKX1zY2FsZS5leHBvbmVudD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZXhwb25lbnQ9K18scmVzY2FsZSgpKTpleHBvbmVudH07cmV0dXJuIGxpbmVhcmlzaChzY2FsZSl9ZnVuY3Rpb24gcG93KCl7dmFyIHNjYWxlPXBvd2lzaCh0cmFuc2Zvcm1lcigpKTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNvcHkoc2NhbGUscG93KCkpLmV4cG9uZW50KHNjYWxlLmV4cG9uZW50KCkpfTtpbml0UmFuZ2UuYXBwbHkoc2NhbGUsYXJndW1lbnRzKTtyZXR1cm4gc2NhbGV9ZnVuY3Rpb24gc3FydCgpe3JldHVybiBwb3cuYXBwbHkobnVsbCxhcmd1bWVudHMpLmV4cG9uZW50KC41KX1mdW5jdGlvbiBxdWFudGlsZSgpe3ZhciBkb21haW49W10scmFuZ2U9W10sdGhyZXNob2xkcz1bXSx1bmtub3duO2Z1bmN0aW9uIHJlc2NhbGUoKXt2YXIgaT0wLG49TWF0aC5tYXgoMSxyYW5nZS5sZW5ndGgpO3RocmVzaG9sZHM9bmV3IEFycmF5KG4tMSk7d2hpbGUoKytpPG4pdGhyZXNob2xkc1tpLTFdPWQzQXJyYXkucXVhbnRpbGUoZG9tYWluLGkvbik7cmV0dXJuIHNjYWxlfWZ1bmN0aW9uIHNjYWxlKHgpe3JldHVybiBpc05hTih4PSt4KT91bmtub3duOnJhbmdlW2QzQXJyYXkuYmlzZWN0KHRocmVzaG9sZHMseCldfXNjYWxlLmludmVydEV4dGVudD1mdW5jdGlvbih5KXt2YXIgaT1yYW5nZS5pbmRleE9mKHkpO3JldHVybiBpPDA/W05hTixOYU5dOltpPjA/dGhyZXNob2xkc1tpLTFdOmRvbWFpblswXSxpPHRocmVzaG9sZHMubGVuZ3RoP3RocmVzaG9sZHNbaV06ZG9tYWluW2RvbWFpbi5sZW5ndGgtMV1dfTtzY2FsZS5kb21haW49ZnVuY3Rpb24oXyl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGRvbWFpbi5zbGljZSgpO2RvbWFpbj1bXTtmb3IodmFyIGk9MCxuPV8ubGVuZ3RoLGQ7aTxuOysraSlpZihkPV9baV0sZCE9bnVsbCYmIWlzTmFOKGQ9K2QpKWRvbWFpbi5wdXNoKGQpO2RvbWFpbi5zb3J0KGQzQXJyYXkuYXNjZW5kaW5nKTtyZXR1cm4gcmVzY2FsZSgpfTtzY2FsZS5yYW5nZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocmFuZ2U9c2xpY2UuY2FsbChfKSxyZXNjYWxlKCkpOnJhbmdlLnNsaWNlKCl9O3NjYWxlLnVua25vd249ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHVua25vd249XyxzY2FsZSk6dW5rbm93bn07c2NhbGUucXVhbnRpbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRocmVzaG9sZHMuc2xpY2UoKX07c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBxdWFudGlsZSgpLmRvbWFpbihkb21haW4pLnJhbmdlKHJhbmdlKS51bmtub3duKHVua25vd24pfTtyZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gcXVhbnRpemUoKXt2YXIgeDA9MCx4MT0xLG49MSxkb21haW49Wy41XSxyYW5nZT1bMCwxXSx1bmtub3duO2Z1bmN0aW9uIHNjYWxlKHgpe3JldHVybiB4PD14P3JhbmdlW2QzQXJyYXkuYmlzZWN0KGRvbWFpbix4LDAsbildOnVua25vd259ZnVuY3Rpb24gcmVzY2FsZSgpe3ZhciBpPS0xO2RvbWFpbj1uZXcgQXJyYXkobik7d2hpbGUoKytpPG4pZG9tYWluW2ldPSgoaSsxKSp4MS0oaS1uKSp4MCkvKG4rMSk7cmV0dXJuIHNjYWxlfXNjYWxlLmRvbWFpbj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeDA9K19bMF0seDE9K19bMV0scmVzY2FsZSgpKTpbeDAseDFdfTtzY2FsZS5yYW5nZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obj0ocmFuZ2U9c2xpY2UuY2FsbChfKSkubGVuZ3RoLTEscmVzY2FsZSgpKTpyYW5nZS5zbGljZSgpfTtzY2FsZS5pbnZlcnRFeHRlbnQ9ZnVuY3Rpb24oeSl7dmFyIGk9cmFuZ2UuaW5kZXhPZih5KTtyZXR1cm4gaTwwP1tOYU4sTmFOXTppPDE/W3gwLGRvbWFpblswXV06aT49bj9bZG9tYWluW24tMV0seDFdOltkb21haW5baS0xXSxkb21haW5baV1dfTtzY2FsZS51bmtub3duPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1bmtub3duPV8sc2NhbGUpOnNjYWxlfTtzY2FsZS50aHJlc2hvbGRzPWZ1bmN0aW9uKCl7cmV0dXJuIGRvbWFpbi5zbGljZSgpfTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHF1YW50aXplKCkuZG9tYWluKFt4MCx4MV0pLnJhbmdlKHJhbmdlKS51bmtub3duKHVua25vd24pfTtyZXR1cm4gaW5pdFJhbmdlLmFwcGx5KGxpbmVhcmlzaChzY2FsZSksYXJndW1lbnRzKX1mdW5jdGlvbiB0aHJlc2hvbGQoKXt2YXIgZG9tYWluPVsuNV0scmFuZ2U9WzAsMV0sdW5rbm93bixuPTE7ZnVuY3Rpb24gc2NhbGUoeCl7cmV0dXJuIHg8PXg/cmFuZ2VbZDNBcnJheS5iaXNlY3QoZG9tYWluLHgsMCxuKV06dW5rbm93bn1zY2FsZS5kb21haW49ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGRvbWFpbj1zbGljZS5jYWxsKF8pLG49TWF0aC5taW4oZG9tYWluLmxlbmd0aCxyYW5nZS5sZW5ndGgtMSksc2NhbGUpOmRvbWFpbi5zbGljZSgpfTtzY2FsZS5yYW5nZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocmFuZ2U9c2xpY2UuY2FsbChfKSxuPU1hdGgubWluKGRvbWFpbi5sZW5ndGgscmFuZ2UubGVuZ3RoLTEpLHNjYWxlKTpyYW5nZS5zbGljZSgpfTtzY2FsZS5pbnZlcnRFeHRlbnQ9ZnVuY3Rpb24oeSl7dmFyIGk9cmFuZ2UuaW5kZXhPZih5KTtyZXR1cm5bZG9tYWluW2ktMV0sZG9tYWluW2ldXX07c2NhbGUudW5rbm93bj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odW5rbm93bj1fLHNjYWxlKTp1bmtub3dufTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHRocmVzaG9sZCgpLmRvbWFpbihkb21haW4pLnJhbmdlKHJhbmdlKS51bmtub3duKHVua25vd24pfTtyZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9dmFyIGR1cmF0aW9uU2Vjb25kPTFlMyxkdXJhdGlvbk1pbnV0ZT1kdXJhdGlvblNlY29uZCo2MCxkdXJhdGlvbkhvdXI9ZHVyYXRpb25NaW51dGUqNjAsZHVyYXRpb25EYXk9ZHVyYXRpb25Ib3VyKjI0LGR1cmF0aW9uV2Vlaz1kdXJhdGlvbkRheSo3LGR1cmF0aW9uTW9udGg9ZHVyYXRpb25EYXkqMzAsZHVyYXRpb25ZZWFyPWR1cmF0aW9uRGF5KjM2NTtmdW5jdGlvbiBkYXRlKHQpe3JldHVybiBuZXcgRGF0ZSh0KX1mdW5jdGlvbiBudW1iZXIkMSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIERhdGU/K3Q6K25ldyBEYXRlKCt0KX1mdW5jdGlvbiBjYWxlbmRhcih5ZWFyLG1vbnRoLHdlZWssZGF5LGhvdXIsbWludXRlLHNlY29uZCxtaWxsaXNlY29uZCxmb3JtYXQpe3ZhciBzY2FsZT1jb250aW51b3VzKGlkZW50aXR5LGlkZW50aXR5KSxpbnZlcnQ9c2NhbGUuaW52ZXJ0LGRvbWFpbj1zY2FsZS5kb21haW47dmFyIGZvcm1hdE1pbGxpc2Vjb25kPWZvcm1hdCgiLiVMIiksZm9ybWF0U2Vjb25kPWZvcm1hdCgiOiVTIiksZm9ybWF0TWludXRlPWZvcm1hdCgiJUk6JU0iKSxmb3JtYXRIb3VyPWZvcm1hdCgiJUkgJXAiKSxmb3JtYXREYXk9Zm9ybWF0KCIlYSAlZCIpLGZvcm1hdFdlZWs9Zm9ybWF0KCIlYiAlZCIpLGZvcm1hdE1vbnRoPWZvcm1hdCgiJUIiKSxmb3JtYXRZZWFyPWZvcm1hdCgiJVkiKTt2YXIgdGlja0ludGVydmFscz1bW3NlY29uZCwxLGR1cmF0aW9uU2Vjb25kXSxbc2Vjb25kLDUsNSpkdXJhdGlvblNlY29uZF0sW3NlY29uZCwxNSwxNSpkdXJhdGlvblNlY29uZF0sW3NlY29uZCwzMCwzMCpkdXJhdGlvblNlY29uZF0sW21pbnV0ZSwxLGR1cmF0aW9uTWludXRlXSxbbWludXRlLDUsNSpkdXJhdGlvbk1pbnV0ZV0sW21pbnV0ZSwxNSwxNSpkdXJhdGlvbk1pbnV0ZV0sW21pbnV0ZSwzMCwzMCpkdXJhdGlvbk1pbnV0ZV0sW2hvdXIsMSxkdXJhdGlvbkhvdXJdLFtob3VyLDMsMypkdXJhdGlvbkhvdXJdLFtob3VyLDYsNipkdXJhdGlvbkhvdXJdLFtob3VyLDEyLDEyKmR1cmF0aW9uSG91cl0sW2RheSwxLGR1cmF0aW9uRGF5XSxbZGF5LDIsMipkdXJhdGlvbkRheV0sW3dlZWssMSxkdXJhdGlvbldlZWtdLFttb250aCwxLGR1cmF0aW9uTW9udGhdLFttb250aCwzLDMqZHVyYXRpb25Nb250aF0sW3llYXIsMSxkdXJhdGlvblllYXJdXTtmdW5jdGlvbiB0aWNrRm9ybWF0KGRhdGUpe3JldHVybihzZWNvbmQoZGF0ZSk8ZGF0ZT9mb3JtYXRNaWxsaXNlY29uZDptaW51dGUoZGF0ZSk8ZGF0ZT9mb3JtYXRTZWNvbmQ6aG91cihkYXRlKTxkYXRlP2Zvcm1hdE1pbnV0ZTpkYXkoZGF0ZSk8ZGF0ZT9mb3JtYXRIb3VyOm1vbnRoKGRhdGUpPGRhdGU/d2VlayhkYXRlKTxkYXRlP2Zvcm1hdERheTpmb3JtYXRXZWVrOnllYXIoZGF0ZSk8ZGF0ZT9mb3JtYXRNb250aDpmb3JtYXRZZWFyKShkYXRlKX1mdW5jdGlvbiB0aWNrSW50ZXJ2YWwoaW50ZXJ2YWwsc3RhcnQsc3RvcCxzdGVwKXtpZihpbnRlcnZhbD09bnVsbClpbnRlcnZhbD0xMDsKLy8gSWYgYSBkZXNpcmVkIHRpY2sgY291bnQgaXMgc3BlY2lmaWVkLCBwaWNrIGEgcmVhc29uYWJsZSB0aWNrIGludGVydmFsCi8vIGJhc2VkIG9uIHRoZSBleHRlbnQgb2YgdGhlIGRvbWFpbiBhbmQgYSByb3VnaCBlc3RpbWF0ZSBvZiB0aWNrIHNpemUuCi8vIE90aGVyd2lzZSwgYXNzdW1lIGludGVydmFsIGlzIGFscmVhZHkgYSB0aW1lIGludGVydmFsIGFuZCB1c2UgaXQuCmlmKHR5cGVvZiBpbnRlcnZhbD09PSJudW1iZXIiKXt2YXIgdGFyZ2V0PU1hdGguYWJzKHN0b3Atc3RhcnQpL2ludGVydmFsLGk9ZDNBcnJheS5iaXNlY3RvcihmdW5jdGlvbihpKXtyZXR1cm4gaVsyXX0pLnJpZ2h0KHRpY2tJbnRlcnZhbHMsdGFyZ2V0KTtpZihpPT09dGlja0ludGVydmFscy5sZW5ndGgpe3N0ZXA9ZDNBcnJheS50aWNrU3RlcChzdGFydC9kdXJhdGlvblllYXIsc3RvcC9kdXJhdGlvblllYXIsaW50ZXJ2YWwpO2ludGVydmFsPXllYXJ9ZWxzZSBpZihpKXtpPXRpY2tJbnRlcnZhbHNbdGFyZ2V0L3RpY2tJbnRlcnZhbHNbaS0xXVsyXTx0aWNrSW50ZXJ2YWxzW2ldWzJdL3RhcmdldD9pLTE6aV07c3RlcD1pWzFdO2ludGVydmFsPWlbMF19ZWxzZXtzdGVwPU1hdGgubWF4KGQzQXJyYXkudGlja1N0ZXAoc3RhcnQsc3RvcCxpbnRlcnZhbCksMSk7aW50ZXJ2YWw9bWlsbGlzZWNvbmR9fXJldHVybiBzdGVwPT1udWxsP2ludGVydmFsOmludGVydmFsLmV2ZXJ5KHN0ZXApfXNjYWxlLmludmVydD1mdW5jdGlvbih5KXtyZXR1cm4gbmV3IERhdGUoaW52ZXJ0KHkpKX07c2NhbGUuZG9tYWluPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP2RvbWFpbihtYXAuY2FsbChfLG51bWJlciQxKSk6ZG9tYWluKCkubWFwKGRhdGUpfTtzY2FsZS50aWNrcz1mdW5jdGlvbihpbnRlcnZhbCxzdGVwKXt2YXIgZD1kb21haW4oKSx0MD1kWzBdLHQxPWRbZC5sZW5ndGgtMV0scj10MTx0MCx0O2lmKHIpdD10MCx0MD10MSx0MT10O3Q9dGlja0ludGVydmFsKGludGVydmFsLHQwLHQxLHN0ZXApO3Q9dD90LnJhbmdlKHQwLHQxKzEpOltdOy8vIGluY2x1c2l2ZSBzdG9wCnJldHVybiByP3QucmV2ZXJzZSgpOnR9O3NjYWxlLnRpY2tGb3JtYXQ9ZnVuY3Rpb24oY291bnQsc3BlY2lmaWVyKXtyZXR1cm4gc3BlY2lmaWVyPT1udWxsP3RpY2tGb3JtYXQ6Zm9ybWF0KHNwZWNpZmllcil9O3NjYWxlLm5pY2U9ZnVuY3Rpb24oaW50ZXJ2YWwsc3RlcCl7dmFyIGQ9ZG9tYWluKCk7cmV0dXJuKGludGVydmFsPXRpY2tJbnRlcnZhbChpbnRlcnZhbCxkWzBdLGRbZC5sZW5ndGgtMV0sc3RlcCkpP2RvbWFpbihuaWNlKGQsaW50ZXJ2YWwpKTpzY2FsZX07c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBjb3B5KHNjYWxlLGNhbGVuZGFyKHllYXIsbW9udGgsd2VlayxkYXksaG91cixtaW51dGUsc2Vjb25kLG1pbGxpc2Vjb25kLGZvcm1hdCkpfTtyZXR1cm4gc2NhbGV9ZnVuY3Rpb24gdGltZSgpe3JldHVybiBpbml0UmFuZ2UuYXBwbHkoY2FsZW5kYXIoZDNUaW1lLnRpbWVZZWFyLGQzVGltZS50aW1lTW9udGgsZDNUaW1lLnRpbWVXZWVrLGQzVGltZS50aW1lRGF5LGQzVGltZS50aW1lSG91cixkM1RpbWUudGltZU1pbnV0ZSxkM1RpbWUudGltZVNlY29uZCxkM1RpbWUudGltZU1pbGxpc2Vjb25kLGQzVGltZUZvcm1hdC50aW1lRm9ybWF0KS5kb21haW4oW25ldyBEYXRlKDJlMywwLDEpLG5ldyBEYXRlKDJlMywwLDIpXSksYXJndW1lbnRzKX1mdW5jdGlvbiB1dGNUaW1lKCl7cmV0dXJuIGluaXRSYW5nZS5hcHBseShjYWxlbmRhcihkM1RpbWUudXRjWWVhcixkM1RpbWUudXRjTW9udGgsZDNUaW1lLnV0Y1dlZWssZDNUaW1lLnV0Y0RheSxkM1RpbWUudXRjSG91cixkM1RpbWUudXRjTWludXRlLGQzVGltZS51dGNTZWNvbmQsZDNUaW1lLnV0Y01pbGxpc2Vjb25kLGQzVGltZUZvcm1hdC51dGNGb3JtYXQpLmRvbWFpbihbRGF0ZS5VVEMoMmUzLDAsMSksRGF0ZS5VVEMoMmUzLDAsMildKSxhcmd1bWVudHMpfWZ1bmN0aW9uIHRyYW5zZm9ybWVyJDEoKXt2YXIgeDA9MCx4MT0xLHQwLHQxLGsxMCx0cmFuc2Zvcm0saW50ZXJwb2xhdG9yPWlkZW50aXR5LGNsYW1wPWZhbHNlLHVua25vd247ZnVuY3Rpb24gc2NhbGUoeCl7cmV0dXJuIGlzTmFOKHg9K3gpP3Vua25vd246aW50ZXJwb2xhdG9yKGsxMD09PTA/LjU6KHg9KHRyYW5zZm9ybSh4KS10MCkqazEwLGNsYW1wP01hdGgubWF4KDAsTWF0aC5taW4oMSx4KSk6eCkpfXNjYWxlLmRvbWFpbj1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odDA9dHJhbnNmb3JtKHgwPStfWzBdKSx0MT10cmFuc2Zvcm0oeDE9K19bMV0pLGsxMD10MD09PXQxPzA6MS8odDEtdDApLHNjYWxlKTpbeDAseDFdfTtzY2FsZS5jbGFtcD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oY2xhbXA9ISFfLHNjYWxlKTpjbGFtcH07c2NhbGUuaW50ZXJwb2xhdG9yPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpbnRlcnBvbGF0b3I9XyxzY2FsZSk6aW50ZXJwb2xhdG9yfTtzY2FsZS51bmtub3duPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1bmtub3duPV8sc2NhbGUpOnVua25vd259O3JldHVybiBmdW5jdGlvbih0KXt0cmFuc2Zvcm09dCx0MD10KHgwKSx0MT10KHgxKSxrMTA9dDA9PT10MT8wOjEvKHQxLXQwKTtyZXR1cm4gc2NhbGV9fWZ1bmN0aW9uIGNvcHkkMShzb3VyY2UsdGFyZ2V0KXtyZXR1cm4gdGFyZ2V0LmRvbWFpbihzb3VyY2UuZG9tYWluKCkpLmludGVycG9sYXRvcihzb3VyY2UuaW50ZXJwb2xhdG9yKCkpLmNsYW1wKHNvdXJjZS5jbGFtcCgpKS51bmtub3duKHNvdXJjZS51bmtub3duKCkpfWZ1bmN0aW9uIHNlcXVlbnRpYWwoKXt2YXIgc2NhbGU9bGluZWFyaXNoKHRyYW5zZm9ybWVyJDEoKShpZGVudGl0eSkpO3NjYWxlLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gY29weSQxKHNjYWxlLHNlcXVlbnRpYWwoKSl9O3JldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gc2VxdWVudGlhbExvZygpe3ZhciBzY2FsZT1sb2dnaXNoKHRyYW5zZm9ybWVyJDEoKSkuZG9tYWluKFsxLDEwXSk7c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBjb3B5JDEoc2NhbGUsc2VxdWVudGlhbExvZygpKS5iYXNlKHNjYWxlLmJhc2UoKSl9O3JldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gc2VxdWVudGlhbFN5bWxvZygpe3ZhciBzY2FsZT1zeW1sb2dpc2godHJhbnNmb3JtZXIkMSgpKTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNvcHkkMShzY2FsZSxzZXF1ZW50aWFsU3ltbG9nKCkpLmNvbnN0YW50KHNjYWxlLmNvbnN0YW50KCkpfTtyZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSxhcmd1bWVudHMpfWZ1bmN0aW9uIHNlcXVlbnRpYWxQb3coKXt2YXIgc2NhbGU9cG93aXNoKHRyYW5zZm9ybWVyJDEoKSk7c2NhbGUuY29weT1mdW5jdGlvbigpe3JldHVybiBjb3B5JDEoc2NhbGUsc2VxdWVudGlhbFBvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKX07cmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsYXJndW1lbnRzKX1mdW5jdGlvbiBzZXF1ZW50aWFsU3FydCgpe3JldHVybiBzZXF1ZW50aWFsUG93LmFwcGx5KG51bGwsYXJndW1lbnRzKS5leHBvbmVudCguNSl9ZnVuY3Rpb24gc2VxdWVudGlhbFF1YW50aWxlKCl7dmFyIGRvbWFpbj1bXSxpbnRlcnBvbGF0b3I9aWRlbnRpdHk7ZnVuY3Rpb24gc2NhbGUoeCl7aWYoIWlzTmFOKHg9K3gpKXJldHVybiBpbnRlcnBvbGF0b3IoKGQzQXJyYXkuYmlzZWN0KGRvbWFpbix4KS0xKS8oZG9tYWluLmxlbmd0aC0xKSl9c2NhbGUuZG9tYWluPWZ1bmN0aW9uKF8pe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiBkb21haW4uc2xpY2UoKTtkb21haW49W107Zm9yKHZhciBpPTAsbj1fLmxlbmd0aCxkO2k8bjsrK2kpaWYoZD1fW2ldLGQhPW51bGwmJiFpc05hTihkPStkKSlkb21haW4ucHVzaChkKTtkb21haW4uc29ydChkM0FycmF5LmFzY2VuZGluZyk7cmV0dXJuIHNjYWxlfTtzY2FsZS5pbnRlcnBvbGF0b3I9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGludGVycG9sYXRvcj1fLHNjYWxlKTppbnRlcnBvbGF0b3J9O3NjYWxlLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gc2VxdWVudGlhbFF1YW50aWxlKGludGVycG9sYXRvcikuZG9tYWluKGRvbWFpbil9O3JldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gdHJhbnNmb3JtZXIkMigpe3ZhciB4MD0wLHgxPS41LHgyPTEsdDAsdDEsdDIsazEwLGsyMSxpbnRlcnBvbGF0b3I9aWRlbnRpdHksdHJhbnNmb3JtLGNsYW1wPWZhbHNlLHVua25vd247ZnVuY3Rpb24gc2NhbGUoeCl7cmV0dXJuIGlzTmFOKHg9K3gpP3Vua25vd246KHg9LjUrKCh4PSt0cmFuc2Zvcm0oeCkpLXQxKSooeDx0MT9rMTA6azIxKSxpbnRlcnBvbGF0b3IoY2xhbXA/TWF0aC5tYXgoMCxNYXRoLm1pbigxLHgpKTp4KSl9c2NhbGUuZG9tYWluPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0MD10cmFuc2Zvcm0oeDA9K19bMF0pLHQxPXRyYW5zZm9ybSh4MT0rX1sxXSksdDI9dHJhbnNmb3JtKHgyPStfWzJdKSxrMTA9dDA9PT10MT8wOi41Lyh0MS10MCksazIxPXQxPT09dDI/MDouNS8odDItdDEpLHNjYWxlKTpbeDAseDEseDJdfTtzY2FsZS5jbGFtcD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oY2xhbXA9ISFfLHNjYWxlKTpjbGFtcH07c2NhbGUuaW50ZXJwb2xhdG9yPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpbnRlcnBvbGF0b3I9XyxzY2FsZSk6aW50ZXJwb2xhdG9yfTtzY2FsZS51bmtub3duPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh1bmtub3duPV8sc2NhbGUpOnVua25vd259O3JldHVybiBmdW5jdGlvbih0KXt0cmFuc2Zvcm09dCx0MD10KHgwKSx0MT10KHgxKSx0Mj10KHgyKSxrMTA9dDA9PT10MT8wOi41Lyh0MS10MCksazIxPXQxPT09dDI/MDouNS8odDItdDEpO3JldHVybiBzY2FsZX19ZnVuY3Rpb24gZGl2ZXJnaW5nKCl7dmFyIHNjYWxlPWxpbmVhcmlzaCh0cmFuc2Zvcm1lciQyKCkoaWRlbnRpdHkpKTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNvcHkkMShzY2FsZSxkaXZlcmdpbmcoKSl9O3JldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gZGl2ZXJnaW5nTG9nKCl7dmFyIHNjYWxlPWxvZ2dpc2godHJhbnNmb3JtZXIkMigpKS5kb21haW4oWy4xLDEsMTBdKTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNvcHkkMShzY2FsZSxkaXZlcmdpbmdMb2coKSkuYmFzZShzY2FsZS5iYXNlKCkpfTtyZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSxhcmd1bWVudHMpfWZ1bmN0aW9uIGRpdmVyZ2luZ1N5bWxvZygpe3ZhciBzY2FsZT1zeW1sb2dpc2godHJhbnNmb3JtZXIkMigpKTtzY2FsZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGNvcHkkMShzY2FsZSxkaXZlcmdpbmdTeW1sb2coKSkuY29uc3RhbnQoc2NhbGUuY29uc3RhbnQoKSl9O3JldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gZGl2ZXJnaW5nUG93KCl7dmFyIHNjYWxlPXBvd2lzaCh0cmFuc2Zvcm1lciQyKCkpO3NjYWxlLmNvcHk9ZnVuY3Rpb24oKXtyZXR1cm4gY29weSQxKHNjYWxlLGRpdmVyZ2luZ1BvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKX07cmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsYXJndW1lbnRzKX1mdW5jdGlvbiBkaXZlcmdpbmdTcXJ0KCl7cmV0dXJuIGRpdmVyZ2luZ1Bvdy5hcHBseShudWxsLGFyZ3VtZW50cykuZXhwb25lbnQoLjUpfWV4cG9ydHMuc2NhbGVCYW5kPWJhbmQ7ZXhwb3J0cy5zY2FsZVBvaW50PXBvaW50O2V4cG9ydHMuc2NhbGVJZGVudGl0eT1pZGVudGl0eSQxO2V4cG9ydHMuc2NhbGVMaW5lYXI9bGluZWFyO2V4cG9ydHMuc2NhbGVMb2c9bG9nO2V4cG9ydHMuc2NhbGVTeW1sb2c9c3ltbG9nO2V4cG9ydHMuc2NhbGVPcmRpbmFsPW9yZGluYWw7ZXhwb3J0cy5zY2FsZUltcGxpY2l0PWltcGxpY2l0O2V4cG9ydHMuc2NhbGVQb3c9cG93O2V4cG9ydHMuc2NhbGVTcXJ0PXNxcnQ7ZXhwb3J0cy5zY2FsZVF1YW50aWxlPXF1YW50aWxlO2V4cG9ydHMuc2NhbGVRdWFudGl6ZT1xdWFudGl6ZTtleHBvcnRzLnNjYWxlVGhyZXNob2xkPXRocmVzaG9sZDtleHBvcnRzLnNjYWxlVGltZT10aW1lO2V4cG9ydHMuc2NhbGVVdGM9dXRjVGltZTtleHBvcnRzLnNjYWxlU2VxdWVudGlhbD1zZXF1ZW50aWFsO2V4cG9ydHMuc2NhbGVTZXF1ZW50aWFsTG9nPXNlcXVlbnRpYWxMb2c7ZXhwb3J0cy5zY2FsZVNlcXVlbnRpYWxQb3c9c2VxdWVudGlhbFBvdztleHBvcnRzLnNjYWxlU2VxdWVudGlhbFNxcnQ9c2VxdWVudGlhbFNxcnQ7ZXhwb3J0cy5zY2FsZVNlcXVlbnRpYWxTeW1sb2c9c2VxdWVudGlhbFN5bWxvZztleHBvcnRzLnNjYWxlU2VxdWVudGlhbFF1YW50aWxlPXNlcXVlbnRpYWxRdWFudGlsZTtleHBvcnRzLnNjYWxlRGl2ZXJnaW5nPWRpdmVyZ2luZztleHBvcnRzLnNjYWxlRGl2ZXJnaW5nTG9nPWRpdmVyZ2luZ0xvZztleHBvcnRzLnNjYWxlRGl2ZXJnaW5nUG93PWRpdmVyZ2luZ1BvdztleHBvcnRzLnNjYWxlRGl2ZXJnaW5nU3FydD1kaXZlcmdpbmdTcXJ0O2V4cG9ydHMuc2NhbGVEaXZlcmdpbmdTeW1sb2c9ZGl2ZXJnaW5nU3ltbG9nO2V4cG9ydHMudGlja0Zvcm1hdD10aWNrRm9ybWF0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHsiZDMtYXJyYXkiOjI5LCJkMy1jb2xsZWN0aW9uIjozMywiZDMtZm9ybWF0Ijo0MiwiZDMtaW50ZXJwb2xhdGUiOjQ1LCJkMy10aW1lIjo1NSwiZDMtdGltZS1mb3JtYXQiOjU0fV0sNTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLXNlbGVjdGlvbi8gdjEuNC4xIENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgeGh0bWw9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiO3ZhciBuYW1lc3BhY2VzPXtzdmc6Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIix4aHRtbDp4aHRtbCx4bGluazoiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIseG1sOiJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2UiLHhtbG5zOiJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zLyJ9O2Z1bmN0aW9uIG5hbWVzcGFjZShuYW1lKXt2YXIgcHJlZml4PW5hbWUrPSIiLGk9cHJlZml4LmluZGV4T2YoIjoiKTtpZihpPj0wJiYocHJlZml4PW5hbWUuc2xpY2UoMCxpKSkhPT0ieG1sbnMiKW5hbWU9bmFtZS5zbGljZShpKzEpO3JldHVybiBuYW1lc3BhY2VzLmhhc093blByb3BlcnR5KHByZWZpeCk/e3NwYWNlOm5hbWVzcGFjZXNbcHJlZml4XSxsb2NhbDpuYW1lfTpuYW1lfWZ1bmN0aW9uIGNyZWF0b3JJbmhlcml0KG5hbWUpe3JldHVybiBmdW5jdGlvbigpe3ZhciBkb2N1bWVudD10aGlzLm93bmVyRG9jdW1lbnQsdXJpPXRoaXMubmFtZXNwYWNlVVJJO3JldHVybiB1cmk9PT14aHRtbCYmZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSST09PXhodG1sP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQobmFtZSk6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHVyaSxuYW1lKX19ZnVuY3Rpb24gY3JlYXRvckZpeGVkKGZ1bGxuYW1lKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhmdWxsbmFtZS5zcGFjZSxmdWxsbmFtZS5sb2NhbCl9fWZ1bmN0aW9uIGNyZWF0b3IobmFtZSl7dmFyIGZ1bGxuYW1lPW5hbWVzcGFjZShuYW1lKTtyZXR1cm4oZnVsbG5hbWUubG9jYWw/Y3JlYXRvckZpeGVkOmNyZWF0b3JJbmhlcml0KShmdWxsbmFtZSl9ZnVuY3Rpb24gbm9uZSgpe31mdW5jdGlvbiBzZWxlY3RvcihzZWxlY3Rvcil7cmV0dXJuIHNlbGVjdG9yPT1udWxsP25vbmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKX19ZnVuY3Rpb24gc2VsZWN0aW9uX3NlbGVjdChzZWxlY3Qpe2lmKHR5cGVvZiBzZWxlY3QhPT0iZnVuY3Rpb24iKXNlbGVjdD1zZWxlY3RvcihzZWxlY3QpO2Zvcih2YXIgZ3JvdXBzPXRoaXMuX2dyb3VwcyxtPWdyb3Vwcy5sZW5ndGgsc3ViZ3JvdXBzPW5ldyBBcnJheShtKSxqPTA7ajxtOysrail7Zm9yKHZhciBncm91cD1ncm91cHNbal0sbj1ncm91cC5sZW5ndGgsc3ViZ3JvdXA9c3ViZ3JvdXBzW2pdPW5ldyBBcnJheShuKSxub2RlLHN1Ym5vZGUsaT0wO2k8bjsrK2kpe2lmKChub2RlPWdyb3VwW2ldKSYmKHN1Ym5vZGU9c2VsZWN0LmNhbGwobm9kZSxub2RlLl9fZGF0YV9fLGksZ3JvdXApKSl7aWYoIl9fZGF0YV9fImluIG5vZGUpc3Vibm9kZS5fX2RhdGFfXz1ub2RlLl9fZGF0YV9fO3N1Ymdyb3VwW2ldPXN1Ym5vZGV9fX1yZXR1cm4gbmV3IFNlbGVjdGlvbihzdWJncm91cHMsdGhpcy5fcGFyZW50cyl9ZnVuY3Rpb24gZW1wdHkoKXtyZXR1cm5bXX1mdW5jdGlvbiBzZWxlY3RvckFsbChzZWxlY3Rvcil7cmV0dXJuIHNlbGVjdG9yPT1udWxsP2VtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcil9fWZ1bmN0aW9uIHNlbGVjdGlvbl9zZWxlY3RBbGwoc2VsZWN0KXtpZih0eXBlb2Ygc2VsZWN0IT09ImZ1bmN0aW9uIilzZWxlY3Q9c2VsZWN0b3JBbGwoc2VsZWN0KTtmb3IodmFyIGdyb3Vwcz10aGlzLl9ncm91cHMsbT1ncm91cHMubGVuZ3RoLHN1Ymdyb3Vwcz1bXSxwYXJlbnRzPVtdLGo9MDtqPG07KytqKXtmb3IodmFyIGdyb3VwPWdyb3Vwc1tqXSxuPWdyb3VwLmxlbmd0aCxub2RlLGk9MDtpPG47KytpKXtpZihub2RlPWdyb3VwW2ldKXtzdWJncm91cHMucHVzaChzZWxlY3QuY2FsbChub2RlLG5vZGUuX19kYXRhX18saSxncm91cCkpO3BhcmVudHMucHVzaChub2RlKX19fXJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcyxwYXJlbnRzKX1mdW5jdGlvbiBtYXRjaGVyKHNlbGVjdG9yKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXRjaGVzKHNlbGVjdG9yKX19ZnVuY3Rpb24gc2VsZWN0aW9uX2ZpbHRlcihtYXRjaCl7aWYodHlwZW9mIG1hdGNoIT09ImZ1bmN0aW9uIiltYXRjaD1tYXRjaGVyKG1hdGNoKTtmb3IodmFyIGdyb3Vwcz10aGlzLl9ncm91cHMsbT1ncm91cHMubGVuZ3RoLHN1Ymdyb3Vwcz1uZXcgQXJyYXkobSksaj0wO2o8bTsrK2ope2Zvcih2YXIgZ3JvdXA9Z3JvdXBzW2pdLG49Z3JvdXAubGVuZ3RoLHN1Ymdyb3VwPXN1Ymdyb3Vwc1tqXT1bXSxub2RlLGk9MDtpPG47KytpKXtpZigobm9kZT1ncm91cFtpXSkmJm1hdGNoLmNhbGwobm9kZSxub2RlLl9fZGF0YV9fLGksZ3JvdXApKXtzdWJncm91cC5wdXNoKG5vZGUpfX19cmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLHRoaXMuX3BhcmVudHMpfWZ1bmN0aW9uIHNwYXJzZSh1cGRhdGUpe3JldHVybiBuZXcgQXJyYXkodXBkYXRlLmxlbmd0aCl9ZnVuY3Rpb24gc2VsZWN0aW9uX2VudGVyKCl7cmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZW50ZXJ8fHRoaXMuX2dyb3Vwcy5tYXAoc3BhcnNlKSx0aGlzLl9wYXJlbnRzKX1mdW5jdGlvbiBFbnRlck5vZGUocGFyZW50LGRhdHVtKXt0aGlzLm93bmVyRG9jdW1lbnQ9cGFyZW50Lm93bmVyRG9jdW1lbnQ7dGhpcy5uYW1lc3BhY2VVUkk9cGFyZW50Lm5hbWVzcGFjZVVSSTt0aGlzLl9uZXh0PW51bGw7dGhpcy5fcGFyZW50PXBhcmVudDt0aGlzLl9fZGF0YV9fPWRhdHVtfUVudGVyTm9kZS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkVudGVyTm9kZSxhcHBlbmRDaGlsZDpmdW5jdGlvbihjaGlsZCl7cmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsdGhpcy5fbmV4dCl9LGluc2VydEJlZm9yZTpmdW5jdGlvbihjaGlsZCxuZXh0KXtyZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCxuZXh0KX0scXVlcnlTZWxlY3RvcjpmdW5jdGlvbihzZWxlY3Rvcil7cmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKX0scXVlcnlTZWxlY3RvckFsbDpmdW5jdGlvbihzZWxlY3Rvcil7cmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKX19O2Z1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB4fX12YXIga2V5UHJlZml4PSIkIjsvLyBQcm90ZWN0IGFnYWluc3Qga2V5cyBsaWtlIOKAnF9fcHJvdG9fX+KAnS4KZnVuY3Rpb24gYmluZEluZGV4KHBhcmVudCxncm91cCxlbnRlcix1cGRhdGUsZXhpdCxkYXRhKXt2YXIgaT0wLG5vZGUsZ3JvdXBMZW5ndGg9Z3JvdXAubGVuZ3RoLGRhdGFMZW5ndGg9ZGF0YS5sZW5ndGg7Ci8vIFB1dCBhbnkgbm9uLW51bGwgbm9kZXMgdGhhdCBmaXQgaW50byB1cGRhdGUuCi8vIFB1dCBhbnkgbnVsbCBub2RlcyBpbnRvIGVudGVyLgovLyBQdXQgYW55IHJlbWFpbmluZyBkYXRhIGludG8gZW50ZXIuCmZvcig7aTxkYXRhTGVuZ3RoOysraSl7aWYobm9kZT1ncm91cFtpXSl7bm9kZS5fX2RhdGFfXz1kYXRhW2ldO3VwZGF0ZVtpXT1ub2RlfWVsc2V7ZW50ZXJbaV09bmV3IEVudGVyTm9kZShwYXJlbnQsZGF0YVtpXSl9fQovLyBQdXQgYW55IG5vbi1udWxsIG5vZGVzIHRoYXQgZG9u4oCZdCBmaXQgaW50byBleGl0Lgpmb3IoO2k8Z3JvdXBMZW5ndGg7KytpKXtpZihub2RlPWdyb3VwW2ldKXtleGl0W2ldPW5vZGV9fX1mdW5jdGlvbiBiaW5kS2V5KHBhcmVudCxncm91cCxlbnRlcix1cGRhdGUsZXhpdCxkYXRhLGtleSl7dmFyIGksbm9kZSxub2RlQnlLZXlWYWx1ZT17fSxncm91cExlbmd0aD1ncm91cC5sZW5ndGgsZGF0YUxlbmd0aD1kYXRhLmxlbmd0aCxrZXlWYWx1ZXM9bmV3IEFycmF5KGdyb3VwTGVuZ3RoKSxrZXlWYWx1ZTsKLy8gQ29tcHV0ZSB0aGUga2V5IGZvciBlYWNoIG5vZGUuCi8vIElmIG11bHRpcGxlIG5vZGVzIGhhdmUgdGhlIHNhbWUga2V5LCB0aGUgZHVwbGljYXRlcyBhcmUgYWRkZWQgdG8gZXhpdC4KZm9yKGk9MDtpPGdyb3VwTGVuZ3RoOysraSl7aWYobm9kZT1ncm91cFtpXSl7a2V5VmFsdWVzW2ldPWtleVZhbHVlPWtleVByZWZpeCtrZXkuY2FsbChub2RlLG5vZGUuX19kYXRhX18saSxncm91cCk7aWYoa2V5VmFsdWUgaW4gbm9kZUJ5S2V5VmFsdWUpe2V4aXRbaV09bm9kZX1lbHNle25vZGVCeUtleVZhbHVlW2tleVZhbHVlXT1ub2RlfX19Ci8vIENvbXB1dGUgdGhlIGtleSBmb3IgZWFjaCBkYXR1bS4KLy8gSWYgdGhlcmUgYSBub2RlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGtleSwgam9pbiBhbmQgYWRkIGl0IHRvIHVwZGF0ZS4KLy8gSWYgdGhlcmUgaXMgbm90IChvciB0aGUga2V5IGlzIGEgZHVwbGljYXRlKSwgYWRkIGl0IHRvIGVudGVyLgpmb3IoaT0wO2k8ZGF0YUxlbmd0aDsrK2kpe2tleVZhbHVlPWtleVByZWZpeCtrZXkuY2FsbChwYXJlbnQsZGF0YVtpXSxpLGRhdGEpO2lmKG5vZGU9bm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdKXt1cGRhdGVbaV09bm9kZTtub2RlLl9fZGF0YV9fPWRhdGFbaV07bm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdPW51bGx9ZWxzZXtlbnRlcltpXT1uZXcgRW50ZXJOb2RlKHBhcmVudCxkYXRhW2ldKX19Ci8vIEFkZCBhbnkgcmVtYWluaW5nIG5vZGVzIHRoYXQgd2VyZSBub3QgYm91bmQgdG8gZGF0YSB0byBleGl0Lgpmb3IoaT0wO2k8Z3JvdXBMZW5ndGg7KytpKXtpZigobm9kZT1ncm91cFtpXSkmJm5vZGVCeUtleVZhbHVlW2tleVZhbHVlc1tpXV09PT1ub2RlKXtleGl0W2ldPW5vZGV9fX1mdW5jdGlvbiBzZWxlY3Rpb25fZGF0YSh2YWx1ZSxrZXkpe2lmKCF2YWx1ZSl7ZGF0YT1uZXcgQXJyYXkodGhpcy5zaXplKCkpLGo9LTE7dGhpcy5lYWNoKGZ1bmN0aW9uKGQpe2RhdGFbKytqXT1kfSk7cmV0dXJuIGRhdGF9dmFyIGJpbmQ9a2V5P2JpbmRLZXk6YmluZEluZGV4LHBhcmVudHM9dGhpcy5fcGFyZW50cyxncm91cHM9dGhpcy5fZ3JvdXBzO2lmKHR5cGVvZiB2YWx1ZSE9PSJmdW5jdGlvbiIpdmFsdWU9Y29uc3RhbnQodmFsdWUpO2Zvcih2YXIgbT1ncm91cHMubGVuZ3RoLHVwZGF0ZT1uZXcgQXJyYXkobSksZW50ZXI9bmV3IEFycmF5KG0pLGV4aXQ9bmV3IEFycmF5KG0pLGo9MDtqPG07KytqKXt2YXIgcGFyZW50PXBhcmVudHNbal0sZ3JvdXA9Z3JvdXBzW2pdLGdyb3VwTGVuZ3RoPWdyb3VwLmxlbmd0aCxkYXRhPXZhbHVlLmNhbGwocGFyZW50LHBhcmVudCYmcGFyZW50Ll9fZGF0YV9fLGoscGFyZW50cyksZGF0YUxlbmd0aD1kYXRhLmxlbmd0aCxlbnRlckdyb3VwPWVudGVyW2pdPW5ldyBBcnJheShkYXRhTGVuZ3RoKSx1cGRhdGVHcm91cD11cGRhdGVbal09bmV3IEFycmF5KGRhdGFMZW5ndGgpLGV4aXRHcm91cD1leGl0W2pdPW5ldyBBcnJheShncm91cExlbmd0aCk7YmluZChwYXJlbnQsZ3JvdXAsZW50ZXJHcm91cCx1cGRhdGVHcm91cCxleGl0R3JvdXAsZGF0YSxrZXkpOwovLyBOb3cgY29ubmVjdCB0aGUgZW50ZXIgbm9kZXMgdG8gdGhlaXIgZm9sbG93aW5nIHVwZGF0ZSBub2RlLCBzdWNoIHRoYXQKLy8gYXBwZW5kQ2hpbGQgY2FuIGluc2VydCB0aGUgbWF0ZXJpYWxpemVkIGVudGVyIG5vZGUgYmVmb3JlIHRoaXMgbm9kZSwKLy8gcmF0aGVyIHRoYW4gYXQgdGhlIGVuZCBvZiB0aGUgcGFyZW50IG5vZGUuCmZvcih2YXIgaTA9MCxpMT0wLHByZXZpb3VzLG5leHQ7aTA8ZGF0YUxlbmd0aDsrK2kwKXtpZihwcmV2aW91cz1lbnRlckdyb3VwW2kwXSl7aWYoaTA+PWkxKWkxPWkwKzE7d2hpbGUoIShuZXh0PXVwZGF0ZUdyb3VwW2kxXSkmJisraTE8ZGF0YUxlbmd0aCk7cHJldmlvdXMuX25leHQ9bmV4dHx8bnVsbH19fXVwZGF0ZT1uZXcgU2VsZWN0aW9uKHVwZGF0ZSxwYXJlbnRzKTt1cGRhdGUuX2VudGVyPWVudGVyO3VwZGF0ZS5fZXhpdD1leGl0O3JldHVybiB1cGRhdGV9ZnVuY3Rpb24gc2VsZWN0aW9uX2V4aXQoKXtyZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9leGl0fHx0aGlzLl9ncm91cHMubWFwKHNwYXJzZSksdGhpcy5fcGFyZW50cyl9ZnVuY3Rpb24gc2VsZWN0aW9uX2pvaW4ob25lbnRlcixvbnVwZGF0ZSxvbmV4aXQpe3ZhciBlbnRlcj10aGlzLmVudGVyKCksdXBkYXRlPXRoaXMsZXhpdD10aGlzLmV4aXQoKTtlbnRlcj10eXBlb2Ygb25lbnRlcj09PSJmdW5jdGlvbiI/b25lbnRlcihlbnRlcik6ZW50ZXIuYXBwZW5kKG9uZW50ZXIrIiIpO2lmKG9udXBkYXRlIT1udWxsKXVwZGF0ZT1vbnVwZGF0ZSh1cGRhdGUpO2lmKG9uZXhpdD09bnVsbClleGl0LnJlbW92ZSgpO2Vsc2Ugb25leGl0KGV4aXQpO3JldHVybiBlbnRlciYmdXBkYXRlP2VudGVyLm1lcmdlKHVwZGF0ZSkub3JkZXIoKTp1cGRhdGV9ZnVuY3Rpb24gc2VsZWN0aW9uX21lcmdlKHNlbGVjdGlvbil7Zm9yKHZhciBncm91cHMwPXRoaXMuX2dyb3Vwcyxncm91cHMxPXNlbGVjdGlvbi5fZ3JvdXBzLG0wPWdyb3VwczAubGVuZ3RoLG0xPWdyb3VwczEubGVuZ3RoLG09TWF0aC5taW4obTAsbTEpLG1lcmdlcz1uZXcgQXJyYXkobTApLGo9MDtqPG07KytqKXtmb3IodmFyIGdyb3VwMD1ncm91cHMwW2pdLGdyb3VwMT1ncm91cHMxW2pdLG49Z3JvdXAwLmxlbmd0aCxtZXJnZT1tZXJnZXNbal09bmV3IEFycmF5KG4pLG5vZGUsaT0wO2k8bjsrK2kpe2lmKG5vZGU9Z3JvdXAwW2ldfHxncm91cDFbaV0pe21lcmdlW2ldPW5vZGV9fX1mb3IoO2o8bTA7KytqKXttZXJnZXNbal09Z3JvdXBzMFtqXX1yZXR1cm4gbmV3IFNlbGVjdGlvbihtZXJnZXMsdGhpcy5fcGFyZW50cyl9ZnVuY3Rpb24gc2VsZWN0aW9uX29yZGVyKCl7Zm9yKHZhciBncm91cHM9dGhpcy5fZ3JvdXBzLGo9LTEsbT1ncm91cHMubGVuZ3RoOysrajxtOyl7Zm9yKHZhciBncm91cD1ncm91cHNbal0saT1ncm91cC5sZW5ndGgtMSxuZXh0PWdyb3VwW2ldLG5vZGU7LS1pPj0wOyl7aWYobm9kZT1ncm91cFtpXSl7aWYobmV4dCYmbm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihuZXh0KV40KW5leHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSxuZXh0KTtuZXh0PW5vZGV9fX1yZXR1cm4gdGhpc31mdW5jdGlvbiBzZWxlY3Rpb25fc29ydChjb21wYXJlKXtpZighY29tcGFyZSljb21wYXJlPWFzY2VuZGluZztmdW5jdGlvbiBjb21wYXJlTm9kZShhLGIpe3JldHVybiBhJiZiP2NvbXBhcmUoYS5fX2RhdGFfXyxiLl9fZGF0YV9fKTohYS0hYn1mb3IodmFyIGdyb3Vwcz10aGlzLl9ncm91cHMsbT1ncm91cHMubGVuZ3RoLHNvcnRncm91cHM9bmV3IEFycmF5KG0pLGo9MDtqPG07KytqKXtmb3IodmFyIGdyb3VwPWdyb3Vwc1tqXSxuPWdyb3VwLmxlbmd0aCxzb3J0Z3JvdXA9c29ydGdyb3Vwc1tqXT1uZXcgQXJyYXkobiksbm9kZSxpPTA7aTxuOysraSl7aWYobm9kZT1ncm91cFtpXSl7c29ydGdyb3VwW2ldPW5vZGV9fXNvcnRncm91cC5zb3J0KGNvbXBhcmVOb2RlKX1yZXR1cm4gbmV3IFNlbGVjdGlvbihzb3J0Z3JvdXBzLHRoaXMuX3BhcmVudHMpLm9yZGVyKCl9ZnVuY3Rpb24gYXNjZW5kaW5nKGEsYil7cmV0dXJuIGE8Yj8tMTphPmI/MTphPj1iPzA6TmFOfWZ1bmN0aW9uIHNlbGVjdGlvbl9jYWxsKCl7dmFyIGNhbGxiYWNrPWFyZ3VtZW50c1swXTthcmd1bWVudHNbMF09dGhpcztjYWxsYmFjay5hcHBseShudWxsLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXN9ZnVuY3Rpb24gc2VsZWN0aW9uX25vZGVzKCl7dmFyIG5vZGVzPW5ldyBBcnJheSh0aGlzLnNpemUoKSksaT0tMTt0aGlzLmVhY2goZnVuY3Rpb24oKXtub2Rlc1srK2ldPXRoaXN9KTtyZXR1cm4gbm9kZXN9ZnVuY3Rpb24gc2VsZWN0aW9uX25vZGUoKXtmb3IodmFyIGdyb3Vwcz10aGlzLl9ncm91cHMsaj0wLG09Z3JvdXBzLmxlbmd0aDtqPG07KytqKXtmb3IodmFyIGdyb3VwPWdyb3Vwc1tqXSxpPTAsbj1ncm91cC5sZW5ndGg7aTxuOysraSl7dmFyIG5vZGU9Z3JvdXBbaV07aWYobm9kZSlyZXR1cm4gbm9kZX19cmV0dXJuIG51bGx9ZnVuY3Rpb24gc2VsZWN0aW9uX3NpemUoKXt2YXIgc2l6ZT0wO3RoaXMuZWFjaChmdW5jdGlvbigpeysrc2l6ZX0pO3JldHVybiBzaXplfWZ1bmN0aW9uIHNlbGVjdGlvbl9lbXB0eSgpe3JldHVybiF0aGlzLm5vZGUoKX1mdW5jdGlvbiBzZWxlY3Rpb25fZWFjaChjYWxsYmFjayl7Zm9yKHZhciBncm91cHM9dGhpcy5fZ3JvdXBzLGo9MCxtPWdyb3Vwcy5sZW5ndGg7ajxtOysrail7Zm9yKHZhciBncm91cD1ncm91cHNbal0saT0wLG49Z3JvdXAubGVuZ3RoLG5vZGU7aTxuOysraSl7aWYobm9kZT1ncm91cFtpXSljYWxsYmFjay5jYWxsKG5vZGUsbm9kZS5fX2RhdGFfXyxpLGdyb3VwKX19cmV0dXJuIHRoaXN9ZnVuY3Rpb24gYXR0clJlbW92ZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKX19ZnVuY3Rpb24gYXR0clJlbW92ZU5TKGZ1bGxuYW1lKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLGZ1bGxuYW1lLmxvY2FsKX19ZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsdmFsdWUpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc2V0QXR0cmlidXRlKG5hbWUsdmFsdWUpfX1mdW5jdGlvbiBhdHRyQ29uc3RhbnROUyhmdWxsbmFtZSx2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSxmdWxsbmFtZS5sb2NhbCx2YWx1ZSl9fWZ1bmN0aW9uIGF0dHJGdW5jdGlvbihuYW1lLHZhbHVlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdj12YWx1ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYodj09bnVsbCl0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtlbHNlIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsdil9fWZ1bmN0aW9uIGF0dHJGdW5jdGlvbk5TKGZ1bGxuYW1lLHZhbHVlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdj12YWx1ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYodj09bnVsbCl0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLGZ1bGxuYW1lLmxvY2FsKTtlbHNlIHRoaXMuc2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsZnVsbG5hbWUubG9jYWwsdil9fWZ1bmN0aW9uIHNlbGVjdGlvbl9hdHRyKG5hbWUsdmFsdWUpe3ZhciBmdWxsbmFtZT1uYW1lc3BhY2UobmFtZSk7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXt2YXIgbm9kZT10aGlzLm5vZGUoKTtyZXR1cm4gZnVsbG5hbWUubG9jYWw/bm9kZS5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSxmdWxsbmFtZS5sb2NhbCk6bm9kZS5nZXRBdHRyaWJ1dGUoZnVsbG5hbWUpfXJldHVybiB0aGlzLmVhY2goKHZhbHVlPT1udWxsP2Z1bGxuYW1lLmxvY2FsP2F0dHJSZW1vdmVOUzphdHRyUmVtb3ZlOnR5cGVvZiB2YWx1ZT09PSJmdW5jdGlvbiI/ZnVsbG5hbWUubG9jYWw/YXR0ckZ1bmN0aW9uTlM6YXR0ckZ1bmN0aW9uOmZ1bGxuYW1lLmxvY2FsP2F0dHJDb25zdGFudE5TOmF0dHJDb25zdGFudCkoZnVsbG5hbWUsdmFsdWUpKX1mdW5jdGlvbiBkZWZhdWx0Vmlldyhub2RlKXtyZXR1cm4gbm9kZS5vd25lckRvY3VtZW50JiZub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fG5vZGUuZG9jdW1lbnQmJm5vZGV8fG5vZGUuZGVmYXVsdFZpZXc7Ly8gbm9kZSBpcyBhIERvY3VtZW50Cn1mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpfX1mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsdmFsdWUscHJpb3JpdHkpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSx2YWx1ZSxwcmlvcml0eSl9fWZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSx2YWx1ZSxwcmlvcml0eSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHY9dmFsdWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKHY9PW51bGwpdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtlbHNlIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSx2LHByaW9yaXR5KX19ZnVuY3Rpb24gc2VsZWN0aW9uX3N0eWxlKG5hbWUsdmFsdWUscHJpb3JpdHkpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/dGhpcy5lYWNoKCh2YWx1ZT09bnVsbD9zdHlsZVJlbW92ZTp0eXBlb2YgdmFsdWU9PT0iZnVuY3Rpb24iP3N0eWxlRnVuY3Rpb246c3R5bGVDb25zdGFudCkobmFtZSx2YWx1ZSxwcmlvcml0eT09bnVsbD8iIjpwcmlvcml0eSkpOnN0eWxlVmFsdWUodGhpcy5ub2RlKCksbmFtZSl9ZnVuY3Rpb24gc3R5bGVWYWx1ZShub2RlLG5hbWUpe3JldHVybiBub2RlLnN0eWxlLmdldFByb3BlcnR5VmFsdWUobmFtZSl8fGRlZmF1bHRWaWV3KG5vZGUpLmdldENvbXB1dGVkU3R5bGUobm9kZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpfWZ1bmN0aW9uIHByb3BlcnR5UmVtb3ZlKG5hbWUpe3JldHVybiBmdW5jdGlvbigpe2RlbGV0ZSB0aGlzW25hbWVdfX1mdW5jdGlvbiBwcm9wZXJ0eUNvbnN0YW50KG5hbWUsdmFsdWUpe3JldHVybiBmdW5jdGlvbigpe3RoaXNbbmFtZV09dmFsdWV9fWZ1bmN0aW9uIHByb3BlcnR5RnVuY3Rpb24obmFtZSx2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHY9dmFsdWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKHY9PW51bGwpZGVsZXRlIHRoaXNbbmFtZV07ZWxzZSB0aGlzW25hbWVdPXZ9fWZ1bmN0aW9uIHNlbGVjdGlvbl9wcm9wZXJ0eShuYW1lLHZhbHVlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xP3RoaXMuZWFjaCgodmFsdWU9PW51bGw/cHJvcGVydHlSZW1vdmU6dHlwZW9mIHZhbHVlPT09ImZ1bmN0aW9uIj9wcm9wZXJ0eUZ1bmN0aW9uOnByb3BlcnR5Q29uc3RhbnQpKG5hbWUsdmFsdWUpKTp0aGlzLm5vZGUoKVtuYW1lXX1mdW5jdGlvbiBjbGFzc0FycmF5KHN0cmluZyl7cmV0dXJuIHN0cmluZy50cmltKCkuc3BsaXQoL158XHMrLyl9ZnVuY3Rpb24gY2xhc3NMaXN0KG5vZGUpe3JldHVybiBub2RlLmNsYXNzTGlzdHx8bmV3IENsYXNzTGlzdChub2RlKX1mdW5jdGlvbiBDbGFzc0xpc3Qobm9kZSl7dGhpcy5fbm9kZT1ub2RlO3RoaXMuX25hbWVzPWNsYXNzQXJyYXkobm9kZS5nZXRBdHRyaWJ1dGUoImNsYXNzIil8fCIiKX1DbGFzc0xpc3QucHJvdG90eXBlPXthZGQ6ZnVuY3Rpb24obmFtZSl7dmFyIGk9dGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtpZihpPDApe3RoaXMuX25hbWVzLnB1c2gobmFtZSk7dGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoImNsYXNzIix0aGlzLl9uYW1lcy5qb2luKCIgIikpfX0scmVtb3ZlOmZ1bmN0aW9uKG5hbWUpe3ZhciBpPXRoaXMuX25hbWVzLmluZGV4T2YobmFtZSk7aWYoaT49MCl7dGhpcy5fbmFtZXMuc3BsaWNlKGksMSk7dGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoImNsYXNzIix0aGlzLl9uYW1lcy5qb2luKCIgIikpfX0sY29udGFpbnM6ZnVuY3Rpb24obmFtZSl7cmV0dXJuIHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSk+PTB9fTtmdW5jdGlvbiBjbGFzc2VkQWRkKG5vZGUsbmFtZXMpe3ZhciBsaXN0PWNsYXNzTGlzdChub2RlKSxpPS0xLG49bmFtZXMubGVuZ3RoO3doaWxlKCsraTxuKWxpc3QuYWRkKG5hbWVzW2ldKX1mdW5jdGlvbiBjbGFzc2VkUmVtb3ZlKG5vZGUsbmFtZXMpe3ZhciBsaXN0PWNsYXNzTGlzdChub2RlKSxpPS0xLG49bmFtZXMubGVuZ3RoO3doaWxlKCsraTxuKWxpc3QucmVtb3ZlKG5hbWVzW2ldKX1mdW5jdGlvbiBjbGFzc2VkVHJ1ZShuYW1lcyl7cmV0dXJuIGZ1bmN0aW9uKCl7Y2xhc3NlZEFkZCh0aGlzLG5hbWVzKX19ZnVuY3Rpb24gY2xhc3NlZEZhbHNlKG5hbWVzKXtyZXR1cm4gZnVuY3Rpb24oKXtjbGFzc2VkUmVtb3ZlKHRoaXMsbmFtZXMpfX1mdW5jdGlvbiBjbGFzc2VkRnVuY3Rpb24obmFtZXMsdmFsdWUpe3JldHVybiBmdW5jdGlvbigpeyh2YWx1ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk/Y2xhc3NlZEFkZDpjbGFzc2VkUmVtb3ZlKSh0aGlzLG5hbWVzKX19ZnVuY3Rpb24gc2VsZWN0aW9uX2NsYXNzZWQobmFtZSx2YWx1ZSl7dmFyIG5hbWVzPWNsYXNzQXJyYXkobmFtZSsiIik7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXt2YXIgbGlzdD1jbGFzc0xpc3QodGhpcy5ub2RlKCkpLGk9LTEsbj1uYW1lcy5sZW5ndGg7d2hpbGUoKytpPG4paWYoIWxpc3QuY29udGFpbnMobmFtZXNbaV0pKXJldHVybiBmYWxzZTtyZXR1cm4gdHJ1ZX1yZXR1cm4gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWU9PT0iZnVuY3Rpb24iP2NsYXNzZWRGdW5jdGlvbjp2YWx1ZT9jbGFzc2VkVHJ1ZTpjbGFzc2VkRmFsc2UpKG5hbWVzLHZhbHVlKSl9ZnVuY3Rpb24gdGV4dFJlbW92ZSgpe3RoaXMudGV4dENvbnRlbnQ9IiJ9ZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLnRleHRDb250ZW50PXZhbHVlfX1mdW5jdGlvbiB0ZXh0RnVuY3Rpb24odmFsdWUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB2PXZhbHVlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnRleHRDb250ZW50PXY9PW51bGw/IiI6dn19ZnVuY3Rpb24gc2VsZWN0aW9uX3RleHQodmFsdWUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaCh2YWx1ZT09bnVsbD90ZXh0UmVtb3ZlOih0eXBlb2YgdmFsdWU9PT0iZnVuY3Rpb24iP3RleHRGdW5jdGlvbjp0ZXh0Q29uc3RhbnQpKHZhbHVlKSk6dGhpcy5ub2RlKCkudGV4dENvbnRlbnR9ZnVuY3Rpb24gaHRtbFJlbW92ZSgpe3RoaXMuaW5uZXJIVE1MPSIifWZ1bmN0aW9uIGh0bWxDb25zdGFudCh2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5pbm5lckhUTUw9dmFsdWV9fWZ1bmN0aW9uIGh0bWxGdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHY9dmFsdWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO3RoaXMuaW5uZXJIVE1MPXY9PW51bGw/IiI6dn19ZnVuY3Rpb24gc2VsZWN0aW9uX2h0bWwodmFsdWUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaCh2YWx1ZT09bnVsbD9odG1sUmVtb3ZlOih0eXBlb2YgdmFsdWU9PT0iZnVuY3Rpb24iP2h0bWxGdW5jdGlvbjpodG1sQ29uc3RhbnQpKHZhbHVlKSk6dGhpcy5ub2RlKCkuaW5uZXJIVE1MfWZ1bmN0aW9uIHJhaXNlKCl7aWYodGhpcy5uZXh0U2libGluZyl0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcyl9ZnVuY3Rpb24gc2VsZWN0aW9uX3JhaXNlKCl7cmV0dXJuIHRoaXMuZWFjaChyYWlzZSl9ZnVuY3Rpb24gbG93ZXIoKXtpZih0aGlzLnByZXZpb3VzU2libGluZyl0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMsdGhpcy5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpfWZ1bmN0aW9uIHNlbGVjdGlvbl9sb3dlcigpe3JldHVybiB0aGlzLmVhY2gobG93ZXIpfWZ1bmN0aW9uIHNlbGVjdGlvbl9hcHBlbmQobmFtZSl7dmFyIGNyZWF0ZT10eXBlb2YgbmFtZT09PSJmdW5jdGlvbiI/bmFtZTpjcmVhdG9yKG5hbWUpO3JldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpe3JldHVybiB0aGlzLmFwcGVuZENoaWxkKGNyZWF0ZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSl9ZnVuY3Rpb24gY29uc3RhbnROdWxsKCl7cmV0dXJuIG51bGx9ZnVuY3Rpb24gc2VsZWN0aW9uX2luc2VydChuYW1lLGJlZm9yZSl7dmFyIGNyZWF0ZT10eXBlb2YgbmFtZT09PSJmdW5jdGlvbiI/bmFtZTpjcmVhdG9yKG5hbWUpLHNlbGVjdD1iZWZvcmU9PW51bGw/Y29uc3RhbnROdWxsOnR5cGVvZiBiZWZvcmU9PT0iZnVuY3Rpb24iP2JlZm9yZTpzZWxlY3RvcihiZWZvcmUpO3JldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpe3JldHVybiB0aGlzLmluc2VydEJlZm9yZShjcmVhdGUuYXBwbHkodGhpcyxhcmd1bWVudHMpLHNlbGVjdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fG51bGwpfSl9ZnVuY3Rpb24gcmVtb3ZlKCl7dmFyIHBhcmVudD10aGlzLnBhcmVudE5vZGU7aWYocGFyZW50KXBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKX1mdW5jdGlvbiBzZWxlY3Rpb25fcmVtb3ZlKCl7cmV0dXJuIHRoaXMuZWFjaChyZW1vdmUpfWZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZVNoYWxsb3coKXt2YXIgY2xvbmU9dGhpcy5jbG9uZU5vZGUoZmFsc2UpLHBhcmVudD10aGlzLnBhcmVudE5vZGU7cmV0dXJuIHBhcmVudD9wYXJlbnQuaW5zZXJ0QmVmb3JlKGNsb25lLHRoaXMubmV4dFNpYmxpbmcpOmNsb25lfWZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZURlZXAoKXt2YXIgY2xvbmU9dGhpcy5jbG9uZU5vZGUodHJ1ZSkscGFyZW50PXRoaXMucGFyZW50Tm9kZTtyZXR1cm4gcGFyZW50P3BhcmVudC5pbnNlcnRCZWZvcmUoY2xvbmUsdGhpcy5uZXh0U2libGluZyk6Y2xvbmV9ZnVuY3Rpb24gc2VsZWN0aW9uX2Nsb25lKGRlZXApe3JldHVybiB0aGlzLnNlbGVjdChkZWVwP3NlbGVjdGlvbl9jbG9uZURlZXA6c2VsZWN0aW9uX2Nsb25lU2hhbGxvdyl9ZnVuY3Rpb24gc2VsZWN0aW9uX2RhdHVtKHZhbHVlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnByb3BlcnR5KCJfX2RhdGFfXyIsdmFsdWUpOnRoaXMubm9kZSgpLl9fZGF0YV9ffXZhciBmaWx0ZXJFdmVudHM9e307ZXhwb3J0cy5ldmVudD1udWxsO2lmKHR5cGVvZiBkb2N1bWVudCE9PSJ1bmRlZmluZWQiKXt2YXIgZWxlbWVudD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7aWYoISgib25tb3VzZWVudGVyImluIGVsZW1lbnQpKXtmaWx0ZXJFdmVudHM9e21vdXNlZW50ZXI6Im1vdXNlb3ZlciIsbW91c2VsZWF2ZToibW91c2VvdXQifX19ZnVuY3Rpb24gZmlsdGVyQ29udGV4dExpc3RlbmVyKGxpc3RlbmVyLGluZGV4LGdyb3VwKXtsaXN0ZW5lcj1jb250ZXh0TGlzdGVuZXIobGlzdGVuZXIsaW5kZXgsZ3JvdXApO3JldHVybiBmdW5jdGlvbihldmVudCl7dmFyIHJlbGF0ZWQ9ZXZlbnQucmVsYXRlZFRhcmdldDtpZighcmVsYXRlZHx8cmVsYXRlZCE9PXRoaXMmJiEocmVsYXRlZC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0aGlzKSY4KSl7bGlzdGVuZXIuY2FsbCh0aGlzLGV2ZW50KX19fWZ1bmN0aW9uIGNvbnRleHRMaXN0ZW5lcihsaXN0ZW5lcixpbmRleCxncm91cCl7cmV0dXJuIGZ1bmN0aW9uKGV2ZW50MSl7dmFyIGV2ZW50MD1leHBvcnRzLmV2ZW50Oy8vIEV2ZW50cyBjYW4gYmUgcmVlbnRyYW50IChlLmcuLCBmb2N1cykuCmV4cG9ydHMuZXZlbnQ9ZXZlbnQxO3RyeXtsaXN0ZW5lci5jYWxsKHRoaXMsdGhpcy5fX2RhdGFfXyxpbmRleCxncm91cCl9ZmluYWxseXtleHBvcnRzLmV2ZW50PWV2ZW50MH19fWZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcyl7cmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XHMrLykubWFwKGZ1bmN0aW9uKHQpe3ZhciBuYW1lPSIiLGk9dC5pbmRleE9mKCIuIik7aWYoaT49MCluYW1lPXQuc2xpY2UoaSsxKSx0PXQuc2xpY2UoMCxpKTtyZXR1cm57dHlwZTp0LG5hbWU6bmFtZX19KX1mdW5jdGlvbiBvblJlbW92ZSh0eXBlbmFtZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG9uPXRoaXMuX19vbjtpZighb24pcmV0dXJuO2Zvcih2YXIgaj0wLGk9LTEsbT1vbi5sZW5ndGgsbztqPG07KytqKXtpZihvPW9uW2pdLCghdHlwZW5hbWUudHlwZXx8by50eXBlPT09dHlwZW5hbWUudHlwZSkmJm8ubmFtZT09PXR5cGVuYW1lLm5hbWUpe3RoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihvLnR5cGUsby5saXN0ZW5lcixvLmNhcHR1cmUpfWVsc2V7b25bKytpXT1vfX1pZigrK2kpb24ubGVuZ3RoPWk7ZWxzZSBkZWxldGUgdGhpcy5fX29ufX1mdW5jdGlvbiBvbkFkZCh0eXBlbmFtZSx2YWx1ZSxjYXB0dXJlKXt2YXIgd3JhcD1maWx0ZXJFdmVudHMuaGFzT3duUHJvcGVydHkodHlwZW5hbWUudHlwZSk/ZmlsdGVyQ29udGV4dExpc3RlbmVyOmNvbnRleHRMaXN0ZW5lcjtyZXR1cm4gZnVuY3Rpb24oZCxpLGdyb3VwKXt2YXIgb249dGhpcy5fX29uLG8sbGlzdGVuZXI9d3JhcCh2YWx1ZSxpLGdyb3VwKTtpZihvbilmb3IodmFyIGo9MCxtPW9uLmxlbmd0aDtqPG07KytqKXtpZigobz1vbltqXSkudHlwZT09PXR5cGVuYW1lLnR5cGUmJm8ubmFtZT09PXR5cGVuYW1lLm5hbWUpe3RoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihvLnR5cGUsby5saXN0ZW5lcixvLmNhcHR1cmUpO3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihvLnR5cGUsby5saXN0ZW5lcj1saXN0ZW5lcixvLmNhcHR1cmU9Y2FwdHVyZSk7by52YWx1ZT12YWx1ZTtyZXR1cm59fXRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0eXBlbmFtZS50eXBlLGxpc3RlbmVyLGNhcHR1cmUpO289e3R5cGU6dHlwZW5hbWUudHlwZSxuYW1lOnR5cGVuYW1lLm5hbWUsdmFsdWU6dmFsdWUsbGlzdGVuZXI6bGlzdGVuZXIsY2FwdHVyZTpjYXB0dXJlfTtpZighb24pdGhpcy5fX29uPVtvXTtlbHNlIG9uLnB1c2gobyl9fWZ1bmN0aW9uIHNlbGVjdGlvbl9vbih0eXBlbmFtZSx2YWx1ZSxjYXB0dXJlKXt2YXIgdHlwZW5hbWVzPXBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lKyIiKSxpLG49dHlwZW5hbWVzLmxlbmd0aCx0O2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil7dmFyIG9uPXRoaXMubm9kZSgpLl9fb247aWYob24pZm9yKHZhciBqPTAsbT1vbi5sZW5ndGgsbztqPG07KytqKXtmb3IoaT0wLG89b25bal07aTxuOysraSl7aWYoKHQ9dHlwZW5hbWVzW2ldKS50eXBlPT09by50eXBlJiZ0Lm5hbWU9PT1vLm5hbWUpe3JldHVybiBvLnZhbHVlfX19cmV0dXJufW9uPXZhbHVlP29uQWRkOm9uUmVtb3ZlO2lmKGNhcHR1cmU9PW51bGwpY2FwdHVyZT1mYWxzZTtmb3IoaT0wO2k8bjsrK2kpdGhpcy5lYWNoKG9uKHR5cGVuYW1lc1tpXSx2YWx1ZSxjYXB0dXJlKSk7cmV0dXJuIHRoaXN9ZnVuY3Rpb24gY3VzdG9tRXZlbnQoZXZlbnQxLGxpc3RlbmVyLHRoYXQsYXJncyl7dmFyIGV2ZW50MD1leHBvcnRzLmV2ZW50O2V2ZW50MS5zb3VyY2VFdmVudD1leHBvcnRzLmV2ZW50O2V4cG9ydHMuZXZlbnQ9ZXZlbnQxO3RyeXtyZXR1cm4gbGlzdGVuZXIuYXBwbHkodGhhdCxhcmdzKX1maW5hbGx5e2V4cG9ydHMuZXZlbnQ9ZXZlbnQwfX1mdW5jdGlvbiBkaXNwYXRjaEV2ZW50KG5vZGUsdHlwZSxwYXJhbXMpe3ZhciB3aW5kb3c9ZGVmYXVsdFZpZXcobm9kZSksZXZlbnQ9d2luZG93LkN1c3RvbUV2ZW50O2lmKHR5cGVvZiBldmVudD09PSJmdW5jdGlvbiIpe2V2ZW50PW5ldyBldmVudCh0eXBlLHBhcmFtcyl9ZWxzZXtldmVudD13aW5kb3cuZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50Iik7aWYocGFyYW1zKWV2ZW50LmluaXRFdmVudCh0eXBlLHBhcmFtcy5idWJibGVzLHBhcmFtcy5jYW5jZWxhYmxlKSxldmVudC5kZXRhaWw9cGFyYW1zLmRldGFpbDtlbHNlIGV2ZW50LmluaXRFdmVudCh0eXBlLGZhbHNlLGZhbHNlKX1ub2RlLmRpc3BhdGNoRXZlbnQoZXZlbnQpfWZ1bmN0aW9uIGRpc3BhdGNoQ29uc3RhbnQodHlwZSxwYXJhbXMpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsdHlwZSxwYXJhbXMpfX1mdW5jdGlvbiBkaXNwYXRjaEZ1bmN0aW9uKHR5cGUscGFyYW1zKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZGlzcGF0Y2hFdmVudCh0aGlzLHR5cGUscGFyYW1zLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9fWZ1bmN0aW9uIHNlbGVjdGlvbl9kaXNwYXRjaCh0eXBlLHBhcmFtcyl7cmV0dXJuIHRoaXMuZWFjaCgodHlwZW9mIHBhcmFtcz09PSJmdW5jdGlvbiI/ZGlzcGF0Y2hGdW5jdGlvbjpkaXNwYXRjaENvbnN0YW50KSh0eXBlLHBhcmFtcykpfXZhciByb290PVtudWxsXTtmdW5jdGlvbiBTZWxlY3Rpb24oZ3JvdXBzLHBhcmVudHMpe3RoaXMuX2dyb3Vwcz1ncm91cHM7dGhpcy5fcGFyZW50cz1wYXJlbnRzfWZ1bmN0aW9uIHNlbGVjdGlvbigpe3JldHVybiBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XV0scm9vdCl9U2VsZWN0aW9uLnByb3RvdHlwZT1zZWxlY3Rpb24ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpTZWxlY3Rpb24sc2VsZWN0OnNlbGVjdGlvbl9zZWxlY3Qsc2VsZWN0QWxsOnNlbGVjdGlvbl9zZWxlY3RBbGwsZmlsdGVyOnNlbGVjdGlvbl9maWx0ZXIsZGF0YTpzZWxlY3Rpb25fZGF0YSxlbnRlcjpzZWxlY3Rpb25fZW50ZXIsZXhpdDpzZWxlY3Rpb25fZXhpdCxqb2luOnNlbGVjdGlvbl9qb2luLG1lcmdlOnNlbGVjdGlvbl9tZXJnZSxvcmRlcjpzZWxlY3Rpb25fb3JkZXIsc29ydDpzZWxlY3Rpb25fc29ydCxjYWxsOnNlbGVjdGlvbl9jYWxsLG5vZGVzOnNlbGVjdGlvbl9ub2Rlcyxub2RlOnNlbGVjdGlvbl9ub2RlLHNpemU6c2VsZWN0aW9uX3NpemUsZW1wdHk6c2VsZWN0aW9uX2VtcHR5LGVhY2g6c2VsZWN0aW9uX2VhY2gsYXR0cjpzZWxlY3Rpb25fYXR0cixzdHlsZTpzZWxlY3Rpb25fc3R5bGUscHJvcGVydHk6c2VsZWN0aW9uX3Byb3BlcnR5LGNsYXNzZWQ6c2VsZWN0aW9uX2NsYXNzZWQsdGV4dDpzZWxlY3Rpb25fdGV4dCxodG1sOnNlbGVjdGlvbl9odG1sLHJhaXNlOnNlbGVjdGlvbl9yYWlzZSxsb3dlcjpzZWxlY3Rpb25fbG93ZXIsYXBwZW5kOnNlbGVjdGlvbl9hcHBlbmQsaW5zZXJ0OnNlbGVjdGlvbl9pbnNlcnQscmVtb3ZlOnNlbGVjdGlvbl9yZW1vdmUsY2xvbmU6c2VsZWN0aW9uX2Nsb25lLGRhdHVtOnNlbGVjdGlvbl9kYXR1bSxvbjpzZWxlY3Rpb25fb24sZGlzcGF0Y2g6c2VsZWN0aW9uX2Rpc3BhdGNofTtmdW5jdGlvbiBzZWxlY3Qoc2VsZWN0b3Ipe3JldHVybiB0eXBlb2Ygc2VsZWN0b3I9PT0ic3RyaW5nIj9uZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcildXSxbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSk6bmV3IFNlbGVjdGlvbihbW3NlbGVjdG9yXV0scm9vdCl9ZnVuY3Rpb24gY3JlYXRlKG5hbWUpe3JldHVybiBzZWxlY3QoY3JlYXRvcihuYW1lKS5jYWxsKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkpfXZhciBuZXh0SWQ9MDtmdW5jdGlvbiBsb2NhbCgpe3JldHVybiBuZXcgTG9jYWx9ZnVuY3Rpb24gTG9jYWwoKXt0aGlzLl89IkAiKygrK25leHRJZCkudG9TdHJpbmcoMzYpfUxvY2FsLnByb3RvdHlwZT1sb2NhbC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkxvY2FsLGdldDpmdW5jdGlvbihub2RlKXt2YXIgaWQ9dGhpcy5fO3doaWxlKCEoaWQgaW4gbm9kZSkpaWYoIShub2RlPW5vZGUucGFyZW50Tm9kZSkpcmV0dXJuO3JldHVybiBub2RlW2lkXX0sc2V0OmZ1bmN0aW9uKG5vZGUsdmFsdWUpe3JldHVybiBub2RlW3RoaXMuX109dmFsdWV9LHJlbW92ZTpmdW5jdGlvbihub2RlKXtyZXR1cm4gdGhpcy5fIGluIG5vZGUmJmRlbGV0ZSBub2RlW3RoaXMuX119LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX319O2Z1bmN0aW9uIHNvdXJjZUV2ZW50KCl7dmFyIGN1cnJlbnQ9ZXhwb3J0cy5ldmVudCxzb3VyY2U7d2hpbGUoc291cmNlPWN1cnJlbnQuc291cmNlRXZlbnQpY3VycmVudD1zb3VyY2U7cmV0dXJuIGN1cnJlbnR9ZnVuY3Rpb24gcG9pbnQobm9kZSxldmVudCl7dmFyIHN2Zz1ub2RlLm93bmVyU1ZHRWxlbWVudHx8bm9kZTtpZihzdmcuY3JlYXRlU1ZHUG9pbnQpe3ZhciBwb2ludD1zdmcuY3JlYXRlU1ZHUG9pbnQoKTtwb2ludC54PWV2ZW50LmNsaWVudFgscG9pbnQueT1ldmVudC5jbGllbnRZO3BvaW50PXBvaW50Lm1hdHJpeFRyYW5zZm9ybShub2RlLmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSk7cmV0dXJuW3BvaW50LngscG9pbnQueV19dmFyIHJlY3Q9bm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm5bZXZlbnQuY2xpZW50WC1yZWN0LmxlZnQtbm9kZS5jbGllbnRMZWZ0LGV2ZW50LmNsaWVudFktcmVjdC50b3Atbm9kZS5jbGllbnRUb3BdfWZ1bmN0aW9uIG1vdXNlKG5vZGUpe3ZhciBldmVudD1zb3VyY2VFdmVudCgpO2lmKGV2ZW50LmNoYW5nZWRUb3VjaGVzKWV2ZW50PWV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO3JldHVybiBwb2ludChub2RlLGV2ZW50KX1mdW5jdGlvbiBzZWxlY3RBbGwoc2VsZWN0b3Ipe3JldHVybiB0eXBlb2Ygc2VsZWN0b3I9PT0ic3RyaW5nIj9uZXcgU2VsZWN0aW9uKFtkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKV0sW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pOm5ldyBTZWxlY3Rpb24oW3NlbGVjdG9yPT1udWxsP1tdOnNlbGVjdG9yXSxyb290KX1mdW5jdGlvbiB0b3VjaChub2RlLHRvdWNoZXMsaWRlbnRpZmllcil7aWYoYXJndW1lbnRzLmxlbmd0aDwzKWlkZW50aWZpZXI9dG91Y2hlcyx0b3VjaGVzPXNvdXJjZUV2ZW50KCkuY2hhbmdlZFRvdWNoZXM7Zm9yKHZhciBpPTAsbj10b3VjaGVzP3RvdWNoZXMubGVuZ3RoOjAsdG91Y2g7aTxuOysraSl7aWYoKHRvdWNoPXRvdWNoZXNbaV0pLmlkZW50aWZpZXI9PT1pZGVudGlmaWVyKXtyZXR1cm4gcG9pbnQobm9kZSx0b3VjaCl9fXJldHVybiBudWxsfWZ1bmN0aW9uIHRvdWNoZXMobm9kZSx0b3VjaGVzKXtpZih0b3VjaGVzPT1udWxsKXRvdWNoZXM9c291cmNlRXZlbnQoKS50b3VjaGVzO2Zvcih2YXIgaT0wLG49dG91Y2hlcz90b3VjaGVzLmxlbmd0aDowLHBvaW50cz1uZXcgQXJyYXkobik7aTxuOysraSl7cG9pbnRzW2ldPXBvaW50KG5vZGUsdG91Y2hlc1tpXSl9cmV0dXJuIHBvaW50c31leHBvcnRzLmNsaWVudFBvaW50PXBvaW50O2V4cG9ydHMuY3JlYXRlPWNyZWF0ZTtleHBvcnRzLmNyZWF0b3I9Y3JlYXRvcjtleHBvcnRzLmN1c3RvbUV2ZW50PWN1c3RvbUV2ZW50O2V4cG9ydHMubG9jYWw9bG9jYWw7ZXhwb3J0cy5tYXRjaGVyPW1hdGNoZXI7ZXhwb3J0cy5tb3VzZT1tb3VzZTtleHBvcnRzLm5hbWVzcGFjZT1uYW1lc3BhY2U7ZXhwb3J0cy5uYW1lc3BhY2VzPW5hbWVzcGFjZXM7ZXhwb3J0cy5zZWxlY3Q9c2VsZWN0O2V4cG9ydHMuc2VsZWN0QWxsPXNlbGVjdEFsbDtleHBvcnRzLnNlbGVjdGlvbj1zZWxlY3Rpb247ZXhwb3J0cy5zZWxlY3Rvcj1zZWxlY3RvcjtleHBvcnRzLnNlbGVjdG9yQWxsPXNlbGVjdG9yQWxsO2V4cG9ydHMuc3R5bGU9c3R5bGVWYWx1ZTtleHBvcnRzLnRvdWNoPXRvdWNoO2V4cG9ydHMudG91Y2hlcz10b3VjaGVzO2V4cG9ydHMud2luZG93PWRlZmF1bHRWaWV3O09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHt9XSw1MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtc2hhcGUvIHYxLjMuNyBDb3B5cmlnaHQgMjAxOSBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzLHJlcXVpcmUoImQzLXBhdGgiKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLXBhdGgiXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9LGdsb2JhbC5kMykpfSkodGhpcyxmdW5jdGlvbihleHBvcnRzLGQzUGF0aCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbiBjb25zdGFudCgpe3JldHVybiB4fX12YXIgYWJzPU1hdGguYWJzO3ZhciBhdGFuMj1NYXRoLmF0YW4yO3ZhciBjb3M9TWF0aC5jb3M7dmFyIG1heD1NYXRoLm1heDt2YXIgbWluPU1hdGgubWluO3ZhciBzaW49TWF0aC5zaW47dmFyIHNxcnQ9TWF0aC5zcXJ0O3ZhciBlcHNpbG9uPTFlLTEyO3ZhciBwaT1NYXRoLlBJO3ZhciBoYWxmUGk9cGkvMjt2YXIgdGF1PTIqcGk7ZnVuY3Rpb24gYWNvcyh4KXtyZXR1cm4geD4xPzA6eDwtMT9waTpNYXRoLmFjb3MoeCl9ZnVuY3Rpb24gYXNpbih4KXtyZXR1cm4geD49MT9oYWxmUGk6eDw9LTE/LWhhbGZQaTpNYXRoLmFzaW4oeCl9ZnVuY3Rpb24gYXJjSW5uZXJSYWRpdXMoZCl7cmV0dXJuIGQuaW5uZXJSYWRpdXN9ZnVuY3Rpb24gYXJjT3V0ZXJSYWRpdXMoZCl7cmV0dXJuIGQub3V0ZXJSYWRpdXN9ZnVuY3Rpb24gYXJjU3RhcnRBbmdsZShkKXtyZXR1cm4gZC5zdGFydEFuZ2xlfWZ1bmN0aW9uIGFyY0VuZEFuZ2xlKGQpe3JldHVybiBkLmVuZEFuZ2xlfWZ1bmN0aW9uIGFyY1BhZEFuZ2xlKGQpe3JldHVybiBkJiZkLnBhZEFuZ2xlOy8vIE5vdGU6IG9wdGlvbmFsIQp9ZnVuY3Rpb24gaW50ZXJzZWN0KHgwLHkwLHgxLHkxLHgyLHkyLHgzLHkzKXt2YXIgeDEwPXgxLXgwLHkxMD15MS15MCx4MzI9eDMteDIseTMyPXkzLXkyLHQ9eTMyKngxMC14MzIqeTEwO2lmKHQqdDxlcHNpbG9uKXJldHVybjt0PSh4MzIqKHkwLXkyKS15MzIqKHgwLXgyKSkvdDtyZXR1cm5beDArdCp4MTAseTArdCp5MTBdfQovLyBDb21wdXRlIHBlcnBlbmRpY3VsYXIgb2Zmc2V0IGxpbmUgb2YgbGVuZ3RoIHJjLgovLyBodHRwOi8vbWF0aHdvcmxkLndvbGZyYW0uY29tL0NpcmNsZS1MaW5lSW50ZXJzZWN0aW9uLmh0bWwKZnVuY3Rpb24gY29ybmVyVGFuZ2VudHMoeDAseTAseDEseTEscjEscmMsY3cpe3ZhciB4MDE9eDAteDEseTAxPXkwLXkxLGxvPShjdz9yYzotcmMpL3NxcnQoeDAxKngwMSt5MDEqeTAxKSxveD1sbyp5MDEsb3k9LWxvKngwMSx4MTE9eDArb3gseTExPXkwK295LHgxMD14MStveCx5MTA9eTErb3kseDAwPSh4MTEreDEwKS8yLHkwMD0oeTExK3kxMCkvMixkeD14MTAteDExLGR5PXkxMC15MTEsZDI9ZHgqZHgrZHkqZHkscj1yMS1yYyxEPXgxMSp5MTAteDEwKnkxMSxkPShkeTwwPy0xOjEpKnNxcnQobWF4KDAscipyKmQyLUQqRCkpLGN4MD0oRCpkeS1keCpkKS9kMixjeTA9KC1EKmR4LWR5KmQpL2QyLGN4MT0oRCpkeStkeCpkKS9kMixjeTE9KC1EKmR4K2R5KmQpL2QyLGR4MD1jeDAteDAwLGR5MD1jeTAteTAwLGR4MT1jeDEteDAwLGR5MT1jeTEteTAwOwovLyBQaWNrIHRoZSBjbG9zZXIgb2YgdGhlIHR3byBpbnRlcnNlY3Rpb24gcG9pbnRzLgovLyBUT0RPIElzIHRoZXJlIGEgZmFzdGVyIHdheSB0byBkZXRlcm1pbmUgd2hpY2ggaW50ZXJzZWN0aW9uIHRvIHVzZT8KaWYoZHgwKmR4MCtkeTAqZHkwPmR4MSpkeDErZHkxKmR5MSljeDA9Y3gxLGN5MD1jeTE7cmV0dXJue2N4OmN4MCxjeTpjeTAseDAxOi1veCx5MDE6LW95LHgxMTpjeDAqKHIxL3ItMSkseTExOmN5MCoocjEvci0xKX19ZnVuY3Rpb24gYXJjKCl7dmFyIGlubmVyUmFkaXVzPWFyY0lubmVyUmFkaXVzLG91dGVyUmFkaXVzPWFyY091dGVyUmFkaXVzLGNvcm5lclJhZGl1cz1jb25zdGFudCgwKSxwYWRSYWRpdXM9bnVsbCxzdGFydEFuZ2xlPWFyY1N0YXJ0QW5nbGUsZW5kQW5nbGU9YXJjRW5kQW5nbGUscGFkQW5nbGU9YXJjUGFkQW5nbGUsY29udGV4dD1udWxsO2Z1bmN0aW9uIGFyYygpe3ZhciBidWZmZXIscixyMD0raW5uZXJSYWRpdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHIxPStvdXRlclJhZGl1cy5hcHBseSh0aGlzLGFyZ3VtZW50cyksYTA9c3RhcnRBbmdsZS5hcHBseSh0aGlzLGFyZ3VtZW50cyktaGFsZlBpLGExPWVuZEFuZ2xlLmFwcGx5KHRoaXMsYXJndW1lbnRzKS1oYWxmUGksZGE9YWJzKGExLWEwKSxjdz1hMT5hMDtpZighY29udGV4dCljb250ZXh0PWJ1ZmZlcj1kM1BhdGgucGF0aCgpOwovLyBFbnN1cmUgdGhhdCB0aGUgb3V0ZXIgcmFkaXVzIGlzIGFsd2F5cyBsYXJnZXIgdGhhbiB0aGUgaW5uZXIgcmFkaXVzLgppZihyMTxyMClyPXIxLHIxPXIwLHIwPXI7Ci8vIElzIGl0IGEgcG9pbnQ/CmlmKCEocjE+ZXBzaWxvbikpY29udGV4dC5tb3ZlVG8oMCwwKTsKLy8gT3IgaXMgaXQgYSBjaXJjbGUgb3IgYW5udWx1cz8KZWxzZSBpZihkYT50YXUtZXBzaWxvbil7Y29udGV4dC5tb3ZlVG8ocjEqY29zKGEwKSxyMSpzaW4oYTApKTtjb250ZXh0LmFyYygwLDAscjEsYTAsYTEsIWN3KTtpZihyMD5lcHNpbG9uKXtjb250ZXh0Lm1vdmVUbyhyMCpjb3MoYTEpLHIwKnNpbihhMSkpO2NvbnRleHQuYXJjKDAsMCxyMCxhMSxhMCxjdyl9fQovLyBPciBpcyBpdCBhIGNpcmN1bGFyIG9yIGFubnVsYXIgc2VjdG9yPwplbHNle3ZhciBhMDE9YTAsYTExPWExLGEwMD1hMCxhMTA9YTEsZGEwPWRhLGRhMT1kYSxhcD1wYWRBbmdsZS5hcHBseSh0aGlzLGFyZ3VtZW50cykvMixycD1hcD5lcHNpbG9uJiYocGFkUmFkaXVzPytwYWRSYWRpdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpOnNxcnQocjAqcjArcjEqcjEpKSxyYz1taW4oYWJzKHIxLXIwKS8yLCtjb3JuZXJSYWRpdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpKSxyYzA9cmMscmMxPXJjLHQwLHQxOwovLyBBcHBseSBwYWRkaW5nPyBOb3RlIHRoYXQgc2luY2UgcjEg4omlIHIwLCBkYTEg4omlIGRhMC4KaWYocnA+ZXBzaWxvbil7dmFyIHAwPWFzaW4ocnAvcjAqc2luKGFwKSkscDE9YXNpbihycC9yMSpzaW4oYXApKTtpZigoZGEwLT1wMCoyKT5lcHNpbG9uKXAwKj1jdz8xOi0xLGEwMCs9cDAsYTEwLT1wMDtlbHNlIGRhMD0wLGEwMD1hMTA9KGEwK2ExKS8yO2lmKChkYTEtPXAxKjIpPmVwc2lsb24pcDEqPWN3PzE6LTEsYTAxKz1wMSxhMTEtPXAxO2Vsc2UgZGExPTAsYTAxPWExMT0oYTArYTEpLzJ9dmFyIHgwMT1yMSpjb3MoYTAxKSx5MDE9cjEqc2luKGEwMSkseDEwPXIwKmNvcyhhMTApLHkxMD1yMCpzaW4oYTEwKTsKLy8gQXBwbHkgcm91bmRlZCBjb3JuZXJzPwppZihyYz5lcHNpbG9uKXt2YXIgeDExPXIxKmNvcyhhMTEpLHkxMT1yMSpzaW4oYTExKSx4MDA9cjAqY29zKGEwMCkseTAwPXIwKnNpbihhMDApLG9jOwovLyBSZXN0cmljdCB0aGUgY29ybmVyIHJhZGl1cyBhY2NvcmRpbmcgdG8gdGhlIHNlY3RvciBhbmdsZS4KaWYoZGE8cGkmJihvYz1pbnRlcnNlY3QoeDAxLHkwMSx4MDAseTAwLHgxMSx5MTEseDEwLHkxMCkpKXt2YXIgYXg9eDAxLW9jWzBdLGF5PXkwMS1vY1sxXSxieD14MTEtb2NbMF0sYnk9eTExLW9jWzFdLGtjPTEvc2luKGFjb3MoKGF4KmJ4K2F5KmJ5KS8oc3FydChheCpheCtheSpheSkqc3FydChieCpieCtieSpieSkpKS8yKSxsYz1zcXJ0KG9jWzBdKm9jWzBdK29jWzFdKm9jWzFdKTtyYzA9bWluKHJjLChyMC1sYykvKGtjLTEpKTtyYzE9bWluKHJjLChyMS1sYykvKGtjKzEpKX19Ci8vIElzIHRoZSBzZWN0b3IgY29sbGFwc2VkIHRvIGEgbGluZT8KaWYoIShkYTE+ZXBzaWxvbikpY29udGV4dC5tb3ZlVG8oeDAxLHkwMSk7Ci8vIERvZXMgdGhlIHNlY3RvcuKAmXMgb3V0ZXIgcmluZyBoYXZlIHJvdW5kZWQgY29ybmVycz8KZWxzZSBpZihyYzE+ZXBzaWxvbil7dDA9Y29ybmVyVGFuZ2VudHMoeDAwLHkwMCx4MDEseTAxLHIxLHJjMSxjdyk7dDE9Y29ybmVyVGFuZ2VudHMoeDExLHkxMSx4MTAseTEwLHIxLHJjMSxjdyk7Y29udGV4dC5tb3ZlVG8odDAuY3grdDAueDAxLHQwLmN5K3QwLnkwMSk7Ci8vIEhhdmUgdGhlIGNvcm5lcnMgbWVyZ2VkPwppZihyYzE8cmMpY29udGV4dC5hcmModDAuY3gsdDAuY3kscmMxLGF0YW4yKHQwLnkwMSx0MC54MDEpLGF0YW4yKHQxLnkwMSx0MS54MDEpLCFjdyk7Ci8vIE90aGVyd2lzZSwgZHJhdyB0aGUgdHdvIGNvcm5lcnMgYW5kIHRoZSByaW5nLgplbHNle2NvbnRleHQuYXJjKHQwLmN4LHQwLmN5LHJjMSxhdGFuMih0MC55MDEsdDAueDAxKSxhdGFuMih0MC55MTEsdDAueDExKSwhY3cpO2NvbnRleHQuYXJjKDAsMCxyMSxhdGFuMih0MC5jeSt0MC55MTEsdDAuY3grdDAueDExKSxhdGFuMih0MS5jeSt0MS55MTEsdDEuY3grdDEueDExKSwhY3cpO2NvbnRleHQuYXJjKHQxLmN4LHQxLmN5LHJjMSxhdGFuMih0MS55MTEsdDEueDExKSxhdGFuMih0MS55MDEsdDEueDAxKSwhY3cpfX0KLy8gT3IgaXMgdGhlIG91dGVyIHJpbmcganVzdCBhIGNpcmN1bGFyIGFyYz8KZWxzZSBjb250ZXh0Lm1vdmVUbyh4MDEseTAxKSxjb250ZXh0LmFyYygwLDAscjEsYTAxLGExMSwhY3cpOwovLyBJcyB0aGVyZSBubyBpbm5lciByaW5nLCBhbmQgaXTigJlzIGEgY2lyY3VsYXIgc2VjdG9yPwovLyBPciBwZXJoYXBzIGl04oCZcyBhbiBhbm51bGFyIHNlY3RvciBjb2xsYXBzZWQgZHVlIHRvIHBhZGRpbmc/CmlmKCEocjA+ZXBzaWxvbil8fCEoZGEwPmVwc2lsb24pKWNvbnRleHQubGluZVRvKHgxMCx5MTApOwovLyBEb2VzIHRoZSBzZWN0b3LigJlzIGlubmVyIHJpbmcgKG9yIHBvaW50KSBoYXZlIHJvdW5kZWQgY29ybmVycz8KZWxzZSBpZihyYzA+ZXBzaWxvbil7dDA9Y29ybmVyVGFuZ2VudHMoeDEwLHkxMCx4MTEseTExLHIwLC1yYzAsY3cpO3QxPWNvcm5lclRhbmdlbnRzKHgwMSx5MDEseDAwLHkwMCxyMCwtcmMwLGN3KTtjb250ZXh0LmxpbmVUbyh0MC5jeCt0MC54MDEsdDAuY3krdDAueTAxKTsKLy8gSGF2ZSB0aGUgY29ybmVycyBtZXJnZWQ/CmlmKHJjMDxyYyljb250ZXh0LmFyYyh0MC5jeCx0MC5jeSxyYzAsYXRhbjIodDAueTAxLHQwLngwMSksYXRhbjIodDEueTAxLHQxLngwMSksIWN3KTsKLy8gT3RoZXJ3aXNlLCBkcmF3IHRoZSB0d28gY29ybmVycyBhbmQgdGhlIHJpbmcuCmVsc2V7Y29udGV4dC5hcmModDAuY3gsdDAuY3kscmMwLGF0YW4yKHQwLnkwMSx0MC54MDEpLGF0YW4yKHQwLnkxMSx0MC54MTEpLCFjdyk7Y29udGV4dC5hcmMoMCwwLHIwLGF0YW4yKHQwLmN5K3QwLnkxMSx0MC5jeCt0MC54MTEpLGF0YW4yKHQxLmN5K3QxLnkxMSx0MS5jeCt0MS54MTEpLGN3KTtjb250ZXh0LmFyYyh0MS5jeCx0MS5jeSxyYzAsYXRhbjIodDEueTExLHQxLngxMSksYXRhbjIodDEueTAxLHQxLngwMSksIWN3KX19Ci8vIE9yIGlzIHRoZSBpbm5lciByaW5nIGp1c3QgYSBjaXJjdWxhciBhcmM/CmVsc2UgY29udGV4dC5hcmMoMCwwLHIwLGExMCxhMDAsY3cpfWNvbnRleHQuY2xvc2VQYXRoKCk7aWYoYnVmZmVyKXJldHVybiBjb250ZXh0PW51bGwsYnVmZmVyKyIifHxudWxsfWFyYy5jZW50cm9pZD1mdW5jdGlvbigpe3ZhciByPSgraW5uZXJSYWRpdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpKyArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpKS8yLGE9KCtzdGFydEFuZ2xlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSsgK2VuZEFuZ2xlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSkvMi1waS8yO3JldHVybltjb3MoYSkqcixzaW4oYSkqcl19O2FyYy5pbm5lclJhZGl1cz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaW5uZXJSYWRpdXM9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGFyYyk6aW5uZXJSYWRpdXN9O2FyYy5vdXRlclJhZGl1cz1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ob3V0ZXJSYWRpdXM9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGFyYyk6b3V0ZXJSYWRpdXN9O2FyYy5jb3JuZXJSYWRpdXM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGNvcm5lclJhZGl1cz10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksYXJjKTpjb3JuZXJSYWRpdXN9O2FyYy5wYWRSYWRpdXM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhZFJhZGl1cz1fPT1udWxsP251bGw6dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGFyYyk6cGFkUmFkaXVzfTthcmMuc3RhcnRBbmdsZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc3RhcnRBbmdsZT10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksYXJjKTpzdGFydEFuZ2xlfTthcmMuZW5kQW5nbGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGVuZEFuZ2xlPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxhcmMpOmVuZEFuZ2xlfTthcmMucGFkQW5nbGU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHBhZEFuZ2xlPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxhcmMpOnBhZEFuZ2xlfTthcmMuY29udGV4dD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oY29udGV4dD1fPT1udWxsP251bGw6XyxhcmMpOmNvbnRleHR9O3JldHVybiBhcmN9ZnVuY3Rpb24gTGluZWFyKGNvbnRleHQpe3RoaXMuX2NvbnRleHQ9Y29udGV4dH1MaW5lYXIucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe2lmKHRoaXMuX2xpbmV8fHRoaXMuX2xpbmUhPT0wJiZ0aGlzLl9wb2ludD09PTEpdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTt0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24oeCx5KXt4PSt4LHk9K3k7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MTt0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHgseSk6dGhpcy5fY29udGV4dC5tb3ZlVG8oeCx5KTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjsvLyBwcm9jZWVkCmRlZmF1bHQ6dGhpcy5fY29udGV4dC5saW5lVG8oeCx5KTticmVha319fTtmdW5jdGlvbiBjdXJ2ZUxpbmVhcihjb250ZXh0KXtyZXR1cm4gbmV3IExpbmVhcihjb250ZXh0KX1mdW5jdGlvbiB4KHApe3JldHVybiBwWzBdfWZ1bmN0aW9uIHkocCl7cmV0dXJuIHBbMV19ZnVuY3Rpb24gbGluZSgpe3ZhciB4JDE9eCx5JDE9eSxkZWZpbmVkPWNvbnN0YW50KHRydWUpLGNvbnRleHQ9bnVsbCxjdXJ2ZT1jdXJ2ZUxpbmVhcixvdXRwdXQ9bnVsbDtmdW5jdGlvbiBsaW5lKGRhdGEpe3ZhciBpLG49ZGF0YS5sZW5ndGgsZCxkZWZpbmVkMD1mYWxzZSxidWZmZXI7aWYoY29udGV4dD09bnVsbClvdXRwdXQ9Y3VydmUoYnVmZmVyPWQzUGF0aC5wYXRoKCkpO2ZvcihpPTA7aTw9bjsrK2kpe2lmKCEoaTxuJiZkZWZpbmVkKGQ9ZGF0YVtpXSxpLGRhdGEpKT09PWRlZmluZWQwKXtpZihkZWZpbmVkMD0hZGVmaW5lZDApb3V0cHV0LmxpbmVTdGFydCgpO2Vsc2Ugb3V0cHV0LmxpbmVFbmQoKX1pZihkZWZpbmVkMClvdXRwdXQucG9pbnQoK3gkMShkLGksZGF0YSksK3kkMShkLGksZGF0YSkpfWlmKGJ1ZmZlcilyZXR1cm4gb3V0cHV0PW51bGwsYnVmZmVyKyIifHxudWxsfWxpbmUueD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeCQxPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxsaW5lKTp4JDF9O2xpbmUueT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeSQxPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxsaW5lKTp5JDF9O2xpbmUuZGVmaW5lZD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZGVmaW5lZD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCghIV8pLGxpbmUpOmRlZmluZWR9O2xpbmUuY3VydmU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGN1cnZlPV8sY29udGV4dCE9bnVsbCYmKG91dHB1dD1jdXJ2ZShjb250ZXh0KSksbGluZSk6Y3VydmV9O2xpbmUuY29udGV4dD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oXz09bnVsbD9jb250ZXh0PW91dHB1dD1udWxsOm91dHB1dD1jdXJ2ZShjb250ZXh0PV8pLGxpbmUpOmNvbnRleHR9O3JldHVybiBsaW5lfWZ1bmN0aW9uIGFyZWEoKXt2YXIgeDA9eCx4MT1udWxsLHkwPWNvbnN0YW50KDApLHkxPXksZGVmaW5lZD1jb25zdGFudCh0cnVlKSxjb250ZXh0PW51bGwsY3VydmU9Y3VydmVMaW5lYXIsb3V0cHV0PW51bGw7ZnVuY3Rpb24gYXJlYShkYXRhKXt2YXIgaSxqLGssbj1kYXRhLmxlbmd0aCxkLGRlZmluZWQwPWZhbHNlLGJ1ZmZlcix4MHo9bmV3IEFycmF5KG4pLHkwej1uZXcgQXJyYXkobik7aWYoY29udGV4dD09bnVsbClvdXRwdXQ9Y3VydmUoYnVmZmVyPWQzUGF0aC5wYXRoKCkpO2ZvcihpPTA7aTw9bjsrK2kpe2lmKCEoaTxuJiZkZWZpbmVkKGQ9ZGF0YVtpXSxpLGRhdGEpKT09PWRlZmluZWQwKXtpZihkZWZpbmVkMD0hZGVmaW5lZDApe2o9aTtvdXRwdXQuYXJlYVN0YXJ0KCk7b3V0cHV0LmxpbmVTdGFydCgpfWVsc2V7b3V0cHV0LmxpbmVFbmQoKTtvdXRwdXQubGluZVN0YXJ0KCk7Zm9yKGs9aS0xO2s+PWo7LS1rKXtvdXRwdXQucG9pbnQoeDB6W2tdLHkweltrXSl9b3V0cHV0LmxpbmVFbmQoKTtvdXRwdXQuYXJlYUVuZCgpfX1pZihkZWZpbmVkMCl7eDB6W2ldPSt4MChkLGksZGF0YSkseTB6W2ldPSt5MChkLGksZGF0YSk7b3V0cHV0LnBvaW50KHgxPyt4MShkLGksZGF0YSk6eDB6W2ldLHkxPyt5MShkLGksZGF0YSk6eTB6W2ldKX19aWYoYnVmZmVyKXJldHVybiBvdXRwdXQ9bnVsbCxidWZmZXIrIiJ8fG51bGx9ZnVuY3Rpb24gYXJlYWxpbmUoKXtyZXR1cm4gbGluZSgpLmRlZmluZWQoZGVmaW5lZCkuY3VydmUoY3VydmUpLmNvbnRleHQoY29udGV4dCl9YXJlYS54PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4MD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXykseDE9bnVsbCxhcmVhKTp4MH07YXJlYS54MD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeDA9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGFyZWEpOngwfTthcmVhLngxPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4MT1fPT1udWxsP251bGw6dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGFyZWEpOngxfTthcmVhLnk9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHkwPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSx5MT1udWxsLGFyZWEpOnkwfTthcmVhLnkwPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh5MD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksYXJlYSk6eTB9O2FyZWEueTE9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHkxPV89PW51bGw/bnVsbDp0eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksYXJlYSk6eTF9O2FyZWEubGluZVgwPWFyZWEubGluZVkwPWZ1bmN0aW9uKCl7cmV0dXJuIGFyZWFsaW5lKCkueCh4MCkueSh5MCl9O2FyZWEubGluZVkxPWZ1bmN0aW9uKCl7cmV0dXJuIGFyZWFsaW5lKCkueCh4MCkueSh5MSl9O2FyZWEubGluZVgxPWZ1bmN0aW9uKCl7cmV0dXJuIGFyZWFsaW5lKCkueCh4MSkueSh5MCl9O2FyZWEuZGVmaW5lZD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZGVmaW5lZD10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCghIV8pLGFyZWEpOmRlZmluZWR9O2FyZWEuY3VydmU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGN1cnZlPV8sY29udGV4dCE9bnVsbCYmKG91dHB1dD1jdXJ2ZShjb250ZXh0KSksYXJlYSk6Y3VydmV9O2FyZWEuY29udGV4dD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oXz09bnVsbD9jb250ZXh0PW91dHB1dD1udWxsOm91dHB1dD1jdXJ2ZShjb250ZXh0PV8pLGFyZWEpOmNvbnRleHR9O3JldHVybiBhcmVhfWZ1bmN0aW9uIGRlc2NlbmRpbmcoYSxiKXtyZXR1cm4gYjxhPy0xOmI+YT8xOmI+PWE/MDpOYU59ZnVuY3Rpb24gaWRlbnRpdHkoZCl7cmV0dXJuIGR9ZnVuY3Rpb24gcGllKCl7dmFyIHZhbHVlPWlkZW50aXR5LHNvcnRWYWx1ZXM9ZGVzY2VuZGluZyxzb3J0PW51bGwsc3RhcnRBbmdsZT1jb25zdGFudCgwKSxlbmRBbmdsZT1jb25zdGFudCh0YXUpLHBhZEFuZ2xlPWNvbnN0YW50KDApO2Z1bmN0aW9uIHBpZShkYXRhKXt2YXIgaSxuPWRhdGEubGVuZ3RoLGosayxzdW09MCxpbmRleD1uZXcgQXJyYXkobiksYXJjcz1uZXcgQXJyYXkobiksYTA9K3N0YXJ0QW5nbGUuYXBwbHkodGhpcyxhcmd1bWVudHMpLGRhPU1hdGgubWluKHRhdSxNYXRoLm1heCgtdGF1LGVuZEFuZ2xlLmFwcGx5KHRoaXMsYXJndW1lbnRzKS1hMCkpLGExLHA9TWF0aC5taW4oTWF0aC5hYnMoZGEpL24scGFkQW5nbGUuYXBwbHkodGhpcyxhcmd1bWVudHMpKSxwYT1wKihkYTwwPy0xOjEpLHY7Zm9yKGk9MDtpPG47KytpKXtpZigodj1hcmNzW2luZGV4W2ldPWldPSt2YWx1ZShkYXRhW2ldLGksZGF0YSkpPjApe3N1bSs9dn19Ci8vIE9wdGlvbmFsbHkgc29ydCB0aGUgYXJjcyBieSBwcmV2aW91c2x5LWNvbXB1dGVkIHZhbHVlcyBvciBieSBkYXRhLgppZihzb3J0VmFsdWVzIT1udWxsKWluZGV4LnNvcnQoZnVuY3Rpb24oaSxqKXtyZXR1cm4gc29ydFZhbHVlcyhhcmNzW2ldLGFyY3Nbal0pfSk7ZWxzZSBpZihzb3J0IT1udWxsKWluZGV4LnNvcnQoZnVuY3Rpb24oaSxqKXtyZXR1cm4gc29ydChkYXRhW2ldLGRhdGFbal0pfSk7Ci8vIENvbXB1dGUgdGhlIGFyY3MhIFRoZXkgYXJlIHN0b3JlZCBpbiB0aGUgb3JpZ2luYWwgZGF0YSdzIG9yZGVyLgpmb3IoaT0wLGs9c3VtPyhkYS1uKnBhKS9zdW06MDtpPG47KytpLGEwPWExKXtqPWluZGV4W2ldLHY9YXJjc1tqXSxhMT1hMCsodj4wP3YqazowKStwYSxhcmNzW2pdPXtkYXRhOmRhdGFbal0saW5kZXg6aSx2YWx1ZTp2LHN0YXJ0QW5nbGU6YTAsZW5kQW5nbGU6YTEscGFkQW5nbGU6cH19cmV0dXJuIGFyY3N9cGllLnZhbHVlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh2YWx1ZT10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXykscGllKTp2YWx1ZX07cGllLnNvcnRWYWx1ZXM9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHNvcnRWYWx1ZXM9Xyxzb3J0PW51bGwscGllKTpzb3J0VmFsdWVzfTtwaWUuc29ydD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc29ydD1fLHNvcnRWYWx1ZXM9bnVsbCxwaWUpOnNvcnR9O3BpZS5zdGFydEFuZ2xlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzdGFydEFuZ2xlPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxwaWUpOnN0YXJ0QW5nbGV9O3BpZS5lbmRBbmdsZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZW5kQW5nbGU9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLHBpZSk6ZW5kQW5nbGV9O3BpZS5wYWRBbmdsZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocGFkQW5nbGU9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLHBpZSk6cGFkQW5nbGV9O3JldHVybiBwaWV9dmFyIGN1cnZlUmFkaWFsTGluZWFyPWN1cnZlUmFkaWFsKGN1cnZlTGluZWFyKTtmdW5jdGlvbiBSYWRpYWwoY3VydmUpe3RoaXMuX2N1cnZlPWN1cnZlfVJhZGlhbC5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2N1cnZlLmFyZWFTdGFydCgpfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fY3VydmUuYXJlYUVuZCgpfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9jdXJ2ZS5saW5lU3RhcnQoKX0sbGluZUVuZDpmdW5jdGlvbigpe3RoaXMuX2N1cnZlLmxpbmVFbmQoKX0scG9pbnQ6ZnVuY3Rpb24oYSxyKXt0aGlzLl9jdXJ2ZS5wb2ludChyKk1hdGguc2luKGEpLHIqLU1hdGguY29zKGEpKX19O2Z1bmN0aW9uIGN1cnZlUmFkaWFsKGN1cnZlKXtmdW5jdGlvbiByYWRpYWwoY29udGV4dCl7cmV0dXJuIG5ldyBSYWRpYWwoY3VydmUoY29udGV4dCkpfXJhZGlhbC5fY3VydmU9Y3VydmU7cmV0dXJuIHJhZGlhbH1mdW5jdGlvbiBsaW5lUmFkaWFsKGwpe3ZhciBjPWwuY3VydmU7bC5hbmdsZT1sLngsZGVsZXRlIGwueDtsLnJhZGl1cz1sLnksZGVsZXRlIGwueTtsLmN1cnZlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP2MoY3VydmVSYWRpYWwoXykpOmMoKS5fY3VydmV9O3JldHVybiBsfWZ1bmN0aW9uIGxpbmVSYWRpYWwkMSgpe3JldHVybiBsaW5lUmFkaWFsKGxpbmUoKS5jdXJ2ZShjdXJ2ZVJhZGlhbExpbmVhcikpfWZ1bmN0aW9uIGFyZWFSYWRpYWwoKXt2YXIgYT1hcmVhKCkuY3VydmUoY3VydmVSYWRpYWxMaW5lYXIpLGM9YS5jdXJ2ZSx4MD1hLmxpbmVYMCx4MT1hLmxpbmVYMSx5MD1hLmxpbmVZMCx5MT1hLmxpbmVZMTthLmFuZ2xlPWEueCxkZWxldGUgYS54O2Euc3RhcnRBbmdsZT1hLngwLGRlbGV0ZSBhLngwO2EuZW5kQW5nbGU9YS54MSxkZWxldGUgYS54MTthLnJhZGl1cz1hLnksZGVsZXRlIGEueTthLmlubmVyUmFkaXVzPWEueTAsZGVsZXRlIGEueTA7YS5vdXRlclJhZGl1cz1hLnkxLGRlbGV0ZSBhLnkxO2EubGluZVN0YXJ0QW5nbGU9ZnVuY3Rpb24oKXtyZXR1cm4gbGluZVJhZGlhbCh4MCgpKX0sZGVsZXRlIGEubGluZVgwO2EubGluZUVuZEFuZ2xlPWZ1bmN0aW9uKCl7cmV0dXJuIGxpbmVSYWRpYWwoeDEoKSl9LGRlbGV0ZSBhLmxpbmVYMTthLmxpbmVJbm5lclJhZGl1cz1mdW5jdGlvbigpe3JldHVybiBsaW5lUmFkaWFsKHkwKCkpfSxkZWxldGUgYS5saW5lWTA7YS5saW5lT3V0ZXJSYWRpdXM9ZnVuY3Rpb24oKXtyZXR1cm4gbGluZVJhZGlhbCh5MSgpKX0sZGVsZXRlIGEubGluZVkxO2EuY3VydmU9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/YyhjdXJ2ZVJhZGlhbChfKSk6YygpLl9jdXJ2ZX07cmV0dXJuIGF9ZnVuY3Rpb24gcG9pbnRSYWRpYWwoeCx5KXtyZXR1cm5bKHk9K3kpKk1hdGguY29zKHgtPU1hdGguUEkvMikseSpNYXRoLnNpbih4KV19dmFyIHNsaWNlPUFycmF5LnByb3RvdHlwZS5zbGljZTtmdW5jdGlvbiBsaW5rU291cmNlKGQpe3JldHVybiBkLnNvdXJjZX1mdW5jdGlvbiBsaW5rVGFyZ2V0KGQpe3JldHVybiBkLnRhcmdldH1mdW5jdGlvbiBsaW5rKGN1cnZlKXt2YXIgc291cmNlPWxpbmtTb3VyY2UsdGFyZ2V0PWxpbmtUYXJnZXQseCQxPXgseSQxPXksY29udGV4dD1udWxsO2Z1bmN0aW9uIGxpbmsoKXt2YXIgYnVmZmVyLGFyZ3Y9c2xpY2UuY2FsbChhcmd1bWVudHMpLHM9c291cmNlLmFwcGx5KHRoaXMsYXJndiksdD10YXJnZXQuYXBwbHkodGhpcyxhcmd2KTtpZighY29udGV4dCljb250ZXh0PWJ1ZmZlcj1kM1BhdGgucGF0aCgpO2N1cnZlKGNvbnRleHQsK3gkMS5hcHBseSh0aGlzLChhcmd2WzBdPXMsYXJndikpLCt5JDEuYXBwbHkodGhpcyxhcmd2KSwreCQxLmFwcGx5KHRoaXMsKGFyZ3ZbMF09dCxhcmd2KSksK3kkMS5hcHBseSh0aGlzLGFyZ3YpKTtpZihidWZmZXIpcmV0dXJuIGNvbnRleHQ9bnVsbCxidWZmZXIrIiJ8fG51bGx9bGluay5zb3VyY2U9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHNvdXJjZT1fLGxpbmspOnNvdXJjZX07bGluay50YXJnZXQ9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRhcmdldD1fLGxpbmspOnRhcmdldH07bGluay54PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh4JDE9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGxpbmspOngkMX07bGluay55PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh5JDE9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLGxpbmspOnkkMX07bGluay5jb250ZXh0PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjb250ZXh0PV89PW51bGw/bnVsbDpfLGxpbmspOmNvbnRleHR9O3JldHVybiBsaW5rfWZ1bmN0aW9uIGN1cnZlSG9yaXpvbnRhbChjb250ZXh0LHgwLHkwLHgxLHkxKXtjb250ZXh0Lm1vdmVUbyh4MCx5MCk7Y29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwPSh4MCt4MSkvMix5MCx4MCx5MSx4MSx5MSl9ZnVuY3Rpb24gY3VydmVWZXJ0aWNhbChjb250ZXh0LHgwLHkwLHgxLHkxKXtjb250ZXh0Lm1vdmVUbyh4MCx5MCk7Y29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwLHkwPSh5MCt5MSkvMix4MSx5MCx4MSx5MSl9ZnVuY3Rpb24gY3VydmVSYWRpYWwkMShjb250ZXh0LHgwLHkwLHgxLHkxKXt2YXIgcDA9cG9pbnRSYWRpYWwoeDAseTApLHAxPXBvaW50UmFkaWFsKHgwLHkwPSh5MCt5MSkvMikscDI9cG9pbnRSYWRpYWwoeDEseTApLHAzPXBvaW50UmFkaWFsKHgxLHkxKTtjb250ZXh0Lm1vdmVUbyhwMFswXSxwMFsxXSk7Y29udGV4dC5iZXppZXJDdXJ2ZVRvKHAxWzBdLHAxWzFdLHAyWzBdLHAyWzFdLHAzWzBdLHAzWzFdKX1mdW5jdGlvbiBsaW5rSG9yaXpvbnRhbCgpe3JldHVybiBsaW5rKGN1cnZlSG9yaXpvbnRhbCl9ZnVuY3Rpb24gbGlua1ZlcnRpY2FsKCl7cmV0dXJuIGxpbmsoY3VydmVWZXJ0aWNhbCl9ZnVuY3Rpb24gbGlua1JhZGlhbCgpe3ZhciBsPWxpbmsoY3VydmVSYWRpYWwkMSk7bC5hbmdsZT1sLngsZGVsZXRlIGwueDtsLnJhZGl1cz1sLnksZGVsZXRlIGwueTtyZXR1cm4gbH12YXIgY2lyY2xlPXtkcmF3OmZ1bmN0aW9uKGNvbnRleHQsc2l6ZSl7dmFyIHI9TWF0aC5zcXJ0KHNpemUvcGkpO2NvbnRleHQubW92ZVRvKHIsMCk7Y29udGV4dC5hcmMoMCwwLHIsMCx0YXUpfX07dmFyIGNyb3NzPXtkcmF3OmZ1bmN0aW9uKGNvbnRleHQsc2l6ZSl7dmFyIHI9TWF0aC5zcXJ0KHNpemUvNSkvMjtjb250ZXh0Lm1vdmVUbygtMypyLC1yKTtjb250ZXh0LmxpbmVUbygtciwtcik7Y29udGV4dC5saW5lVG8oLXIsLTMqcik7Y29udGV4dC5saW5lVG8ociwtMypyKTtjb250ZXh0LmxpbmVUbyhyLC1yKTtjb250ZXh0LmxpbmVUbygzKnIsLXIpO2NvbnRleHQubGluZVRvKDMqcixyKTtjb250ZXh0LmxpbmVUbyhyLHIpO2NvbnRleHQubGluZVRvKHIsMypyKTtjb250ZXh0LmxpbmVUbygtciwzKnIpO2NvbnRleHQubGluZVRvKC1yLHIpO2NvbnRleHQubGluZVRvKC0zKnIscik7Y29udGV4dC5jbG9zZVBhdGgoKX19O3ZhciB0YW4zMD1NYXRoLnNxcnQoMS8zKSx0YW4zMF8yPXRhbjMwKjI7dmFyIGRpYW1vbmQ9e2RyYXc6ZnVuY3Rpb24oY29udGV4dCxzaXplKXt2YXIgeT1NYXRoLnNxcnQoc2l6ZS90YW4zMF8yKSx4PXkqdGFuMzA7Y29udGV4dC5tb3ZlVG8oMCwteSk7Y29udGV4dC5saW5lVG8oeCwwKTtjb250ZXh0LmxpbmVUbygwLHkpO2NvbnRleHQubGluZVRvKC14LDApO2NvbnRleHQuY2xvc2VQYXRoKCl9fTt2YXIga2E9Ljg5MDgxMzA5MTUyOTI4NTIsa3I9TWF0aC5zaW4ocGkvMTApL01hdGguc2luKDcqcGkvMTApLGt4PU1hdGguc2luKHRhdS8xMCkqa3Isa3k9LU1hdGguY29zKHRhdS8xMCkqa3I7dmFyIHN0YXI9e2RyYXc6ZnVuY3Rpb24oY29udGV4dCxzaXplKXt2YXIgcj1NYXRoLnNxcnQoc2l6ZSprYSkseD1reCpyLHk9a3kqcjtjb250ZXh0Lm1vdmVUbygwLC1yKTtjb250ZXh0LmxpbmVUbyh4LHkpO2Zvcih2YXIgaT0xO2k8NTsrK2kpe3ZhciBhPXRhdSppLzUsYz1NYXRoLmNvcyhhKSxzPU1hdGguc2luKGEpO2NvbnRleHQubGluZVRvKHMqciwtYypyKTtjb250ZXh0LmxpbmVUbyhjKngtcyp5LHMqeCtjKnkpfWNvbnRleHQuY2xvc2VQYXRoKCl9fTt2YXIgc3F1YXJlPXtkcmF3OmZ1bmN0aW9uKGNvbnRleHQsc2l6ZSl7dmFyIHc9TWF0aC5zcXJ0KHNpemUpLHg9LXcvMjtjb250ZXh0LnJlY3QoeCx4LHcsdyl9fTt2YXIgc3FydDM9TWF0aC5zcXJ0KDMpO3ZhciB0cmlhbmdsZT17ZHJhdzpmdW5jdGlvbihjb250ZXh0LHNpemUpe3ZhciB5PS1NYXRoLnNxcnQoc2l6ZS8oc3FydDMqMykpO2NvbnRleHQubW92ZVRvKDAseSoyKTtjb250ZXh0LmxpbmVUbygtc3FydDMqeSwteSk7Y29udGV4dC5saW5lVG8oc3FydDMqeSwteSk7Y29udGV4dC5jbG9zZVBhdGgoKX19O3ZhciBjPS0uNSxzPU1hdGguc3FydCgzKS8yLGs9MS9NYXRoLnNxcnQoMTIpLGE9KGsvMisxKSozO3ZhciB3eWU9e2RyYXc6ZnVuY3Rpb24oY29udGV4dCxzaXplKXt2YXIgcj1NYXRoLnNxcnQoc2l6ZS9hKSx4MD1yLzIseTA9ciprLHgxPXgwLHkxPXIqaytyLHgyPS14MSx5Mj15MTtjb250ZXh0Lm1vdmVUbyh4MCx5MCk7Y29udGV4dC5saW5lVG8oeDEseTEpO2NvbnRleHQubGluZVRvKHgyLHkyKTtjb250ZXh0LmxpbmVUbyhjKngwLXMqeTAscyp4MCtjKnkwKTtjb250ZXh0LmxpbmVUbyhjKngxLXMqeTEscyp4MStjKnkxKTtjb250ZXh0LmxpbmVUbyhjKngyLXMqeTIscyp4MitjKnkyKTtjb250ZXh0LmxpbmVUbyhjKngwK3MqeTAsYyp5MC1zKngwKTtjb250ZXh0LmxpbmVUbyhjKngxK3MqeTEsYyp5MS1zKngxKTtjb250ZXh0LmxpbmVUbyhjKngyK3MqeTIsYyp5Mi1zKngyKTtjb250ZXh0LmNsb3NlUGF0aCgpfX07dmFyIHN5bWJvbHM9W2NpcmNsZSxjcm9zcyxkaWFtb25kLHNxdWFyZSxzdGFyLHRyaWFuZ2xlLHd5ZV07ZnVuY3Rpb24gc3ltYm9sKCl7dmFyIHR5cGU9Y29uc3RhbnQoY2lyY2xlKSxzaXplPWNvbnN0YW50KDY0KSxjb250ZXh0PW51bGw7ZnVuY3Rpb24gc3ltYm9sKCl7dmFyIGJ1ZmZlcjtpZighY29udGV4dCljb250ZXh0PWJ1ZmZlcj1kM1BhdGgucGF0aCgpO3R5cGUuYXBwbHkodGhpcyxhcmd1bWVudHMpLmRyYXcoY29udGV4dCwrc2l6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpO2lmKGJ1ZmZlcilyZXR1cm4gY29udGV4dD1udWxsLGJ1ZmZlcisiInx8bnVsbH1zeW1ib2wudHlwZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odHlwZT10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudChfKSxzeW1ib2wpOnR5cGV9O3N5bWJvbC5zaXplPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhzaXplPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSxzeW1ib2wpOnNpemV9O3N5bWJvbC5jb250ZXh0PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjb250ZXh0PV89PW51bGw/bnVsbDpfLHN5bWJvbCk6Y29udGV4dH07cmV0dXJuIHN5bWJvbH1mdW5jdGlvbiBub29wKCl7fWZ1bmN0aW9uIHBvaW50KHRoYXQseCx5KXt0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oKDIqdGhhdC5feDArdGhhdC5feDEpLzMsKDIqdGhhdC5feTArdGhhdC5feTEpLzMsKHRoYXQuX3gwKzIqdGhhdC5feDEpLzMsKHRoYXQuX3kwKzIqdGhhdC5feTEpLzMsKHRoYXQuX3gwKzQqdGhhdC5feDEreCkvNiwodGhhdC5feTArNCp0aGF0Ll95MSt5KS82KX1mdW5jdGlvbiBCYXNpcyhjb250ZXh0KXt0aGlzLl9jb250ZXh0PWNvbnRleHR9QmFzaXMucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feTA9dGhpcy5feTE9TmFOO3RoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMzpwb2ludCh0aGlzLHRoaXMuX3gxLHRoaXMuX3kxKTsvLyBwcm9jZWVkCmNhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSx0aGlzLl95MSk7YnJlYWt9aWYodGhpcy5fbGluZXx8dGhpcy5fbGluZSE9PTAmJnRoaXMuX3BvaW50PT09MSl0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO3RoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih4LHkpe3g9K3gseT0reTtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xO3RoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8oeCx5KTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LHkpO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zO3RoaXMuX2NvbnRleHQubGluZVRvKCg1KnRoaXMuX3gwK3RoaXMuX3gxKS82LCg1KnRoaXMuX3kwK3RoaXMuX3kxKS82KTsvLyBwcm9jZWVkCmRlZmF1bHQ6cG9pbnQodGhpcyx4LHkpO2JyZWFrfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXg7dGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9eX19O2Z1bmN0aW9uIGJhc2lzKGNvbnRleHQpe3JldHVybiBuZXcgQmFzaXMoY29udGV4dCl9ZnVuY3Rpb24gQmFzaXNDbG9zZWQoY29udGV4dCl7dGhpcy5fY29udGV4dD1jb250ZXh0fUJhc2lzQ2xvc2VkLnByb3RvdHlwZT17YXJlYVN0YXJ0Om5vb3AsYXJlYUVuZDpub29wLGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3gzPXRoaXMuX3g0PXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPXRoaXMuX3kzPXRoaXMuX3k0PU5hTjt0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDE6e3RoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLHRoaXMuX3kyKTt0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrfWNhc2UgMjp7dGhpcy5fY29udGV4dC5tb3ZlVG8oKHRoaXMuX3gyKzIqdGhpcy5feDMpLzMsKHRoaXMuX3kyKzIqdGhpcy5feTMpLzMpO3RoaXMuX2NvbnRleHQubGluZVRvKCh0aGlzLl94MysyKnRoaXMuX3gyKS8zLCh0aGlzLl95MysyKnRoaXMuX3kyKS8zKTt0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrfWNhc2UgMzp7dGhpcy5wb2ludCh0aGlzLl94Mix0aGlzLl95Mik7dGhpcy5wb2ludCh0aGlzLl94Myx0aGlzLl95Myk7dGhpcy5wb2ludCh0aGlzLl94NCx0aGlzLl95NCk7YnJlYWt9fX0scG9pbnQ6ZnVuY3Rpb24oeCx5KXt4PSt4LHk9K3k7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MTt0aGlzLl94Mj14LHRoaXMuX3kyPXk7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7dGhpcy5feDM9eCx0aGlzLl95Mz15O2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zO3RoaXMuX3g0PXgsdGhpcy5feTQ9eTt0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDArNCp0aGlzLl94MSt4KS82LCh0aGlzLl95MCs0KnRoaXMuX3kxK3kpLzYpO2JyZWFrO2RlZmF1bHQ6cG9pbnQodGhpcyx4LHkpO2JyZWFrfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXg7dGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9eX19O2Z1bmN0aW9uIGJhc2lzQ2xvc2VkKGNvbnRleHQpe3JldHVybiBuZXcgQmFzaXNDbG9zZWQoY29udGV4dCl9ZnVuY3Rpb24gQmFzaXNPcGVuKGNvbnRleHQpe3RoaXMuX2NvbnRleHQ9Y29udGV4dH1CYXNpc09wZW4ucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feTA9dGhpcy5feTE9TmFOO3RoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtpZih0aGlzLl9saW5lfHx0aGlzLl9saW5lIT09MCYmdGhpcy5fcG9pbnQ9PT0zKXRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7dGhpcy5fbGluZT0xLXRoaXMuX2xpbmV9LHBvaW50OmZ1bmN0aW9uKHgseSl7eD0reCx5PSt5O3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7dmFyIHgwPSh0aGlzLl94MCs0KnRoaXMuX3gxK3gpLzYseTA9KHRoaXMuX3kwKzQqdGhpcy5feTEreSkvNjt0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHgwLHkwKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh4MCx5MCk7YnJlYWs7Y2FzZSAzOnRoaXMuX3BvaW50PTQ7Ly8gcHJvY2VlZApkZWZhdWx0OnBvaW50KHRoaXMseCx5KTticmVha310aGlzLl94MD10aGlzLl94MSx0aGlzLl94MT14O3RoaXMuX3kwPXRoaXMuX3kxLHRoaXMuX3kxPXl9fTtmdW5jdGlvbiBiYXNpc09wZW4oY29udGV4dCl7cmV0dXJuIG5ldyBCYXNpc09wZW4oY29udGV4dCl9ZnVuY3Rpb24gQnVuZGxlKGNvbnRleHQsYmV0YSl7dGhpcy5fYmFzaXM9bmV3IEJhc2lzKGNvbnRleHQpO3RoaXMuX2JldGE9YmV0YX1CdW5kbGUucHJvdG90eXBlPXtsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94PVtdO3RoaXMuX3k9W107dGhpcy5fYmFzaXMubGluZVN0YXJ0KCl9LGxpbmVFbmQ6ZnVuY3Rpb24oKXt2YXIgeD10aGlzLl94LHk9dGhpcy5feSxqPXgubGVuZ3RoLTE7aWYoaj4wKXt2YXIgeDA9eFswXSx5MD15WzBdLGR4PXhbal0teDAsZHk9eVtqXS15MCxpPS0xLHQ7d2hpbGUoKytpPD1qKXt0PWkvajt0aGlzLl9iYXNpcy5wb2ludCh0aGlzLl9iZXRhKnhbaV0rKDEtdGhpcy5fYmV0YSkqKHgwK3QqZHgpLHRoaXMuX2JldGEqeVtpXSsoMS10aGlzLl9iZXRhKSooeTArdCpkeSkpfX10aGlzLl94PXRoaXMuX3k9bnVsbDt0aGlzLl9iYXNpcy5saW5lRW5kKCl9LHBvaW50OmZ1bmN0aW9uKHgseSl7dGhpcy5feC5wdXNoKCt4KTt0aGlzLl95LnB1c2goK3kpfX07dmFyIGJ1bmRsZT1mdW5jdGlvbiBjdXN0b20oYmV0YSl7ZnVuY3Rpb24gYnVuZGxlKGNvbnRleHQpe3JldHVybiBiZXRhPT09MT9uZXcgQmFzaXMoY29udGV4dCk6bmV3IEJ1bmRsZShjb250ZXh0LGJldGEpfWJ1bmRsZS5iZXRhPWZ1bmN0aW9uKGJldGEpe3JldHVybiBjdXN0b20oK2JldGEpfTtyZXR1cm4gYnVuZGxlfSguODUpO2Z1bmN0aW9uIHBvaW50JDEodGhhdCx4LHkpe3RoYXQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh0aGF0Ll94MSt0aGF0Ll9rKih0aGF0Ll94Mi10aGF0Ll94MCksdGhhdC5feTErdGhhdC5fayoodGhhdC5feTItdGhhdC5feTApLHRoYXQuX3gyK3RoYXQuX2sqKHRoYXQuX3gxLXgpLHRoYXQuX3kyK3RoYXQuX2sqKHRoYXQuX3kxLXkpLHRoYXQuX3gyLHRoYXQuX3kyKX1mdW5jdGlvbiBDYXJkaW5hbChjb250ZXh0LHRlbnNpb24pe3RoaXMuX2NvbnRleHQ9Y29udGV4dDt0aGlzLl9rPSgxLXRlbnNpb24pLzZ9Q2FyZGluYWwucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feDI9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5feTI9TmFOO3RoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMjp0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik7YnJlYWs7Y2FzZSAzOnBvaW50JDEodGhpcyx0aGlzLl94MSx0aGlzLl95MSk7YnJlYWt9aWYodGhpcy5fbGluZXx8dGhpcy5fbGluZSE9PTAmJnRoaXMuX3BvaW50PT09MSl0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO3RoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih4LHkpe3g9K3gseT0reTtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xO3RoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8oeCx5KTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LHkpO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO3RoaXMuX3gxPXgsdGhpcy5feTE9eTticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9MzsvLyBwcm9jZWVkCmRlZmF1bHQ6cG9pbnQkMSh0aGlzLHgseSk7YnJlYWt9dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9eDt0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj15fX07dmFyIGNhcmRpbmFsPWZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKXtmdW5jdGlvbiBjYXJkaW5hbChjb250ZXh0KXtyZXR1cm4gbmV3IENhcmRpbmFsKGNvbnRleHQsdGVuc2lvbil9Y2FyZGluYWwudGVuc2lvbj1mdW5jdGlvbih0ZW5zaW9uKXtyZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKX07cmV0dXJuIGNhcmRpbmFsfSgwKTtmdW5jdGlvbiBDYXJkaW5hbENsb3NlZChjb250ZXh0LHRlbnNpb24pe3RoaXMuX2NvbnRleHQ9Y29udGV4dDt0aGlzLl9rPSgxLXRlbnNpb24pLzZ9Q2FyZGluYWxDbG9zZWQucHJvdG90eXBlPXthcmVhU3RhcnQ6bm9vcCxhcmVhRW5kOm5vb3AsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feDA9dGhpcy5feDE9dGhpcy5feDI9dGhpcy5feDM9dGhpcy5feDQ9dGhpcy5feDU9dGhpcy5feTA9dGhpcy5feTE9dGhpcy5feTI9dGhpcy5feTM9dGhpcy5feTQ9dGhpcy5feTU9TmFOO3RoaXMuX3BvaW50PTB9LGxpbmVFbmQ6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMTp7dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsdGhpcy5feTMpO3RoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7YnJlYWt9Y2FzZSAyOnt0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Myx0aGlzLl95Myk7dGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTticmVha31jYXNlIDM6e3RoaXMucG9pbnQodGhpcy5feDMsdGhpcy5feTMpO3RoaXMucG9pbnQodGhpcy5feDQsdGhpcy5feTQpO3RoaXMucG9pbnQodGhpcy5feDUsdGhpcy5feTUpO2JyZWFrfX19LHBvaW50OmZ1bmN0aW9uKHgseSl7eD0reCx5PSt5O3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7dGhpcy5feDM9eCx0aGlzLl95Mz15O2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO3RoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0PXgsdGhpcy5feTQ9eSk7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7dGhpcy5feDU9eCx0aGlzLl95NT15O2JyZWFrO2RlZmF1bHQ6cG9pbnQkMSh0aGlzLHgseSk7YnJlYWt9dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9eDt0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj15fX07dmFyIGNhcmRpbmFsQ2xvc2VkPWZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKXtmdW5jdGlvbiBjYXJkaW5hbChjb250ZXh0KXtyZXR1cm4gbmV3IENhcmRpbmFsQ2xvc2VkKGNvbnRleHQsdGVuc2lvbil9Y2FyZGluYWwudGVuc2lvbj1mdW5jdGlvbih0ZW5zaW9uKXtyZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKX07cmV0dXJuIGNhcmRpbmFsfSgwKTtmdW5jdGlvbiBDYXJkaW5hbE9wZW4oY29udGV4dCx0ZW5zaW9uKXt0aGlzLl9jb250ZXh0PWNvbnRleHQ7dGhpcy5faz0oMS10ZW5zaW9uKS82fUNhcmRpbmFsT3Blbi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj1OYU47dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe2lmKHRoaXMuX2xpbmV8fHRoaXMuX2xpbmUhPT0wJiZ0aGlzLl9wb2ludD09PTMpdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTt0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24oeCx5KXt4PSt4LHk9K3k7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9Mzt0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLHRoaXMuX3kyKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94Mix0aGlzLl95Mik7YnJlYWs7Y2FzZSAzOnRoaXMuX3BvaW50PTQ7Ly8gcHJvY2VlZApkZWZhdWx0OnBvaW50JDEodGhpcyx4LHkpO2JyZWFrfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXg7dGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9eX19O3ZhciBjYXJkaW5hbE9wZW49ZnVuY3Rpb24gY3VzdG9tKHRlbnNpb24pe2Z1bmN0aW9uIGNhcmRpbmFsKGNvbnRleHQpe3JldHVybiBuZXcgQ2FyZGluYWxPcGVuKGNvbnRleHQsdGVuc2lvbil9Y2FyZGluYWwudGVuc2lvbj1mdW5jdGlvbih0ZW5zaW9uKXtyZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKX07cmV0dXJuIGNhcmRpbmFsfSgwKTtmdW5jdGlvbiBwb2ludCQyKHRoYXQseCx5KXt2YXIgeDE9dGhhdC5feDEseTE9dGhhdC5feTEseDI9dGhhdC5feDIseTI9dGhhdC5feTI7aWYodGhhdC5fbDAxX2E+ZXBzaWxvbil7dmFyIGE9Mip0aGF0Ll9sMDFfMmErMyp0aGF0Ll9sMDFfYSp0aGF0Ll9sMTJfYSt0aGF0Ll9sMTJfMmEsbj0zKnRoYXQuX2wwMV9hKih0aGF0Ll9sMDFfYSt0aGF0Ll9sMTJfYSk7eDE9KHgxKmEtdGhhdC5feDAqdGhhdC5fbDEyXzJhK3RoYXQuX3gyKnRoYXQuX2wwMV8yYSkvbjt5MT0oeTEqYS10aGF0Ll95MCp0aGF0Ll9sMTJfMmErdGhhdC5feTIqdGhhdC5fbDAxXzJhKS9ufWlmKHRoYXQuX2wyM19hPmVwc2lsb24pe3ZhciBiPTIqdGhhdC5fbDIzXzJhKzMqdGhhdC5fbDIzX2EqdGhhdC5fbDEyX2ErdGhhdC5fbDEyXzJhLG09Myp0aGF0Ll9sMjNfYSoodGhhdC5fbDIzX2ErdGhhdC5fbDEyX2EpO3gyPSh4MipiK3RoYXQuX3gxKnRoYXQuX2wyM18yYS14KnRoYXQuX2wxMl8yYSkvbTt5Mj0oeTIqYit0aGF0Ll95MSp0aGF0Ll9sMjNfMmEteSp0aGF0Ll9sMTJfMmEpL219dGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgxLHkxLHgyLHkyLHRoYXQuX3gyLHRoYXQuX3kyKX1mdW5jdGlvbiBDYXRtdWxsUm9tKGNvbnRleHQsYWxwaGEpe3RoaXMuX2NvbnRleHQ9Y29udGV4dDt0aGlzLl9hbHBoYT1hbHBoYX1DYXRtdWxsUm9tLnByb3RvdHlwZT17YXJlYVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3gyPXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3kyPU5hTjt0aGlzLl9sMDFfYT10aGlzLl9sMTJfYT10aGlzLl9sMjNfYT10aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhPXRoaXMuX2wyM18yYT10aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDI6dGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsdGhpcy5feTIpO2JyZWFrO2Nhc2UgMzp0aGlzLnBvaW50KHRoaXMuX3gyLHRoaXMuX3kyKTticmVha31pZih0aGlzLl9saW5lfHx0aGlzLl9saW5lIT09MCYmdGhpcy5fcG9pbnQ9PT0xKXRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7dGhpcy5fbGluZT0xLXRoaXMuX2xpbmV9LHBvaW50OmZ1bmN0aW9uKHgseSl7eD0reCx5PSt5O2lmKHRoaXMuX3BvaW50KXt2YXIgeDIzPXRoaXMuX3gyLXgseTIzPXRoaXMuX3kyLXk7dGhpcy5fbDIzX2E9TWF0aC5zcXJ0KHRoaXMuX2wyM18yYT1NYXRoLnBvdyh4MjMqeDIzK3kyMyp5MjMsdGhpcy5fYWxwaGEpKX1zd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xO3RoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8oeCx5KTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LHkpO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO2JyZWFrO2Nhc2UgMjp0aGlzLl9wb2ludD0zOy8vIHByb2NlZWQKZGVmYXVsdDpwb2ludCQyKHRoaXMseCx5KTticmVha310aGlzLl9sMDFfYT10aGlzLl9sMTJfYSx0aGlzLl9sMTJfYT10aGlzLl9sMjNfYTt0aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhLHRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmE7dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9eDt0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj15fX07dmFyIGNhdG11bGxSb209ZnVuY3Rpb24gY3VzdG9tKGFscGhhKXtmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpe3JldHVybiBhbHBoYT9uZXcgQ2F0bXVsbFJvbShjb250ZXh0LGFscGhhKTpuZXcgQ2FyZGluYWwoY29udGV4dCwwKX1jYXRtdWxsUm9tLmFscGhhPWZ1bmN0aW9uKGFscGhhKXtyZXR1cm4gY3VzdG9tKCthbHBoYSl9O3JldHVybiBjYXRtdWxsUm9tfSguNSk7ZnVuY3Rpb24gQ2F0bXVsbFJvbUNsb3NlZChjb250ZXh0LGFscGhhKXt0aGlzLl9jb250ZXh0PWNvbnRleHQ7dGhpcy5fYWxwaGE9YWxwaGF9Q2F0bXVsbFJvbUNsb3NlZC5wcm90b3R5cGU9e2FyZWFTdGFydDpub29wLGFyZWFFbmQ6bm9vcCxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl94Mz10aGlzLl94ND10aGlzLl94NT10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj10aGlzLl95Mz10aGlzLl95ND10aGlzLl95NT1OYU47dGhpcy5fbDAxX2E9dGhpcy5fbDEyX2E9dGhpcy5fbDIzX2E9dGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmE9dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAxOnt0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94Myx0aGlzLl95Myk7dGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTticmVha31jYXNlIDI6e3RoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLHRoaXMuX3kzKTt0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO2JyZWFrfWNhc2UgMzp7dGhpcy5wb2ludCh0aGlzLl94Myx0aGlzLl95Myk7dGhpcy5wb2ludCh0aGlzLl94NCx0aGlzLl95NCk7dGhpcy5wb2ludCh0aGlzLl94NSx0aGlzLl95NSk7YnJlYWt9fX0scG9pbnQ6ZnVuY3Rpb24oeCx5KXt4PSt4LHk9K3k7aWYodGhpcy5fcG9pbnQpe3ZhciB4MjM9dGhpcy5feDIteCx5MjM9dGhpcy5feTIteTt0aGlzLl9sMjNfYT1NYXRoLnNxcnQodGhpcy5fbDIzXzJhPU1hdGgucG93KHgyMyp4MjMreTIzKnkyMyx0aGlzLl9hbHBoYSkpfXN3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7dGhpcy5feDM9eCx0aGlzLl95Mz15O2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yO3RoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0PXgsdGhpcy5feTQ9eSk7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7dGhpcy5feDU9eCx0aGlzLl95NT15O2JyZWFrO2RlZmF1bHQ6cG9pbnQkMih0aGlzLHgseSk7YnJlYWt9dGhpcy5fbDAxX2E9dGhpcy5fbDEyX2EsdGhpcy5fbDEyX2E9dGhpcy5fbDIzX2E7dGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYSx0aGlzLl9sMTJfMmE9dGhpcy5fbDIzXzJhO3RoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXRoaXMuX3gyLHRoaXMuX3gyPXg7dGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9dGhpcy5feTIsdGhpcy5feTI9eX19O3ZhciBjYXRtdWxsUm9tQ2xvc2VkPWZ1bmN0aW9uIGN1c3RvbShhbHBoYSl7ZnVuY3Rpb24gY2F0bXVsbFJvbShjb250ZXh0KXtyZXR1cm4gYWxwaGE/bmV3IENhdG11bGxSb21DbG9zZWQoY29udGV4dCxhbHBoYSk6bmV3IENhcmRpbmFsQ2xvc2VkKGNvbnRleHQsMCl9Y2F0bXVsbFJvbS5hbHBoYT1mdW5jdGlvbihhbHBoYSl7cmV0dXJuIGN1c3RvbSgrYWxwaGEpfTtyZXR1cm4gY2F0bXVsbFJvbX0oLjUpO2Z1bmN0aW9uIENhdG11bGxSb21PcGVuKGNvbnRleHQsYWxwaGEpe3RoaXMuX2NvbnRleHQ9Y29udGV4dDt0aGlzLl9hbHBoYT1hbHBoYX1DYXRtdWxsUm9tT3Blbi5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94MD10aGlzLl94MT10aGlzLl94Mj10aGlzLl95MD10aGlzLl95MT10aGlzLl95Mj1OYU47dGhpcy5fbDAxX2E9dGhpcy5fbDEyX2E9dGhpcy5fbDIzX2E9dGhpcy5fbDAxXzJhPXRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmE9dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe2lmKHRoaXMuX2xpbmV8fHRoaXMuX2xpbmUhPT0wJiZ0aGlzLl9wb2ludD09PTMpdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTt0aGlzLl9saW5lPTEtdGhpcy5fbGluZX0scG9pbnQ6ZnVuY3Rpb24oeCx5KXt4PSt4LHk9K3k7aWYodGhpcy5fcG9pbnQpe3ZhciB4MjM9dGhpcy5feDIteCx5MjM9dGhpcy5feTIteTt0aGlzLl9sMjNfYT1NYXRoLnNxcnQodGhpcy5fbDIzXzJhPU1hdGgucG93KHgyMyp4MjMreTIzKnkyMyx0aGlzLl9hbHBoYSkpfXN3aXRjaCh0aGlzLl9wb2ludCl7Y2FzZSAwOnRoaXMuX3BvaW50PTE7YnJlYWs7Y2FzZSAxOnRoaXMuX3BvaW50PTI7YnJlYWs7Y2FzZSAyOnRoaXMuX3BvaW50PTM7dGhpcy5fbGluZT90aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94Mix0aGlzLl95Mik6dGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsdGhpcy5feTIpO2JyZWFrO2Nhc2UgMzp0aGlzLl9wb2ludD00Oy8vIHByb2NlZWQKZGVmYXVsdDpwb2ludCQyKHRoaXMseCx5KTticmVha310aGlzLl9sMDFfYT10aGlzLl9sMTJfYSx0aGlzLl9sMTJfYT10aGlzLl9sMjNfYTt0aGlzLl9sMDFfMmE9dGhpcy5fbDEyXzJhLHRoaXMuX2wxMl8yYT10aGlzLl9sMjNfMmE7dGhpcy5feDA9dGhpcy5feDEsdGhpcy5feDE9dGhpcy5feDIsdGhpcy5feDI9eDt0aGlzLl95MD10aGlzLl95MSx0aGlzLl95MT10aGlzLl95Mix0aGlzLl95Mj15fX07dmFyIGNhdG11bGxSb21PcGVuPWZ1bmN0aW9uIGN1c3RvbShhbHBoYSl7ZnVuY3Rpb24gY2F0bXVsbFJvbShjb250ZXh0KXtyZXR1cm4gYWxwaGE/bmV3IENhdG11bGxSb21PcGVuKGNvbnRleHQsYWxwaGEpOm5ldyBDYXJkaW5hbE9wZW4oY29udGV4dCwwKX1jYXRtdWxsUm9tLmFscGhhPWZ1bmN0aW9uKGFscGhhKXtyZXR1cm4gY3VzdG9tKCthbHBoYSl9O3JldHVybiBjYXRtdWxsUm9tfSguNSk7ZnVuY3Rpb24gTGluZWFyQ2xvc2VkKGNvbnRleHQpe3RoaXMuX2NvbnRleHQ9Y29udGV4dH1MaW5lYXJDbG9zZWQucHJvdG90eXBlPXthcmVhU3RhcnQ6bm9vcCxhcmVhRW5kOm5vb3AsbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fcG9pbnQ9MH0sbGluZUVuZDpmdW5jdGlvbigpe2lmKHRoaXMuX3BvaW50KXRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCl9LHBvaW50OmZ1bmN0aW9uKHgseSl7eD0reCx5PSt5O2lmKHRoaXMuX3BvaW50KXRoaXMuX2NvbnRleHQubGluZVRvKHgseSk7ZWxzZSB0aGlzLl9wb2ludD0xLHRoaXMuX2NvbnRleHQubW92ZVRvKHgseSl9fTtmdW5jdGlvbiBsaW5lYXJDbG9zZWQoY29udGV4dCl7cmV0dXJuIG5ldyBMaW5lYXJDbG9zZWQoY29udGV4dCl9ZnVuY3Rpb24gc2lnbih4KXtyZXR1cm4geDwwPy0xOjF9Ci8vIENhbGN1bGF0ZSB0aGUgc2xvcGVzIG9mIHRoZSB0YW5nZW50cyAoSGVybWl0ZS10eXBlIGludGVycG9sYXRpb24pIGJhc2VkIG9uCi8vIHRoZSBmb2xsb3dpbmcgcGFwZXI6IFN0ZWZmZW4sIE0uIDE5OTAuIEEgU2ltcGxlIE1ldGhvZCBmb3IgTW9ub3RvbmljCi8vIEludGVycG9sYXRpb24gaW4gT25lIERpbWVuc2lvbi4gQXN0cm9ub215IGFuZCBBc3Ryb3BoeXNpY3MsIFZvbC4gMjM5LCBOTy4KLy8gTk9WKElJKSwgUC4gNDQzLCAxOTkwLgpmdW5jdGlvbiBzbG9wZTModGhhdCx4Mix5Mil7dmFyIGgwPXRoYXQuX3gxLXRoYXQuX3gwLGgxPXgyLXRoYXQuX3gxLHMwPSh0aGF0Ll95MS10aGF0Ll95MCkvKGgwfHxoMTwwJiYtMCksczE9KHkyLXRoYXQuX3kxKS8oaDF8fGgwPDAmJi0wKSxwPShzMCpoMStzMSpoMCkvKGgwK2gxKTtyZXR1cm4oc2lnbihzMCkrc2lnbihzMSkpKk1hdGgubWluKE1hdGguYWJzKHMwKSxNYXRoLmFicyhzMSksLjUqTWF0aC5hYnMocCkpfHwwfQovLyBDYWxjdWxhdGUgYSBvbmUtc2lkZWQgc2xvcGUuCmZ1bmN0aW9uIHNsb3BlMih0aGF0LHQpe3ZhciBoPXRoYXQuX3gxLXRoYXQuX3gwO3JldHVybiBoPygzKih0aGF0Ll95MS10aGF0Ll95MCkvaC10KS8yOnR9Ci8vIEFjY29yZGluZyB0byBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DdWJpY19IZXJtaXRlX3NwbGluZSNSZXByZXNlbnRhdGlvbnMKLy8gInlvdSBjYW4gZXhwcmVzcyBjdWJpYyBIZXJtaXRlIGludGVycG9sYXRpb24gaW4gdGVybXMgb2YgY3ViaWMgQsOpemllciBjdXJ2ZXMKLy8gd2l0aCByZXNwZWN0IHRvIHRoZSBmb3VyIHZhbHVlcyBwMCwgcDAgKyBtMCAvIDMsIHAxIC0gbTEgLyAzLCBwMSIuCmZ1bmN0aW9uIHBvaW50JDModGhhdCx0MCx0MSl7dmFyIHgwPXRoYXQuX3gwLHkwPXRoYXQuX3kwLHgxPXRoYXQuX3gxLHkxPXRoYXQuX3kxLGR4PSh4MS14MCkvMzt0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oeDArZHgseTArZHgqdDAseDEtZHgseTEtZHgqdDEseDEseTEpfWZ1bmN0aW9uIE1vbm90b25lWChjb250ZXh0KXt0aGlzLl9jb250ZXh0PWNvbnRleHR9TW9ub3RvbmVYLnByb3RvdHlwZT17YXJlYVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5fbGluZT0wfSxhcmVhRW5kOmZ1bmN0aW9uKCl7dGhpcy5fbGluZT1OYU59LGxpbmVTdGFydDpmdW5jdGlvbigpe3RoaXMuX3gwPXRoaXMuX3gxPXRoaXMuX3kwPXRoaXMuX3kxPXRoaXMuX3QwPU5hTjt0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDI6dGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsdGhpcy5feTEpO2JyZWFrO2Nhc2UgMzpwb2ludCQzKHRoaXMsdGhpcy5fdDAsc2xvcGUyKHRoaXMsdGhpcy5fdDApKTticmVha31pZih0aGlzLl9saW5lfHx0aGlzLl9saW5lIT09MCYmdGhpcy5fcG9pbnQ9PT0xKXRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7dGhpcy5fbGluZT0xLXRoaXMuX2xpbmV9LHBvaW50OmZ1bmN0aW9uKHgseSl7dmFyIHQxPU5hTjt4PSt4LHk9K3k7aWYoeD09PXRoaXMuX3gxJiZ5PT09dGhpcy5feTEpcmV0dXJuOy8vIElnbm9yZSBjb2luY2lkZW50IHBvaW50cy4Kc3dpdGNoKHRoaXMuX3BvaW50KXtjYXNlIDA6dGhpcy5fcG9pbnQ9MTt0aGlzLl9saW5lP3RoaXMuX2NvbnRleHQubGluZVRvKHgseSk6dGhpcy5fY29udGV4dC5tb3ZlVG8oeCx5KTticmVhaztjYXNlIDE6dGhpcy5fcG9pbnQ9MjticmVhaztjYXNlIDI6dGhpcy5fcG9pbnQ9Mztwb2ludCQzKHRoaXMsc2xvcGUyKHRoaXMsdDE9c2xvcGUzKHRoaXMseCx5KSksdDEpO2JyZWFrO2RlZmF1bHQ6cG9pbnQkMyh0aGlzLHRoaXMuX3QwLHQxPXNsb3BlMyh0aGlzLHgseSkpO2JyZWFrfXRoaXMuX3gwPXRoaXMuX3gxLHRoaXMuX3gxPXg7dGhpcy5feTA9dGhpcy5feTEsdGhpcy5feTE9eTt0aGlzLl90MD10MX19O2Z1bmN0aW9uIE1vbm90b25lWShjb250ZXh0KXt0aGlzLl9jb250ZXh0PW5ldyBSZWZsZWN0Q29udGV4dChjb250ZXh0KX0oTW9ub3RvbmVZLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKE1vbm90b25lWC5wcm90b3R5cGUpKS5wb2ludD1mdW5jdGlvbih4LHkpe01vbm90b25lWC5wcm90b3R5cGUucG9pbnQuY2FsbCh0aGlzLHkseCl9O2Z1bmN0aW9uIFJlZmxlY3RDb250ZXh0KGNvbnRleHQpe3RoaXMuX2NvbnRleHQ9Y29udGV4dH1SZWZsZWN0Q29udGV4dC5wcm90b3R5cGU9e21vdmVUbzpmdW5jdGlvbih4LHkpe3RoaXMuX2NvbnRleHQubW92ZVRvKHkseCl9LGNsb3NlUGF0aDpmdW5jdGlvbigpe3RoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCl9LGxpbmVUbzpmdW5jdGlvbih4LHkpe3RoaXMuX2NvbnRleHQubGluZVRvKHkseCl9LGJlemllckN1cnZlVG86ZnVuY3Rpb24oeDEseTEseDIseTIseCx5KXt0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8oeTEseDEseTIseDIseSx4KX19O2Z1bmN0aW9uIG1vbm90b25lWChjb250ZXh0KXtyZXR1cm4gbmV3IE1vbm90b25lWChjb250ZXh0KX1mdW5jdGlvbiBtb25vdG9uZVkoY29udGV4dCl7cmV0dXJuIG5ldyBNb25vdG9uZVkoY29udGV4dCl9ZnVuY3Rpb24gTmF0dXJhbChjb250ZXh0KXt0aGlzLl9jb250ZXh0PWNvbnRleHR9TmF0dXJhbC5wcm90b3R5cGU9e2FyZWFTdGFydDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9MH0sYXJlYUVuZDpmdW5jdGlvbigpe3RoaXMuX2xpbmU9TmFOfSxsaW5lU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl94PVtdO3RoaXMuX3k9W119LGxpbmVFbmQ6ZnVuY3Rpb24oKXt2YXIgeD10aGlzLl94LHk9dGhpcy5feSxuPXgubGVuZ3RoO2lmKG4pe3RoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8oeFswXSx5WzBdKTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh4WzBdLHlbMF0pO2lmKG49PT0yKXt0aGlzLl9jb250ZXh0LmxpbmVUbyh4WzFdLHlbMV0pfWVsc2V7dmFyIHB4PWNvbnRyb2xQb2ludHMoeCkscHk9Y29udHJvbFBvaW50cyh5KTtmb3IodmFyIGkwPTAsaTE9MTtpMTxuOysraTAsKytpMSl7dGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHB4WzBdW2kwXSxweVswXVtpMF0scHhbMV1baTBdLHB5WzFdW2kwXSx4W2kxXSx5W2kxXSl9fX1pZih0aGlzLl9saW5lfHx0aGlzLl9saW5lIT09MCYmbj09PTEpdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTt0aGlzLl9saW5lPTEtdGhpcy5fbGluZTt0aGlzLl94PXRoaXMuX3k9bnVsbH0scG9pbnQ6ZnVuY3Rpb24oeCx5KXt0aGlzLl94LnB1c2goK3gpO3RoaXMuX3kucHVzaCgreSl9fTsKLy8gU2VlIGh0dHBzOi8vd3d3LnBhcnRpY2xlaW5jZWxsLmNvbS8yMDEyL2Jlemllci1zcGxpbmVzLyBmb3IgZGVyaXZhdGlvbi4KZnVuY3Rpb24gY29udHJvbFBvaW50cyh4KXt2YXIgaSxuPXgubGVuZ3RoLTEsbSxhPW5ldyBBcnJheShuKSxiPW5ldyBBcnJheShuKSxyPW5ldyBBcnJheShuKTthWzBdPTAsYlswXT0yLHJbMF09eFswXSsyKnhbMV07Zm9yKGk9MTtpPG4tMTsrK2kpYVtpXT0xLGJbaV09NCxyW2ldPTQqeFtpXSsyKnhbaSsxXTthW24tMV09MixiW24tMV09NyxyW24tMV09OCp4W24tMV0reFtuXTtmb3IoaT0xO2k8bjsrK2kpbT1hW2ldL2JbaS0xXSxiW2ldLT1tLHJbaV0tPW0qcltpLTFdO2Fbbi0xXT1yW24tMV0vYltuLTFdO2ZvcihpPW4tMjtpPj0wOy0taSlhW2ldPShyW2ldLWFbaSsxXSkvYltpXTtiW24tMV09KHhbbl0rYVtuLTFdKS8yO2ZvcihpPTA7aTxuLTE7KytpKWJbaV09Mip4W2krMV0tYVtpKzFdO3JldHVyblthLGJdfWZ1bmN0aW9uIG5hdHVyYWwoY29udGV4dCl7cmV0dXJuIG5ldyBOYXR1cmFsKGNvbnRleHQpfWZ1bmN0aW9uIFN0ZXAoY29udGV4dCx0KXt0aGlzLl9jb250ZXh0PWNvbnRleHQ7dGhpcy5fdD10fVN0ZXAucHJvdG90eXBlPXthcmVhU3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPTB9LGFyZWFFbmQ6ZnVuY3Rpb24oKXt0aGlzLl9saW5lPU5hTn0sbGluZVN0YXJ0OmZ1bmN0aW9uKCl7dGhpcy5feD10aGlzLl95PU5hTjt0aGlzLl9wb2ludD0wfSxsaW5lRW5kOmZ1bmN0aW9uKCl7aWYoMDx0aGlzLl90JiZ0aGlzLl90PDEmJnRoaXMuX3BvaW50PT09Mil0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94LHRoaXMuX3kpO2lmKHRoaXMuX2xpbmV8fHRoaXMuX2xpbmUhPT0wJiZ0aGlzLl9wb2ludD09PTEpdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtpZih0aGlzLl9saW5lPj0wKXRoaXMuX3Q9MS10aGlzLl90LHRoaXMuX2xpbmU9MS10aGlzLl9saW5lfSxwb2ludDpmdW5jdGlvbih4LHkpe3g9K3gseT0reTtzd2l0Y2godGhpcy5fcG9pbnQpe2Nhc2UgMDp0aGlzLl9wb2ludD0xO3RoaXMuX2xpbmU/dGhpcy5fY29udGV4dC5saW5lVG8oeCx5KTp0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LHkpO2JyZWFrO2Nhc2UgMTp0aGlzLl9wb2ludD0yOy8vIHByb2NlZWQKZGVmYXVsdDp7aWYodGhpcy5fdDw9MCl7dGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCx5KTt0aGlzLl9jb250ZXh0LmxpbmVUbyh4LHkpfWVsc2V7dmFyIHgxPXRoaXMuX3gqKDEtdGhpcy5fdCkreCp0aGlzLl90O3RoaXMuX2NvbnRleHQubGluZVRvKHgxLHRoaXMuX3kpO3RoaXMuX2NvbnRleHQubGluZVRvKHgxLHkpfWJyZWFrfX10aGlzLl94PXgsdGhpcy5feT15fX07ZnVuY3Rpb24gc3RlcChjb250ZXh0KXtyZXR1cm4gbmV3IFN0ZXAoY29udGV4dCwuNSl9ZnVuY3Rpb24gc3RlcEJlZm9yZShjb250ZXh0KXtyZXR1cm4gbmV3IFN0ZXAoY29udGV4dCwwKX1mdW5jdGlvbiBzdGVwQWZ0ZXIoY29udGV4dCl7cmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsMSl9ZnVuY3Rpb24gbm9uZShzZXJpZXMsb3JkZXIpe2lmKCEoKG49c2VyaWVzLmxlbmd0aCk+MSkpcmV0dXJuO2Zvcih2YXIgaT0xLGosczAsczE9c2VyaWVzW29yZGVyWzBdXSxuLG09czEubGVuZ3RoO2k8bjsrK2kpe3MwPXMxLHMxPXNlcmllc1tvcmRlcltpXV07Zm9yKGo9MDtqPG07KytqKXtzMVtqXVsxXSs9czFbal1bMF09aXNOYU4oczBbal1bMV0pP3MwW2pdWzBdOnMwW2pdWzFdfX19ZnVuY3Rpb24gbm9uZSQxKHNlcmllcyl7dmFyIG49c2VyaWVzLmxlbmd0aCxvPW5ldyBBcnJheShuKTt3aGlsZSgtLW4+PTApb1tuXT1uO3JldHVybiBvfWZ1bmN0aW9uIHN0YWNrVmFsdWUoZCxrZXkpe3JldHVybiBkW2tleV19ZnVuY3Rpb24gc3RhY2soKXt2YXIga2V5cz1jb25zdGFudChbXSksb3JkZXI9bm9uZSQxLG9mZnNldD1ub25lLHZhbHVlPXN0YWNrVmFsdWU7ZnVuY3Rpb24gc3RhY2soZGF0YSl7dmFyIGt6PWtleXMuYXBwbHkodGhpcyxhcmd1bWVudHMpLGksbT1kYXRhLmxlbmd0aCxuPWt6Lmxlbmd0aCxzej1uZXcgQXJyYXkobiksb3o7Zm9yKGk9MDtpPG47KytpKXtmb3IodmFyIGtpPWt6W2ldLHNpPXN6W2ldPW5ldyBBcnJheShtKSxqPTAsc2lqO2o8bTsrK2ope3NpW2pdPXNpaj1bMCwrdmFsdWUoZGF0YVtqXSxraSxqLGRhdGEpXTtzaWouZGF0YT1kYXRhW2pdfXNpLmtleT1raX1mb3IoaT0wLG96PW9yZGVyKHN6KTtpPG47KytpKXtzeltveltpXV0uaW5kZXg9aX1vZmZzZXQoc3osb3opO3JldHVybiBzen1zdGFjay5rZXlzPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhrZXlzPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KHNsaWNlLmNhbGwoXykpLHN0YWNrKTprZXlzfTtzdGFjay52YWx1ZT1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odmFsdWU9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLHN0YWNrKTp2YWx1ZX07c3RhY2sub3JkZXI9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG9yZGVyPV89PW51bGw/bm9uZSQxOnR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KHNsaWNlLmNhbGwoXykpLHN0YWNrKTpvcmRlcn07c3RhY2sub2Zmc2V0PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvZmZzZXQ9Xz09bnVsbD9ub25lOl8sc3RhY2spOm9mZnNldH07cmV0dXJuIHN0YWNrfWZ1bmN0aW9uIGV4cGFuZChzZXJpZXMsb3JkZXIpe2lmKCEoKG49c2VyaWVzLmxlbmd0aCk+MCkpcmV0dXJuO2Zvcih2YXIgaSxuLGo9MCxtPXNlcmllc1swXS5sZW5ndGgseTtqPG07KytqKXtmb3IoeT1pPTA7aTxuOysraSl5Kz1zZXJpZXNbaV1bal1bMV18fDA7aWYoeSlmb3IoaT0wO2k8bjsrK2kpc2VyaWVzW2ldW2pdWzFdLz15fW5vbmUoc2VyaWVzLG9yZGVyKX1mdW5jdGlvbiBkaXZlcmdpbmcoc2VyaWVzLG9yZGVyKXtpZighKChuPXNlcmllcy5sZW5ndGgpPjApKXJldHVybjtmb3IodmFyIGksaj0wLGQsZHkseXAseW4sbixtPXNlcmllc1tvcmRlclswXV0ubGVuZ3RoO2o8bTsrK2ope2Zvcih5cD15bj0wLGk9MDtpPG47KytpKXtpZigoZHk9KGQ9c2VyaWVzW29yZGVyW2ldXVtqXSlbMV0tZFswXSk+MCl7ZFswXT15cCxkWzFdPXlwKz1keX1lbHNlIGlmKGR5PDApe2RbMV09eW4sZFswXT15bis9ZHl9ZWxzZXtkWzBdPTAsZFsxXT1keX19fX1mdW5jdGlvbiBzaWxob3VldHRlKHNlcmllcyxvcmRlcil7aWYoISgobj1zZXJpZXMubGVuZ3RoKT4wKSlyZXR1cm47Zm9yKHZhciBqPTAsczA9c2VyaWVzW29yZGVyWzBdXSxuLG09czAubGVuZ3RoO2o8bTsrK2ope2Zvcih2YXIgaT0wLHk9MDtpPG47KytpKXkrPXNlcmllc1tpXVtqXVsxXXx8MDtzMFtqXVsxXSs9czBbal1bMF09LXkvMn1ub25lKHNlcmllcyxvcmRlcil9ZnVuY3Rpb24gd2lnZ2xlKHNlcmllcyxvcmRlcil7aWYoISgobj1zZXJpZXMubGVuZ3RoKT4wKXx8ISgobT0oczA9c2VyaWVzW29yZGVyWzBdXSkubGVuZ3RoKT4wKSlyZXR1cm47Zm9yKHZhciB5PTAsaj0xLHMwLG0sbjtqPG07KytqKXtmb3IodmFyIGk9MCxzMT0wLHMyPTA7aTxuOysraSl7dmFyIHNpPXNlcmllc1tvcmRlcltpXV0sc2lqMD1zaVtqXVsxXXx8MCxzaWoxPXNpW2otMV1bMV18fDAsczM9KHNpajAtc2lqMSkvMjtmb3IodmFyIGs9MDtrPGk7KytrKXt2YXIgc2s9c2VyaWVzW29yZGVyW2tdXSxza2owPXNrW2pdWzFdfHwwLHNrajE9c2tbai0xXVsxXXx8MDtzMys9c2tqMC1za2oxfXMxKz1zaWowLHMyKz1zMypzaWowfXMwW2otMV1bMV0rPXMwW2otMV1bMF09eTtpZihzMSl5LT1zMi9zMX1zMFtqLTFdWzFdKz1zMFtqLTFdWzBdPXk7bm9uZShzZXJpZXMsb3JkZXIpfWZ1bmN0aW9uIGFwcGVhcmFuY2Uoc2VyaWVzKXt2YXIgcGVha3M9c2VyaWVzLm1hcChwZWFrKTtyZXR1cm4gbm9uZSQxKHNlcmllcykuc29ydChmdW5jdGlvbihhLGIpe3JldHVybiBwZWFrc1thXS1wZWFrc1tiXX0pfWZ1bmN0aW9uIHBlYWsoc2VyaWVzKXt2YXIgaT0tMSxqPTAsbj1zZXJpZXMubGVuZ3RoLHZpLHZqPS1JbmZpbml0eTt3aGlsZSgrK2k8bilpZigodmk9K3Nlcmllc1tpXVsxXSk+dmopdmo9dmksaj1pO3JldHVybiBqfWZ1bmN0aW9uIGFzY2VuZGluZyhzZXJpZXMpe3ZhciBzdW1zPXNlcmllcy5tYXAoc3VtKTtyZXR1cm4gbm9uZSQxKHNlcmllcykuc29ydChmdW5jdGlvbihhLGIpe3JldHVybiBzdW1zW2FdLXN1bXNbYl19KX1mdW5jdGlvbiBzdW0oc2VyaWVzKXt2YXIgcz0wLGk9LTEsbj1zZXJpZXMubGVuZ3RoLHY7d2hpbGUoKytpPG4paWYodj0rc2VyaWVzW2ldWzFdKXMrPXY7cmV0dXJuIHN9ZnVuY3Rpb24gZGVzY2VuZGluZyQxKHNlcmllcyl7cmV0dXJuIGFzY2VuZGluZyhzZXJpZXMpLnJldmVyc2UoKX1mdW5jdGlvbiBpbnNpZGVPdXQoc2VyaWVzKXt2YXIgbj1zZXJpZXMubGVuZ3RoLGksaixzdW1zPXNlcmllcy5tYXAoc3VtKSxvcmRlcj1hcHBlYXJhbmNlKHNlcmllcyksdG9wPTAsYm90dG9tPTAsdG9wcz1bXSxib3R0b21zPVtdO2ZvcihpPTA7aTxuOysraSl7aj1vcmRlcltpXTtpZih0b3A8Ym90dG9tKXt0b3ArPXN1bXNbal07dG9wcy5wdXNoKGopfWVsc2V7Ym90dG9tKz1zdW1zW2pdO2JvdHRvbXMucHVzaChqKX19cmV0dXJuIGJvdHRvbXMucmV2ZXJzZSgpLmNvbmNhdCh0b3BzKX1mdW5jdGlvbiByZXZlcnNlKHNlcmllcyl7cmV0dXJuIG5vbmUkMShzZXJpZXMpLnJldmVyc2UoKX1leHBvcnRzLmFyYz1hcmM7ZXhwb3J0cy5hcmVhPWFyZWE7ZXhwb3J0cy5hcmVhUmFkaWFsPWFyZWFSYWRpYWw7ZXhwb3J0cy5jdXJ2ZUJhc2lzPWJhc2lzO2V4cG9ydHMuY3VydmVCYXNpc0Nsb3NlZD1iYXNpc0Nsb3NlZDtleHBvcnRzLmN1cnZlQmFzaXNPcGVuPWJhc2lzT3BlbjtleHBvcnRzLmN1cnZlQnVuZGxlPWJ1bmRsZTtleHBvcnRzLmN1cnZlQ2FyZGluYWw9Y2FyZGluYWw7ZXhwb3J0cy5jdXJ2ZUNhcmRpbmFsQ2xvc2VkPWNhcmRpbmFsQ2xvc2VkO2V4cG9ydHMuY3VydmVDYXJkaW5hbE9wZW49Y2FyZGluYWxPcGVuO2V4cG9ydHMuY3VydmVDYXRtdWxsUm9tPWNhdG11bGxSb207ZXhwb3J0cy5jdXJ2ZUNhdG11bGxSb21DbG9zZWQ9Y2F0bXVsbFJvbUNsb3NlZDtleHBvcnRzLmN1cnZlQ2F0bXVsbFJvbU9wZW49Y2F0bXVsbFJvbU9wZW47ZXhwb3J0cy5jdXJ2ZUxpbmVhcj1jdXJ2ZUxpbmVhcjtleHBvcnRzLmN1cnZlTGluZWFyQ2xvc2VkPWxpbmVhckNsb3NlZDtleHBvcnRzLmN1cnZlTW9ub3RvbmVYPW1vbm90b25lWDtleHBvcnRzLmN1cnZlTW9ub3RvbmVZPW1vbm90b25lWTtleHBvcnRzLmN1cnZlTmF0dXJhbD1uYXR1cmFsO2V4cG9ydHMuY3VydmVTdGVwPXN0ZXA7ZXhwb3J0cy5jdXJ2ZVN0ZXBBZnRlcj1zdGVwQWZ0ZXI7ZXhwb3J0cy5jdXJ2ZVN0ZXBCZWZvcmU9c3RlcEJlZm9yZTtleHBvcnRzLmxpbmU9bGluZTtleHBvcnRzLmxpbmVSYWRpYWw9bGluZVJhZGlhbCQxO2V4cG9ydHMubGlua0hvcml6b250YWw9bGlua0hvcml6b250YWw7ZXhwb3J0cy5saW5rUmFkaWFsPWxpbmtSYWRpYWw7ZXhwb3J0cy5saW5rVmVydGljYWw9bGlua1ZlcnRpY2FsO2V4cG9ydHMucGllPXBpZTtleHBvcnRzLnBvaW50UmFkaWFsPXBvaW50UmFkaWFsO2V4cG9ydHMucmFkaWFsQXJlYT1hcmVhUmFkaWFsO2V4cG9ydHMucmFkaWFsTGluZT1saW5lUmFkaWFsJDE7ZXhwb3J0cy5zdGFjaz1zdGFjaztleHBvcnRzLnN0YWNrT2Zmc2V0RGl2ZXJnaW5nPWRpdmVyZ2luZztleHBvcnRzLnN0YWNrT2Zmc2V0RXhwYW5kPWV4cGFuZDtleHBvcnRzLnN0YWNrT2Zmc2V0Tm9uZT1ub25lO2V4cG9ydHMuc3RhY2tPZmZzZXRTaWxob3VldHRlPXNpbGhvdWV0dGU7ZXhwb3J0cy5zdGFja09mZnNldFdpZ2dsZT13aWdnbGU7ZXhwb3J0cy5zdGFja09yZGVyQXBwZWFyYW5jZT1hcHBlYXJhbmNlO2V4cG9ydHMuc3RhY2tPcmRlckFzY2VuZGluZz1hc2NlbmRpbmc7ZXhwb3J0cy5zdGFja09yZGVyRGVzY2VuZGluZz1kZXNjZW5kaW5nJDE7ZXhwb3J0cy5zdGFja09yZGVySW5zaWRlT3V0PWluc2lkZU91dDtleHBvcnRzLnN0YWNrT3JkZXJOb25lPW5vbmUkMTtleHBvcnRzLnN0YWNrT3JkZXJSZXZlcnNlPXJldmVyc2U7ZXhwb3J0cy5zeW1ib2w9c3ltYm9sO2V4cG9ydHMuc3ltYm9sQ2lyY2xlPWNpcmNsZTtleHBvcnRzLnN5bWJvbENyb3NzPWNyb3NzO2V4cG9ydHMuc3ltYm9sRGlhbW9uZD1kaWFtb25kO2V4cG9ydHMuc3ltYm9sU3F1YXJlPXNxdWFyZTtleHBvcnRzLnN5bWJvbFN0YXI9c3RhcjtleHBvcnRzLnN5bWJvbFRyaWFuZ2xlPXRyaWFuZ2xlO2V4cG9ydHMuc3ltYm9sV3llPXd5ZTtleHBvcnRzLnN5bWJvbHM9c3ltYm9scztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7ImQzLXBhdGgiOjQ2fV0sNTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLXRpbWUtZm9ybWF0LyB2Mi4yLjIgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyxyZXF1aXJlKCJkMy10aW1lIikpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiLCJkMy10aW1lIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMpKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM1RpbWUpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBsb2NhbERhdGUoZCl7aWYoMDw9ZC55JiZkLnk8MTAwKXt2YXIgZGF0ZT1uZXcgRGF0ZSgtMSxkLm0sZC5kLGQuSCxkLk0sZC5TLGQuTCk7ZGF0ZS5zZXRGdWxsWWVhcihkLnkpO3JldHVybiBkYXRlfXJldHVybiBuZXcgRGF0ZShkLnksZC5tLGQuZCxkLkgsZC5NLGQuUyxkLkwpfWZ1bmN0aW9uIHV0Y0RhdGUoZCl7aWYoMDw9ZC55JiZkLnk8MTAwKXt2YXIgZGF0ZT1uZXcgRGF0ZShEYXRlLlVUQygtMSxkLm0sZC5kLGQuSCxkLk0sZC5TLGQuTCkpO2RhdGUuc2V0VVRDRnVsbFllYXIoZC55KTtyZXR1cm4gZGF0ZX1yZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoZC55LGQubSxkLmQsZC5ILGQuTSxkLlMsZC5MKSl9ZnVuY3Rpb24gbmV3RGF0ZSh5LG0sZCl7cmV0dXJue3k6eSxtOm0sZDpkLEg6MCxNOjAsUzowLEw6MH19ZnVuY3Rpb24gZm9ybWF0TG9jYWxlKGxvY2FsZSl7dmFyIGxvY2FsZV9kYXRlVGltZT1sb2NhbGUuZGF0ZVRpbWUsbG9jYWxlX2RhdGU9bG9jYWxlLmRhdGUsbG9jYWxlX3RpbWU9bG9jYWxlLnRpbWUsbG9jYWxlX3BlcmlvZHM9bG9jYWxlLnBlcmlvZHMsbG9jYWxlX3dlZWtkYXlzPWxvY2FsZS5kYXlzLGxvY2FsZV9zaG9ydFdlZWtkYXlzPWxvY2FsZS5zaG9ydERheXMsbG9jYWxlX21vbnRocz1sb2NhbGUubW9udGhzLGxvY2FsZV9zaG9ydE1vbnRocz1sb2NhbGUuc2hvcnRNb250aHM7dmFyIHBlcmlvZFJlPWZvcm1hdFJlKGxvY2FsZV9wZXJpb2RzKSxwZXJpb2RMb29rdXA9Zm9ybWF0TG9va3VwKGxvY2FsZV9wZXJpb2RzKSx3ZWVrZGF5UmU9Zm9ybWF0UmUobG9jYWxlX3dlZWtkYXlzKSx3ZWVrZGF5TG9va3VwPWZvcm1hdExvb2t1cChsb2NhbGVfd2Vla2RheXMpLHNob3J0V2Vla2RheVJlPWZvcm1hdFJlKGxvY2FsZV9zaG9ydFdlZWtkYXlzKSxzaG9ydFdlZWtkYXlMb29rdXA9Zm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydFdlZWtkYXlzKSxtb250aFJlPWZvcm1hdFJlKGxvY2FsZV9tb250aHMpLG1vbnRoTG9va3VwPWZvcm1hdExvb2t1cChsb2NhbGVfbW9udGhzKSxzaG9ydE1vbnRoUmU9Zm9ybWF0UmUobG9jYWxlX3Nob3J0TW9udGhzKSxzaG9ydE1vbnRoTG9va3VwPWZvcm1hdExvb2t1cChsb2NhbGVfc2hvcnRNb250aHMpO3ZhciBmb3JtYXRzPXthOmZvcm1hdFNob3J0V2Vla2RheSxBOmZvcm1hdFdlZWtkYXksYjpmb3JtYXRTaG9ydE1vbnRoLEI6Zm9ybWF0TW9udGgsYzpudWxsLGQ6Zm9ybWF0RGF5T2ZNb250aCxlOmZvcm1hdERheU9mTW9udGgsZjpmb3JtYXRNaWNyb3NlY29uZHMsSDpmb3JtYXRIb3VyMjQsSTpmb3JtYXRIb3VyMTIsajpmb3JtYXREYXlPZlllYXIsTDpmb3JtYXRNaWxsaXNlY29uZHMsbTpmb3JtYXRNb250aE51bWJlcixNOmZvcm1hdE1pbnV0ZXMscDpmb3JtYXRQZXJpb2QscTpmb3JtYXRRdWFydGVyLFE6Zm9ybWF0VW5peFRpbWVzdGFtcCxzOmZvcm1hdFVuaXhUaW1lc3RhbXBTZWNvbmRzLFM6Zm9ybWF0U2Vjb25kcyx1OmZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXksVTpmb3JtYXRXZWVrTnVtYmVyU3VuZGF5LFY6Zm9ybWF0V2Vla051bWJlcklTTyx3OmZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXksVzpmb3JtYXRXZWVrTnVtYmVyTW9uZGF5LHg6bnVsbCxYOm51bGwseTpmb3JtYXRZZWFyLFk6Zm9ybWF0RnVsbFllYXIsWjpmb3JtYXRab25lLCIlIjpmb3JtYXRMaXRlcmFsUGVyY2VudH07dmFyIHV0Y0Zvcm1hdHM9e2E6Zm9ybWF0VVRDU2hvcnRXZWVrZGF5LEE6Zm9ybWF0VVRDV2Vla2RheSxiOmZvcm1hdFVUQ1Nob3J0TW9udGgsQjpmb3JtYXRVVENNb250aCxjOm51bGwsZDpmb3JtYXRVVENEYXlPZk1vbnRoLGU6Zm9ybWF0VVRDRGF5T2ZNb250aCxmOmZvcm1hdFVUQ01pY3Jvc2Vjb25kcyxIOmZvcm1hdFVUQ0hvdXIyNCxJOmZvcm1hdFVUQ0hvdXIxMixqOmZvcm1hdFVUQ0RheU9mWWVhcixMOmZvcm1hdFVUQ01pbGxpc2Vjb25kcyxtOmZvcm1hdFVUQ01vbnRoTnVtYmVyLE06Zm9ybWF0VVRDTWludXRlcyxwOmZvcm1hdFVUQ1BlcmlvZCxxOmZvcm1hdFVUQ1F1YXJ0ZXIsUTpmb3JtYXRVbml4VGltZXN0YW1wLHM6Zm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMsUzpmb3JtYXRVVENTZWNvbmRzLHU6Zm9ybWF0VVRDV2Vla2RheU51bWJlck1vbmRheSxVOmZvcm1hdFVUQ1dlZWtOdW1iZXJTdW5kYXksVjpmb3JtYXRVVENXZWVrTnVtYmVySVNPLHc6Zm9ybWF0VVRDV2Vla2RheU51bWJlclN1bmRheSxXOmZvcm1hdFVUQ1dlZWtOdW1iZXJNb25kYXkseDpudWxsLFg6bnVsbCx5OmZvcm1hdFVUQ1llYXIsWTpmb3JtYXRVVENGdWxsWWVhcixaOmZvcm1hdFVUQ1pvbmUsIiUiOmZvcm1hdExpdGVyYWxQZXJjZW50fTt2YXIgcGFyc2VzPXthOnBhcnNlU2hvcnRXZWVrZGF5LEE6cGFyc2VXZWVrZGF5LGI6cGFyc2VTaG9ydE1vbnRoLEI6cGFyc2VNb250aCxjOnBhcnNlTG9jYWxlRGF0ZVRpbWUsZDpwYXJzZURheU9mTW9udGgsZTpwYXJzZURheU9mTW9udGgsZjpwYXJzZU1pY3Jvc2Vjb25kcyxIOnBhcnNlSG91cjI0LEk6cGFyc2VIb3VyMjQsajpwYXJzZURheU9mWWVhcixMOnBhcnNlTWlsbGlzZWNvbmRzLG06cGFyc2VNb250aE51bWJlcixNOnBhcnNlTWludXRlcyxwOnBhcnNlUGVyaW9kLHE6cGFyc2VRdWFydGVyLFE6cGFyc2VVbml4VGltZXN0YW1wLHM6cGFyc2VVbml4VGltZXN0YW1wU2Vjb25kcyxTOnBhcnNlU2Vjb25kcyx1OnBhcnNlV2Vla2RheU51bWJlck1vbmRheSxVOnBhcnNlV2Vla051bWJlclN1bmRheSxWOnBhcnNlV2Vla051bWJlcklTTyx3OnBhcnNlV2Vla2RheU51bWJlclN1bmRheSxXOnBhcnNlV2Vla051bWJlck1vbmRheSx4OnBhcnNlTG9jYWxlRGF0ZSxYOnBhcnNlTG9jYWxlVGltZSx5OnBhcnNlWWVhcixZOnBhcnNlRnVsbFllYXIsWjpwYXJzZVpvbmUsIiUiOnBhcnNlTGl0ZXJhbFBlcmNlbnR9OwovLyBUaGVzZSByZWN1cnNpdmUgZGlyZWN0aXZlIGRlZmluaXRpb25zIG11c3QgYmUgZGVmZXJyZWQuCmZvcm1hdHMueD1uZXdGb3JtYXQobG9jYWxlX2RhdGUsZm9ybWF0cyk7Zm9ybWF0cy5YPW5ld0Zvcm1hdChsb2NhbGVfdGltZSxmb3JtYXRzKTtmb3JtYXRzLmM9bmV3Rm9ybWF0KGxvY2FsZV9kYXRlVGltZSxmb3JtYXRzKTt1dGNGb3JtYXRzLng9bmV3Rm9ybWF0KGxvY2FsZV9kYXRlLHV0Y0Zvcm1hdHMpO3V0Y0Zvcm1hdHMuWD1uZXdGb3JtYXQobG9jYWxlX3RpbWUsdXRjRm9ybWF0cyk7dXRjRm9ybWF0cy5jPW5ld0Zvcm1hdChsb2NhbGVfZGF0ZVRpbWUsdXRjRm9ybWF0cyk7ZnVuY3Rpb24gbmV3Rm9ybWF0KHNwZWNpZmllcixmb3JtYXRzKXtyZXR1cm4gZnVuY3Rpb24oZGF0ZSl7dmFyIHN0cmluZz1bXSxpPS0xLGo9MCxuPXNwZWNpZmllci5sZW5ndGgsYyxwYWQsZm9ybWF0O2lmKCEoZGF0ZSBpbnN0YW5jZW9mIERhdGUpKWRhdGU9bmV3IERhdGUoK2RhdGUpO3doaWxlKCsraTxuKXtpZihzcGVjaWZpZXIuY2hhckNvZGVBdChpKT09PTM3KXtzdHJpbmcucHVzaChzcGVjaWZpZXIuc2xpY2UoaixpKSk7aWYoKHBhZD1wYWRzW2M9c3BlY2lmaWVyLmNoYXJBdCgrK2kpXSkhPW51bGwpYz1zcGVjaWZpZXIuY2hhckF0KCsraSk7ZWxzZSBwYWQ9Yz09PSJlIj8iICI6IjAiO2lmKGZvcm1hdD1mb3JtYXRzW2NdKWM9Zm9ybWF0KGRhdGUscGFkKTtzdHJpbmcucHVzaChjKTtqPWkrMX19c3RyaW5nLnB1c2goc3BlY2lmaWVyLnNsaWNlKGosaSkpO3JldHVybiBzdHJpbmcuam9pbigiIil9fWZ1bmN0aW9uIG5ld1BhcnNlKHNwZWNpZmllcixaKXtyZXR1cm4gZnVuY3Rpb24oc3RyaW5nKXt2YXIgZD1uZXdEYXRlKDE5MDAsdW5kZWZpbmVkLDEpLGk9cGFyc2VTcGVjaWZpZXIoZCxzcGVjaWZpZXIsc3RyaW5nKz0iIiwwKSx3ZWVrLGRheTtpZihpIT1zdHJpbmcubGVuZ3RoKXJldHVybiBudWxsOwovLyBJZiBhIFVOSVggdGltZXN0YW1wIGlzIHNwZWNpZmllZCwgcmV0dXJuIGl0LgppZigiUSJpbiBkKXJldHVybiBuZXcgRGF0ZShkLlEpO2lmKCJzImluIGQpcmV0dXJuIG5ldyBEYXRlKGQucyoxZTMrKCJMImluIGQ/ZC5MOjApKTsKLy8gSWYgdGhpcyBpcyB1dGNQYXJzZSwgbmV2ZXIgdXNlIHRoZSBsb2NhbCB0aW1lem9uZS4KaWYoWiYmISgiWiJpbiBkKSlkLlo9MDsKLy8gVGhlIGFtLXBtIGZsYWcgaXMgMCBmb3IgQU0sIGFuZCAxIGZvciBQTS4KaWYoInAiaW4gZClkLkg9ZC5IJTEyK2QucCoxMjsKLy8gSWYgdGhlIG1vbnRoIHdhcyBub3Qgc3BlY2lmaWVkLCBpbmhlcml0IGZyb20gdGhlIHF1YXJ0ZXIuCmlmKGQubT09PXVuZGVmaW5lZClkLm09InEiaW4gZD9kLnE6MDsKLy8gQ29udmVydCBkYXktb2Ytd2VlayBhbmQgd2Vlay1vZi15ZWFyIHRvIGRheS1vZi15ZWFyLgppZigiViJpbiBkKXtpZihkLlY8MXx8ZC5WPjUzKXJldHVybiBudWxsO2lmKCEoInciaW4gZCkpZC53PTE7aWYoIloiaW4gZCl7d2Vlaz11dGNEYXRlKG5ld0RhdGUoZC55LDAsMSkpLGRheT13ZWVrLmdldFVUQ0RheSgpO3dlZWs9ZGF5PjR8fGRheT09PTA/ZDNUaW1lLnV0Y01vbmRheS5jZWlsKHdlZWspOmQzVGltZS51dGNNb25kYXkod2Vlayk7d2Vlaz1kM1RpbWUudXRjRGF5Lm9mZnNldCh3ZWVrLChkLlYtMSkqNyk7ZC55PXdlZWsuZ2V0VVRDRnVsbFllYXIoKTtkLm09d2Vlay5nZXRVVENNb250aCgpO2QuZD13ZWVrLmdldFVUQ0RhdGUoKSsoZC53KzYpJTd9ZWxzZXt3ZWVrPWxvY2FsRGF0ZShuZXdEYXRlKGQueSwwLDEpKSxkYXk9d2Vlay5nZXREYXkoKTt3ZWVrPWRheT40fHxkYXk9PT0wP2QzVGltZS50aW1lTW9uZGF5LmNlaWwod2Vlayk6ZDNUaW1lLnRpbWVNb25kYXkod2Vlayk7d2Vlaz1kM1RpbWUudGltZURheS5vZmZzZXQod2VlaywoZC5WLTEpKjcpO2QueT13ZWVrLmdldEZ1bGxZZWFyKCk7ZC5tPXdlZWsuZ2V0TW9udGgoKTtkLmQ9d2Vlay5nZXREYXRlKCkrKGQudys2KSU3fX1lbHNlIGlmKCJXImluIGR8fCJVImluIGQpe2lmKCEoInciaW4gZCkpZC53PSJ1ImluIGQ/ZC51JTc6IlciaW4gZD8xOjA7ZGF5PSJaImluIGQ/dXRjRGF0ZShuZXdEYXRlKGQueSwwLDEpKS5nZXRVVENEYXkoKTpsb2NhbERhdGUobmV3RGF0ZShkLnksMCwxKSkuZ2V0RGF5KCk7ZC5tPTA7ZC5kPSJXImluIGQ/KGQudys2KSU3K2QuVyo3LShkYXkrNSklNzpkLncrZC5VKjctKGRheSs2KSU3fQovLyBJZiBhIHRpbWUgem9uZSBpcyBzcGVjaWZpZWQsIGFsbCBmaWVsZHMgYXJlIGludGVycHJldGVkIGFzIFVUQyBhbmQgdGhlbgovLyBvZmZzZXQgYWNjb3JkaW5nIHRvIHRoZSBzcGVjaWZpZWQgdGltZSB6b25lLgppZigiWiJpbiBkKXtkLkgrPWQuWi8xMDB8MDtkLk0rPWQuWiUxMDA7cmV0dXJuIHV0Y0RhdGUoZCl9Ci8vIE90aGVyd2lzZSwgYWxsIGZpZWxkcyBhcmUgaW4gbG9jYWwgdGltZS4KcmV0dXJuIGxvY2FsRGF0ZShkKX19ZnVuY3Rpb24gcGFyc2VTcGVjaWZpZXIoZCxzcGVjaWZpZXIsc3RyaW5nLGope3ZhciBpPTAsbj1zcGVjaWZpZXIubGVuZ3RoLG09c3RyaW5nLmxlbmd0aCxjLHBhcnNlO3doaWxlKGk8bil7aWYoaj49bSlyZXR1cm4tMTtjPXNwZWNpZmllci5jaGFyQ29kZUF0KGkrKyk7aWYoYz09PTM3KXtjPXNwZWNpZmllci5jaGFyQXQoaSsrKTtwYXJzZT1wYXJzZXNbYyBpbiBwYWRzP3NwZWNpZmllci5jaGFyQXQoaSsrKTpjXTtpZighcGFyc2V8fChqPXBhcnNlKGQsc3RyaW5nLGopKTwwKXJldHVybi0xfWVsc2UgaWYoYyE9c3RyaW5nLmNoYXJDb2RlQXQoaisrKSl7cmV0dXJuLTF9fXJldHVybiBqfWZ1bmN0aW9uIHBhcnNlUGVyaW9kKGQsc3RyaW5nLGkpe3ZhciBuPXBlcmlvZFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtyZXR1cm4gbj8oZC5wPXBlcmlvZExvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlU2hvcnRXZWVrZGF5KGQsc3RyaW5nLGkpe3ZhciBuPXNob3J0V2Vla2RheVJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtyZXR1cm4gbj8oZC53PXNob3J0V2Vla2RheUxvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlV2Vla2RheShkLHN0cmluZyxpKXt2YXIgbj13ZWVrZGF5UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO3JldHVybiBuPyhkLnc9d2Vla2RheUxvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlU2hvcnRNb250aChkLHN0cmluZyxpKXt2YXIgbj1zaG9ydE1vbnRoUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO3JldHVybiBuPyhkLm09c2hvcnRNb250aExvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlTW9udGgoZCxzdHJpbmcsaSl7dmFyIG49bW9udGhSZS5leGVjKHN0cmluZy5zbGljZShpKSk7cmV0dXJuIG4/KGQubT1tb250aExvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlTG9jYWxlRGF0ZVRpbWUoZCxzdHJpbmcsaSl7cmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsbG9jYWxlX2RhdGVUaW1lLHN0cmluZyxpKX1mdW5jdGlvbiBwYXJzZUxvY2FsZURhdGUoZCxzdHJpbmcsaSl7cmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsbG9jYWxlX2RhdGUsc3RyaW5nLGkpfWZ1bmN0aW9uIHBhcnNlTG9jYWxlVGltZShkLHN0cmluZyxpKXtyZXR1cm4gcGFyc2VTcGVjaWZpZXIoZCxsb2NhbGVfdGltZSxzdHJpbmcsaSl9ZnVuY3Rpb24gZm9ybWF0U2hvcnRXZWVrZGF5KGQpe3JldHVybiBsb2NhbGVfc2hvcnRXZWVrZGF5c1tkLmdldERheSgpXX1mdW5jdGlvbiBmb3JtYXRXZWVrZGF5KGQpe3JldHVybiBsb2NhbGVfd2Vla2RheXNbZC5nZXREYXkoKV19ZnVuY3Rpb24gZm9ybWF0U2hvcnRNb250aChkKXtyZXR1cm4gbG9jYWxlX3Nob3J0TW9udGhzW2QuZ2V0TW9udGgoKV19ZnVuY3Rpb24gZm9ybWF0TW9udGgoZCl7cmV0dXJuIGxvY2FsZV9tb250aHNbZC5nZXRNb250aCgpXX1mdW5jdGlvbiBmb3JtYXRQZXJpb2QoZCl7cmV0dXJuIGxvY2FsZV9wZXJpb2RzWysoZC5nZXRIb3VycygpPj0xMildfWZ1bmN0aW9uIGZvcm1hdFF1YXJ0ZXIoZCl7cmV0dXJuIDErfn4oZC5nZXRNb250aCgpLzMpfWZ1bmN0aW9uIGZvcm1hdFVUQ1Nob3J0V2Vla2RheShkKXtyZXR1cm4gbG9jYWxlX3Nob3J0V2Vla2RheXNbZC5nZXRVVENEYXkoKV19ZnVuY3Rpb24gZm9ybWF0VVRDV2Vla2RheShkKXtyZXR1cm4gbG9jYWxlX3dlZWtkYXlzW2QuZ2V0VVRDRGF5KCldfWZ1bmN0aW9uIGZvcm1hdFVUQ1Nob3J0TW9udGgoZCl7cmV0dXJuIGxvY2FsZV9zaG9ydE1vbnRoc1tkLmdldFVUQ01vbnRoKCldfWZ1bmN0aW9uIGZvcm1hdFVUQ01vbnRoKGQpe3JldHVybiBsb2NhbGVfbW9udGhzW2QuZ2V0VVRDTW9udGgoKV19ZnVuY3Rpb24gZm9ybWF0VVRDUGVyaW9kKGQpe3JldHVybiBsb2NhbGVfcGVyaW9kc1srKGQuZ2V0VVRDSG91cnMoKT49MTIpXX1mdW5jdGlvbiBmb3JtYXRVVENRdWFydGVyKGQpe3JldHVybiAxK35+KGQuZ2V0VVRDTW9udGgoKS8zKX1yZXR1cm57Zm9ybWF0OmZ1bmN0aW9uKHNwZWNpZmllcil7dmFyIGY9bmV3Rm9ybWF0KHNwZWNpZmllcis9IiIsZm9ybWF0cyk7Zi50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBzcGVjaWZpZXJ9O3JldHVybiBmfSxwYXJzZTpmdW5jdGlvbihzcGVjaWZpZXIpe3ZhciBwPW5ld1BhcnNlKHNwZWNpZmllcis9IiIsZmFsc2UpO3AudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gc3BlY2lmaWVyfTtyZXR1cm4gcH0sdXRjRm9ybWF0OmZ1bmN0aW9uKHNwZWNpZmllcil7dmFyIGY9bmV3Rm9ybWF0KHNwZWNpZmllcis9IiIsdXRjRm9ybWF0cyk7Zi50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBzcGVjaWZpZXJ9O3JldHVybiBmfSx1dGNQYXJzZTpmdW5jdGlvbihzcGVjaWZpZXIpe3ZhciBwPW5ld1BhcnNlKHNwZWNpZmllcis9IiIsdHJ1ZSk7cC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBzcGVjaWZpZXJ9O3JldHVybiBwfX19dmFyIHBhZHM9eyItIjoiIixfOiIgIiwwOiIwIn0sbnVtYmVyUmU9L15ccypcZCsvLC8vIG5vdGU6IGlnbm9yZXMgbmV4dCBkaXJlY3RpdmUKcGVyY2VudFJlPS9eJS8scmVxdW90ZVJlPS9bXFxeJCorP3xbXF0oKS57fV0vZztmdW5jdGlvbiBwYWQodmFsdWUsZmlsbCx3aWR0aCl7dmFyIHNpZ249dmFsdWU8MD8iLSI6IiIsc3RyaW5nPShzaWduPy12YWx1ZTp2YWx1ZSkrIiIsbGVuZ3RoPXN0cmluZy5sZW5ndGg7cmV0dXJuIHNpZ24rKGxlbmd0aDx3aWR0aD9uZXcgQXJyYXkod2lkdGgtbGVuZ3RoKzEpLmpvaW4oZmlsbCkrc3RyaW5nOnN0cmluZyl9ZnVuY3Rpb24gcmVxdW90ZShzKXtyZXR1cm4gcy5yZXBsYWNlKHJlcXVvdGVSZSwiXFwkJiIpfWZ1bmN0aW9uIGZvcm1hdFJlKG5hbWVzKXtyZXR1cm4gbmV3IFJlZ0V4cCgiXig/OiIrbmFtZXMubWFwKHJlcXVvdGUpLmpvaW4oInwiKSsiKSIsImkiKX1mdW5jdGlvbiBmb3JtYXRMb29rdXAobmFtZXMpe3ZhciBtYXA9e30saT0tMSxuPW5hbWVzLmxlbmd0aDt3aGlsZSgrK2k8biltYXBbbmFtZXNbaV0udG9Mb3dlckNhc2UoKV09aTtyZXR1cm4gbWFwfWZ1bmN0aW9uIHBhcnNlV2Vla2RheU51bWJlclN1bmRheShkLHN0cmluZyxpKXt2YXIgbj1udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMSkpO3JldHVybiBuPyhkLnc9K25bMF0saStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5KGQsc3RyaW5nLGkpe3ZhciBuPW51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksaSsxKSk7cmV0dXJuIG4/KGQudT0rblswXSxpK25bMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBwYXJzZVdlZWtOdW1iZXJTdW5kYXkoZCxzdHJpbmcsaSl7dmFyIG49bnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSxpKzIpKTtyZXR1cm4gbj8oZC5VPStuWzBdLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlV2Vla051bWJlcklTTyhkLHN0cmluZyxpKXt2YXIgbj1udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMikpO3JldHVybiBuPyhkLlY9K25bMF0saStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcGFyc2VXZWVrTnVtYmVyTW9uZGF5KGQsc3RyaW5nLGkpe3ZhciBuPW51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksaSsyKSk7cmV0dXJuIG4/KGQuVz0rblswXSxpK25bMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBwYXJzZUZ1bGxZZWFyKGQsc3RyaW5nLGkpe3ZhciBuPW51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksaSs0KSk7cmV0dXJuIG4/KGQueT0rblswXSxpK25bMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBwYXJzZVllYXIoZCxzdHJpbmcsaSl7dmFyIG49bnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSxpKzIpKTtyZXR1cm4gbj8oZC55PStuWzBdKygrblswXT42OD8xOTAwOjJlMyksaStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcGFyc2Vab25lKGQsc3RyaW5nLGkpe3ZhciBuPS9eKFopfChbKy1dXGRcZCkoPzo6PyhcZFxkKSk/Ly5leGVjKHN0cmluZy5zbGljZShpLGkrNikpO3JldHVybiBuPyhkLlo9blsxXT8wOi0oblsyXSsoblszXXx8IjAwIikpLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlUXVhcnRlcihkLHN0cmluZyxpKXt2YXIgbj1udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMSkpO3JldHVybiBuPyhkLnE9blswXSozLTMsaStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcGFyc2VNb250aE51bWJlcihkLHN0cmluZyxpKXt2YXIgbj1udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMikpO3JldHVybiBuPyhkLm09blswXS0xLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlRGF5T2ZNb250aChkLHN0cmluZyxpKXt2YXIgbj1udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMikpO3JldHVybiBuPyhkLmQ9K25bMF0saStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcGFyc2VEYXlPZlllYXIoZCxzdHJpbmcsaSl7dmFyIG49bnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSxpKzMpKTtyZXR1cm4gbj8oZC5tPTAsZC5kPStuWzBdLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlSG91cjI0KGQsc3RyaW5nLGkpe3ZhciBuPW51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksaSsyKSk7cmV0dXJuIG4/KGQuSD0rblswXSxpK25bMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBwYXJzZU1pbnV0ZXMoZCxzdHJpbmcsaSl7dmFyIG49bnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSxpKzIpKTtyZXR1cm4gbj8oZC5NPStuWzBdLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlU2Vjb25kcyhkLHN0cmluZyxpKXt2YXIgbj1udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMikpO3JldHVybiBuPyhkLlM9K25bMF0saStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gcGFyc2VNaWxsaXNlY29uZHMoZCxzdHJpbmcsaSl7dmFyIG49bnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSxpKzMpKTtyZXR1cm4gbj8oZC5MPStuWzBdLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlTWljcm9zZWNvbmRzKGQsc3RyaW5nLGkpe3ZhciBuPW51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksaSs2KSk7cmV0dXJuIG4/KGQuTD1NYXRoLmZsb29yKG5bMF0vMWUzKSxpK25bMF0ubGVuZ3RoKTotMX1mdW5jdGlvbiBwYXJzZUxpdGVyYWxQZXJjZW50KGQsc3RyaW5nLGkpe3ZhciBuPXBlcmNlbnRSZS5leGVjKHN0cmluZy5zbGljZShpLGkrMSkpO3JldHVybiBuP2krblswXS5sZW5ndGg6LTF9ZnVuY3Rpb24gcGFyc2VVbml4VGltZXN0YW1wKGQsc3RyaW5nLGkpe3ZhciBuPW51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtyZXR1cm4gbj8oZC5RPStuWzBdLGkrblswXS5sZW5ndGgpOi0xfWZ1bmN0aW9uIHBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMoZCxzdHJpbmcsaSl7dmFyIG49bnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO3JldHVybiBuPyhkLnM9K25bMF0saStuWzBdLmxlbmd0aCk6LTF9ZnVuY3Rpb24gZm9ybWF0RGF5T2ZNb250aChkLHApe3JldHVybiBwYWQoZC5nZXREYXRlKCkscCwyKX1mdW5jdGlvbiBmb3JtYXRIb3VyMjQoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0SG91cnMoKSxwLDIpfWZ1bmN0aW9uIGZvcm1hdEhvdXIxMihkLHApe3JldHVybiBwYWQoZC5nZXRIb3VycygpJTEyfHwxMixwLDIpfWZ1bmN0aW9uIGZvcm1hdERheU9mWWVhcihkLHApe3JldHVybiBwYWQoMStkM1RpbWUudGltZURheS5jb3VudChkM1RpbWUudGltZVllYXIoZCksZCkscCwzKX1mdW5jdGlvbiBmb3JtYXRNaWxsaXNlY29uZHMoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0TWlsbGlzZWNvbmRzKCkscCwzKX1mdW5jdGlvbiBmb3JtYXRNaWNyb3NlY29uZHMoZCxwKXtyZXR1cm4gZm9ybWF0TWlsbGlzZWNvbmRzKGQscCkrIjAwMCJ9ZnVuY3Rpb24gZm9ybWF0TW9udGhOdW1iZXIoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0TW9udGgoKSsxLHAsMil9ZnVuY3Rpb24gZm9ybWF0TWludXRlcyhkLHApe3JldHVybiBwYWQoZC5nZXRNaW51dGVzKCkscCwyKX1mdW5jdGlvbiBmb3JtYXRTZWNvbmRzKGQscCl7cmV0dXJuIHBhZChkLmdldFNlY29uZHMoKSxwLDIpfWZ1bmN0aW9uIGZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXkoZCl7dmFyIGRheT1kLmdldERheSgpO3JldHVybiBkYXk9PT0wPzc6ZGF5fWZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJTdW5kYXkoZCxwKXtyZXR1cm4gcGFkKGQzVGltZS50aW1lU3VuZGF5LmNvdW50KGQzVGltZS50aW1lWWVhcihkKS0xLGQpLHAsMil9ZnVuY3Rpb24gZm9ybWF0V2Vla051bWJlcklTTyhkLHApe3ZhciBkYXk9ZC5nZXREYXkoKTtkPWRheT49NHx8ZGF5PT09MD9kM1RpbWUudGltZVRodXJzZGF5KGQpOmQzVGltZS50aW1lVGh1cnNkYXkuY2VpbChkKTtyZXR1cm4gcGFkKGQzVGltZS50aW1lVGh1cnNkYXkuY291bnQoZDNUaW1lLnRpbWVZZWFyKGQpLGQpKyhkM1RpbWUudGltZVllYXIoZCkuZ2V0RGF5KCk9PT00KSxwLDIpfWZ1bmN0aW9uIGZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXkoZCl7cmV0dXJuIGQuZ2V0RGF5KCl9ZnVuY3Rpb24gZm9ybWF0V2Vla051bWJlck1vbmRheShkLHApe3JldHVybiBwYWQoZDNUaW1lLnRpbWVNb25kYXkuY291bnQoZDNUaW1lLnRpbWVZZWFyKGQpLTEsZCkscCwyKX1mdW5jdGlvbiBmb3JtYXRZZWFyKGQscCl7cmV0dXJuIHBhZChkLmdldEZ1bGxZZWFyKCklMTAwLHAsMil9ZnVuY3Rpb24gZm9ybWF0RnVsbFllYXIoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0RnVsbFllYXIoKSUxZTQscCw0KX1mdW5jdGlvbiBmb3JtYXRab25lKGQpe3ZhciB6PWQuZ2V0VGltZXpvbmVPZmZzZXQoKTtyZXR1cm4oej4wPyItIjooeio9LTEsIisiKSkrcGFkKHovNjB8MCwiMCIsMikrcGFkKHolNjAsIjAiLDIpfWZ1bmN0aW9uIGZvcm1hdFVUQ0RheU9mTW9udGgoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0VVRDRGF0ZSgpLHAsMil9ZnVuY3Rpb24gZm9ybWF0VVRDSG91cjI0KGQscCl7cmV0dXJuIHBhZChkLmdldFVUQ0hvdXJzKCkscCwyKX1mdW5jdGlvbiBmb3JtYXRVVENIb3VyMTIoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0VVRDSG91cnMoKSUxMnx8MTIscCwyKX1mdW5jdGlvbiBmb3JtYXRVVENEYXlPZlllYXIoZCxwKXtyZXR1cm4gcGFkKDErZDNUaW1lLnV0Y0RheS5jb3VudChkM1RpbWUudXRjWWVhcihkKSxkKSxwLDMpfWZ1bmN0aW9uIGZvcm1hdFVUQ01pbGxpc2Vjb25kcyhkLHApe3JldHVybiBwYWQoZC5nZXRVVENNaWxsaXNlY29uZHMoKSxwLDMpfWZ1bmN0aW9uIGZvcm1hdFVUQ01pY3Jvc2Vjb25kcyhkLHApe3JldHVybiBmb3JtYXRVVENNaWxsaXNlY29uZHMoZCxwKSsiMDAwIn1mdW5jdGlvbiBmb3JtYXRVVENNb250aE51bWJlcihkLHApe3JldHVybiBwYWQoZC5nZXRVVENNb250aCgpKzEscCwyKX1mdW5jdGlvbiBmb3JtYXRVVENNaW51dGVzKGQscCl7cmV0dXJuIHBhZChkLmdldFVUQ01pbnV0ZXMoKSxwLDIpfWZ1bmN0aW9uIGZvcm1hdFVUQ1NlY29uZHMoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0VVRDU2Vjb25kcygpLHAsMil9ZnVuY3Rpb24gZm9ybWF0VVRDV2Vla2RheU51bWJlck1vbmRheShkKXt2YXIgZG93PWQuZ2V0VVRDRGF5KCk7cmV0dXJuIGRvdz09PTA/Nzpkb3d9ZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlclN1bmRheShkLHApe3JldHVybiBwYWQoZDNUaW1lLnV0Y1N1bmRheS5jb3VudChkM1RpbWUudXRjWWVhcihkKS0xLGQpLHAsMil9ZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlcklTTyhkLHApe3ZhciBkYXk9ZC5nZXRVVENEYXkoKTtkPWRheT49NHx8ZGF5PT09MD9kM1RpbWUudXRjVGh1cnNkYXkoZCk6ZDNUaW1lLnV0Y1RodXJzZGF5LmNlaWwoZCk7cmV0dXJuIHBhZChkM1RpbWUudXRjVGh1cnNkYXkuY291bnQoZDNUaW1lLnV0Y1llYXIoZCksZCkrKGQzVGltZS51dGNZZWFyKGQpLmdldFVUQ0RheSgpPT09NCkscCwyKX1mdW5jdGlvbiBmb3JtYXRVVENXZWVrZGF5TnVtYmVyU3VuZGF5KGQpe3JldHVybiBkLmdldFVUQ0RheSgpfWZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtOdW1iZXJNb25kYXkoZCxwKXtyZXR1cm4gcGFkKGQzVGltZS51dGNNb25kYXkuY291bnQoZDNUaW1lLnV0Y1llYXIoZCktMSxkKSxwLDIpfWZ1bmN0aW9uIGZvcm1hdFVUQ1llYXIoZCxwKXtyZXR1cm4gcGFkKGQuZ2V0VVRDRnVsbFllYXIoKSUxMDAscCwyKX1mdW5jdGlvbiBmb3JtYXRVVENGdWxsWWVhcihkLHApe3JldHVybiBwYWQoZC5nZXRVVENGdWxsWWVhcigpJTFlNCxwLDQpfWZ1bmN0aW9uIGZvcm1hdFVUQ1pvbmUoKXtyZXR1cm4iKzAwMDAifWZ1bmN0aW9uIGZvcm1hdExpdGVyYWxQZXJjZW50KCl7cmV0dXJuIiUifWZ1bmN0aW9uIGZvcm1hdFVuaXhUaW1lc3RhbXAoZCl7cmV0dXJuK2R9ZnVuY3Rpb24gZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMoZCl7cmV0dXJuIE1hdGguZmxvb3IoK2QvMWUzKX12YXIgbG9jYWxlO2RlZmF1bHRMb2NhbGUoe2RhdGVUaW1lOiIleCwgJVgiLGRhdGU6IiUtbS8lLWQvJVkiLHRpbWU6IiUtSTolTTolUyAlcCIscGVyaW9kczpbIkFNIiwiUE0iXSxkYXlzOlsiU3VuZGF5IiwiTW9uZGF5IiwiVHVlc2RheSIsIldlZG5lc2RheSIsIlRodXJzZGF5IiwiRnJpZGF5IiwiU2F0dXJkYXkiXSxzaG9ydERheXM6WyJTdW4iLCJNb24iLCJUdWUiLCJXZWQiLCJUaHUiLCJGcmkiLCJTYXQiXSxtb250aHM6WyJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsIkp1bHkiLCJBdWd1c3QiLCJTZXB0ZW1iZXIiLCJPY3RvYmVyIiwiTm92ZW1iZXIiLCJEZWNlbWJlciJdLHNob3J0TW9udGhzOlsiSmFuIiwiRmViIiwiTWFyIiwiQXByIiwiTWF5IiwiSnVuIiwiSnVsIiwiQXVnIiwiU2VwIiwiT2N0IiwiTm92IiwiRGVjIl19KTtmdW5jdGlvbiBkZWZhdWx0TG9jYWxlKGRlZmluaXRpb24pe2xvY2FsZT1mb3JtYXRMb2NhbGUoZGVmaW5pdGlvbik7ZXhwb3J0cy50aW1lRm9ybWF0PWxvY2FsZS5mb3JtYXQ7ZXhwb3J0cy50aW1lUGFyc2U9bG9jYWxlLnBhcnNlO2V4cG9ydHMudXRjRm9ybWF0PWxvY2FsZS51dGNGb3JtYXQ7ZXhwb3J0cy51dGNQYXJzZT1sb2NhbGUudXRjUGFyc2U7cmV0dXJuIGxvY2FsZX12YXIgaXNvU3BlY2lmaWVyPSIlWS0lbS0lZFQlSDolTTolUy4lTFoiO2Z1bmN0aW9uIGZvcm1hdElzb05hdGl2ZShkYXRlKXtyZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpfXZhciBmb3JtYXRJc289RGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc/Zm9ybWF0SXNvTmF0aXZlOmV4cG9ydHMudXRjRm9ybWF0KGlzb1NwZWNpZmllcik7ZnVuY3Rpb24gcGFyc2VJc29OYXRpdmUoc3RyaW5nKXt2YXIgZGF0ZT1uZXcgRGF0ZShzdHJpbmcpO3JldHVybiBpc05hTihkYXRlKT9udWxsOmRhdGV9dmFyIHBhcnNlSXNvPStuZXcgRGF0ZSgiMjAwMC0wMS0wMVQwMDowMDowMC4wMDBaIik/cGFyc2VJc29OYXRpdmU6ZXhwb3J0cy51dGNQYXJzZShpc29TcGVjaWZpZXIpO2V4cG9ydHMuaXNvRm9ybWF0PWZvcm1hdElzbztleHBvcnRzLmlzb1BhcnNlPXBhcnNlSXNvO2V4cG9ydHMudGltZUZvcm1hdERlZmF1bHRMb2NhbGU9ZGVmYXVsdExvY2FsZTtleHBvcnRzLnRpbWVGb3JtYXRMb2NhbGU9Zm9ybWF0TG9jYWxlO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHsiZDMtdGltZSI6NTV9XSw1NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtdGltZS8gdjEuMS4wIENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgdDA9bmV3IERhdGUsdDE9bmV3IERhdGU7ZnVuY3Rpb24gbmV3SW50ZXJ2YWwoZmxvb3JpLG9mZnNldGksY291bnQsZmllbGQpe2Z1bmN0aW9uIGludGVydmFsKGRhdGUpe3JldHVybiBmbG9vcmkoZGF0ZT1hcmd1bWVudHMubGVuZ3RoPT09MD9uZXcgRGF0ZTpuZXcgRGF0ZSgrZGF0ZSkpLGRhdGV9aW50ZXJ2YWwuZmxvb3I9ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGZsb29yaShkYXRlPW5ldyBEYXRlKCtkYXRlKSksZGF0ZX07aW50ZXJ2YWwuY2VpbD1mdW5jdGlvbihkYXRlKXtyZXR1cm4gZmxvb3JpKGRhdGU9bmV3IERhdGUoZGF0ZS0xKSksb2Zmc2V0aShkYXRlLDEpLGZsb29yaShkYXRlKSxkYXRlfTtpbnRlcnZhbC5yb3VuZD1mdW5jdGlvbihkYXRlKXt2YXIgZDA9aW50ZXJ2YWwoZGF0ZSksZDE9aW50ZXJ2YWwuY2VpbChkYXRlKTtyZXR1cm4gZGF0ZS1kMDxkMS1kYXRlP2QwOmQxfTtpbnRlcnZhbC5vZmZzZXQ9ZnVuY3Rpb24oZGF0ZSxzdGVwKXtyZXR1cm4gb2Zmc2V0aShkYXRlPW5ldyBEYXRlKCtkYXRlKSxzdGVwPT1udWxsPzE6TWF0aC5mbG9vcihzdGVwKSksZGF0ZX07aW50ZXJ2YWwucmFuZ2U9ZnVuY3Rpb24oc3RhcnQsc3RvcCxzdGVwKXt2YXIgcmFuZ2U9W10scHJldmlvdXM7c3RhcnQ9aW50ZXJ2YWwuY2VpbChzdGFydCk7c3RlcD1zdGVwPT1udWxsPzE6TWF0aC5mbG9vcihzdGVwKTtpZighKHN0YXJ0PHN0b3ApfHwhKHN0ZXA+MCkpcmV0dXJuIHJhbmdlOy8vIGFsc28gaGFuZGxlcyBJbnZhbGlkIERhdGUKZG97cmFuZ2UucHVzaChwcmV2aW91cz1uZXcgRGF0ZSgrc3RhcnQpKSxvZmZzZXRpKHN0YXJ0LHN0ZXApLGZsb29yaShzdGFydCl9d2hpbGUocHJldmlvdXM8c3RhcnQmJnN0YXJ0PHN0b3ApO3JldHVybiByYW5nZX07aW50ZXJ2YWwuZmlsdGVyPWZ1bmN0aW9uKHRlc3Qpe3JldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKXtpZihkYXRlPj1kYXRlKXdoaWxlKGZsb29yaShkYXRlKSwhdGVzdChkYXRlKSlkYXRlLnNldFRpbWUoZGF0ZS0xKX0sZnVuY3Rpb24oZGF0ZSxzdGVwKXtpZihkYXRlPj1kYXRlKXtpZihzdGVwPDApd2hpbGUoKytzdGVwPD0wKXt3aGlsZShvZmZzZXRpKGRhdGUsLTEpLCF0ZXN0KGRhdGUpKXt9Ly8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eQp9ZWxzZSB3aGlsZSgtLXN0ZXA+PTApe3doaWxlKG9mZnNldGkoZGF0ZSwrMSksIXRlc3QoZGF0ZSkpe30vLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5Cn19fSl9O2lmKGNvdW50KXtpbnRlcnZhbC5jb3VudD1mdW5jdGlvbihzdGFydCxlbmQpe3QwLnNldFRpbWUoK3N0YXJ0KSx0MS5zZXRUaW1lKCtlbmQpO2Zsb29yaSh0MCksZmxvb3JpKHQxKTtyZXR1cm4gTWF0aC5mbG9vcihjb3VudCh0MCx0MSkpfTtpbnRlcnZhbC5ldmVyeT1mdW5jdGlvbihzdGVwKXtzdGVwPU1hdGguZmxvb3Ioc3RlcCk7cmV0dXJuIWlzRmluaXRlKHN0ZXApfHwhKHN0ZXA+MCk/bnVsbDohKHN0ZXA+MSk/aW50ZXJ2YWw6aW50ZXJ2YWwuZmlsdGVyKGZpZWxkP2Z1bmN0aW9uKGQpe3JldHVybiBmaWVsZChkKSVzdGVwPT09MH06ZnVuY3Rpb24oZCl7cmV0dXJuIGludGVydmFsLmNvdW50KDAsZCklc3RlcD09PTB9KX19cmV0dXJuIGludGVydmFsfXZhciBtaWxsaXNlY29uZD1uZXdJbnRlcnZhbChmdW5jdGlvbigpewovLyBub29wCn0sZnVuY3Rpb24oZGF0ZSxzdGVwKXtkYXRlLnNldFRpbWUoK2RhdGUrc3RlcCl9LGZ1bmN0aW9uKHN0YXJ0LGVuZCl7cmV0dXJuIGVuZC1zdGFydH0pOwovLyBBbiBvcHRpbWl6ZWQgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgc2ltcGxlIGNhc2UuCm1pbGxpc2Vjb25kLmV2ZXJ5PWZ1bmN0aW9uKGspe2s9TWF0aC5mbG9vcihrKTtpZighaXNGaW5pdGUoayl8fCEoaz4wKSlyZXR1cm4gbnVsbDtpZighKGs+MSkpcmV0dXJuIG1pbGxpc2Vjb25kO3JldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKXtkYXRlLnNldFRpbWUoTWF0aC5mbG9vcihkYXRlL2spKmspfSxmdW5jdGlvbihkYXRlLHN0ZXApe2RhdGUuc2V0VGltZSgrZGF0ZStzdGVwKmspfSxmdW5jdGlvbihzdGFydCxlbmQpe3JldHVybihlbmQtc3RhcnQpL2t9KX07dmFyIG1pbGxpc2Vjb25kcz1taWxsaXNlY29uZC5yYW5nZTt2YXIgZHVyYXRpb25TZWNvbmQ9MWUzO3ZhciBkdXJhdGlvbk1pbnV0ZT02ZTQ7dmFyIGR1cmF0aW9uSG91cj0zNmU1O3ZhciBkdXJhdGlvbkRheT04NjRlNTt2YXIgZHVyYXRpb25XZWVrPTYwNDhlNTt2YXIgc2Vjb25kPW5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0VGltZShkYXRlLWRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkpfSxmdW5jdGlvbihkYXRlLHN0ZXApe2RhdGUuc2V0VGltZSgrZGF0ZStzdGVwKmR1cmF0aW9uU2Vjb25kKX0sZnVuY3Rpb24oc3RhcnQsZW5kKXtyZXR1cm4oZW5kLXN0YXJ0KS9kdXJhdGlvblNlY29uZH0sZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUuZ2V0VVRDU2Vjb25kcygpfSk7dmFyIHNlY29uZHM9c2Vjb25kLnJhbmdlO3ZhciBtaW51dGU9bmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSl7ZGF0ZS5zZXRUaW1lKGRhdGUtZGF0ZS5nZXRNaWxsaXNlY29uZHMoKS1kYXRlLmdldFNlY29uZHMoKSpkdXJhdGlvblNlY29uZCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRUaW1lKCtkYXRlK3N0ZXAqZHVyYXRpb25NaW51dGUpfSxmdW5jdGlvbihzdGFydCxlbmQpe3JldHVybihlbmQtc3RhcnQpL2R1cmF0aW9uTWludXRlfSxmdW5jdGlvbihkYXRlKXtyZXR1cm4gZGF0ZS5nZXRNaW51dGVzKCl9KTt2YXIgbWludXRlcz1taW51dGUucmFuZ2U7dmFyIGhvdXI9bmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSl7ZGF0ZS5zZXRUaW1lKGRhdGUtZGF0ZS5nZXRNaWxsaXNlY29uZHMoKS1kYXRlLmdldFNlY29uZHMoKSpkdXJhdGlvblNlY29uZC1kYXRlLmdldE1pbnV0ZXMoKSpkdXJhdGlvbk1pbnV0ZSl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRUaW1lKCtkYXRlK3N0ZXAqZHVyYXRpb25Ib3VyKX0sZnVuY3Rpb24oc3RhcnQsZW5kKXtyZXR1cm4oZW5kLXN0YXJ0KS9kdXJhdGlvbkhvdXJ9LGZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLmdldEhvdXJzKCl9KTt2YXIgaG91cnM9aG91ci5yYW5nZTt2YXIgZGF5PW5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0SG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpK3N0ZXApfSxmdW5jdGlvbihzdGFydCxlbmQpe3JldHVybihlbmQtc3RhcnQtKGVuZC5nZXRUaW1lem9uZU9mZnNldCgpLXN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkpKmR1cmF0aW9uTWludXRlKS9kdXJhdGlvbkRheX0sZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUuZ2V0RGF0ZSgpLTF9KTt2YXIgZGF5cz1kYXkucmFuZ2U7ZnVuY3Rpb24gd2Vla2RheShpKXtyZXR1cm4gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSl7ZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpLShkYXRlLmdldERheSgpKzctaSklNyk7ZGF0ZS5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24oZGF0ZSxzdGVwKXtkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkrc3RlcCo3KX0sZnVuY3Rpb24oc3RhcnQsZW5kKXtyZXR1cm4oZW5kLXN0YXJ0LShlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKS1zdGFydC5nZXRUaW1lem9uZU9mZnNldCgpKSpkdXJhdGlvbk1pbnV0ZSkvZHVyYXRpb25XZWVrfSl9dmFyIHN1bmRheT13ZWVrZGF5KDApO3ZhciBtb25kYXk9d2Vla2RheSgxKTt2YXIgdHVlc2RheT13ZWVrZGF5KDIpO3ZhciB3ZWRuZXNkYXk9d2Vla2RheSgzKTt2YXIgdGh1cnNkYXk9d2Vla2RheSg0KTt2YXIgZnJpZGF5PXdlZWtkYXkoNSk7dmFyIHNhdHVyZGF5PXdlZWtkYXkoNik7dmFyIHN1bmRheXM9c3VuZGF5LnJhbmdlO3ZhciBtb25kYXlzPW1vbmRheS5yYW5nZTt2YXIgdHVlc2RheXM9dHVlc2RheS5yYW5nZTt2YXIgd2VkbmVzZGF5cz13ZWRuZXNkYXkucmFuZ2U7dmFyIHRodXJzZGF5cz10aHVyc2RheS5yYW5nZTt2YXIgZnJpZGF5cz1mcmlkYXkucmFuZ2U7dmFyIHNhdHVyZGF5cz1zYXR1cmRheS5yYW5nZTt2YXIgbW9udGg9bmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSl7ZGF0ZS5zZXREYXRlKDEpO2RhdGUuc2V0SG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRNb250aChkYXRlLmdldE1vbnRoKCkrc3RlcCl9LGZ1bmN0aW9uKHN0YXJ0LGVuZCl7cmV0dXJuIGVuZC5nZXRNb250aCgpLXN0YXJ0LmdldE1vbnRoKCkrKGVuZC5nZXRGdWxsWWVhcigpLXN0YXJ0LmdldEZ1bGxZZWFyKCkpKjEyfSxmdW5jdGlvbihkYXRlKXtyZXR1cm4gZGF0ZS5nZXRNb250aCgpfSk7dmFyIG1vbnRocz1tb250aC5yYW5nZTt2YXIgeWVhcj1uZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKXtkYXRlLnNldE1vbnRoKDAsMSk7ZGF0ZS5zZXRIb3VycygwLDAsMCwwKX0sZnVuY3Rpb24oZGF0ZSxzdGVwKXtkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKStzdGVwKX0sZnVuY3Rpb24oc3RhcnQsZW5kKXtyZXR1cm4gZW5kLmdldEZ1bGxZZWFyKCktc3RhcnQuZ2V0RnVsbFllYXIoKX0sZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUuZ2V0RnVsbFllYXIoKX0pOwovLyBBbiBvcHRpbWl6ZWQgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgc2ltcGxlIGNhc2UuCnllYXIuZXZlcnk9ZnVuY3Rpb24oayl7cmV0dXJuIWlzRmluaXRlKGs9TWF0aC5mbG9vcihrKSl8fCEoaz4wKT9udWxsOm5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0RnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldEZ1bGxZZWFyKCkvaykqayk7ZGF0ZS5zZXRNb250aCgwLDEpO2RhdGUuc2V0SG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkrc3RlcCprKX0pfTt2YXIgeWVhcnM9eWVhci5yYW5nZTt2YXIgdXRjTWludXRlPW5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0VVRDU2Vjb25kcygwLDApfSxmdW5jdGlvbihkYXRlLHN0ZXApe2RhdGUuc2V0VGltZSgrZGF0ZStzdGVwKmR1cmF0aW9uTWludXRlKX0sZnVuY3Rpb24oc3RhcnQsZW5kKXtyZXR1cm4oZW5kLXN0YXJ0KS9kdXJhdGlvbk1pbnV0ZX0sZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUuZ2V0VVRDTWludXRlcygpfSk7dmFyIHV0Y01pbnV0ZXM9dXRjTWludXRlLnJhbmdlO3ZhciB1dGNIb3VyPW5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0VVRDTWludXRlcygwLDAsMCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRUaW1lKCtkYXRlK3N0ZXAqZHVyYXRpb25Ib3VyKX0sZnVuY3Rpb24oc3RhcnQsZW5kKXtyZXR1cm4oZW5kLXN0YXJ0KS9kdXJhdGlvbkhvdXJ9LGZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLmdldFVUQ0hvdXJzKCl9KTt2YXIgdXRjSG91cnM9dXRjSG91ci5yYW5nZTt2YXIgdXRjRGF5PW5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpK3N0ZXApfSxmdW5jdGlvbihzdGFydCxlbmQpe3JldHVybihlbmQtc3RhcnQpL2R1cmF0aW9uRGF5fSxmdW5jdGlvbihkYXRlKXtyZXR1cm4gZGF0ZS5nZXRVVENEYXRlKCktMX0pO3ZhciB1dGNEYXlzPXV0Y0RheS5yYW5nZTtmdW5jdGlvbiB1dGNXZWVrZGF5KGkpe3JldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKXtkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCktKGRhdGUuZ2V0VVRDRGF5KCkrNy1pKSU3KTtkYXRlLnNldFVUQ0hvdXJzKDAsMCwwLDApfSxmdW5jdGlvbihkYXRlLHN0ZXApe2RhdGUuc2V0VVRDRGF0ZShkYXRlLmdldFVUQ0RhdGUoKStzdGVwKjcpfSxmdW5jdGlvbihzdGFydCxlbmQpe3JldHVybihlbmQtc3RhcnQpL2R1cmF0aW9uV2Vla30pfXZhciB1dGNTdW5kYXk9dXRjV2Vla2RheSgwKTt2YXIgdXRjTW9uZGF5PXV0Y1dlZWtkYXkoMSk7dmFyIHV0Y1R1ZXNkYXk9dXRjV2Vla2RheSgyKTt2YXIgdXRjV2VkbmVzZGF5PXV0Y1dlZWtkYXkoMyk7dmFyIHV0Y1RodXJzZGF5PXV0Y1dlZWtkYXkoNCk7dmFyIHV0Y0ZyaWRheT11dGNXZWVrZGF5KDUpO3ZhciB1dGNTYXR1cmRheT11dGNXZWVrZGF5KDYpO3ZhciB1dGNTdW5kYXlzPXV0Y1N1bmRheS5yYW5nZTt2YXIgdXRjTW9uZGF5cz11dGNNb25kYXkucmFuZ2U7dmFyIHV0Y1R1ZXNkYXlzPXV0Y1R1ZXNkYXkucmFuZ2U7dmFyIHV0Y1dlZG5lc2RheXM9dXRjV2VkbmVzZGF5LnJhbmdlO3ZhciB1dGNUaHVyc2RheXM9dXRjVGh1cnNkYXkucmFuZ2U7dmFyIHV0Y0ZyaWRheXM9dXRjRnJpZGF5LnJhbmdlO3ZhciB1dGNTYXR1cmRheXM9dXRjU2F0dXJkYXkucmFuZ2U7dmFyIHV0Y01vbnRoPW5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpe2RhdGUuc2V0VVRDRGF0ZSgxKTtkYXRlLnNldFVUQ0hvdXJzKDAsMCwwLDApfSxmdW5jdGlvbihkYXRlLHN0ZXApe2RhdGUuc2V0VVRDTW9udGgoZGF0ZS5nZXRVVENNb250aCgpK3N0ZXApfSxmdW5jdGlvbihzdGFydCxlbmQpe3JldHVybiBlbmQuZ2V0VVRDTW9udGgoKS1zdGFydC5nZXRVVENNb250aCgpKyhlbmQuZ2V0VVRDRnVsbFllYXIoKS1zdGFydC5nZXRVVENGdWxsWWVhcigpKSoxMn0sZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUuZ2V0VVRDTW9udGgoKX0pO3ZhciB1dGNNb250aHM9dXRjTW9udGgucmFuZ2U7dmFyIHV0Y1llYXI9bmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSl7ZGF0ZS5zZXRVVENNb250aCgwLDEpO2RhdGUuc2V0VVRDSG91cnMoMCwwLDAsMCl9LGZ1bmN0aW9uKGRhdGUsc3RlcCl7ZGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkrc3RlcCl9LGZ1bmN0aW9uKHN0YXJ0LGVuZCl7cmV0dXJuIGVuZC5nZXRVVENGdWxsWWVhcigpLXN0YXJ0LmdldFVUQ0Z1bGxZZWFyKCl9LGZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLmdldFVUQ0Z1bGxZZWFyKCl9KTsKLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLgp1dGNZZWFyLmV2ZXJ5PWZ1bmN0aW9uKGspe3JldHVybiFpc0Zpbml0ZShrPU1hdGguZmxvb3IoaykpfHwhKGs+MCk/bnVsbDpuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKXtkYXRlLnNldFVUQ0Z1bGxZZWFyKE1hdGguZmxvb3IoZGF0ZS5nZXRVVENGdWxsWWVhcigpL2spKmspO2RhdGUuc2V0VVRDTW9udGgoMCwxKTtkYXRlLnNldFVUQ0hvdXJzKDAsMCwwLDApfSxmdW5jdGlvbihkYXRlLHN0ZXApe2RhdGUuc2V0VVRDRnVsbFllYXIoZGF0ZS5nZXRVVENGdWxsWWVhcigpK3N0ZXAqayl9KX07dmFyIHV0Y1llYXJzPXV0Y1llYXIucmFuZ2U7ZXhwb3J0cy50aW1lRGF5PWRheTtleHBvcnRzLnRpbWVEYXlzPWRheXM7ZXhwb3J0cy50aW1lRnJpZGF5PWZyaWRheTtleHBvcnRzLnRpbWVGcmlkYXlzPWZyaWRheXM7ZXhwb3J0cy50aW1lSG91cj1ob3VyO2V4cG9ydHMudGltZUhvdXJzPWhvdXJzO2V4cG9ydHMudGltZUludGVydmFsPW5ld0ludGVydmFsO2V4cG9ydHMudGltZU1pbGxpc2Vjb25kPW1pbGxpc2Vjb25kO2V4cG9ydHMudGltZU1pbGxpc2Vjb25kcz1taWxsaXNlY29uZHM7ZXhwb3J0cy50aW1lTWludXRlPW1pbnV0ZTtleHBvcnRzLnRpbWVNaW51dGVzPW1pbnV0ZXM7ZXhwb3J0cy50aW1lTW9uZGF5PW1vbmRheTtleHBvcnRzLnRpbWVNb25kYXlzPW1vbmRheXM7ZXhwb3J0cy50aW1lTW9udGg9bW9udGg7ZXhwb3J0cy50aW1lTW9udGhzPW1vbnRocztleHBvcnRzLnRpbWVTYXR1cmRheT1zYXR1cmRheTtleHBvcnRzLnRpbWVTYXR1cmRheXM9c2F0dXJkYXlzO2V4cG9ydHMudGltZVNlY29uZD1zZWNvbmQ7ZXhwb3J0cy50aW1lU2Vjb25kcz1zZWNvbmRzO2V4cG9ydHMudGltZVN1bmRheT1zdW5kYXk7ZXhwb3J0cy50aW1lU3VuZGF5cz1zdW5kYXlzO2V4cG9ydHMudGltZVRodXJzZGF5PXRodXJzZGF5O2V4cG9ydHMudGltZVRodXJzZGF5cz10aHVyc2RheXM7ZXhwb3J0cy50aW1lVHVlc2RheT10dWVzZGF5O2V4cG9ydHMudGltZVR1ZXNkYXlzPXR1ZXNkYXlzO2V4cG9ydHMudGltZVdlZG5lc2RheT13ZWRuZXNkYXk7ZXhwb3J0cy50aW1lV2VkbmVzZGF5cz13ZWRuZXNkYXlzO2V4cG9ydHMudGltZVdlZWs9c3VuZGF5O2V4cG9ydHMudGltZVdlZWtzPXN1bmRheXM7ZXhwb3J0cy50aW1lWWVhcj15ZWFyO2V4cG9ydHMudGltZVllYXJzPXllYXJzO2V4cG9ydHMudXRjRGF5PXV0Y0RheTtleHBvcnRzLnV0Y0RheXM9dXRjRGF5cztleHBvcnRzLnV0Y0ZyaWRheT11dGNGcmlkYXk7ZXhwb3J0cy51dGNGcmlkYXlzPXV0Y0ZyaWRheXM7ZXhwb3J0cy51dGNIb3VyPXV0Y0hvdXI7ZXhwb3J0cy51dGNIb3Vycz11dGNIb3VycztleHBvcnRzLnV0Y01pbGxpc2Vjb25kPW1pbGxpc2Vjb25kO2V4cG9ydHMudXRjTWlsbGlzZWNvbmRzPW1pbGxpc2Vjb25kcztleHBvcnRzLnV0Y01pbnV0ZT11dGNNaW51dGU7ZXhwb3J0cy51dGNNaW51dGVzPXV0Y01pbnV0ZXM7ZXhwb3J0cy51dGNNb25kYXk9dXRjTW9uZGF5O2V4cG9ydHMudXRjTW9uZGF5cz11dGNNb25kYXlzO2V4cG9ydHMudXRjTW9udGg9dXRjTW9udGg7ZXhwb3J0cy51dGNNb250aHM9dXRjTW9udGhzO2V4cG9ydHMudXRjU2F0dXJkYXk9dXRjU2F0dXJkYXk7ZXhwb3J0cy51dGNTYXR1cmRheXM9dXRjU2F0dXJkYXlzO2V4cG9ydHMudXRjU2Vjb25kPXNlY29uZDtleHBvcnRzLnV0Y1NlY29uZHM9c2Vjb25kcztleHBvcnRzLnV0Y1N1bmRheT11dGNTdW5kYXk7ZXhwb3J0cy51dGNTdW5kYXlzPXV0Y1N1bmRheXM7ZXhwb3J0cy51dGNUaHVyc2RheT11dGNUaHVyc2RheTtleHBvcnRzLnV0Y1RodXJzZGF5cz11dGNUaHVyc2RheXM7ZXhwb3J0cy51dGNUdWVzZGF5PXV0Y1R1ZXNkYXk7ZXhwb3J0cy51dGNUdWVzZGF5cz11dGNUdWVzZGF5cztleHBvcnRzLnV0Y1dlZG5lc2RheT11dGNXZWRuZXNkYXk7ZXhwb3J0cy51dGNXZWRuZXNkYXlzPXV0Y1dlZG5lc2RheXM7ZXhwb3J0cy51dGNXZWVrPXV0Y1N1bmRheTtleHBvcnRzLnV0Y1dlZWtzPXV0Y1N1bmRheXM7ZXhwb3J0cy51dGNZZWFyPXV0Y1llYXI7ZXhwb3J0cy51dGNZZWFycz11dGNZZWFycztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7fV0sNTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLXRpbWVyLyB2MS4wLjEwIENvcHlyaWdodCAyMDE5IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTooZ2xvYmFsPWdsb2JhbHx8c2VsZixmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgZnJhbWU9MCwvLyBpcyBhbiBhbmltYXRpb24gZnJhbWUgcGVuZGluZz8KdGltZW91dD0wLC8vIGlzIGEgdGltZW91dCBwZW5kaW5nPwppbnRlcnZhbD0wLC8vIGFyZSBhbnkgdGltZXJzIGFjdGl2ZT8KcG9rZURlbGF5PTFlMywvLyBob3cgZnJlcXVlbnRseSB3ZSBjaGVjayBmb3IgY2xvY2sgc2tldwp0YXNrSGVhZCx0YXNrVGFpbCxjbG9ja0xhc3Q9MCxjbG9ja05vdz0wLGNsb2NrU2tldz0wLGNsb2NrPXR5cGVvZiBwZXJmb3JtYW5jZT09PSJvYmplY3QiJiZwZXJmb3JtYW5jZS5ub3c/cGVyZm9ybWFuY2U6RGF0ZSxzZXRGcmFtZT10eXBlb2Ygd2luZG93PT09Im9iamVjdCImJndpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdyk6ZnVuY3Rpb24oZil7c2V0VGltZW91dChmLDE3KX07ZnVuY3Rpb24gbm93KCl7cmV0dXJuIGNsb2NrTm93fHwoc2V0RnJhbWUoY2xlYXJOb3cpLGNsb2NrTm93PWNsb2NrLm5vdygpK2Nsb2NrU2tldyl9ZnVuY3Rpb24gY2xlYXJOb3coKXtjbG9ja05vdz0wfWZ1bmN0aW9uIFRpbWVyKCl7dGhpcy5fY2FsbD10aGlzLl90aW1lPXRoaXMuX25leHQ9bnVsbH1UaW1lci5wcm90b3R5cGU9dGltZXIucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUaW1lcixyZXN0YXJ0OmZ1bmN0aW9uKGNhbGxiYWNrLGRlbGF5LHRpbWUpe2lmKHR5cGVvZiBjYWxsYmFjayE9PSJmdW5jdGlvbiIpdGhyb3cgbmV3IFR5cGVFcnJvcigiY2FsbGJhY2sgaXMgbm90IGEgZnVuY3Rpb24iKTt0aW1lPSh0aW1lPT1udWxsP25vdygpOit0aW1lKSsoZGVsYXk9PW51bGw/MDorZGVsYXkpO2lmKCF0aGlzLl9uZXh0JiZ0YXNrVGFpbCE9PXRoaXMpe2lmKHRhc2tUYWlsKXRhc2tUYWlsLl9uZXh0PXRoaXM7ZWxzZSB0YXNrSGVhZD10aGlzO3Rhc2tUYWlsPXRoaXN9dGhpcy5fY2FsbD1jYWxsYmFjazt0aGlzLl90aW1lPXRpbWU7c2xlZXAoKX0sc3RvcDpmdW5jdGlvbigpe2lmKHRoaXMuX2NhbGwpe3RoaXMuX2NhbGw9bnVsbDt0aGlzLl90aW1lPUluZmluaXR5O3NsZWVwKCl9fX07ZnVuY3Rpb24gdGltZXIoY2FsbGJhY2ssZGVsYXksdGltZSl7dmFyIHQ9bmV3IFRpbWVyO3QucmVzdGFydChjYWxsYmFjayxkZWxheSx0aW1lKTtyZXR1cm4gdH1mdW5jdGlvbiB0aW1lckZsdXNoKCl7bm93KCk7Ly8gR2V0IHRoZSBjdXJyZW50IHRpbWUsIGlmIG5vdCBhbHJlYWR5IHNldC4KKytmcmFtZTsvLyBQcmV0ZW5kIHdl4oCZdmUgc2V0IGFuIGFsYXJtLCBpZiB3ZSBoYXZlbuKAmXQgYWxyZWFkeS4KdmFyIHQ9dGFza0hlYWQsZTt3aGlsZSh0KXtpZigoZT1jbG9ja05vdy10Ll90aW1lKT49MCl0Ll9jYWxsLmNhbGwobnVsbCxlKTt0PXQuX25leHR9LS1mcmFtZX1mdW5jdGlvbiB3YWtlKCl7Y2xvY2tOb3c9KGNsb2NrTGFzdD1jbG9jay5ub3coKSkrY2xvY2tTa2V3O2ZyYW1lPXRpbWVvdXQ9MDt0cnl7dGltZXJGbHVzaCgpfWZpbmFsbHl7ZnJhbWU9MDtuYXAoKTtjbG9ja05vdz0wfX1mdW5jdGlvbiBwb2tlKCl7dmFyIG5vdz1jbG9jay5ub3coKSxkZWxheT1ub3ctY2xvY2tMYXN0O2lmKGRlbGF5PnBva2VEZWxheSljbG9ja1NrZXctPWRlbGF5LGNsb2NrTGFzdD1ub3d9ZnVuY3Rpb24gbmFwKCl7dmFyIHQwLHQxPXRhc2tIZWFkLHQyLHRpbWU9SW5maW5pdHk7d2hpbGUodDEpe2lmKHQxLl9jYWxsKXtpZih0aW1lPnQxLl90aW1lKXRpbWU9dDEuX3RpbWU7dDA9dDEsdDE9dDEuX25leHR9ZWxzZXt0Mj10MS5fbmV4dCx0MS5fbmV4dD1udWxsO3QxPXQwP3QwLl9uZXh0PXQyOnRhc2tIZWFkPXQyfX10YXNrVGFpbD10MDtzbGVlcCh0aW1lKX1mdW5jdGlvbiBzbGVlcCh0aW1lKXtpZihmcmFtZSlyZXR1cm47Ly8gU29vbmVzdCBhbGFybSBhbHJlYWR5IHNldCwgb3Igd2lsbCBiZS4KaWYodGltZW91dCl0aW1lb3V0PWNsZWFyVGltZW91dCh0aW1lb3V0KTt2YXIgZGVsYXk9dGltZS1jbG9ja05vdzsvLyBTdHJpY3RseSBsZXNzIHRoYW4gaWYgd2UgcmVjb21wdXRlZCBjbG9ja05vdy4KaWYoZGVsYXk+MjQpe2lmKHRpbWU8SW5maW5pdHkpdGltZW91dD1zZXRUaW1lb3V0KHdha2UsdGltZS1jbG9jay5ub3coKS1jbG9ja1NrZXcpO2lmKGludGVydmFsKWludGVydmFsPWNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpfWVsc2V7aWYoIWludGVydmFsKWNsb2NrTGFzdD1jbG9jay5ub3coKSxpbnRlcnZhbD1zZXRJbnRlcnZhbChwb2tlLHBva2VEZWxheSk7ZnJhbWU9MSxzZXRGcmFtZSh3YWtlKX19ZnVuY3Rpb24gdGltZW91dCQxKGNhbGxiYWNrLGRlbGF5LHRpbWUpe3ZhciB0PW5ldyBUaW1lcjtkZWxheT1kZWxheT09bnVsbD8wOitkZWxheTt0LnJlc3RhcnQoZnVuY3Rpb24oZWxhcHNlZCl7dC5zdG9wKCk7Y2FsbGJhY2soZWxhcHNlZCtkZWxheSl9LGRlbGF5LHRpbWUpO3JldHVybiB0fWZ1bmN0aW9uIGludGVydmFsJDEoY2FsbGJhY2ssZGVsYXksdGltZSl7dmFyIHQ9bmV3IFRpbWVyLHRvdGFsPWRlbGF5O2lmKGRlbGF5PT1udWxsKXJldHVybiB0LnJlc3RhcnQoY2FsbGJhY2ssZGVsYXksdGltZSksdDtkZWxheT0rZGVsYXksdGltZT10aW1lPT1udWxsP25vdygpOit0aW1lO3QucmVzdGFydChmdW5jdGlvbiB0aWNrKGVsYXBzZWQpe2VsYXBzZWQrPXRvdGFsO3QucmVzdGFydCh0aWNrLHRvdGFsKz1kZWxheSx0aW1lKTtjYWxsYmFjayhlbGFwc2VkKX0sZGVsYXksdGltZSk7cmV0dXJuIHR9ZXhwb3J0cy5pbnRlcnZhbD1pbnRlcnZhbCQxO2V4cG9ydHMubm93PW5vdztleHBvcnRzLnRpbWVvdXQ9dGltZW91dCQxO2V4cG9ydHMudGltZXI9dGltZXI7ZXhwb3J0cy50aW1lckZsdXNoPXRpbWVyRmx1c2g7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSl9KX0se31dLDU3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy10cmFuc2l0aW9uLyB2MS4zLjIgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7dHlwZW9mIGV4cG9ydHM9PT0ib2JqZWN0IiYmdHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiP2ZhY3RvcnkoZXhwb3J0cyxyZXF1aXJlKCJkMy1zZWxlY3Rpb24iKSxyZXF1aXJlKCJkMy1kaXNwYXRjaCIpLHJlcXVpcmUoImQzLXRpbWVyIikscmVxdWlyZSgiZDMtaW50ZXJwb2xhdGUiKSxyZXF1aXJlKCJkMy1jb2xvciIpLHJlcXVpcmUoImQzLWVhc2UiKSk6dHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyIsImQzLXNlbGVjdGlvbiIsImQzLWRpc3BhdGNoIiwiZDMtdGltZXIiLCJkMy1pbnRlcnBvbGF0ZSIsImQzLWNvbG9yIiwiZDMtZWFzZSJdLGZhY3RvcnkpOihnbG9iYWw9Z2xvYmFsfHxzZWxmLGZhY3RvcnkoZ2xvYmFsLmQzPWdsb2JhbC5kM3x8e30sZ2xvYmFsLmQzLGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMyxnbG9iYWwuZDMpKX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyxkM1NlbGVjdGlvbixkM0Rpc3BhdGNoLGQzVGltZXIsZDNJbnRlcnBvbGF0ZSxkM0NvbG9yLGQzRWFzZSl7InVzZSBzdHJpY3QiO3ZhciBlbXB0eU9uPWQzRGlzcGF0Y2guZGlzcGF0Y2goInN0YXJ0IiwiZW5kIiwiY2FuY2VsIiwiaW50ZXJydXB0Iik7dmFyIGVtcHR5VHdlZW49W107dmFyIENSRUFURUQ9MDt2YXIgU0NIRURVTEVEPTE7dmFyIFNUQVJUSU5HPTI7dmFyIFNUQVJURUQ9Mzt2YXIgUlVOTklORz00O3ZhciBFTkRJTkc9NTt2YXIgRU5ERUQ9NjtmdW5jdGlvbiBzY2hlZHVsZShub2RlLG5hbWUsaWQsaW5kZXgsZ3JvdXAsdGltaW5nKXt2YXIgc2NoZWR1bGVzPW5vZGUuX190cmFuc2l0aW9uO2lmKCFzY2hlZHVsZXMpbm9kZS5fX3RyYW5zaXRpb249e307ZWxzZSBpZihpZCBpbiBzY2hlZHVsZXMpcmV0dXJuO2NyZWF0ZShub2RlLGlkLHtuYW1lOm5hbWUsaW5kZXg6aW5kZXgsLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLgpncm91cDpncm91cCwvLyBGb3IgY29udGV4dCBkdXJpbmcgY2FsbGJhY2suCm9uOmVtcHR5T24sdHdlZW46ZW1wdHlUd2Vlbix0aW1lOnRpbWluZy50aW1lLGRlbGF5OnRpbWluZy5kZWxheSxkdXJhdGlvbjp0aW1pbmcuZHVyYXRpb24sZWFzZTp0aW1pbmcuZWFzZSx0aW1lcjpudWxsLHN0YXRlOkNSRUFURUR9KX1mdW5jdGlvbiBpbml0KG5vZGUsaWQpe3ZhciBzY2hlZHVsZT1nZXQobm9kZSxpZCk7aWYoc2NoZWR1bGUuc3RhdGU+Q1JFQVRFRCl0aHJvdyBuZXcgRXJyb3IoInRvbyBsYXRlOyBhbHJlYWR5IHNjaGVkdWxlZCIpO3JldHVybiBzY2hlZHVsZX1mdW5jdGlvbiBzZXQobm9kZSxpZCl7dmFyIHNjaGVkdWxlPWdldChub2RlLGlkKTtpZihzY2hlZHVsZS5zdGF0ZT5TVEFSVEVEKXRocm93IG5ldyBFcnJvcigidG9vIGxhdGU7IGFscmVhZHkgcnVubmluZyIpO3JldHVybiBzY2hlZHVsZX1mdW5jdGlvbiBnZXQobm9kZSxpZCl7dmFyIHNjaGVkdWxlPW5vZGUuX190cmFuc2l0aW9uO2lmKCFzY2hlZHVsZXx8IShzY2hlZHVsZT1zY2hlZHVsZVtpZF0pKXRocm93IG5ldyBFcnJvcigidHJhbnNpdGlvbiBub3QgZm91bmQiKTtyZXR1cm4gc2NoZWR1bGV9ZnVuY3Rpb24gY3JlYXRlKG5vZGUsaWQsc2VsZil7dmFyIHNjaGVkdWxlcz1ub2RlLl9fdHJhbnNpdGlvbix0d2VlbjsKLy8gSW5pdGlhbGl6ZSB0aGUgc2VsZiB0aW1lciB3aGVuIHRoZSB0cmFuc2l0aW9uIGlzIGNyZWF0ZWQuCi8vIE5vdGUgdGhlIGFjdHVhbCBkZWxheSBpcyBub3Qga25vd24gdW50aWwgdGhlIGZpcnN0IGNhbGxiYWNrIQpzY2hlZHVsZXNbaWRdPXNlbGY7c2VsZi50aW1lcj1kM1RpbWVyLnRpbWVyKHNjaGVkdWxlLDAsc2VsZi50aW1lKTtmdW5jdGlvbiBzY2hlZHVsZShlbGFwc2VkKXtzZWxmLnN0YXRlPVNDSEVEVUxFRDtzZWxmLnRpbWVyLnJlc3RhcnQoc3RhcnQsc2VsZi5kZWxheSxzZWxmLnRpbWUpOwovLyBJZiB0aGUgZWxhcHNlZCBkZWxheSBpcyBsZXNzIHRoYW4gb3VyIGZpcnN0IHNsZWVwLCBzdGFydCBpbW1lZGlhdGVseS4KaWYoc2VsZi5kZWxheTw9ZWxhcHNlZClzdGFydChlbGFwc2VkLXNlbGYuZGVsYXkpfWZ1bmN0aW9uIHN0YXJ0KGVsYXBzZWQpe3ZhciBpLGosbixvOwovLyBJZiB0aGUgc3RhdGUgaXMgbm90IFNDSEVEVUxFRCwgdGhlbiB3ZSBwcmV2aW91c2x5IGVycm9yZWQgb24gc3RhcnQuCmlmKHNlbGYuc3RhdGUhPT1TQ0hFRFVMRUQpcmV0dXJuIHN0b3AoKTtmb3IoaSBpbiBzY2hlZHVsZXMpe289c2NoZWR1bGVzW2ldO2lmKG8ubmFtZSE9PXNlbGYubmFtZSljb250aW51ZTsKLy8gV2hpbGUgdGhpcyBlbGVtZW50IGFscmVhZHkgaGFzIGEgc3RhcnRpbmcgdHJhbnNpdGlvbiBkdXJpbmcgdGhpcyBmcmFtZSwKLy8gZGVmZXIgc3RhcnRpbmcgYW4gaW50ZXJydXB0aW5nIHRyYW5zaXRpb24gdW50aWwgdGhhdCB0cmFuc2l0aW9uIGhhcyBhCi8vIGNoYW5jZSB0byB0aWNrIChhbmQgcG9zc2libHkgZW5kKTsgc2VlIGQzL2QzLXRyYW5zaXRpb24jNTQhCmlmKG8uc3RhdGU9PT1TVEFSVEVEKXJldHVybiBkM1RpbWVyLnRpbWVvdXQoc3RhcnQpOwovLyBJbnRlcnJ1cHQgdGhlIGFjdGl2ZSB0cmFuc2l0aW9uLCBpZiBhbnkuCmlmKG8uc3RhdGU9PT1SVU5OSU5HKXtvLnN0YXRlPUVOREVEO28udGltZXIuc3RvcCgpO28ub24uY2FsbCgiaW50ZXJydXB0Iixub2RlLG5vZGUuX19kYXRhX18sby5pbmRleCxvLmdyb3VwKTtkZWxldGUgc2NoZWR1bGVzW2ldfQovLyBDYW5jZWwgYW55IHByZS1lbXB0ZWQgdHJhbnNpdGlvbnMuCmVsc2UgaWYoK2k8aWQpe28uc3RhdGU9RU5ERUQ7by50aW1lci5zdG9wKCk7by5vbi5jYWxsKCJjYW5jZWwiLG5vZGUsbm9kZS5fX2RhdGFfXyxvLmluZGV4LG8uZ3JvdXApO2RlbGV0ZSBzY2hlZHVsZXNbaV19fQovLyBEZWZlciB0aGUgZmlyc3QgdGljayB0byBlbmQgb2YgdGhlIGN1cnJlbnQgZnJhbWU7IHNlZSBkMy9kMyMxNTc2LgovLyBOb3RlIHRoZSB0cmFuc2l0aW9uIG1heSBiZSBjYW5jZWxlZCBhZnRlciBzdGFydCBhbmQgYmVmb3JlIHRoZSBmaXJzdCB0aWNrIQovLyBOb3RlIHRoaXMgbXVzdCBiZSBzY2hlZHVsZWQgYmVmb3JlIHRoZSBzdGFydCBldmVudDsgc2VlIGQzL2QzLXRyYW5zaXRpb24jMTYhCi8vIEFzc3VtaW5nIHRoaXMgaXMgc3VjY2Vzc2Z1bCwgc3Vic2VxdWVudCBjYWxsYmFja3MgZ28gc3RyYWlnaHQgdG8gdGljay4KZDNUaW1lci50aW1lb3V0KGZ1bmN0aW9uKCl7aWYoc2VsZi5zdGF0ZT09PVNUQVJURUQpe3NlbGYuc3RhdGU9UlVOTklORztzZWxmLnRpbWVyLnJlc3RhcnQodGljayxzZWxmLmRlbGF5LHNlbGYudGltZSk7dGljayhlbGFwc2VkKX19KTsKLy8gRGlzcGF0Y2ggdGhlIHN0YXJ0IGV2ZW50LgovLyBOb3RlIHRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSB0aGUgdHdlZW4gYXJlIGluaXRpYWxpemVkLgpzZWxmLnN0YXRlPVNUQVJUSU5HO3NlbGYub24uY2FsbCgic3RhcnQiLG5vZGUsbm9kZS5fX2RhdGFfXyxzZWxmLmluZGV4LHNlbGYuZ3JvdXApO2lmKHNlbGYuc3RhdGUhPT1TVEFSVElORylyZXR1cm47Ly8gaW50ZXJydXB0ZWQKc2VsZi5zdGF0ZT1TVEFSVEVEOwovLyBJbml0aWFsaXplIHRoZSB0d2VlbiwgZGVsZXRpbmcgbnVsbCB0d2Vlbi4KdHdlZW49bmV3IEFycmF5KG49c2VsZi50d2Vlbi5sZW5ndGgpO2ZvcihpPTAsaj0tMTtpPG47KytpKXtpZihvPXNlbGYudHdlZW5baV0udmFsdWUuY2FsbChub2RlLG5vZGUuX19kYXRhX18sc2VsZi5pbmRleCxzZWxmLmdyb3VwKSl7dHdlZW5bKytqXT1vfX10d2Vlbi5sZW5ndGg9aisxfWZ1bmN0aW9uIHRpY2soZWxhcHNlZCl7dmFyIHQ9ZWxhcHNlZDxzZWxmLmR1cmF0aW9uP3NlbGYuZWFzZS5jYWxsKG51bGwsZWxhcHNlZC9zZWxmLmR1cmF0aW9uKTooc2VsZi50aW1lci5yZXN0YXJ0KHN0b3ApLHNlbGYuc3RhdGU9RU5ESU5HLDEpLGk9LTEsbj10d2Vlbi5sZW5ndGg7d2hpbGUoKytpPG4pe3R3ZWVuW2ldLmNhbGwobm9kZSx0KX0KLy8gRGlzcGF0Y2ggdGhlIGVuZCBldmVudC4KaWYoc2VsZi5zdGF0ZT09PUVORElORyl7c2VsZi5vbi5jYWxsKCJlbmQiLG5vZGUsbm9kZS5fX2RhdGFfXyxzZWxmLmluZGV4LHNlbGYuZ3JvdXApO3N0b3AoKX19ZnVuY3Rpb24gc3RvcCgpe3NlbGYuc3RhdGU9RU5ERUQ7c2VsZi50aW1lci5zdG9wKCk7ZGVsZXRlIHNjaGVkdWxlc1tpZF07Zm9yKHZhciBpIGluIHNjaGVkdWxlcylyZXR1cm47Ly8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycwpkZWxldGUgbm9kZS5fX3RyYW5zaXRpb259fWZ1bmN0aW9uIGludGVycnVwdChub2RlLG5hbWUpe3ZhciBzY2hlZHVsZXM9bm9kZS5fX3RyYW5zaXRpb24sc2NoZWR1bGUsYWN0aXZlLGVtcHR5PXRydWUsaTtpZighc2NoZWR1bGVzKXJldHVybjtuYW1lPW5hbWU9PW51bGw/bnVsbDpuYW1lKyIiO2ZvcihpIGluIHNjaGVkdWxlcyl7aWYoKHNjaGVkdWxlPXNjaGVkdWxlc1tpXSkubmFtZSE9PW5hbWUpe2VtcHR5PWZhbHNlO2NvbnRpbnVlfWFjdGl2ZT1zY2hlZHVsZS5zdGF0ZT5TVEFSVElORyYmc2NoZWR1bGUuc3RhdGU8RU5ESU5HO3NjaGVkdWxlLnN0YXRlPUVOREVEO3NjaGVkdWxlLnRpbWVyLnN0b3AoKTtzY2hlZHVsZS5vbi5jYWxsKGFjdGl2ZT8iaW50ZXJydXB0IjoiY2FuY2VsIixub2RlLG5vZGUuX19kYXRhX18sc2NoZWR1bGUuaW5kZXgsc2NoZWR1bGUuZ3JvdXApO2RlbGV0ZSBzY2hlZHVsZXNbaV19aWYoZW1wdHkpZGVsZXRlIG5vZGUuX190cmFuc2l0aW9ufWZ1bmN0aW9uIHNlbGVjdGlvbl9pbnRlcnJ1cHQobmFtZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2ludGVycnVwdCh0aGlzLG5hbWUpfSl9ZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsbmFtZSl7dmFyIHR3ZWVuMCx0d2VlbjE7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHNjaGVkdWxlPXNldCh0aGlzLGlkKSx0d2Vlbj1zY2hlZHVsZS50d2VlbjsKLy8gSWYgdGhpcyBub2RlIHNoYXJlZCB0d2VlbiB3aXRoIHRoZSBwcmV2aW91cyBub2RlLAovLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSEKLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLgppZih0d2VlbiE9PXR3ZWVuMCl7dHdlZW4xPXR3ZWVuMD10d2Vlbjtmb3IodmFyIGk9MCxuPXR3ZWVuMS5sZW5ndGg7aTxuOysraSl7aWYodHdlZW4xW2ldLm5hbWU9PT1uYW1lKXt0d2VlbjE9dHdlZW4xLnNsaWNlKCk7dHdlZW4xLnNwbGljZShpLDEpO2JyZWFrfX19c2NoZWR1bGUudHdlZW49dHdlZW4xfX1mdW5jdGlvbiB0d2VlbkZ1bmN0aW9uKGlkLG5hbWUsdmFsdWUpe3ZhciB0d2VlbjAsdHdlZW4xO2lmKHR5cGVvZiB2YWx1ZSE9PSJmdW5jdGlvbiIpdGhyb3cgbmV3IEVycm9yO3JldHVybiBmdW5jdGlvbigpe3ZhciBzY2hlZHVsZT1zZXQodGhpcyxpZCksdHdlZW49c2NoZWR1bGUudHdlZW47Ci8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSwKLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhCi8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS4KaWYodHdlZW4hPT10d2VlbjApe3R3ZWVuMT0odHdlZW4wPXR3ZWVuKS5zbGljZSgpO2Zvcih2YXIgdD17bmFtZTpuYW1lLHZhbHVlOnZhbHVlfSxpPTAsbj10d2VlbjEubGVuZ3RoO2k8bjsrK2kpe2lmKHR3ZWVuMVtpXS5uYW1lPT09bmFtZSl7dHdlZW4xW2ldPXQ7YnJlYWt9fWlmKGk9PT1uKXR3ZWVuMS5wdXNoKHQpfXNjaGVkdWxlLnR3ZWVuPXR3ZWVuMX19ZnVuY3Rpb24gdHJhbnNpdGlvbl90d2VlbihuYW1lLHZhbHVlKXt2YXIgaWQ9dGhpcy5faWQ7bmFtZSs9IiI7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXt2YXIgdHdlZW49Z2V0KHRoaXMubm9kZSgpLGlkKS50d2Vlbjtmb3IodmFyIGk9MCxuPXR3ZWVuLmxlbmd0aCx0O2k8bjsrK2kpe2lmKCh0PXR3ZWVuW2ldKS5uYW1lPT09bmFtZSl7cmV0dXJuIHQudmFsdWV9fXJldHVybiBudWxsfXJldHVybiB0aGlzLmVhY2goKHZhbHVlPT1udWxsP3R3ZWVuUmVtb3ZlOnR3ZWVuRnVuY3Rpb24pKGlkLG5hbWUsdmFsdWUpKX1mdW5jdGlvbiB0d2VlblZhbHVlKHRyYW5zaXRpb24sbmFtZSx2YWx1ZSl7dmFyIGlkPXRyYW5zaXRpb24uX2lkO3RyYW5zaXRpb24uZWFjaChmdW5jdGlvbigpe3ZhciBzY2hlZHVsZT1zZXQodGhpcyxpZCk7KHNjaGVkdWxlLnZhbHVlfHwoc2NoZWR1bGUudmFsdWU9e30pKVtuYW1lXT12YWx1ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KTtyZXR1cm4gZnVuY3Rpb24obm9kZSl7cmV0dXJuIGdldChub2RlLGlkKS52YWx1ZVtuYW1lXX19ZnVuY3Rpb24gaW50ZXJwb2xhdGUoYSxiKXt2YXIgYztyZXR1cm4odHlwZW9mIGI9PT0ibnVtYmVyIj9kM0ludGVycG9sYXRlLmludGVycG9sYXRlTnVtYmVyOmIgaW5zdGFuY2VvZiBkM0NvbG9yLmNvbG9yP2QzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVSZ2I6KGM9ZDNDb2xvci5jb2xvcihiKSk/KGI9YyxkM0ludGVycG9sYXRlLmludGVycG9sYXRlUmdiKTpkM0ludGVycG9sYXRlLmludGVycG9sYXRlU3RyaW5nKShhLGIpfWZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSl9fWZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSxmdWxsbmFtZS5sb2NhbCl9fWZ1bmN0aW9uIGF0dHJDb25zdGFudChuYW1lLGludGVycG9sYXRlLHZhbHVlMSl7dmFyIHN0cmluZzAwLHN0cmluZzE9dmFsdWUxKyIiLGludGVycG9sYXRlMDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgc3RyaW5nMD10aGlzLmdldEF0dHJpYnV0ZShuYW1lKTtyZXR1cm4gc3RyaW5nMD09PXN0cmluZzE/bnVsbDpzdHJpbmcwPT09c3RyaW5nMDA/aW50ZXJwb2xhdGUwOmludGVycG9sYXRlMD1pbnRlcnBvbGF0ZShzdHJpbmcwMD1zdHJpbmcwLHZhbHVlMSl9fWZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLGludGVycG9sYXRlLHZhbHVlMSl7dmFyIHN0cmluZzAwLHN0cmluZzE9dmFsdWUxKyIiLGludGVycG9sYXRlMDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgc3RyaW5nMD10aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLGZ1bGxuYW1lLmxvY2FsKTtyZXR1cm4gc3RyaW5nMD09PXN0cmluZzE/bnVsbDpzdHJpbmcwPT09c3RyaW5nMDA/aW50ZXJwb2xhdGUwOmludGVycG9sYXRlMD1pbnRlcnBvbGF0ZShzdHJpbmcwMD1zdHJpbmcwLHZhbHVlMSl9fWZ1bmN0aW9uIGF0dHJGdW5jdGlvbihuYW1lLGludGVycG9sYXRlLHZhbHVlKXt2YXIgc3RyaW5nMDAsc3RyaW5nMTAsaW50ZXJwb2xhdGUwO3JldHVybiBmdW5jdGlvbigpe3ZhciBzdHJpbmcwLHZhbHVlMT12YWx1ZSh0aGlzKSxzdHJpbmcxO2lmKHZhbHVlMT09bnVsbClyZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtzdHJpbmcwPXRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpO3N0cmluZzE9dmFsdWUxKyIiO3JldHVybiBzdHJpbmcwPT09c3RyaW5nMT9udWxsOnN0cmluZzA9PT1zdHJpbmcwMCYmc3RyaW5nMT09PXN0cmluZzEwP2ludGVycG9sYXRlMDooc3RyaW5nMTA9c3RyaW5nMSxpbnRlcnBvbGF0ZTA9aW50ZXJwb2xhdGUoc3RyaW5nMDA9c3RyaW5nMCx2YWx1ZTEpKX19ZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsaW50ZXJwb2xhdGUsdmFsdWUpe3ZhciBzdHJpbmcwMCxzdHJpbmcxMCxpbnRlcnBvbGF0ZTA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHN0cmluZzAsdmFsdWUxPXZhbHVlKHRoaXMpLHN0cmluZzE7aWYodmFsdWUxPT1udWxsKXJldHVybiB2b2lkIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsZnVsbG5hbWUubG9jYWwpO3N0cmluZzA9dGhpcy5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSxmdWxsbmFtZS5sb2NhbCk7c3RyaW5nMT12YWx1ZTErIiI7cmV0dXJuIHN0cmluZzA9PT1zdHJpbmcxP251bGw6c3RyaW5nMD09PXN0cmluZzAwJiZzdHJpbmcxPT09c3RyaW5nMTA/aW50ZXJwb2xhdGUwOihzdHJpbmcxMD1zdHJpbmcxLGludGVycG9sYXRlMD1pbnRlcnBvbGF0ZShzdHJpbmcwMD1zdHJpbmcwLHZhbHVlMSkpfX1mdW5jdGlvbiB0cmFuc2l0aW9uX2F0dHIobmFtZSx2YWx1ZSl7dmFyIGZ1bGxuYW1lPWQzU2VsZWN0aW9uLm5hbWVzcGFjZShuYW1lKSxpPWZ1bGxuYW1lPT09InRyYW5zZm9ybSI/ZDNJbnRlcnBvbGF0ZS5pbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZzppbnRlcnBvbGF0ZTtyZXR1cm4gdGhpcy5hdHRyVHdlZW4obmFtZSx0eXBlb2YgdmFsdWU9PT0iZnVuY3Rpb24iPyhmdWxsbmFtZS5sb2NhbD9hdHRyRnVuY3Rpb25OUzphdHRyRnVuY3Rpb24pKGZ1bGxuYW1lLGksdHdlZW5WYWx1ZSh0aGlzLCJhdHRyLiIrbmFtZSx2YWx1ZSkpOnZhbHVlPT1udWxsPyhmdWxsbmFtZS5sb2NhbD9hdHRyUmVtb3ZlTlM6YXR0clJlbW92ZSkoZnVsbG5hbWUpOihmdWxsbmFtZS5sb2NhbD9hdHRyQ29uc3RhbnROUzphdHRyQ29uc3RhbnQpKGZ1bGxuYW1lLGksdmFsdWUpKX1mdW5jdGlvbiBhdHRySW50ZXJwb2xhdGUobmFtZSxpKXtyZXR1cm4gZnVuY3Rpb24odCl7dGhpcy5zZXRBdHRyaWJ1dGUobmFtZSxpLmNhbGwodGhpcyx0KSl9fWZ1bmN0aW9uIGF0dHJJbnRlcnBvbGF0ZU5TKGZ1bGxuYW1lLGkpe3JldHVybiBmdW5jdGlvbih0KXt0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLGZ1bGxuYW1lLmxvY2FsLGkuY2FsbCh0aGlzLHQpKX19ZnVuY3Rpb24gYXR0clR3ZWVuTlMoZnVsbG5hbWUsdmFsdWUpe3ZhciB0MCxpMDtmdW5jdGlvbiB0d2Vlbigpe3ZhciBpPXZhbHVlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihpIT09aTApdDA9KGkwPWkpJiZhdHRySW50ZXJwb2xhdGVOUyhmdWxsbmFtZSxpKTtyZXR1cm4gdDB9dHdlZW4uX3ZhbHVlPXZhbHVlO3JldHVybiB0d2Vlbn1mdW5jdGlvbiBhdHRyVHdlZW4obmFtZSx2YWx1ZSl7dmFyIHQwLGkwO2Z1bmN0aW9uIHR3ZWVuKCl7dmFyIGk9dmFsdWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGkhPT1pMCl0MD0oaTA9aSkmJmF0dHJJbnRlcnBvbGF0ZShuYW1lLGkpO3JldHVybiB0MH10d2Vlbi5fdmFsdWU9dmFsdWU7cmV0dXJuIHR3ZWVufWZ1bmN0aW9uIHRyYW5zaXRpb25fYXR0clR3ZWVuKG5hbWUsdmFsdWUpe3ZhciBrZXk9ImF0dHIuIituYW1lO2lmKGFyZ3VtZW50cy5sZW5ndGg8MilyZXR1cm4oa2V5PXRoaXMudHdlZW4oa2V5KSkmJmtleS5fdmFsdWU7aWYodmFsdWU9PW51bGwpcmV0dXJuIHRoaXMudHdlZW4oa2V5LG51bGwpO2lmKHR5cGVvZiB2YWx1ZSE9PSJmdW5jdGlvbiIpdGhyb3cgbmV3IEVycm9yO3ZhciBmdWxsbmFtZT1kM1NlbGVjdGlvbi5uYW1lc3BhY2UobmFtZSk7cmV0dXJuIHRoaXMudHdlZW4oa2V5LChmdWxsbmFtZS5sb2NhbD9hdHRyVHdlZW5OUzphdHRyVHdlZW4pKGZ1bGxuYW1lLHZhbHVlKSl9ZnVuY3Rpb24gZGVsYXlGdW5jdGlvbihpZCx2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7aW5pdCh0aGlzLGlkKS5kZWxheT0rdmFsdWUuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1mdW5jdGlvbiBkZWxheUNvbnN0YW50KGlkLHZhbHVlKXtyZXR1cm4gdmFsdWU9K3ZhbHVlLGZ1bmN0aW9uKCl7aW5pdCh0aGlzLGlkKS5kZWxheT12YWx1ZX19ZnVuY3Rpb24gdHJhbnNpdGlvbl9kZWxheSh2YWx1ZSl7dmFyIGlkPXRoaXMuX2lkO3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaCgodHlwZW9mIHZhbHVlPT09ImZ1bmN0aW9uIj9kZWxheUZ1bmN0aW9uOmRlbGF5Q29uc3RhbnQpKGlkLHZhbHVlKSk6Z2V0KHRoaXMubm9kZSgpLGlkKS5kZWxheX1mdW5jdGlvbiBkdXJhdGlvbkZ1bmN0aW9uKGlkLHZhbHVlKXtyZXR1cm4gZnVuY3Rpb24oKXtzZXQodGhpcyxpZCkuZHVyYXRpb249K3ZhbHVlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19ZnVuY3Rpb24gZHVyYXRpb25Db25zdGFudChpZCx2YWx1ZSl7cmV0dXJuIHZhbHVlPSt2YWx1ZSxmdW5jdGlvbigpe3NldCh0aGlzLGlkKS5kdXJhdGlvbj12YWx1ZX19ZnVuY3Rpb24gdHJhbnNpdGlvbl9kdXJhdGlvbih2YWx1ZSl7dmFyIGlkPXRoaXMuX2lkO3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuZWFjaCgodHlwZW9mIHZhbHVlPT09ImZ1bmN0aW9uIj9kdXJhdGlvbkZ1bmN0aW9uOmR1cmF0aW9uQ29uc3RhbnQpKGlkLHZhbHVlKSk6Z2V0KHRoaXMubm9kZSgpLGlkKS5kdXJhdGlvbn1mdW5jdGlvbiBlYXNlQ29uc3RhbnQoaWQsdmFsdWUpe2lmKHR5cGVvZiB2YWx1ZSE9PSJmdW5jdGlvbiIpdGhyb3cgbmV3IEVycm9yO3JldHVybiBmdW5jdGlvbigpe3NldCh0aGlzLGlkKS5lYXNlPXZhbHVlfX1mdW5jdGlvbiB0cmFuc2l0aW9uX2Vhc2UodmFsdWUpe3ZhciBpZD10aGlzLl9pZDtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLmVhY2goZWFzZUNvbnN0YW50KGlkLHZhbHVlKSk6Z2V0KHRoaXMubm9kZSgpLGlkKS5lYXNlfWZ1bmN0aW9uIHRyYW5zaXRpb25fZmlsdGVyKG1hdGNoKXtpZih0eXBlb2YgbWF0Y2ghPT0iZnVuY3Rpb24iKW1hdGNoPWQzU2VsZWN0aW9uLm1hdGNoZXIobWF0Y2gpO2Zvcih2YXIgZ3JvdXBzPXRoaXMuX2dyb3VwcyxtPWdyb3Vwcy5sZW5ndGgsc3ViZ3JvdXBzPW5ldyBBcnJheShtKSxqPTA7ajxtOysrail7Zm9yKHZhciBncm91cD1ncm91cHNbal0sbj1ncm91cC5sZW5ndGgsc3ViZ3JvdXA9c3ViZ3JvdXBzW2pdPVtdLG5vZGUsaT0wO2k8bjsrK2kpe2lmKChub2RlPWdyb3VwW2ldKSYmbWF0Y2guY2FsbChub2RlLG5vZGUuX19kYXRhX18saSxncm91cCkpe3N1Ymdyb3VwLnB1c2gobm9kZSl9fX1yZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLHRoaXMuX3BhcmVudHMsdGhpcy5fbmFtZSx0aGlzLl9pZCl9ZnVuY3Rpb24gdHJhbnNpdGlvbl9tZXJnZSh0cmFuc2l0aW9uKXtpZih0cmFuc2l0aW9uLl9pZCE9PXRoaXMuX2lkKXRocm93IG5ldyBFcnJvcjtmb3IodmFyIGdyb3VwczA9dGhpcy5fZ3JvdXBzLGdyb3VwczE9dHJhbnNpdGlvbi5fZ3JvdXBzLG0wPWdyb3VwczAubGVuZ3RoLG0xPWdyb3VwczEubGVuZ3RoLG09TWF0aC5taW4obTAsbTEpLG1lcmdlcz1uZXcgQXJyYXkobTApLGo9MDtqPG07KytqKXtmb3IodmFyIGdyb3VwMD1ncm91cHMwW2pdLGdyb3VwMT1ncm91cHMxW2pdLG49Z3JvdXAwLmxlbmd0aCxtZXJnZT1tZXJnZXNbal09bmV3IEFycmF5KG4pLG5vZGUsaT0wO2k8bjsrK2kpe2lmKG5vZGU9Z3JvdXAwW2ldfHxncm91cDFbaV0pe21lcmdlW2ldPW5vZGV9fX1mb3IoO2o8bTA7KytqKXttZXJnZXNbal09Z3JvdXBzMFtqXX1yZXR1cm4gbmV3IFRyYW5zaXRpb24obWVyZ2VzLHRoaXMuX3BhcmVudHMsdGhpcy5fbmFtZSx0aGlzLl9pZCl9ZnVuY3Rpb24gc3RhcnQobmFtZSl7cmV0dXJuKG5hbWUrIiIpLnRyaW0oKS5zcGxpdCgvXnxccysvKS5ldmVyeShmdW5jdGlvbih0KXt2YXIgaT10LmluZGV4T2YoIi4iKTtpZihpPj0wKXQ9dC5zbGljZSgwLGkpO3JldHVybiF0fHx0PT09InN0YXJ0In0pfWZ1bmN0aW9uIG9uRnVuY3Rpb24oaWQsbmFtZSxsaXN0ZW5lcil7dmFyIG9uMCxvbjEsc2l0PXN0YXJ0KG5hbWUpP2luaXQ6c2V0O3JldHVybiBmdW5jdGlvbigpe3ZhciBzY2hlZHVsZT1zaXQodGhpcyxpZCksb249c2NoZWR1bGUub247Ci8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLAovLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSEKLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLgppZihvbiE9PW9uMCkob24xPShvbjA9b24pLmNvcHkoKSkub24obmFtZSxsaXN0ZW5lcik7c2NoZWR1bGUub249b24xfX1mdW5jdGlvbiB0cmFuc2l0aW9uX29uKG5hbWUsbGlzdGVuZXIpe3ZhciBpZD10aGlzLl9pZDtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwyP2dldCh0aGlzLm5vZGUoKSxpZCkub24ub24obmFtZSk6dGhpcy5lYWNoKG9uRnVuY3Rpb24oaWQsbmFtZSxsaXN0ZW5lcikpfWZ1bmN0aW9uIHJlbW92ZUZ1bmN0aW9uKGlkKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgcGFyZW50PXRoaXMucGFyZW50Tm9kZTtmb3IodmFyIGkgaW4gdGhpcy5fX3RyYW5zaXRpb24paWYoK2khPT1pZClyZXR1cm47aWYocGFyZW50KXBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKX19ZnVuY3Rpb24gdHJhbnNpdGlvbl9yZW1vdmUoKXtyZXR1cm4gdGhpcy5vbigiZW5kLnJlbW92ZSIscmVtb3ZlRnVuY3Rpb24odGhpcy5faWQpKX1mdW5jdGlvbiB0cmFuc2l0aW9uX3NlbGVjdChzZWxlY3Qpe3ZhciBuYW1lPXRoaXMuX25hbWUsaWQ9dGhpcy5faWQ7aWYodHlwZW9mIHNlbGVjdCE9PSJmdW5jdGlvbiIpc2VsZWN0PWQzU2VsZWN0aW9uLnNlbGVjdG9yKHNlbGVjdCk7Zm9yKHZhciBncm91cHM9dGhpcy5fZ3JvdXBzLG09Z3JvdXBzLmxlbmd0aCxzdWJncm91cHM9bmV3IEFycmF5KG0pLGo9MDtqPG07KytqKXtmb3IodmFyIGdyb3VwPWdyb3Vwc1tqXSxuPWdyb3VwLmxlbmd0aCxzdWJncm91cD1zdWJncm91cHNbal09bmV3IEFycmF5KG4pLG5vZGUsc3Vibm9kZSxpPTA7aTxuOysraSl7aWYoKG5vZGU9Z3JvdXBbaV0pJiYoc3Vibm9kZT1zZWxlY3QuY2FsbChub2RlLG5vZGUuX19kYXRhX18saSxncm91cCkpKXtpZigiX19kYXRhX18iaW4gbm9kZSlzdWJub2RlLl9fZGF0YV9fPW5vZGUuX19kYXRhX187c3ViZ3JvdXBbaV09c3Vibm9kZTtzY2hlZHVsZShzdWJncm91cFtpXSxuYW1lLGlkLGksc3ViZ3JvdXAsZ2V0KG5vZGUsaWQpKX19fXJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsdGhpcy5fcGFyZW50cyxuYW1lLGlkKX1mdW5jdGlvbiB0cmFuc2l0aW9uX3NlbGVjdEFsbChzZWxlY3Qpe3ZhciBuYW1lPXRoaXMuX25hbWUsaWQ9dGhpcy5faWQ7aWYodHlwZW9mIHNlbGVjdCE9PSJmdW5jdGlvbiIpc2VsZWN0PWQzU2VsZWN0aW9uLnNlbGVjdG9yQWxsKHNlbGVjdCk7Zm9yKHZhciBncm91cHM9dGhpcy5fZ3JvdXBzLG09Z3JvdXBzLmxlbmd0aCxzdWJncm91cHM9W10scGFyZW50cz1bXSxqPTA7ajxtOysrail7Zm9yKHZhciBncm91cD1ncm91cHNbal0sbj1ncm91cC5sZW5ndGgsbm9kZSxpPTA7aTxuOysraSl7aWYobm9kZT1ncm91cFtpXSl7Zm9yKHZhciBjaGlsZHJlbj1zZWxlY3QuY2FsbChub2RlLG5vZGUuX19kYXRhX18saSxncm91cCksY2hpbGQsaW5oZXJpdD1nZXQobm9kZSxpZCksaz0wLGw9Y2hpbGRyZW4ubGVuZ3RoO2s8bDsrK2spe2lmKGNoaWxkPWNoaWxkcmVuW2tdKXtzY2hlZHVsZShjaGlsZCxuYW1lLGlkLGssY2hpbGRyZW4saW5oZXJpdCl9fXN1Ymdyb3Vwcy5wdXNoKGNoaWxkcmVuKTtwYXJlbnRzLnB1c2gobm9kZSl9fX1yZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLHBhcmVudHMsbmFtZSxpZCl9dmFyIFNlbGVjdGlvbj1kM1NlbGVjdGlvbi5zZWxlY3Rpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yO2Z1bmN0aW9uIHRyYW5zaXRpb25fc2VsZWN0aW9uKCl7cmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZ3JvdXBzLHRoaXMuX3BhcmVudHMpfWZ1bmN0aW9uIHN0eWxlTnVsbChuYW1lLGludGVycG9sYXRlKXt2YXIgc3RyaW5nMDAsc3RyaW5nMTAsaW50ZXJwb2xhdGUwO3JldHVybiBmdW5jdGlvbigpe3ZhciBzdHJpbmcwPWQzU2VsZWN0aW9uLnN0eWxlKHRoaXMsbmFtZSksc3RyaW5nMT0odGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSxkM1NlbGVjdGlvbi5zdHlsZSh0aGlzLG5hbWUpKTtyZXR1cm4gc3RyaW5nMD09PXN0cmluZzE/bnVsbDpzdHJpbmcwPT09c3RyaW5nMDAmJnN0cmluZzE9PT1zdHJpbmcxMD9pbnRlcnBvbGF0ZTA6aW50ZXJwb2xhdGUwPWludGVycG9sYXRlKHN0cmluZzAwPXN0cmluZzAsc3RyaW5nMTA9c3RyaW5nMSl9fWZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSl9fWZ1bmN0aW9uIHN0eWxlQ29uc3RhbnQobmFtZSxpbnRlcnBvbGF0ZSx2YWx1ZTEpe3ZhciBzdHJpbmcwMCxzdHJpbmcxPXZhbHVlMSsiIixpbnRlcnBvbGF0ZTA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHN0cmluZzA9ZDNTZWxlY3Rpb24uc3R5bGUodGhpcyxuYW1lKTtyZXR1cm4gc3RyaW5nMD09PXN0cmluZzE/bnVsbDpzdHJpbmcwPT09c3RyaW5nMDA/aW50ZXJwb2xhdGUwOmludGVycG9sYXRlMD1pbnRlcnBvbGF0ZShzdHJpbmcwMD1zdHJpbmcwLHZhbHVlMSl9fWZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSxpbnRlcnBvbGF0ZSx2YWx1ZSl7dmFyIHN0cmluZzAwLHN0cmluZzEwLGludGVycG9sYXRlMDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgc3RyaW5nMD1kM1NlbGVjdGlvbi5zdHlsZSh0aGlzLG5hbWUpLHZhbHVlMT12YWx1ZSh0aGlzKSxzdHJpbmcxPXZhbHVlMSsiIjtpZih2YWx1ZTE9PW51bGwpc3RyaW5nMT12YWx1ZTE9KHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksZDNTZWxlY3Rpb24uc3R5bGUodGhpcyxuYW1lKSk7cmV0dXJuIHN0cmluZzA9PT1zdHJpbmcxP251bGw6c3RyaW5nMD09PXN0cmluZzAwJiZzdHJpbmcxPT09c3RyaW5nMTA/aW50ZXJwb2xhdGUwOihzdHJpbmcxMD1zdHJpbmcxLGludGVycG9sYXRlMD1pbnRlcnBvbGF0ZShzdHJpbmcwMD1zdHJpbmcwLHZhbHVlMSkpfX1mdW5jdGlvbiBzdHlsZU1heWJlUmVtb3ZlKGlkLG5hbWUpe3ZhciBvbjAsb24xLGxpc3RlbmVyMCxrZXk9InN0eWxlLiIrbmFtZSxldmVudD0iZW5kLiIra2V5LHJlbW92ZTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgc2NoZWR1bGU9c2V0KHRoaXMsaWQpLG9uPXNjaGVkdWxlLm9uLGxpc3RlbmVyPXNjaGVkdWxlLnZhbHVlW2tleV09PW51bGw/cmVtb3ZlfHwocmVtb3ZlPXN0eWxlUmVtb3ZlKG5hbWUpKTp1bmRlZmluZWQ7Ci8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLAovLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSEKLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLgppZihvbiE9PW9uMHx8bGlzdGVuZXIwIT09bGlzdGVuZXIpKG9uMT0ob24wPW9uKS5jb3B5KCkpLm9uKGV2ZW50LGxpc3RlbmVyMD1saXN0ZW5lcik7c2NoZWR1bGUub249b24xfX1mdW5jdGlvbiB0cmFuc2l0aW9uX3N0eWxlKG5hbWUsdmFsdWUscHJpb3JpdHkpe3ZhciBpPShuYW1lKz0iIik9PT0idHJhbnNmb3JtIj9kM0ludGVycG9sYXRlLmludGVycG9sYXRlVHJhbnNmb3JtQ3NzOmludGVycG9sYXRlO3JldHVybiB2YWx1ZT09bnVsbD90aGlzLnN0eWxlVHdlZW4obmFtZSxzdHlsZU51bGwobmFtZSxpKSkub24oImVuZC5zdHlsZS4iK25hbWUsc3R5bGVSZW1vdmUobmFtZSkpOnR5cGVvZiB2YWx1ZT09PSJmdW5jdGlvbiI/dGhpcy5zdHlsZVR3ZWVuKG5hbWUsc3R5bGVGdW5jdGlvbihuYW1lLGksdHdlZW5WYWx1ZSh0aGlzLCJzdHlsZS4iK25hbWUsdmFsdWUpKSkuZWFjaChzdHlsZU1heWJlUmVtb3ZlKHRoaXMuX2lkLG5hbWUpKTp0aGlzLnN0eWxlVHdlZW4obmFtZSxzdHlsZUNvbnN0YW50KG5hbWUsaSx2YWx1ZSkscHJpb3JpdHkpLm9uKCJlbmQuc3R5bGUuIituYW1lLG51bGwpfWZ1bmN0aW9uIHN0eWxlSW50ZXJwb2xhdGUobmFtZSxpLHByaW9yaXR5KXtyZXR1cm4gZnVuY3Rpb24odCl7dGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLGkuY2FsbCh0aGlzLHQpLHByaW9yaXR5KX19ZnVuY3Rpb24gc3R5bGVUd2VlbihuYW1lLHZhbHVlLHByaW9yaXR5KXt2YXIgdCxpMDtmdW5jdGlvbiB0d2Vlbigpe3ZhciBpPXZhbHVlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihpIT09aTApdD0oaTA9aSkmJnN0eWxlSW50ZXJwb2xhdGUobmFtZSxpLHByaW9yaXR5KTtyZXR1cm4gdH10d2Vlbi5fdmFsdWU9dmFsdWU7cmV0dXJuIHR3ZWVufWZ1bmN0aW9uIHRyYW5zaXRpb25fc3R5bGVUd2VlbihuYW1lLHZhbHVlLHByaW9yaXR5KXt2YXIga2V5PSJzdHlsZS4iKyhuYW1lKz0iIik7aWYoYXJndW1lbnRzLmxlbmd0aDwyKXJldHVybihrZXk9dGhpcy50d2VlbihrZXkpKSYma2V5Ll92YWx1ZTtpZih2YWx1ZT09bnVsbClyZXR1cm4gdGhpcy50d2VlbihrZXksbnVsbCk7aWYodHlwZW9mIHZhbHVlIT09ImZ1bmN0aW9uIil0aHJvdyBuZXcgRXJyb3I7cmV0dXJuIHRoaXMudHdlZW4oa2V5LHN0eWxlVHdlZW4obmFtZSx2YWx1ZSxwcmlvcml0eT09bnVsbD8iIjpwcmlvcml0eSkpfWZ1bmN0aW9uIHRleHRDb25zdGFudCh2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy50ZXh0Q29udGVudD12YWx1ZX19ZnVuY3Rpb24gdGV4dEZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdmFsdWUxPXZhbHVlKHRoaXMpO3RoaXMudGV4dENvbnRlbnQ9dmFsdWUxPT1udWxsPyIiOnZhbHVlMX19ZnVuY3Rpb24gdHJhbnNpdGlvbl90ZXh0KHZhbHVlKXtyZXR1cm4gdGhpcy50d2VlbigidGV4dCIsdHlwZW9mIHZhbHVlPT09ImZ1bmN0aW9uIj90ZXh0RnVuY3Rpb24odHdlZW5WYWx1ZSh0aGlzLCJ0ZXh0Iix2YWx1ZSkpOnRleHRDb25zdGFudCh2YWx1ZT09bnVsbD8iIjp2YWx1ZSsiIikpfWZ1bmN0aW9uIHRleHRJbnRlcnBvbGF0ZShpKXtyZXR1cm4gZnVuY3Rpb24odCl7dGhpcy50ZXh0Q29udGVudD1pLmNhbGwodGhpcyx0KX19ZnVuY3Rpb24gdGV4dFR3ZWVuKHZhbHVlKXt2YXIgdDAsaTA7ZnVuY3Rpb24gdHdlZW4oKXt2YXIgaT12YWx1ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoaSE9PWkwKXQwPShpMD1pKSYmdGV4dEludGVycG9sYXRlKGkpO3JldHVybiB0MH10d2Vlbi5fdmFsdWU9dmFsdWU7cmV0dXJuIHR3ZWVufWZ1bmN0aW9uIHRyYW5zaXRpb25fdGV4dFR3ZWVuKHZhbHVlKXt2YXIga2V5PSJ0ZXh0IjtpZihhcmd1bWVudHMubGVuZ3RoPDEpcmV0dXJuKGtleT10aGlzLnR3ZWVuKGtleSkpJiZrZXkuX3ZhbHVlO2lmKHZhbHVlPT1udWxsKXJldHVybiB0aGlzLnR3ZWVuKGtleSxudWxsKTtpZih0eXBlb2YgdmFsdWUhPT0iZnVuY3Rpb24iKXRocm93IG5ldyBFcnJvcjtyZXR1cm4gdGhpcy50d2VlbihrZXksdGV4dFR3ZWVuKHZhbHVlKSl9ZnVuY3Rpb24gdHJhbnNpdGlvbl90cmFuc2l0aW9uKCl7dmFyIG5hbWU9dGhpcy5fbmFtZSxpZDA9dGhpcy5faWQsaWQxPW5ld0lkKCk7Zm9yKHZhciBncm91cHM9dGhpcy5fZ3JvdXBzLG09Z3JvdXBzLmxlbmd0aCxqPTA7ajxtOysrail7Zm9yKHZhciBncm91cD1ncm91cHNbal0sbj1ncm91cC5sZW5ndGgsbm9kZSxpPTA7aTxuOysraSl7aWYobm9kZT1ncm91cFtpXSl7dmFyIGluaGVyaXQ9Z2V0KG5vZGUsaWQwKTtzY2hlZHVsZShub2RlLG5hbWUsaWQxLGksZ3JvdXAse3RpbWU6aW5oZXJpdC50aW1lK2luaGVyaXQuZGVsYXkraW5oZXJpdC5kdXJhdGlvbixkZWxheTowLGR1cmF0aW9uOmluaGVyaXQuZHVyYXRpb24sZWFzZTppbmhlcml0LmVhc2V9KX19fXJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsdGhpcy5fcGFyZW50cyxuYW1lLGlkMSl9ZnVuY3Rpb24gdHJhbnNpdGlvbl9lbmQoKXt2YXIgb24wLG9uMSx0aGF0PXRoaXMsaWQ9dGhhdC5faWQsc2l6ZT10aGF0LnNpemUoKTtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3ZhciBjYW5jZWw9e3ZhbHVlOnJlamVjdH0sZW5kPXt2YWx1ZTpmdW5jdGlvbigpe2lmKC0tc2l6ZT09PTApcmVzb2x2ZSgpfX07dGhhdC5lYWNoKGZ1bmN0aW9uKCl7dmFyIHNjaGVkdWxlPXNldCh0aGlzLGlkKSxvbj1zY2hlZHVsZS5vbjsKLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsCi8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIQovLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuCmlmKG9uIT09b24wKXtvbjE9KG9uMD1vbikuY29weSgpO29uMS5fLmNhbmNlbC5wdXNoKGNhbmNlbCk7b24xLl8uaW50ZXJydXB0LnB1c2goY2FuY2VsKTtvbjEuXy5lbmQucHVzaChlbmQpfXNjaGVkdWxlLm9uPW9uMX0pfSl9dmFyIGlkPTA7ZnVuY3Rpb24gVHJhbnNpdGlvbihncm91cHMscGFyZW50cyxuYW1lLGlkKXt0aGlzLl9ncm91cHM9Z3JvdXBzO3RoaXMuX3BhcmVudHM9cGFyZW50czt0aGlzLl9uYW1lPW5hbWU7dGhpcy5faWQ9aWR9ZnVuY3Rpb24gdHJhbnNpdGlvbihuYW1lKXtyZXR1cm4gZDNTZWxlY3Rpb24uc2VsZWN0aW9uKCkudHJhbnNpdGlvbihuYW1lKX1mdW5jdGlvbiBuZXdJZCgpe3JldHVybisraWR9dmFyIHNlbGVjdGlvbl9wcm90b3R5cGU9ZDNTZWxlY3Rpb24uc2VsZWN0aW9uLnByb3RvdHlwZTtUcmFuc2l0aW9uLnByb3RvdHlwZT10cmFuc2l0aW9uLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VHJhbnNpdGlvbixzZWxlY3Q6dHJhbnNpdGlvbl9zZWxlY3Qsc2VsZWN0QWxsOnRyYW5zaXRpb25fc2VsZWN0QWxsLGZpbHRlcjp0cmFuc2l0aW9uX2ZpbHRlcixtZXJnZTp0cmFuc2l0aW9uX21lcmdlLHNlbGVjdGlvbjp0cmFuc2l0aW9uX3NlbGVjdGlvbix0cmFuc2l0aW9uOnRyYW5zaXRpb25fdHJhbnNpdGlvbixjYWxsOnNlbGVjdGlvbl9wcm90b3R5cGUuY2FsbCxub2RlczpzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGVzLG5vZGU6c2VsZWN0aW9uX3Byb3RvdHlwZS5ub2RlLHNpemU6c2VsZWN0aW9uX3Byb3RvdHlwZS5zaXplLGVtcHR5OnNlbGVjdGlvbl9wcm90b3R5cGUuZW1wdHksZWFjaDpzZWxlY3Rpb25fcHJvdG90eXBlLmVhY2gsb246dHJhbnNpdGlvbl9vbixhdHRyOnRyYW5zaXRpb25fYXR0cixhdHRyVHdlZW46dHJhbnNpdGlvbl9hdHRyVHdlZW4sc3R5bGU6dHJhbnNpdGlvbl9zdHlsZSxzdHlsZVR3ZWVuOnRyYW5zaXRpb25fc3R5bGVUd2Vlbix0ZXh0OnRyYW5zaXRpb25fdGV4dCx0ZXh0VHdlZW46dHJhbnNpdGlvbl90ZXh0VHdlZW4scmVtb3ZlOnRyYW5zaXRpb25fcmVtb3ZlLHR3ZWVuOnRyYW5zaXRpb25fdHdlZW4sZGVsYXk6dHJhbnNpdGlvbl9kZWxheSxkdXJhdGlvbjp0cmFuc2l0aW9uX2R1cmF0aW9uLGVhc2U6dHJhbnNpdGlvbl9lYXNlLGVuZDp0cmFuc2l0aW9uX2VuZH07dmFyIGRlZmF1bHRUaW1pbmc9e3RpbWU6bnVsbCwvLyBTZXQgb24gdXNlLgpkZWxheTowLGR1cmF0aW9uOjI1MCxlYXNlOmQzRWFzZS5lYXNlQ3ViaWNJbk91dH07ZnVuY3Rpb24gaW5oZXJpdChub2RlLGlkKXt2YXIgdGltaW5nO3doaWxlKCEodGltaW5nPW5vZGUuX190cmFuc2l0aW9uKXx8ISh0aW1pbmc9dGltaW5nW2lkXSkpe2lmKCEobm9kZT1ub2RlLnBhcmVudE5vZGUpKXtyZXR1cm4gZGVmYXVsdFRpbWluZy50aW1lPWQzVGltZXIubm93KCksZGVmYXVsdFRpbWluZ319cmV0dXJuIHRpbWluZ31mdW5jdGlvbiBzZWxlY3Rpb25fdHJhbnNpdGlvbihuYW1lKXt2YXIgaWQsdGltaW5nO2lmKG5hbWUgaW5zdGFuY2VvZiBUcmFuc2l0aW9uKXtpZD1uYW1lLl9pZCxuYW1lPW5hbWUuX25hbWV9ZWxzZXtpZD1uZXdJZCgpLCh0aW1pbmc9ZGVmYXVsdFRpbWluZykudGltZT1kM1RpbWVyLm5vdygpLG5hbWU9bmFtZT09bnVsbD9udWxsOm5hbWUrIiJ9Zm9yKHZhciBncm91cHM9dGhpcy5fZ3JvdXBzLG09Z3JvdXBzLmxlbmd0aCxqPTA7ajxtOysrail7Zm9yKHZhciBncm91cD1ncm91cHNbal0sbj1ncm91cC5sZW5ndGgsbm9kZSxpPTA7aTxuOysraSl7aWYobm9kZT1ncm91cFtpXSl7c2NoZWR1bGUobm9kZSxuYW1lLGlkLGksZ3JvdXAsdGltaW5nfHxpbmhlcml0KG5vZGUsaWQpKX19fXJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsdGhpcy5fcGFyZW50cyxuYW1lLGlkKX1kM1NlbGVjdGlvbi5zZWxlY3Rpb24ucHJvdG90eXBlLmludGVycnVwdD1zZWxlY3Rpb25faW50ZXJydXB0O2QzU2VsZWN0aW9uLnNlbGVjdGlvbi5wcm90b3R5cGUudHJhbnNpdGlvbj1zZWxlY3Rpb25fdHJhbnNpdGlvbjt2YXIgcm9vdD1bbnVsbF07ZnVuY3Rpb24gYWN0aXZlKG5vZGUsbmFtZSl7dmFyIHNjaGVkdWxlcz1ub2RlLl9fdHJhbnNpdGlvbixzY2hlZHVsZSxpO2lmKHNjaGVkdWxlcyl7bmFtZT1uYW1lPT1udWxsP251bGw6bmFtZSsiIjtmb3IoaSBpbiBzY2hlZHVsZXMpe2lmKChzY2hlZHVsZT1zY2hlZHVsZXNbaV0pLnN0YXRlPlNDSEVEVUxFRCYmc2NoZWR1bGUubmFtZT09PW5hbWUpe3JldHVybiBuZXcgVHJhbnNpdGlvbihbW25vZGVdXSxyb290LG5hbWUsK2kpfX19cmV0dXJuIG51bGx9ZXhwb3J0cy5hY3RpdmU9YWN0aXZlO2V4cG9ydHMuaW50ZXJydXB0PWludGVycnVwdDtleHBvcnRzLnRyYW5zaXRpb249dHJhbnNpdGlvbjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7ImQzLWNvbG9yIjozNCwiZDMtZGlzcGF0Y2giOjM2LCJkMy1lYXNlIjozOSwiZDMtaW50ZXJwb2xhdGUiOjQ1LCJkMy1zZWxlY3Rpb24iOjUyLCJkMy10aW1lciI6NTZ9XSw1ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtdm9yb25vaS8gdjEuMS40IENvcHlyaWdodCAyMDE4IE1pa2UgQm9zdG9jawooZnVuY3Rpb24oZ2xvYmFsLGZhY3Rvcnkpe3R5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIj9mYWN0b3J5KGV4cG9ydHMpOnR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kP2RlZmluZShbImV4cG9ydHMiXSxmYWN0b3J5KTpmYWN0b3J5KGdsb2JhbC5kMz1nbG9iYWwuZDN8fHt9KX0pKHRoaXMsZnVuY3Rpb24oZXhwb3J0cyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGNvbnN0YW50KHgpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB4fX1mdW5jdGlvbiB4KGQpe3JldHVybiBkWzBdfWZ1bmN0aW9uIHkoZCl7cmV0dXJuIGRbMV19ZnVuY3Rpb24gUmVkQmxhY2tUcmVlKCl7dGhpcy5fPW51bGw7Ly8gcm9vdCBub2RlCn1mdW5jdGlvbiBSZWRCbGFja05vZGUobm9kZSl7bm9kZS5VPS8vIHBhcmVudCBub2RlCm5vZGUuQz0vLyBjb2xvciAtIHRydWUgZm9yIHJlZCwgZmFsc2UgZm9yIGJsYWNrCm5vZGUuTD0vLyBsZWZ0IG5vZGUKbm9kZS5SPS8vIHJpZ2h0IG5vZGUKbm9kZS5QPS8vIHByZXZpb3VzIG5vZGUKbm9kZS5OPW51bGw7Ly8gbmV4dCBub2RlCn1SZWRCbGFja1RyZWUucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpSZWRCbGFja1RyZWUsaW5zZXJ0OmZ1bmN0aW9uKGFmdGVyLG5vZGUpe3ZhciBwYXJlbnQsZ3JhbmRwYSx1bmNsZTtpZihhZnRlcil7bm9kZS5QPWFmdGVyO25vZGUuTj1hZnRlci5OO2lmKGFmdGVyLk4pYWZ0ZXIuTi5QPW5vZGU7YWZ0ZXIuTj1ub2RlO2lmKGFmdGVyLlIpe2FmdGVyPWFmdGVyLlI7d2hpbGUoYWZ0ZXIuTClhZnRlcj1hZnRlci5MO2FmdGVyLkw9bm9kZX1lbHNle2FmdGVyLlI9bm9kZX1wYXJlbnQ9YWZ0ZXJ9ZWxzZSBpZih0aGlzLl8pe2FmdGVyPVJlZEJsYWNrRmlyc3QodGhpcy5fKTtub2RlLlA9bnVsbDtub2RlLk49YWZ0ZXI7YWZ0ZXIuUD1hZnRlci5MPW5vZGU7cGFyZW50PWFmdGVyfWVsc2V7bm9kZS5QPW5vZGUuTj1udWxsO3RoaXMuXz1ub2RlO3BhcmVudD1udWxsfW5vZGUuTD1ub2RlLlI9bnVsbDtub2RlLlU9cGFyZW50O25vZGUuQz10cnVlO2FmdGVyPW5vZGU7d2hpbGUocGFyZW50JiZwYXJlbnQuQyl7Z3JhbmRwYT1wYXJlbnQuVTtpZihwYXJlbnQ9PT1ncmFuZHBhLkwpe3VuY2xlPWdyYW5kcGEuUjtpZih1bmNsZSYmdW5jbGUuQyl7cGFyZW50LkM9dW5jbGUuQz1mYWxzZTtncmFuZHBhLkM9dHJ1ZTthZnRlcj1ncmFuZHBhfWVsc2V7aWYoYWZ0ZXI9PT1wYXJlbnQuUil7UmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMscGFyZW50KTthZnRlcj1wYXJlbnQ7cGFyZW50PWFmdGVyLlV9cGFyZW50LkM9ZmFsc2U7Z3JhbmRwYS5DPXRydWU7UmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLGdyYW5kcGEpfX1lbHNle3VuY2xlPWdyYW5kcGEuTDtpZih1bmNsZSYmdW5jbGUuQyl7cGFyZW50LkM9dW5jbGUuQz1mYWxzZTtncmFuZHBhLkM9dHJ1ZTthZnRlcj1ncmFuZHBhfWVsc2V7aWYoYWZ0ZXI9PT1wYXJlbnQuTCl7UmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLHBhcmVudCk7YWZ0ZXI9cGFyZW50O3BhcmVudD1hZnRlci5VfXBhcmVudC5DPWZhbHNlO2dyYW5kcGEuQz10cnVlO1JlZEJsYWNrUm90YXRlTGVmdCh0aGlzLGdyYW5kcGEpfX1wYXJlbnQ9YWZ0ZXIuVX10aGlzLl8uQz1mYWxzZX0scmVtb3ZlOmZ1bmN0aW9uKG5vZGUpe2lmKG5vZGUuTilub2RlLk4uUD1ub2RlLlA7aWYobm9kZS5QKW5vZGUuUC5OPW5vZGUuTjtub2RlLk49bm9kZS5QPW51bGw7dmFyIHBhcmVudD1ub2RlLlUsc2libGluZyxsZWZ0PW5vZGUuTCxyaWdodD1ub2RlLlIsbmV4dCxyZWQ7aWYoIWxlZnQpbmV4dD1yaWdodDtlbHNlIGlmKCFyaWdodCluZXh0PWxlZnQ7ZWxzZSBuZXh0PVJlZEJsYWNrRmlyc3QocmlnaHQpO2lmKHBhcmVudCl7aWYocGFyZW50Lkw9PT1ub2RlKXBhcmVudC5MPW5leHQ7ZWxzZSBwYXJlbnQuUj1uZXh0fWVsc2V7dGhpcy5fPW5leHR9aWYobGVmdCYmcmlnaHQpe3JlZD1uZXh0LkM7bmV4dC5DPW5vZGUuQztuZXh0Lkw9bGVmdDtsZWZ0LlU9bmV4dDtpZihuZXh0IT09cmlnaHQpe3BhcmVudD1uZXh0LlU7bmV4dC5VPW5vZGUuVTtub2RlPW5leHQuUjtwYXJlbnQuTD1ub2RlO25leHQuUj1yaWdodDtyaWdodC5VPW5leHR9ZWxzZXtuZXh0LlU9cGFyZW50O3BhcmVudD1uZXh0O25vZGU9bmV4dC5SfX1lbHNle3JlZD1ub2RlLkM7bm9kZT1uZXh0fWlmKG5vZGUpbm9kZS5VPXBhcmVudDtpZihyZWQpcmV0dXJuO2lmKG5vZGUmJm5vZGUuQyl7bm9kZS5DPWZhbHNlO3JldHVybn1kb3tpZihub2RlPT09dGhpcy5fKWJyZWFrO2lmKG5vZGU9PT1wYXJlbnQuTCl7c2libGluZz1wYXJlbnQuUjtpZihzaWJsaW5nLkMpe3NpYmxpbmcuQz1mYWxzZTtwYXJlbnQuQz10cnVlO1JlZEJsYWNrUm90YXRlTGVmdCh0aGlzLHBhcmVudCk7c2libGluZz1wYXJlbnQuUn1pZihzaWJsaW5nLkwmJnNpYmxpbmcuTC5DfHxzaWJsaW5nLlImJnNpYmxpbmcuUi5DKXtpZighc2libGluZy5SfHwhc2libGluZy5SLkMpe3NpYmxpbmcuTC5DPWZhbHNlO3NpYmxpbmcuQz10cnVlO1JlZEJsYWNrUm90YXRlUmlnaHQodGhpcyxzaWJsaW5nKTtzaWJsaW5nPXBhcmVudC5SfXNpYmxpbmcuQz1wYXJlbnQuQztwYXJlbnQuQz1zaWJsaW5nLlIuQz1mYWxzZTtSZWRCbGFja1JvdGF0ZUxlZnQodGhpcyxwYXJlbnQpO25vZGU9dGhpcy5fO2JyZWFrfX1lbHNle3NpYmxpbmc9cGFyZW50Lkw7aWYoc2libGluZy5DKXtzaWJsaW5nLkM9ZmFsc2U7cGFyZW50LkM9dHJ1ZTtSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMscGFyZW50KTtzaWJsaW5nPXBhcmVudC5MfWlmKHNpYmxpbmcuTCYmc2libGluZy5MLkN8fHNpYmxpbmcuUiYmc2libGluZy5SLkMpe2lmKCFzaWJsaW5nLkx8fCFzaWJsaW5nLkwuQyl7c2libGluZy5SLkM9ZmFsc2U7c2libGluZy5DPXRydWU7UmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsc2libGluZyk7c2libGluZz1wYXJlbnQuTH1zaWJsaW5nLkM9cGFyZW50LkM7cGFyZW50LkM9c2libGluZy5MLkM9ZmFsc2U7UmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLHBhcmVudCk7bm9kZT10aGlzLl87YnJlYWt9fXNpYmxpbmcuQz10cnVlO25vZGU9cGFyZW50O3BhcmVudD1wYXJlbnQuVX13aGlsZSghbm9kZS5DKTtpZihub2RlKW5vZGUuQz1mYWxzZX19O2Z1bmN0aW9uIFJlZEJsYWNrUm90YXRlTGVmdCh0cmVlLG5vZGUpe3ZhciBwPW5vZGUscT1ub2RlLlIscGFyZW50PXAuVTtpZihwYXJlbnQpe2lmKHBhcmVudC5MPT09cClwYXJlbnQuTD1xO2Vsc2UgcGFyZW50LlI9cX1lbHNle3RyZWUuXz1xfXEuVT1wYXJlbnQ7cC5VPXE7cC5SPXEuTDtpZihwLlIpcC5SLlU9cDtxLkw9cH1mdW5jdGlvbiBSZWRCbGFja1JvdGF0ZVJpZ2h0KHRyZWUsbm9kZSl7dmFyIHA9bm9kZSxxPW5vZGUuTCxwYXJlbnQ9cC5VO2lmKHBhcmVudCl7aWYocGFyZW50Lkw9PT1wKXBhcmVudC5MPXE7ZWxzZSBwYXJlbnQuUj1xfWVsc2V7dHJlZS5fPXF9cS5VPXBhcmVudDtwLlU9cTtwLkw9cS5SO2lmKHAuTClwLkwuVT1wO3EuUj1wfWZ1bmN0aW9uIFJlZEJsYWNrRmlyc3Qobm9kZSl7d2hpbGUobm9kZS5MKW5vZGU9bm9kZS5MO3JldHVybiBub2RlfWZ1bmN0aW9uIGNyZWF0ZUVkZ2UobGVmdCxyaWdodCx2MCx2MSl7dmFyIGVkZ2U9W251bGwsbnVsbF0saW5kZXg9ZWRnZXMucHVzaChlZGdlKS0xO2VkZ2UubGVmdD1sZWZ0O2VkZ2UucmlnaHQ9cmlnaHQ7aWYodjApc2V0RWRnZUVuZChlZGdlLGxlZnQscmlnaHQsdjApO2lmKHYxKXNldEVkZ2VFbmQoZWRnZSxyaWdodCxsZWZ0LHYxKTtjZWxsc1tsZWZ0LmluZGV4XS5oYWxmZWRnZXMucHVzaChpbmRleCk7Y2VsbHNbcmlnaHQuaW5kZXhdLmhhbGZlZGdlcy5wdXNoKGluZGV4KTtyZXR1cm4gZWRnZX1mdW5jdGlvbiBjcmVhdGVCb3JkZXJFZGdlKGxlZnQsdjAsdjEpe3ZhciBlZGdlPVt2MCx2MV07ZWRnZS5sZWZ0PWxlZnQ7cmV0dXJuIGVkZ2V9ZnVuY3Rpb24gc2V0RWRnZUVuZChlZGdlLGxlZnQscmlnaHQsdmVydGV4KXtpZighZWRnZVswXSYmIWVkZ2VbMV0pe2VkZ2VbMF09dmVydGV4O2VkZ2UubGVmdD1sZWZ0O2VkZ2UucmlnaHQ9cmlnaHR9ZWxzZSBpZihlZGdlLmxlZnQ9PT1yaWdodCl7ZWRnZVsxXT12ZXJ0ZXh9ZWxzZXtlZGdlWzBdPXZlcnRleH19Ci8vIExpYW5n4oCTQmFyc2t5IGxpbmUgY2xpcHBpbmcuCmZ1bmN0aW9uIGNsaXBFZGdlKGVkZ2UseDAseTAseDEseTEpe3ZhciBhPWVkZ2VbMF0sYj1lZGdlWzFdLGF4PWFbMF0sYXk9YVsxXSxieD1iWzBdLGJ5PWJbMV0sdDA9MCx0MT0xLGR4PWJ4LWF4LGR5PWJ5LWF5LHI7cj14MC1heDtpZighZHgmJnI+MClyZXR1cm47ci89ZHg7aWYoZHg8MCl7aWYocjx0MClyZXR1cm47aWYocjx0MSl0MT1yfWVsc2UgaWYoZHg+MCl7aWYocj50MSlyZXR1cm47aWYocj50MCl0MD1yfXI9eDEtYXg7aWYoIWR4JiZyPDApcmV0dXJuO3IvPWR4O2lmKGR4PDApe2lmKHI+dDEpcmV0dXJuO2lmKHI+dDApdDA9cn1lbHNlIGlmKGR4PjApe2lmKHI8dDApcmV0dXJuO2lmKHI8dDEpdDE9cn1yPXkwLWF5O2lmKCFkeSYmcj4wKXJldHVybjtyLz1keTtpZihkeTwwKXtpZihyPHQwKXJldHVybjtpZihyPHQxKXQxPXJ9ZWxzZSBpZihkeT4wKXtpZihyPnQxKXJldHVybjtpZihyPnQwKXQwPXJ9cj15MS1heTtpZighZHkmJnI8MClyZXR1cm47ci89ZHk7aWYoZHk8MCl7aWYocj50MSlyZXR1cm47aWYocj50MCl0MD1yfWVsc2UgaWYoZHk+MCl7aWYocjx0MClyZXR1cm47aWYocjx0MSl0MT1yfWlmKCEodDA+MCkmJiEodDE8MSkpcmV0dXJuIHRydWU7Ly8gVE9ETyBCZXR0ZXIgY2hlY2s/CmlmKHQwPjApZWRnZVswXT1bYXgrdDAqZHgsYXkrdDAqZHldO2lmKHQxPDEpZWRnZVsxXT1bYXgrdDEqZHgsYXkrdDEqZHldO3JldHVybiB0cnVlfWZ1bmN0aW9uIGNvbm5lY3RFZGdlKGVkZ2UseDAseTAseDEseTEpe3ZhciB2MT1lZGdlWzFdO2lmKHYxKXJldHVybiB0cnVlO3ZhciB2MD1lZGdlWzBdLGxlZnQ9ZWRnZS5sZWZ0LHJpZ2h0PWVkZ2UucmlnaHQsbHg9bGVmdFswXSxseT1sZWZ0WzFdLHJ4PXJpZ2h0WzBdLHJ5PXJpZ2h0WzFdLGZ4PShseCtyeCkvMixmeT0obHkrcnkpLzIsZm0sZmI7aWYocnk9PT1seSl7aWYoZng8eDB8fGZ4Pj14MSlyZXR1cm47aWYobHg+cngpe2lmKCF2MCl2MD1bZngseTBdO2Vsc2UgaWYodjBbMV0+PXkxKXJldHVybjt2MT1bZngseTFdfWVsc2V7aWYoIXYwKXYwPVtmeCx5MV07ZWxzZSBpZih2MFsxXTx5MClyZXR1cm47djE9W2Z4LHkwXX19ZWxzZXtmbT0obHgtcngpLyhyeS1seSk7ZmI9ZnktZm0qZng7aWYoZm08LTF8fGZtPjEpe2lmKGx4PnJ4KXtpZighdjApdjA9Wyh5MC1mYikvZm0seTBdO2Vsc2UgaWYodjBbMV0+PXkxKXJldHVybjt2MT1bKHkxLWZiKS9mbSx5MV19ZWxzZXtpZighdjApdjA9Wyh5MS1mYikvZm0seTFdO2Vsc2UgaWYodjBbMV08eTApcmV0dXJuO3YxPVsoeTAtZmIpL2ZtLHkwXX19ZWxzZXtpZihseTxyeSl7aWYoIXYwKXYwPVt4MCxmbSp4MCtmYl07ZWxzZSBpZih2MFswXT49eDEpcmV0dXJuO3YxPVt4MSxmbSp4MStmYl19ZWxzZXtpZighdjApdjA9W3gxLGZtKngxK2ZiXTtlbHNlIGlmKHYwWzBdPHgwKXJldHVybjt2MT1beDAsZm0qeDArZmJdfX19ZWRnZVswXT12MDtlZGdlWzFdPXYxO3JldHVybiB0cnVlfWZ1bmN0aW9uIGNsaXBFZGdlcyh4MCx5MCx4MSx5MSl7dmFyIGk9ZWRnZXMubGVuZ3RoLGVkZ2U7d2hpbGUoaS0tKXtpZighY29ubmVjdEVkZ2UoZWRnZT1lZGdlc1tpXSx4MCx5MCx4MSx5MSl8fCFjbGlwRWRnZShlZGdlLHgwLHkwLHgxLHkxKXx8IShNYXRoLmFicyhlZGdlWzBdWzBdLWVkZ2VbMV1bMF0pPmVwc2lsb258fE1hdGguYWJzKGVkZ2VbMF1bMV0tZWRnZVsxXVsxXSk+ZXBzaWxvbikpe2RlbGV0ZSBlZGdlc1tpXX19fWZ1bmN0aW9uIGNyZWF0ZUNlbGwoc2l0ZSl7cmV0dXJuIGNlbGxzW3NpdGUuaW5kZXhdPXtzaXRlOnNpdGUsaGFsZmVkZ2VzOltdfX1mdW5jdGlvbiBjZWxsSGFsZmVkZ2VBbmdsZShjZWxsLGVkZ2Upe3ZhciBzaXRlPWNlbGwuc2l0ZSx2YT1lZGdlLmxlZnQsdmI9ZWRnZS5yaWdodDtpZihzaXRlPT09dmIpdmI9dmEsdmE9c2l0ZTtpZih2YilyZXR1cm4gTWF0aC5hdGFuMih2YlsxXS12YVsxXSx2YlswXS12YVswXSk7aWYoc2l0ZT09PXZhKXZhPWVkZ2VbMV0sdmI9ZWRnZVswXTtlbHNlIHZhPWVkZ2VbMF0sdmI9ZWRnZVsxXTtyZXR1cm4gTWF0aC5hdGFuMih2YVswXS12YlswXSx2YlsxXS12YVsxXSl9ZnVuY3Rpb24gY2VsbEhhbGZlZGdlU3RhcnQoY2VsbCxlZGdlKXtyZXR1cm4gZWRnZVsrKGVkZ2UubGVmdCE9PWNlbGwuc2l0ZSldfWZ1bmN0aW9uIGNlbGxIYWxmZWRnZUVuZChjZWxsLGVkZ2Upe3JldHVybiBlZGdlWysoZWRnZS5sZWZ0PT09Y2VsbC5zaXRlKV19ZnVuY3Rpb24gc29ydENlbGxIYWxmZWRnZXMoKXtmb3IodmFyIGk9MCxuPWNlbGxzLmxlbmd0aCxjZWxsLGhhbGZlZGdlcyxqLG07aTxuOysraSl7aWYoKGNlbGw9Y2VsbHNbaV0pJiYobT0oaGFsZmVkZ2VzPWNlbGwuaGFsZmVkZ2VzKS5sZW5ndGgpKXt2YXIgaW5kZXg9bmV3IEFycmF5KG0pLGFycmF5PW5ldyBBcnJheShtKTtmb3Ioaj0wO2o8bTsrK2opaW5kZXhbal09aixhcnJheVtqXT1jZWxsSGFsZmVkZ2VBbmdsZShjZWxsLGVkZ2VzW2hhbGZlZGdlc1tqXV0pO2luZGV4LnNvcnQoZnVuY3Rpb24oaSxqKXtyZXR1cm4gYXJyYXlbal0tYXJyYXlbaV19KTtmb3Ioaj0wO2o8bTsrK2opYXJyYXlbal09aGFsZmVkZ2VzW2luZGV4W2pdXTtmb3Ioaj0wO2o8bTsrK2opaGFsZmVkZ2VzW2pdPWFycmF5W2pdfX19ZnVuY3Rpb24gY2xpcENlbGxzKHgwLHkwLHgxLHkxKXt2YXIgbkNlbGxzPWNlbGxzLmxlbmd0aCxpQ2VsbCxjZWxsLHNpdGUsaUhhbGZlZGdlLGhhbGZlZGdlcyxuSGFsZmVkZ2VzLHN0YXJ0LHN0YXJ0WCxzdGFydFksZW5kLGVuZFgsZW5kWSxjb3Zlcj10cnVlO2ZvcihpQ2VsbD0wO2lDZWxsPG5DZWxsczsrK2lDZWxsKXtpZihjZWxsPWNlbGxzW2lDZWxsXSl7c2l0ZT1jZWxsLnNpdGU7aGFsZmVkZ2VzPWNlbGwuaGFsZmVkZ2VzO2lIYWxmZWRnZT1oYWxmZWRnZXMubGVuZ3RoOwovLyBSZW1vdmUgYW55IGRhbmdsaW5nIGNsaXBwZWQgZWRnZXMuCndoaWxlKGlIYWxmZWRnZS0tKXtpZighZWRnZXNbaGFsZmVkZ2VzW2lIYWxmZWRnZV1dKXtoYWxmZWRnZXMuc3BsaWNlKGlIYWxmZWRnZSwxKX19Ci8vIEluc2VydCBhbnkgYm9yZGVyIGVkZ2VzIGFzIG5lY2Vzc2FyeS4KaUhhbGZlZGdlPTAsbkhhbGZlZGdlcz1oYWxmZWRnZXMubGVuZ3RoO3doaWxlKGlIYWxmZWRnZTxuSGFsZmVkZ2VzKXtlbmQ9Y2VsbEhhbGZlZGdlRW5kKGNlbGwsZWRnZXNbaGFsZmVkZ2VzW2lIYWxmZWRnZV1dKSxlbmRYPWVuZFswXSxlbmRZPWVuZFsxXTtzdGFydD1jZWxsSGFsZmVkZ2VTdGFydChjZWxsLGVkZ2VzW2hhbGZlZGdlc1srK2lIYWxmZWRnZSVuSGFsZmVkZ2VzXV0pLHN0YXJ0WD1zdGFydFswXSxzdGFydFk9c3RhcnRbMV07aWYoTWF0aC5hYnMoZW5kWC1zdGFydFgpPmVwc2lsb258fE1hdGguYWJzKGVuZFktc3RhcnRZKT5lcHNpbG9uKXtoYWxmZWRnZXMuc3BsaWNlKGlIYWxmZWRnZSwwLGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLGVuZCxNYXRoLmFicyhlbmRYLXgwKTxlcHNpbG9uJiZ5MS1lbmRZPmVwc2lsb24/W3gwLE1hdGguYWJzKHN0YXJ0WC14MCk8ZXBzaWxvbj9zdGFydFk6eTFdOk1hdGguYWJzKGVuZFkteTEpPGVwc2lsb24mJngxLWVuZFg+ZXBzaWxvbj9bTWF0aC5hYnMoc3RhcnRZLXkxKTxlcHNpbG9uP3N0YXJ0WDp4MSx5MV06TWF0aC5hYnMoZW5kWC14MSk8ZXBzaWxvbiYmZW5kWS15MD5lcHNpbG9uP1t4MSxNYXRoLmFicyhzdGFydFgteDEpPGVwc2lsb24/c3RhcnRZOnkwXTpNYXRoLmFicyhlbmRZLXkwKTxlcHNpbG9uJiZlbmRYLXgwPmVwc2lsb24/W01hdGguYWJzKHN0YXJ0WS15MCk8ZXBzaWxvbj9zdGFydFg6eDAseTBdOm51bGwpKS0xKTsrK25IYWxmZWRnZXN9fWlmKG5IYWxmZWRnZXMpY292ZXI9ZmFsc2V9fQovLyBJZiB0aGVyZSB3ZXJlbuKAmXQgYW55IGVkZ2VzLCBoYXZlIHRoZSBjbG9zZXN0IHNpdGUgY292ZXIgdGhlIGV4dGVudC4KLy8gSXQgZG9lc27igJl0IG1hdHRlciB3aGljaCBjb3JuZXIgb2YgdGhlIGV4dGVudCB3ZSBtZWFzdXJlIQppZihjb3Zlcil7dmFyIGR4LGR5LGQyLGRjPUluZmluaXR5O2ZvcihpQ2VsbD0wLGNvdmVyPW51bGw7aUNlbGw8bkNlbGxzOysraUNlbGwpe2lmKGNlbGw9Y2VsbHNbaUNlbGxdKXtzaXRlPWNlbGwuc2l0ZTtkeD1zaXRlWzBdLXgwO2R5PXNpdGVbMV0teTA7ZDI9ZHgqZHgrZHkqZHk7aWYoZDI8ZGMpZGM9ZDIsY292ZXI9Y2VsbH19aWYoY292ZXIpe3ZhciB2MDA9W3gwLHkwXSx2MDE9W3gwLHkxXSx2MTE9W3gxLHkxXSx2MTA9W3gxLHkwXTtjb3Zlci5oYWxmZWRnZXMucHVzaChlZGdlcy5wdXNoKGNyZWF0ZUJvcmRlckVkZ2Uoc2l0ZT1jb3Zlci5zaXRlLHYwMCx2MDEpKS0xLGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLHYwMSx2MTEpKS0xLGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLHYxMSx2MTApKS0xLGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLHYxMCx2MDApKS0xKX19Ci8vIExhc3RseSBkZWxldGUgYW55IGNlbGxzIHdpdGggbm8gZWRnZXM7IHRoZXNlIHdlcmUgZW50aXJlbHkgY2xpcHBlZC4KZm9yKGlDZWxsPTA7aUNlbGw8bkNlbGxzOysraUNlbGwpe2lmKGNlbGw9Y2VsbHNbaUNlbGxdKXtpZighY2VsbC5oYWxmZWRnZXMubGVuZ3RoKXtkZWxldGUgY2VsbHNbaUNlbGxdfX19fXZhciBjaXJjbGVQb29sPVtdO3ZhciBmaXJzdENpcmNsZTtmdW5jdGlvbiBDaXJjbGUoKXtSZWRCbGFja05vZGUodGhpcyk7dGhpcy54PXRoaXMueT10aGlzLmFyYz10aGlzLnNpdGU9dGhpcy5jeT1udWxsfWZ1bmN0aW9uIGF0dGFjaENpcmNsZShhcmMpe3ZhciBsQXJjPWFyYy5QLHJBcmM9YXJjLk47aWYoIWxBcmN8fCFyQXJjKXJldHVybjt2YXIgbFNpdGU9bEFyYy5zaXRlLGNTaXRlPWFyYy5zaXRlLHJTaXRlPXJBcmMuc2l0ZTtpZihsU2l0ZT09PXJTaXRlKXJldHVybjt2YXIgYng9Y1NpdGVbMF0sYnk9Y1NpdGVbMV0sYXg9bFNpdGVbMF0tYngsYXk9bFNpdGVbMV0tYnksY3g9clNpdGVbMF0tYngsY3k9clNpdGVbMV0tYnk7dmFyIGQ9MiooYXgqY3ktYXkqY3gpO2lmKGQ+PS1lcHNpbG9uMilyZXR1cm47dmFyIGhhPWF4KmF4K2F5KmF5LGhjPWN4KmN4K2N5KmN5LHg9KGN5KmhhLWF5KmhjKS9kLHk9KGF4KmhjLWN4KmhhKS9kO3ZhciBjaXJjbGU9Y2lyY2xlUG9vbC5wb3AoKXx8bmV3IENpcmNsZTtjaXJjbGUuYXJjPWFyYztjaXJjbGUuc2l0ZT1jU2l0ZTtjaXJjbGUueD14K2J4O2NpcmNsZS55PShjaXJjbGUuY3k9eStieSkrTWF0aC5zcXJ0KHgqeCt5KnkpOy8vIHkgYm90dG9tCmFyYy5jaXJjbGU9Y2lyY2xlO3ZhciBiZWZvcmU9bnVsbCxub2RlPWNpcmNsZXMuXzt3aGlsZShub2RlKXtpZihjaXJjbGUueTxub2RlLnl8fGNpcmNsZS55PT09bm9kZS55JiZjaXJjbGUueDw9bm9kZS54KXtpZihub2RlLkwpbm9kZT1ub2RlLkw7ZWxzZXtiZWZvcmU9bm9kZS5QO2JyZWFrfX1lbHNle2lmKG5vZGUuUilub2RlPW5vZGUuUjtlbHNle2JlZm9yZT1ub2RlO2JyZWFrfX19Y2lyY2xlcy5pbnNlcnQoYmVmb3JlLGNpcmNsZSk7aWYoIWJlZm9yZSlmaXJzdENpcmNsZT1jaXJjbGV9ZnVuY3Rpb24gZGV0YWNoQ2lyY2xlKGFyYyl7dmFyIGNpcmNsZT1hcmMuY2lyY2xlO2lmKGNpcmNsZSl7aWYoIWNpcmNsZS5QKWZpcnN0Q2lyY2xlPWNpcmNsZS5OO2NpcmNsZXMucmVtb3ZlKGNpcmNsZSk7Y2lyY2xlUG9vbC5wdXNoKGNpcmNsZSk7UmVkQmxhY2tOb2RlKGNpcmNsZSk7YXJjLmNpcmNsZT1udWxsfX12YXIgYmVhY2hQb29sPVtdO2Z1bmN0aW9uIEJlYWNoKCl7UmVkQmxhY2tOb2RlKHRoaXMpO3RoaXMuZWRnZT10aGlzLnNpdGU9dGhpcy5jaXJjbGU9bnVsbH1mdW5jdGlvbiBjcmVhdGVCZWFjaChzaXRlKXt2YXIgYmVhY2g9YmVhY2hQb29sLnBvcCgpfHxuZXcgQmVhY2g7YmVhY2guc2l0ZT1zaXRlO3JldHVybiBiZWFjaH1mdW5jdGlvbiBkZXRhY2hCZWFjaChiZWFjaCl7ZGV0YWNoQ2lyY2xlKGJlYWNoKTtiZWFjaGVzLnJlbW92ZShiZWFjaCk7YmVhY2hQb29sLnB1c2goYmVhY2gpO1JlZEJsYWNrTm9kZShiZWFjaCl9ZnVuY3Rpb24gcmVtb3ZlQmVhY2goYmVhY2gpe3ZhciBjaXJjbGU9YmVhY2guY2lyY2xlLHg9Y2lyY2xlLngseT1jaXJjbGUuY3ksdmVydGV4PVt4LHldLHByZXZpb3VzPWJlYWNoLlAsbmV4dD1iZWFjaC5OLGRpc2FwcGVhcmluZz1bYmVhY2hdO2RldGFjaEJlYWNoKGJlYWNoKTt2YXIgbEFyYz1wcmV2aW91czt3aGlsZShsQXJjLmNpcmNsZSYmTWF0aC5hYnMoeC1sQXJjLmNpcmNsZS54KTxlcHNpbG9uJiZNYXRoLmFicyh5LWxBcmMuY2lyY2xlLmN5KTxlcHNpbG9uKXtwcmV2aW91cz1sQXJjLlA7ZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7ZGV0YWNoQmVhY2gobEFyYyk7bEFyYz1wcmV2aW91c31kaXNhcHBlYXJpbmcudW5zaGlmdChsQXJjKTtkZXRhY2hDaXJjbGUobEFyYyk7dmFyIHJBcmM9bmV4dDt3aGlsZShyQXJjLmNpcmNsZSYmTWF0aC5hYnMoeC1yQXJjLmNpcmNsZS54KTxlcHNpbG9uJiZNYXRoLmFicyh5LXJBcmMuY2lyY2xlLmN5KTxlcHNpbG9uKXtuZXh0PXJBcmMuTjtkaXNhcHBlYXJpbmcucHVzaChyQXJjKTtkZXRhY2hCZWFjaChyQXJjKTtyQXJjPW5leHR9ZGlzYXBwZWFyaW5nLnB1c2gockFyYyk7ZGV0YWNoQ2lyY2xlKHJBcmMpO3ZhciBuQXJjcz1kaXNhcHBlYXJpbmcubGVuZ3RoLGlBcmM7Zm9yKGlBcmM9MTtpQXJjPG5BcmNzOysraUFyYyl7ckFyYz1kaXNhcHBlYXJpbmdbaUFyY107bEFyYz1kaXNhcHBlYXJpbmdbaUFyYy0xXTtzZXRFZGdlRW5kKHJBcmMuZWRnZSxsQXJjLnNpdGUsckFyYy5zaXRlLHZlcnRleCl9bEFyYz1kaXNhcHBlYXJpbmdbMF07ckFyYz1kaXNhcHBlYXJpbmdbbkFyY3MtMV07ckFyYy5lZGdlPWNyZWF0ZUVkZ2UobEFyYy5zaXRlLHJBcmMuc2l0ZSxudWxsLHZlcnRleCk7YXR0YWNoQ2lyY2xlKGxBcmMpO2F0dGFjaENpcmNsZShyQXJjKX1mdW5jdGlvbiBhZGRCZWFjaChzaXRlKXt2YXIgeD1zaXRlWzBdLGRpcmVjdHJpeD1zaXRlWzFdLGxBcmMsckFyYyxkeGwsZHhyLG5vZGU9YmVhY2hlcy5fO3doaWxlKG5vZGUpe2R4bD1sZWZ0QnJlYWtQb2ludChub2RlLGRpcmVjdHJpeCkteDtpZihkeGw+ZXBzaWxvbilub2RlPW5vZGUuTDtlbHNle2R4cj14LXJpZ2h0QnJlYWtQb2ludChub2RlLGRpcmVjdHJpeCk7aWYoZHhyPmVwc2lsb24pe2lmKCFub2RlLlIpe2xBcmM9bm9kZTticmVha31ub2RlPW5vZGUuUn1lbHNle2lmKGR4bD4tZXBzaWxvbil7bEFyYz1ub2RlLlA7ckFyYz1ub2RlfWVsc2UgaWYoZHhyPi1lcHNpbG9uKXtsQXJjPW5vZGU7ckFyYz1ub2RlLk59ZWxzZXtsQXJjPXJBcmM9bm9kZX1icmVha319fWNyZWF0ZUNlbGwoc2l0ZSk7dmFyIG5ld0FyYz1jcmVhdGVCZWFjaChzaXRlKTtiZWFjaGVzLmluc2VydChsQXJjLG5ld0FyYyk7aWYoIWxBcmMmJiFyQXJjKXJldHVybjtpZihsQXJjPT09ckFyYyl7ZGV0YWNoQ2lyY2xlKGxBcmMpO3JBcmM9Y3JlYXRlQmVhY2gobEFyYy5zaXRlKTtiZWFjaGVzLmluc2VydChuZXdBcmMsckFyYyk7bmV3QXJjLmVkZ2U9ckFyYy5lZGdlPWNyZWF0ZUVkZ2UobEFyYy5zaXRlLG5ld0FyYy5zaXRlKTthdHRhY2hDaXJjbGUobEFyYyk7YXR0YWNoQ2lyY2xlKHJBcmMpO3JldHVybn1pZighckFyYyl7Ly8gJiYgbEFyYwpuZXdBcmMuZWRnZT1jcmVhdGVFZGdlKGxBcmMuc2l0ZSxuZXdBcmMuc2l0ZSk7cmV0dXJufQovLyBlbHNlIGxBcmMgIT09IHJBcmMKZGV0YWNoQ2lyY2xlKGxBcmMpO2RldGFjaENpcmNsZShyQXJjKTt2YXIgbFNpdGU9bEFyYy5zaXRlLGF4PWxTaXRlWzBdLGF5PWxTaXRlWzFdLGJ4PXNpdGVbMF0tYXgsYnk9c2l0ZVsxXS1heSxyU2l0ZT1yQXJjLnNpdGUsY3g9clNpdGVbMF0tYXgsY3k9clNpdGVbMV0tYXksZD0yKihieCpjeS1ieSpjeCksaGI9YngqYngrYnkqYnksaGM9Y3gqY3grY3kqY3ksdmVydGV4PVsoY3kqaGItYnkqaGMpL2QrYXgsKGJ4KmhjLWN4KmhiKS9kK2F5XTtzZXRFZGdlRW5kKHJBcmMuZWRnZSxsU2l0ZSxyU2l0ZSx2ZXJ0ZXgpO25ld0FyYy5lZGdlPWNyZWF0ZUVkZ2UobFNpdGUsc2l0ZSxudWxsLHZlcnRleCk7ckFyYy5lZGdlPWNyZWF0ZUVkZ2Uoc2l0ZSxyU2l0ZSxudWxsLHZlcnRleCk7YXR0YWNoQ2lyY2xlKGxBcmMpO2F0dGFjaENpcmNsZShyQXJjKX1mdW5jdGlvbiBsZWZ0QnJlYWtQb2ludChhcmMsZGlyZWN0cml4KXt2YXIgc2l0ZT1hcmMuc2l0ZSxyZm9jeD1zaXRlWzBdLHJmb2N5PXNpdGVbMV0scGJ5Mj1yZm9jeS1kaXJlY3RyaXg7aWYoIXBieTIpcmV0dXJuIHJmb2N4O3ZhciBsQXJjPWFyYy5QO2lmKCFsQXJjKXJldHVybi1JbmZpbml0eTtzaXRlPWxBcmMuc2l0ZTt2YXIgbGZvY3g9c2l0ZVswXSxsZm9jeT1zaXRlWzFdLHBsYnkyPWxmb2N5LWRpcmVjdHJpeDtpZighcGxieTIpcmV0dXJuIGxmb2N4O3ZhciBobD1sZm9jeC1yZm9jeCxhYnkyPTEvcGJ5Mi0xL3BsYnkyLGI9aGwvcGxieTI7aWYoYWJ5MilyZXR1cm4oLWIrTWF0aC5zcXJ0KGIqYi0yKmFieTIqKGhsKmhsLygtMipwbGJ5MiktbGZvY3krcGxieTIvMityZm9jeS1wYnkyLzIpKSkvYWJ5MityZm9jeDtyZXR1cm4ocmZvY3grbGZvY3gpLzJ9ZnVuY3Rpb24gcmlnaHRCcmVha1BvaW50KGFyYyxkaXJlY3RyaXgpe3ZhciByQXJjPWFyYy5OO2lmKHJBcmMpcmV0dXJuIGxlZnRCcmVha1BvaW50KHJBcmMsZGlyZWN0cml4KTt2YXIgc2l0ZT1hcmMuc2l0ZTtyZXR1cm4gc2l0ZVsxXT09PWRpcmVjdHJpeD9zaXRlWzBdOkluZmluaXR5fXZhciBlcHNpbG9uPTFlLTY7dmFyIGVwc2lsb24yPTFlLTEyO3ZhciBiZWFjaGVzO3ZhciBjZWxsczt2YXIgY2lyY2xlczt2YXIgZWRnZXM7ZnVuY3Rpb24gdHJpYW5nbGVBcmVhKGEsYixjKXtyZXR1cm4oYVswXS1jWzBdKSooYlsxXS1hWzFdKS0oYVswXS1iWzBdKSooY1sxXS1hWzFdKX1mdW5jdGlvbiBsZXhpY29ncmFwaGljKGEsYil7cmV0dXJuIGJbMV0tYVsxXXx8YlswXS1hWzBdfWZ1bmN0aW9uIERpYWdyYW0oc2l0ZXMsZXh0ZW50KXt2YXIgc2l0ZT1zaXRlcy5zb3J0KGxleGljb2dyYXBoaWMpLnBvcCgpLHgseSxjaXJjbGU7ZWRnZXM9W107Y2VsbHM9bmV3IEFycmF5KHNpdGVzLmxlbmd0aCk7YmVhY2hlcz1uZXcgUmVkQmxhY2tUcmVlO2NpcmNsZXM9bmV3IFJlZEJsYWNrVHJlZTt3aGlsZSh0cnVlKXtjaXJjbGU9Zmlyc3RDaXJjbGU7aWYoc2l0ZSYmKCFjaXJjbGV8fHNpdGVbMV08Y2lyY2xlLnl8fHNpdGVbMV09PT1jaXJjbGUueSYmc2l0ZVswXTxjaXJjbGUueCkpe2lmKHNpdGVbMF0hPT14fHxzaXRlWzFdIT09eSl7YWRkQmVhY2goc2l0ZSk7eD1zaXRlWzBdLHk9c2l0ZVsxXX1zaXRlPXNpdGVzLnBvcCgpfWVsc2UgaWYoY2lyY2xlKXtyZW1vdmVCZWFjaChjaXJjbGUuYXJjKX1lbHNle2JyZWFrfX1zb3J0Q2VsbEhhbGZlZGdlcygpO2lmKGV4dGVudCl7dmFyIHgwPStleHRlbnRbMF1bMF0seTA9K2V4dGVudFswXVsxXSx4MT0rZXh0ZW50WzFdWzBdLHkxPStleHRlbnRbMV1bMV07Y2xpcEVkZ2VzKHgwLHkwLHgxLHkxKTtjbGlwQ2VsbHMoeDAseTAseDEseTEpfXRoaXMuZWRnZXM9ZWRnZXM7dGhpcy5jZWxscz1jZWxscztiZWFjaGVzPWNpcmNsZXM9ZWRnZXM9Y2VsbHM9bnVsbH1EaWFncmFtLnByb3RvdHlwZT17Y29uc3RydWN0b3I6RGlhZ3JhbSxwb2x5Z29uczpmdW5jdGlvbigpe3ZhciBlZGdlcz10aGlzLmVkZ2VzO3JldHVybiB0aGlzLmNlbGxzLm1hcChmdW5jdGlvbihjZWxsKXt2YXIgcG9seWdvbj1jZWxsLmhhbGZlZGdlcy5tYXAoZnVuY3Rpb24oaSl7cmV0dXJuIGNlbGxIYWxmZWRnZVN0YXJ0KGNlbGwsZWRnZXNbaV0pfSk7cG9seWdvbi5kYXRhPWNlbGwuc2l0ZS5kYXRhO3JldHVybiBwb2x5Z29ufSl9LHRyaWFuZ2xlczpmdW5jdGlvbigpe3ZhciB0cmlhbmdsZXM9W10sZWRnZXM9dGhpcy5lZGdlczt0aGlzLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oY2VsbCxpKXtpZighKG09KGhhbGZlZGdlcz1jZWxsLmhhbGZlZGdlcykubGVuZ3RoKSlyZXR1cm47dmFyIHNpdGU9Y2VsbC5zaXRlLGhhbGZlZGdlcyxqPS0xLG0sczAsZTE9ZWRnZXNbaGFsZmVkZ2VzW20tMV1dLHMxPWUxLmxlZnQ9PT1zaXRlP2UxLnJpZ2h0OmUxLmxlZnQ7d2hpbGUoKytqPG0pe3MwPXMxO2UxPWVkZ2VzW2hhbGZlZGdlc1tqXV07czE9ZTEubGVmdD09PXNpdGU/ZTEucmlnaHQ6ZTEubGVmdDtpZihzMCYmczEmJmk8czAuaW5kZXgmJmk8czEuaW5kZXgmJnRyaWFuZ2xlQXJlYShzaXRlLHMwLHMxKTwwKXt0cmlhbmdsZXMucHVzaChbc2l0ZS5kYXRhLHMwLmRhdGEsczEuZGF0YV0pfX19KTtyZXR1cm4gdHJpYW5nbGVzfSxsaW5rczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZ2VzLmZpbHRlcihmdW5jdGlvbihlZGdlKXtyZXR1cm4gZWRnZS5yaWdodH0pLm1hcChmdW5jdGlvbihlZGdlKXtyZXR1cm57c291cmNlOmVkZ2UubGVmdC5kYXRhLHRhcmdldDplZGdlLnJpZ2h0LmRhdGF9fSl9LGZpbmQ6ZnVuY3Rpb24oeCx5LHJhZGl1cyl7dmFyIHRoYXQ9dGhpcyxpMCxpMT10aGF0Ll9mb3VuZHx8MCxuPXRoYXQuY2VsbHMubGVuZ3RoLGNlbGw7Ci8vIFVzZSB0aGUgcHJldmlvdXNseS1mb3VuZCBjZWxsLCBvciBzdGFydCB3aXRoIGFuIGFyYml0cmFyeSBvbmUuCndoaWxlKCEoY2VsbD10aGF0LmNlbGxzW2kxXSkpaWYoKytpMT49bilyZXR1cm4gbnVsbDt2YXIgZHg9eC1jZWxsLnNpdGVbMF0sZHk9eS1jZWxsLnNpdGVbMV0sZDI9ZHgqZHgrZHkqZHk7Ci8vIFRyYXZlcnNlIHRoZSBoYWxmLWVkZ2VzIHRvIGZpbmQgYSBjbG9zZXIgY2VsbCwgaWYgYW55Lgpkb3tjZWxsPXRoYXQuY2VsbHNbaTA9aTFdLGkxPW51bGw7Y2VsbC5oYWxmZWRnZXMuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgZWRnZT10aGF0LmVkZ2VzW2VdLHY9ZWRnZS5sZWZ0O2lmKCh2PT09Y2VsbC5zaXRlfHwhdikmJiEodj1lZGdlLnJpZ2h0KSlyZXR1cm47dmFyIHZ4PXgtdlswXSx2eT15LXZbMV0sdjI9dngqdngrdnkqdnk7aWYodjI8ZDIpZDI9djIsaTE9di5pbmRleH0pfXdoaWxlKGkxIT09bnVsbCk7dGhhdC5fZm91bmQ9aTA7cmV0dXJuIHJhZGl1cz09bnVsbHx8ZDI8PXJhZGl1cypyYWRpdXM/Y2VsbC5zaXRlOm51bGx9fTtmdW5jdGlvbiB2b3Jvbm9pKCl7dmFyIHgkJDE9eCx5JCQxPXksZXh0ZW50PW51bGw7ZnVuY3Rpb24gdm9yb25vaShkYXRhKXtyZXR1cm4gbmV3IERpYWdyYW0oZGF0YS5tYXAoZnVuY3Rpb24oZCxpKXt2YXIgcz1bTWF0aC5yb3VuZCh4JCQxKGQsaSxkYXRhKS9lcHNpbG9uKSplcHNpbG9uLE1hdGgucm91bmQoeSQkMShkLGksZGF0YSkvZXBzaWxvbikqZXBzaWxvbl07cy5pbmRleD1pO3MuZGF0YT1kO3JldHVybiBzfSksZXh0ZW50KX12b3Jvbm9pLnBvbHlnb25zPWZ1bmN0aW9uKGRhdGEpe3JldHVybiB2b3Jvbm9pKGRhdGEpLnBvbHlnb25zKCl9O3Zvcm9ub2kubGlua3M9ZnVuY3Rpb24oZGF0YSl7cmV0dXJuIHZvcm9ub2koZGF0YSkubGlua3MoKX07dm9yb25vaS50cmlhbmdsZXM9ZnVuY3Rpb24oZGF0YSl7cmV0dXJuIHZvcm9ub2koZGF0YSkudHJpYW5nbGVzKCl9O3Zvcm9ub2kueD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oeCQkMT10eXBlb2YgXz09PSJmdW5jdGlvbiI/Xzpjb25zdGFudCgrXyksdm9yb25vaSk6eCQkMX07dm9yb25vaS55PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh5JCQxPXR5cGVvZiBfPT09ImZ1bmN0aW9uIj9fOmNvbnN0YW50KCtfKSx2b3Jvbm9pKTp5JCQxfTt2b3Jvbm9pLmV4dGVudD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZXh0ZW50PV89PW51bGw/bnVsbDpbWytfWzBdWzBdLCtfWzBdWzFdXSxbK19bMV1bMF0sK19bMV1bMV1dXSx2b3Jvbm9pKTpleHRlbnQmJltbZXh0ZW50WzBdWzBdLGV4dGVudFswXVsxXV0sW2V4dGVudFsxXVswXSxleHRlbnRbMV1bMV1dXX07dm9yb25vaS5zaXplPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhleHRlbnQ9Xz09bnVsbD9udWxsOltbMCwwXSxbK19bMF0sK19bMV1dXSx2b3Jvbm9pKTpleHRlbnQmJltleHRlbnRbMV1bMF0tZXh0ZW50WzBdWzBdLGV4dGVudFsxXVsxXS1leHRlbnRbMF1bMV1dfTtyZXR1cm4gdm9yb25vaX1leHBvcnRzLnZvcm9ub2k9dm9yb25vaTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KX0pfSx7fV0sNTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLXpvb20vIHYxLjguMyBDb3B5cmlnaHQgMjAxOSBNaWtlIEJvc3RvY2sKKGZ1bmN0aW9uKGdsb2JhbCxmYWN0b3J5KXt0eXBlb2YgZXhwb3J0cz09PSJvYmplY3QiJiZ0eXBlb2YgbW9kdWxlIT09InVuZGVmaW5lZCI/ZmFjdG9yeShleHBvcnRzLHJlcXVpcmUoImQzLWRpc3BhdGNoIikscmVxdWlyZSgiZDMtZHJhZyIpLHJlcXVpcmUoImQzLWludGVycG9sYXRlIikscmVxdWlyZSgiZDMtc2VsZWN0aW9uIikscmVxdWlyZSgiZDMtdHJhbnNpdGlvbiIpKTp0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZD9kZWZpbmUoWyJleHBvcnRzIiwiZDMtZGlzcGF0Y2giLCJkMy1kcmFnIiwiZDMtaW50ZXJwb2xhdGUiLCJkMy1zZWxlY3Rpb24iLCJkMy10cmFuc2l0aW9uIl0sZmFjdG9yeSk6KGdsb2JhbD1nbG9iYWx8fHNlbGYsZmFjdG9yeShnbG9iYWwuZDM9Z2xvYmFsLmQzfHx7fSxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzKSl9KSh0aGlzLGZ1bmN0aW9uKGV4cG9ydHMsZDNEaXNwYXRjaCxkM0RyYWcsZDNJbnRlcnBvbGF0ZSxkM1NlbGVjdGlvbixkM1RyYW5zaXRpb24peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBjb25zdGFudCh4KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4geH19ZnVuY3Rpb24gWm9vbUV2ZW50KHRhcmdldCx0eXBlLHRyYW5zZm9ybSl7dGhpcy50YXJnZXQ9dGFyZ2V0O3RoaXMudHlwZT10eXBlO3RoaXMudHJhbnNmb3JtPXRyYW5zZm9ybX1mdW5jdGlvbiBUcmFuc2Zvcm0oayx4LHkpe3RoaXMuaz1rO3RoaXMueD14O3RoaXMueT15fVRyYW5zZm9ybS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRyYW5zZm9ybSxzY2FsZTpmdW5jdGlvbihrKXtyZXR1cm4gaz09PTE/dGhpczpuZXcgVHJhbnNmb3JtKHRoaXMuayprLHRoaXMueCx0aGlzLnkpfSx0cmFuc2xhdGU6ZnVuY3Rpb24oeCx5KXtyZXR1cm4geD09PTAmeT09PTA/dGhpczpuZXcgVHJhbnNmb3JtKHRoaXMuayx0aGlzLngrdGhpcy5rKngsdGhpcy55K3RoaXMuayp5KX0sYXBwbHk6ZnVuY3Rpb24ocG9pbnQpe3JldHVybltwb2ludFswXSp0aGlzLmsrdGhpcy54LHBvaW50WzFdKnRoaXMuayt0aGlzLnldfSxhcHBseVg6ZnVuY3Rpb24oeCl7cmV0dXJuIHgqdGhpcy5rK3RoaXMueH0sYXBwbHlZOmZ1bmN0aW9uKHkpe3JldHVybiB5KnRoaXMuayt0aGlzLnl9LGludmVydDpmdW5jdGlvbihsb2NhdGlvbil7cmV0dXJuWyhsb2NhdGlvblswXS10aGlzLngpL3RoaXMuaywobG9jYXRpb25bMV0tdGhpcy55KS90aGlzLmtdfSxpbnZlcnRYOmZ1bmN0aW9uKHgpe3JldHVybih4LXRoaXMueCkvdGhpcy5rfSxpbnZlcnRZOmZ1bmN0aW9uKHkpe3JldHVybih5LXRoaXMueSkvdGhpcy5rfSxyZXNjYWxlWDpmdW5jdGlvbih4KXtyZXR1cm4geC5jb3B5KCkuZG9tYWluKHgucmFuZ2UoKS5tYXAodGhpcy5pbnZlcnRYLHRoaXMpLm1hcCh4LmludmVydCx4KSl9LHJlc2NhbGVZOmZ1bmN0aW9uKHkpe3JldHVybiB5LmNvcHkoKS5kb21haW4oeS5yYW5nZSgpLm1hcCh0aGlzLmludmVydFksdGhpcykubWFwKHkuaW52ZXJ0LHkpKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4idHJhbnNsYXRlKCIrdGhpcy54KyIsIit0aGlzLnkrIikgc2NhbGUoIit0aGlzLmsrIikifX07dmFyIGlkZW50aXR5PW5ldyBUcmFuc2Zvcm0oMSwwLDApO3RyYW5zZm9ybS5wcm90b3R5cGU9VHJhbnNmb3JtLnByb3RvdHlwZTtmdW5jdGlvbiB0cmFuc2Zvcm0obm9kZSl7d2hpbGUoIW5vZGUuX196b29tKWlmKCEobm9kZT1ub2RlLnBhcmVudE5vZGUpKXJldHVybiBpZGVudGl0eTtyZXR1cm4gbm9kZS5fX3pvb219ZnVuY3Rpb24gbm9wcm9wYWdhdGlvbigpe2QzU2VsZWN0aW9uLmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIG5vZXZlbnQoKXtkM1NlbGVjdGlvbi5ldmVudC5wcmV2ZW50RGVmYXVsdCgpO2QzU2VsZWN0aW9uLmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfQovLyBJZ25vcmUgcmlnaHQtY2xpY2ssIHNpbmNlIHRoYXQgc2hvdWxkIG9wZW4gdGhlIGNvbnRleHQgbWVudS4KZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpe3JldHVybiFkM1NlbGVjdGlvbi5ldmVudC5jdHJsS2V5JiYhZDNTZWxlY3Rpb24uZXZlbnQuYnV0dG9ufWZ1bmN0aW9uIGRlZmF1bHRFeHRlbnQoKXt2YXIgZT10aGlzO2lmKGUgaW5zdGFuY2VvZiBTVkdFbGVtZW50KXtlPWUub3duZXJTVkdFbGVtZW50fHxlO2lmKGUuaGFzQXR0cmlidXRlKCJ2aWV3Qm94Iikpe2U9ZS52aWV3Qm94LmJhc2VWYWw7cmV0dXJuW1tlLngsZS55XSxbZS54K2Uud2lkdGgsZS55K2UuaGVpZ2h0XV19cmV0dXJuW1swLDBdLFtlLndpZHRoLmJhc2VWYWwudmFsdWUsZS5oZWlnaHQuYmFzZVZhbC52YWx1ZV1dfXJldHVybltbMCwwXSxbZS5jbGllbnRXaWR0aCxlLmNsaWVudEhlaWdodF1dfWZ1bmN0aW9uIGRlZmF1bHRUcmFuc2Zvcm0oKXtyZXR1cm4gdGhpcy5fX3pvb218fGlkZW50aXR5fWZ1bmN0aW9uIGRlZmF1bHRXaGVlbERlbHRhKCl7cmV0dXJuLWQzU2VsZWN0aW9uLmV2ZW50LmRlbHRhWSooZDNTZWxlY3Rpb24uZXZlbnQuZGVsdGFNb2RlPT09MT8uMDU6ZDNTZWxlY3Rpb24uZXZlbnQuZGVsdGFNb2RlPzE6LjAwMil9ZnVuY3Rpb24gZGVmYXVsdFRvdWNoYWJsZSgpe3JldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHN8fCJvbnRvdWNoc3RhcnQiaW4gdGhpc31mdW5jdGlvbiBkZWZhdWx0Q29uc3RyYWluKHRyYW5zZm9ybSxleHRlbnQsdHJhbnNsYXRlRXh0ZW50KXt2YXIgZHgwPXRyYW5zZm9ybS5pbnZlcnRYKGV4dGVudFswXVswXSktdHJhbnNsYXRlRXh0ZW50WzBdWzBdLGR4MT10cmFuc2Zvcm0uaW52ZXJ0WChleHRlbnRbMV1bMF0pLXRyYW5zbGF0ZUV4dGVudFsxXVswXSxkeTA9dHJhbnNmb3JtLmludmVydFkoZXh0ZW50WzBdWzFdKS10cmFuc2xhdGVFeHRlbnRbMF1bMV0sZHkxPXRyYW5zZm9ybS5pbnZlcnRZKGV4dGVudFsxXVsxXSktdHJhbnNsYXRlRXh0ZW50WzFdWzFdO3JldHVybiB0cmFuc2Zvcm0udHJhbnNsYXRlKGR4MT5keDA/KGR4MCtkeDEpLzI6TWF0aC5taW4oMCxkeDApfHxNYXRoLm1heCgwLGR4MSksZHkxPmR5MD8oZHkwK2R5MSkvMjpNYXRoLm1pbigwLGR5MCl8fE1hdGgubWF4KDAsZHkxKSl9ZnVuY3Rpb24gem9vbSgpe3ZhciBmaWx0ZXI9ZGVmYXVsdEZpbHRlcixleHRlbnQ9ZGVmYXVsdEV4dGVudCxjb25zdHJhaW49ZGVmYXVsdENvbnN0cmFpbix3aGVlbERlbHRhPWRlZmF1bHRXaGVlbERlbHRhLHRvdWNoYWJsZT1kZWZhdWx0VG91Y2hhYmxlLHNjYWxlRXh0ZW50PVswLEluZmluaXR5XSx0cmFuc2xhdGVFeHRlbnQ9W1stSW5maW5pdHksLUluZmluaXR5XSxbSW5maW5pdHksSW5maW5pdHldXSxkdXJhdGlvbj0yNTAsaW50ZXJwb2xhdGU9ZDNJbnRlcnBvbGF0ZS5pbnRlcnBvbGF0ZVpvb20sbGlzdGVuZXJzPWQzRGlzcGF0Y2guZGlzcGF0Y2goInN0YXJ0Iiwiem9vbSIsImVuZCIpLHRvdWNoc3RhcnRpbmcsdG91Y2hlbmRpbmcsdG91Y2hEZWxheT01MDAsd2hlZWxEZWxheT0xNTAsY2xpY2tEaXN0YW5jZTI9MDtmdW5jdGlvbiB6b29tKHNlbGVjdGlvbil7c2VsZWN0aW9uLnByb3BlcnR5KCJfX3pvb20iLGRlZmF1bHRUcmFuc2Zvcm0pLm9uKCJ3aGVlbC56b29tIix3aGVlbGVkKS5vbigibW91c2Vkb3duLnpvb20iLG1vdXNlZG93bmVkKS5vbigiZGJsY2xpY2suem9vbSIsZGJsY2xpY2tlZCkuZmlsdGVyKHRvdWNoYWJsZSkub24oInRvdWNoc3RhcnQuem9vbSIsdG91Y2hzdGFydGVkKS5vbigidG91Y2htb3ZlLnpvb20iLHRvdWNobW92ZWQpLm9uKCJ0b3VjaGVuZC56b29tIHRvdWNoY2FuY2VsLnpvb20iLHRvdWNoZW5kZWQpLnN0eWxlKCJ0b3VjaC1hY3Rpb24iLCJub25lIikuc3R5bGUoIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvciIsInJnYmEoMCwwLDAsMCkiKX16b29tLnRyYW5zZm9ybT1mdW5jdGlvbihjb2xsZWN0aW9uLHRyYW5zZm9ybSxwb2ludCl7dmFyIHNlbGVjdGlvbj1jb2xsZWN0aW9uLnNlbGVjdGlvbj9jb2xsZWN0aW9uLnNlbGVjdGlvbigpOmNvbGxlY3Rpb247c2VsZWN0aW9uLnByb3BlcnR5KCJfX3pvb20iLGRlZmF1bHRUcmFuc2Zvcm0pO2lmKGNvbGxlY3Rpb24hPT1zZWxlY3Rpb24pe3NjaGVkdWxlKGNvbGxlY3Rpb24sdHJhbnNmb3JtLHBvaW50KX1lbHNle3NlbGVjdGlvbi5pbnRlcnJ1cHQoKS5lYWNoKGZ1bmN0aW9uKCl7Z2VzdHVyZSh0aGlzLGFyZ3VtZW50cykuc3RhcnQoKS56b29tKG51bGwsdHlwZW9mIHRyYW5zZm9ybT09PSJmdW5jdGlvbiI/dHJhbnNmb3JtLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0cmFuc2Zvcm0pLmVuZCgpfSl9fTt6b29tLnNjYWxlQnk9ZnVuY3Rpb24oc2VsZWN0aW9uLGsscCl7em9vbS5zY2FsZVRvKHNlbGVjdGlvbixmdW5jdGlvbigpe3ZhciBrMD10aGlzLl9fem9vbS5rLGsxPXR5cGVvZiBrPT09ImZ1bmN0aW9uIj9rLmFwcGx5KHRoaXMsYXJndW1lbnRzKTprO3JldHVybiBrMCprMX0scCl9O3pvb20uc2NhbGVUbz1mdW5jdGlvbihzZWxlY3Rpb24sayxwKXt6b29tLnRyYW5zZm9ybShzZWxlY3Rpb24sZnVuY3Rpb24oKXt2YXIgZT1leHRlbnQuYXBwbHkodGhpcyxhcmd1bWVudHMpLHQwPXRoaXMuX196b29tLHAwPXA9PW51bGw/Y2VudHJvaWQoZSk6dHlwZW9mIHA9PT0iZnVuY3Rpb24iP3AuYXBwbHkodGhpcyxhcmd1bWVudHMpOnAscDE9dDAuaW52ZXJ0KHAwKSxrMT10eXBlb2Ygaz09PSJmdW5jdGlvbiI/ay5hcHBseSh0aGlzLGFyZ3VtZW50cyk6aztyZXR1cm4gY29uc3RyYWluKHRyYW5zbGF0ZShzY2FsZSh0MCxrMSkscDAscDEpLGUsdHJhbnNsYXRlRXh0ZW50KX0scCl9O3pvb20udHJhbnNsYXRlQnk9ZnVuY3Rpb24oc2VsZWN0aW9uLHgseSl7em9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLGZ1bmN0aW9uKCl7cmV0dXJuIGNvbnN0cmFpbih0aGlzLl9fem9vbS50cmFuc2xhdGUodHlwZW9mIHg9PT0iZnVuY3Rpb24iP3guYXBwbHkodGhpcyxhcmd1bWVudHMpOngsdHlwZW9mIHk9PT0iZnVuY3Rpb24iP3kuYXBwbHkodGhpcyxhcmd1bWVudHMpOnkpLGV4dGVudC5hcHBseSh0aGlzLGFyZ3VtZW50cyksdHJhbnNsYXRlRXh0ZW50KX0pfTt6b29tLnRyYW5zbGF0ZVRvPWZ1bmN0aW9uKHNlbGVjdGlvbix4LHkscCl7em9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLGZ1bmN0aW9uKCl7dmFyIGU9ZXh0ZW50LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0PXRoaXMuX196b29tLHAwPXA9PW51bGw/Y2VudHJvaWQoZSk6dHlwZW9mIHA9PT0iZnVuY3Rpb24iP3AuYXBwbHkodGhpcyxhcmd1bWVudHMpOnA7cmV0dXJuIGNvbnN0cmFpbihpZGVudGl0eS50cmFuc2xhdGUocDBbMF0scDBbMV0pLnNjYWxlKHQuaykudHJhbnNsYXRlKHR5cGVvZiB4PT09ImZ1bmN0aW9uIj8teC5hcHBseSh0aGlzLGFyZ3VtZW50cyk6LXgsdHlwZW9mIHk9PT0iZnVuY3Rpb24iPy15LmFwcGx5KHRoaXMsYXJndW1lbnRzKToteSksZSx0cmFuc2xhdGVFeHRlbnQpfSxwKX07ZnVuY3Rpb24gc2NhbGUodHJhbnNmb3JtLGspe2s9TWF0aC5tYXgoc2NhbGVFeHRlbnRbMF0sTWF0aC5taW4oc2NhbGVFeHRlbnRbMV0saykpO3JldHVybiBrPT09dHJhbnNmb3JtLms/dHJhbnNmb3JtOm5ldyBUcmFuc2Zvcm0oayx0cmFuc2Zvcm0ueCx0cmFuc2Zvcm0ueSl9ZnVuY3Rpb24gdHJhbnNsYXRlKHRyYW5zZm9ybSxwMCxwMSl7dmFyIHg9cDBbMF0tcDFbMF0qdHJhbnNmb3JtLmsseT1wMFsxXS1wMVsxXSp0cmFuc2Zvcm0uaztyZXR1cm4geD09PXRyYW5zZm9ybS54JiZ5PT09dHJhbnNmb3JtLnk/dHJhbnNmb3JtOm5ldyBUcmFuc2Zvcm0odHJhbnNmb3JtLmsseCx5KX1mdW5jdGlvbiBjZW50cm9pZChleHRlbnQpe3JldHVyblsoK2V4dGVudFswXVswXSsgK2V4dGVudFsxXVswXSkvMiwoK2V4dGVudFswXVsxXSsgK2V4dGVudFsxXVsxXSkvMl19ZnVuY3Rpb24gc2NoZWR1bGUodHJhbnNpdGlvbix0cmFuc2Zvcm0scG9pbnQpe3RyYW5zaXRpb24ub24oInN0YXJ0Lnpvb20iLGZ1bmN0aW9uKCl7Z2VzdHVyZSh0aGlzLGFyZ3VtZW50cykuc3RhcnQoKX0pLm9uKCJpbnRlcnJ1cHQuem9vbSBlbmQuem9vbSIsZnVuY3Rpb24oKXtnZXN0dXJlKHRoaXMsYXJndW1lbnRzKS5lbmQoKX0pLnR3ZWVuKCJ6b29tIixmdW5jdGlvbigpe3ZhciB0aGF0PXRoaXMsYXJncz1hcmd1bWVudHMsZz1nZXN0dXJlKHRoYXQsYXJncyksZT1leHRlbnQuYXBwbHkodGhhdCxhcmdzKSxwPXBvaW50PT1udWxsP2NlbnRyb2lkKGUpOnR5cGVvZiBwb2ludD09PSJmdW5jdGlvbiI/cG9pbnQuYXBwbHkodGhhdCxhcmdzKTpwb2ludCx3PU1hdGgubWF4KGVbMV1bMF0tZVswXVswXSxlWzFdWzFdLWVbMF1bMV0pLGE9dGhhdC5fX3pvb20sYj10eXBlb2YgdHJhbnNmb3JtPT09ImZ1bmN0aW9uIj90cmFuc2Zvcm0uYXBwbHkodGhhdCxhcmdzKTp0cmFuc2Zvcm0saT1pbnRlcnBvbGF0ZShhLmludmVydChwKS5jb25jYXQody9hLmspLGIuaW52ZXJ0KHApLmNvbmNhdCh3L2IuaykpO3JldHVybiBmdW5jdGlvbih0KXtpZih0PT09MSl0PWI7Ly8gQXZvaWQgcm91bmRpbmcgZXJyb3Igb24gZW5kLgplbHNle3ZhciBsPWkodCksaz13L2xbMl07dD1uZXcgVHJhbnNmb3JtKGsscFswXS1sWzBdKmsscFsxXS1sWzFdKmspfWcuem9vbShudWxsLHQpfX0pfWZ1bmN0aW9uIGdlc3R1cmUodGhhdCxhcmdzLGNsZWFuKXtyZXR1cm4hY2xlYW4mJnRoYXQuX196b29taW5nfHxuZXcgR2VzdHVyZSh0aGF0LGFyZ3MpfWZ1bmN0aW9uIEdlc3R1cmUodGhhdCxhcmdzKXt0aGlzLnRoYXQ9dGhhdDt0aGlzLmFyZ3M9YXJnczt0aGlzLmFjdGl2ZT0wO3RoaXMuZXh0ZW50PWV4dGVudC5hcHBseSh0aGF0LGFyZ3MpO3RoaXMudGFwcz0wfUdlc3R1cmUucHJvdG90eXBlPXtzdGFydDpmdW5jdGlvbigpe2lmKCsrdGhpcy5hY3RpdmU9PT0xKXt0aGlzLnRoYXQuX196b29taW5nPXRoaXM7dGhpcy5lbWl0KCJzdGFydCIpfXJldHVybiB0aGlzfSx6b29tOmZ1bmN0aW9uKGtleSx0cmFuc2Zvcm0pe2lmKHRoaXMubW91c2UmJmtleSE9PSJtb3VzZSIpdGhpcy5tb3VzZVsxXT10cmFuc2Zvcm0uaW52ZXJ0KHRoaXMubW91c2VbMF0pO2lmKHRoaXMudG91Y2gwJiZrZXkhPT0idG91Y2giKXRoaXMudG91Y2gwWzFdPXRyYW5zZm9ybS5pbnZlcnQodGhpcy50b3VjaDBbMF0pO2lmKHRoaXMudG91Y2gxJiZrZXkhPT0idG91Y2giKXRoaXMudG91Y2gxWzFdPXRyYW5zZm9ybS5pbnZlcnQodGhpcy50b3VjaDFbMF0pO3RoaXMudGhhdC5fX3pvb209dHJhbnNmb3JtO3RoaXMuZW1pdCgiem9vbSIpO3JldHVybiB0aGlzfSxlbmQ6ZnVuY3Rpb24oKXtpZigtLXRoaXMuYWN0aXZlPT09MCl7ZGVsZXRlIHRoaXMudGhhdC5fX3pvb21pbmc7dGhpcy5lbWl0KCJlbmQiKX1yZXR1cm4gdGhpc30sZW1pdDpmdW5jdGlvbih0eXBlKXtkM1NlbGVjdGlvbi5jdXN0b21FdmVudChuZXcgWm9vbUV2ZW50KHpvb20sdHlwZSx0aGlzLnRoYXQuX196b29tKSxsaXN0ZW5lcnMuYXBwbHksbGlzdGVuZXJzLFt0eXBlLHRoaXMudGhhdCx0aGlzLmFyZ3NdKX19O2Z1bmN0aW9uIHdoZWVsZWQoKXtpZighZmlsdGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSlyZXR1cm47dmFyIGc9Z2VzdHVyZSh0aGlzLGFyZ3VtZW50cyksdD10aGlzLl9fem9vbSxrPU1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLE1hdGgubWluKHNjYWxlRXh0ZW50WzFdLHQuaypNYXRoLnBvdygyLHdoZWVsRGVsdGEuYXBwbHkodGhpcyxhcmd1bWVudHMpKSkpLHA9ZDNTZWxlY3Rpb24ubW91c2UodGhpcyk7Ci8vIElmIHRoZSBtb3VzZSBpcyBpbiB0aGUgc2FtZSBsb2NhdGlvbiBhcyBiZWZvcmUsIHJldXNlIGl0LgovLyBJZiB0aGVyZSB3ZXJlIHJlY2VudCB3aGVlbCBldmVudHMsIHJlc2V0IHRoZSB3aGVlbCBpZGxlIHRpbWVvdXQuCmlmKGcud2hlZWwpe2lmKGcubW91c2VbMF1bMF0hPT1wWzBdfHxnLm1vdXNlWzBdWzFdIT09cFsxXSl7Zy5tb3VzZVsxXT10LmludmVydChnLm1vdXNlWzBdPXApfWNsZWFyVGltZW91dChnLndoZWVsKX0KLy8gSWYgdGhpcyB3aGVlbCBldmVudCB3b27igJl0IHRyaWdnZXIgYSB0cmFuc2Zvcm0gY2hhbmdlLCBpZ25vcmUgaXQuCmVsc2UgaWYodC5rPT09aylyZXR1cm47Ci8vIE90aGVyd2lzZSwgY2FwdHVyZSB0aGUgbW91c2UgcG9pbnQgYW5kIGxvY2F0aW9uIGF0IHRoZSBzdGFydC4KZWxzZXtnLm1vdXNlPVtwLHQuaW52ZXJ0KHApXTtkM1RyYW5zaXRpb24uaW50ZXJydXB0KHRoaXMpO2cuc3RhcnQoKX1ub2V2ZW50KCk7Zy53aGVlbD1zZXRUaW1lb3V0KHdoZWVsaWRsZWQsd2hlZWxEZWxheSk7Zy56b29tKCJtb3VzZSIsY29uc3RyYWluKHRyYW5zbGF0ZShzY2FsZSh0LGspLGcubW91c2VbMF0sZy5tb3VzZVsxXSksZy5leHRlbnQsdHJhbnNsYXRlRXh0ZW50KSk7ZnVuY3Rpb24gd2hlZWxpZGxlZCgpe2cud2hlZWw9bnVsbDtnLmVuZCgpfX1mdW5jdGlvbiBtb3VzZWRvd25lZCgpe2lmKHRvdWNoZW5kaW5nfHwhZmlsdGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSlyZXR1cm47dmFyIGc9Z2VzdHVyZSh0aGlzLGFyZ3VtZW50cyx0cnVlKSx2PWQzU2VsZWN0aW9uLnNlbGVjdChkM1NlbGVjdGlvbi5ldmVudC52aWV3KS5vbigibW91c2Vtb3ZlLnpvb20iLG1vdXNlbW92ZWQsdHJ1ZSkub24oIm1vdXNldXAuem9vbSIsbW91c2V1cHBlZCx0cnVlKSxwPWQzU2VsZWN0aW9uLm1vdXNlKHRoaXMpLHgwPWQzU2VsZWN0aW9uLmV2ZW50LmNsaWVudFgseTA9ZDNTZWxlY3Rpb24uZXZlbnQuY2xpZW50WTtkM0RyYWcuZHJhZ0Rpc2FibGUoZDNTZWxlY3Rpb24uZXZlbnQudmlldyk7bm9wcm9wYWdhdGlvbigpO2cubW91c2U9W3AsdGhpcy5fX3pvb20uaW52ZXJ0KHApXTtkM1RyYW5zaXRpb24uaW50ZXJydXB0KHRoaXMpO2cuc3RhcnQoKTtmdW5jdGlvbiBtb3VzZW1vdmVkKCl7bm9ldmVudCgpO2lmKCFnLm1vdmVkKXt2YXIgZHg9ZDNTZWxlY3Rpb24uZXZlbnQuY2xpZW50WC14MCxkeT1kM1NlbGVjdGlvbi5ldmVudC5jbGllbnRZLXkwO2cubW92ZWQ9ZHgqZHgrZHkqZHk+Y2xpY2tEaXN0YW5jZTJ9Zy56b29tKCJtb3VzZSIsY29uc3RyYWluKHRyYW5zbGF0ZShnLnRoYXQuX196b29tLGcubW91c2VbMF09ZDNTZWxlY3Rpb24ubW91c2UoZy50aGF0KSxnLm1vdXNlWzFdKSxnLmV4dGVudCx0cmFuc2xhdGVFeHRlbnQpKX1mdW5jdGlvbiBtb3VzZXVwcGVkKCl7di5vbigibW91c2Vtb3ZlLnpvb20gbW91c2V1cC56b29tIixudWxsKTtkM0RyYWcuZHJhZ0VuYWJsZShkM1NlbGVjdGlvbi5ldmVudC52aWV3LGcubW92ZWQpO25vZXZlbnQoKTtnLmVuZCgpfX1mdW5jdGlvbiBkYmxjbGlja2VkKCl7aWYoIWZpbHRlci5hcHBseSh0aGlzLGFyZ3VtZW50cykpcmV0dXJuO3ZhciB0MD10aGlzLl9fem9vbSxwMD1kM1NlbGVjdGlvbi5tb3VzZSh0aGlzKSxwMT10MC5pbnZlcnQocDApLGsxPXQwLmsqKGQzU2VsZWN0aW9uLmV2ZW50LnNoaWZ0S2V5Py41OjIpLHQxPWNvbnN0cmFpbih0cmFuc2xhdGUoc2NhbGUodDAsazEpLHAwLHAxKSxleHRlbnQuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRyYW5zbGF0ZUV4dGVudCk7bm9ldmVudCgpO2lmKGR1cmF0aW9uPjApZDNTZWxlY3Rpb24uc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihkdXJhdGlvbikuY2FsbChzY2hlZHVsZSx0MSxwMCk7ZWxzZSBkM1NlbGVjdGlvbi5zZWxlY3QodGhpcykuY2FsbCh6b29tLnRyYW5zZm9ybSx0MSl9ZnVuY3Rpb24gdG91Y2hzdGFydGVkKCl7aWYoIWZpbHRlci5hcHBseSh0aGlzLGFyZ3VtZW50cykpcmV0dXJuO3ZhciB0b3VjaGVzPWQzU2VsZWN0aW9uLmV2ZW50LnRvdWNoZXMsbj10b3VjaGVzLmxlbmd0aCxnPWdlc3R1cmUodGhpcyxhcmd1bWVudHMsZDNTZWxlY3Rpb24uZXZlbnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoPT09biksc3RhcnRlZCxpLHQscDtub3Byb3BhZ2F0aW9uKCk7Zm9yKGk9MDtpPG47KytpKXt0PXRvdWNoZXNbaV0scD1kM1NlbGVjdGlvbi50b3VjaCh0aGlzLHRvdWNoZXMsdC5pZGVudGlmaWVyKTtwPVtwLHRoaXMuX196b29tLmludmVydChwKSx0LmlkZW50aWZpZXJdO2lmKCFnLnRvdWNoMClnLnRvdWNoMD1wLHN0YXJ0ZWQ9dHJ1ZSxnLnRhcHM9MSshIXRvdWNoc3RhcnRpbmc7ZWxzZSBpZighZy50b3VjaDEmJmcudG91Y2gwWzJdIT09cFsyXSlnLnRvdWNoMT1wLGcudGFwcz0wfWlmKHRvdWNoc3RhcnRpbmcpdG91Y2hzdGFydGluZz1jbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7aWYoc3RhcnRlZCl7aWYoZy50YXBzPDIpdG91Y2hzdGFydGluZz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dG91Y2hzdGFydGluZz1udWxsfSx0b3VjaERlbGF5KTtkM1RyYW5zaXRpb24uaW50ZXJydXB0KHRoaXMpO2cuc3RhcnQoKX19ZnVuY3Rpb24gdG91Y2htb3ZlZCgpe2lmKCF0aGlzLl9fem9vbWluZylyZXR1cm47dmFyIGc9Z2VzdHVyZSh0aGlzLGFyZ3VtZW50cyksdG91Y2hlcz1kM1NlbGVjdGlvbi5ldmVudC5jaGFuZ2VkVG91Y2hlcyxuPXRvdWNoZXMubGVuZ3RoLGksdCxwLGw7bm9ldmVudCgpO2lmKHRvdWNoc3RhcnRpbmcpdG91Y2hzdGFydGluZz1jbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7Zy50YXBzPTA7Zm9yKGk9MDtpPG47KytpKXt0PXRvdWNoZXNbaV0scD1kM1NlbGVjdGlvbi50b3VjaCh0aGlzLHRvdWNoZXMsdC5pZGVudGlmaWVyKTtpZihnLnRvdWNoMCYmZy50b3VjaDBbMl09PT10LmlkZW50aWZpZXIpZy50b3VjaDBbMF09cDtlbHNlIGlmKGcudG91Y2gxJiZnLnRvdWNoMVsyXT09PXQuaWRlbnRpZmllcilnLnRvdWNoMVswXT1wfXQ9Zy50aGF0Ll9fem9vbTtpZihnLnRvdWNoMSl7dmFyIHAwPWcudG91Y2gwWzBdLGwwPWcudG91Y2gwWzFdLHAxPWcudG91Y2gxWzBdLGwxPWcudG91Y2gxWzFdLGRwPShkcD1wMVswXS1wMFswXSkqZHArKGRwPXAxWzFdLXAwWzFdKSpkcCxkbD0oZGw9bDFbMF0tbDBbMF0pKmRsKyhkbD1sMVsxXS1sMFsxXSkqZGw7dD1zY2FsZSh0LE1hdGguc3FydChkcC9kbCkpO3A9WyhwMFswXStwMVswXSkvMiwocDBbMV0rcDFbMV0pLzJdO2w9WyhsMFswXStsMVswXSkvMiwobDBbMV0rbDFbMV0pLzJdfWVsc2UgaWYoZy50b3VjaDApcD1nLnRvdWNoMFswXSxsPWcudG91Y2gwWzFdO2Vsc2UgcmV0dXJuO2cuem9vbSgidG91Y2giLGNvbnN0cmFpbih0cmFuc2xhdGUodCxwLGwpLGcuZXh0ZW50LHRyYW5zbGF0ZUV4dGVudCkpfWZ1bmN0aW9uIHRvdWNoZW5kZWQoKXtpZighdGhpcy5fX3pvb21pbmcpcmV0dXJuO3ZhciBnPWdlc3R1cmUodGhpcyxhcmd1bWVudHMpLHRvdWNoZXM9ZDNTZWxlY3Rpb24uZXZlbnQuY2hhbmdlZFRvdWNoZXMsbj10b3VjaGVzLmxlbmd0aCxpLHQ7bm9wcm9wYWdhdGlvbigpO2lmKHRvdWNoZW5kaW5nKWNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7dG91Y2hlbmRpbmc9c2V0VGltZW91dChmdW5jdGlvbigpe3RvdWNoZW5kaW5nPW51bGx9LHRvdWNoRGVsYXkpO2ZvcihpPTA7aTxuOysraSl7dD10b3VjaGVzW2ldO2lmKGcudG91Y2gwJiZnLnRvdWNoMFsyXT09PXQuaWRlbnRpZmllcilkZWxldGUgZy50b3VjaDA7ZWxzZSBpZihnLnRvdWNoMSYmZy50b3VjaDFbMl09PT10LmlkZW50aWZpZXIpZGVsZXRlIGcudG91Y2gxfWlmKGcudG91Y2gxJiYhZy50b3VjaDApZy50b3VjaDA9Zy50b3VjaDEsZGVsZXRlIGcudG91Y2gxO2lmKGcudG91Y2gwKWcudG91Y2gwWzFdPXRoaXMuX196b29tLmludmVydChnLnRvdWNoMFswXSk7ZWxzZXtnLmVuZCgpOwovLyBJZiB0aGlzIHdhcyBhIGRibHRhcCwgcmVyb3V0ZSB0byB0aGUgKG9wdGlvbmFsKSBkYmxjbGljay56b29tIGhhbmRsZXIuCmlmKGcudGFwcz09PTIpe3ZhciBwPWQzU2VsZWN0aW9uLnNlbGVjdCh0aGlzKS5vbigiZGJsY2xpY2suem9vbSIpO2lmKHApcC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX16b29tLndoZWVsRGVsdGE9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHdoZWVsRGVsdGE9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoK18pLHpvb20pOndoZWVsRGVsdGF9O3pvb20uZmlsdGVyPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhmaWx0ZXI9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoISFfKSx6b29tKTpmaWx0ZXJ9O3pvb20udG91Y2hhYmxlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0b3VjaGFibGU9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoISFfKSx6b29tKTp0b3VjaGFibGV9O3pvb20uZXh0ZW50PWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhleHRlbnQ9dHlwZW9mIF89PT0iZnVuY3Rpb24iP186Y29uc3RhbnQoW1srX1swXVswXSwrX1swXVsxXV0sWytfWzFdWzBdLCtfWzFdWzFdXV0pLHpvb20pOmV4dGVudH07em9vbS5zY2FsZUV4dGVudD1mdW5jdGlvbihfKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oc2NhbGVFeHRlbnRbMF09K19bMF0sc2NhbGVFeHRlbnRbMV09K19bMV0sem9vbSk6W3NjYWxlRXh0ZW50WzBdLHNjYWxlRXh0ZW50WzFdXX07em9vbS50cmFuc2xhdGVFeHRlbnQ9ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRyYW5zbGF0ZUV4dGVudFswXVswXT0rX1swXVswXSx0cmFuc2xhdGVFeHRlbnRbMV1bMF09K19bMV1bMF0sdHJhbnNsYXRlRXh0ZW50WzBdWzFdPStfWzBdWzFdLHRyYW5zbGF0ZUV4dGVudFsxXVsxXT0rX1sxXVsxXSx6b29tKTpbW3RyYW5zbGF0ZUV4dGVudFswXVswXSx0cmFuc2xhdGVFeHRlbnRbMF1bMV1dLFt0cmFuc2xhdGVFeHRlbnRbMV1bMF0sdHJhbnNsYXRlRXh0ZW50WzFdWzFdXV19O3pvb20uY29uc3RyYWluPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjb25zdHJhaW49Xyx6b29tKTpjb25zdHJhaW59O3pvb20uZHVyYXRpb249ZnVuY3Rpb24oXyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGR1cmF0aW9uPStfLHpvb20pOmR1cmF0aW9ufTt6b29tLmludGVycG9sYXRlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpbnRlcnBvbGF0ZT1fLHpvb20pOmludGVycG9sYXRlfTt6b29tLm9uPWZ1bmN0aW9uKCl7dmFyIHZhbHVlPWxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsYXJndW1lbnRzKTtyZXR1cm4gdmFsdWU9PT1saXN0ZW5lcnM/em9vbTp2YWx1ZX07em9vbS5jbGlja0Rpc3RhbmNlPWZ1bmN0aW9uKF8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhjbGlja0Rpc3RhbmNlMj0oXz0rXykqXyx6b29tKTpNYXRoLnNxcnQoY2xpY2tEaXN0YW5jZTIpfTtyZXR1cm4gem9vbX1leHBvcnRzLnpvb209em9vbTtleHBvcnRzLnpvb21JZGVudGl0eT1pZGVudGl0eTtleHBvcnRzLnpvb21UcmFuc2Zvcm09dHJhbnNmb3JtO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pfSl9LHsiZDMtZGlzcGF0Y2giOjM2LCJkMy1kcmFnIjozNywiZDMtaW50ZXJwb2xhdGUiOjQ1LCJkMy1zZWxlY3Rpb24iOjUyLCJkMy10cmFuc2l0aW9uIjo1N31dLDYwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIGQzQXJyYXk9cmVxdWlyZSgiZDMtYXJyYXkiKTt2YXIgZDNBeGlzPXJlcXVpcmUoImQzLWF4aXMiKTt2YXIgZDNCcnVzaD1yZXF1aXJlKCJkMy1icnVzaCIpO3ZhciBkM0Nob3JkPXJlcXVpcmUoImQzLWNob3JkIik7dmFyIGQzQ29sbGVjdGlvbj1yZXF1aXJlKCJkMy1jb2xsZWN0aW9uIik7dmFyIGQzQ29sb3I9cmVxdWlyZSgiZDMtY29sb3IiKTt2YXIgZDNDb250b3VyPXJlcXVpcmUoImQzLWNvbnRvdXIiKTt2YXIgZDNEaXNwYXRjaD1yZXF1aXJlKCJkMy1kaXNwYXRjaCIpO3ZhciBkM0RyYWc9cmVxdWlyZSgiZDMtZHJhZyIpO3ZhciBkM0Rzdj1yZXF1aXJlKCJkMy1kc3YiKTt2YXIgZDNFYXNlPXJlcXVpcmUoImQzLWVhc2UiKTt2YXIgZDNGZXRjaD1yZXF1aXJlKCJkMy1mZXRjaCIpO3ZhciBkM0ZvcmNlPXJlcXVpcmUoImQzLWZvcmNlIik7dmFyIGQzRm9ybWF0PXJlcXVpcmUoImQzLWZvcm1hdCIpO3ZhciBkM0dlbz1yZXF1aXJlKCJkMy1nZW8iKTt2YXIgZDNIaWVyYXJjaHk9cmVxdWlyZSgiZDMtaGllcmFyY2h5Iik7dmFyIGQzSW50ZXJwb2xhdGU9cmVxdWlyZSgiZDMtaW50ZXJwb2xhdGUiKTt2YXIgZDNQYXRoPXJlcXVpcmUoImQzLXBhdGgiKTt2YXIgZDNQb2x5Z29uPXJlcXVpcmUoImQzLXBvbHlnb24iKTt2YXIgZDNRdWFkdHJlZT1yZXF1aXJlKCJkMy1xdWFkdHJlZSIpO3ZhciBkM1JhbmRvbT1yZXF1aXJlKCJkMy1yYW5kb20iKTt2YXIgZDNTY2FsZT1yZXF1aXJlKCJkMy1zY2FsZSIpO3ZhciBkM1NjYWxlQ2hyb21hdGljPXJlcXVpcmUoImQzLXNjYWxlLWNocm9tYXRpYyIpO3ZhciBkM1NlbGVjdGlvbj1yZXF1aXJlKCJkMy1zZWxlY3Rpb24iKTt2YXIgZDNTaGFwZT1yZXF1aXJlKCJkMy1zaGFwZSIpO3ZhciBkM1RpbWU9cmVxdWlyZSgiZDMtdGltZSIpO3ZhciBkM1RpbWVGb3JtYXQ9cmVxdWlyZSgiZDMtdGltZS1mb3JtYXQiKTt2YXIgZDNUaW1lcj1yZXF1aXJlKCJkMy10aW1lciIpO3ZhciBkM1RyYW5zaXRpb249cmVxdWlyZSgiZDMtdHJhbnNpdGlvbiIpO3ZhciBkM1Zvcm9ub2k9cmVxdWlyZSgiZDMtdm9yb25vaSIpO3ZhciBkM1pvb209cmVxdWlyZSgiZDMtem9vbSIpO3ZhciB2ZXJzaW9uPSI1LjE0LjIiO09iamVjdC5rZXlzKGQzQXJyYXkpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzQXJyYXlba119fSl9KTtPYmplY3Qua2V5cyhkM0F4aXMpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzQXhpc1trXX19KX0pO09iamVjdC5rZXlzKGQzQnJ1c2gpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzQnJ1c2hba119fSl9KTtPYmplY3Qua2V5cyhkM0Nob3JkKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0Nob3JkW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNDb2xsZWN0aW9uKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0NvbGxlY3Rpb25ba119fSl9KTtPYmplY3Qua2V5cyhkM0NvbG9yKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0NvbG9yW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNDb250b3VyKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0NvbnRvdXJba119fSl9KTtPYmplY3Qua2V5cyhkM0Rpc3BhdGNoKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0Rpc3BhdGNoW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNEcmFnKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0RyYWdba119fSl9KTtPYmplY3Qua2V5cyhkM0RzdikuZm9yRWFjaChmdW5jdGlvbihrKXtpZihrIT09ImRlZmF1bHQiKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLGsse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZDNEc3Zba119fSl9KTtPYmplY3Qua2V5cyhkM0Vhc2UpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzRWFzZVtrXX19KX0pO09iamVjdC5rZXlzKGQzRmV0Y2gpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzRmV0Y2hba119fSl9KTtPYmplY3Qua2V5cyhkM0ZvcmNlKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM0ZvcmNlW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNGb3JtYXQpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzRm9ybWF0W2tdfX0pfSk7T2JqZWN0LmtleXMoZDNHZW8pLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzR2VvW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNIaWVyYXJjaHkpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzSGllcmFyY2h5W2tdfX0pfSk7T2JqZWN0LmtleXMoZDNJbnRlcnBvbGF0ZSkuZm9yRWFjaChmdW5jdGlvbihrKXtpZihrIT09ImRlZmF1bHQiKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLGsse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZDNJbnRlcnBvbGF0ZVtrXX19KX0pO09iamVjdC5rZXlzKGQzUGF0aCkuZm9yRWFjaChmdW5jdGlvbihrKXtpZihrIT09ImRlZmF1bHQiKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLGsse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZDNQYXRoW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNQb2x5Z29uKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM1BvbHlnb25ba119fSl9KTtPYmplY3Qua2V5cyhkM1F1YWR0cmVlKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM1F1YWR0cmVlW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNSYW5kb20pLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzUmFuZG9tW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNTY2FsZSkuZm9yRWFjaChmdW5jdGlvbihrKXtpZihrIT09ImRlZmF1bHQiKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLGsse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZDNTY2FsZVtrXX19KX0pO09iamVjdC5rZXlzKGQzU2NhbGVDaHJvbWF0aWMpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzU2NhbGVDaHJvbWF0aWNba119fSl9KTtPYmplY3Qua2V5cyhkM1NlbGVjdGlvbikuZm9yRWFjaChmdW5jdGlvbihrKXtpZihrIT09ImRlZmF1bHQiKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLGsse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZDNTZWxlY3Rpb25ba119fSl9KTtPYmplY3Qua2V5cyhkM1NoYXBlKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM1NoYXBlW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNUaW1lKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM1RpbWVba119fSl9KTtPYmplY3Qua2V5cyhkM1RpbWVGb3JtYXQpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzVGltZUZvcm1hdFtrXX19KX0pO09iamVjdC5rZXlzKGQzVGltZXIpLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzVGltZXJba119fSl9KTtPYmplY3Qua2V5cyhkM1RyYW5zaXRpb24pLmZvckVhY2goZnVuY3Rpb24oayl7aWYoayE9PSJkZWZhdWx0IilPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxrLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGQzVHJhbnNpdGlvbltrXX19KX0pO09iamVjdC5rZXlzKGQzVm9yb25vaSkuZm9yRWFjaChmdW5jdGlvbihrKXtpZihrIT09ImRlZmF1bHQiKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLGsse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZDNWb3Jvbm9pW2tdfX0pfSk7T2JqZWN0LmtleXMoZDNab29tKS5mb3JFYWNoKGZ1bmN0aW9uKGspe2lmKGshPT0iZGVmYXVsdCIpT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsayx7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe3JldHVybiBkM1pvb21ba119fSl9KTtleHBvcnRzLnZlcnNpb249dmVyc2lvbn0seyJkMy1hcnJheSI6MjksImQzLWF4aXMiOjMwLCJkMy1icnVzaCI6MzEsImQzLWNob3JkIjozMiwiZDMtY29sbGVjdGlvbiI6MzMsImQzLWNvbG9yIjozNCwiZDMtY29udG91ciI6MzUsImQzLWRpc3BhdGNoIjozNiwiZDMtZHJhZyI6MzcsImQzLWRzdiI6MzgsImQzLWVhc2UiOjM5LCJkMy1mZXRjaCI6NDAsImQzLWZvcmNlIjo0MSwiZDMtZm9ybWF0Ijo0MiwiZDMtZ2VvIjo0MywiZDMtaGllcmFyY2h5Ijo0NCwiZDMtaW50ZXJwb2xhdGUiOjQ1LCJkMy1wYXRoIjo0NiwiZDMtcG9seWdvbiI6NDcsImQzLXF1YWR0cmVlIjo0OCwiZDMtcmFuZG9tIjo0OSwiZDMtc2NhbGUiOjUxLCJkMy1zY2FsZS1jaHJvbWF0aWMiOjUwLCJkMy1zZWxlY3Rpb24iOjUyLCJkMy1zaGFwZSI6NTMsImQzLXRpbWUiOjU1LCJkMy10aW1lLWZvcm1hdCI6NTQsImQzLXRpbWVyIjo1NiwiZDMtdHJhbnNpdGlvbiI6NTcsImQzLXZvcm9ub2kiOjU4LCJkMy16b29tIjo1OX1dLDYxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoKQ29weXJpZ2h0IChjKSAyMDEyLTIwMTQgQ2hyaXMgUGV0dGl0dAoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQpvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAppbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzCnRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgphbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLApGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUKQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgpMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLApPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOClRIRSBTT0ZUV0FSRS4KKi8KbW9kdWxlLmV4cG9ydHM9e2dyYXBobGliOnJlcXVpcmUoIi4vbGliL2dyYXBobGliIiksbGF5b3V0OnJlcXVpcmUoIi4vbGliL2xheW91dCIpLGRlYnVnOnJlcXVpcmUoIi4vbGliL2RlYnVnIiksdXRpbDp7dGltZTpyZXF1aXJlKCIuL2xpYi91dGlsIikudGltZSxub3RpbWU6cmVxdWlyZSgiLi9saWIvdXRpbCIpLm5vdGltZX0sdmVyc2lvbjpyZXF1aXJlKCIuL2xpYi92ZXJzaW9uIil9fSx7Ii4vbGliL2RlYnVnIjo2NiwiLi9saWIvZ3JhcGhsaWIiOjY3LCIuL2xpYi9sYXlvdXQiOjY5LCIuL2xpYi91dGlsIjo4OSwiLi9saWIvdmVyc2lvbiI6OTB9XSw2MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7dmFyIGdyZWVkeUZBUz1yZXF1aXJlKCIuL2dyZWVkeS1mYXMiKTttb2R1bGUuZXhwb3J0cz17cnVuOnJ1bix1bmRvOnVuZG99O2Z1bmN0aW9uIHJ1bihnKXt2YXIgZmFzPWcuZ3JhcGgoKS5hY3ljbGljZXI9PT0iZ3JlZWR5Ij9ncmVlZHlGQVMoZyx3ZWlnaHRGbihnKSk6ZGZzRkFTKGcpO18uZm9yRWFjaChmYXMsZnVuY3Rpb24oZSl7dmFyIGxhYmVsPWcuZWRnZShlKTtnLnJlbW92ZUVkZ2UoZSk7bGFiZWwuZm9yd2FyZE5hbWU9ZS5uYW1lO2xhYmVsLnJldmVyc2VkPXRydWU7Zy5zZXRFZGdlKGUudyxlLnYsbGFiZWwsXy51bmlxdWVJZCgicmV2IikpfSk7ZnVuY3Rpb24gd2VpZ2h0Rm4oZyl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBnLmVkZ2UoZSkud2VpZ2h0fX19ZnVuY3Rpb24gZGZzRkFTKGcpe3ZhciBmYXM9W107dmFyIHN0YWNrPXt9O3ZhciB2aXNpdGVkPXt9O2Z1bmN0aW9uIGRmcyh2KXtpZihfLmhhcyh2aXNpdGVkLHYpKXtyZXR1cm59dmlzaXRlZFt2XT10cnVlO3N0YWNrW3ZdPXRydWU7Xy5mb3JFYWNoKGcub3V0RWRnZXModiksZnVuY3Rpb24oZSl7aWYoXy5oYXMoc3RhY2ssZS53KSl7ZmFzLnB1c2goZSl9ZWxzZXtkZnMoZS53KX19KTtkZWxldGUgc3RhY2tbdl19Xy5mb3JFYWNoKGcubm9kZXMoKSxkZnMpO3JldHVybiBmYXN9ZnVuY3Rpb24gdW5kbyhnKXtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBsYWJlbD1nLmVkZ2UoZSk7aWYobGFiZWwucmV2ZXJzZWQpe2cucmVtb3ZlRWRnZShlKTt2YXIgZm9yd2FyZE5hbWU9bGFiZWwuZm9yd2FyZE5hbWU7ZGVsZXRlIGxhYmVsLnJldmVyc2VkO2RlbGV0ZSBsYWJlbC5mb3J3YXJkTmFtZTtnLnNldEVkZ2UoZS53LGUudixsYWJlbCxmb3J3YXJkTmFtZSl9fSl9fSx7Ii4vZ3JlZWR5LWZhcyI6NjgsIi4vbG9kYXNoIjo3MH1dLDYzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuL2xvZGFzaCIpO3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO21vZHVsZS5leHBvcnRzPWFkZEJvcmRlclNlZ21lbnRzO2Z1bmN0aW9uIGFkZEJvcmRlclNlZ21lbnRzKGcpe2Z1bmN0aW9uIGRmcyh2KXt2YXIgY2hpbGRyZW49Zy5jaGlsZHJlbih2KTt2YXIgbm9kZT1nLm5vZGUodik7aWYoY2hpbGRyZW4ubGVuZ3RoKXtfLmZvckVhY2goY2hpbGRyZW4sZGZzKX1pZihfLmhhcyhub2RlLCJtaW5SYW5rIikpe25vZGUuYm9yZGVyTGVmdD1bXTtub2RlLmJvcmRlclJpZ2h0PVtdO2Zvcih2YXIgcmFuaz1ub2RlLm1pblJhbmssbWF4UmFuaz1ub2RlLm1heFJhbmsrMTtyYW5rPG1heFJhbms7KytyYW5rKXthZGRCb3JkZXJOb2RlKGcsImJvcmRlckxlZnQiLCJfYmwiLHYsbm9kZSxyYW5rKTthZGRCb3JkZXJOb2RlKGcsImJvcmRlclJpZ2h0IiwiX2JyIix2LG5vZGUscmFuayl9fX1fLmZvckVhY2goZy5jaGlsZHJlbigpLGRmcyl9ZnVuY3Rpb24gYWRkQm9yZGVyTm9kZShnLHByb3AscHJlZml4LHNnLHNnTm9kZSxyYW5rKXt2YXIgbGFiZWw9e3dpZHRoOjAsaGVpZ2h0OjAscmFuazpyYW5rLGJvcmRlclR5cGU6cHJvcH07dmFyIHByZXY9c2dOb2RlW3Byb3BdW3JhbmstMV07dmFyIGN1cnI9dXRpbC5hZGREdW1teU5vZGUoZywiYm9yZGVyIixsYWJlbCxwcmVmaXgpO3NnTm9kZVtwcm9wXVtyYW5rXT1jdXJyO2cuc2V0UGFyZW50KGN1cnIsc2cpO2lmKHByZXYpe2cuc2V0RWRnZShwcmV2LGN1cnIse3dlaWdodDoxfSl9fX0seyIuL2xvZGFzaCI6NzAsIi4vdXRpbCI6ODl9XSw2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9e2FkanVzdDphZGp1c3QsdW5kbzp1bmRvfTtmdW5jdGlvbiBhZGp1c3QoZyl7dmFyIHJhbmtEaXI9Zy5ncmFwaCgpLnJhbmtkaXIudG9Mb3dlckNhc2UoKTtpZihyYW5rRGlyPT09ImxyInx8cmFua0Rpcj09PSJybCIpe3N3YXBXaWR0aEhlaWdodChnKX19ZnVuY3Rpb24gdW5kbyhnKXt2YXIgcmFua0Rpcj1nLmdyYXBoKCkucmFua2Rpci50b0xvd2VyQ2FzZSgpO2lmKHJhbmtEaXI9PT0iYnQifHxyYW5rRGlyPT09InJsIil7cmV2ZXJzZVkoZyl9aWYocmFua0Rpcj09PSJsciJ8fHJhbmtEaXI9PT0icmwiKXtzd2FwWFkoZyk7c3dhcFdpZHRoSGVpZ2h0KGcpfX1mdW5jdGlvbiBzd2FwV2lkdGhIZWlnaHQoZyl7Xy5mb3JFYWNoKGcubm9kZXMoKSxmdW5jdGlvbih2KXtzd2FwV2lkdGhIZWlnaHRPbmUoZy5ub2RlKHYpKX0pO18uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZSl7c3dhcFdpZHRoSGVpZ2h0T25lKGcuZWRnZShlKSl9KX1mdW5jdGlvbiBzd2FwV2lkdGhIZWlnaHRPbmUoYXR0cnMpe3ZhciB3PWF0dHJzLndpZHRoO2F0dHJzLndpZHRoPWF0dHJzLmhlaWdodDthdHRycy5oZWlnaHQ9d31mdW5jdGlvbiByZXZlcnNlWShnKXtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3JldmVyc2VZT25lKGcubm9kZSh2KSl9KTtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBlZGdlPWcuZWRnZShlKTtfLmZvckVhY2goZWRnZS5wb2ludHMscmV2ZXJzZVlPbmUpO2lmKF8uaGFzKGVkZ2UsInkiKSl7cmV2ZXJzZVlPbmUoZWRnZSl9fSl9ZnVuY3Rpb24gcmV2ZXJzZVlPbmUoYXR0cnMpe2F0dHJzLnk9LWF0dHJzLnl9ZnVuY3Rpb24gc3dhcFhZKGcpe18uZm9yRWFjaChnLm5vZGVzKCksZnVuY3Rpb24odil7c3dhcFhZT25lKGcubm9kZSh2KSl9KTtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBlZGdlPWcuZWRnZShlKTtfLmZvckVhY2goZWRnZS5wb2ludHMsc3dhcFhZT25lKTtpZihfLmhhcyhlZGdlLCJ4Iikpe3N3YXBYWU9uZShlZGdlKX19KX1mdW5jdGlvbiBzd2FwWFlPbmUoYXR0cnMpe3ZhciB4PWF0dHJzLng7YXR0cnMueD1hdHRycy55O2F0dHJzLnk9eH19LHsiLi9sb2Rhc2giOjcwfV0sNjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKgogKiBTaW1wbGUgZG91Ymx5IGxpbmtlZCBsaXN0IGltcGxlbWVudGF0aW9uIGRlcml2ZWQgZnJvbSBDb3JtZW4sIGV0IGFsLiwKICogIkludHJvZHVjdGlvbiB0byBBbGdvcml0aG1zIi4KICovCm1vZHVsZS5leHBvcnRzPUxpc3Q7ZnVuY3Rpb24gTGlzdCgpe3ZhciBzZW50aW5lbD17fTtzZW50aW5lbC5fbmV4dD1zZW50aW5lbC5fcHJldj1zZW50aW5lbDt0aGlzLl9zZW50aW5lbD1zZW50aW5lbH1MaXN0LnByb3RvdHlwZS5kZXF1ZXVlPWZ1bmN0aW9uKCl7dmFyIHNlbnRpbmVsPXRoaXMuX3NlbnRpbmVsO3ZhciBlbnRyeT1zZW50aW5lbC5fcHJldjtpZihlbnRyeSE9PXNlbnRpbmVsKXt1bmxpbmsoZW50cnkpO3JldHVybiBlbnRyeX19O0xpc3QucHJvdG90eXBlLmVucXVldWU9ZnVuY3Rpb24oZW50cnkpe3ZhciBzZW50aW5lbD10aGlzLl9zZW50aW5lbDtpZihlbnRyeS5fcHJldiYmZW50cnkuX25leHQpe3VubGluayhlbnRyeSl9ZW50cnkuX25leHQ9c2VudGluZWwuX25leHQ7c2VudGluZWwuX25leHQuX3ByZXY9ZW50cnk7c2VudGluZWwuX25leHQ9ZW50cnk7ZW50cnkuX3ByZXY9c2VudGluZWx9O0xpc3QucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHN0cnM9W107dmFyIHNlbnRpbmVsPXRoaXMuX3NlbnRpbmVsO3ZhciBjdXJyPXNlbnRpbmVsLl9wcmV2O3doaWxlKGN1cnIhPT1zZW50aW5lbCl7c3Rycy5wdXNoKEpTT04uc3RyaW5naWZ5KGN1cnIsZmlsdGVyT3V0TGlua3MpKTtjdXJyPWN1cnIuX3ByZXZ9cmV0dXJuIlsiK3N0cnMuam9pbigiLCAiKSsiXSJ9O2Z1bmN0aW9uIHVubGluayhlbnRyeSl7ZW50cnkuX3ByZXYuX25leHQ9ZW50cnkuX25leHQ7ZW50cnkuX25leHQuX3ByZXY9ZW50cnkuX3ByZXY7ZGVsZXRlIGVudHJ5Ll9uZXh0O2RlbGV0ZSBlbnRyeS5fcHJldn1mdW5jdGlvbiBmaWx0ZXJPdXRMaW5rcyhrLHYpe2lmKGshPT0iX25leHQiJiZrIT09Il9wcmV2Iil7cmV0dXJuIHZ9fX0se31dLDY2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuL2xvZGFzaCIpO3ZhciB1dGlsPXJlcXVpcmUoIi4vdXRpbCIpO3ZhciBHcmFwaD1yZXF1aXJlKCIuL2dyYXBobGliIikuR3JhcGg7bW9kdWxlLmV4cG9ydHM9e2RlYnVnT3JkZXJpbmc6ZGVidWdPcmRlcmluZ307Ci8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovZnVuY3Rpb24gZGVidWdPcmRlcmluZyhnKXt2YXIgbGF5ZXJNYXRyaXg9dXRpbC5idWlsZExheWVyTWF0cml4KGcpO3ZhciBoPW5ldyBHcmFwaCh7Y29tcG91bmQ6dHJ1ZSxtdWx0aWdyYXBoOnRydWV9KS5zZXRHcmFwaCh7fSk7Xy5mb3JFYWNoKGcubm9kZXMoKSxmdW5jdGlvbih2KXtoLnNldE5vZGUodix7bGFiZWw6dn0pO2guc2V0UGFyZW50KHYsImxheWVyIitnLm5vZGUodikucmFuayl9KTtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe2guc2V0RWRnZShlLnYsZS53LHt9LGUubmFtZSl9KTtfLmZvckVhY2gobGF5ZXJNYXRyaXgsZnVuY3Rpb24obGF5ZXIsaSl7dmFyIGxheWVyVj0ibGF5ZXIiK2k7aC5zZXROb2RlKGxheWVyVix7cmFuazoic2FtZSJ9KTtfLnJlZHVjZShsYXllcixmdW5jdGlvbih1LHYpe2guc2V0RWRnZSh1LHYse3N0eWxlOiJpbnZpcyJ9KTtyZXR1cm4gdn0pfSk7cmV0dXJuIGh9fSx7Ii4vZ3JhcGhsaWIiOjY3LCIuL2xvZGFzaCI6NzAsIi4vdXRpbCI6ODl9XSw2NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qIGdsb2JhbCB3aW5kb3cgKi8KdmFyIGdyYXBobGliO2lmKHR5cGVvZiByZXF1aXJlPT09ImZ1bmN0aW9uIil7dHJ5e2dyYXBobGliPXJlcXVpcmUoImdyYXBobGliIil9Y2F0Y2goZSl7Ci8vIGNvbnRpbnVlIHJlZ2FyZGxlc3Mgb2YgZXJyb3IKfX1pZighZ3JhcGhsaWIpe2dyYXBobGliPXdpbmRvdy5ncmFwaGxpYn1tb2R1bGUuZXhwb3J0cz1ncmFwaGxpYn0se2dyYXBobGliOjkxfV0sNjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7dmFyIEdyYXBoPXJlcXVpcmUoIi4vZ3JhcGhsaWIiKS5HcmFwaDt2YXIgTGlzdD1yZXF1aXJlKCIuL2RhdGEvbGlzdCIpOwovKgogKiBBIGdyZWVkeSBoZXVyaXN0aWMgZm9yIGZpbmRpbmcgYSBmZWVkYmFjayBhcmMgc2V0IGZvciBhIGdyYXBoLiBBIGZlZWRiYWNrCiAqIGFyYyBzZXQgaXMgYSBzZXQgb2YgZWRnZXMgdGhhdCBjYW4gYmUgcmVtb3ZlZCB0byBtYWtlIGEgZ3JhcGggYWN5Y2xpYy4KICogVGhlIGFsZ29yaXRobSBjb21lcyBmcm9tOiBQLiBFYWRlcywgWC4gTGluLCBhbmQgVy4gRi4gU215dGgsICJBIGZhc3QgYW5kCiAqIGVmZmVjdGl2ZSBoZXVyaXN0aWMgZm9yIHRoZSBmZWVkYmFjayBhcmMgc2V0IHByb2JsZW0uIiBUaGlzIGltcGxlbWVudGF0aW9uCiAqIGFkanVzdHMgdGhhdCBmcm9tIHRoZSBwYXBlciB0byBhbGxvdyBmb3Igd2VpZ2h0ZWQgZWRnZXMuCiAqL21vZHVsZS5leHBvcnRzPWdyZWVkeUZBUzt2YXIgREVGQVVMVF9XRUlHSFRfRk49Xy5jb25zdGFudCgxKTtmdW5jdGlvbiBncmVlZHlGQVMoZyx3ZWlnaHRGbil7aWYoZy5ub2RlQ291bnQoKTw9MSl7cmV0dXJuW119dmFyIHN0YXRlPWJ1aWxkU3RhdGUoZyx3ZWlnaHRGbnx8REVGQVVMVF9XRUlHSFRfRk4pO3ZhciByZXN1bHRzPWRvR3JlZWR5RkFTKHN0YXRlLmdyYXBoLHN0YXRlLmJ1Y2tldHMsc3RhdGUuemVyb0lkeCk7Ci8vIEV4cGFuZCBtdWx0aS1lZGdlcwpyZXR1cm4gXy5mbGF0dGVuKF8ubWFwKHJlc3VsdHMsZnVuY3Rpb24oZSl7cmV0dXJuIGcub3V0RWRnZXMoZS52LGUudyl9KSx0cnVlKX1mdW5jdGlvbiBkb0dyZWVkeUZBUyhnLGJ1Y2tldHMsemVyb0lkeCl7dmFyIHJlc3VsdHM9W107dmFyIHNvdXJjZXM9YnVja2V0c1tidWNrZXRzLmxlbmd0aC0xXTt2YXIgc2lua3M9YnVja2V0c1swXTt2YXIgZW50cnk7d2hpbGUoZy5ub2RlQ291bnQoKSl7d2hpbGUoZW50cnk9c2lua3MuZGVxdWV1ZSgpKXtyZW1vdmVOb2RlKGcsYnVja2V0cyx6ZXJvSWR4LGVudHJ5KX13aGlsZShlbnRyeT1zb3VyY2VzLmRlcXVldWUoKSl7cmVtb3ZlTm9kZShnLGJ1Y2tldHMsemVyb0lkeCxlbnRyeSl9aWYoZy5ub2RlQ291bnQoKSl7Zm9yKHZhciBpPWJ1Y2tldHMubGVuZ3RoLTI7aT4wOy0taSl7ZW50cnk9YnVja2V0c1tpXS5kZXF1ZXVlKCk7aWYoZW50cnkpe3Jlc3VsdHM9cmVzdWx0cy5jb25jYXQocmVtb3ZlTm9kZShnLGJ1Y2tldHMsemVyb0lkeCxlbnRyeSx0cnVlKSk7YnJlYWt9fX19cmV0dXJuIHJlc3VsdHN9ZnVuY3Rpb24gcmVtb3ZlTm9kZShnLGJ1Y2tldHMsemVyb0lkeCxlbnRyeSxjb2xsZWN0UHJlZGVjZXNzb3JzKXt2YXIgcmVzdWx0cz1jb2xsZWN0UHJlZGVjZXNzb3JzP1tdOnVuZGVmaW5lZDtfLmZvckVhY2goZy5pbkVkZ2VzKGVudHJ5LnYpLGZ1bmN0aW9uKGVkZ2Upe3ZhciB3ZWlnaHQ9Zy5lZGdlKGVkZ2UpO3ZhciB1RW50cnk9Zy5ub2RlKGVkZ2Uudik7aWYoY29sbGVjdFByZWRlY2Vzc29ycyl7cmVzdWx0cy5wdXNoKHt2OmVkZ2Uudix3OmVkZ2Uud30pfXVFbnRyeS5vdXQtPXdlaWdodDthc3NpZ25CdWNrZXQoYnVja2V0cyx6ZXJvSWR4LHVFbnRyeSl9KTtfLmZvckVhY2goZy5vdXRFZGdlcyhlbnRyeS52KSxmdW5jdGlvbihlZGdlKXt2YXIgd2VpZ2h0PWcuZWRnZShlZGdlKTt2YXIgdz1lZGdlLnc7dmFyIHdFbnRyeT1nLm5vZGUodyk7d0VudHJ5WyJpbiJdLT13ZWlnaHQ7YXNzaWduQnVja2V0KGJ1Y2tldHMsemVyb0lkeCx3RW50cnkpfSk7Zy5yZW1vdmVOb2RlKGVudHJ5LnYpO3JldHVybiByZXN1bHRzfWZ1bmN0aW9uIGJ1aWxkU3RhdGUoZyx3ZWlnaHRGbil7dmFyIGZhc0dyYXBoPW5ldyBHcmFwaDt2YXIgbWF4SW49MDt2YXIgbWF4T3V0PTA7Xy5mb3JFYWNoKGcubm9kZXMoKSxmdW5jdGlvbih2KXtmYXNHcmFwaC5zZXROb2RlKHYse3Y6dixpbjowLG91dDowfSl9KTsKLy8gQWdncmVnYXRlIHdlaWdodHMgb24gbm9kZXMsIGJ1dCBhbHNvIHN1bSB0aGUgd2VpZ2h0cyBhY3Jvc3MgbXVsdGktZWRnZXMKLy8gaW50byBhIHNpbmdsZSBlZGdlIGZvciB0aGUgZmFzR3JhcGguCl8uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZSl7dmFyIHByZXZXZWlnaHQ9ZmFzR3JhcGguZWRnZShlLnYsZS53KXx8MDt2YXIgd2VpZ2h0PXdlaWdodEZuKGUpO3ZhciBlZGdlV2VpZ2h0PXByZXZXZWlnaHQrd2VpZ2h0O2Zhc0dyYXBoLnNldEVkZ2UoZS52LGUudyxlZGdlV2VpZ2h0KTttYXhPdXQ9TWF0aC5tYXgobWF4T3V0LGZhc0dyYXBoLm5vZGUoZS52KS5vdXQrPXdlaWdodCk7bWF4SW49TWF0aC5tYXgobWF4SW4sZmFzR3JhcGgubm9kZShlLncpWyJpbiJdKz13ZWlnaHQpfSk7dmFyIGJ1Y2tldHM9Xy5yYW5nZShtYXhPdXQrbWF4SW4rMykubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBMaXN0fSk7dmFyIHplcm9JZHg9bWF4SW4rMTtfLmZvckVhY2goZmFzR3JhcGgubm9kZXMoKSxmdW5jdGlvbih2KXthc3NpZ25CdWNrZXQoYnVja2V0cyx6ZXJvSWR4LGZhc0dyYXBoLm5vZGUodikpfSk7cmV0dXJue2dyYXBoOmZhc0dyYXBoLGJ1Y2tldHM6YnVja2V0cyx6ZXJvSWR4Onplcm9JZHh9fWZ1bmN0aW9uIGFzc2lnbkJ1Y2tldChidWNrZXRzLHplcm9JZHgsZW50cnkpe2lmKCFlbnRyeS5vdXQpe2J1Y2tldHNbMF0uZW5xdWV1ZShlbnRyeSl9ZWxzZSBpZighZW50cnlbImluIl0pe2J1Y2tldHNbYnVja2V0cy5sZW5ndGgtMV0uZW5xdWV1ZShlbnRyeSl9ZWxzZXtidWNrZXRzW2VudHJ5Lm91dC1lbnRyeVsiaW4iXSt6ZXJvSWR4XS5lbnF1ZXVlKGVudHJ5KX19fSx7Ii4vZGF0YS9saXN0Ijo2NSwiLi9ncmFwaGxpYiI6NjcsIi4vbG9kYXNoIjo3MH1dLDY5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7dmFyIF89cmVxdWlyZSgiLi9sb2Rhc2giKTt2YXIgYWN5Y2xpYz1yZXF1aXJlKCIuL2FjeWNsaWMiKTt2YXIgbm9ybWFsaXplPXJlcXVpcmUoIi4vbm9ybWFsaXplIik7dmFyIHJhbms9cmVxdWlyZSgiLi9yYW5rIik7dmFyIG5vcm1hbGl6ZVJhbmtzPXJlcXVpcmUoIi4vdXRpbCIpLm5vcm1hbGl6ZVJhbmtzO3ZhciBwYXJlbnREdW1teUNoYWlucz1yZXF1aXJlKCIuL3BhcmVudC1kdW1teS1jaGFpbnMiKTt2YXIgcmVtb3ZlRW1wdHlSYW5rcz1yZXF1aXJlKCIuL3V0aWwiKS5yZW1vdmVFbXB0eVJhbmtzO3ZhciBuZXN0aW5nR3JhcGg9cmVxdWlyZSgiLi9uZXN0aW5nLWdyYXBoIik7dmFyIGFkZEJvcmRlclNlZ21lbnRzPXJlcXVpcmUoIi4vYWRkLWJvcmRlci1zZWdtZW50cyIpO3ZhciBjb29yZGluYXRlU3lzdGVtPXJlcXVpcmUoIi4vY29vcmRpbmF0ZS1zeXN0ZW0iKTt2YXIgb3JkZXI9cmVxdWlyZSgiLi9vcmRlciIpO3ZhciBwb3NpdGlvbj1yZXF1aXJlKCIuL3Bvc2l0aW9uIik7dmFyIHV0aWw9cmVxdWlyZSgiLi91dGlsIik7dmFyIEdyYXBoPXJlcXVpcmUoIi4vZ3JhcGhsaWIiKS5HcmFwaDttb2R1bGUuZXhwb3J0cz1sYXlvdXQ7ZnVuY3Rpb24gbGF5b3V0KGcsb3B0cyl7dmFyIHRpbWU9b3B0cyYmb3B0cy5kZWJ1Z1RpbWluZz91dGlsLnRpbWU6dXRpbC5ub3RpbWU7dGltZSgibGF5b3V0IixmdW5jdGlvbigpe3ZhciBsYXlvdXRHcmFwaD10aW1lKCIgIGJ1aWxkTGF5b3V0R3JhcGgiLGZ1bmN0aW9uKCl7cmV0dXJuIGJ1aWxkTGF5b3V0R3JhcGgoZyl9KTt0aW1lKCIgIHJ1bkxheW91dCIsZnVuY3Rpb24oKXtydW5MYXlvdXQobGF5b3V0R3JhcGgsdGltZSl9KTt0aW1lKCIgIHVwZGF0ZUlucHV0R3JhcGgiLGZ1bmN0aW9uKCl7dXBkYXRlSW5wdXRHcmFwaChnLGxheW91dEdyYXBoKX0pfSl9ZnVuY3Rpb24gcnVuTGF5b3V0KGcsdGltZSl7dGltZSgiICAgIG1ha2VTcGFjZUZvckVkZ2VMYWJlbHMiLGZ1bmN0aW9uKCl7bWFrZVNwYWNlRm9yRWRnZUxhYmVscyhnKX0pO3RpbWUoIiAgICByZW1vdmVTZWxmRWRnZXMiLGZ1bmN0aW9uKCl7cmVtb3ZlU2VsZkVkZ2VzKGcpfSk7dGltZSgiICAgIGFjeWNsaWMiLGZ1bmN0aW9uKCl7YWN5Y2xpYy5ydW4oZyl9KTt0aW1lKCIgICAgbmVzdGluZ0dyYXBoLnJ1biIsZnVuY3Rpb24oKXtuZXN0aW5nR3JhcGgucnVuKGcpfSk7dGltZSgiICAgIHJhbmsiLGZ1bmN0aW9uKCl7cmFuayh1dGlsLmFzTm9uQ29tcG91bmRHcmFwaChnKSl9KTt0aW1lKCIgICAgaW5qZWN0RWRnZUxhYmVsUHJveGllcyIsZnVuY3Rpb24oKXtpbmplY3RFZGdlTGFiZWxQcm94aWVzKGcpfSk7dGltZSgiICAgIHJlbW92ZUVtcHR5UmFua3MiLGZ1bmN0aW9uKCl7cmVtb3ZlRW1wdHlSYW5rcyhnKX0pO3RpbWUoIiAgICBuZXN0aW5nR3JhcGguY2xlYW51cCIsZnVuY3Rpb24oKXtuZXN0aW5nR3JhcGguY2xlYW51cChnKX0pO3RpbWUoIiAgICBub3JtYWxpemVSYW5rcyIsZnVuY3Rpb24oKXtub3JtYWxpemVSYW5rcyhnKX0pO3RpbWUoIiAgICBhc3NpZ25SYW5rTWluTWF4IixmdW5jdGlvbigpe2Fzc2lnblJhbmtNaW5NYXgoZyl9KTt0aW1lKCIgICAgcmVtb3ZlRWRnZUxhYmVsUHJveGllcyIsZnVuY3Rpb24oKXtyZW1vdmVFZGdlTGFiZWxQcm94aWVzKGcpfSk7dGltZSgiICAgIG5vcm1hbGl6ZS5ydW4iLGZ1bmN0aW9uKCl7bm9ybWFsaXplLnJ1bihnKX0pO3RpbWUoIiAgICBwYXJlbnREdW1teUNoYWlucyIsZnVuY3Rpb24oKXtwYXJlbnREdW1teUNoYWlucyhnKX0pO3RpbWUoIiAgICBhZGRCb3JkZXJTZWdtZW50cyIsZnVuY3Rpb24oKXthZGRCb3JkZXJTZWdtZW50cyhnKX0pO3RpbWUoIiAgICBvcmRlciIsZnVuY3Rpb24oKXtvcmRlcihnKX0pO3RpbWUoIiAgICBpbnNlcnRTZWxmRWRnZXMiLGZ1bmN0aW9uKCl7aW5zZXJ0U2VsZkVkZ2VzKGcpfSk7dGltZSgiICAgIGFkanVzdENvb3JkaW5hdGVTeXN0ZW0iLGZ1bmN0aW9uKCl7Y29vcmRpbmF0ZVN5c3RlbS5hZGp1c3QoZyl9KTt0aW1lKCIgICAgcG9zaXRpb24iLGZ1bmN0aW9uKCl7cG9zaXRpb24oZyl9KTt0aW1lKCIgICAgcG9zaXRpb25TZWxmRWRnZXMiLGZ1bmN0aW9uKCl7cG9zaXRpb25TZWxmRWRnZXMoZyl9KTt0aW1lKCIgICAgcmVtb3ZlQm9yZGVyTm9kZXMiLGZ1bmN0aW9uKCl7cmVtb3ZlQm9yZGVyTm9kZXMoZyl9KTt0aW1lKCIgICAgbm9ybWFsaXplLnVuZG8iLGZ1bmN0aW9uKCl7bm9ybWFsaXplLnVuZG8oZyl9KTt0aW1lKCIgICAgZml4dXBFZGdlTGFiZWxDb29yZHMiLGZ1bmN0aW9uKCl7Zml4dXBFZGdlTGFiZWxDb29yZHMoZyl9KTt0aW1lKCIgICAgdW5kb0Nvb3JkaW5hdGVTeXN0ZW0iLGZ1bmN0aW9uKCl7Y29vcmRpbmF0ZVN5c3RlbS51bmRvKGcpfSk7dGltZSgiICAgIHRyYW5zbGF0ZUdyYXBoIixmdW5jdGlvbigpe3RyYW5zbGF0ZUdyYXBoKGcpfSk7dGltZSgiICAgIGFzc2lnbk5vZGVJbnRlcnNlY3RzIixmdW5jdGlvbigpe2Fzc2lnbk5vZGVJbnRlcnNlY3RzKGcpfSk7dGltZSgiICAgIHJldmVyc2VQb2ludHMiLGZ1bmN0aW9uKCl7cmV2ZXJzZVBvaW50c0ZvclJldmVyc2VkRWRnZXMoZyl9KTt0aW1lKCIgICAgYWN5Y2xpYy51bmRvIixmdW5jdGlvbigpe2FjeWNsaWMudW5kbyhnKX0pfQovKgogKiBDb3BpZXMgZmluYWwgbGF5b3V0IGluZm9ybWF0aW9uIGZyb20gdGhlIGxheW91dCBncmFwaCBiYWNrIHRvIHRoZSBpbnB1dAogKiBncmFwaC4gVGhpcyBwcm9jZXNzIG9ubHkgY29waWVzIHdoaXRlbGlzdGVkIGF0dHJpYnV0ZXMgZnJvbSB0aGUgbGF5b3V0IGdyYXBoCiAqIHRvIHRoZSBpbnB1dCBncmFwaCwgc28gaXQgc2VydmVzIGFzIGEgZ29vZCBwbGFjZSB0byBkZXRlcm1pbmUgd2hhdAogKiBhdHRyaWJ1dGVzIGNhbiBpbmZsdWVuY2UgbGF5b3V0LgogKi9mdW5jdGlvbiB1cGRhdGVJbnB1dEdyYXBoKGlucHV0R3JhcGgsbGF5b3V0R3JhcGgpe18uZm9yRWFjaChpbnB1dEdyYXBoLm5vZGVzKCksZnVuY3Rpb24odil7dmFyIGlucHV0TGFiZWw9aW5wdXRHcmFwaC5ub2RlKHYpO3ZhciBsYXlvdXRMYWJlbD1sYXlvdXRHcmFwaC5ub2RlKHYpO2lmKGlucHV0TGFiZWwpe2lucHV0TGFiZWwueD1sYXlvdXRMYWJlbC54O2lucHV0TGFiZWwueT1sYXlvdXRMYWJlbC55O2lmKGxheW91dEdyYXBoLmNoaWxkcmVuKHYpLmxlbmd0aCl7aW5wdXRMYWJlbC53aWR0aD1sYXlvdXRMYWJlbC53aWR0aDtpbnB1dExhYmVsLmhlaWdodD1sYXlvdXRMYWJlbC5oZWlnaHR9fX0pO18uZm9yRWFjaChpbnB1dEdyYXBoLmVkZ2VzKCksZnVuY3Rpb24oZSl7dmFyIGlucHV0TGFiZWw9aW5wdXRHcmFwaC5lZGdlKGUpO3ZhciBsYXlvdXRMYWJlbD1sYXlvdXRHcmFwaC5lZGdlKGUpO2lucHV0TGFiZWwucG9pbnRzPWxheW91dExhYmVsLnBvaW50cztpZihfLmhhcyhsYXlvdXRMYWJlbCwieCIpKXtpbnB1dExhYmVsLng9bGF5b3V0TGFiZWwueDtpbnB1dExhYmVsLnk9bGF5b3V0TGFiZWwueX19KTtpbnB1dEdyYXBoLmdyYXBoKCkud2lkdGg9bGF5b3V0R3JhcGguZ3JhcGgoKS53aWR0aDtpbnB1dEdyYXBoLmdyYXBoKCkuaGVpZ2h0PWxheW91dEdyYXBoLmdyYXBoKCkuaGVpZ2h0fXZhciBncmFwaE51bUF0dHJzPVsibm9kZXNlcCIsImVkZ2VzZXAiLCJyYW5rc2VwIiwibWFyZ2lueCIsIm1hcmdpbnkiXTt2YXIgZ3JhcGhEZWZhdWx0cz17cmFua3NlcDo1MCxlZGdlc2VwOjIwLG5vZGVzZXA6NTAscmFua2RpcjoidGIifTt2YXIgZ3JhcGhBdHRycz1bImFjeWNsaWNlciIsInJhbmtlciIsInJhbmtkaXIiLCJhbGlnbiJdO3ZhciBub2RlTnVtQXR0cnM9WyJ3aWR0aCIsImhlaWdodCJdO3ZhciBub2RlRGVmYXVsdHM9e3dpZHRoOjAsaGVpZ2h0OjB9O3ZhciBlZGdlTnVtQXR0cnM9WyJtaW5sZW4iLCJ3ZWlnaHQiLCJ3aWR0aCIsImhlaWdodCIsImxhYmVsb2Zmc2V0Il07dmFyIGVkZ2VEZWZhdWx0cz17bWlubGVuOjEsd2VpZ2h0OjEsd2lkdGg6MCxoZWlnaHQ6MCxsYWJlbG9mZnNldDoxMCxsYWJlbHBvczoiciJ9O3ZhciBlZGdlQXR0cnM9WyJsYWJlbHBvcyJdOwovKgogKiBDb25zdHJ1Y3RzIGEgbmV3IGdyYXBoIGZyb20gdGhlIGlucHV0IGdyYXBoLCB3aGljaCBjYW4gYmUgdXNlZCBmb3IgbGF5b3V0LgogKiBUaGlzIHByb2Nlc3MgY29waWVzIG9ubHkgd2hpdGVsaXN0ZWQgYXR0cmlidXRlcyBmcm9tIHRoZSBpbnB1dCBncmFwaCB0byB0aGUKICogbGF5b3V0IGdyYXBoLiBUaHVzIHRoaXMgZnVuY3Rpb24gc2VydmVzIGFzIGEgZ29vZCBwbGFjZSB0byBkZXRlcm1pbmUgd2hhdAogKiBhdHRyaWJ1dGVzIGNhbiBpbmZsdWVuY2UgbGF5b3V0LgogKi9mdW5jdGlvbiBidWlsZExheW91dEdyYXBoKGlucHV0R3JhcGgpe3ZhciBnPW5ldyBHcmFwaCh7bXVsdGlncmFwaDp0cnVlLGNvbXBvdW5kOnRydWV9KTt2YXIgZ3JhcGg9Y2Fub25pY2FsaXplKGlucHV0R3JhcGguZ3JhcGgoKSk7Zy5zZXRHcmFwaChfLm1lcmdlKHt9LGdyYXBoRGVmYXVsdHMsc2VsZWN0TnVtYmVyQXR0cnMoZ3JhcGgsZ3JhcGhOdW1BdHRycyksXy5waWNrKGdyYXBoLGdyYXBoQXR0cnMpKSk7Xy5mb3JFYWNoKGlucHV0R3JhcGgubm9kZXMoKSxmdW5jdGlvbih2KXt2YXIgbm9kZT1jYW5vbmljYWxpemUoaW5wdXRHcmFwaC5ub2RlKHYpKTtnLnNldE5vZGUodixfLmRlZmF1bHRzKHNlbGVjdE51bWJlckF0dHJzKG5vZGUsbm9kZU51bUF0dHJzKSxub2RlRGVmYXVsdHMpKTtnLnNldFBhcmVudCh2LGlucHV0R3JhcGgucGFyZW50KHYpKX0pO18uZm9yRWFjaChpbnB1dEdyYXBoLmVkZ2VzKCksZnVuY3Rpb24oZSl7dmFyIGVkZ2U9Y2Fub25pY2FsaXplKGlucHV0R3JhcGguZWRnZShlKSk7Zy5zZXRFZGdlKGUsXy5tZXJnZSh7fSxlZGdlRGVmYXVsdHMsc2VsZWN0TnVtYmVyQXR0cnMoZWRnZSxlZGdlTnVtQXR0cnMpLF8ucGljayhlZGdlLGVkZ2VBdHRycykpKX0pO3JldHVybiBnfQovKgogKiBUaGlzIGlkZWEgY29tZXMgZnJvbSB0aGUgR2Fuc25lciBwYXBlcjogdG8gYWNjb3VudCBmb3IgZWRnZSBsYWJlbHMgaW4gb3VyCiAqIGxheW91dCB3ZSBzcGxpdCBlYWNoIHJhbmsgaW4gaGFsZiBieSBkb3VibGluZyBtaW5sZW4gYW5kIGhhbHZpbmcgcmFua3NlcC4KICogVGhlbiB3ZSBjYW4gcGxhY2UgbGFiZWxzIGF0IHRoZXNlIG1pZC1wb2ludHMgYmV0d2VlbiBub2Rlcy4KICoKICogV2UgYWxzbyBhZGQgc29tZSBtaW5pbWFsIHBhZGRpbmcgdG8gdGhlIHdpZHRoIHRvIHB1c2ggdGhlIGxhYmVsIGZvciB0aGUgZWRnZQogKiBhd2F5IGZyb20gdGhlIGVkZ2UgaXRzZWxmIGEgYml0LgogKi9mdW5jdGlvbiBtYWtlU3BhY2VGb3JFZGdlTGFiZWxzKGcpe3ZhciBncmFwaD1nLmdyYXBoKCk7Z3JhcGgucmFua3NlcC89MjtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBlZGdlPWcuZWRnZShlKTtlZGdlLm1pbmxlbio9MjtpZihlZGdlLmxhYmVscG9zLnRvTG93ZXJDYXNlKCkhPT0iYyIpe2lmKGdyYXBoLnJhbmtkaXI9PT0iVEIifHxncmFwaC5yYW5rZGlyPT09IkJUIil7ZWRnZS53aWR0aCs9ZWRnZS5sYWJlbG9mZnNldH1lbHNle2VkZ2UuaGVpZ2h0Kz1lZGdlLmxhYmVsb2Zmc2V0fX19KX0KLyoKICogQ3JlYXRlcyB0ZW1wb3JhcnkgZHVtbXkgbm9kZXMgdGhhdCBjYXB0dXJlIHRoZSByYW5rIGluIHdoaWNoIGVhY2ggZWRnZSdzCiAqIGxhYmVsIGlzIGdvaW5nIHRvLCBpZiBpdCBoYXMgb25lIG9mIG5vbi16ZXJvIHdpZHRoIGFuZCBoZWlnaHQuIFdlIGRvIHRoaXMKICogc28gdGhhdCB3ZSBjYW4gc2FmZWx5IHJlbW92ZSBlbXB0eSByYW5rcyB3aGlsZSBwcmVzZXJ2aW5nIGJhbGFuY2UgZm9yIHRoZQogKiBsYWJlbCdzIHBvc2l0aW9uLgogKi9mdW5jdGlvbiBpbmplY3RFZGdlTGFiZWxQcm94aWVzKGcpe18uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZSl7dmFyIGVkZ2U9Zy5lZGdlKGUpO2lmKGVkZ2Uud2lkdGgmJmVkZ2UuaGVpZ2h0KXt2YXIgdj1nLm5vZGUoZS52KTt2YXIgdz1nLm5vZGUoZS53KTt2YXIgbGFiZWw9e3Jhbms6KHcucmFuay12LnJhbmspLzIrdi5yYW5rLGU6ZX07dXRpbC5hZGREdW1teU5vZGUoZywiZWRnZS1wcm94eSIsbGFiZWwsIl9lcCIpfX0pfWZ1bmN0aW9uIGFzc2lnblJhbmtNaW5NYXgoZyl7dmFyIG1heFJhbms9MDtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTtpZihub2RlLmJvcmRlclRvcCl7bm9kZS5taW5SYW5rPWcubm9kZShub2RlLmJvcmRlclRvcCkucmFuaztub2RlLm1heFJhbms9Zy5ub2RlKG5vZGUuYm9yZGVyQm90dG9tKS5yYW5rO21heFJhbms9Xy5tYXgobWF4UmFuayxub2RlLm1heFJhbmspfX0pO2cuZ3JhcGgoKS5tYXhSYW5rPW1heFJhbmt9ZnVuY3Rpb24gcmVtb3ZlRWRnZUxhYmVsUHJveGllcyhnKXtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTtpZihub2RlLmR1bW15PT09ImVkZ2UtcHJveHkiKXtnLmVkZ2Uobm9kZS5lKS5sYWJlbFJhbms9bm9kZS5yYW5rO2cucmVtb3ZlTm9kZSh2KX19KX1mdW5jdGlvbiB0cmFuc2xhdGVHcmFwaChnKXt2YXIgbWluWD1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7dmFyIG1heFg9MDt2YXIgbWluWT1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7dmFyIG1heFk9MDt2YXIgZ3JhcGhMYWJlbD1nLmdyYXBoKCk7dmFyIG1hcmdpblg9Z3JhcGhMYWJlbC5tYXJnaW54fHwwO3ZhciBtYXJnaW5ZPWdyYXBoTGFiZWwubWFyZ2lueXx8MDtmdW5jdGlvbiBnZXRFeHRyZW1lcyhhdHRycyl7dmFyIHg9YXR0cnMueDt2YXIgeT1hdHRycy55O3ZhciB3PWF0dHJzLndpZHRoO3ZhciBoPWF0dHJzLmhlaWdodDttaW5YPU1hdGgubWluKG1pblgseC13LzIpO21heFg9TWF0aC5tYXgobWF4WCx4K3cvMik7bWluWT1NYXRoLm1pbihtaW5ZLHktaC8yKTttYXhZPU1hdGgubWF4KG1heFkseStoLzIpfV8uZm9yRWFjaChnLm5vZGVzKCksZnVuY3Rpb24odil7Z2V0RXh0cmVtZXMoZy5ub2RlKHYpKX0pO18uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZSl7dmFyIGVkZ2U9Zy5lZGdlKGUpO2lmKF8uaGFzKGVkZ2UsIngiKSl7Z2V0RXh0cmVtZXMoZWRnZSl9fSk7bWluWC09bWFyZ2luWDttaW5ZLT1tYXJnaW5ZO18uZm9yRWFjaChnLm5vZGVzKCksZnVuY3Rpb24odil7dmFyIG5vZGU9Zy5ub2RlKHYpO25vZGUueC09bWluWDtub2RlLnktPW1pbll9KTtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBlZGdlPWcuZWRnZShlKTtfLmZvckVhY2goZWRnZS5wb2ludHMsZnVuY3Rpb24ocCl7cC54LT1taW5YO3AueS09bWluWX0pO2lmKF8uaGFzKGVkZ2UsIngiKSl7ZWRnZS54LT1taW5YfWlmKF8uaGFzKGVkZ2UsInkiKSl7ZWRnZS55LT1taW5ZfX0pO2dyYXBoTGFiZWwud2lkdGg9bWF4WC1taW5YK21hcmdpblg7Z3JhcGhMYWJlbC5oZWlnaHQ9bWF4WS1taW5ZK21hcmdpbll9ZnVuY3Rpb24gYXNzaWduTm9kZUludGVyc2VjdHMoZyl7Xy5mb3JFYWNoKGcuZWRnZXMoKSxmdW5jdGlvbihlKXt2YXIgZWRnZT1nLmVkZ2UoZSk7dmFyIG5vZGVWPWcubm9kZShlLnYpO3ZhciBub2RlVz1nLm5vZGUoZS53KTt2YXIgcDEscDI7aWYoIWVkZ2UucG9pbnRzKXtlZGdlLnBvaW50cz1bXTtwMT1ub2RlVztwMj1ub2RlVn1lbHNle3AxPWVkZ2UucG9pbnRzWzBdO3AyPWVkZ2UucG9pbnRzW2VkZ2UucG9pbnRzLmxlbmd0aC0xXX1lZGdlLnBvaW50cy51bnNoaWZ0KHV0aWwuaW50ZXJzZWN0UmVjdChub2RlVixwMSkpO2VkZ2UucG9pbnRzLnB1c2godXRpbC5pbnRlcnNlY3RSZWN0KG5vZGVXLHAyKSl9KX1mdW5jdGlvbiBmaXh1cEVkZ2VMYWJlbENvb3JkcyhnKXtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBlZGdlPWcuZWRnZShlKTtpZihfLmhhcyhlZGdlLCJ4Iikpe2lmKGVkZ2UubGFiZWxwb3M9PT0ibCJ8fGVkZ2UubGFiZWxwb3M9PT0iciIpe2VkZ2Uud2lkdGgtPWVkZ2UubGFiZWxvZmZzZXR9c3dpdGNoKGVkZ2UubGFiZWxwb3Mpe2Nhc2UibCI6ZWRnZS54LT1lZGdlLndpZHRoLzIrZWRnZS5sYWJlbG9mZnNldDticmVhaztjYXNlInIiOmVkZ2UueCs9ZWRnZS53aWR0aC8yK2VkZ2UubGFiZWxvZmZzZXQ7YnJlYWt9fX0pfWZ1bmN0aW9uIHJldmVyc2VQb2ludHNGb3JSZXZlcnNlZEVkZ2VzKGcpe18uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZSl7dmFyIGVkZ2U9Zy5lZGdlKGUpO2lmKGVkZ2UucmV2ZXJzZWQpe2VkZ2UucG9pbnRzLnJldmVyc2UoKX19KX1mdW5jdGlvbiByZW1vdmVCb3JkZXJOb2RlcyhnKXtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe2lmKGcuY2hpbGRyZW4odikubGVuZ3RoKXt2YXIgbm9kZT1nLm5vZGUodik7dmFyIHQ9Zy5ub2RlKG5vZGUuYm9yZGVyVG9wKTt2YXIgYj1nLm5vZGUobm9kZS5ib3JkZXJCb3R0b20pO3ZhciBsPWcubm9kZShfLmxhc3Qobm9kZS5ib3JkZXJMZWZ0KSk7dmFyIHI9Zy5ub2RlKF8ubGFzdChub2RlLmJvcmRlclJpZ2h0KSk7bm9kZS53aWR0aD1NYXRoLmFicyhyLngtbC54KTtub2RlLmhlaWdodD1NYXRoLmFicyhiLnktdC55KTtub2RlLng9bC54K25vZGUud2lkdGgvMjtub2RlLnk9dC55K25vZGUuaGVpZ2h0LzJ9fSk7Xy5mb3JFYWNoKGcubm9kZXMoKSxmdW5jdGlvbih2KXtpZihnLm5vZGUodikuZHVtbXk9PT0iYm9yZGVyIil7Zy5yZW1vdmVOb2RlKHYpfX0pfWZ1bmN0aW9uIHJlbW92ZVNlbGZFZGdlcyhnKXtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe2lmKGUudj09PWUudyl7dmFyIG5vZGU9Zy5ub2RlKGUudik7aWYoIW5vZGUuc2VsZkVkZ2VzKXtub2RlLnNlbGZFZGdlcz1bXX1ub2RlLnNlbGZFZGdlcy5wdXNoKHtlOmUsbGFiZWw6Zy5lZGdlKGUpfSk7Zy5yZW1vdmVFZGdlKGUpfX0pfWZ1bmN0aW9uIGluc2VydFNlbGZFZGdlcyhnKXt2YXIgbGF5ZXJzPXV0aWwuYnVpbGRMYXllck1hdHJpeChnKTtfLmZvckVhY2gobGF5ZXJzLGZ1bmN0aW9uKGxheWVyKXt2YXIgb3JkZXJTaGlmdD0wO18uZm9yRWFjaChsYXllcixmdW5jdGlvbih2LGkpe3ZhciBub2RlPWcubm9kZSh2KTtub2RlLm9yZGVyPWkrb3JkZXJTaGlmdDtfLmZvckVhY2gobm9kZS5zZWxmRWRnZXMsZnVuY3Rpb24oc2VsZkVkZ2Upe3V0aWwuYWRkRHVtbXlOb2RlKGcsInNlbGZlZGdlIix7d2lkdGg6c2VsZkVkZ2UubGFiZWwud2lkdGgsaGVpZ2h0OnNlbGZFZGdlLmxhYmVsLmhlaWdodCxyYW5rOm5vZGUucmFuayxvcmRlcjppKyArK29yZGVyU2hpZnQsZTpzZWxmRWRnZS5lLGxhYmVsOnNlbGZFZGdlLmxhYmVsfSwiX3NlIil9KTtkZWxldGUgbm9kZS5zZWxmRWRnZXN9KX0pfWZ1bmN0aW9uIHBvc2l0aW9uU2VsZkVkZ2VzKGcpe18uZm9yRWFjaChnLm5vZGVzKCksZnVuY3Rpb24odil7dmFyIG5vZGU9Zy5ub2RlKHYpO2lmKG5vZGUuZHVtbXk9PT0ic2VsZmVkZ2UiKXt2YXIgc2VsZk5vZGU9Zy5ub2RlKG5vZGUuZS52KTt2YXIgeD1zZWxmTm9kZS54K3NlbGZOb2RlLndpZHRoLzI7dmFyIHk9c2VsZk5vZGUueTt2YXIgZHg9bm9kZS54LXg7dmFyIGR5PXNlbGZOb2RlLmhlaWdodC8yO2cuc2V0RWRnZShub2RlLmUsbm9kZS5sYWJlbCk7Zy5yZW1vdmVOb2RlKHYpO25vZGUubGFiZWwucG9pbnRzPVt7eDp4KzIqZHgvMyx5OnktZHl9LHt4OngrNSpkeC82LHk6eS1keX0se3g6eCtkeCx5Onl9LHt4OngrNSpkeC82LHk6eStkeX0se3g6eCsyKmR4LzMseTp5K2R5fV07bm9kZS5sYWJlbC54PW5vZGUueDtub2RlLmxhYmVsLnk9bm9kZS55fX0pfWZ1bmN0aW9uIHNlbGVjdE51bWJlckF0dHJzKG9iaixhdHRycyl7cmV0dXJuIF8ubWFwVmFsdWVzKF8ucGljayhvYmosYXR0cnMpLE51bWJlcil9ZnVuY3Rpb24gY2Fub25pY2FsaXplKGF0dHJzKXt2YXIgbmV3QXR0cnM9e307Xy5mb3JFYWNoKGF0dHJzLGZ1bmN0aW9uKHYsayl7bmV3QXR0cnNbay50b0xvd2VyQ2FzZSgpXT12fSk7cmV0dXJuIG5ld0F0dHJzfX0seyIuL2FjeWNsaWMiOjYyLCIuL2FkZC1ib3JkZXItc2VnbWVudHMiOjYzLCIuL2Nvb3JkaW5hdGUtc3lzdGVtIjo2NCwiLi9ncmFwaGxpYiI6NjcsIi4vbG9kYXNoIjo3MCwiLi9uZXN0aW5nLWdyYXBoIjo3MSwiLi9ub3JtYWxpemUiOjcyLCIuL29yZGVyIjo3NywiLi9wYXJlbnQtZHVtbXktY2hhaW5zIjo4MiwiLi9wb3NpdGlvbiI6ODQsIi4vcmFuayI6ODYsIi4vdXRpbCI6ODl9XSw3MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qIGdsb2JhbCB3aW5kb3cgKi8KdmFyIGxvZGFzaDtpZih0eXBlb2YgcmVxdWlyZT09PSJmdW5jdGlvbiIpe3RyeXtsb2Rhc2g9e2Nsb25lRGVlcDpyZXF1aXJlKCJsb2Rhc2gvY2xvbmVEZWVwIiksY29uc3RhbnQ6cmVxdWlyZSgibG9kYXNoL2NvbnN0YW50IiksZGVmYXVsdHM6cmVxdWlyZSgibG9kYXNoL2RlZmF1bHRzIiksZWFjaDpyZXF1aXJlKCJsb2Rhc2gvZWFjaCIpLGZpbHRlcjpyZXF1aXJlKCJsb2Rhc2gvZmlsdGVyIiksZmluZDpyZXF1aXJlKCJsb2Rhc2gvZmluZCIpLGZsYXR0ZW46cmVxdWlyZSgibG9kYXNoL2ZsYXR0ZW4iKSxmb3JFYWNoOnJlcXVpcmUoImxvZGFzaC9mb3JFYWNoIiksZm9ySW46cmVxdWlyZSgibG9kYXNoL2ZvckluIiksaGFzOnJlcXVpcmUoImxvZGFzaC9oYXMiKSxpc1VuZGVmaW5lZDpyZXF1aXJlKCJsb2Rhc2gvaXNVbmRlZmluZWQiKSxsYXN0OnJlcXVpcmUoImxvZGFzaC9sYXN0IiksbWFwOnJlcXVpcmUoImxvZGFzaC9tYXAiKSxtYXBWYWx1ZXM6cmVxdWlyZSgibG9kYXNoL21hcFZhbHVlcyIpLG1heDpyZXF1aXJlKCJsb2Rhc2gvbWF4IiksbWVyZ2U6cmVxdWlyZSgibG9kYXNoL21lcmdlIiksbWluOnJlcXVpcmUoImxvZGFzaC9taW4iKSxtaW5CeTpyZXF1aXJlKCJsb2Rhc2gvbWluQnkiKSxub3c6cmVxdWlyZSgibG9kYXNoL25vdyIpLHBpY2s6cmVxdWlyZSgibG9kYXNoL3BpY2siKSxyYW5nZTpyZXF1aXJlKCJsb2Rhc2gvcmFuZ2UiKSxyZWR1Y2U6cmVxdWlyZSgibG9kYXNoL3JlZHVjZSIpLHNvcnRCeTpyZXF1aXJlKCJsb2Rhc2gvc29ydEJ5IiksdW5pcXVlSWQ6cmVxdWlyZSgibG9kYXNoL3VuaXF1ZUlkIiksdmFsdWVzOnJlcXVpcmUoImxvZGFzaC92YWx1ZXMiKSx6aXBPYmplY3Q6cmVxdWlyZSgibG9kYXNoL3ppcE9iamVjdCIpfX1jYXRjaChlKXsKLy8gY29udGludWUgcmVnYXJkbGVzcyBvZiBlcnJvcgp9fWlmKCFsb2Rhc2gpe2xvZGFzaD13aW5kb3cuX31tb2R1bGUuZXhwb3J0cz1sb2Rhc2h9LHsibG9kYXNoL2Nsb25lRGVlcCI6Mjg3LCJsb2Rhc2gvY29uc3RhbnQiOjI4OCwibG9kYXNoL2RlZmF1bHRzIjoyODksImxvZGFzaC9lYWNoIjoyOTAsImxvZGFzaC9maWx0ZXIiOjI5MiwibG9kYXNoL2ZpbmQiOjI5MywibG9kYXNoL2ZsYXR0ZW4iOjI5NSwibG9kYXNoL2ZvckVhY2giOjI5NiwibG9kYXNoL2ZvckluIjoyOTcsImxvZGFzaC9oYXMiOjI5OSwibG9kYXNoL2lzVW5kZWZpbmVkIjozMTgsImxvZGFzaC9sYXN0IjozMjEsImxvZGFzaC9tYXAiOjMyMiwibG9kYXNoL21hcFZhbHVlcyI6MzIzLCJsb2Rhc2gvbWF4IjozMjQsImxvZGFzaC9tZXJnZSI6MzI2LCJsb2Rhc2gvbWluIjozMjcsImxvZGFzaC9taW5CeSI6MzI4LCJsb2Rhc2gvbm93IjozMzAsImxvZGFzaC9waWNrIjozMzEsImxvZGFzaC9yYW5nZSI6MzMzLCJsb2Rhc2gvcmVkdWNlIjozMzQsImxvZGFzaC9zb3J0QnkiOjMzNiwibG9kYXNoL3VuaXF1ZUlkIjozNDYsImxvZGFzaC92YWx1ZXMiOjM0NywibG9kYXNoL3ppcE9iamVjdCI6MzQ4fV0sNzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7dmFyIHV0aWw9cmVxdWlyZSgiLi91dGlsIik7bW9kdWxlLmV4cG9ydHM9e3J1bjpydW4sY2xlYW51cDpjbGVhbnVwfTsKLyoKICogQSBuZXN0aW5nIGdyYXBoIGNyZWF0ZXMgZHVtbXkgbm9kZXMgZm9yIHRoZSB0b3BzIGFuZCBib3R0b21zIG9mIHN1YmdyYXBocywKICogYWRkcyBhcHByb3ByaWF0ZSBlZGdlcyB0byBlbnN1cmUgdGhhdCBhbGwgY2x1c3RlciBub2RlcyBhcmUgcGxhY2VkIGJldHdlZW4KICogdGhlc2UgYm91bmRyaWVzLCBhbmQgZW5zdXJlcyB0aGF0IHRoZSBncmFwaCBpcyBjb25uZWN0ZWQuCiAqCiAqIEluIGFkZGl0aW9uIHdlIGVuc3VyZSwgdGhyb3VnaCB0aGUgdXNlIG9mIHRoZSBtaW5sZW4gcHJvcGVydHksIHRoYXQgbm9kZXMKICogYW5kIHN1YmdyYXBoIGJvcmRlciBub2RlcyB0byBub3QgZW5kIHVwIG9uIHRoZSBzYW1lIHJhbmsuCiAqCiAqIFByZWNvbmRpdGlvbnM6CiAqCiAqICAgIDEuIElucHV0IGdyYXBoIGlzIGEgREFHCiAqICAgIDIuIE5vZGVzIGluIHRoZSBpbnB1dCBncmFwaCBoYXMgYSBtaW5sZW4gYXR0cmlidXRlCiAqCiAqIFBvc3Rjb25kaXRpb25zOgogKgogKiAgICAxLiBJbnB1dCBncmFwaCBpcyBjb25uZWN0ZWQuCiAqICAgIDIuIER1bW15IG5vZGVzIGFyZSBhZGRlZCBmb3IgdGhlIHRvcHMgYW5kIGJvdHRvbXMgb2Ygc3ViZ3JhcGhzLgogKiAgICAzLiBUaGUgbWlubGVuIGF0dHJpYnV0ZSBmb3Igbm9kZXMgaXMgYWRqdXN0ZWQgdG8gZW5zdXJlIG5vZGVzIGRvIG5vdAogKiAgICAgICBnZXQgcGxhY2VkIG9uIHRoZSBzYW1lIHJhbmsgYXMgc3ViZ3JhcGggYm9yZGVyIG5vZGVzLgogKgogKiBUaGUgbmVzdGluZyBncmFwaCBpZGVhIGNvbWVzIGZyb20gU2FuZGVyLCAiTGF5b3V0IG9mIENvbXBvdW5kIERpcmVjdGVkCiAqIEdyYXBocy4iCiAqL2Z1bmN0aW9uIHJ1bihnKXt2YXIgcm9vdD11dGlsLmFkZER1bW15Tm9kZShnLCJyb290Iix7fSwiX3Jvb3QiKTt2YXIgZGVwdGhzPXRyZWVEZXB0aHMoZyk7dmFyIGhlaWdodD1fLm1heChfLnZhbHVlcyhkZXB0aHMpKS0xOy8vIE5vdGU6IGRlcHRocyBpcyBhbiBPYmplY3Qgbm90IGFuIGFycmF5CnZhciBub2RlU2VwPTIqaGVpZ2h0KzE7Zy5ncmFwaCgpLm5lc3RpbmdSb290PXJvb3Q7Ci8vIE11bHRpcGx5IG1pbmxlbiBieSBub2RlU2VwIHRvIGFsaWduIG5vZGVzIG9uIG5vbi1ib3JkZXIgcmFua3MuCl8uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZSl7Zy5lZGdlKGUpLm1pbmxlbio9bm9kZVNlcH0pOwovLyBDYWxjdWxhdGUgYSB3ZWlnaHQgdGhhdCBpcyBzdWZmaWNpZW50IHRvIGtlZXAgc3ViZ3JhcGhzIHZlcnRpY2FsbHkgY29tcGFjdAp2YXIgd2VpZ2h0PXN1bVdlaWdodHMoZykrMTsKLy8gQ3JlYXRlIGJvcmRlciBub2RlcyBhbmQgbGluayB0aGVtIHVwCl8uZm9yRWFjaChnLmNoaWxkcmVuKCksZnVuY3Rpb24oY2hpbGQpe2RmcyhnLHJvb3Qsbm9kZVNlcCx3ZWlnaHQsaGVpZ2h0LGRlcHRocyxjaGlsZCl9KTsKLy8gU2F2ZSB0aGUgbXVsdGlwbGllciBmb3Igbm9kZSBsYXllcnMgZm9yIGxhdGVyIHJlbW92YWwgb2YgZW1wdHkgYm9yZGVyCi8vIGxheWVycy4KZy5ncmFwaCgpLm5vZGVSYW5rRmFjdG9yPW5vZGVTZXB9ZnVuY3Rpb24gZGZzKGcscm9vdCxub2RlU2VwLHdlaWdodCxoZWlnaHQsZGVwdGhzLHYpe3ZhciBjaGlsZHJlbj1nLmNoaWxkcmVuKHYpO2lmKCFjaGlsZHJlbi5sZW5ndGgpe2lmKHYhPT1yb290KXtnLnNldEVkZ2Uocm9vdCx2LHt3ZWlnaHQ6MCxtaW5sZW46bm9kZVNlcH0pfXJldHVybn12YXIgdG9wPXV0aWwuYWRkQm9yZGVyTm9kZShnLCJfYnQiKTt2YXIgYm90dG9tPXV0aWwuYWRkQm9yZGVyTm9kZShnLCJfYmIiKTt2YXIgbGFiZWw9Zy5ub2RlKHYpO2cuc2V0UGFyZW50KHRvcCx2KTtsYWJlbC5ib3JkZXJUb3A9dG9wO2cuc2V0UGFyZW50KGJvdHRvbSx2KTtsYWJlbC5ib3JkZXJCb3R0b209Ym90dG9tO18uZm9yRWFjaChjaGlsZHJlbixmdW5jdGlvbihjaGlsZCl7ZGZzKGcscm9vdCxub2RlU2VwLHdlaWdodCxoZWlnaHQsZGVwdGhzLGNoaWxkKTt2YXIgY2hpbGROb2RlPWcubm9kZShjaGlsZCk7dmFyIGNoaWxkVG9wPWNoaWxkTm9kZS5ib3JkZXJUb3A/Y2hpbGROb2RlLmJvcmRlclRvcDpjaGlsZDt2YXIgY2hpbGRCb3R0b209Y2hpbGROb2RlLmJvcmRlckJvdHRvbT9jaGlsZE5vZGUuYm9yZGVyQm90dG9tOmNoaWxkO3ZhciB0aGlzV2VpZ2h0PWNoaWxkTm9kZS5ib3JkZXJUb3A/d2VpZ2h0OjIqd2VpZ2h0O3ZhciBtaW5sZW49Y2hpbGRUb3AhPT1jaGlsZEJvdHRvbT8xOmhlaWdodC1kZXB0aHNbdl0rMTtnLnNldEVkZ2UodG9wLGNoaWxkVG9wLHt3ZWlnaHQ6dGhpc1dlaWdodCxtaW5sZW46bWlubGVuLG5lc3RpbmdFZGdlOnRydWV9KTtnLnNldEVkZ2UoY2hpbGRCb3R0b20sYm90dG9tLHt3ZWlnaHQ6dGhpc1dlaWdodCxtaW5sZW46bWlubGVuLG5lc3RpbmdFZGdlOnRydWV9KX0pO2lmKCFnLnBhcmVudCh2KSl7Zy5zZXRFZGdlKHJvb3QsdG9wLHt3ZWlnaHQ6MCxtaW5sZW46aGVpZ2h0K2RlcHRoc1t2XX0pfX1mdW5jdGlvbiB0cmVlRGVwdGhzKGcpe3ZhciBkZXB0aHM9e307ZnVuY3Rpb24gZGZzKHYsZGVwdGgpe3ZhciBjaGlsZHJlbj1nLmNoaWxkcmVuKHYpO2lmKGNoaWxkcmVuJiZjaGlsZHJlbi5sZW5ndGgpe18uZm9yRWFjaChjaGlsZHJlbixmdW5jdGlvbihjaGlsZCl7ZGZzKGNoaWxkLGRlcHRoKzEpfSl9ZGVwdGhzW3ZdPWRlcHRofV8uZm9yRWFjaChnLmNoaWxkcmVuKCksZnVuY3Rpb24odil7ZGZzKHYsMSl9KTtyZXR1cm4gZGVwdGhzfWZ1bmN0aW9uIHN1bVdlaWdodHMoZyl7cmV0dXJuIF8ucmVkdWNlKGcuZWRnZXMoKSxmdW5jdGlvbihhY2MsZSl7cmV0dXJuIGFjYytnLmVkZ2UoZSkud2VpZ2h0fSwwKX1mdW5jdGlvbiBjbGVhbnVwKGcpe3ZhciBncmFwaExhYmVsPWcuZ3JhcGgoKTtnLnJlbW92ZU5vZGUoZ3JhcGhMYWJlbC5uZXN0aW5nUm9vdCk7ZGVsZXRlIGdyYXBoTGFiZWwubmVzdGluZ1Jvb3Q7Xy5mb3JFYWNoKGcuZWRnZXMoKSxmdW5jdGlvbihlKXt2YXIgZWRnZT1nLmVkZ2UoZSk7aWYoZWRnZS5uZXN0aW5nRWRnZSl7Zy5yZW1vdmVFZGdlKGUpfX0pfX0seyIuL2xvZGFzaCI6NzAsIi4vdXRpbCI6ODl9XSw3MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7dmFyIHV0aWw9cmVxdWlyZSgiLi91dGlsIik7bW9kdWxlLmV4cG9ydHM9e3J1bjpydW4sdW5kbzp1bmRvfTsKLyoKICogQnJlYWtzIGFueSBsb25nIGVkZ2VzIGluIHRoZSBncmFwaCBpbnRvIHNob3J0IHNlZ21lbnRzIHRoYXQgc3BhbiAxIGxheWVyCiAqIGVhY2guIFRoaXMgb3BlcmF0aW9uIGlzIHVuZG9hYmxlIHdpdGggdGhlIGRlbm9ybWFsaXplIGZ1bmN0aW9uLgogKgogKiBQcmUtY29uZGl0aW9uczoKICoKICogICAgMS4gVGhlIGlucHV0IGdyYXBoIGlzIGEgREFHLgogKiAgICAyLiBFYWNoIG5vZGUgaW4gdGhlIGdyYXBoIGhhcyBhICJyYW5rIiBwcm9wZXJ0eS4KICoKICogUG9zdC1jb25kaXRpb246CiAqCiAqICAgIDEuIEFsbCBlZGdlcyBpbiB0aGUgZ3JhcGggaGF2ZSBhIGxlbmd0aCBvZiAxLgogKiAgICAyLiBEdW1teSBub2RlcyBhcmUgYWRkZWQgd2hlcmUgZWRnZXMgaGF2ZSBiZWVuIHNwbGl0IGludG8gc2VnbWVudHMuCiAqICAgIDMuIFRoZSBncmFwaCBpcyBhdWdtZW50ZWQgd2l0aCBhICJkdW1teUNoYWlucyIgYXR0cmlidXRlIHdoaWNoIGNvbnRhaW5zCiAqICAgICAgIHRoZSBmaXJzdCBkdW1teSBpbiBlYWNoIGNoYWluIG9mIGR1bW15IG5vZGVzIHByb2R1Y2VkLgogKi9mdW5jdGlvbiBydW4oZyl7Zy5ncmFwaCgpLmR1bW15Q2hhaW5zPVtdO18uZm9yRWFjaChnLmVkZ2VzKCksZnVuY3Rpb24oZWRnZSl7bm9ybWFsaXplRWRnZShnLGVkZ2UpfSl9ZnVuY3Rpb24gbm9ybWFsaXplRWRnZShnLGUpe3ZhciB2PWUudjt2YXIgdlJhbms9Zy5ub2RlKHYpLnJhbms7dmFyIHc9ZS53O3ZhciB3UmFuaz1nLm5vZGUodykucmFuazt2YXIgbmFtZT1lLm5hbWU7dmFyIGVkZ2VMYWJlbD1nLmVkZ2UoZSk7dmFyIGxhYmVsUmFuaz1lZGdlTGFiZWwubGFiZWxSYW5rO2lmKHdSYW5rPT09dlJhbmsrMSlyZXR1cm47Zy5yZW1vdmVFZGdlKGUpO3ZhciBkdW1teSxhdHRycyxpO2ZvcihpPTAsKyt2UmFuazt2UmFuazx3UmFuazsrK2ksKyt2UmFuayl7ZWRnZUxhYmVsLnBvaW50cz1bXTthdHRycz17d2lkdGg6MCxoZWlnaHQ6MCxlZGdlTGFiZWw6ZWRnZUxhYmVsLGVkZ2VPYmo6ZSxyYW5rOnZSYW5rfTtkdW1teT11dGlsLmFkZER1bW15Tm9kZShnLCJlZGdlIixhdHRycywiX2QiKTtpZih2UmFuaz09PWxhYmVsUmFuayl7YXR0cnMud2lkdGg9ZWRnZUxhYmVsLndpZHRoO2F0dHJzLmhlaWdodD1lZGdlTGFiZWwuaGVpZ2h0O2F0dHJzLmR1bW15PSJlZGdlLWxhYmVsIjthdHRycy5sYWJlbHBvcz1lZGdlTGFiZWwubGFiZWxwb3N9Zy5zZXRFZGdlKHYsZHVtbXkse3dlaWdodDplZGdlTGFiZWwud2VpZ2h0fSxuYW1lKTtpZihpPT09MCl7Zy5ncmFwaCgpLmR1bW15Q2hhaW5zLnB1c2goZHVtbXkpfXY9ZHVtbXl9Zy5zZXRFZGdlKHYsdyx7d2VpZ2h0OmVkZ2VMYWJlbC53ZWlnaHR9LG5hbWUpfWZ1bmN0aW9uIHVuZG8oZyl7Xy5mb3JFYWNoKGcuZ3JhcGgoKS5kdW1teUNoYWlucyxmdW5jdGlvbih2KXt2YXIgbm9kZT1nLm5vZGUodik7dmFyIG9yaWdMYWJlbD1ub2RlLmVkZ2VMYWJlbDt2YXIgdztnLnNldEVkZ2Uobm9kZS5lZGdlT2JqLG9yaWdMYWJlbCk7d2hpbGUobm9kZS5kdW1teSl7dz1nLnN1Y2Nlc3NvcnModilbMF07Zy5yZW1vdmVOb2RlKHYpO29yaWdMYWJlbC5wb2ludHMucHVzaCh7eDpub2RlLngseTpub2RlLnl9KTtpZihub2RlLmR1bW15PT09ImVkZ2UtbGFiZWwiKXtvcmlnTGFiZWwueD1ub2RlLng7b3JpZ0xhYmVsLnk9bm9kZS55O29yaWdMYWJlbC53aWR0aD1ub2RlLndpZHRoO29yaWdMYWJlbC5oZWlnaHQ9bm9kZS5oZWlnaHR9dj13O25vZGU9Zy5ub2RlKHYpfX0pfX0seyIuL2xvZGFzaCI6NzAsIi4vdXRpbCI6ODl9XSw3MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9YWRkU3ViZ3JhcGhDb25zdHJhaW50cztmdW5jdGlvbiBhZGRTdWJncmFwaENvbnN0cmFpbnRzKGcsY2csdnMpe3ZhciBwcmV2PXt9LHJvb3RQcmV2O18uZm9yRWFjaCh2cyxmdW5jdGlvbih2KXt2YXIgY2hpbGQ9Zy5wYXJlbnQodikscGFyZW50LHByZXZDaGlsZDt3aGlsZShjaGlsZCl7cGFyZW50PWcucGFyZW50KGNoaWxkKTtpZihwYXJlbnQpe3ByZXZDaGlsZD1wcmV2W3BhcmVudF07cHJldltwYXJlbnRdPWNoaWxkfWVsc2V7cHJldkNoaWxkPXJvb3RQcmV2O3Jvb3RQcmV2PWNoaWxkfWlmKHByZXZDaGlsZCYmcHJldkNoaWxkIT09Y2hpbGQpe2NnLnNldEVkZ2UocHJldkNoaWxkLGNoaWxkKTtyZXR1cm59Y2hpbGQ9cGFyZW50fX0pOwovKgogIGZ1bmN0aW9uIGRmcyh2KSB7CiAgICB2YXIgY2hpbGRyZW4gPSB2ID8gZy5jaGlsZHJlbih2KSA6IGcuY2hpbGRyZW4oKTsKICAgIGlmIChjaGlsZHJlbi5sZW5ndGgpIHsKICAgICAgdmFyIG1pbiA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWSwKICAgICAgICAgIHN1YmdyYXBocyA9IFtdOwogICAgICBfLmVhY2goY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7CiAgICAgICAgdmFyIGNoaWxkTWluID0gZGZzKGNoaWxkKTsKICAgICAgICBpZiAoZy5jaGlsZHJlbihjaGlsZCkubGVuZ3RoKSB7CiAgICAgICAgICBzdWJncmFwaHMucHVzaCh7IHY6IGNoaWxkLCBvcmRlcjogY2hpbGRNaW4gfSk7CiAgICAgICAgfQogICAgICAgIG1pbiA9IE1hdGgubWluKG1pbiwgY2hpbGRNaW4pOwogICAgICB9KTsKICAgICAgXy5yZWR1Y2UoXy5zb3J0Qnkoc3ViZ3JhcGhzLCAib3JkZXIiKSwgZnVuY3Rpb24ocHJldiwgY3VycikgewogICAgICAgIGNnLnNldEVkZ2UocHJldi52LCBjdXJyLnYpOwogICAgICAgIHJldHVybiBjdXJyOwogICAgICB9KTsKICAgICAgcmV0dXJuIG1pbjsKICAgIH0KICAgIHJldHVybiBnLm5vZGUodikub3JkZXI7CiAgfQogIGRmcyh1bmRlZmluZWQpOwogICovfX0seyIuLi9sb2Rhc2giOjcwfV0sNzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBfPXJlcXVpcmUoIi4uL2xvZGFzaCIpO21vZHVsZS5leHBvcnRzPWJhcnljZW50ZXI7ZnVuY3Rpb24gYmFyeWNlbnRlcihnLG1vdmFibGUpe3JldHVybiBfLm1hcChtb3ZhYmxlLGZ1bmN0aW9uKHYpe3ZhciBpblY9Zy5pbkVkZ2VzKHYpO2lmKCFpblYubGVuZ3RoKXtyZXR1cm57djp2fX1lbHNle3ZhciByZXN1bHQ9Xy5yZWR1Y2UoaW5WLGZ1bmN0aW9uKGFjYyxlKXt2YXIgZWRnZT1nLmVkZ2UoZSksbm9kZVU9Zy5ub2RlKGUudik7cmV0dXJue3N1bTphY2Muc3VtK2VkZ2Uud2VpZ2h0Km5vZGVVLm9yZGVyLHdlaWdodDphY2Mud2VpZ2h0K2VkZ2Uud2VpZ2h0fX0se3N1bTowLHdlaWdodDowfSk7cmV0dXJue3Y6dixiYXJ5Y2VudGVyOnJlc3VsdC5zdW0vcmVzdWx0LndlaWdodCx3ZWlnaHQ6cmVzdWx0LndlaWdodH19fSl9fSx7Ii4uL2xvZGFzaCI6NzB9XSw3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7dmFyIEdyYXBoPXJlcXVpcmUoIi4uL2dyYXBobGliIikuR3JhcGg7bW9kdWxlLmV4cG9ydHM9YnVpbGRMYXllckdyYXBoOwovKgogKiBDb25zdHJ1Y3RzIGEgZ3JhcGggdGhhdCBjYW4gYmUgdXNlZCB0byBzb3J0IGEgbGF5ZXIgb2Ygbm9kZXMuIFRoZSBncmFwaCB3aWxsCiAqIGNvbnRhaW4gYWxsIGJhc2UgYW5kIHN1YmdyYXBoIG5vZGVzIGZyb20gdGhlIHJlcXVlc3QgbGF5ZXIgaW4gdGhlaXIgb3JpZ2luYWwKICogaGllcmFyY2h5IGFuZCBhbnkgZWRnZXMgdGhhdCBhcmUgaW5jaWRlbnQgb24gdGhlc2Ugbm9kZXMgYW5kIGFyZSBvZiB0aGUgdHlwZQogKiByZXF1ZXN0ZWQgYnkgdGhlICJyZWxhdGlvbnNoaXAiIHBhcmFtZXRlci4KICoKICogTm9kZXMgZnJvbSB0aGUgcmVxdWVzdGVkIHJhbmsgdGhhdCBkbyBub3QgaGF2ZSBwYXJlbnRzIGFyZSBhc3NpZ25lZCBhIHJvb3QKICogbm9kZSBpbiB0aGUgb3V0cHV0IGdyYXBoLCB3aGljaCBpcyBzZXQgaW4gdGhlIHJvb3QgZ3JhcGggYXR0cmlidXRlLiBUaGlzCiAqIG1ha2VzIGl0IGVhc3kgdG8gd2FsayB0aGUgaGllcmFyY2h5IG9mIG1vdmFibGUgbm9kZXMgZHVyaW5nIG9yZGVyaW5nLgogKgogKiBQcmUtY29uZGl0aW9uczoKICoKICogICAgMS4gSW5wdXQgZ3JhcGggaXMgYSBEQUcKICogICAgMi4gQmFzZSBub2RlcyBpbiB0aGUgaW5wdXQgZ3JhcGggaGF2ZSBhIHJhbmsgYXR0cmlidXRlCiAqICAgIDMuIFN1YmdyYXBoIG5vZGVzIGluIHRoZSBpbnB1dCBncmFwaCBoYXMgbWluUmFuayBhbmQgbWF4UmFuayBhdHRyaWJ1dGVzCiAqICAgIDQuIEVkZ2VzIGhhdmUgYW4gYXNzaWduZWQgd2VpZ2h0CiAqCiAqIFBvc3QtY29uZGl0aW9uczoKICoKICogICAgMS4gT3V0cHV0IGdyYXBoIGhhcyBhbGwgbm9kZXMgaW4gdGhlIG1vdmFibGUgcmFuayB3aXRoIHByZXNlcnZlZAogKiAgICAgICBoaWVyYXJjaHkuCiAqICAgIDIuIFJvb3Qgbm9kZXMgaW4gdGhlIG1vdmFibGUgbGF5ZXIgYXJlIG1hZGUgY2hpbGRyZW4gb2YgdGhlIG5vZGUKICogICAgICAgaW5kaWNhdGVkIGJ5IHRoZSByb290IGF0dHJpYnV0ZSBvZiB0aGUgZ3JhcGguCiAqICAgIDMuIE5vbi1tb3ZhYmxlIG5vZGVzIGluY2lkZW50IG9uIG1vdmFibGUgbm9kZXMsIHNlbGVjdGVkIGJ5IHRoZQogKiAgICAgICByZWxhdGlvbnNoaXAgcGFyYW1ldGVyLCBhcmUgaW5jbHVkZWQgaW4gdGhlIGdyYXBoICh3aXRob3V0IGhpZXJhcmNoeSkuCiAqICAgIDQuIEVkZ2VzIGluY2lkZW50IG9uIG1vdmFibGUgbm9kZXMsIHNlbGVjdGVkIGJ5IHRoZSByZWxhdGlvbnNoaXAKICogICAgICAgcGFyYW1ldGVyLCBhcmUgYWRkZWQgdG8gdGhlIG91dHB1dCBncmFwaC4KICogICAgNS4gVGhlIHdlaWdodHMgZm9yIGNvcGllZCBlZGdlcyBhcmUgYWdncmVnYXRlZCBhcyBuZWVkLCBzaW5jZSB0aGUgb3V0cHV0CiAqICAgICAgIGdyYXBoIGlzIG5vdCBhIG11bHRpLWdyYXBoLgogKi9mdW5jdGlvbiBidWlsZExheWVyR3JhcGgoZyxyYW5rLHJlbGF0aW9uc2hpcCl7dmFyIHJvb3Q9Y3JlYXRlUm9vdE5vZGUoZykscmVzdWx0PW5ldyBHcmFwaCh7Y29tcG91bmQ6dHJ1ZX0pLnNldEdyYXBoKHtyb290OnJvb3R9KS5zZXREZWZhdWx0Tm9kZUxhYmVsKGZ1bmN0aW9uKHYpe3JldHVybiBnLm5vZGUodil9KTtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KSxwYXJlbnQ9Zy5wYXJlbnQodik7aWYobm9kZS5yYW5rPT09cmFua3x8bm9kZS5taW5SYW5rPD1yYW5rJiZyYW5rPD1ub2RlLm1heFJhbmspe3Jlc3VsdC5zZXROb2RlKHYpO3Jlc3VsdC5zZXRQYXJlbnQodixwYXJlbnR8fHJvb3QpOwovLyBUaGlzIGFzc3VtZXMgd2UgaGF2ZSBvbmx5IHNob3J0IGVkZ2VzIQpfLmZvckVhY2goZ1tyZWxhdGlvbnNoaXBdKHYpLGZ1bmN0aW9uKGUpe3ZhciB1PWUudj09PXY/ZS53OmUudixlZGdlPXJlc3VsdC5lZGdlKHUsdiksd2VpZ2h0PSFfLmlzVW5kZWZpbmVkKGVkZ2UpP2VkZ2Uud2VpZ2h0OjA7cmVzdWx0LnNldEVkZ2UodSx2LHt3ZWlnaHQ6Zy5lZGdlKGUpLndlaWdodCt3ZWlnaHR9KX0pO2lmKF8uaGFzKG5vZGUsIm1pblJhbmsiKSl7cmVzdWx0LnNldE5vZGUodix7Ym9yZGVyTGVmdDpub2RlLmJvcmRlckxlZnRbcmFua10sYm9yZGVyUmlnaHQ6bm9kZS5ib3JkZXJSaWdodFtyYW5rXX0pfX19KTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGNyZWF0ZVJvb3ROb2RlKGcpe3ZhciB2O3doaWxlKGcuaGFzTm9kZSh2PV8udW5pcXVlSWQoIl9yb290IikpKTtyZXR1cm4gdn19LHsiLi4vZ3JhcGhsaWIiOjY3LCIuLi9sb2Rhc2giOjcwfV0sNzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTttb2R1bGUuZXhwb3J0cz1jcm9zc0NvdW50OwovKgogKiBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgYSBsYXllcmluZyAoYW4gYXJyYXkgb2YgbGF5ZXJzLCBlYWNoIHdpdGggYW4gYXJyYXkgb2YKICogb3JkZXJlcmQgbm9kZXMpIGFuZCBhIGdyYXBoIGFuZCByZXR1cm5zIGEgd2VpZ2h0ZWQgY3Jvc3NpbmcgY291bnQuCiAqCiAqIFByZS1jb25kaXRpb25zOgogKgogKiAgICAxLiBJbnB1dCBncmFwaCBtdXN0IGJlIHNpbXBsZSAobm90IGEgbXVsdGlncmFwaCksIGRpcmVjdGVkLCBhbmQgaW5jbHVkZQogKiAgICAgICBvbmx5IHNpbXBsZSBlZGdlcy4KICogICAgMi4gRWRnZXMgaW4gdGhlIGlucHV0IGdyYXBoIG11c3QgaGF2ZSBhc3NpZ25lZCB3ZWlnaHRzLgogKgogKiBQb3N0LWNvbmRpdGlvbnM6CiAqCiAqICAgIDEuIFRoZSBncmFwaCBhbmQgbGF5ZXJpbmcgbWF0cml4IGFyZSBsZWZ0IHVuY2hhbmdlZC4KICoKICogVGhpcyBhbGdvcml0aG0gaXMgZGVyaXZlZCBmcm9tIEJhcnRoLCBldCBhbC4sICJCaWxheWVyIENyb3NzIENvdW50aW5nLiIKICovZnVuY3Rpb24gY3Jvc3NDb3VudChnLGxheWVyaW5nKXt2YXIgY2M9MDtmb3IodmFyIGk9MTtpPGxheWVyaW5nLmxlbmd0aDsrK2kpe2NjKz10d29MYXllckNyb3NzQ291bnQoZyxsYXllcmluZ1tpLTFdLGxheWVyaW5nW2ldKX1yZXR1cm4gY2N9ZnVuY3Rpb24gdHdvTGF5ZXJDcm9zc0NvdW50KGcsbm9ydGhMYXllcixzb3V0aExheWVyKXsKLy8gU29ydCBhbGwgb2YgdGhlIGVkZ2VzIGJldHdlZW4gdGhlIG5vcnRoIGFuZCBzb3V0aCBsYXllcnMgYnkgdGhlaXIgcG9zaXRpb24KLy8gaW4gdGhlIG5vcnRoIGxheWVyIGFuZCB0aGVuIHRoZSBzb3V0aC4gTWFwIHRoZXNlIGVkZ2VzIHRvIHRoZSBwb3NpdGlvbiBvZgovLyB0aGVpciBoZWFkIGluIHRoZSBzb3V0aCBsYXllci4KdmFyIHNvdXRoUG9zPV8uemlwT2JqZWN0KHNvdXRoTGF5ZXIsXy5tYXAoc291dGhMYXllcixmdW5jdGlvbih2LGkpe3JldHVybiBpfSkpO3ZhciBzb3V0aEVudHJpZXM9Xy5mbGF0dGVuKF8ubWFwKG5vcnRoTGF5ZXIsZnVuY3Rpb24odil7cmV0dXJuIF8uc29ydEJ5KF8ubWFwKGcub3V0RWRnZXModiksZnVuY3Rpb24oZSl7cmV0dXJue3Bvczpzb3V0aFBvc1tlLnddLHdlaWdodDpnLmVkZ2UoZSkud2VpZ2h0fX0pLCJwb3MiKX0pLHRydWUpOwovLyBCdWlsZCB0aGUgYWNjdW11bGF0b3IgdHJlZQp2YXIgZmlyc3RJbmRleD0xO3doaWxlKGZpcnN0SW5kZXg8c291dGhMYXllci5sZW5ndGgpZmlyc3RJbmRleDw8PTE7dmFyIHRyZWVTaXplPTIqZmlyc3RJbmRleC0xO2ZpcnN0SW5kZXgtPTE7dmFyIHRyZWU9Xy5tYXAobmV3IEFycmF5KHRyZWVTaXplKSxmdW5jdGlvbigpe3JldHVybiAwfSk7Ci8vIENhbGN1bGF0ZSB0aGUgd2VpZ2h0ZWQgY3Jvc3NpbmdzCnZhciBjYz0wO18uZm9yRWFjaChzb3V0aEVudHJpZXMuZm9yRWFjaChmdW5jdGlvbihlbnRyeSl7dmFyIGluZGV4PWVudHJ5LnBvcytmaXJzdEluZGV4O3RyZWVbaW5kZXhdKz1lbnRyeS53ZWlnaHQ7dmFyIHdlaWdodFN1bT0wO3doaWxlKGluZGV4PjApe2lmKGluZGV4JTIpe3dlaWdodFN1bSs9dHJlZVtpbmRleCsxXX1pbmRleD1pbmRleC0xPj4xO3RyZWVbaW5kZXhdKz1lbnRyeS53ZWlnaHR9Y2MrPWVudHJ5LndlaWdodCp3ZWlnaHRTdW19KSk7cmV0dXJuIGNjfX0seyIuLi9sb2Rhc2giOjcwfV0sNzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTt2YXIgaW5pdE9yZGVyPXJlcXVpcmUoIi4vaW5pdC1vcmRlciIpO3ZhciBjcm9zc0NvdW50PXJlcXVpcmUoIi4vY3Jvc3MtY291bnQiKTt2YXIgc29ydFN1YmdyYXBoPXJlcXVpcmUoIi4vc29ydC1zdWJncmFwaCIpO3ZhciBidWlsZExheWVyR3JhcGg9cmVxdWlyZSgiLi9idWlsZC1sYXllci1ncmFwaCIpO3ZhciBhZGRTdWJncmFwaENvbnN0cmFpbnRzPXJlcXVpcmUoIi4vYWRkLXN1YmdyYXBoLWNvbnN0cmFpbnRzIik7dmFyIEdyYXBoPXJlcXVpcmUoIi4uL2dyYXBobGliIikuR3JhcGg7dmFyIHV0aWw9cmVxdWlyZSgiLi4vdXRpbCIpO21vZHVsZS5leHBvcnRzPW9yZGVyOwovKgogKiBBcHBsaWVzIGhldXJpc3RpY3MgdG8gbWluaW1pemUgZWRnZSBjcm9zc2luZ3MgaW4gdGhlIGdyYXBoIGFuZCBzZXRzIHRoZSBiZXN0CiAqIG9yZGVyIHNvbHV0aW9uIGFzIGFuIG9yZGVyIGF0dHJpYnV0ZSBvbiBlYWNoIG5vZGUuCiAqCiAqIFByZS1jb25kaXRpb25zOgogKgogKiAgICAxLiBHcmFwaCBtdXN0IGJlIERBRwogKiAgICAyLiBHcmFwaCBub2RlcyBtdXN0IGJlIG9iamVjdHMgd2l0aCBhICJyYW5rIiBhdHRyaWJ1dGUKICogICAgMy4gR3JhcGggZWRnZXMgbXVzdCBoYXZlIHRoZSAid2VpZ2h0IiBhdHRyaWJ1dGUKICoKICogUG9zdC1jb25kaXRpb25zOgogKgogKiAgICAxLiBHcmFwaCBub2RlcyB3aWxsIGhhdmUgYW4gIm9yZGVyIiBhdHRyaWJ1dGUgYmFzZWQgb24gdGhlIHJlc3VsdHMgb2YgdGhlCiAqICAgICAgIGFsZ29yaXRobS4KICovZnVuY3Rpb24gb3JkZXIoZyl7dmFyIG1heFJhbms9dXRpbC5tYXhSYW5rKGcpLGRvd25MYXllckdyYXBocz1idWlsZExheWVyR3JhcGhzKGcsXy5yYW5nZSgxLG1heFJhbmsrMSksImluRWRnZXMiKSx1cExheWVyR3JhcGhzPWJ1aWxkTGF5ZXJHcmFwaHMoZyxfLnJhbmdlKG1heFJhbmstMSwtMSwtMSksIm91dEVkZ2VzIik7dmFyIGxheWVyaW5nPWluaXRPcmRlcihnKTthc3NpZ25PcmRlcihnLGxheWVyaW5nKTt2YXIgYmVzdENDPU51bWJlci5QT1NJVElWRV9JTkZJTklUWSxiZXN0O2Zvcih2YXIgaT0wLGxhc3RCZXN0PTA7bGFzdEJlc3Q8NDsrK2ksKytsYXN0QmVzdCl7c3dlZXBMYXllckdyYXBocyhpJTI/ZG93bkxheWVyR3JhcGhzOnVwTGF5ZXJHcmFwaHMsaSU0Pj0yKTtsYXllcmluZz11dGlsLmJ1aWxkTGF5ZXJNYXRyaXgoZyk7dmFyIGNjPWNyb3NzQ291bnQoZyxsYXllcmluZyk7aWYoY2M8YmVzdENDKXtsYXN0QmVzdD0wO2Jlc3Q9Xy5jbG9uZURlZXAobGF5ZXJpbmcpO2Jlc3RDQz1jY319YXNzaWduT3JkZXIoZyxiZXN0KX1mdW5jdGlvbiBidWlsZExheWVyR3JhcGhzKGcscmFua3MscmVsYXRpb25zaGlwKXtyZXR1cm4gXy5tYXAocmFua3MsZnVuY3Rpb24ocmFuayl7cmV0dXJuIGJ1aWxkTGF5ZXJHcmFwaChnLHJhbmsscmVsYXRpb25zaGlwKX0pfWZ1bmN0aW9uIHN3ZWVwTGF5ZXJHcmFwaHMobGF5ZXJHcmFwaHMsYmlhc1JpZ2h0KXt2YXIgY2c9bmV3IEdyYXBoO18uZm9yRWFjaChsYXllckdyYXBocyxmdW5jdGlvbihsZyl7dmFyIHJvb3Q9bGcuZ3JhcGgoKS5yb290O3ZhciBzb3J0ZWQ9c29ydFN1YmdyYXBoKGxnLHJvb3QsY2csYmlhc1JpZ2h0KTtfLmZvckVhY2goc29ydGVkLnZzLGZ1bmN0aW9uKHYsaSl7bGcubm9kZSh2KS5vcmRlcj1pfSk7YWRkU3ViZ3JhcGhDb25zdHJhaW50cyhsZyxjZyxzb3J0ZWQudnMpfSl9ZnVuY3Rpb24gYXNzaWduT3JkZXIoZyxsYXllcmluZyl7Xy5mb3JFYWNoKGxheWVyaW5nLGZ1bmN0aW9uKGxheWVyKXtfLmZvckVhY2gobGF5ZXIsZnVuY3Rpb24odixpKXtnLm5vZGUodikub3JkZXI9aX0pfSl9fSx7Ii4uL2dyYXBobGliIjo2NywiLi4vbG9kYXNoIjo3MCwiLi4vdXRpbCI6ODksIi4vYWRkLXN1YmdyYXBoLWNvbnN0cmFpbnRzIjo3MywiLi9idWlsZC1sYXllci1ncmFwaCI6NzUsIi4vY3Jvc3MtY291bnQiOjc2LCIuL2luaXQtb3JkZXIiOjc4LCIuL3NvcnQtc3ViZ3JhcGgiOjgwfV0sNzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTttb2R1bGUuZXhwb3J0cz1pbml0T3JkZXI7Ci8qCiAqIEFzc2lnbnMgYW4gaW5pdGlhbCBvcmRlciB2YWx1ZSBmb3IgZWFjaCBub2RlIGJ5IHBlcmZvcm1pbmcgYSBERlMgc2VhcmNoCiAqIHN0YXJ0aW5nIGZyb20gbm9kZXMgaW4gdGhlIGZpcnN0IHJhbmsuIE5vZGVzIGFyZSBhc3NpZ25lZCBhbiBvcmRlciBpbiB0aGVpcgogKiByYW5rIGFzIHRoZXkgYXJlIGZpcnN0IHZpc2l0ZWQuCiAqCiAqIFRoaXMgYXBwcm9hY2ggY29tZXMgZnJvbSBHYW5zbmVyLCBldCBhbC4sICJBIFRlY2huaXF1ZSBmb3IgRHJhd2luZyBEaXJlY3RlZAogKiBHcmFwaHMuIgogKgogKiBSZXR1cm5zIGEgbGF5ZXJpbmcgbWF0cml4IHdpdGggYW4gYXJyYXkgcGVyIGxheWVyIGFuZCBlYWNoIGxheWVyIHNvcnRlZCBieQogKiB0aGUgb3JkZXIgb2YgaXRzIG5vZGVzLgogKi9mdW5jdGlvbiBpbml0T3JkZXIoZyl7dmFyIHZpc2l0ZWQ9e307dmFyIHNpbXBsZU5vZGVzPV8uZmlsdGVyKGcubm9kZXMoKSxmdW5jdGlvbih2KXtyZXR1cm4hZy5jaGlsZHJlbih2KS5sZW5ndGh9KTt2YXIgbWF4UmFuaz1fLm1heChfLm1hcChzaW1wbGVOb2RlcyxmdW5jdGlvbih2KXtyZXR1cm4gZy5ub2RlKHYpLnJhbmt9KSk7dmFyIGxheWVycz1fLm1hcChfLnJhbmdlKG1heFJhbmsrMSksZnVuY3Rpb24oKXtyZXR1cm5bXX0pO2Z1bmN0aW9uIGRmcyh2KXtpZihfLmhhcyh2aXNpdGVkLHYpKXJldHVybjt2aXNpdGVkW3ZdPXRydWU7dmFyIG5vZGU9Zy5ub2RlKHYpO2xheWVyc1tub2RlLnJhbmtdLnB1c2godik7Xy5mb3JFYWNoKGcuc3VjY2Vzc29ycyh2KSxkZnMpfXZhciBvcmRlcmVkVnM9Xy5zb3J0Qnkoc2ltcGxlTm9kZXMsZnVuY3Rpb24odil7cmV0dXJuIGcubm9kZSh2KS5yYW5rfSk7Xy5mb3JFYWNoKG9yZGVyZWRWcyxkZnMpO3JldHVybiBsYXllcnN9fSx7Ii4uL2xvZGFzaCI6NzB9XSw3OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4uL2xvZGFzaCIpO21vZHVsZS5leHBvcnRzPXJlc29sdmVDb25mbGljdHM7Ci8qCiAqIEdpdmVuIGEgbGlzdCBvZiBlbnRyaWVzIG9mIHRoZSBmb3JtIHt2LCBiYXJ5Y2VudGVyLCB3ZWlnaHR9IGFuZCBhCiAqIGNvbnN0cmFpbnQgZ3JhcGggdGhpcyBmdW5jdGlvbiB3aWxsIHJlc29sdmUgYW55IGNvbmZsaWN0cyBiZXR3ZWVuIHRoZQogKiBjb25zdHJhaW50IGdyYXBoIGFuZCB0aGUgYmFyeWNlbnRlcnMgZm9yIHRoZSBlbnRyaWVzLiBJZiB0aGUgYmFyeWNlbnRlcnMgZm9yCiAqIGFuIGVudHJ5IHdvdWxkIHZpb2xhdGUgYSBjb25zdHJhaW50IGluIHRoZSBjb25zdHJhaW50IGdyYXBoIHRoZW4gd2UgY29hbGVzY2UKICogdGhlIG5vZGVzIGluIHRoZSBjb25mbGljdCBpbnRvIGEgbmV3IG5vZGUgdGhhdCByZXNwZWN0cyB0aGUgY29udHJhaW50IGFuZAogKiBhZ2dyZWdhdGVzIGJhcnljZW50ZXIgYW5kIHdlaWdodCBpbmZvcm1hdGlvbi4KICoKICogVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBvbiB0aGUgZGVzY3JpcHRpb24gaW4gRm9yc3RlciwgIkEgRmFzdCBhbmQKICogU2ltcGxlIEh1ZXJpc3RpYyBmb3IgQ29uc3RyYWluZWQgVHdvLUxldmVsIENyb3NzaW5nIFJlZHVjdGlvbiwiIHRob3VnaHQgaXQKICogZGlmZmVycyBpbiBzb21lIHNwZWNpZmljIGRldGFpbHMuCiAqCiAqIFByZS1jb25kaXRpb25zOgogKgogKiAgICAxLiBFYWNoIGVudHJ5IGhhcyB0aGUgZm9ybSB7diwgYmFyeWNlbnRlciwgd2VpZ2h0fSwgb3IgaWYgdGhlIG5vZGUgaGFzCiAqICAgICAgIG5vIGJhcnljZW50ZXIsIHRoZW4ge3Z9LgogKgogKiBSZXR1cm5zOgogKgogKiAgICBBIG5ldyBsaXN0IG9mIGVudHJpZXMgb2YgdGhlIGZvcm0ge3ZzLCBpLCBiYXJ5Y2VudGVyLCB3ZWlnaHR9LiBUaGUgbGlzdAogKiAgICBgdnNgIG1heSBlaXRoZXIgYmUgYSBzaW5nbGV0b24gb3IgaXQgbWF5IGJlIGFuIGFnZ3JlZ2F0aW9uIG9mIG5vZGVzCiAqICAgIG9yZGVyZWQgc3VjaCB0aGF0IHRoZXkgZG8gbm90IHZpb2xhdGUgY29uc3RyYWludHMgZnJvbSB0aGUgY29uc3RyYWludAogKiAgICBncmFwaC4gVGhlIHByb3BlcnR5IGBpYCBpcyB0aGUgbG93ZXN0IG9yaWdpbmFsIGluZGV4IG9mIGFueSBvZiB0aGUKICogICAgZWxlbWVudHMgaW4gYHZzYC4KICovZnVuY3Rpb24gcmVzb2x2ZUNvbmZsaWN0cyhlbnRyaWVzLGNnKXt2YXIgbWFwcGVkRW50cmllcz17fTtfLmZvckVhY2goZW50cmllcyxmdW5jdGlvbihlbnRyeSxpKXt2YXIgdG1wPW1hcHBlZEVudHJpZXNbZW50cnkudl09e2luZGVncmVlOjAsaW46W10sb3V0OltdLHZzOltlbnRyeS52XSxpOml9O2lmKCFfLmlzVW5kZWZpbmVkKGVudHJ5LmJhcnljZW50ZXIpKXt0bXAuYmFyeWNlbnRlcj1lbnRyeS5iYXJ5Y2VudGVyO3RtcC53ZWlnaHQ9ZW50cnkud2VpZ2h0fX0pO18uZm9yRWFjaChjZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3ZhciBlbnRyeVY9bWFwcGVkRW50cmllc1tlLnZdO3ZhciBlbnRyeVc9bWFwcGVkRW50cmllc1tlLnddO2lmKCFfLmlzVW5kZWZpbmVkKGVudHJ5VikmJiFfLmlzVW5kZWZpbmVkKGVudHJ5Vykpe2VudHJ5Vy5pbmRlZ3JlZSsrO2VudHJ5Vi5vdXQucHVzaChtYXBwZWRFbnRyaWVzW2Uud10pfX0pO3ZhciBzb3VyY2VTZXQ9Xy5maWx0ZXIobWFwcGVkRW50cmllcyxmdW5jdGlvbihlbnRyeSl7cmV0dXJuIWVudHJ5LmluZGVncmVlfSk7cmV0dXJuIGRvUmVzb2x2ZUNvbmZsaWN0cyhzb3VyY2VTZXQpfWZ1bmN0aW9uIGRvUmVzb2x2ZUNvbmZsaWN0cyhzb3VyY2VTZXQpe3ZhciBlbnRyaWVzPVtdO2Z1bmN0aW9uIGhhbmRsZUluKHZFbnRyeSl7cmV0dXJuIGZ1bmN0aW9uKHVFbnRyeSl7aWYodUVudHJ5Lm1lcmdlZCl7cmV0dXJufWlmKF8uaXNVbmRlZmluZWQodUVudHJ5LmJhcnljZW50ZXIpfHxfLmlzVW5kZWZpbmVkKHZFbnRyeS5iYXJ5Y2VudGVyKXx8dUVudHJ5LmJhcnljZW50ZXI+PXZFbnRyeS5iYXJ5Y2VudGVyKXttZXJnZUVudHJpZXModkVudHJ5LHVFbnRyeSl9fX1mdW5jdGlvbiBoYW5kbGVPdXQodkVudHJ5KXtyZXR1cm4gZnVuY3Rpb24od0VudHJ5KXt3RW50cnlbImluIl0ucHVzaCh2RW50cnkpO2lmKC0td0VudHJ5LmluZGVncmVlPT09MCl7c291cmNlU2V0LnB1c2god0VudHJ5KX19fXdoaWxlKHNvdXJjZVNldC5sZW5ndGgpe3ZhciBlbnRyeT1zb3VyY2VTZXQucG9wKCk7ZW50cmllcy5wdXNoKGVudHJ5KTtfLmZvckVhY2goZW50cnlbImluIl0ucmV2ZXJzZSgpLGhhbmRsZUluKGVudHJ5KSk7Xy5mb3JFYWNoKGVudHJ5Lm91dCxoYW5kbGVPdXQoZW50cnkpKX1yZXR1cm4gXy5tYXAoXy5maWx0ZXIoZW50cmllcyxmdW5jdGlvbihlbnRyeSl7cmV0dXJuIWVudHJ5Lm1lcmdlZH0pLGZ1bmN0aW9uKGVudHJ5KXtyZXR1cm4gXy5waWNrKGVudHJ5LFsidnMiLCJpIiwiYmFyeWNlbnRlciIsIndlaWdodCJdKX0pfWZ1bmN0aW9uIG1lcmdlRW50cmllcyh0YXJnZXQsc291cmNlKXt2YXIgc3VtPTA7dmFyIHdlaWdodD0wO2lmKHRhcmdldC53ZWlnaHQpe3N1bSs9dGFyZ2V0LmJhcnljZW50ZXIqdGFyZ2V0LndlaWdodDt3ZWlnaHQrPXRhcmdldC53ZWlnaHR9aWYoc291cmNlLndlaWdodCl7c3VtKz1zb3VyY2UuYmFyeWNlbnRlcipzb3VyY2Uud2VpZ2h0O3dlaWdodCs9c291cmNlLndlaWdodH10YXJnZXQudnM9c291cmNlLnZzLmNvbmNhdCh0YXJnZXQudnMpO3RhcmdldC5iYXJ5Y2VudGVyPXN1bS93ZWlnaHQ7dGFyZ2V0LndlaWdodD13ZWlnaHQ7dGFyZ2V0Lmk9TWF0aC5taW4oc291cmNlLmksdGFyZ2V0LmkpO3NvdXJjZS5tZXJnZWQ9dHJ1ZX19LHsiLi4vbG9kYXNoIjo3MH1dLDgwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTt2YXIgYmFyeWNlbnRlcj1yZXF1aXJlKCIuL2JhcnljZW50ZXIiKTt2YXIgcmVzb2x2ZUNvbmZsaWN0cz1yZXF1aXJlKCIuL3Jlc29sdmUtY29uZmxpY3RzIik7dmFyIHNvcnQ9cmVxdWlyZSgiLi9zb3J0Iik7bW9kdWxlLmV4cG9ydHM9c29ydFN1YmdyYXBoO2Z1bmN0aW9uIHNvcnRTdWJncmFwaChnLHYsY2csYmlhc1JpZ2h0KXt2YXIgbW92YWJsZT1nLmNoaWxkcmVuKHYpO3ZhciBub2RlPWcubm9kZSh2KTt2YXIgYmw9bm9kZT9ub2RlLmJvcmRlckxlZnQ6dW5kZWZpbmVkO3ZhciBicj1ub2RlP25vZGUuYm9yZGVyUmlnaHQ6dW5kZWZpbmVkO3ZhciBzdWJncmFwaHM9e307aWYoYmwpe21vdmFibGU9Xy5maWx0ZXIobW92YWJsZSxmdW5jdGlvbih3KXtyZXR1cm4gdyE9PWJsJiZ3IT09YnJ9KX12YXIgYmFyeWNlbnRlcnM9YmFyeWNlbnRlcihnLG1vdmFibGUpO18uZm9yRWFjaChiYXJ5Y2VudGVycyxmdW5jdGlvbihlbnRyeSl7aWYoZy5jaGlsZHJlbihlbnRyeS52KS5sZW5ndGgpe3ZhciBzdWJncmFwaFJlc3VsdD1zb3J0U3ViZ3JhcGgoZyxlbnRyeS52LGNnLGJpYXNSaWdodCk7c3ViZ3JhcGhzW2VudHJ5LnZdPXN1YmdyYXBoUmVzdWx0O2lmKF8uaGFzKHN1YmdyYXBoUmVzdWx0LCJiYXJ5Y2VudGVyIikpe21lcmdlQmFyeWNlbnRlcnMoZW50cnksc3ViZ3JhcGhSZXN1bHQpfX19KTt2YXIgZW50cmllcz1yZXNvbHZlQ29uZmxpY3RzKGJhcnljZW50ZXJzLGNnKTtleHBhbmRTdWJncmFwaHMoZW50cmllcyxzdWJncmFwaHMpO3ZhciByZXN1bHQ9c29ydChlbnRyaWVzLGJpYXNSaWdodCk7aWYoYmwpe3Jlc3VsdC52cz1fLmZsYXR0ZW4oW2JsLHJlc3VsdC52cyxicl0sdHJ1ZSk7aWYoZy5wcmVkZWNlc3NvcnMoYmwpLmxlbmd0aCl7dmFyIGJsUHJlZD1nLm5vZGUoZy5wcmVkZWNlc3NvcnMoYmwpWzBdKSxiclByZWQ9Zy5ub2RlKGcucHJlZGVjZXNzb3JzKGJyKVswXSk7aWYoIV8uaGFzKHJlc3VsdCwiYmFyeWNlbnRlciIpKXtyZXN1bHQuYmFyeWNlbnRlcj0wO3Jlc3VsdC53ZWlnaHQ9MH1yZXN1bHQuYmFyeWNlbnRlcj0ocmVzdWx0LmJhcnljZW50ZXIqcmVzdWx0LndlaWdodCtibFByZWQub3JkZXIrYnJQcmVkLm9yZGVyKS8ocmVzdWx0LndlaWdodCsyKTtyZXN1bHQud2VpZ2h0Kz0yfX1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGV4cGFuZFN1YmdyYXBocyhlbnRyaWVzLHN1YmdyYXBocyl7Xy5mb3JFYWNoKGVudHJpZXMsZnVuY3Rpb24oZW50cnkpe2VudHJ5LnZzPV8uZmxhdHRlbihlbnRyeS52cy5tYXAoZnVuY3Rpb24odil7aWYoc3ViZ3JhcGhzW3ZdKXtyZXR1cm4gc3ViZ3JhcGhzW3ZdLnZzfXJldHVybiB2fSksdHJ1ZSl9KX1mdW5jdGlvbiBtZXJnZUJhcnljZW50ZXJzKHRhcmdldCxvdGhlcil7aWYoIV8uaXNVbmRlZmluZWQodGFyZ2V0LmJhcnljZW50ZXIpKXt0YXJnZXQuYmFyeWNlbnRlcj0odGFyZ2V0LmJhcnljZW50ZXIqdGFyZ2V0LndlaWdodCtvdGhlci5iYXJ5Y2VudGVyKm90aGVyLndlaWdodCkvKHRhcmdldC53ZWlnaHQrb3RoZXIud2VpZ2h0KTt0YXJnZXQud2VpZ2h0Kz1vdGhlci53ZWlnaHR9ZWxzZXt0YXJnZXQuYmFyeWNlbnRlcj1vdGhlci5iYXJ5Y2VudGVyO3RhcmdldC53ZWlnaHQ9b3RoZXIud2VpZ2h0fX19LHsiLi4vbG9kYXNoIjo3MCwiLi9iYXJ5Y2VudGVyIjo3NCwiLi9yZXNvbHZlLWNvbmZsaWN0cyI6NzksIi4vc29ydCI6ODF9XSw4MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7dmFyIHV0aWw9cmVxdWlyZSgiLi4vdXRpbCIpO21vZHVsZS5leHBvcnRzPXNvcnQ7ZnVuY3Rpb24gc29ydChlbnRyaWVzLGJpYXNSaWdodCl7dmFyIHBhcnRzPXV0aWwucGFydGl0aW9uKGVudHJpZXMsZnVuY3Rpb24oZW50cnkpe3JldHVybiBfLmhhcyhlbnRyeSwiYmFyeWNlbnRlciIpfSk7dmFyIHNvcnRhYmxlPXBhcnRzLmxocyx1bnNvcnRhYmxlPV8uc29ydEJ5KHBhcnRzLnJocyxmdW5jdGlvbihlbnRyeSl7cmV0dXJuLWVudHJ5Lml9KSx2cz1bXSxzdW09MCx3ZWlnaHQ9MCx2c0luZGV4PTA7c29ydGFibGUuc29ydChjb21wYXJlV2l0aEJpYXMoISFiaWFzUmlnaHQpKTt2c0luZGV4PWNvbnN1bWVVbnNvcnRhYmxlKHZzLHVuc29ydGFibGUsdnNJbmRleCk7Xy5mb3JFYWNoKHNvcnRhYmxlLGZ1bmN0aW9uKGVudHJ5KXt2c0luZGV4Kz1lbnRyeS52cy5sZW5ndGg7dnMucHVzaChlbnRyeS52cyk7c3VtKz1lbnRyeS5iYXJ5Y2VudGVyKmVudHJ5LndlaWdodDt3ZWlnaHQrPWVudHJ5LndlaWdodDt2c0luZGV4PWNvbnN1bWVVbnNvcnRhYmxlKHZzLHVuc29ydGFibGUsdnNJbmRleCl9KTt2YXIgcmVzdWx0PXt2czpfLmZsYXR0ZW4odnMsdHJ1ZSl9O2lmKHdlaWdodCl7cmVzdWx0LmJhcnljZW50ZXI9c3VtL3dlaWdodDtyZXN1bHQud2VpZ2h0PXdlaWdodH1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGNvbnN1bWVVbnNvcnRhYmxlKHZzLHVuc29ydGFibGUsaW5kZXgpe3ZhciBsYXN0O3doaWxlKHVuc29ydGFibGUubGVuZ3RoJiYobGFzdD1fLmxhc3QodW5zb3J0YWJsZSkpLmk8PWluZGV4KXt1bnNvcnRhYmxlLnBvcCgpO3ZzLnB1c2gobGFzdC52cyk7aW5kZXgrK31yZXR1cm4gaW5kZXh9ZnVuY3Rpb24gY29tcGFyZVdpdGhCaWFzKGJpYXMpe3JldHVybiBmdW5jdGlvbihlbnRyeVYsZW50cnlXKXtpZihlbnRyeVYuYmFyeWNlbnRlcjxlbnRyeVcuYmFyeWNlbnRlcil7cmV0dXJuLTF9ZWxzZSBpZihlbnRyeVYuYmFyeWNlbnRlcj5lbnRyeVcuYmFyeWNlbnRlcil7cmV0dXJuIDF9cmV0dXJuIWJpYXM/ZW50cnlWLmktZW50cnlXLmk6ZW50cnlXLmktZW50cnlWLml9fX0seyIuLi9sb2Rhc2giOjcwLCIuLi91dGlsIjo4OX1dLDgyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuL2xvZGFzaCIpO21vZHVsZS5leHBvcnRzPXBhcmVudER1bW15Q2hhaW5zO2Z1bmN0aW9uIHBhcmVudER1bW15Q2hhaW5zKGcpe3ZhciBwb3N0b3JkZXJOdW1zPXBvc3RvcmRlcihnKTtfLmZvckVhY2goZy5ncmFwaCgpLmR1bW15Q2hhaW5zLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTt2YXIgZWRnZU9iaj1ub2RlLmVkZ2VPYmo7dmFyIHBhdGhEYXRhPWZpbmRQYXRoKGcscG9zdG9yZGVyTnVtcyxlZGdlT2JqLnYsZWRnZU9iai53KTt2YXIgcGF0aD1wYXRoRGF0YS5wYXRoO3ZhciBsY2E9cGF0aERhdGEubGNhO3ZhciBwYXRoSWR4PTA7dmFyIHBhdGhWPXBhdGhbcGF0aElkeF07dmFyIGFzY2VuZGluZz10cnVlO3doaWxlKHYhPT1lZGdlT2JqLncpe25vZGU9Zy5ub2RlKHYpO2lmKGFzY2VuZGluZyl7d2hpbGUoKHBhdGhWPXBhdGhbcGF0aElkeF0pIT09bGNhJiZnLm5vZGUocGF0aFYpLm1heFJhbms8bm9kZS5yYW5rKXtwYXRoSWR4Kyt9aWYocGF0aFY9PT1sY2Epe2FzY2VuZGluZz1mYWxzZX19aWYoIWFzY2VuZGluZyl7d2hpbGUocGF0aElkeDxwYXRoLmxlbmd0aC0xJiZnLm5vZGUocGF0aFY9cGF0aFtwYXRoSWR4KzFdKS5taW5SYW5rPD1ub2RlLnJhbmspe3BhdGhJZHgrK31wYXRoVj1wYXRoW3BhdGhJZHhdfWcuc2V0UGFyZW50KHYscGF0aFYpO3Y9Zy5zdWNjZXNzb3JzKHYpWzBdfX0pfQovLyBGaW5kIGEgcGF0aCBmcm9tIHYgdG8gdyB0aHJvdWdoIHRoZSBsb3dlc3QgY29tbW9uIGFuY2VzdG9yIChMQ0EpLiBSZXR1cm4gdGhlCi8vIGZ1bGwgcGF0aCBhbmQgdGhlIExDQS4KZnVuY3Rpb24gZmluZFBhdGgoZyxwb3N0b3JkZXJOdW1zLHYsdyl7dmFyIHZQYXRoPVtdO3ZhciB3UGF0aD1bXTt2YXIgbG93PU1hdGgubWluKHBvc3RvcmRlck51bXNbdl0ubG93LHBvc3RvcmRlck51bXNbd10ubG93KTt2YXIgbGltPU1hdGgubWF4KHBvc3RvcmRlck51bXNbdl0ubGltLHBvc3RvcmRlck51bXNbd10ubGltKTt2YXIgcGFyZW50O3ZhciBsY2E7Ci8vIFRyYXZlcnNlIHVwIGZyb20gdiB0byBmaW5kIHRoZSBMQ0EKcGFyZW50PXY7ZG97cGFyZW50PWcucGFyZW50KHBhcmVudCk7dlBhdGgucHVzaChwYXJlbnQpfXdoaWxlKHBhcmVudCYmKHBvc3RvcmRlck51bXNbcGFyZW50XS5sb3c+bG93fHxsaW0+cG9zdG9yZGVyTnVtc1twYXJlbnRdLmxpbSkpO2xjYT1wYXJlbnQ7Ci8vIFRyYXZlcnNlIGZyb20gdyB0byBMQ0EKcGFyZW50PXc7d2hpbGUoKHBhcmVudD1nLnBhcmVudChwYXJlbnQpKSE9PWxjYSl7d1BhdGgucHVzaChwYXJlbnQpfXJldHVybntwYXRoOnZQYXRoLmNvbmNhdCh3UGF0aC5yZXZlcnNlKCkpLGxjYTpsY2F9fWZ1bmN0aW9uIHBvc3RvcmRlcihnKXt2YXIgcmVzdWx0PXt9O3ZhciBsaW09MDtmdW5jdGlvbiBkZnModil7dmFyIGxvdz1saW07Xy5mb3JFYWNoKGcuY2hpbGRyZW4odiksZGZzKTtyZXN1bHRbdl09e2xvdzpsb3csbGltOmxpbSsrfX1fLmZvckVhY2goZy5jaGlsZHJlbigpLGRmcyk7cmV0dXJuIHJlc3VsdH19LHsiLi9sb2Rhc2giOjcwfV0sODM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTt2YXIgR3JhcGg9cmVxdWlyZSgiLi4vZ3JhcGhsaWIiKS5HcmFwaDt2YXIgdXRpbD1yZXF1aXJlKCIuLi91dGlsIik7Ci8qCiAqIFRoaXMgbW9kdWxlIHByb3ZpZGVzIGNvb3JkaW5hdGUgYXNzaWdubWVudCBiYXNlZCBvbiBCcmFuZGVzIGFuZCBLw7ZwZiwgIkZhc3QKICogYW5kIFNpbXBsZSBIb3Jpem9udGFsIENvb3JkaW5hdGUgQXNzaWdubWVudC4iCiAqL21vZHVsZS5leHBvcnRzPXtwb3NpdGlvblg6cG9zaXRpb25YLGZpbmRUeXBlMUNvbmZsaWN0czpmaW5kVHlwZTFDb25mbGljdHMsZmluZFR5cGUyQ29uZmxpY3RzOmZpbmRUeXBlMkNvbmZsaWN0cyxhZGRDb25mbGljdDphZGRDb25mbGljdCxoYXNDb25mbGljdDpoYXNDb25mbGljdCx2ZXJ0aWNhbEFsaWdubWVudDp2ZXJ0aWNhbEFsaWdubWVudCxob3Jpem9udGFsQ29tcGFjdGlvbjpob3Jpem9udGFsQ29tcGFjdGlvbixhbGlnbkNvb3JkaW5hdGVzOmFsaWduQ29vcmRpbmF0ZXMsZmluZFNtYWxsZXN0V2lkdGhBbGlnbm1lbnQ6ZmluZFNtYWxsZXN0V2lkdGhBbGlnbm1lbnQsYmFsYW5jZTpiYWxhbmNlfTsKLyoKICogTWFya3MgYWxsIGVkZ2VzIGluIHRoZSBncmFwaCB3aXRoIGEgdHlwZS0xIGNvbmZsaWN0IHdpdGggdGhlICJ0eXBlMUNvbmZsaWN0IgogKiBwcm9wZXJ0eS4gQSB0eXBlLTEgY29uZmxpY3QgaXMgb25lIHdoZXJlIGEgbm9uLWlubmVyIHNlZ21lbnQgY3Jvc3NlcyBhbgogKiBpbm5lciBzZWdtZW50LiBBbiBpbm5lciBzZWdtZW50IGlzIGFuIGVkZ2Ugd2l0aCBib3RoIGluY2lkZW50IG5vZGVzIG1hcmtlZAogKiB3aXRoIHRoZSAiZHVtbXkiIHByb3BlcnR5LgogKgogKiBUaGlzIGFsZ29yaXRobSBzY2FucyBsYXllciBieSBsYXllciwgc3RhcnRpbmcgd2l0aCB0aGUgc2Vjb25kLCBmb3IgdHlwZS0xCiAqIGNvbmZsaWN0cyBiZXR3ZWVuIHRoZSBjdXJyZW50IGxheWVyIGFuZCB0aGUgcHJldmlvdXMgbGF5ZXIuIEZvciBlYWNoIGxheWVyCiAqIGl0IHNjYW5zIHRoZSBub2RlcyBmcm9tIGxlZnQgdG8gcmlnaHQgdW50aWwgaXQgcmVhY2hlcyBvbmUgdGhhdCBpcyBpbmNpZGVudAogKiBvbiBhbiBpbm5lciBzZWdtZW50LiBJdCB0aGVuIHNjYW5zIHByZWRlY2Vzc29ycyB0byBkZXRlcm1pbmUgaWYgdGhleSBoYXZlCiAqIGVkZ2VzIHRoYXQgY3Jvc3MgdGhhdCBpbm5lciBzZWdtZW50LiBBdCB0aGUgZW5kIGEgZmluYWwgc2NhbiBpcyBkb25lIGZvciBhbGwKICogbm9kZXMgb24gdGhlIGN1cnJlbnQgcmFuayB0byBzZWUgaWYgdGhleSBjcm9zcyB0aGUgbGFzdCB2aXNpdGVkIGlubmVyCiAqIHNlZ21lbnQuCiAqCiAqIFRoaXMgYWxnb3JpdGhtIChzYWZlbHkpIGFzc3VtZXMgdGhhdCBhIGR1bW15IG5vZGUgd2lsbCBvbmx5IGJlIGluY2lkZW50IG9uIGEKICogc2luZ2xlIG5vZGUgaW4gdGhlIGxheWVycyBiZWluZyBzY2FubmVkLgogKi9mdW5jdGlvbiBmaW5kVHlwZTFDb25mbGljdHMoZyxsYXllcmluZyl7dmFyIGNvbmZsaWN0cz17fTtmdW5jdGlvbiB2aXNpdExheWVyKHByZXZMYXllcixsYXllcil7dmFyCi8vIGxhc3QgdmlzaXRlZCBub2RlIGluIHRoZSBwcmV2aW91cyBsYXllciB0aGF0IGlzIGluY2lkZW50IG9uIGFuIGlubmVyCi8vIHNlZ21lbnQuCmswPTAsCi8vIFRyYWNrcyB0aGUgbGFzdCBub2RlIGluIHRoaXMgbGF5ZXIgc2Nhbm5lZCBmb3IgY3Jvc3NpbmdzIHdpdGggYSB0eXBlLTEKLy8gc2VnbWVudC4Kc2NhblBvcz0wLHByZXZMYXllckxlbmd0aD1wcmV2TGF5ZXIubGVuZ3RoLGxhc3ROb2RlPV8ubGFzdChsYXllcik7Xy5mb3JFYWNoKGxheWVyLGZ1bmN0aW9uKHYsaSl7dmFyIHc9ZmluZE90aGVySW5uZXJTZWdtZW50Tm9kZShnLHYpLGsxPXc/Zy5ub2RlKHcpLm9yZGVyOnByZXZMYXllckxlbmd0aDtpZih3fHx2PT09bGFzdE5vZGUpe18uZm9yRWFjaChsYXllci5zbGljZShzY2FuUG9zLGkrMSksZnVuY3Rpb24oc2Nhbk5vZGUpe18uZm9yRWFjaChnLnByZWRlY2Vzc29ycyhzY2FuTm9kZSksZnVuY3Rpb24odSl7dmFyIHVMYWJlbD1nLm5vZGUodSksdVBvcz11TGFiZWwub3JkZXI7aWYoKHVQb3M8azB8fGsxPHVQb3MpJiYhKHVMYWJlbC5kdW1teSYmZy5ub2RlKHNjYW5Ob2RlKS5kdW1teSkpe2FkZENvbmZsaWN0KGNvbmZsaWN0cyx1LHNjYW5Ob2RlKX19KX0pO3NjYW5Qb3M9aSsxO2swPWsxfX0pO3JldHVybiBsYXllcn1fLnJlZHVjZShsYXllcmluZyx2aXNpdExheWVyKTtyZXR1cm4gY29uZmxpY3RzfWZ1bmN0aW9uIGZpbmRUeXBlMkNvbmZsaWN0cyhnLGxheWVyaW5nKXt2YXIgY29uZmxpY3RzPXt9O2Z1bmN0aW9uIHNjYW4oc291dGgsc291dGhQb3Msc291dGhFbmQscHJldk5vcnRoQm9yZGVyLG5leHROb3J0aEJvcmRlcil7dmFyIHY7Xy5mb3JFYWNoKF8ucmFuZ2Uoc291dGhQb3Msc291dGhFbmQpLGZ1bmN0aW9uKGkpe3Y9c291dGhbaV07aWYoZy5ub2RlKHYpLmR1bW15KXtfLmZvckVhY2goZy5wcmVkZWNlc3NvcnModiksZnVuY3Rpb24odSl7dmFyIHVOb2RlPWcubm9kZSh1KTtpZih1Tm9kZS5kdW1teSYmKHVOb2RlLm9yZGVyPHByZXZOb3J0aEJvcmRlcnx8dU5vZGUub3JkZXI+bmV4dE5vcnRoQm9yZGVyKSl7YWRkQ29uZmxpY3QoY29uZmxpY3RzLHUsdil9fSl9fSl9ZnVuY3Rpb24gdmlzaXRMYXllcihub3J0aCxzb3V0aCl7dmFyIHByZXZOb3J0aFBvcz0tMSxuZXh0Tm9ydGhQb3Msc291dGhQb3M9MDtfLmZvckVhY2goc291dGgsZnVuY3Rpb24odixzb3V0aExvb2thaGVhZCl7aWYoZy5ub2RlKHYpLmR1bW15PT09ImJvcmRlciIpe3ZhciBwcmVkZWNlc3NvcnM9Zy5wcmVkZWNlc3NvcnModik7aWYocHJlZGVjZXNzb3JzLmxlbmd0aCl7bmV4dE5vcnRoUG9zPWcubm9kZShwcmVkZWNlc3NvcnNbMF0pLm9yZGVyO3NjYW4oc291dGgsc291dGhQb3Msc291dGhMb29rYWhlYWQscHJldk5vcnRoUG9zLG5leHROb3J0aFBvcyk7c291dGhQb3M9c291dGhMb29rYWhlYWQ7cHJldk5vcnRoUG9zPW5leHROb3J0aFBvc319c2Nhbihzb3V0aCxzb3V0aFBvcyxzb3V0aC5sZW5ndGgsbmV4dE5vcnRoUG9zLG5vcnRoLmxlbmd0aCl9KTtyZXR1cm4gc291dGh9Xy5yZWR1Y2UobGF5ZXJpbmcsdmlzaXRMYXllcik7cmV0dXJuIGNvbmZsaWN0c31mdW5jdGlvbiBmaW5kT3RoZXJJbm5lclNlZ21lbnROb2RlKGcsdil7aWYoZy5ub2RlKHYpLmR1bW15KXtyZXR1cm4gXy5maW5kKGcucHJlZGVjZXNzb3JzKHYpLGZ1bmN0aW9uKHUpe3JldHVybiBnLm5vZGUodSkuZHVtbXl9KX19ZnVuY3Rpb24gYWRkQ29uZmxpY3QoY29uZmxpY3RzLHYsdyl7aWYodj53KXt2YXIgdG1wPXY7dj13O3c9dG1wfXZhciBjb25mbGljdHNWPWNvbmZsaWN0c1t2XTtpZighY29uZmxpY3RzVil7Y29uZmxpY3RzW3ZdPWNvbmZsaWN0c1Y9e319Y29uZmxpY3RzVlt3XT10cnVlfWZ1bmN0aW9uIGhhc0NvbmZsaWN0KGNvbmZsaWN0cyx2LHcpe2lmKHY+dyl7dmFyIHRtcD12O3Y9dzt3PXRtcH1yZXR1cm4gXy5oYXMoY29uZmxpY3RzW3ZdLHcpfQovKgogKiBUcnkgdG8gYWxpZ24gbm9kZXMgaW50byB2ZXJ0aWNhbCAiYmxvY2tzIiB3aGVyZSBwb3NzaWJsZS4gVGhpcyBhbGdvcml0aG0KICogYXR0ZW1wdHMgdG8gYWxpZ24gYSBub2RlIHdpdGggb25lIG9mIGl0cyBtZWRpYW4gbmVpZ2hib3JzLiBJZiB0aGUgZWRnZQogKiBjb25uZWN0aW5nIGEgbmVpZ2hib3IgaXMgYSB0eXBlLTEgY29uZmxpY3QgdGhlbiB3ZSBpZ25vcmUgdGhhdCBwb3NzaWJpbGl0eS4KICogSWYgYSBwcmV2aW91cyBub2RlIGhhcyBhbHJlYWR5IGZvcm1lZCBhIGJsb2NrIHdpdGggYSBub2RlIGFmdGVyIHRoZSBub2RlCiAqIHdlJ3JlIHRyeWluZyB0byBmb3JtIGEgYmxvY2sgd2l0aCwgd2UgYWxzbyBpZ25vcmUgdGhhdCBwb3NzaWJpbGl0eSAtIG91cgogKiBibG9ja3Mgd291bGQgYmUgc3BsaXQgaW4gdGhhdCBzY2VuYXJpby4KICovZnVuY3Rpb24gdmVydGljYWxBbGlnbm1lbnQoZyxsYXllcmluZyxjb25mbGljdHMsbmVpZ2hib3JGbil7dmFyIHJvb3Q9e30sYWxpZ249e30scG9zPXt9OwovLyBXZSBjYWNoZSB0aGUgcG9zaXRpb24gaGVyZSBiYXNlZCBvbiB0aGUgbGF5ZXJpbmcgYmVjYXVzZSB0aGUgZ3JhcGggYW5kCi8vIGxheWVyaW5nIG1heSBiZSBvdXQgb2Ygc3luYy4gVGhlIGxheWVyaW5nIG1hdHJpeCBpcyBtYW5pcHVsYXRlZCB0bwovLyBnZW5lcmF0ZSBkaWZmZXJlbnQgZXh0cmVtZSBhbGlnbm1lbnRzLgpfLmZvckVhY2gobGF5ZXJpbmcsZnVuY3Rpb24obGF5ZXIpe18uZm9yRWFjaChsYXllcixmdW5jdGlvbih2LG9yZGVyKXtyb290W3ZdPXY7YWxpZ25bdl09djtwb3Nbdl09b3JkZXJ9KX0pO18uZm9yRWFjaChsYXllcmluZyxmdW5jdGlvbihsYXllcil7dmFyIHByZXZJZHg9LTE7Xy5mb3JFYWNoKGxheWVyLGZ1bmN0aW9uKHYpe3ZhciB3cz1uZWlnaGJvckZuKHYpO2lmKHdzLmxlbmd0aCl7d3M9Xy5zb3J0Qnkod3MsZnVuY3Rpb24odyl7cmV0dXJuIHBvc1t3XX0pO3ZhciBtcD0od3MubGVuZ3RoLTEpLzI7Zm9yKHZhciBpPU1hdGguZmxvb3IobXApLGlsPU1hdGguY2VpbChtcCk7aTw9aWw7KytpKXt2YXIgdz13c1tpXTtpZihhbGlnblt2XT09PXYmJnByZXZJZHg8cG9zW3ddJiYhaGFzQ29uZmxpY3QoY29uZmxpY3RzLHYsdykpe2FsaWduW3ddPXY7YWxpZ25bdl09cm9vdFt2XT1yb290W3ddO3ByZXZJZHg9cG9zW3ddfX19fSl9KTtyZXR1cm57cm9vdDpyb290LGFsaWduOmFsaWdufX1mdW5jdGlvbiBob3Jpem9udGFsQ29tcGFjdGlvbihnLGxheWVyaW5nLHJvb3QsYWxpZ24scmV2ZXJzZVNlcCl7Ci8vIFRoaXMgcG9ydGlvbiBvZiB0aGUgYWxnb3JpdGhtIGRpZmZlcnMgZnJvbSBCSyBkdWUgdG8gYSBudW1iZXIgb2YgcHJvYmxlbXMuCi8vIEluc3RlYWQgb2YgdGhlaXIgYWxnb3JpdGhtIHdlIGNvbnN0cnVjdCBhIG5ldyBibG9jayBncmFwaCBhbmQgZG8gdHdvCi8vIHN3ZWVwcy4gVGhlIGZpcnN0IHN3ZWVwIHBsYWNlcyBibG9ja3Mgd2l0aCB0aGUgc21hbGxlc3QgcG9zc2libGUKLy8gY29vcmRpbmF0ZXMuIFRoZSBzZWNvbmQgc3dlZXAgcmVtb3ZlcyB1bnVzZWQgc3BhY2UgYnkgbW92aW5nIGJsb2NrcyB0byB0aGUKLy8gZ3JlYXRlc3QgY29vcmRpbmF0ZXMgd2l0aG91dCB2aW9sYXRpbmcgc2VwYXJhdGlvbi4KdmFyIHhzPXt9LGJsb2NrRz1idWlsZEJsb2NrR3JhcGgoZyxsYXllcmluZyxyb290LHJldmVyc2VTZXApLGJvcmRlclR5cGU9cmV2ZXJzZVNlcD8iYm9yZGVyTGVmdCI6ImJvcmRlclJpZ2h0IjtmdW5jdGlvbiBpdGVyYXRlKHNldFhzRnVuYyxuZXh0Tm9kZXNGdW5jKXt2YXIgc3RhY2s9YmxvY2tHLm5vZGVzKCk7dmFyIGVsZW09c3RhY2sucG9wKCk7dmFyIHZpc2l0ZWQ9e307d2hpbGUoZWxlbSl7aWYodmlzaXRlZFtlbGVtXSl7c2V0WHNGdW5jKGVsZW0pfWVsc2V7dmlzaXRlZFtlbGVtXT10cnVlO3N0YWNrLnB1c2goZWxlbSk7c3RhY2s9c3RhY2suY29uY2F0KG5leHROb2Rlc0Z1bmMoZWxlbSkpfWVsZW09c3RhY2sucG9wKCl9fQovLyBGaXJzdCBwYXNzLCBhc3NpZ24gc21hbGxlc3QgY29vcmRpbmF0ZXMKZnVuY3Rpb24gcGFzczEoZWxlbSl7eHNbZWxlbV09YmxvY2tHLmluRWRnZXMoZWxlbSkucmVkdWNlKGZ1bmN0aW9uKGFjYyxlKXtyZXR1cm4gTWF0aC5tYXgoYWNjLHhzW2Uudl0rYmxvY2tHLmVkZ2UoZSkpfSwwKX0KLy8gU2Vjb25kIHBhc3MsIGFzc2lnbiBncmVhdGVzdCBjb29yZGluYXRlcwpmdW5jdGlvbiBwYXNzMihlbGVtKXt2YXIgbWluPWJsb2NrRy5vdXRFZGdlcyhlbGVtKS5yZWR1Y2UoZnVuY3Rpb24oYWNjLGUpe3JldHVybiBNYXRoLm1pbihhY2MseHNbZS53XS1ibG9ja0cuZWRnZShlKSl9LE51bWJlci5QT1NJVElWRV9JTkZJTklUWSk7dmFyIG5vZGU9Zy5ub2RlKGVsZW0pO2lmKG1pbiE9PU51bWJlci5QT1NJVElWRV9JTkZJTklUWSYmbm9kZS5ib3JkZXJUeXBlIT09Ym9yZGVyVHlwZSl7eHNbZWxlbV09TWF0aC5tYXgoeHNbZWxlbV0sbWluKX19aXRlcmF0ZShwYXNzMSxibG9ja0cucHJlZGVjZXNzb3JzLmJpbmQoYmxvY2tHKSk7aXRlcmF0ZShwYXNzMixibG9ja0cuc3VjY2Vzc29ycy5iaW5kKGJsb2NrRykpOwovLyBBc3NpZ24geCBjb29yZGluYXRlcyB0byBhbGwgbm9kZXMKXy5mb3JFYWNoKGFsaWduLGZ1bmN0aW9uKHYpe3hzW3ZdPXhzW3Jvb3Rbdl1dfSk7cmV0dXJuIHhzfWZ1bmN0aW9uIGJ1aWxkQmxvY2tHcmFwaChnLGxheWVyaW5nLHJvb3QscmV2ZXJzZVNlcCl7dmFyIGJsb2NrR3JhcGg9bmV3IEdyYXBoLGdyYXBoTGFiZWw9Zy5ncmFwaCgpLHNlcEZuPXNlcChncmFwaExhYmVsLm5vZGVzZXAsZ3JhcGhMYWJlbC5lZGdlc2VwLHJldmVyc2VTZXApO18uZm9yRWFjaChsYXllcmluZyxmdW5jdGlvbihsYXllcil7dmFyIHU7Xy5mb3JFYWNoKGxheWVyLGZ1bmN0aW9uKHYpe3ZhciB2Um9vdD1yb290W3ZdO2Jsb2NrR3JhcGguc2V0Tm9kZSh2Um9vdCk7aWYodSl7dmFyIHVSb290PXJvb3RbdV0scHJldk1heD1ibG9ja0dyYXBoLmVkZ2UodVJvb3QsdlJvb3QpO2Jsb2NrR3JhcGguc2V0RWRnZSh1Um9vdCx2Um9vdCxNYXRoLm1heChzZXBGbihnLHYsdSkscHJldk1heHx8MCkpfXU9dn0pfSk7cmV0dXJuIGJsb2NrR3JhcGh9Ci8qCiAqIFJldHVybnMgdGhlIGFsaWdubWVudCB0aGF0IGhhcyB0aGUgc21hbGxlc3Qgd2lkdGggb2YgdGhlIGdpdmVuIGFsaWdubWVudHMuCiAqL2Z1bmN0aW9uIGZpbmRTbWFsbGVzdFdpZHRoQWxpZ25tZW50KGcseHNzKXtyZXR1cm4gXy5taW5CeShfLnZhbHVlcyh4c3MpLGZ1bmN0aW9uKHhzKXt2YXIgbWF4PU51bWJlci5ORUdBVElWRV9JTkZJTklUWTt2YXIgbWluPU51bWJlci5QT1NJVElWRV9JTkZJTklUWTtfLmZvckluKHhzLGZ1bmN0aW9uKHgsdil7dmFyIGhhbGZXaWR0aD13aWR0aChnLHYpLzI7bWF4PU1hdGgubWF4KHgraGFsZldpZHRoLG1heCk7bWluPU1hdGgubWluKHgtaGFsZldpZHRoLG1pbil9KTtyZXR1cm4gbWF4LW1pbn0pfQovKgogKiBBbGlnbiB0aGUgY29vcmRpbmF0ZXMgb2YgZWFjaCBvZiB0aGUgbGF5b3V0IGFsaWdubWVudHMgc3VjaCB0aGF0CiAqIGxlZnQtYmlhc2VkIGFsaWdubWVudHMgaGF2ZSB0aGVpciBtaW5pbXVtIGNvb3JkaW5hdGUgYXQgdGhlIHNhbWUgcG9pbnQgYXMKICogdGhlIG1pbmltdW0gY29vcmRpbmF0ZSBvZiB0aGUgc21hbGxlc3Qgd2lkdGggYWxpZ25tZW50IGFuZCByaWdodC1iaWFzZWQKICogYWxpZ25tZW50cyBoYXZlIHRoZWlyIG1heGltdW0gY29vcmRpbmF0ZSBhdCB0aGUgc2FtZSBwb2ludCBhcyB0aGUgbWF4aW11bQogKiBjb29yZGluYXRlIG9mIHRoZSBzbWFsbGVzdCB3aWR0aCBhbGlnbm1lbnQuCiAqL2Z1bmN0aW9uIGFsaWduQ29vcmRpbmF0ZXMoeHNzLGFsaWduVG8pe3ZhciBhbGlnblRvVmFscz1fLnZhbHVlcyhhbGlnblRvKSxhbGlnblRvTWluPV8ubWluKGFsaWduVG9WYWxzKSxhbGlnblRvTWF4PV8ubWF4KGFsaWduVG9WYWxzKTtfLmZvckVhY2goWyJ1IiwiZCJdLGZ1bmN0aW9uKHZlcnQpe18uZm9yRWFjaChbImwiLCJyIl0sZnVuY3Rpb24oaG9yaXope3ZhciBhbGlnbm1lbnQ9dmVydCtob3Jpeix4cz14c3NbYWxpZ25tZW50XSxkZWx0YTtpZih4cz09PWFsaWduVG8pcmV0dXJuO3ZhciB4c1ZhbHM9Xy52YWx1ZXMoeHMpO2RlbHRhPWhvcml6PT09ImwiP2FsaWduVG9NaW4tXy5taW4oeHNWYWxzKTphbGlnblRvTWF4LV8ubWF4KHhzVmFscyk7aWYoZGVsdGEpe3hzc1thbGlnbm1lbnRdPV8ubWFwVmFsdWVzKHhzLGZ1bmN0aW9uKHgpe3JldHVybiB4K2RlbHRhfSl9fSl9KX1mdW5jdGlvbiBiYWxhbmNlKHhzcyxhbGlnbil7cmV0dXJuIF8ubWFwVmFsdWVzKHhzcy51bCxmdW5jdGlvbihpZ25vcmUsdil7aWYoYWxpZ24pe3JldHVybiB4c3NbYWxpZ24udG9Mb3dlckNhc2UoKV1bdl19ZWxzZXt2YXIgeHM9Xy5zb3J0QnkoXy5tYXAoeHNzLHYpKTtyZXR1cm4oeHNbMV0reHNbMl0pLzJ9fSl9ZnVuY3Rpb24gcG9zaXRpb25YKGcpe3ZhciBsYXllcmluZz11dGlsLmJ1aWxkTGF5ZXJNYXRyaXgoZyk7dmFyIGNvbmZsaWN0cz1fLm1lcmdlKGZpbmRUeXBlMUNvbmZsaWN0cyhnLGxheWVyaW5nKSxmaW5kVHlwZTJDb25mbGljdHMoZyxsYXllcmluZykpO3ZhciB4c3M9e307dmFyIGFkanVzdGVkTGF5ZXJpbmc7Xy5mb3JFYWNoKFsidSIsImQiXSxmdW5jdGlvbih2ZXJ0KXthZGp1c3RlZExheWVyaW5nPXZlcnQ9PT0idSI/bGF5ZXJpbmc6Xy52YWx1ZXMobGF5ZXJpbmcpLnJldmVyc2UoKTtfLmZvckVhY2goWyJsIiwiciJdLGZ1bmN0aW9uKGhvcml6KXtpZihob3Jpej09PSJyIil7YWRqdXN0ZWRMYXllcmluZz1fLm1hcChhZGp1c3RlZExheWVyaW5nLGZ1bmN0aW9uKGlubmVyKXtyZXR1cm4gXy52YWx1ZXMoaW5uZXIpLnJldmVyc2UoKX0pfXZhciBuZWlnaGJvckZuPSh2ZXJ0PT09InUiP2cucHJlZGVjZXNzb3JzOmcuc3VjY2Vzc29ycykuYmluZChnKTt2YXIgYWxpZ249dmVydGljYWxBbGlnbm1lbnQoZyxhZGp1c3RlZExheWVyaW5nLGNvbmZsaWN0cyxuZWlnaGJvckZuKTt2YXIgeHM9aG9yaXpvbnRhbENvbXBhY3Rpb24oZyxhZGp1c3RlZExheWVyaW5nLGFsaWduLnJvb3QsYWxpZ24uYWxpZ24saG9yaXo9PT0iciIpO2lmKGhvcml6PT09InIiKXt4cz1fLm1hcFZhbHVlcyh4cyxmdW5jdGlvbih4KXtyZXR1cm4teH0pfXhzc1t2ZXJ0K2hvcml6XT14c30pfSk7dmFyIHNtYWxsZXN0V2lkdGg9ZmluZFNtYWxsZXN0V2lkdGhBbGlnbm1lbnQoZyx4c3MpO2FsaWduQ29vcmRpbmF0ZXMoeHNzLHNtYWxsZXN0V2lkdGgpO3JldHVybiBiYWxhbmNlKHhzcyxnLmdyYXBoKCkuYWxpZ24pfWZ1bmN0aW9uIHNlcChub2RlU2VwLGVkZ2VTZXAscmV2ZXJzZVNlcCl7cmV0dXJuIGZ1bmN0aW9uKGcsdix3KXt2YXIgdkxhYmVsPWcubm9kZSh2KTt2YXIgd0xhYmVsPWcubm9kZSh3KTt2YXIgc3VtPTA7dmFyIGRlbHRhO3N1bSs9dkxhYmVsLndpZHRoLzI7aWYoXy5oYXModkxhYmVsLCJsYWJlbHBvcyIpKXtzd2l0Y2godkxhYmVsLmxhYmVscG9zLnRvTG93ZXJDYXNlKCkpe2Nhc2UibCI6ZGVsdGE9LXZMYWJlbC53aWR0aC8yO2JyZWFrO2Nhc2UiciI6ZGVsdGE9dkxhYmVsLndpZHRoLzI7YnJlYWt9fWlmKGRlbHRhKXtzdW0rPXJldmVyc2VTZXA/ZGVsdGE6LWRlbHRhfWRlbHRhPTA7c3VtKz0odkxhYmVsLmR1bW15P2VkZ2VTZXA6bm9kZVNlcCkvMjtzdW0rPSh3TGFiZWwuZHVtbXk/ZWRnZVNlcDpub2RlU2VwKS8yO3N1bSs9d0xhYmVsLndpZHRoLzI7aWYoXy5oYXMod0xhYmVsLCJsYWJlbHBvcyIpKXtzd2l0Y2god0xhYmVsLmxhYmVscG9zLnRvTG93ZXJDYXNlKCkpe2Nhc2UibCI6ZGVsdGE9d0xhYmVsLndpZHRoLzI7YnJlYWs7Y2FzZSJyIjpkZWx0YT0td0xhYmVsLndpZHRoLzI7YnJlYWt9fWlmKGRlbHRhKXtzdW0rPXJldmVyc2VTZXA/ZGVsdGE6LWRlbHRhfWRlbHRhPTA7cmV0dXJuIHN1bX19ZnVuY3Rpb24gd2lkdGgoZyx2KXtyZXR1cm4gZy5ub2RlKHYpLndpZHRofX0seyIuLi9ncmFwaGxpYiI6NjcsIi4uL2xvZGFzaCI6NzAsIi4uL3V0aWwiOjg5fV0sODQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTt2YXIgdXRpbD1yZXF1aXJlKCIuLi91dGlsIik7dmFyIHBvc2l0aW9uWD1yZXF1aXJlKCIuL2JrIikucG9zaXRpb25YO21vZHVsZS5leHBvcnRzPXBvc2l0aW9uO2Z1bmN0aW9uIHBvc2l0aW9uKGcpe2c9dXRpbC5hc05vbkNvbXBvdW5kR3JhcGgoZyk7cG9zaXRpb25ZKGcpO18uZm9yRWFjaChwb3NpdGlvblgoZyksZnVuY3Rpb24oeCx2KXtnLm5vZGUodikueD14fSl9ZnVuY3Rpb24gcG9zaXRpb25ZKGcpe3ZhciBsYXllcmluZz11dGlsLmJ1aWxkTGF5ZXJNYXRyaXgoZyk7dmFyIHJhbmtTZXA9Zy5ncmFwaCgpLnJhbmtzZXA7dmFyIHByZXZZPTA7Xy5mb3JFYWNoKGxheWVyaW5nLGZ1bmN0aW9uKGxheWVyKXt2YXIgbWF4SGVpZ2h0PV8ubWF4KF8ubWFwKGxheWVyLGZ1bmN0aW9uKHYpe3JldHVybiBnLm5vZGUodikuaGVpZ2h0fSkpO18uZm9yRWFjaChsYXllcixmdW5jdGlvbih2KXtnLm5vZGUodikueT1wcmV2WSttYXhIZWlnaHQvMn0pO3ByZXZZKz1tYXhIZWlnaHQrcmFua1NlcH0pfX0seyIuLi9sb2Rhc2giOjcwLCIuLi91dGlsIjo4OSwiLi9iayI6ODN9XSw4NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4uL2xvZGFzaCIpO3ZhciBHcmFwaD1yZXF1aXJlKCIuLi9ncmFwaGxpYiIpLkdyYXBoO3ZhciBzbGFjaz1yZXF1aXJlKCIuL3V0aWwiKS5zbGFjazttb2R1bGUuZXhwb3J0cz1mZWFzaWJsZVRyZWU7Ci8qCiAqIENvbnN0cnVjdHMgYSBzcGFubmluZyB0cmVlIHdpdGggdGlnaHQgZWRnZXMgYW5kIGFkanVzdGVkIHRoZSBpbnB1dCBub2RlJ3MKICogcmFua3MgdG8gYWNoaWV2ZSB0aGlzLiBBIHRpZ2h0IGVkZ2UgaXMgb25lIHRoYXQgaXMgaGFzIGEgbGVuZ3RoIHRoYXQgbWF0Y2hlcwogKiBpdHMgIm1pbmxlbiIgYXR0cmlidXRlLgogKgogKiBUaGUgYmFzaWMgc3RydWN0dXJlIGZvciB0aGlzIGZ1bmN0aW9uIGlzIGRlcml2ZWQgZnJvbSBHYW5zbmVyLCBldCBhbC4sICJBCiAqIFRlY2huaXF1ZSBmb3IgRHJhd2luZyBEaXJlY3RlZCBHcmFwaHMuIgogKgogKiBQcmUtY29uZGl0aW9uczoKICoKICogICAgMS4gR3JhcGggbXVzdCBiZSBhIERBRy4KICogICAgMi4gR3JhcGggbXVzdCBiZSBjb25uZWN0ZWQuCiAqICAgIDMuIEdyYXBoIG11c3QgaGF2ZSBhdCBsZWFzdCBvbmUgbm9kZS4KICogICAgNS4gR3JhcGggbm9kZXMgbXVzdCBoYXZlIGJlZW4gcHJldmlvdXNseSBhc3NpZ25lZCBhICJyYW5rIiBwcm9wZXJ0eSB0aGF0CiAqICAgICAgIHJlc3BlY3RzIHRoZSAibWlubGVuIiBwcm9wZXJ0eSBvZiBpbmNpZGVudCBlZGdlcy4KICogICAgNi4gR3JhcGggZWRnZXMgbXVzdCBoYXZlIGEgIm1pbmxlbiIgcHJvcGVydHkuCiAqCiAqIFBvc3QtY29uZGl0aW9uczoKICoKICogICAgLSBHcmFwaCBub2RlcyB3aWxsIGhhdmUgdGhlaXIgcmFuayBhZGp1c3RlZCB0byBlbnN1cmUgdGhhdCBhbGwgZWRnZXMgYXJlCiAqICAgICAgdGlnaHQuCiAqCiAqIFJldHVybnMgYSB0cmVlICh1bmRpcmVjdGVkIGdyYXBoKSB0aGF0IGlzIGNvbnN0cnVjdGVkIHVzaW5nIG9ubHkgInRpZ2h0IgogKiBlZGdlcy4KICovZnVuY3Rpb24gZmVhc2libGVUcmVlKGcpe3ZhciB0PW5ldyBHcmFwaCh7ZGlyZWN0ZWQ6ZmFsc2V9KTsKLy8gQ2hvb3NlIGFyYml0cmFyeSBub2RlIGZyb20gd2hpY2ggdG8gc3RhcnQgb3VyIHRyZWUKdmFyIHN0YXJ0PWcubm9kZXMoKVswXTt2YXIgc2l6ZT1nLm5vZGVDb3VudCgpO3Quc2V0Tm9kZShzdGFydCx7fSk7dmFyIGVkZ2UsZGVsdGE7d2hpbGUodGlnaHRUcmVlKHQsZyk8c2l6ZSl7ZWRnZT1maW5kTWluU2xhY2tFZGdlKHQsZyk7ZGVsdGE9dC5oYXNOb2RlKGVkZ2Uudik/c2xhY2soZyxlZGdlKTotc2xhY2soZyxlZGdlKTtzaGlmdFJhbmtzKHQsZyxkZWx0YSl9cmV0dXJuIHR9Ci8qCiAqIEZpbmRzIGEgbWF4aW1hbCB0cmVlIG9mIHRpZ2h0IGVkZ2VzIGFuZCByZXR1cm5zIHRoZSBudW1iZXIgb2Ygbm9kZXMgaW4gdGhlCiAqIHRyZWUuCiAqL2Z1bmN0aW9uIHRpZ2h0VHJlZSh0LGcpe2Z1bmN0aW9uIGRmcyh2KXtfLmZvckVhY2goZy5ub2RlRWRnZXModiksZnVuY3Rpb24oZSl7dmFyIGVkZ2VWPWUudix3PXY9PT1lZGdlVj9lLnc6ZWRnZVY7aWYoIXQuaGFzTm9kZSh3KSYmIXNsYWNrKGcsZSkpe3Quc2V0Tm9kZSh3LHt9KTt0LnNldEVkZ2Uodix3LHt9KTtkZnModyl9fSl9Xy5mb3JFYWNoKHQubm9kZXMoKSxkZnMpO3JldHVybiB0Lm5vZGVDb3VudCgpfQovKgogKiBGaW5kcyB0aGUgZWRnZSB3aXRoIHRoZSBzbWFsbGVzdCBzbGFjayB0aGF0IGlzIGluY2lkZW50IG9uIHRyZWUgYW5kIHJldHVybnMKICogaXQuCiAqL2Z1bmN0aW9uIGZpbmRNaW5TbGFja0VkZ2UodCxnKXtyZXR1cm4gXy5taW5CeShnLmVkZ2VzKCksZnVuY3Rpb24oZSl7aWYodC5oYXNOb2RlKGUudikhPT10Lmhhc05vZGUoZS53KSl7cmV0dXJuIHNsYWNrKGcsZSl9fSl9ZnVuY3Rpb24gc2hpZnRSYW5rcyh0LGcsZGVsdGEpe18uZm9yRWFjaCh0Lm5vZGVzKCksZnVuY3Rpb24odil7Zy5ub2RlKHYpLnJhbmsrPWRlbHRhfSl9fSx7Ii4uL2dyYXBobGliIjo2NywiLi4vbG9kYXNoIjo3MCwiLi91dGlsIjo4OH1dLDg2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7dmFyIHJhbmtVdGlsPXJlcXVpcmUoIi4vdXRpbCIpO3ZhciBsb25nZXN0UGF0aD1yYW5rVXRpbC5sb25nZXN0UGF0aDt2YXIgZmVhc2libGVUcmVlPXJlcXVpcmUoIi4vZmVhc2libGUtdHJlZSIpO3ZhciBuZXR3b3JrU2ltcGxleD1yZXF1aXJlKCIuL25ldHdvcmstc2ltcGxleCIpO21vZHVsZS5leHBvcnRzPXJhbms7Ci8qCiAqIEFzc2lnbnMgYSByYW5rIHRvIGVhY2ggbm9kZSBpbiB0aGUgaW5wdXQgZ3JhcGggdGhhdCByZXNwZWN0cyB0aGUgIm1pbmxlbiIKICogY29uc3RyYWludCBzcGVjaWZpZWQgb24gZWRnZXMgYmV0d2VlbiBub2Rlcy4KICoKICogVGhpcyBiYXNpYyBzdHJ1Y3R1cmUgaXMgZGVyaXZlZCBmcm9tIEdhbnNuZXIsIGV0IGFsLiwgIkEgVGVjaG5pcXVlIGZvcgogKiBEcmF3aW5nIERpcmVjdGVkIEdyYXBocy4iCiAqCiAqIFByZS1jb25kaXRpb25zOgogKgogKiAgICAxLiBHcmFwaCBtdXN0IGJlIGEgY29ubmVjdGVkIERBRwogKiAgICAyLiBHcmFwaCBub2RlcyBtdXN0IGJlIG9iamVjdHMKICogICAgMy4gR3JhcGggZWRnZXMgbXVzdCBoYXZlICJ3ZWlnaHQiIGFuZCAibWlubGVuIiBhdHRyaWJ1dGVzCiAqCiAqIFBvc3QtY29uZGl0aW9uczoKICoKICogICAgMS4gR3JhcGggbm9kZXMgd2lsbCBoYXZlIGEgInJhbmsiIGF0dHJpYnV0ZSBiYXNlZCBvbiB0aGUgcmVzdWx0cyBvZiB0aGUKICogICAgICAgYWxnb3JpdGhtLiBSYW5rcyBjYW4gc3RhcnQgYXQgYW55IGluZGV4IChpbmNsdWRpbmcgbmVnYXRpdmUpLCB3ZSdsbAogKiAgICAgICBmaXggdGhlbSB1cCBsYXRlci4KICovZnVuY3Rpb24gcmFuayhnKXtzd2l0Y2goZy5ncmFwaCgpLnJhbmtlcil7Y2FzZSJuZXR3b3JrLXNpbXBsZXgiOm5ldHdvcmtTaW1wbGV4UmFua2VyKGcpO2JyZWFrO2Nhc2UidGlnaHQtdHJlZSI6dGlnaHRUcmVlUmFua2VyKGcpO2JyZWFrO2Nhc2UibG9uZ2VzdC1wYXRoIjpsb25nZXN0UGF0aFJhbmtlcihnKTticmVhaztkZWZhdWx0Om5ldHdvcmtTaW1wbGV4UmFua2VyKGcpfX0KLy8gQSBmYXN0IGFuZCBzaW1wbGUgcmFua2VyLCBidXQgcmVzdWx0cyBhcmUgZmFyIGZyb20gb3B0aW1hbC4KdmFyIGxvbmdlc3RQYXRoUmFua2VyPWxvbmdlc3RQYXRoO2Z1bmN0aW9uIHRpZ2h0VHJlZVJhbmtlcihnKXtsb25nZXN0UGF0aChnKTtmZWFzaWJsZVRyZWUoZyl9ZnVuY3Rpb24gbmV0d29ya1NpbXBsZXhSYW5rZXIoZyl7bmV0d29ya1NpbXBsZXgoZyl9fSx7Ii4vZmVhc2libGUtdHJlZSI6ODUsIi4vbmV0d29yay1zaW1wbGV4Ijo4NywiLi91dGlsIjo4OH1dLDg3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7dmFyIGZlYXNpYmxlVHJlZT1yZXF1aXJlKCIuL2ZlYXNpYmxlLXRyZWUiKTt2YXIgc2xhY2s9cmVxdWlyZSgiLi91dGlsIikuc2xhY2s7dmFyIGluaXRSYW5rPXJlcXVpcmUoIi4vdXRpbCIpLmxvbmdlc3RQYXRoO3ZhciBwcmVvcmRlcj1yZXF1aXJlKCIuLi9ncmFwaGxpYiIpLmFsZy5wcmVvcmRlcjt2YXIgcG9zdG9yZGVyPXJlcXVpcmUoIi4uL2dyYXBobGliIikuYWxnLnBvc3RvcmRlcjt2YXIgc2ltcGxpZnk9cmVxdWlyZSgiLi4vdXRpbCIpLnNpbXBsaWZ5O21vZHVsZS5leHBvcnRzPW5ldHdvcmtTaW1wbGV4OwovLyBFeHBvc2Ugc29tZSBpbnRlcm5hbHMgZm9yIHRlc3RpbmcgcHVycG9zZXMKbmV0d29ya1NpbXBsZXguaW5pdExvd0xpbVZhbHVlcz1pbml0TG93TGltVmFsdWVzO25ldHdvcmtTaW1wbGV4LmluaXRDdXRWYWx1ZXM9aW5pdEN1dFZhbHVlcztuZXR3b3JrU2ltcGxleC5jYWxjQ3V0VmFsdWU9Y2FsY0N1dFZhbHVlO25ldHdvcmtTaW1wbGV4LmxlYXZlRWRnZT1sZWF2ZUVkZ2U7bmV0d29ya1NpbXBsZXguZW50ZXJFZGdlPWVudGVyRWRnZTtuZXR3b3JrU2ltcGxleC5leGNoYW5nZUVkZ2VzPWV4Y2hhbmdlRWRnZXM7Ci8qCiAqIFRoZSBuZXR3b3JrIHNpbXBsZXggYWxnb3JpdGhtIGFzc2lnbnMgcmFua3MgdG8gZWFjaCBub2RlIGluIHRoZSBpbnB1dCBncmFwaAogKiBhbmQgaXRlcmF0aXZlbHkgaW1wcm92ZXMgdGhlIHJhbmtpbmcgdG8gcmVkdWNlIHRoZSBsZW5ndGggb2YgZWRnZXMuCiAqCiAqIFByZWNvbmRpdGlvbnM6CiAqCiAqICAgIDEuIFRoZSBpbnB1dCBncmFwaCBtdXN0IGJlIGEgREFHLgogKiAgICAyLiBBbGwgbm9kZXMgaW4gdGhlIGdyYXBoIG11c3QgaGF2ZSBhbiBvYmplY3QgdmFsdWUuCiAqICAgIDMuIEFsbCBlZGdlcyBpbiB0aGUgZ3JhcGggbXVzdCBoYXZlICJtaW5sZW4iIGFuZCAid2VpZ2h0IiBhdHRyaWJ1dGVzLgogKgogKiBQb3N0Y29uZGl0aW9uczoKICoKICogICAgMS4gQWxsIG5vZGVzIGluIHRoZSBncmFwaCB3aWxsIGhhdmUgYW4gYXNzaWduZWQgInJhbmsiIGF0dHJpYnV0ZSB0aGF0IGhhcwogKiAgICAgICBiZWVuIG9wdGltaXplZCBieSB0aGUgbmV0d29yayBzaW1wbGV4IGFsZ29yaXRobS4gUmFua3Mgc3RhcnQgYXQgMC4KICoKICoKICogQSByb3VnaCBza2V0Y2ggb2YgdGhlIGFsZ29yaXRobSBpcyBhcyBmb2xsb3dzOgogKgogKiAgICAxLiBBc3NpZ24gaW5pdGlhbCByYW5rcyB0byBlYWNoIG5vZGUuIFdlIHVzZSB0aGUgbG9uZ2VzdCBwYXRoIGFsZ29yaXRobSwKICogICAgICAgd2hpY2ggYXNzaWducyByYW5rcyB0byB0aGUgbG93ZXN0IHBvc2l0aW9uIHBvc3NpYmxlLiBJbiBnZW5lcmFsIHRoaXMKICogICAgICAgbGVhZHMgdG8gdmVyeSB3aWRlIGJvdHRvbSByYW5rcyBhbmQgdW5uZWNlc3NhcmlseSBsb25nIGVkZ2VzLgogKiAgICAyLiBDb25zdHJ1Y3QgYSBmZWFzaWJsZSB0aWdodCB0cmVlLiBBIHRpZ2h0IHRyZWUgaXMgb25lIHN1Y2ggdGhhdCBhbGwKICogICAgICAgZWRnZXMgaW4gdGhlIHRyZWUgaGF2ZSBubyBzbGFjayAoZGlmZmVyZW5jZSBiZXR3ZWVuIGxlbmd0aCBvZiBlZGdlCiAqICAgICAgIGFuZCBtaW5sZW4gZm9yIHRoZSBlZGdlKS4gVGhpcyBieSBpdHNlbGYgZ3JlYXRseSBpbXByb3ZlcyB0aGUgYXNzaWduZWQKICogICAgICAgcmFua2luZ3MgYnkgc2hvcnRpbmcgZWRnZXMuCiAqICAgIDMuIEl0ZXJhdGl2ZWx5IGZpbmQgZWRnZXMgdGhhdCBoYXZlIG5lZ2F0aXZlIGN1dCB2YWx1ZXMuIEdlbmVyYWxseSBhCiAqICAgICAgIG5lZ2F0aXZlIGN1dCB2YWx1ZSBpbmRpY2F0ZXMgdGhhdCB0aGUgZWRnZSBjb3VsZCBiZSByZW1vdmVkIGFuZCBhIG5ldwogKiAgICAgICB0cmVlIGVkZ2UgY291bGQgYmUgYWRkZWQgdG8gcHJvZHVjZSBhIG1vcmUgY29tcGFjdCBncmFwaC4KICoKICogTXVjaCBvZiB0aGUgYWxnb3JpdGhtcyBoZXJlIGFyZSBkZXJpdmVkIGZyb20gR2Fuc25lciwgZXQgYWwuLCAiQSBUZWNobmlxdWUKICogZm9yIERyYXdpbmcgRGlyZWN0ZWQgR3JhcGhzLiIgVGhlIHN0cnVjdHVyZSBvZiB0aGUgZmlsZSByb3VnaGx5IGZvbGxvd3MgdGhlCiAqIHN0cnVjdHVyZSBvZiB0aGUgb3ZlcmFsbCBhbGdvcml0aG0uCiAqL2Z1bmN0aW9uIG5ldHdvcmtTaW1wbGV4KGcpe2c9c2ltcGxpZnkoZyk7aW5pdFJhbmsoZyk7dmFyIHQ9ZmVhc2libGVUcmVlKGcpO2luaXRMb3dMaW1WYWx1ZXModCk7aW5pdEN1dFZhbHVlcyh0LGcpO3ZhciBlLGY7d2hpbGUoZT1sZWF2ZUVkZ2UodCkpe2Y9ZW50ZXJFZGdlKHQsZyxlKTtleGNoYW5nZUVkZ2VzKHQsZyxlLGYpfX0KLyoKICogSW5pdGlhbGl6ZXMgY3V0IHZhbHVlcyBmb3IgYWxsIGVkZ2VzIGluIHRoZSB0cmVlLgogKi9mdW5jdGlvbiBpbml0Q3V0VmFsdWVzKHQsZyl7dmFyIHZzPXBvc3RvcmRlcih0LHQubm9kZXMoKSk7dnM9dnMuc2xpY2UoMCx2cy5sZW5ndGgtMSk7Xy5mb3JFYWNoKHZzLGZ1bmN0aW9uKHYpe2Fzc2lnbkN1dFZhbHVlKHQsZyx2KX0pfWZ1bmN0aW9uIGFzc2lnbkN1dFZhbHVlKHQsZyxjaGlsZCl7dmFyIGNoaWxkTGFiPXQubm9kZShjaGlsZCk7dmFyIHBhcmVudD1jaGlsZExhYi5wYXJlbnQ7dC5lZGdlKGNoaWxkLHBhcmVudCkuY3V0dmFsdWU9Y2FsY0N1dFZhbHVlKHQsZyxjaGlsZCl9Ci8qCiAqIEdpdmVuIHRoZSB0aWdodCB0cmVlLCBpdHMgZ3JhcGgsIGFuZCBhIGNoaWxkIGluIHRoZSBncmFwaCBjYWxjdWxhdGUgYW5kCiAqIHJldHVybiB0aGUgY3V0IHZhbHVlIGZvciB0aGUgZWRnZSBiZXR3ZWVuIHRoZSBjaGlsZCBhbmQgaXRzIHBhcmVudC4KICovZnVuY3Rpb24gY2FsY0N1dFZhbHVlKHQsZyxjaGlsZCl7dmFyIGNoaWxkTGFiPXQubm9kZShjaGlsZCk7dmFyIHBhcmVudD1jaGlsZExhYi5wYXJlbnQ7Ci8vIFRydWUgaWYgdGhlIGNoaWxkIGlzIG9uIHRoZSB0YWlsIGVuZCBvZiB0aGUgZWRnZSBpbiB0aGUgZGlyZWN0ZWQgZ3JhcGgKdmFyIGNoaWxkSXNUYWlsPXRydWU7Ci8vIFRoZSBncmFwaCdzIHZpZXcgb2YgdGhlIHRyZWUgZWRnZSB3ZSdyZSBpbnNwZWN0aW5nCnZhciBncmFwaEVkZ2U9Zy5lZGdlKGNoaWxkLHBhcmVudCk7Ci8vIFRoZSBhY2N1bXVsYXRlZCBjdXQgdmFsdWUgZm9yIHRoZSBlZGdlIGJldHdlZW4gdGhpcyBub2RlIGFuZCBpdHMgcGFyZW50CnZhciBjdXRWYWx1ZT0wO2lmKCFncmFwaEVkZ2Upe2NoaWxkSXNUYWlsPWZhbHNlO2dyYXBoRWRnZT1nLmVkZ2UocGFyZW50LGNoaWxkKX1jdXRWYWx1ZT1ncmFwaEVkZ2Uud2VpZ2h0O18uZm9yRWFjaChnLm5vZGVFZGdlcyhjaGlsZCksZnVuY3Rpb24oZSl7dmFyIGlzT3V0RWRnZT1lLnY9PT1jaGlsZCxvdGhlcj1pc091dEVkZ2U/ZS53OmUudjtpZihvdGhlciE9PXBhcmVudCl7dmFyIHBvaW50c1RvSGVhZD1pc091dEVkZ2U9PT1jaGlsZElzVGFpbCxvdGhlcldlaWdodD1nLmVkZ2UoZSkud2VpZ2h0O2N1dFZhbHVlKz1wb2ludHNUb0hlYWQ/b3RoZXJXZWlnaHQ6LW90aGVyV2VpZ2h0O2lmKGlzVHJlZUVkZ2UodCxjaGlsZCxvdGhlcikpe3ZhciBvdGhlckN1dFZhbHVlPXQuZWRnZShjaGlsZCxvdGhlcikuY3V0dmFsdWU7Y3V0VmFsdWUrPXBvaW50c1RvSGVhZD8tb3RoZXJDdXRWYWx1ZTpvdGhlckN1dFZhbHVlfX19KTtyZXR1cm4gY3V0VmFsdWV9ZnVuY3Rpb24gaW5pdExvd0xpbVZhbHVlcyh0cmVlLHJvb3Qpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil7cm9vdD10cmVlLm5vZGVzKClbMF19ZGZzQXNzaWduTG93TGltKHRyZWUse30sMSxyb290KX1mdW5jdGlvbiBkZnNBc3NpZ25Mb3dMaW0odHJlZSx2aXNpdGVkLG5leHRMaW0sdixwYXJlbnQpe3ZhciBsb3c9bmV4dExpbTt2YXIgbGFiZWw9dHJlZS5ub2RlKHYpO3Zpc2l0ZWRbdl09dHJ1ZTtfLmZvckVhY2godHJlZS5uZWlnaGJvcnModiksZnVuY3Rpb24odyl7aWYoIV8uaGFzKHZpc2l0ZWQsdykpe25leHRMaW09ZGZzQXNzaWduTG93TGltKHRyZWUsdmlzaXRlZCxuZXh0TGltLHcsdil9fSk7bGFiZWwubG93PWxvdztsYWJlbC5saW09bmV4dExpbSsrO2lmKHBhcmVudCl7bGFiZWwucGFyZW50PXBhcmVudH1lbHNlewovLyBUT0RPIHNob3VsZCBiZSBhYmxlIHRvIHJlbW92ZSB0aGlzIHdoZW4gd2UgaW5jcmVtZW50YWxseSB1cGRhdGUgbG93IGxpbQpkZWxldGUgbGFiZWwucGFyZW50fXJldHVybiBuZXh0TGltfWZ1bmN0aW9uIGxlYXZlRWRnZSh0cmVlKXtyZXR1cm4gXy5maW5kKHRyZWUuZWRnZXMoKSxmdW5jdGlvbihlKXtyZXR1cm4gdHJlZS5lZGdlKGUpLmN1dHZhbHVlPDB9KX1mdW5jdGlvbiBlbnRlckVkZ2UodCxnLGVkZ2Upe3ZhciB2PWVkZ2Uudjt2YXIgdz1lZGdlLnc7Ci8vIEZvciB0aGUgcmVzdCBvZiB0aGlzIGZ1bmN0aW9uIHdlIGFzc3VtZSB0aGF0IHYgaXMgdGhlIHRhaWwgYW5kIHcgaXMgdGhlCi8vIGhlYWQsIHNvIGlmIHdlIGRvbid0IGhhdmUgdGhpcyBlZGdlIGluIHRoZSBncmFwaCB3ZSBzaG91bGQgZmxpcCBpdCB0bwovLyBtYXRjaCB0aGUgY29ycmVjdCBvcmllbnRhdGlvbi4KaWYoIWcuaGFzRWRnZSh2LHcpKXt2PWVkZ2Uudzt3PWVkZ2Uudn12YXIgdkxhYmVsPXQubm9kZSh2KTt2YXIgd0xhYmVsPXQubm9kZSh3KTt2YXIgdGFpbExhYmVsPXZMYWJlbDt2YXIgZmxpcD1mYWxzZTsKLy8gSWYgdGhlIHJvb3QgaXMgaW4gdGhlIHRhaWwgb2YgdGhlIGVkZ2UgdGhlbiB3ZSBuZWVkIHRvIGZsaXAgdGhlIGxvZ2ljIHRoYXQKLy8gY2hlY2tzIGZvciB0aGUgaGVhZCBhbmQgdGFpbCBub2RlcyBpbiB0aGUgY2FuZGlkYXRlcyBmdW5jdGlvbiBiZWxvdy4KaWYodkxhYmVsLmxpbT53TGFiZWwubGltKXt0YWlsTGFiZWw9d0xhYmVsO2ZsaXA9dHJ1ZX12YXIgY2FuZGlkYXRlcz1fLmZpbHRlcihnLmVkZ2VzKCksZnVuY3Rpb24oZWRnZSl7cmV0dXJuIGZsaXA9PT1pc0Rlc2NlbmRhbnQodCx0Lm5vZGUoZWRnZS52KSx0YWlsTGFiZWwpJiZmbGlwIT09aXNEZXNjZW5kYW50KHQsdC5ub2RlKGVkZ2UudyksdGFpbExhYmVsKX0pO3JldHVybiBfLm1pbkJ5KGNhbmRpZGF0ZXMsZnVuY3Rpb24oZWRnZSl7cmV0dXJuIHNsYWNrKGcsZWRnZSl9KX1mdW5jdGlvbiBleGNoYW5nZUVkZ2VzKHQsZyxlLGYpe3ZhciB2PWUudjt2YXIgdz1lLnc7dC5yZW1vdmVFZGdlKHYsdyk7dC5zZXRFZGdlKGYudixmLncse30pO2luaXRMb3dMaW1WYWx1ZXModCk7aW5pdEN1dFZhbHVlcyh0LGcpO3VwZGF0ZVJhbmtzKHQsZyl9ZnVuY3Rpb24gdXBkYXRlUmFua3ModCxnKXt2YXIgcm9vdD1fLmZpbmQodC5ub2RlcygpLGZ1bmN0aW9uKHYpe3JldHVybiFnLm5vZGUodikucGFyZW50fSk7dmFyIHZzPXByZW9yZGVyKHQscm9vdCk7dnM9dnMuc2xpY2UoMSk7Xy5mb3JFYWNoKHZzLGZ1bmN0aW9uKHYpe3ZhciBwYXJlbnQ9dC5ub2RlKHYpLnBhcmVudCxlZGdlPWcuZWRnZSh2LHBhcmVudCksZmxpcHBlZD1mYWxzZTtpZighZWRnZSl7ZWRnZT1nLmVkZ2UocGFyZW50LHYpO2ZsaXBwZWQ9dHJ1ZX1nLm5vZGUodikucmFuaz1nLm5vZGUocGFyZW50KS5yYW5rKyhmbGlwcGVkP2VkZ2UubWlubGVuOi1lZGdlLm1pbmxlbil9KX0KLyoKICogUmV0dXJucyB0cnVlIGlmIHRoZSBlZGdlIGlzIGluIHRoZSB0cmVlLgogKi9mdW5jdGlvbiBpc1RyZWVFZGdlKHRyZWUsdSx2KXtyZXR1cm4gdHJlZS5oYXNFZGdlKHUsdil9Ci8qCiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIG5vZGUgaXMgZGVzY2VuZGFudCBvZiB0aGUgcm9vdCBub2RlIHBlciB0aGUKICogYXNzaWduZWQgbG93IGFuZCBsaW0gYXR0cmlidXRlcyBpbiB0aGUgdHJlZS4KICovZnVuY3Rpb24gaXNEZXNjZW5kYW50KHRyZWUsdkxhYmVsLHJvb3RMYWJlbCl7cmV0dXJuIHJvb3RMYWJlbC5sb3c8PXZMYWJlbC5saW0mJnZMYWJlbC5saW08PXJvb3RMYWJlbC5saW19fSx7Ii4uL2dyYXBobGliIjo2NywiLi4vbG9kYXNoIjo3MCwiLi4vdXRpbCI6ODksIi4vZmVhc2libGUtdHJlZSI6ODUsIi4vdXRpbCI6ODh9XSw4ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4uL2xvZGFzaCIpO21vZHVsZS5leHBvcnRzPXtsb25nZXN0UGF0aDpsb25nZXN0UGF0aCxzbGFjazpzbGFja307Ci8qCiAqIEluaXRpYWxpemVzIHJhbmtzIGZvciB0aGUgaW5wdXQgZ3JhcGggdXNpbmcgdGhlIGxvbmdlc3QgcGF0aCBhbGdvcml0aG0uIFRoaXMKICogYWxnb3JpdGhtIHNjYWxlcyB3ZWxsIGFuZCBpcyBmYXN0IGluIHByYWN0aWNlLCBpdCB5aWVsZHMgcmF0aGVyIHBvb3IKICogc29sdXRpb25zLiBOb2RlcyBhcmUgcHVzaGVkIHRvIHRoZSBsb3dlc3QgbGF5ZXIgcG9zc2libGUsIGxlYXZpbmcgdGhlIGJvdHRvbQogKiByYW5rcyB3aWRlIGFuZCBsZWF2aW5nIGVkZ2VzIGxvbmdlciB0aGFuIG5lY2Vzc2FyeS4gSG93ZXZlciwgZHVlIHRvIGl0cwogKiBzcGVlZCwgdGhpcyBhbGdvcml0aG0gaXMgZ29vZCBmb3IgZ2V0dGluZyBhbiBpbml0aWFsIHJhbmtpbmcgdGhhdCBjYW4gYmUgZmVkCiAqIGludG8gb3RoZXIgYWxnb3JpdGhtcy4KICoKICogVGhpcyBhbGdvcml0aG0gZG9lcyBub3Qgbm9ybWFsaXplIGxheWVycyBiZWNhdXNlIGl0IHdpbGwgYmUgdXNlZCBieSBvdGhlcgogKiBhbGdvcml0aG1zIGluIG1vc3QgY2FzZXMuIElmIHVzaW5nIHRoaXMgYWxnb3JpdGhtIGRpcmVjdGx5LCBiZSBzdXJlIHRvCiAqIHJ1biBub3JtYWxpemUgYXQgdGhlIGVuZC4KICoKICogUHJlLWNvbmRpdGlvbnM6CiAqCiAqICAgIDEuIElucHV0IGdyYXBoIGlzIGEgREFHLgogKiAgICAyLiBJbnB1dCBncmFwaCBub2RlIGxhYmVscyBjYW4gYmUgYXNzaWduZWQgcHJvcGVydGllcy4KICoKICogUG9zdC1jb25kaXRpb25zOgogKgogKiAgICAxLiBFYWNoIG5vZGUgd2lsbCBiZSBhc3NpZ24gYW4gKHVubm9ybWFsaXplZCkgInJhbmsiIHByb3BlcnR5LgogKi9mdW5jdGlvbiBsb25nZXN0UGF0aChnKXt2YXIgdmlzaXRlZD17fTtmdW5jdGlvbiBkZnModil7dmFyIGxhYmVsPWcubm9kZSh2KTtpZihfLmhhcyh2aXNpdGVkLHYpKXtyZXR1cm4gbGFiZWwucmFua312aXNpdGVkW3ZdPXRydWU7dmFyIHJhbms9Xy5taW4oXy5tYXAoZy5vdXRFZGdlcyh2KSxmdW5jdGlvbihlKXtyZXR1cm4gZGZzKGUudyktZy5lZGdlKGUpLm1pbmxlbn0pKTtpZihyYW5rPT09TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZfHwvLyByZXR1cm4gdmFsdWUgb2YgXy5tYXAoW10pIGZvciBMb2Rhc2ggMwpyYW5rPT09dW5kZWZpbmVkfHwvLyByZXR1cm4gdmFsdWUgb2YgXy5tYXAoW10pIGZvciBMb2Rhc2ggNApyYW5rPT09bnVsbCl7Ly8gcmV0dXJuIHZhbHVlIG9mIF8ubWFwKFtudWxsXSkKcmFuaz0wfXJldHVybiBsYWJlbC5yYW5rPXJhbmt9Xy5mb3JFYWNoKGcuc291cmNlcygpLGRmcyl9Ci8qCiAqIFJldHVybnMgdGhlIGFtb3VudCBvZiBzbGFjayBmb3IgdGhlIGdpdmVuIGVkZ2UuIFRoZSBzbGFjayBpcyBkZWZpbmVkIGFzIHRoZQogKiBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGxlbmd0aCBvZiB0aGUgZWRnZSBhbmQgaXRzIG1pbmltdW0gbGVuZ3RoLgogKi9mdW5jdGlvbiBzbGFjayhnLGUpe3JldHVybiBnLm5vZGUoZS53KS5yYW5rLWcubm9kZShlLnYpLnJhbmstZy5lZGdlKGUpLm1pbmxlbn19LHsiLi4vbG9kYXNoIjo3MH1dLDg5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyogZXNsaW50ICJuby1jb25zb2xlIjogb2ZmICovCiJ1c2Ugc3RyaWN0Ijt2YXIgXz1yZXF1aXJlKCIuL2xvZGFzaCIpO3ZhciBHcmFwaD1yZXF1aXJlKCIuL2dyYXBobGliIikuR3JhcGg7bW9kdWxlLmV4cG9ydHM9e2FkZER1bW15Tm9kZTphZGREdW1teU5vZGUsc2ltcGxpZnk6c2ltcGxpZnksYXNOb25Db21wb3VuZEdyYXBoOmFzTm9uQ29tcG91bmRHcmFwaCxzdWNjZXNzb3JXZWlnaHRzOnN1Y2Nlc3NvcldlaWdodHMscHJlZGVjZXNzb3JXZWlnaHRzOnByZWRlY2Vzc29yV2VpZ2h0cyxpbnRlcnNlY3RSZWN0OmludGVyc2VjdFJlY3QsYnVpbGRMYXllck1hdHJpeDpidWlsZExheWVyTWF0cml4LG5vcm1hbGl6ZVJhbmtzOm5vcm1hbGl6ZVJhbmtzLHJlbW92ZUVtcHR5UmFua3M6cmVtb3ZlRW1wdHlSYW5rcyxhZGRCb3JkZXJOb2RlOmFkZEJvcmRlck5vZGUsbWF4UmFuazptYXhSYW5rLHBhcnRpdGlvbjpwYXJ0aXRpb24sdGltZTp0aW1lLG5vdGltZTpub3RpbWV9OwovKgogKiBBZGRzIGEgZHVtbXkgbm9kZSB0byB0aGUgZ3JhcGggYW5kIHJldHVybiB2LgogKi9mdW5jdGlvbiBhZGREdW1teU5vZGUoZyx0eXBlLGF0dHJzLG5hbWUpe3ZhciB2O2Rve3Y9Xy51bmlxdWVJZChuYW1lKX13aGlsZShnLmhhc05vZGUodikpO2F0dHJzLmR1bW15PXR5cGU7Zy5zZXROb2RlKHYsYXR0cnMpO3JldHVybiB2fQovKgogKiBSZXR1cm5zIGEgbmV3IGdyYXBoIHdpdGggb25seSBzaW1wbGUgZWRnZXMuIEhhbmRsZXMgYWdncmVnYXRpb24gb2YgZGF0YQogKiBhc3NvY2lhdGVkIHdpdGggbXVsdGktZWRnZXMuCiAqL2Z1bmN0aW9uIHNpbXBsaWZ5KGcpe3ZhciBzaW1wbGlmaWVkPShuZXcgR3JhcGgpLnNldEdyYXBoKGcuZ3JhcGgoKSk7Xy5mb3JFYWNoKGcubm9kZXMoKSxmdW5jdGlvbih2KXtzaW1wbGlmaWVkLnNldE5vZGUodixnLm5vZGUodikpfSk7Xy5mb3JFYWNoKGcuZWRnZXMoKSxmdW5jdGlvbihlKXt2YXIgc2ltcGxlTGFiZWw9c2ltcGxpZmllZC5lZGdlKGUudixlLncpfHx7d2VpZ2h0OjAsbWlubGVuOjF9O3ZhciBsYWJlbD1nLmVkZ2UoZSk7c2ltcGxpZmllZC5zZXRFZGdlKGUudixlLncse3dlaWdodDpzaW1wbGVMYWJlbC53ZWlnaHQrbGFiZWwud2VpZ2h0LG1pbmxlbjpNYXRoLm1heChzaW1wbGVMYWJlbC5taW5sZW4sbGFiZWwubWlubGVuKX0pfSk7cmV0dXJuIHNpbXBsaWZpZWR9ZnVuY3Rpb24gYXNOb25Db21wb3VuZEdyYXBoKGcpe3ZhciBzaW1wbGlmaWVkPW5ldyBHcmFwaCh7bXVsdGlncmFwaDpnLmlzTXVsdGlncmFwaCgpfSkuc2V0R3JhcGgoZy5ncmFwaCgpKTtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe2lmKCFnLmNoaWxkcmVuKHYpLmxlbmd0aCl7c2ltcGxpZmllZC5zZXROb2RlKHYsZy5ub2RlKHYpKX19KTtfLmZvckVhY2goZy5lZGdlcygpLGZ1bmN0aW9uKGUpe3NpbXBsaWZpZWQuc2V0RWRnZShlLGcuZWRnZShlKSl9KTtyZXR1cm4gc2ltcGxpZmllZH1mdW5jdGlvbiBzdWNjZXNzb3JXZWlnaHRzKGcpe3ZhciB3ZWlnaHRNYXA9Xy5tYXAoZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciBzdWNzPXt9O18uZm9yRWFjaChnLm91dEVkZ2VzKHYpLGZ1bmN0aW9uKGUpe3N1Y3NbZS53XT0oc3Vjc1tlLnddfHwwKStnLmVkZ2UoZSkud2VpZ2h0fSk7cmV0dXJuIHN1Y3N9KTtyZXR1cm4gXy56aXBPYmplY3QoZy5ub2RlcygpLHdlaWdodE1hcCl9ZnVuY3Rpb24gcHJlZGVjZXNzb3JXZWlnaHRzKGcpe3ZhciB3ZWlnaHRNYXA9Xy5tYXAoZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciBwcmVkcz17fTtfLmZvckVhY2goZy5pbkVkZ2VzKHYpLGZ1bmN0aW9uKGUpe3ByZWRzW2Uudl09KHByZWRzW2Uudl18fDApK2cuZWRnZShlKS53ZWlnaHR9KTtyZXR1cm4gcHJlZHN9KTtyZXR1cm4gXy56aXBPYmplY3QoZy5ub2RlcygpLHdlaWdodE1hcCl9Ci8qCiAqIEZpbmRzIHdoZXJlIGEgbGluZSBzdGFydGluZyBhdCBwb2ludCAoe3gsIHl9KSB3b3VsZCBpbnRlcnNlY3QgYSByZWN0YW5nbGUKICogKHt4LCB5LCB3aWR0aCwgaGVpZ2h0fSkgaWYgaXQgd2VyZSBwb2ludGluZyBhdCB0aGUgcmVjdGFuZ2xlJ3MgY2VudGVyLgogKi9mdW5jdGlvbiBpbnRlcnNlY3RSZWN0KHJlY3QscG9pbnQpe3ZhciB4PXJlY3QueDt2YXIgeT1yZWN0Lnk7Ci8vIFJlY3RhbmdsZSBpbnRlcnNlY3Rpb24gYWxnb3JpdGhtIGZyb206Ci8vIGh0dHA6Ly9tYXRoLnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8xMDgxMTMvZmluZC1lZGdlLWJldHdlZW4tdHdvLWJveGVzCnZhciBkeD1wb2ludC54LXg7dmFyIGR5PXBvaW50LnkteTt2YXIgdz1yZWN0LndpZHRoLzI7dmFyIGg9cmVjdC5oZWlnaHQvMjtpZighZHgmJiFkeSl7dGhyb3cgbmV3IEVycm9yKCJOb3QgcG9zc2libGUgdG8gZmluZCBpbnRlcnNlY3Rpb24gaW5zaWRlIG9mIHRoZSByZWN0YW5nbGUiKX12YXIgc3gsc3k7aWYoTWF0aC5hYnMoZHkpKnc+TWF0aC5hYnMoZHgpKmgpewovLyBJbnRlcnNlY3Rpb24gaXMgdG9wIG9yIGJvdHRvbSBvZiByZWN0LgppZihkeTwwKXtoPS1ofXN4PWgqZHgvZHk7c3k9aH1lbHNlewovLyBJbnRlcnNlY3Rpb24gaXMgbGVmdCBvciByaWdodCBvZiByZWN0LgppZihkeDwwKXt3PS13fXN4PXc7c3k9dypkeS9keH1yZXR1cm57eDp4K3N4LHk6eStzeX19Ci8qCiAqIEdpdmVuIGEgREFHIHdpdGggZWFjaCBub2RlIGFzc2lnbmVkICJyYW5rIiBhbmQgIm9yZGVyIiBwcm9wZXJ0aWVzLCB0aGlzCiAqIGZ1bmN0aW9uIHdpbGwgcHJvZHVjZSBhIG1hdHJpeCB3aXRoIHRoZSBpZHMgb2YgZWFjaCBub2RlLgogKi9mdW5jdGlvbiBidWlsZExheWVyTWF0cml4KGcpe3ZhciBsYXllcmluZz1fLm1hcChfLnJhbmdlKG1heFJhbmsoZykrMSksZnVuY3Rpb24oKXtyZXR1cm5bXX0pO18uZm9yRWFjaChnLm5vZGVzKCksZnVuY3Rpb24odil7dmFyIG5vZGU9Zy5ub2RlKHYpO3ZhciByYW5rPW5vZGUucmFuaztpZighXy5pc1VuZGVmaW5lZChyYW5rKSl7bGF5ZXJpbmdbcmFua11bbm9kZS5vcmRlcl09dn19KTtyZXR1cm4gbGF5ZXJpbmd9Ci8qCiAqIEFkanVzdHMgdGhlIHJhbmtzIGZvciBhbGwgbm9kZXMgaW4gdGhlIGdyYXBoIHN1Y2ggdGhhdCBhbGwgbm9kZXMgdiBoYXZlCiAqIHJhbmsodikgPj0gMCBhbmQgYXQgbGVhc3Qgb25lIG5vZGUgdyBoYXMgcmFuayh3KSA9IDAuCiAqL2Z1bmN0aW9uIG5vcm1hbGl6ZVJhbmtzKGcpe3ZhciBtaW49Xy5taW4oXy5tYXAoZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3JldHVybiBnLm5vZGUodikucmFua30pKTtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciBub2RlPWcubm9kZSh2KTtpZihfLmhhcyhub2RlLCJyYW5rIikpe25vZGUucmFuay09bWlufX0pfWZ1bmN0aW9uIHJlbW92ZUVtcHR5UmFua3MoZyl7Ci8vIFJhbmtzIG1heSBub3Qgc3RhcnQgYXQgMCwgc28gd2UgbmVlZCB0byBvZmZzZXQgdGhlbQp2YXIgb2Zmc2V0PV8ubWluKF8ubWFwKGcubm9kZXMoKSxmdW5jdGlvbih2KXtyZXR1cm4gZy5ub2RlKHYpLnJhbmt9KSk7dmFyIGxheWVycz1bXTtfLmZvckVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciByYW5rPWcubm9kZSh2KS5yYW5rLW9mZnNldDtpZighbGF5ZXJzW3JhbmtdKXtsYXllcnNbcmFua109W119bGF5ZXJzW3JhbmtdLnB1c2godil9KTt2YXIgZGVsdGE9MDt2YXIgbm9kZVJhbmtGYWN0b3I9Zy5ncmFwaCgpLm5vZGVSYW5rRmFjdG9yO18uZm9yRWFjaChsYXllcnMsZnVuY3Rpb24odnMsaSl7aWYoXy5pc1VuZGVmaW5lZCh2cykmJmklbm9kZVJhbmtGYWN0b3IhPT0wKXstLWRlbHRhfWVsc2UgaWYoZGVsdGEpe18uZm9yRWFjaCh2cyxmdW5jdGlvbih2KXtnLm5vZGUodikucmFuays9ZGVsdGF9KX19KX1mdW5jdGlvbiBhZGRCb3JkZXJOb2RlKGcscHJlZml4LHJhbmssb3JkZXIpe3ZhciBub2RlPXt3aWR0aDowLGhlaWdodDowfTtpZihhcmd1bWVudHMubGVuZ3RoPj00KXtub2RlLnJhbms9cmFuaztub2RlLm9yZGVyPW9yZGVyfXJldHVybiBhZGREdW1teU5vZGUoZywiYm9yZGVyIixub2RlLHByZWZpeCl9ZnVuY3Rpb24gbWF4UmFuayhnKXtyZXR1cm4gXy5tYXgoXy5tYXAoZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3ZhciByYW5rPWcubm9kZSh2KS5yYW5rO2lmKCFfLmlzVW5kZWZpbmVkKHJhbmspKXtyZXR1cm4gcmFua319KSl9Ci8qCiAqIFBhcnRpdGlvbiBhIGNvbGxlY3Rpb24gaW50byB0d28gZ3JvdXBzOiBgbGhzYCBhbmQgYHJoc2AuIElmIHRoZSBzdXBwbGllZAogKiBmdW5jdGlvbiByZXR1cm5zIHRydWUgZm9yIGFuIGVudHJ5IGl0IGdvZXMgaW50byBgbGhzYC4gT3RoZXJ3aXNlIGl0IGdvZXMKICogaW50byBgcmhzLgogKi9mdW5jdGlvbiBwYXJ0aXRpb24oY29sbGVjdGlvbixmbil7dmFyIHJlc3VsdD17bGhzOltdLHJoczpbXX07Xy5mb3JFYWNoKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUpe2lmKGZuKHZhbHVlKSl7cmVzdWx0Lmxocy5wdXNoKHZhbHVlKX1lbHNle3Jlc3VsdC5yaHMucHVzaCh2YWx1ZSl9fSk7cmV0dXJuIHJlc3VsdH0KLyoKICogUmV0dXJucyBhIG5ldyBmdW5jdGlvbiB0aGF0IHdyYXBzIGBmbmAgd2l0aCBhIHRpbWVyLiBUaGUgd3JhcHBlciBsb2dzIHRoZQogKiB0aW1lIGl0IHRha2VzIHRvIGV4ZWN1dGUgdGhlIGZ1bmN0aW9uLgogKi9mdW5jdGlvbiB0aW1lKG5hbWUsZm4pe3ZhciBzdGFydD1fLm5vdygpO3RyeXtyZXR1cm4gZm4oKX1maW5hbGx5e2NvbnNvbGUubG9nKG5hbWUrIiB0aW1lOiAiKyhfLm5vdygpLXN0YXJ0KSsibXMiKX19ZnVuY3Rpb24gbm90aW1lKG5hbWUsZm4pe3JldHVybiBmbigpfX0seyIuL2dyYXBobGliIjo2NywiLi9sb2Rhc2giOjcwfV0sOTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPSIwLjguNSJ9LHt9XSw5MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBDb3B5cmlnaHQgKGMpIDIwMTQsIENocmlzIFBldHRpdHQKICogQWxsIHJpZ2h0cyByZXNlcnZlZC4KICoKICogUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0CiAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OgogKgogKiAxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMKICogbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCiAqCiAqIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwKICogdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbgogKiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KICoKICogMy4gTmVpdGhlciB0aGUgbmFtZSBvZiB0aGUgY29weXJpZ2h0IGhvbGRlciBub3IgdGhlIG5hbWVzIG9mIGl0cyBjb250cmlidXRvcnMKICogbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXQKICogc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLgogKgogKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyIgQU5ECiAqIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVECiAqIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUKICogRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRQogKiBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTAogKiBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUgogKiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUgogKiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLAogKiBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRQogKiBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLgogKi8KdmFyIGxpYj1yZXF1aXJlKCIuL2xpYiIpO21vZHVsZS5leHBvcnRzPXtHcmFwaDpsaWIuR3JhcGgsanNvbjpyZXF1aXJlKCIuL2xpYi9qc29uIiksYWxnOnJlcXVpcmUoIi4vbGliL2FsZyIpLHZlcnNpb246bGliLnZlcnNpb259fSx7Ii4vbGliIjoxMDcsIi4vbGliL2FsZyI6OTgsIi4vbGliL2pzb24iOjEwOH1dLDkyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTttb2R1bGUuZXhwb3J0cz1jb21wb25lbnRzO2Z1bmN0aW9uIGNvbXBvbmVudHMoZyl7dmFyIHZpc2l0ZWQ9e307dmFyIGNtcHRzPVtdO3ZhciBjbXB0O2Z1bmN0aW9uIGRmcyh2KXtpZihfLmhhcyh2aXNpdGVkLHYpKXJldHVybjt2aXNpdGVkW3ZdPXRydWU7Y21wdC5wdXNoKHYpO18uZWFjaChnLnN1Y2Nlc3NvcnModiksZGZzKTtfLmVhY2goZy5wcmVkZWNlc3NvcnModiksZGZzKX1fLmVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe2NtcHQ9W107ZGZzKHYpO2lmKGNtcHQubGVuZ3RoKXtjbXB0cy5wdXNoKGNtcHQpfX0pO3JldHVybiBjbXB0c319LHsiLi4vbG9kYXNoIjoxMDl9XSw5MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9ZGZzOwovKgogKiBBIGhlbHBlciB0aGF0IHByZWZvcm1zIGEgcHJlLSBvciBwb3N0LW9yZGVyIHRyYXZlcnNhbCBvbiB0aGUgaW5wdXQgZ3JhcGgKICogYW5kIHJldHVybnMgdGhlIG5vZGVzIGluIHRoZSBvcmRlciB0aGV5IHdlcmUgdmlzaXRlZC4gSWYgdGhlIGdyYXBoIGlzCiAqIHVuZGlyZWN0ZWQgdGhlbiB0aGlzIGFsZ29yaXRobSB3aWxsIG5hdmlnYXRlIHVzaW5nIG5laWdoYm9ycy4gSWYgdGhlIGdyYXBoCiAqIGlzIGRpcmVjdGVkIHRoZW4gdGhpcyBhbGdvcml0aG0gd2lsbCBuYXZpZ2F0ZSB1c2luZyBzdWNjZXNzb3JzLgogKgogKiBPcmRlciBtdXN0IGJlIG9uZSBvZiAicHJlIiBvciAicG9zdCIuCiAqL2Z1bmN0aW9uIGRmcyhnLHZzLG9yZGVyKXtpZighXy5pc0FycmF5KHZzKSl7dnM9W3ZzXX12YXIgbmF2aWdhdGlvbj0oZy5pc0RpcmVjdGVkKCk/Zy5zdWNjZXNzb3JzOmcubmVpZ2hib3JzKS5iaW5kKGcpO3ZhciBhY2M9W107dmFyIHZpc2l0ZWQ9e307Xy5lYWNoKHZzLGZ1bmN0aW9uKHYpe2lmKCFnLmhhc05vZGUodikpe3Rocm93IG5ldyBFcnJvcigiR3JhcGggZG9lcyBub3QgaGF2ZSBub2RlOiAiK3YpfWRvRGZzKGcsdixvcmRlcj09PSJwb3N0Iix2aXNpdGVkLG5hdmlnYXRpb24sYWNjKX0pO3JldHVybiBhY2N9ZnVuY3Rpb24gZG9EZnMoZyx2LHBvc3RvcmRlcix2aXNpdGVkLG5hdmlnYXRpb24sYWNjKXtpZighXy5oYXModmlzaXRlZCx2KSl7dmlzaXRlZFt2XT10cnVlO2lmKCFwb3N0b3JkZXIpe2FjYy5wdXNoKHYpfV8uZWFjaChuYXZpZ2F0aW9uKHYpLGZ1bmN0aW9uKHcpe2RvRGZzKGcsdyxwb3N0b3JkZXIsdmlzaXRlZCxuYXZpZ2F0aW9uLGFjYyl9KTtpZihwb3N0b3JkZXIpe2FjYy5wdXNoKHYpfX19fSx7Ii4uL2xvZGFzaCI6MTA5fV0sOTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBkaWprc3RyYT1yZXF1aXJlKCIuL2RpamtzdHJhIik7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9ZGlqa3N0cmFBbGw7ZnVuY3Rpb24gZGlqa3N0cmFBbGwoZyx3ZWlnaHRGdW5jLGVkZ2VGdW5jKXtyZXR1cm4gXy50cmFuc2Zvcm0oZy5ub2RlcygpLGZ1bmN0aW9uKGFjYyx2KXthY2Nbdl09ZGlqa3N0cmEoZyx2LHdlaWdodEZ1bmMsZWRnZUZ1bmMpfSx7fSl9fSx7Ii4uL2xvZGFzaCI6MTA5LCIuL2RpamtzdHJhIjo5NX1dLDk1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTt2YXIgUHJpb3JpdHlRdWV1ZT1yZXF1aXJlKCIuLi9kYXRhL3ByaW9yaXR5LXF1ZXVlIik7bW9kdWxlLmV4cG9ydHM9ZGlqa3N0cmE7dmFyIERFRkFVTFRfV0VJR0hUX0ZVTkM9Xy5jb25zdGFudCgxKTtmdW5jdGlvbiBkaWprc3RyYShnLHNvdXJjZSx3ZWlnaHRGbixlZGdlRm4pe3JldHVybiBydW5EaWprc3RyYShnLFN0cmluZyhzb3VyY2UpLHdlaWdodEZufHxERUZBVUxUX1dFSUdIVF9GVU5DLGVkZ2VGbnx8ZnVuY3Rpb24odil7cmV0dXJuIGcub3V0RWRnZXModil9KX1mdW5jdGlvbiBydW5EaWprc3RyYShnLHNvdXJjZSx3ZWlnaHRGbixlZGdlRm4pe3ZhciByZXN1bHRzPXt9O3ZhciBwcT1uZXcgUHJpb3JpdHlRdWV1ZTt2YXIgdix2RW50cnk7dmFyIHVwZGF0ZU5laWdoYm9ycz1mdW5jdGlvbihlZGdlKXt2YXIgdz1lZGdlLnYhPT12P2VkZ2UudjplZGdlLnc7dmFyIHdFbnRyeT1yZXN1bHRzW3ddO3ZhciB3ZWlnaHQ9d2VpZ2h0Rm4oZWRnZSk7dmFyIGRpc3RhbmNlPXZFbnRyeS5kaXN0YW5jZSt3ZWlnaHQ7aWYod2VpZ2h0PDApe3Rocm93IG5ldyBFcnJvcigiZGlqa3N0cmEgZG9lcyBub3QgYWxsb3cgbmVnYXRpdmUgZWRnZSB3ZWlnaHRzLiAiKyJCYWQgZWRnZTogIitlZGdlKyIgV2VpZ2h0OiAiK3dlaWdodCl9aWYoZGlzdGFuY2U8d0VudHJ5LmRpc3RhbmNlKXt3RW50cnkuZGlzdGFuY2U9ZGlzdGFuY2U7d0VudHJ5LnByZWRlY2Vzc29yPXY7cHEuZGVjcmVhc2UodyxkaXN0YW5jZSl9fTtnLm5vZGVzKCkuZm9yRWFjaChmdW5jdGlvbih2KXt2YXIgZGlzdGFuY2U9dj09PXNvdXJjZT8wOk51bWJlci5QT1NJVElWRV9JTkZJTklUWTtyZXN1bHRzW3ZdPXtkaXN0YW5jZTpkaXN0YW5jZX07cHEuYWRkKHYsZGlzdGFuY2UpfSk7d2hpbGUocHEuc2l6ZSgpPjApe3Y9cHEucmVtb3ZlTWluKCk7dkVudHJ5PXJlc3VsdHNbdl07aWYodkVudHJ5LmRpc3RhbmNlPT09TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZKXticmVha31lZGdlRm4odikuZm9yRWFjaCh1cGRhdGVOZWlnaGJvcnMpfXJldHVybiByZXN1bHRzfX0seyIuLi9kYXRhL3ByaW9yaXR5LXF1ZXVlIjoxMDUsIi4uL2xvZGFzaCI6MTA5fV0sOTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBfPXJlcXVpcmUoIi4uL2xvZGFzaCIpO3ZhciB0YXJqYW49cmVxdWlyZSgiLi90YXJqYW4iKTttb2R1bGUuZXhwb3J0cz1maW5kQ3ljbGVzO2Z1bmN0aW9uIGZpbmRDeWNsZXMoZyl7cmV0dXJuIF8uZmlsdGVyKHRhcmphbihnKSxmdW5jdGlvbihjbXB0KXtyZXR1cm4gY21wdC5sZW5ndGg+MXx8Y21wdC5sZW5ndGg9PT0xJiZnLmhhc0VkZ2UoY21wdFswXSxjbXB0WzBdKX0pfX0seyIuLi9sb2Rhc2giOjEwOSwiLi90YXJqYW4iOjEwM31dLDk3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTttb2R1bGUuZXhwb3J0cz1mbG95ZFdhcnNoYWxsO3ZhciBERUZBVUxUX1dFSUdIVF9GVU5DPV8uY29uc3RhbnQoMSk7ZnVuY3Rpb24gZmxveWRXYXJzaGFsbChnLHdlaWdodEZuLGVkZ2VGbil7cmV0dXJuIHJ1bkZsb3lkV2Fyc2hhbGwoZyx3ZWlnaHRGbnx8REVGQVVMVF9XRUlHSFRfRlVOQyxlZGdlRm58fGZ1bmN0aW9uKHYpe3JldHVybiBnLm91dEVkZ2VzKHYpfSl9ZnVuY3Rpb24gcnVuRmxveWRXYXJzaGFsbChnLHdlaWdodEZuLGVkZ2VGbil7dmFyIHJlc3VsdHM9e307dmFyIG5vZGVzPWcubm9kZXMoKTtub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKHYpe3Jlc3VsdHNbdl09e307cmVzdWx0c1t2XVt2XT17ZGlzdGFuY2U6MH07bm9kZXMuZm9yRWFjaChmdW5jdGlvbih3KXtpZih2IT09dyl7cmVzdWx0c1t2XVt3XT17ZGlzdGFuY2U6TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZfX19KTtlZGdlRm4odikuZm9yRWFjaChmdW5jdGlvbihlZGdlKXt2YXIgdz1lZGdlLnY9PT12P2VkZ2UudzplZGdlLnY7dmFyIGQ9d2VpZ2h0Rm4oZWRnZSk7cmVzdWx0c1t2XVt3XT17ZGlzdGFuY2U6ZCxwcmVkZWNlc3Nvcjp2fX0pfSk7bm9kZXMuZm9yRWFjaChmdW5jdGlvbihrKXt2YXIgcm93Sz1yZXN1bHRzW2tdO25vZGVzLmZvckVhY2goZnVuY3Rpb24oaSl7dmFyIHJvd0k9cmVzdWx0c1tpXTtub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKGope3ZhciBpaz1yb3dJW2tdO3ZhciBraj1yb3dLW2pdO3ZhciBpaj1yb3dJW2pdO3ZhciBhbHREaXN0YW5jZT1pay5kaXN0YW5jZStrai5kaXN0YW5jZTtpZihhbHREaXN0YW5jZTxpai5kaXN0YW5jZSl7aWouZGlzdGFuY2U9YWx0RGlzdGFuY2U7aWoucHJlZGVjZXNzb3I9a2oucHJlZGVjZXNzb3J9fSl9KX0pO3JldHVybiByZXN1bHRzfX0seyIuLi9sb2Rhc2giOjEwOX1dLDk4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz17Y29tcG9uZW50czpyZXF1aXJlKCIuL2NvbXBvbmVudHMiKSxkaWprc3RyYTpyZXF1aXJlKCIuL2RpamtzdHJhIiksZGlqa3N0cmFBbGw6cmVxdWlyZSgiLi9kaWprc3RyYS1hbGwiKSxmaW5kQ3ljbGVzOnJlcXVpcmUoIi4vZmluZC1jeWNsZXMiKSxmbG95ZFdhcnNoYWxsOnJlcXVpcmUoIi4vZmxveWQtd2Fyc2hhbGwiKSxpc0FjeWNsaWM6cmVxdWlyZSgiLi9pcy1hY3ljbGljIikscG9zdG9yZGVyOnJlcXVpcmUoIi4vcG9zdG9yZGVyIikscHJlb3JkZXI6cmVxdWlyZSgiLi9wcmVvcmRlciIpLHByaW06cmVxdWlyZSgiLi9wcmltIiksdGFyamFuOnJlcXVpcmUoIi4vdGFyamFuIiksdG9wc29ydDpyZXF1aXJlKCIuL3RvcHNvcnQiKX19LHsiLi9jb21wb25lbnRzIjo5MiwiLi9kaWprc3RyYSI6OTUsIi4vZGlqa3N0cmEtYWxsIjo5NCwiLi9maW5kLWN5Y2xlcyI6OTYsIi4vZmxveWQtd2Fyc2hhbGwiOjk3LCIuL2lzLWFjeWNsaWMiOjk5LCIuL3Bvc3RvcmRlciI6MTAwLCIuL3ByZW9yZGVyIjoxMDEsIi4vcHJpbSI6MTAyLCIuL3RhcmphbiI6MTAzLCIuL3RvcHNvcnQiOjEwNH1dLDk5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgdG9wc29ydD1yZXF1aXJlKCIuL3RvcHNvcnQiKTttb2R1bGUuZXhwb3J0cz1pc0FjeWNsaWM7ZnVuY3Rpb24gaXNBY3ljbGljKGcpe3RyeXt0b3Bzb3J0KGcpfWNhdGNoKGUpe2lmKGUgaW5zdGFuY2VvZiB0b3Bzb3J0LkN5Y2xlRXhjZXB0aW9uKXtyZXR1cm4gZmFsc2V9dGhyb3cgZX1yZXR1cm4gdHJ1ZX19LHsiLi90b3Bzb3J0IjoxMDR9XSwxMDA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBkZnM9cmVxdWlyZSgiLi9kZnMiKTttb2R1bGUuZXhwb3J0cz1wb3N0b3JkZXI7ZnVuY3Rpb24gcG9zdG9yZGVyKGcsdnMpe3JldHVybiBkZnMoZyx2cywicG9zdCIpfX0seyIuL2RmcyI6OTN9XSwxMDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBkZnM9cmVxdWlyZSgiLi9kZnMiKTttb2R1bGUuZXhwb3J0cz1wcmVvcmRlcjtmdW5jdGlvbiBwcmVvcmRlcihnLHZzKXtyZXR1cm4gZGZzKGcsdnMsInByZSIpfX0seyIuL2RmcyI6OTN9XSwxMDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBfPXJlcXVpcmUoIi4uL2xvZGFzaCIpO3ZhciBHcmFwaD1yZXF1aXJlKCIuLi9ncmFwaCIpO3ZhciBQcmlvcml0eVF1ZXVlPXJlcXVpcmUoIi4uL2RhdGEvcHJpb3JpdHktcXVldWUiKTttb2R1bGUuZXhwb3J0cz1wcmltO2Z1bmN0aW9uIHByaW0oZyx3ZWlnaHRGdW5jKXt2YXIgcmVzdWx0PW5ldyBHcmFwaDt2YXIgcGFyZW50cz17fTt2YXIgcHE9bmV3IFByaW9yaXR5UXVldWU7dmFyIHY7ZnVuY3Rpb24gdXBkYXRlTmVpZ2hib3JzKGVkZ2Upe3ZhciB3PWVkZ2Uudj09PXY/ZWRnZS53OmVkZ2Uudjt2YXIgcHJpPXBxLnByaW9yaXR5KHcpO2lmKHByaSE9PXVuZGVmaW5lZCl7dmFyIGVkZ2VXZWlnaHQ9d2VpZ2h0RnVuYyhlZGdlKTtpZihlZGdlV2VpZ2h0PHByaSl7cGFyZW50c1t3XT12O3BxLmRlY3JlYXNlKHcsZWRnZVdlaWdodCl9fX1pZihnLm5vZGVDb3VudCgpPT09MCl7cmV0dXJuIHJlc3VsdH1fLmVhY2goZy5ub2RlcygpLGZ1bmN0aW9uKHYpe3BxLmFkZCh2LE51bWJlci5QT1NJVElWRV9JTkZJTklUWSk7cmVzdWx0LnNldE5vZGUodil9KTsKLy8gU3RhcnQgZnJvbSBhbiBhcmJpdHJhcnkgbm9kZQpwcS5kZWNyZWFzZShnLm5vZGVzKClbMF0sMCk7dmFyIGluaXQ9ZmFsc2U7d2hpbGUocHEuc2l6ZSgpPjApe3Y9cHEucmVtb3ZlTWluKCk7aWYoXy5oYXMocGFyZW50cyx2KSl7cmVzdWx0LnNldEVkZ2UodixwYXJlbnRzW3ZdKX1lbHNlIGlmKGluaXQpe3Rocm93IG5ldyBFcnJvcigiSW5wdXQgZ3JhcGggaXMgbm90IGNvbm5lY3RlZDogIitnKX1lbHNle2luaXQ9dHJ1ZX1nLm5vZGVFZGdlcyh2KS5mb3JFYWNoKHVwZGF0ZU5laWdoYm9ycyl9cmV0dXJuIHJlc3VsdH19LHsiLi4vZGF0YS9wcmlvcml0eS1xdWV1ZSI6MTA1LCIuLi9ncmFwaCI6MTA2LCIuLi9sb2Rhc2giOjEwOX1dLDEwMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9dGFyamFuO2Z1bmN0aW9uIHRhcmphbihnKXt2YXIgaW5kZXg9MDt2YXIgc3RhY2s9W107dmFyIHZpc2l0ZWQ9e307Ly8gbm9kZSBpZCAtPiB7IG9uU3RhY2ssIGxvd2xpbmssIGluZGV4IH0KdmFyIHJlc3VsdHM9W107ZnVuY3Rpb24gZGZzKHYpe3ZhciBlbnRyeT12aXNpdGVkW3ZdPXtvblN0YWNrOnRydWUsbG93bGluazppbmRleCxpbmRleDppbmRleCsrfTtzdGFjay5wdXNoKHYpO2cuc3VjY2Vzc29ycyh2KS5mb3JFYWNoKGZ1bmN0aW9uKHcpe2lmKCFfLmhhcyh2aXNpdGVkLHcpKXtkZnModyk7ZW50cnkubG93bGluaz1NYXRoLm1pbihlbnRyeS5sb3dsaW5rLHZpc2l0ZWRbd10ubG93bGluayl9ZWxzZSBpZih2aXNpdGVkW3ddLm9uU3RhY2spe2VudHJ5Lmxvd2xpbms9TWF0aC5taW4oZW50cnkubG93bGluayx2aXNpdGVkW3ddLmluZGV4KX19KTtpZihlbnRyeS5sb3dsaW5rPT09ZW50cnkuaW5kZXgpe3ZhciBjbXB0PVtdO3ZhciB3O2Rve3c9c3RhY2sucG9wKCk7dmlzaXRlZFt3XS5vblN0YWNrPWZhbHNlO2NtcHQucHVzaCh3KX13aGlsZSh2IT09dyk7cmVzdWx0cy5wdXNoKGNtcHQpfX1nLm5vZGVzKCkuZm9yRWFjaChmdW5jdGlvbih2KXtpZighXy5oYXModmlzaXRlZCx2KSl7ZGZzKHYpfX0pO3JldHVybiByZXN1bHRzfX0seyIuLi9sb2Rhc2giOjEwOX1dLDEwNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIF89cmVxdWlyZSgiLi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9dG9wc29ydDt0b3Bzb3J0LkN5Y2xlRXhjZXB0aW9uPUN5Y2xlRXhjZXB0aW9uO2Z1bmN0aW9uIHRvcHNvcnQoZyl7dmFyIHZpc2l0ZWQ9e307dmFyIHN0YWNrPXt9O3ZhciByZXN1bHRzPVtdO2Z1bmN0aW9uIHZpc2l0KG5vZGUpe2lmKF8uaGFzKHN0YWNrLG5vZGUpKXt0aHJvdyBuZXcgQ3ljbGVFeGNlcHRpb259aWYoIV8uaGFzKHZpc2l0ZWQsbm9kZSkpe3N0YWNrW25vZGVdPXRydWU7dmlzaXRlZFtub2RlXT10cnVlO18uZWFjaChnLnByZWRlY2Vzc29ycyhub2RlKSx2aXNpdCk7ZGVsZXRlIHN0YWNrW25vZGVdO3Jlc3VsdHMucHVzaChub2RlKX19Xy5lYWNoKGcuc2lua3MoKSx2aXNpdCk7aWYoXy5zaXplKHZpc2l0ZWQpIT09Zy5ub2RlQ291bnQoKSl7dGhyb3cgbmV3IEN5Y2xlRXhjZXB0aW9ufXJldHVybiByZXN1bHRzfWZ1bmN0aW9uIEN5Y2xlRXhjZXB0aW9uKCl7fUN5Y2xlRXhjZXB0aW9uLnByb3RvdHlwZT1uZXcgRXJyb3I7Ly8gbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBFcnJvciB0byBwYXNzIHRlc3RpbmcKfSx7Ii4uL2xvZGFzaCI6MTA5fV0sMTA1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgXz1yZXF1aXJlKCIuLi9sb2Rhc2giKTttb2R1bGUuZXhwb3J0cz1Qcmlvcml0eVF1ZXVlOwovKioKICogQSBtaW4tcHJpb3JpdHkgcXVldWUgZGF0YSBzdHJ1Y3R1cmUuIFRoaXMgYWxnb3JpdGhtIGlzIGRlcml2ZWQgZnJvbSBDb3JtZW4sCiAqIGV0IGFsLiwgIkludHJvZHVjdGlvbiB0byBBbGdvcml0aG1zIi4gVGhlIGJhc2ljIGlkZWEgb2YgYSBtaW4tcHJpb3JpdHkKICogcXVldWUgaXMgdGhhdCB5b3UgY2FuIGVmZmljaWVudGx5IChpbiBPKDEpIHRpbWUpIGdldCB0aGUgc21hbGxlc3Qga2V5IGluCiAqIHRoZSBxdWV1ZS4gQWRkaW5nIGFuZCByZW1vdmluZyBlbGVtZW50cyB0YWtlcyBPKGxvZyBuKSB0aW1lLiBBIGtleSBjYW4KICogaGF2ZSBpdHMgcHJpb3JpdHkgZGVjcmVhc2VkIGluIE8obG9nIG4pIHRpbWUuCiAqL2Z1bmN0aW9uIFByaW9yaXR5UXVldWUoKXt0aGlzLl9hcnI9W107dGhpcy5fa2V5SW5kaWNlcz17fX0KLyoqCiAqIFJldHVybnMgdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiB0aGUgcXVldWUuIFRha2VzIGBPKDEpYCB0aW1lLgogKi9Qcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5zaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Fyci5sZW5ndGh9OwovKioKICogUmV0dXJucyB0aGUga2V5cyB0aGF0IGFyZSBpbiB0aGUgcXVldWUuIFRha2VzIGBPKG4pYCB0aW1lLgogKi9Qcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5rZXlzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Fyci5tYXAoZnVuY3Rpb24oeCl7cmV0dXJuIHgua2V5fSl9OwovKioKICogUmV0dXJucyBgdHJ1ZWAgaWYgKiprZXkqKiBpcyBpbiB0aGUgcXVldWUgYW5kIGBmYWxzZWAgaWYgbm90LgogKi9Qcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5oYXM9ZnVuY3Rpb24oa2V5KXtyZXR1cm4gXy5oYXModGhpcy5fa2V5SW5kaWNlcyxrZXkpfTsKLyoqCiAqIFJldHVybnMgdGhlIHByaW9yaXR5IGZvciAqKmtleSoqLiBJZiAqKmtleSoqIGlzIG5vdCBwcmVzZW50IGluIHRoZSBxdWV1ZQogKiB0aGVuIHRoaXMgZnVuY3Rpb24gcmV0dXJucyBgdW5kZWZpbmVkYC4gVGFrZXMgYE8oMSlgIHRpbWUuCiAqCiAqIEBwYXJhbSB7T2JqZWN0fSBrZXkKICovUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUucHJpb3JpdHk9ZnVuY3Rpb24oa2V5KXt2YXIgaW5kZXg9dGhpcy5fa2V5SW5kaWNlc1trZXldO2lmKGluZGV4IT09dW5kZWZpbmVkKXtyZXR1cm4gdGhpcy5fYXJyW2luZGV4XS5wcmlvcml0eX19OwovKioKICogUmV0dXJucyB0aGUga2V5IGZvciB0aGUgbWluaW11bSBlbGVtZW50IGluIHRoaXMgcXVldWUuIElmIHRoZSBxdWV1ZSBpcwogKiBlbXB0eSB0aGlzIGZ1bmN0aW9uIHRocm93cyBhbiBFcnJvci4gVGFrZXMgYE8oMSlgIHRpbWUuCiAqL1ByaW9yaXR5UXVldWUucHJvdG90eXBlLm1pbj1mdW5jdGlvbigpe2lmKHRoaXMuc2l6ZSgpPT09MCl7dGhyb3cgbmV3IEVycm9yKCJRdWV1ZSB1bmRlcmZsb3ciKX1yZXR1cm4gdGhpcy5fYXJyWzBdLmtleX07Ci8qKgogKiBJbnNlcnRzIGEgbmV3IGtleSBpbnRvIHRoZSBwcmlvcml0eSBxdWV1ZS4gSWYgdGhlIGtleSBhbHJlYWR5IGV4aXN0cyBpbgogKiB0aGUgcXVldWUgdGhpcyBmdW5jdGlvbiByZXR1cm5zIGBmYWxzZWA7IG90aGVyd2lzZSBpdCB3aWxsIHJldHVybiBgdHJ1ZWAuCiAqIFRha2VzIGBPKG4pYCB0aW1lLgogKgogKiBAcGFyYW0ge09iamVjdH0ga2V5IHRoZSBrZXkgdG8gYWRkCiAqIEBwYXJhbSB7TnVtYmVyfSBwcmlvcml0eSB0aGUgaW5pdGlhbCBwcmlvcml0eSBmb3IgdGhlIGtleQogKi9Qcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oa2V5LHByaW9yaXR5KXt2YXIga2V5SW5kaWNlcz10aGlzLl9rZXlJbmRpY2VzO2tleT1TdHJpbmcoa2V5KTtpZighXy5oYXMoa2V5SW5kaWNlcyxrZXkpKXt2YXIgYXJyPXRoaXMuX2Fycjt2YXIgaW5kZXg9YXJyLmxlbmd0aDtrZXlJbmRpY2VzW2tleV09aW5kZXg7YXJyLnB1c2goe2tleTprZXkscHJpb3JpdHk6cHJpb3JpdHl9KTt0aGlzLl9kZWNyZWFzZShpbmRleCk7cmV0dXJuIHRydWV9cmV0dXJuIGZhbHNlfTsKLyoqCiAqIFJlbW92ZXMgYW5kIHJldHVybnMgdGhlIHNtYWxsZXN0IGtleSBpbiB0aGUgcXVldWUuIFRha2VzIGBPKGxvZyBuKWAgdGltZS4KICovUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUucmVtb3ZlTWluPWZ1bmN0aW9uKCl7dGhpcy5fc3dhcCgwLHRoaXMuX2Fyci5sZW5ndGgtMSk7dmFyIG1pbj10aGlzLl9hcnIucG9wKCk7ZGVsZXRlIHRoaXMuX2tleUluZGljZXNbbWluLmtleV07dGhpcy5faGVhcGlmeSgwKTtyZXR1cm4gbWluLmtleX07Ci8qKgogKiBEZWNyZWFzZXMgdGhlIHByaW9yaXR5IGZvciAqKmtleSoqIHRvICoqcHJpb3JpdHkqKi4gSWYgdGhlIG5ldyBwcmlvcml0eSBpcwogKiBncmVhdGVyIHRoYW4gdGhlIHByZXZpb3VzIHByaW9yaXR5LCB0aGlzIGZ1bmN0aW9uIHdpbGwgdGhyb3cgYW4gRXJyb3IuCiAqCiAqIEBwYXJhbSB7T2JqZWN0fSBrZXkgdGhlIGtleSBmb3Igd2hpY2ggdG8gcmFpc2UgcHJpb3JpdHkKICogQHBhcmFtIHtOdW1iZXJ9IHByaW9yaXR5IHRoZSBuZXcgcHJpb3JpdHkgZm9yIHRoZSBrZXkKICovUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuZGVjcmVhc2U9ZnVuY3Rpb24oa2V5LHByaW9yaXR5KXt2YXIgaW5kZXg9dGhpcy5fa2V5SW5kaWNlc1trZXldO2lmKHByaW9yaXR5PnRoaXMuX2FycltpbmRleF0ucHJpb3JpdHkpe3Rocm93IG5ldyBFcnJvcigiTmV3IHByaW9yaXR5IGlzIGdyZWF0ZXIgdGhhbiBjdXJyZW50IHByaW9yaXR5LiAiKyJLZXk6ICIra2V5KyIgT2xkOiAiK3RoaXMuX2FycltpbmRleF0ucHJpb3JpdHkrIiBOZXc6ICIrcHJpb3JpdHkpfXRoaXMuX2FycltpbmRleF0ucHJpb3JpdHk9cHJpb3JpdHk7dGhpcy5fZGVjcmVhc2UoaW5kZXgpfTtQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5faGVhcGlmeT1mdW5jdGlvbihpKXt2YXIgYXJyPXRoaXMuX2Fycjt2YXIgbD0yKmk7dmFyIHI9bCsxO3ZhciBsYXJnZXN0PWk7aWYobDxhcnIubGVuZ3RoKXtsYXJnZXN0PWFycltsXS5wcmlvcml0eTxhcnJbbGFyZ2VzdF0ucHJpb3JpdHk/bDpsYXJnZXN0O2lmKHI8YXJyLmxlbmd0aCl7bGFyZ2VzdD1hcnJbcl0ucHJpb3JpdHk8YXJyW2xhcmdlc3RdLnByaW9yaXR5P3I6bGFyZ2VzdH1pZihsYXJnZXN0IT09aSl7dGhpcy5fc3dhcChpLGxhcmdlc3QpO3RoaXMuX2hlYXBpZnkobGFyZ2VzdCl9fX07UHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuX2RlY3JlYXNlPWZ1bmN0aW9uKGluZGV4KXt2YXIgYXJyPXRoaXMuX2Fycjt2YXIgcHJpb3JpdHk9YXJyW2luZGV4XS5wcmlvcml0eTt2YXIgcGFyZW50O3doaWxlKGluZGV4IT09MCl7cGFyZW50PWluZGV4Pj4xO2lmKGFycltwYXJlbnRdLnByaW9yaXR5PHByaW9yaXR5KXticmVha310aGlzLl9zd2FwKGluZGV4LHBhcmVudCk7aW5kZXg9cGFyZW50fX07UHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuX3N3YXA9ZnVuY3Rpb24oaSxqKXt2YXIgYXJyPXRoaXMuX2Fycjt2YXIga2V5SW5kaWNlcz10aGlzLl9rZXlJbmRpY2VzO3ZhciBvcmlnQXJyST1hcnJbaV07dmFyIG9yaWdBcnJKPWFycltqXTthcnJbaV09b3JpZ0Fycko7YXJyW2pdPW9yaWdBcnJJO2tleUluZGljZXNbb3JpZ0Fyckoua2V5XT1pO2tleUluZGljZXNbb3JpZ0Fyckkua2V5XT1qfX0seyIuLi9sb2Rhc2giOjEwOX1dLDEwNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7bW9kdWxlLmV4cG9ydHM9R3JhcGg7dmFyIERFRkFVTFRfRURHRV9OQU1FPSJcMCI7dmFyIEdSQVBIX05PREU9IlwwIjt2YXIgRURHRV9LRVlfREVMSU09IgEiOwovLyBJbXBsZW1lbnRhdGlvbiBub3RlczoKLy8KLy8gICogTm9kZSBpZCBxdWVyeSBmdW5jdGlvbnMgc2hvdWxkIHJldHVybiBzdHJpbmcgaWRzIGZvciB0aGUgbm9kZXMKLy8gICogRWRnZSBpZCBxdWVyeSBmdW5jdGlvbnMgc2hvdWxkIHJldHVybiBhbiAiZWRnZU9iaiIsIGVkZ2Ugb2JqZWN0LCB0aGF0IGlzCi8vICAgIGNvbXBvc2VkIG9mIGVub3VnaCBpbmZvcm1hdGlvbiB0byB1bmlxdWVseSBpZGVudGlmeSBhbiBlZGdlOiB7diwgdywgbmFtZX0uCi8vICAqIEludGVybmFsbHkgd2UgdXNlIGFuICJlZGdlSWQiLCBhIHN0cmluZ2lmaWVkIGZvcm0gb2YgdGhlIGVkZ2VPYmosIHRvCi8vICAgIHJlZmVyZW5jZSBlZGdlcy4gVGhpcyBpcyBiZWNhdXNlIHdlIG5lZWQgYSBwZXJmb3JtYW50IHdheSB0byBsb29rIHRoZXNlCi8vICAgIGVkZ2VzIHVwIGFuZCwgb2JqZWN0IHByb3BlcnRpZXMsIHdoaWNoIGhhdmUgc3RyaW5nIGtleXMsIGFyZSB0aGUgY2xvc2VzdAovLyAgICB3ZSdyZSBnb2luZyB0byBnZXQgdG8gYSBwZXJmb3JtYW50IGhhc2h0YWJsZSBpbiBKYXZhU2NyaXB0LgpmdW5jdGlvbiBHcmFwaChvcHRzKXt0aGlzLl9pc0RpcmVjdGVkPV8uaGFzKG9wdHMsImRpcmVjdGVkIik/b3B0cy5kaXJlY3RlZDp0cnVlO3RoaXMuX2lzTXVsdGlncmFwaD1fLmhhcyhvcHRzLCJtdWx0aWdyYXBoIik/b3B0cy5tdWx0aWdyYXBoOmZhbHNlO3RoaXMuX2lzQ29tcG91bmQ9Xy5oYXMob3B0cywiY29tcG91bmQiKT9vcHRzLmNvbXBvdW5kOmZhbHNlOwovLyBMYWJlbCBmb3IgdGhlIGdyYXBoIGl0c2VsZgp0aGlzLl9sYWJlbD11bmRlZmluZWQ7Ci8vIERlZmF1bHRzIHRvIGJlIHNldCB3aGVuIGNyZWF0aW5nIGEgbmV3IG5vZGUKdGhpcy5fZGVmYXVsdE5vZGVMYWJlbEZuPV8uY29uc3RhbnQodW5kZWZpbmVkKTsKLy8gRGVmYXVsdHMgdG8gYmUgc2V0IHdoZW4gY3JlYXRpbmcgYSBuZXcgZWRnZQp0aGlzLl9kZWZhdWx0RWRnZUxhYmVsRm49Xy5jb25zdGFudCh1bmRlZmluZWQpOwovLyB2IC0+IGxhYmVsCnRoaXMuX25vZGVzPXt9O2lmKHRoaXMuX2lzQ29tcG91bmQpewovLyB2IC0+IHBhcmVudAp0aGlzLl9wYXJlbnQ9e307Ci8vIHYgLT4gY2hpbGRyZW4KdGhpcy5fY2hpbGRyZW49e307dGhpcy5fY2hpbGRyZW5bR1JBUEhfTk9ERV09e319Ci8vIHYgLT4gZWRnZU9iagp0aGlzLl9pbj17fTsKLy8gdSAtPiB2IC0+IE51bWJlcgp0aGlzLl9wcmVkcz17fTsKLy8gdiAtPiBlZGdlT2JqCnRoaXMuX291dD17fTsKLy8gdiAtPiB3IC0+IE51bWJlcgp0aGlzLl9zdWNzPXt9OwovLyBlIC0+IGVkZ2VPYmoKdGhpcy5fZWRnZU9ianM9e307Ci8vIGUgLT4gbGFiZWwKdGhpcy5fZWRnZUxhYmVscz17fX0KLyogTnVtYmVyIG9mIG5vZGVzIGluIHRoZSBncmFwaC4gU2hvdWxkIG9ubHkgYmUgY2hhbmdlZCBieSB0aGUgaW1wbGVtZW50YXRpb24uICovR3JhcGgucHJvdG90eXBlLl9ub2RlQ291bnQ9MDsKLyogTnVtYmVyIG9mIGVkZ2VzIGluIHRoZSBncmFwaC4gU2hvdWxkIG9ubHkgYmUgY2hhbmdlZCBieSB0aGUgaW1wbGVtZW50YXRpb24uICovR3JhcGgucHJvdG90eXBlLl9lZGdlQ291bnQ9MDsKLyogPT09IEdyYXBoIGZ1bmN0aW9ucyA9PT09PT09PT0gKi9HcmFwaC5wcm90b3R5cGUuaXNEaXJlY3RlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0RpcmVjdGVkfTtHcmFwaC5wcm90b3R5cGUuaXNNdWx0aWdyYXBoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzTXVsdGlncmFwaH07R3JhcGgucHJvdG90eXBlLmlzQ29tcG91bmQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNDb21wb3VuZH07R3JhcGgucHJvdG90eXBlLnNldEdyYXBoPWZ1bmN0aW9uKGxhYmVsKXt0aGlzLl9sYWJlbD1sYWJlbDtyZXR1cm4gdGhpc307R3JhcGgucHJvdG90eXBlLmdyYXBoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xhYmVsfTsKLyogPT09IE5vZGUgZnVuY3Rpb25zID09PT09PT09PT0gKi9HcmFwaC5wcm90b3R5cGUuc2V0RGVmYXVsdE5vZGVMYWJlbD1mdW5jdGlvbihuZXdEZWZhdWx0KXtpZighXy5pc0Z1bmN0aW9uKG5ld0RlZmF1bHQpKXtuZXdEZWZhdWx0PV8uY29uc3RhbnQobmV3RGVmYXVsdCl9dGhpcy5fZGVmYXVsdE5vZGVMYWJlbEZuPW5ld0RlZmF1bHQ7cmV0dXJuIHRoaXN9O0dyYXBoLnByb3RvdHlwZS5ub2RlQ291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbm9kZUNvdW50fTtHcmFwaC5wcm90b3R5cGUubm9kZXM9ZnVuY3Rpb24oKXtyZXR1cm4gXy5rZXlzKHRoaXMuX25vZGVzKX07R3JhcGgucHJvdG90eXBlLnNvdXJjZXM9ZnVuY3Rpb24oKXt2YXIgc2VsZj10aGlzO3JldHVybiBfLmZpbHRlcih0aGlzLm5vZGVzKCksZnVuY3Rpb24odil7cmV0dXJuIF8uaXNFbXB0eShzZWxmLl9pblt2XSl9KX07R3JhcGgucHJvdG90eXBlLnNpbmtzPWZ1bmN0aW9uKCl7dmFyIHNlbGY9dGhpcztyZXR1cm4gXy5maWx0ZXIodGhpcy5ub2RlcygpLGZ1bmN0aW9uKHYpe3JldHVybiBfLmlzRW1wdHkoc2VsZi5fb3V0W3ZdKX0pfTtHcmFwaC5wcm90b3R5cGUuc2V0Tm9kZXM9ZnVuY3Rpb24odnMsdmFsdWUpe3ZhciBhcmdzPWFyZ3VtZW50czt2YXIgc2VsZj10aGlzO18uZWFjaCh2cyxmdW5jdGlvbih2KXtpZihhcmdzLmxlbmd0aD4xKXtzZWxmLnNldE5vZGUodix2YWx1ZSl9ZWxzZXtzZWxmLnNldE5vZGUodil9fSk7cmV0dXJuIHRoaXN9O0dyYXBoLnByb3RvdHlwZS5zZXROb2RlPWZ1bmN0aW9uKHYsdmFsdWUpe2lmKF8uaGFzKHRoaXMuX25vZGVzLHYpKXtpZihhcmd1bWVudHMubGVuZ3RoPjEpe3RoaXMuX25vZGVzW3ZdPXZhbHVlfXJldHVybiB0aGlzfXRoaXMuX25vZGVzW3ZdPWFyZ3VtZW50cy5sZW5ndGg+MT92YWx1ZTp0aGlzLl9kZWZhdWx0Tm9kZUxhYmVsRm4odik7aWYodGhpcy5faXNDb21wb3VuZCl7dGhpcy5fcGFyZW50W3ZdPUdSQVBIX05PREU7dGhpcy5fY2hpbGRyZW5bdl09e307dGhpcy5fY2hpbGRyZW5bR1JBUEhfTk9ERV1bdl09dHJ1ZX10aGlzLl9pblt2XT17fTt0aGlzLl9wcmVkc1t2XT17fTt0aGlzLl9vdXRbdl09e307dGhpcy5fc3Vjc1t2XT17fTsrK3RoaXMuX25vZGVDb3VudDtyZXR1cm4gdGhpc307R3JhcGgucHJvdG90eXBlLm5vZGU9ZnVuY3Rpb24odil7cmV0dXJuIHRoaXMuX25vZGVzW3ZdfTtHcmFwaC5wcm90b3R5cGUuaGFzTm9kZT1mdW5jdGlvbih2KXtyZXR1cm4gXy5oYXModGhpcy5fbm9kZXMsdil9O0dyYXBoLnByb3RvdHlwZS5yZW1vdmVOb2RlPWZ1bmN0aW9uKHYpe3ZhciBzZWxmPXRoaXM7aWYoXy5oYXModGhpcy5fbm9kZXMsdikpe3ZhciByZW1vdmVFZGdlPWZ1bmN0aW9uKGUpe3NlbGYucmVtb3ZlRWRnZShzZWxmLl9lZGdlT2Jqc1tlXSl9O2RlbGV0ZSB0aGlzLl9ub2Rlc1t2XTtpZih0aGlzLl9pc0NvbXBvdW5kKXt0aGlzLl9yZW1vdmVGcm9tUGFyZW50c0NoaWxkTGlzdCh2KTtkZWxldGUgdGhpcy5fcGFyZW50W3ZdO18uZWFjaCh0aGlzLmNoaWxkcmVuKHYpLGZ1bmN0aW9uKGNoaWxkKXtzZWxmLnNldFBhcmVudChjaGlsZCl9KTtkZWxldGUgdGhpcy5fY2hpbGRyZW5bdl19Xy5lYWNoKF8ua2V5cyh0aGlzLl9pblt2XSkscmVtb3ZlRWRnZSk7ZGVsZXRlIHRoaXMuX2luW3ZdO2RlbGV0ZSB0aGlzLl9wcmVkc1t2XTtfLmVhY2goXy5rZXlzKHRoaXMuX291dFt2XSkscmVtb3ZlRWRnZSk7ZGVsZXRlIHRoaXMuX291dFt2XTtkZWxldGUgdGhpcy5fc3Vjc1t2XTstLXRoaXMuX25vZGVDb3VudH1yZXR1cm4gdGhpc307R3JhcGgucHJvdG90eXBlLnNldFBhcmVudD1mdW5jdGlvbih2LHBhcmVudCl7aWYoIXRoaXMuX2lzQ29tcG91bmQpe3Rocm93IG5ldyBFcnJvcigiQ2Fubm90IHNldCBwYXJlbnQgaW4gYSBub24tY29tcG91bmQgZ3JhcGgiKX1pZihfLmlzVW5kZWZpbmVkKHBhcmVudCkpe3BhcmVudD1HUkFQSF9OT0RFfWVsc2V7Ci8vIENvZXJjZSBwYXJlbnQgdG8gc3RyaW5nCnBhcmVudCs9IiI7Zm9yKHZhciBhbmNlc3Rvcj1wYXJlbnQ7IV8uaXNVbmRlZmluZWQoYW5jZXN0b3IpO2FuY2VzdG9yPXRoaXMucGFyZW50KGFuY2VzdG9yKSl7aWYoYW5jZXN0b3I9PT12KXt0aHJvdyBuZXcgRXJyb3IoIlNldHRpbmcgIitwYXJlbnQrIiBhcyBwYXJlbnQgb2YgIit2KyIgd291bGQgY3JlYXRlIGEgY3ljbGUiKX19dGhpcy5zZXROb2RlKHBhcmVudCl9dGhpcy5zZXROb2RlKHYpO3RoaXMuX3JlbW92ZUZyb21QYXJlbnRzQ2hpbGRMaXN0KHYpO3RoaXMuX3BhcmVudFt2XT1wYXJlbnQ7dGhpcy5fY2hpbGRyZW5bcGFyZW50XVt2XT10cnVlO3JldHVybiB0aGlzfTtHcmFwaC5wcm90b3R5cGUuX3JlbW92ZUZyb21QYXJlbnRzQ2hpbGRMaXN0PWZ1bmN0aW9uKHYpe2RlbGV0ZSB0aGlzLl9jaGlsZHJlblt0aGlzLl9wYXJlbnRbdl1dW3ZdfTtHcmFwaC5wcm90b3R5cGUucGFyZW50PWZ1bmN0aW9uKHYpe2lmKHRoaXMuX2lzQ29tcG91bmQpe3ZhciBwYXJlbnQ9dGhpcy5fcGFyZW50W3ZdO2lmKHBhcmVudCE9PUdSQVBIX05PREUpe3JldHVybiBwYXJlbnR9fX07R3JhcGgucHJvdG90eXBlLmNoaWxkcmVuPWZ1bmN0aW9uKHYpe2lmKF8uaXNVbmRlZmluZWQodikpe3Y9R1JBUEhfTk9ERX1pZih0aGlzLl9pc0NvbXBvdW5kKXt2YXIgY2hpbGRyZW49dGhpcy5fY2hpbGRyZW5bdl07aWYoY2hpbGRyZW4pe3JldHVybiBfLmtleXMoY2hpbGRyZW4pfX1lbHNlIGlmKHY9PT1HUkFQSF9OT0RFKXtyZXR1cm4gdGhpcy5ub2RlcygpfWVsc2UgaWYodGhpcy5oYXNOb2RlKHYpKXtyZXR1cm5bXX19O0dyYXBoLnByb3RvdHlwZS5wcmVkZWNlc3NvcnM9ZnVuY3Rpb24odil7dmFyIHByZWRzVj10aGlzLl9wcmVkc1t2XTtpZihwcmVkc1Ype3JldHVybiBfLmtleXMocHJlZHNWKX19O0dyYXBoLnByb3RvdHlwZS5zdWNjZXNzb3JzPWZ1bmN0aW9uKHYpe3ZhciBzdWNzVj10aGlzLl9zdWNzW3ZdO2lmKHN1Y3NWKXtyZXR1cm4gXy5rZXlzKHN1Y3NWKX19O0dyYXBoLnByb3RvdHlwZS5uZWlnaGJvcnM9ZnVuY3Rpb24odil7dmFyIHByZWRzPXRoaXMucHJlZGVjZXNzb3JzKHYpO2lmKHByZWRzKXtyZXR1cm4gXy51bmlvbihwcmVkcyx0aGlzLnN1Y2Nlc3NvcnModikpfX07R3JhcGgucHJvdG90eXBlLmlzTGVhZj1mdW5jdGlvbih2KXt2YXIgbmVpZ2hib3JzO2lmKHRoaXMuaXNEaXJlY3RlZCgpKXtuZWlnaGJvcnM9dGhpcy5zdWNjZXNzb3JzKHYpfWVsc2V7bmVpZ2hib3JzPXRoaXMubmVpZ2hib3JzKHYpfXJldHVybiBuZWlnaGJvcnMubGVuZ3RoPT09MH07R3JhcGgucHJvdG90eXBlLmZpbHRlck5vZGVzPWZ1bmN0aW9uKGZpbHRlcil7dmFyIGNvcHk9bmV3IHRoaXMuY29uc3RydWN0b3Ioe2RpcmVjdGVkOnRoaXMuX2lzRGlyZWN0ZWQsbXVsdGlncmFwaDp0aGlzLl9pc011bHRpZ3JhcGgsY29tcG91bmQ6dGhpcy5faXNDb21wb3VuZH0pO2NvcHkuc2V0R3JhcGgodGhpcy5ncmFwaCgpKTt2YXIgc2VsZj10aGlzO18uZWFjaCh0aGlzLl9ub2RlcyxmdW5jdGlvbih2YWx1ZSx2KXtpZihmaWx0ZXIodikpe2NvcHkuc2V0Tm9kZSh2LHZhbHVlKX19KTtfLmVhY2godGhpcy5fZWRnZU9ianMsZnVuY3Rpb24oZSl7aWYoY29weS5oYXNOb2RlKGUudikmJmNvcHkuaGFzTm9kZShlLncpKXtjb3B5LnNldEVkZ2UoZSxzZWxmLmVkZ2UoZSkpfX0pO3ZhciBwYXJlbnRzPXt9O2Z1bmN0aW9uIGZpbmRQYXJlbnQodil7dmFyIHBhcmVudD1zZWxmLnBhcmVudCh2KTtpZihwYXJlbnQ9PT11bmRlZmluZWR8fGNvcHkuaGFzTm9kZShwYXJlbnQpKXtwYXJlbnRzW3ZdPXBhcmVudDtyZXR1cm4gcGFyZW50fWVsc2UgaWYocGFyZW50IGluIHBhcmVudHMpe3JldHVybiBwYXJlbnRzW3BhcmVudF19ZWxzZXtyZXR1cm4gZmluZFBhcmVudChwYXJlbnQpfX1pZih0aGlzLl9pc0NvbXBvdW5kKXtfLmVhY2goY29weS5ub2RlcygpLGZ1bmN0aW9uKHYpe2NvcHkuc2V0UGFyZW50KHYsZmluZFBhcmVudCh2KSl9KX1yZXR1cm4gY29weX07Ci8qID09PSBFZGdlIGZ1bmN0aW9ucyA9PT09PT09PT09ICovR3JhcGgucHJvdG90eXBlLnNldERlZmF1bHRFZGdlTGFiZWw9ZnVuY3Rpb24obmV3RGVmYXVsdCl7aWYoIV8uaXNGdW5jdGlvbihuZXdEZWZhdWx0KSl7bmV3RGVmYXVsdD1fLmNvbnN0YW50KG5ld0RlZmF1bHQpfXRoaXMuX2RlZmF1bHRFZGdlTGFiZWxGbj1uZXdEZWZhdWx0O3JldHVybiB0aGlzfTtHcmFwaC5wcm90b3R5cGUuZWRnZUNvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VkZ2VDb3VudH07R3JhcGgucHJvdG90eXBlLmVkZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIF8udmFsdWVzKHRoaXMuX2VkZ2VPYmpzKX07R3JhcGgucHJvdG90eXBlLnNldFBhdGg9ZnVuY3Rpb24odnMsdmFsdWUpe3ZhciBzZWxmPXRoaXM7dmFyIGFyZ3M9YXJndW1lbnRzO18ucmVkdWNlKHZzLGZ1bmN0aW9uKHYsdyl7aWYoYXJncy5sZW5ndGg+MSl7c2VsZi5zZXRFZGdlKHYsdyx2YWx1ZSl9ZWxzZXtzZWxmLnNldEVkZ2Uodix3KX1yZXR1cm4gd30pO3JldHVybiB0aGlzfTsKLyoKICogc2V0RWRnZSh2LCB3LCBbdmFsdWUsIFtuYW1lXV0pCiAqIHNldEVkZ2UoeyB2LCB3LCBbbmFtZV0gfSwgW3ZhbHVlXSkKICovR3JhcGgucHJvdG90eXBlLnNldEVkZ2U9ZnVuY3Rpb24oKXt2YXIgdix3LG5hbWUsdmFsdWU7dmFyIHZhbHVlU3BlY2lmaWVkPWZhbHNlO3ZhciBhcmcwPWFyZ3VtZW50c1swXTtpZih0eXBlb2YgYXJnMD09PSJvYmplY3QiJiZhcmcwIT09bnVsbCYmInYiaW4gYXJnMCl7dj1hcmcwLnY7dz1hcmcwLnc7bmFtZT1hcmcwLm5hbWU7aWYoYXJndW1lbnRzLmxlbmd0aD09PTIpe3ZhbHVlPWFyZ3VtZW50c1sxXTt2YWx1ZVNwZWNpZmllZD10cnVlfX1lbHNle3Y9YXJnMDt3PWFyZ3VtZW50c1sxXTtuYW1lPWFyZ3VtZW50c1szXTtpZihhcmd1bWVudHMubGVuZ3RoPjIpe3ZhbHVlPWFyZ3VtZW50c1syXTt2YWx1ZVNwZWNpZmllZD10cnVlfX12PSIiK3Y7dz0iIit3O2lmKCFfLmlzVW5kZWZpbmVkKG5hbWUpKXtuYW1lPSIiK25hbWV9dmFyIGU9ZWRnZUFyZ3NUb0lkKHRoaXMuX2lzRGlyZWN0ZWQsdix3LG5hbWUpO2lmKF8uaGFzKHRoaXMuX2VkZ2VMYWJlbHMsZSkpe2lmKHZhbHVlU3BlY2lmaWVkKXt0aGlzLl9lZGdlTGFiZWxzW2VdPXZhbHVlfXJldHVybiB0aGlzfWlmKCFfLmlzVW5kZWZpbmVkKG5hbWUpJiYhdGhpcy5faXNNdWx0aWdyYXBoKXt0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBzZXQgYSBuYW1lZCBlZGdlIHdoZW4gaXNNdWx0aWdyYXBoID0gZmFsc2UiKX0KLy8gSXQgZGlkbid0IGV4aXN0LCBzbyB3ZSBuZWVkIHRvIGNyZWF0ZSBpdC4KLy8gRmlyc3QgZW5zdXJlIHRoZSBub2RlcyBleGlzdC4KdGhpcy5zZXROb2RlKHYpO3RoaXMuc2V0Tm9kZSh3KTt0aGlzLl9lZGdlTGFiZWxzW2VdPXZhbHVlU3BlY2lmaWVkP3ZhbHVlOnRoaXMuX2RlZmF1bHRFZGdlTGFiZWxGbih2LHcsbmFtZSk7dmFyIGVkZ2VPYmo9ZWRnZUFyZ3NUb09iaih0aGlzLl9pc0RpcmVjdGVkLHYsdyxuYW1lKTsKLy8gRW5zdXJlIHdlIGFkZCB1bmRpcmVjdGVkIGVkZ2VzIGluIGEgY29uc2lzdGVudCB3YXkuCnY9ZWRnZU9iai52O3c9ZWRnZU9iai53O09iamVjdC5mcmVlemUoZWRnZU9iaik7dGhpcy5fZWRnZU9ianNbZV09ZWRnZU9iajtpbmNyZW1lbnRPckluaXRFbnRyeSh0aGlzLl9wcmVkc1t3XSx2KTtpbmNyZW1lbnRPckluaXRFbnRyeSh0aGlzLl9zdWNzW3ZdLHcpO3RoaXMuX2luW3ddW2VdPWVkZ2VPYmo7dGhpcy5fb3V0W3ZdW2VdPWVkZ2VPYmo7dGhpcy5fZWRnZUNvdW50Kys7cmV0dXJuIHRoaXN9O0dyYXBoLnByb3RvdHlwZS5lZGdlPWZ1bmN0aW9uKHYsdyxuYW1lKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPT09MT9lZGdlT2JqVG9JZCh0aGlzLl9pc0RpcmVjdGVkLGFyZ3VtZW50c1swXSk6ZWRnZUFyZ3NUb0lkKHRoaXMuX2lzRGlyZWN0ZWQsdix3LG5hbWUpO3JldHVybiB0aGlzLl9lZGdlTGFiZWxzW2VdfTtHcmFwaC5wcm90b3R5cGUuaGFzRWRnZT1mdW5jdGlvbih2LHcsbmFtZSl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD09PTE/ZWRnZU9ialRvSWQodGhpcy5faXNEaXJlY3RlZCxhcmd1bWVudHNbMF0pOmVkZ2VBcmdzVG9JZCh0aGlzLl9pc0RpcmVjdGVkLHYsdyxuYW1lKTtyZXR1cm4gXy5oYXModGhpcy5fZWRnZUxhYmVscyxlKX07R3JhcGgucHJvdG90eXBlLnJlbW92ZUVkZ2U9ZnVuY3Rpb24odix3LG5hbWUpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg9PT0xP2VkZ2VPYmpUb0lkKHRoaXMuX2lzRGlyZWN0ZWQsYXJndW1lbnRzWzBdKTplZGdlQXJnc1RvSWQodGhpcy5faXNEaXJlY3RlZCx2LHcsbmFtZSk7dmFyIGVkZ2U9dGhpcy5fZWRnZU9ianNbZV07aWYoZWRnZSl7dj1lZGdlLnY7dz1lZGdlLnc7ZGVsZXRlIHRoaXMuX2VkZ2VMYWJlbHNbZV07ZGVsZXRlIHRoaXMuX2VkZ2VPYmpzW2VdO2RlY3JlbWVudE9yUmVtb3ZlRW50cnkodGhpcy5fcHJlZHNbd10sdik7ZGVjcmVtZW50T3JSZW1vdmVFbnRyeSh0aGlzLl9zdWNzW3ZdLHcpO2RlbGV0ZSB0aGlzLl9pblt3XVtlXTtkZWxldGUgdGhpcy5fb3V0W3ZdW2VdO3RoaXMuX2VkZ2VDb3VudC0tfXJldHVybiB0aGlzfTtHcmFwaC5wcm90b3R5cGUuaW5FZGdlcz1mdW5jdGlvbih2LHUpe3ZhciBpblY9dGhpcy5faW5bdl07aWYoaW5WKXt2YXIgZWRnZXM9Xy52YWx1ZXMoaW5WKTtpZighdSl7cmV0dXJuIGVkZ2VzfXJldHVybiBfLmZpbHRlcihlZGdlcyxmdW5jdGlvbihlZGdlKXtyZXR1cm4gZWRnZS52PT09dX0pfX07R3JhcGgucHJvdG90eXBlLm91dEVkZ2VzPWZ1bmN0aW9uKHYsdyl7dmFyIG91dFY9dGhpcy5fb3V0W3ZdO2lmKG91dFYpe3ZhciBlZGdlcz1fLnZhbHVlcyhvdXRWKTtpZighdyl7cmV0dXJuIGVkZ2VzfXJldHVybiBfLmZpbHRlcihlZGdlcyxmdW5jdGlvbihlZGdlKXtyZXR1cm4gZWRnZS53PT09d30pfX07R3JhcGgucHJvdG90eXBlLm5vZGVFZGdlcz1mdW5jdGlvbih2LHcpe3ZhciBpbkVkZ2VzPXRoaXMuaW5FZGdlcyh2LHcpO2lmKGluRWRnZXMpe3JldHVybiBpbkVkZ2VzLmNvbmNhdCh0aGlzLm91dEVkZ2VzKHYsdykpfX07ZnVuY3Rpb24gaW5jcmVtZW50T3JJbml0RW50cnkobWFwLGspe2lmKG1hcFtrXSl7bWFwW2tdKyt9ZWxzZXttYXBba109MX19ZnVuY3Rpb24gZGVjcmVtZW50T3JSZW1vdmVFbnRyeShtYXAsayl7aWYoIS0tbWFwW2tdKXtkZWxldGUgbWFwW2tdfX1mdW5jdGlvbiBlZGdlQXJnc1RvSWQoaXNEaXJlY3RlZCx2Xyx3XyxuYW1lKXt2YXIgdj0iIit2Xzt2YXIgdz0iIit3XztpZighaXNEaXJlY3RlZCYmdj53KXt2YXIgdG1wPXY7dj13O3c9dG1wfXJldHVybiB2K0VER0VfS0VZX0RFTElNK3crRURHRV9LRVlfREVMSU0rKF8uaXNVbmRlZmluZWQobmFtZSk/REVGQVVMVF9FREdFX05BTUU6bmFtZSl9ZnVuY3Rpb24gZWRnZUFyZ3NUb09iaihpc0RpcmVjdGVkLHZfLHdfLG5hbWUpe3ZhciB2PSIiK3ZfO3ZhciB3PSIiK3dfO2lmKCFpc0RpcmVjdGVkJiZ2Pncpe3ZhciB0bXA9djt2PXc7dz10bXB9dmFyIGVkZ2VPYmo9e3Y6dix3Ond9O2lmKG5hbWUpe2VkZ2VPYmoubmFtZT1uYW1lfXJldHVybiBlZGdlT2JqfWZ1bmN0aW9uIGVkZ2VPYmpUb0lkKGlzRGlyZWN0ZWQsZWRnZU9iail7cmV0dXJuIGVkZ2VBcmdzVG9JZChpc0RpcmVjdGVkLGVkZ2VPYmoudixlZGdlT2JqLncsZWRnZU9iai5uYW1lKX19LHsiLi9sb2Rhc2giOjEwOX1dLDEwNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8vIEluY2x1ZGVzIG9ubHkgdGhlICJjb3JlIiBvZiBncmFwaGxpYgptb2R1bGUuZXhwb3J0cz17R3JhcGg6cmVxdWlyZSgiLi9ncmFwaCIpLHZlcnNpb246cmVxdWlyZSgiLi92ZXJzaW9uIil9fSx7Ii4vZ3JhcGgiOjEwNiwiLi92ZXJzaW9uIjoxMTB9XSwxMDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBfPXJlcXVpcmUoIi4vbG9kYXNoIik7dmFyIEdyYXBoPXJlcXVpcmUoIi4vZ3JhcGgiKTttb2R1bGUuZXhwb3J0cz17d3JpdGU6d3JpdGUscmVhZDpyZWFkfTtmdW5jdGlvbiB3cml0ZShnKXt2YXIganNvbj17b3B0aW9uczp7ZGlyZWN0ZWQ6Zy5pc0RpcmVjdGVkKCksbXVsdGlncmFwaDpnLmlzTXVsdGlncmFwaCgpLGNvbXBvdW5kOmcuaXNDb21wb3VuZCgpfSxub2Rlczp3cml0ZU5vZGVzKGcpLGVkZ2VzOndyaXRlRWRnZXMoZyl9O2lmKCFfLmlzVW5kZWZpbmVkKGcuZ3JhcGgoKSkpe2pzb24udmFsdWU9Xy5jbG9uZShnLmdyYXBoKCkpfXJldHVybiBqc29ufWZ1bmN0aW9uIHdyaXRlTm9kZXMoZyl7cmV0dXJuIF8ubWFwKGcubm9kZXMoKSxmdW5jdGlvbih2KXt2YXIgbm9kZVZhbHVlPWcubm9kZSh2KTt2YXIgcGFyZW50PWcucGFyZW50KHYpO3ZhciBub2RlPXt2OnZ9O2lmKCFfLmlzVW5kZWZpbmVkKG5vZGVWYWx1ZSkpe25vZGUudmFsdWU9bm9kZVZhbHVlfWlmKCFfLmlzVW5kZWZpbmVkKHBhcmVudCkpe25vZGUucGFyZW50PXBhcmVudH1yZXR1cm4gbm9kZX0pfWZ1bmN0aW9uIHdyaXRlRWRnZXMoZyl7cmV0dXJuIF8ubWFwKGcuZWRnZXMoKSxmdW5jdGlvbihlKXt2YXIgZWRnZVZhbHVlPWcuZWRnZShlKTt2YXIgZWRnZT17djplLnYsdzplLnd9O2lmKCFfLmlzVW5kZWZpbmVkKGUubmFtZSkpe2VkZ2UubmFtZT1lLm5hbWV9aWYoIV8uaXNVbmRlZmluZWQoZWRnZVZhbHVlKSl7ZWRnZS52YWx1ZT1lZGdlVmFsdWV9cmV0dXJuIGVkZ2V9KX1mdW5jdGlvbiByZWFkKGpzb24pe3ZhciBnPW5ldyBHcmFwaChqc29uLm9wdGlvbnMpLnNldEdyYXBoKGpzb24udmFsdWUpO18uZWFjaChqc29uLm5vZGVzLGZ1bmN0aW9uKGVudHJ5KXtnLnNldE5vZGUoZW50cnkudixlbnRyeS52YWx1ZSk7aWYoZW50cnkucGFyZW50KXtnLnNldFBhcmVudChlbnRyeS52LGVudHJ5LnBhcmVudCl9fSk7Xy5lYWNoKGpzb24uZWRnZXMsZnVuY3Rpb24oZW50cnkpe2cuc2V0RWRnZSh7djplbnRyeS52LHc6ZW50cnkudyxuYW1lOmVudHJ5Lm5hbWV9LGVudHJ5LnZhbHVlKX0pO3JldHVybiBnfX0seyIuL2dyYXBoIjoxMDYsIi4vbG9kYXNoIjoxMDl9XSwxMDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiBnbG9iYWwgd2luZG93ICovCnZhciBsb2Rhc2g7aWYodHlwZW9mIHJlcXVpcmU9PT0iZnVuY3Rpb24iKXt0cnl7bG9kYXNoPXtjbG9uZTpyZXF1aXJlKCJsb2Rhc2gvY2xvbmUiKSxjb25zdGFudDpyZXF1aXJlKCJsb2Rhc2gvY29uc3RhbnQiKSxlYWNoOnJlcXVpcmUoImxvZGFzaC9lYWNoIiksZmlsdGVyOnJlcXVpcmUoImxvZGFzaC9maWx0ZXIiKSxoYXM6cmVxdWlyZSgibG9kYXNoL2hhcyIpLGlzQXJyYXk6cmVxdWlyZSgibG9kYXNoL2lzQXJyYXkiKSxpc0VtcHR5OnJlcXVpcmUoImxvZGFzaC9pc0VtcHR5IiksaXNGdW5jdGlvbjpyZXF1aXJlKCJsb2Rhc2gvaXNGdW5jdGlvbiIpLGlzVW5kZWZpbmVkOnJlcXVpcmUoImxvZGFzaC9pc1VuZGVmaW5lZCIpLGtleXM6cmVxdWlyZSgibG9kYXNoL2tleXMiKSxtYXA6cmVxdWlyZSgibG9kYXNoL21hcCIpLHJlZHVjZTpyZXF1aXJlKCJsb2Rhc2gvcmVkdWNlIiksc2l6ZTpyZXF1aXJlKCJsb2Rhc2gvc2l6ZSIpLHRyYW5zZm9ybTpyZXF1aXJlKCJsb2Rhc2gvdHJhbnNmb3JtIiksdW5pb246cmVxdWlyZSgibG9kYXNoL3VuaW9uIiksdmFsdWVzOnJlcXVpcmUoImxvZGFzaC92YWx1ZXMiKX19Y2F0Y2goZSl7Ci8vIGNvbnRpbnVlIHJlZ2FyZGxlc3Mgb2YgZXJyb3IKfX1pZighbG9kYXNoKXtsb2Rhc2g9d2luZG93Ll99bW9kdWxlLmV4cG9ydHM9bG9kYXNofSx7ImxvZGFzaC9jbG9uZSI6Mjg2LCJsb2Rhc2gvY29uc3RhbnQiOjI4OCwibG9kYXNoL2VhY2giOjI5MCwibG9kYXNoL2ZpbHRlciI6MjkyLCJsb2Rhc2gvaGFzIjoyOTksImxvZGFzaC9pc0FycmF5IjozMDMsImxvZGFzaC9pc0VtcHR5IjozMDcsImxvZGFzaC9pc0Z1bmN0aW9uIjozMDgsImxvZGFzaC9pc1VuZGVmaW5lZCI6MzE4LCJsb2Rhc2gva2V5cyI6MzE5LCJsb2Rhc2gvbWFwIjozMjIsImxvZGFzaC9yZWR1Y2UiOjMzNCwibG9kYXNoL3NpemUiOjMzNSwibG9kYXNoL3RyYW5zZm9ybSI6MzQ0LCJsb2Rhc2gvdW5pb24iOjM0NSwibG9kYXNoL3ZhbHVlcyI6MzQ3fV0sMTEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz0iMi4xLjgifSx7fV0sMTExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZ2V0TmF0aXZlPXJlcXVpcmUoIi4vX2dldE5hdGl2ZSIpLHJvb3Q9cmVxdWlyZSgiLi9fcm9vdCIpOwovKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovdmFyIERhdGFWaWV3PWdldE5hdGl2ZShyb290LCJEYXRhVmlldyIpO21vZHVsZS5leHBvcnRzPURhdGFWaWV3fSx7Ii4vX2dldE5hdGl2ZSI6MjIzLCIuL19yb290IjoyNjh9XSwxMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBoYXNoQ2xlYXI9cmVxdWlyZSgiLi9faGFzaENsZWFyIiksaGFzaERlbGV0ZT1yZXF1aXJlKCIuL19oYXNoRGVsZXRlIiksaGFzaEdldD1yZXF1aXJlKCIuL19oYXNoR2V0IiksaGFzaEhhcz1yZXF1aXJlKCIuL19oYXNoSGFzIiksaGFzaFNldD1yZXF1aXJlKCIuL19oYXNoU2V0Iik7Ci8qKgogKiBDcmVhdGVzIGEgaGFzaCBvYmplY3QuCiAqCiAqIEBwcml2YXRlCiAqIEBjb25zdHJ1Y3RvcgogKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS4KICovZnVuY3Rpb24gSGFzaChlbnRyaWVzKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWVudHJpZXM9PW51bGw/MDplbnRyaWVzLmxlbmd0aDt0aGlzLmNsZWFyKCk7d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciBlbnRyeT1lbnRyaWVzW2luZGV4XTt0aGlzLnNldChlbnRyeVswXSxlbnRyeVsxXSl9fQovLyBBZGQgbWV0aG9kcyB0byBgSGFzaGAuCkhhc2gucHJvdG90eXBlLmNsZWFyPWhhc2hDbGVhcjtIYXNoLnByb3RvdHlwZVsiZGVsZXRlIl09aGFzaERlbGV0ZTtIYXNoLnByb3RvdHlwZS5nZXQ9aGFzaEdldDtIYXNoLnByb3RvdHlwZS5oYXM9aGFzaEhhcztIYXNoLnByb3RvdHlwZS5zZXQ9aGFzaFNldDttb2R1bGUuZXhwb3J0cz1IYXNofSx7Ii4vX2hhc2hDbGVhciI6MjMyLCIuL19oYXNoRGVsZXRlIjoyMzMsIi4vX2hhc2hHZXQiOjIzNCwiLi9faGFzaEhhcyI6MjM1LCIuL19oYXNoU2V0IjoyMzZ9XSwxMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBsaXN0Q2FjaGVDbGVhcj1yZXF1aXJlKCIuL19saXN0Q2FjaGVDbGVhciIpLGxpc3RDYWNoZURlbGV0ZT1yZXF1aXJlKCIuL19saXN0Q2FjaGVEZWxldGUiKSxsaXN0Q2FjaGVHZXQ9cmVxdWlyZSgiLi9fbGlzdENhY2hlR2V0IiksbGlzdENhY2hlSGFzPXJlcXVpcmUoIi4vX2xpc3RDYWNoZUhhcyIpLGxpc3RDYWNoZVNldD1yZXF1aXJlKCIuL19saXN0Q2FjaGVTZXQiKTsKLyoqCiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuCiAqCiAqIEBwcml2YXRlCiAqIEBjb25zdHJ1Y3RvcgogKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS4KICovZnVuY3Rpb24gTGlzdENhY2hlKGVudHJpZXMpe3ZhciBpbmRleD0tMSxsZW5ndGg9ZW50cmllcz09bnVsbD8wOmVudHJpZXMubGVuZ3RoO3RoaXMuY2xlYXIoKTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7dmFyIGVudHJ5PWVudHJpZXNbaW5kZXhdO3RoaXMuc2V0KGVudHJ5WzBdLGVudHJ5WzFdKX19Ci8vIEFkZCBtZXRob2RzIHRvIGBMaXN0Q2FjaGVgLgpMaXN0Q2FjaGUucHJvdG90eXBlLmNsZWFyPWxpc3RDYWNoZUNsZWFyO0xpc3RDYWNoZS5wcm90b3R5cGVbImRlbGV0ZSJdPWxpc3RDYWNoZURlbGV0ZTtMaXN0Q2FjaGUucHJvdG90eXBlLmdldD1saXN0Q2FjaGVHZXQ7TGlzdENhY2hlLnByb3RvdHlwZS5oYXM9bGlzdENhY2hlSGFzO0xpc3RDYWNoZS5wcm90b3R5cGUuc2V0PWxpc3RDYWNoZVNldDttb2R1bGUuZXhwb3J0cz1MaXN0Q2FjaGV9LHsiLi9fbGlzdENhY2hlQ2xlYXIiOjI0OCwiLi9fbGlzdENhY2hlRGVsZXRlIjoyNDksIi4vX2xpc3RDYWNoZUdldCI6MjUwLCIuL19saXN0Q2FjaGVIYXMiOjI1MSwiLi9fbGlzdENhY2hlU2V0IjoyNTJ9XSwxMTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBnZXROYXRpdmU9cmVxdWlyZSgiLi9fZ2V0TmF0aXZlIikscm9vdD1yZXF1aXJlKCIuL19yb290Iik7Ci8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi92YXIgTWFwPWdldE5hdGl2ZShyb290LCJNYXAiKTttb2R1bGUuZXhwb3J0cz1NYXB9LHsiLi9fZ2V0TmF0aXZlIjoyMjMsIi4vX3Jvb3QiOjI2OH1dLDExNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIG1hcENhY2hlQ2xlYXI9cmVxdWlyZSgiLi9fbWFwQ2FjaGVDbGVhciIpLG1hcENhY2hlRGVsZXRlPXJlcXVpcmUoIi4vX21hcENhY2hlRGVsZXRlIiksbWFwQ2FjaGVHZXQ9cmVxdWlyZSgiLi9fbWFwQ2FjaGVHZXQiKSxtYXBDYWNoZUhhcz1yZXF1aXJlKCIuL19tYXBDYWNoZUhhcyIpLG1hcENhY2hlU2V0PXJlcXVpcmUoIi4vX21hcENhY2hlU2V0Iik7Ci8qKgogKiBDcmVhdGVzIGEgbWFwIGNhY2hlIG9iamVjdCB0byBzdG9yZSBrZXktdmFsdWUgcGFpcnMuCiAqCiAqIEBwcml2YXRlCiAqIEBjb25zdHJ1Y3RvcgogKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS4KICovZnVuY3Rpb24gTWFwQ2FjaGUoZW50cmllcyl7dmFyIGluZGV4PS0xLGxlbmd0aD1lbnRyaWVzPT1udWxsPzA6ZW50cmllcy5sZW5ndGg7dGhpcy5jbGVhcigpO3doaWxlKCsraW5kZXg8bGVuZ3RoKXt2YXIgZW50cnk9ZW50cmllc1tpbmRleF07dGhpcy5zZXQoZW50cnlbMF0sZW50cnlbMV0pfX0KLy8gQWRkIG1ldGhvZHMgdG8gYE1hcENhY2hlYC4KTWFwQ2FjaGUucHJvdG90eXBlLmNsZWFyPW1hcENhY2hlQ2xlYXI7TWFwQ2FjaGUucHJvdG90eXBlWyJkZWxldGUiXT1tYXBDYWNoZURlbGV0ZTtNYXBDYWNoZS5wcm90b3R5cGUuZ2V0PW1hcENhY2hlR2V0O01hcENhY2hlLnByb3RvdHlwZS5oYXM9bWFwQ2FjaGVIYXM7TWFwQ2FjaGUucHJvdG90eXBlLnNldD1tYXBDYWNoZVNldDttb2R1bGUuZXhwb3J0cz1NYXBDYWNoZX0seyIuL19tYXBDYWNoZUNsZWFyIjoyNTMsIi4vX21hcENhY2hlRGVsZXRlIjoyNTQsIi4vX21hcENhY2hlR2V0IjoyNTUsIi4vX21hcENhY2hlSGFzIjoyNTYsIi4vX21hcENhY2hlU2V0IjoyNTd9XSwxMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBnZXROYXRpdmU9cmVxdWlyZSgiLi9fZ2V0TmF0aXZlIikscm9vdD1yZXF1aXJlKCIuL19yb290Iik7Ci8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi92YXIgUHJvbWlzZT1nZXROYXRpdmUocm9vdCwiUHJvbWlzZSIpO21vZHVsZS5leHBvcnRzPVByb21pc2V9LHsiLi9fZ2V0TmF0aXZlIjoyMjMsIi4vX3Jvb3QiOjI2OH1dLDExNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGdldE5hdGl2ZT1yZXF1aXJlKCIuL19nZXROYXRpdmUiKSxyb290PXJlcXVpcmUoIi4vX3Jvb3QiKTsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL3ZhciBTZXQ9Z2V0TmF0aXZlKHJvb3QsIlNldCIpO21vZHVsZS5leHBvcnRzPVNldH0seyIuL19nZXROYXRpdmUiOjIyMywiLi9fcm9vdCI6MjY4fV0sMTE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgTWFwQ2FjaGU9cmVxdWlyZSgiLi9fTWFwQ2FjaGUiKSxzZXRDYWNoZUFkZD1yZXF1aXJlKCIuL19zZXRDYWNoZUFkZCIpLHNldENhY2hlSGFzPXJlcXVpcmUoIi4vX3NldENhY2hlSGFzIik7Ci8qKgogKgogKiBDcmVhdGVzIGFuIGFycmF5IGNhY2hlIG9iamVjdCB0byBzdG9yZSB1bmlxdWUgdmFsdWVzLgogKgogKiBAcHJpdmF0ZQogKiBAY29uc3RydWN0b3IKICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBjYWNoZS4KICovZnVuY3Rpb24gU2V0Q2FjaGUodmFsdWVzKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPXZhbHVlcz09bnVsbD8wOnZhbHVlcy5sZW5ndGg7dGhpcy5fX2RhdGFfXz1uZXcgTWFwQ2FjaGU7d2hpbGUoKytpbmRleDxsZW5ndGgpe3RoaXMuYWRkKHZhbHVlc1tpbmRleF0pfX0KLy8gQWRkIG1ldGhvZHMgdG8gYFNldENhY2hlYC4KU2V0Q2FjaGUucHJvdG90eXBlLmFkZD1TZXRDYWNoZS5wcm90b3R5cGUucHVzaD1zZXRDYWNoZUFkZDtTZXRDYWNoZS5wcm90b3R5cGUuaGFzPXNldENhY2hlSGFzO21vZHVsZS5leHBvcnRzPVNldENhY2hlfSx7Ii4vX01hcENhY2hlIjoxMTUsIi4vX3NldENhY2hlQWRkIjoyNzAsIi4vX3NldENhY2hlSGFzIjoyNzF9XSwxMTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBMaXN0Q2FjaGU9cmVxdWlyZSgiLi9fTGlzdENhY2hlIiksc3RhY2tDbGVhcj1yZXF1aXJlKCIuL19zdGFja0NsZWFyIiksc3RhY2tEZWxldGU9cmVxdWlyZSgiLi9fc3RhY2tEZWxldGUiKSxzdGFja0dldD1yZXF1aXJlKCIuL19zdGFja0dldCIpLHN0YWNrSGFzPXJlcXVpcmUoIi4vX3N0YWNrSGFzIiksc3RhY2tTZXQ9cmVxdWlyZSgiLi9fc3RhY2tTZXQiKTsKLyoqCiAqIENyZWF0ZXMgYSBzdGFjayBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLgogKgogKiBAcHJpdmF0ZQogKiBAY29uc3RydWN0b3IKICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuCiAqL2Z1bmN0aW9uIFN0YWNrKGVudHJpZXMpe3ZhciBkYXRhPXRoaXMuX19kYXRhX189bmV3IExpc3RDYWNoZShlbnRyaWVzKTt0aGlzLnNpemU9ZGF0YS5zaXplfQovLyBBZGQgbWV0aG9kcyB0byBgU3RhY2tgLgpTdGFjay5wcm90b3R5cGUuY2xlYXI9c3RhY2tDbGVhcjtTdGFjay5wcm90b3R5cGVbImRlbGV0ZSJdPXN0YWNrRGVsZXRlO1N0YWNrLnByb3RvdHlwZS5nZXQ9c3RhY2tHZXQ7U3RhY2sucHJvdG90eXBlLmhhcz1zdGFja0hhcztTdGFjay5wcm90b3R5cGUuc2V0PXN0YWNrU2V0O21vZHVsZS5leHBvcnRzPVN0YWNrfSx7Ii4vX0xpc3RDYWNoZSI6MTEzLCIuL19zdGFja0NsZWFyIjoyNzUsIi4vX3N0YWNrRGVsZXRlIjoyNzYsIi4vX3N0YWNrR2V0IjoyNzcsIi4vX3N0YWNrSGFzIjoyNzgsIi4vX3N0YWNrU2V0IjoyNzl9XSwxMjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciByb290PXJlcXVpcmUoIi4vX3Jvb3QiKTsKLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovdmFyIFN5bWJvbD1yb290LlN5bWJvbDttb2R1bGUuZXhwb3J0cz1TeW1ib2x9LHsiLi9fcm9vdCI6MjY4fV0sMTIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgcm9vdD1yZXF1aXJlKCIuL19yb290Iik7Ci8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL3ZhciBVaW50OEFycmF5PXJvb3QuVWludDhBcnJheTttb2R1bGUuZXhwb3J0cz1VaW50OEFycmF5fSx7Ii4vX3Jvb3QiOjI2OH1dLDEyMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGdldE5hdGl2ZT1yZXF1aXJlKCIuL19nZXROYXRpdmUiKSxyb290PXJlcXVpcmUoIi4vX3Jvb3QiKTsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL3ZhciBXZWFrTWFwPWdldE5hdGl2ZShyb290LCJXZWFrTWFwIik7bW9kdWxlLmV4cG9ydHM9V2Vha01hcH0seyIuL19nZXROYXRpdmUiOjIyMywiLi9fcm9vdCI6MjY4fV0sMTIzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIEEgZmFzdGVyIGFsdGVybmF0aXZlIHRvIGBGdW5jdGlvbiNhcHBseWAsIHRoaXMgZnVuY3Rpb24gaW52b2tlcyBgZnVuY2AKICogd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgYHRoaXNBcmdgIGFuZCB0aGUgYXJndW1lbnRzIG9mIGBhcmdzYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaW52b2tlLgogKiBAcGFyYW0geyp9IHRoaXNBcmcgVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBmdW5jYC4KICogQHBhcmFtIHtBcnJheX0gYXJncyBUaGUgYXJndW1lbnRzIHRvIGludm9rZSBgZnVuY2Agd2l0aC4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc3VsdCBvZiBgZnVuY2AuCiAqLwpmdW5jdGlvbiBhcHBseShmdW5jLHRoaXNBcmcsYXJncyl7c3dpdGNoKGFyZ3MubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnKTtjYXNlIDE6cmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLGFyZ3NbMF0pO2Nhc2UgMjpyZXR1cm4gZnVuYy5jYWxsKHRoaXNBcmcsYXJnc1swXSxhcmdzWzFdKTtjYXNlIDM6cmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLGFyZ3NbMF0sYXJnc1sxXSxhcmdzWzJdKX1yZXR1cm4gZnVuYy5hcHBseSh0aGlzQXJnLGFyZ3MpfW1vZHVsZS5leHBvcnRzPWFwcGx5fSx7fV0sMTI0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5mb3JFYWNoYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IKICogaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC4KICovCmZ1bmN0aW9uIGFycmF5RWFjaChhcnJheSxpdGVyYXRlZSl7dmFyIGluZGV4PS0xLGxlbmd0aD1hcnJheT09bnVsbD8wOmFycmF5Lmxlbmd0aDt3aGlsZSgrK2luZGV4PGxlbmd0aCl7aWYoaXRlcmF0ZWUoYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KT09PWZhbHNlKXticmVha319cmV0dXJuIGFycmF5fW1vZHVsZS5leHBvcnRzPWFycmF5RWFjaH0se31dLDEyNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8uZmlsdGVyYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IKICogaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmlsdGVyZWQgYXJyYXkuCiAqLwpmdW5jdGlvbiBhcnJheUZpbHRlcihhcnJheSxwcmVkaWNhdGUpe3ZhciBpbmRleD0tMSxsZW5ndGg9YXJyYXk9PW51bGw/MDphcnJheS5sZW5ndGgscmVzSW5kZXg9MCxyZXN1bHQ9W107d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciB2YWx1ZT1hcnJheVtpbmRleF07aWYocHJlZGljYXRlKHZhbHVlLGluZGV4LGFycmF5KSl7cmVzdWx0W3Jlc0luZGV4KytdPXZhbHVlfX1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWFycmF5RmlsdGVyfSx7fV0sMTI2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUluZGV4T2Y9cmVxdWlyZSgiLi9fYmFzZUluZGV4T2YiKTsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5pbmNsdWRlc2AgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yCiAqIHNwZWNpZnlpbmcgYW4gaW5kZXggdG8gc2VhcmNoIGZyb20uCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7Kn0gdGFyZ2V0IFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHRhcmdldGAgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gYXJyYXlJbmNsdWRlcyhhcnJheSx2YWx1ZSl7dmFyIGxlbmd0aD1hcnJheT09bnVsbD8wOmFycmF5Lmxlbmd0aDtyZXR1cm4hIWxlbmd0aCYmYmFzZUluZGV4T2YoYXJyYXksdmFsdWUsMCk+LTF9bW9kdWxlLmV4cG9ydHM9YXJyYXlJbmNsdWRlc30seyIuL19iYXNlSW5kZXhPZiI6MTU1fV0sMTI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFRoaXMgZnVuY3Rpb24gaXMgbGlrZSBgYXJyYXlJbmNsdWRlc2AgZXhjZXB0IHRoYXQgaXQgYWNjZXB0cyBhIGNvbXBhcmF0b3IuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7Kn0gdGFyZ2V0IFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJhdG9yIFRoZSBjb21wYXJhdG9yIGludm9rZWQgcGVyIGVsZW1lbnQuCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdGFyZ2V0YCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLgogKi8KZnVuY3Rpb24gYXJyYXlJbmNsdWRlc1dpdGgoYXJyYXksdmFsdWUsY29tcGFyYXRvcil7dmFyIGluZGV4PS0xLGxlbmd0aD1hcnJheT09bnVsbD8wOmFycmF5Lmxlbmd0aDt3aGlsZSgrK2luZGV4PGxlbmd0aCl7aWYoY29tcGFyYXRvcih2YWx1ZSxhcnJheVtpbmRleF0pKXtyZXR1cm4gdHJ1ZX19cmV0dXJuIGZhbHNlfW1vZHVsZS5leHBvcnRzPWFycmF5SW5jbHVkZXNXaXRofSx7fV0sMTI4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVRpbWVzPXJlcXVpcmUoIi4vX2Jhc2VUaW1lcyIpLGlzQXJndW1lbnRzPXJlcXVpcmUoIi4vaXNBcmd1bWVudHMiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpLGlzQnVmZmVyPXJlcXVpcmUoIi4vaXNCdWZmZXIiKSxpc0luZGV4PXJlcXVpcmUoIi4vX2lzSW5kZXgiKSxpc1R5cGVkQXJyYXk9cmVxdWlyZSgiLi9pc1R5cGVkQXJyYXkiKTsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL3ZhciBvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi92YXIgaGFzT3duUHJvcGVydHk9b2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7Ci8qKgogKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LgogKiBAcGFyYW0ge2Jvb2xlYW59IGluaGVyaXRlZCBTcGVjaWZ5IHJldHVybmluZyBpbmhlcml0ZWQgcHJvcGVydHkgbmFtZXMuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuCiAqL2Z1bmN0aW9uIGFycmF5TGlrZUtleXModmFsdWUsaW5oZXJpdGVkKXt2YXIgaXNBcnI9aXNBcnJheSh2YWx1ZSksaXNBcmc9IWlzQXJyJiZpc0FyZ3VtZW50cyh2YWx1ZSksaXNCdWZmPSFpc0FyciYmIWlzQXJnJiZpc0J1ZmZlcih2YWx1ZSksaXNUeXBlPSFpc0FyciYmIWlzQXJnJiYhaXNCdWZmJiZpc1R5cGVkQXJyYXkodmFsdWUpLHNraXBJbmRleGVzPWlzQXJyfHxpc0FyZ3x8aXNCdWZmfHxpc1R5cGUscmVzdWx0PXNraXBJbmRleGVzP2Jhc2VUaW1lcyh2YWx1ZS5sZW5ndGgsU3RyaW5nKTpbXSxsZW5ndGg9cmVzdWx0Lmxlbmd0aDtmb3IodmFyIGtleSBpbiB2YWx1ZSl7aWYoKGluaGVyaXRlZHx8aGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSxrZXkpKSYmIShza2lwSW5kZXhlcyYmKAovLyBTYWZhcmkgOSBoYXMgZW51bWVyYWJsZSBgYXJndW1lbnRzLmxlbmd0aGAgaW4gc3RyaWN0IG1vZGUuCmtleT09Imxlbmd0aCJ8fAovLyBOb2RlLmpzIDAuMTAgaGFzIGVudW1lcmFibGUgbm9uLWluZGV4IHByb3BlcnRpZXMgb24gYnVmZmVycy4KaXNCdWZmJiYoa2V5PT0ib2Zmc2V0Inx8a2V5PT0icGFyZW50Iil8fAovLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuCmlzVHlwZSYmKGtleT09ImJ1ZmZlciJ8fGtleT09ImJ5dGVMZW5ndGgifHxrZXk9PSJieXRlT2Zmc2V0Iil8fAovLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuCmlzSW5kZXgoa2V5LGxlbmd0aCkpKSl7cmVzdWx0LnB1c2goa2V5KX19cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1hcnJheUxpa2VLZXlzfSx7Ii4vX2Jhc2VUaW1lcyI6MTg1LCIuL19pc0luZGV4IjoyNDEsIi4vaXNBcmd1bWVudHMiOjMwMiwiLi9pc0FycmF5IjozMDMsIi4vaXNCdWZmZXIiOjMwNiwiLi9pc1R5cGVkQXJyYXkiOjMxN31dLDEyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8ubWFwYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUKICogc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuCiAqLwpmdW5jdGlvbiBhcnJheU1hcChhcnJheSxpdGVyYXRlZSl7dmFyIGluZGV4PS0xLGxlbmd0aD1hcnJheT09bnVsbD8wOmFycmF5Lmxlbmd0aCxyZXN1bHQ9QXJyYXkobGVuZ3RoKTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7cmVzdWx0W2luZGV4XT1pdGVyYXRlZShhcnJheVtpbmRleF0saW5kZXgsYXJyYXkpfXJldHVybiByZXN1bHR9bW9kdWxlLmV4cG9ydHM9YXJyYXlNYXB9LHt9XSwxMzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQXBwZW5kcyB0aGUgZWxlbWVudHMgb2YgYHZhbHVlc2AgdG8gYGFycmF5YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIG1vZGlmeS4KICogQHBhcmFtIHtBcnJheX0gdmFsdWVzIFRoZSB2YWx1ZXMgdG8gYXBwZW5kLgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC4KICovCmZ1bmN0aW9uIGFycmF5UHVzaChhcnJheSx2YWx1ZXMpe3ZhciBpbmRleD0tMSxsZW5ndGg9dmFsdWVzLmxlbmd0aCxvZmZzZXQ9YXJyYXkubGVuZ3RoO3doaWxlKCsraW5kZXg8bGVuZ3RoKXthcnJheVtvZmZzZXQraW5kZXhdPXZhbHVlc1tpbmRleF19cmV0dXJuIGFycmF5fW1vZHVsZS5leHBvcnRzPWFycmF5UHVzaH0se31dLDEzMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8ucmVkdWNlYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IKICogaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcGFyYW0geyp9IFthY2N1bXVsYXRvcl0gVGhlIGluaXRpYWwgdmFsdWUuCiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2luaXRBY2N1bV0gU3BlY2lmeSB1c2luZyB0aGUgZmlyc3QgZWxlbWVudCBvZiBgYXJyYXlgIGFzCiAqICB0aGUgaW5pdGlhbCB2YWx1ZS4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGFjY3VtdWxhdGVkIHZhbHVlLgogKi8KZnVuY3Rpb24gYXJyYXlSZWR1Y2UoYXJyYXksaXRlcmF0ZWUsYWNjdW11bGF0b3IsaW5pdEFjY3VtKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWFycmF5PT1udWxsPzA6YXJyYXkubGVuZ3RoO2lmKGluaXRBY2N1bSYmbGVuZ3RoKXthY2N1bXVsYXRvcj1hcnJheVsrK2luZGV4XX13aGlsZSgrK2luZGV4PGxlbmd0aCl7YWNjdW11bGF0b3I9aXRlcmF0ZWUoYWNjdW11bGF0b3IsYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KX1yZXR1cm4gYWNjdW11bGF0b3J9bW9kdWxlLmV4cG9ydHM9YXJyYXlSZWR1Y2V9LHt9XSwxMzI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLnNvbWVgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZQogKiBzaG9ydGhhbmRzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW55IGVsZW1lbnQgcGFzc2VzIHRoZSBwcmVkaWNhdGUgY2hlY2ssCiAqICBlbHNlIGBmYWxzZWAuCiAqLwpmdW5jdGlvbiBhcnJheVNvbWUoYXJyYXkscHJlZGljYXRlKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWFycmF5PT1udWxsPzA6YXJyYXkubGVuZ3RoO3doaWxlKCsraW5kZXg8bGVuZ3RoKXtpZihwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KSl7cmV0dXJuIHRydWV9fXJldHVybiBmYWxzZX1tb2R1bGUuZXhwb3J0cz1hcnJheVNvbWV9LHt9XSwxMzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlUHJvcGVydHk9cmVxdWlyZSgiLi9fYmFzZVByb3BlcnR5Iik7Ci8qKgogKiBHZXRzIHRoZSBzaXplIG9mIGFuIEFTQ0lJIGBzdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgaW5zcGVjdC4KICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc3RyaW5nIHNpemUuCiAqL3ZhciBhc2NpaVNpemU9YmFzZVByb3BlcnR5KCJsZW5ndGgiKTttb2R1bGUuZXhwb3J0cz1hc2NpaVNpemV9LHsiLi9fYmFzZVByb3BlcnR5IjoxNzd9XSwxMzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlQXNzaWduVmFsdWU9cmVxdWlyZSgiLi9fYmFzZUFzc2lnblZhbHVlIiksZXE9cmVxdWlyZSgiLi9lcSIpOwovKioKICogVGhpcyBmdW5jdGlvbiBpcyBsaWtlIGBhc3NpZ25WYWx1ZWAgZXhjZXB0IHRoYXQgaXQgZG9lc24ndCBhc3NpZ24KICogYHVuZGVmaW5lZGAgdmFsdWVzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gbW9kaWZ5LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi4KICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYXNzaWduLgogKi9mdW5jdGlvbiBhc3NpZ25NZXJnZVZhbHVlKG9iamVjdCxrZXksdmFsdWUpe2lmKHZhbHVlIT09dW5kZWZpbmVkJiYhZXEob2JqZWN0W2tleV0sdmFsdWUpfHx2YWx1ZT09PXVuZGVmaW5lZCYmIShrZXkgaW4gb2JqZWN0KSl7YmFzZUFzc2lnblZhbHVlKG9iamVjdCxrZXksdmFsdWUpfX1tb2R1bGUuZXhwb3J0cz1hc3NpZ25NZXJnZVZhbHVlfSx7Ii4vX2Jhc2VBc3NpZ25WYWx1ZSI6MTM5LCIuL2VxIjoyOTF9XSwxMzU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlQXNzaWduVmFsdWU9cmVxdWlyZSgiLi9fYmFzZUFzc2lnblZhbHVlIiksZXE9cmVxdWlyZSgiLi9lcSIpOwovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovdmFyIG9iamVjdFByb3RvPU9iamVjdC5wcm90b3R5cGU7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqCiAqIEFzc2lnbnMgYHZhbHVlYCB0byBga2V5YCBvZiBgb2JqZWN0YCBpZiB0aGUgZXhpc3RpbmcgdmFsdWUgaXMgbm90IGVxdWl2YWxlbnQKICogdXNpbmcgW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybykKICogZm9yIGVxdWFsaXR5IGNvbXBhcmlzb25zLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gbW9kaWZ5LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi4KICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYXNzaWduLgogKi9mdW5jdGlvbiBhc3NpZ25WYWx1ZShvYmplY3Qsa2V5LHZhbHVlKXt2YXIgb2JqVmFsdWU9b2JqZWN0W2tleV07aWYoIShoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCxrZXkpJiZlcShvYmpWYWx1ZSx2YWx1ZSkpfHx2YWx1ZT09PXVuZGVmaW5lZCYmIShrZXkgaW4gb2JqZWN0KSl7YmFzZUFzc2lnblZhbHVlKG9iamVjdCxrZXksdmFsdWUpfX1tb2R1bGUuZXhwb3J0cz1hc3NpZ25WYWx1ZX0seyIuL19iYXNlQXNzaWduVmFsdWUiOjEzOSwiLi9lcSI6MjkxfV0sMTM2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZXE9cmVxdWlyZSgiLi9lcSIpOwovKioKICogR2V0cyB0aGUgaW5kZXggYXQgd2hpY2ggdGhlIGBrZXlgIGlzIGZvdW5kIGluIGBhcnJheWAgb2Yga2V5LXZhbHVlIHBhaXJzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC4KICogQHBhcmFtIHsqfSBrZXkgVGhlIGtleSB0byBzZWFyY2ggZm9yLgogKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLgogKi9mdW5jdGlvbiBhc3NvY0luZGV4T2YoYXJyYXksa2V5KXt2YXIgbGVuZ3RoPWFycmF5Lmxlbmd0aDt3aGlsZShsZW5ndGgtLSl7aWYoZXEoYXJyYXlbbGVuZ3RoXVswXSxrZXkpKXtyZXR1cm4gbGVuZ3RofX1yZXR1cm4tMX1tb2R1bGUuZXhwb3J0cz1hc3NvY0luZGV4T2Z9LHsiLi9lcSI6MjkxfV0sMTM3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgY29weU9iamVjdD1yZXF1aXJlKCIuL19jb3B5T2JqZWN0Iiksa2V5cz1yZXF1aXJlKCIuL2tleXMiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmFzc2lnbmAgd2l0aG91dCBzdXBwb3J0IGZvciBtdWx0aXBsZSBzb3VyY2VzCiAqIG9yIGBjdXN0b21pemVyYCBmdW5jdGlvbnMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIGRlc3RpbmF0aW9uIG9iamVjdC4KICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgc291cmNlIG9iamVjdC4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC4KICovZnVuY3Rpb24gYmFzZUFzc2lnbihvYmplY3Qsc291cmNlKXtyZXR1cm4gb2JqZWN0JiZjb3B5T2JqZWN0KHNvdXJjZSxrZXlzKHNvdXJjZSksb2JqZWN0KX1tb2R1bGUuZXhwb3J0cz1iYXNlQXNzaWdufSx7Ii4vX2NvcHlPYmplY3QiOjIwMywiLi9rZXlzIjozMTl9XSwxMzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBjb3B5T2JqZWN0PXJlcXVpcmUoIi4vX2NvcHlPYmplY3QiKSxrZXlzSW49cmVxdWlyZSgiLi9rZXlzSW4iKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmFzc2lnbkluYCB3aXRob3V0IHN1cHBvcnQgZm9yIG11bHRpcGxlIHNvdXJjZXMKICogb3IgYGN1c3RvbWl6ZXJgIGZ1bmN0aW9ucy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LgogKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLgogKi9mdW5jdGlvbiBiYXNlQXNzaWduSW4ob2JqZWN0LHNvdXJjZSl7cmV0dXJuIG9iamVjdCYmY29weU9iamVjdChzb3VyY2Usa2V5c0luKHNvdXJjZSksb2JqZWN0KX1tb2R1bGUuZXhwb3J0cz1iYXNlQXNzaWduSW59LHsiLi9fY29weU9iamVjdCI6MjAzLCIuL2tleXNJbiI6MzIwfV0sMTM5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZGVmaW5lUHJvcGVydHk9cmVxdWlyZSgiLi9fZGVmaW5lUHJvcGVydHkiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBhc3NpZ25WYWx1ZWAgYW5kIGBhc3NpZ25NZXJnZVZhbHVlYCB3aXRob3V0CiAqIHZhbHVlIGNoZWNrcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIG1vZGlmeS4KICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBhc3NpZ24uCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFzc2lnbi4KICovZnVuY3Rpb24gYmFzZUFzc2lnblZhbHVlKG9iamVjdCxrZXksdmFsdWUpe2lmKGtleT09Il9fcHJvdG9fXyImJmRlZmluZVByb3BlcnR5KXtkZWZpbmVQcm9wZXJ0eShvYmplY3Qsa2V5LHtjb25maWd1cmFibGU6dHJ1ZSxlbnVtZXJhYmxlOnRydWUsdmFsdWU6dmFsdWUsd3JpdGFibGU6dHJ1ZX0pfWVsc2V7b2JqZWN0W2tleV09dmFsdWV9fW1vZHVsZS5leHBvcnRzPWJhc2VBc3NpZ25WYWx1ZX0seyIuL19kZWZpbmVQcm9wZXJ0eSI6MjEzfV0sMTQwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgU3RhY2s9cmVxdWlyZSgiLi9fU3RhY2siKSxhcnJheUVhY2g9cmVxdWlyZSgiLi9fYXJyYXlFYWNoIiksYXNzaWduVmFsdWU9cmVxdWlyZSgiLi9fYXNzaWduVmFsdWUiKSxiYXNlQXNzaWduPXJlcXVpcmUoIi4vX2Jhc2VBc3NpZ24iKSxiYXNlQXNzaWduSW49cmVxdWlyZSgiLi9fYmFzZUFzc2lnbkluIiksY2xvbmVCdWZmZXI9cmVxdWlyZSgiLi9fY2xvbmVCdWZmZXIiKSxjb3B5QXJyYXk9cmVxdWlyZSgiLi9fY29weUFycmF5IiksY29weVN5bWJvbHM9cmVxdWlyZSgiLi9fY29weVN5bWJvbHMiKSxjb3B5U3ltYm9sc0luPXJlcXVpcmUoIi4vX2NvcHlTeW1ib2xzSW4iKSxnZXRBbGxLZXlzPXJlcXVpcmUoIi4vX2dldEFsbEtleXMiKSxnZXRBbGxLZXlzSW49cmVxdWlyZSgiLi9fZ2V0QWxsS2V5c0luIiksZ2V0VGFnPXJlcXVpcmUoIi4vX2dldFRhZyIpLGluaXRDbG9uZUFycmF5PXJlcXVpcmUoIi4vX2luaXRDbG9uZUFycmF5IiksaW5pdENsb25lQnlUYWc9cmVxdWlyZSgiLi9faW5pdENsb25lQnlUYWciKSxpbml0Q2xvbmVPYmplY3Q9cmVxdWlyZSgiLi9faW5pdENsb25lT2JqZWN0IiksaXNBcnJheT1yZXF1aXJlKCIuL2lzQXJyYXkiKSxpc0J1ZmZlcj1yZXF1aXJlKCIuL2lzQnVmZmVyIiksaXNNYXA9cmVxdWlyZSgiLi9pc01hcCIpLGlzT2JqZWN0PXJlcXVpcmUoIi4vaXNPYmplY3QiKSxpc1NldD1yZXF1aXJlKCIuL2lzU2V0Iiksa2V5cz1yZXF1aXJlKCIuL2tleXMiKTsKLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgY2xvbmluZy4gKi92YXIgQ0xPTkVfREVFUF9GTEFHPTEsQ0xPTkVfRkxBVF9GTEFHPTIsQ0xPTkVfU1lNQk9MU19GTEFHPTQ7Ci8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi92YXIgYXJnc1RhZz0iW29iamVjdCBBcmd1bWVudHNdIixhcnJheVRhZz0iW29iamVjdCBBcnJheV0iLGJvb2xUYWc9IltvYmplY3QgQm9vbGVhbl0iLGRhdGVUYWc9IltvYmplY3QgRGF0ZV0iLGVycm9yVGFnPSJbb2JqZWN0IEVycm9yXSIsZnVuY1RhZz0iW29iamVjdCBGdW5jdGlvbl0iLGdlblRhZz0iW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl0iLG1hcFRhZz0iW29iamVjdCBNYXBdIixudW1iZXJUYWc9IltvYmplY3QgTnVtYmVyXSIsb2JqZWN0VGFnPSJbb2JqZWN0IE9iamVjdF0iLHJlZ2V4cFRhZz0iW29iamVjdCBSZWdFeHBdIixzZXRUYWc9IltvYmplY3QgU2V0XSIsc3RyaW5nVGFnPSJbb2JqZWN0IFN0cmluZ10iLHN5bWJvbFRhZz0iW29iamVjdCBTeW1ib2xdIix3ZWFrTWFwVGFnPSJbb2JqZWN0IFdlYWtNYXBdIjt2YXIgYXJyYXlCdWZmZXJUYWc9IltvYmplY3QgQXJyYXlCdWZmZXJdIixkYXRhVmlld1RhZz0iW29iamVjdCBEYXRhVmlld10iLGZsb2F0MzJUYWc9IltvYmplY3QgRmxvYXQzMkFycmF5XSIsZmxvYXQ2NFRhZz0iW29iamVjdCBGbG9hdDY0QXJyYXldIixpbnQ4VGFnPSJbb2JqZWN0IEludDhBcnJheV0iLGludDE2VGFnPSJbb2JqZWN0IEludDE2QXJyYXldIixpbnQzMlRhZz0iW29iamVjdCBJbnQzMkFycmF5XSIsdWludDhUYWc9IltvYmplY3QgVWludDhBcnJheV0iLHVpbnQ4Q2xhbXBlZFRhZz0iW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0iLHVpbnQxNlRhZz0iW29iamVjdCBVaW50MTZBcnJheV0iLHVpbnQzMlRhZz0iW29iamVjdCBVaW50MzJBcnJheV0iOwovKiogVXNlZCB0byBpZGVudGlmeSBgdG9TdHJpbmdUYWdgIHZhbHVlcyBzdXBwb3J0ZWQgYnkgYF8uY2xvbmVgLiAqL3ZhciBjbG9uZWFibGVUYWdzPXt9O2Nsb25lYWJsZVRhZ3NbYXJnc1RhZ109Y2xvbmVhYmxlVGFnc1thcnJheVRhZ109Y2xvbmVhYmxlVGFnc1thcnJheUJ1ZmZlclRhZ109Y2xvbmVhYmxlVGFnc1tkYXRhVmlld1RhZ109Y2xvbmVhYmxlVGFnc1tib29sVGFnXT1jbG9uZWFibGVUYWdzW2RhdGVUYWddPWNsb25lYWJsZVRhZ3NbZmxvYXQzMlRhZ109Y2xvbmVhYmxlVGFnc1tmbG9hdDY0VGFnXT1jbG9uZWFibGVUYWdzW2ludDhUYWddPWNsb25lYWJsZVRhZ3NbaW50MTZUYWddPWNsb25lYWJsZVRhZ3NbaW50MzJUYWddPWNsb25lYWJsZVRhZ3NbbWFwVGFnXT1jbG9uZWFibGVUYWdzW251bWJlclRhZ109Y2xvbmVhYmxlVGFnc1tvYmplY3RUYWddPWNsb25lYWJsZVRhZ3NbcmVnZXhwVGFnXT1jbG9uZWFibGVUYWdzW3NldFRhZ109Y2xvbmVhYmxlVGFnc1tzdHJpbmdUYWddPWNsb25lYWJsZVRhZ3Nbc3ltYm9sVGFnXT1jbG9uZWFibGVUYWdzW3VpbnQ4VGFnXT1jbG9uZWFibGVUYWdzW3VpbnQ4Q2xhbXBlZFRhZ109Y2xvbmVhYmxlVGFnc1t1aW50MTZUYWddPWNsb25lYWJsZVRhZ3NbdWludDMyVGFnXT10cnVlO2Nsb25lYWJsZVRhZ3NbZXJyb3JUYWddPWNsb25lYWJsZVRhZ3NbZnVuY1RhZ109Y2xvbmVhYmxlVGFnc1t3ZWFrTWFwVGFnXT1mYWxzZTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmNsb25lYCBhbmQgYF8uY2xvbmVEZWVwYCB3aGljaCB0cmFja3MKICogdHJhdmVyc2VkIG9iamVjdHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNsb25lLgogKiBAcGFyYW0ge2Jvb2xlYW59IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuCiAqICAxIC0gRGVlcCBjbG9uZQogKiAgMiAtIEZsYXR0ZW4gaW5oZXJpdGVkIHByb3BlcnRpZXMKICogIDQgLSBDbG9uZSBzeW1ib2xzCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNsb25pbmcuCiAqIEBwYXJhbSB7c3RyaW5nfSBba2V5XSBUaGUga2V5IG9mIGB2YWx1ZWAuCiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgcGFyZW50IG9iamVjdCBvZiBgdmFsdWVgLgogKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIG9iamVjdHMgYW5kIHRoZWlyIGNsb25lIGNvdW50ZXJwYXJ0cy4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGNsb25lZCB2YWx1ZS4KICovZnVuY3Rpb24gYmFzZUNsb25lKHZhbHVlLGJpdG1hc2ssY3VzdG9taXplcixrZXksb2JqZWN0LHN0YWNrKXt2YXIgcmVzdWx0LGlzRGVlcD1iaXRtYXNrJkNMT05FX0RFRVBfRkxBRyxpc0ZsYXQ9Yml0bWFzayZDTE9ORV9GTEFUX0ZMQUcsaXNGdWxsPWJpdG1hc2smQ0xPTkVfU1lNQk9MU19GTEFHO2lmKGN1c3RvbWl6ZXIpe3Jlc3VsdD1vYmplY3Q/Y3VzdG9taXplcih2YWx1ZSxrZXksb2JqZWN0LHN0YWNrKTpjdXN0b21pemVyKHZhbHVlKX1pZihyZXN1bHQhPT11bmRlZmluZWQpe3JldHVybiByZXN1bHR9aWYoIWlzT2JqZWN0KHZhbHVlKSl7cmV0dXJuIHZhbHVlfXZhciBpc0Fycj1pc0FycmF5KHZhbHVlKTtpZihpc0Fycil7cmVzdWx0PWluaXRDbG9uZUFycmF5KHZhbHVlKTtpZighaXNEZWVwKXtyZXR1cm4gY29weUFycmF5KHZhbHVlLHJlc3VsdCl9fWVsc2V7dmFyIHRhZz1nZXRUYWcodmFsdWUpLGlzRnVuYz10YWc9PWZ1bmNUYWd8fHRhZz09Z2VuVGFnO2lmKGlzQnVmZmVyKHZhbHVlKSl7cmV0dXJuIGNsb25lQnVmZmVyKHZhbHVlLGlzRGVlcCl9aWYodGFnPT1vYmplY3RUYWd8fHRhZz09YXJnc1RhZ3x8aXNGdW5jJiYhb2JqZWN0KXtyZXN1bHQ9aXNGbGF0fHxpc0Z1bmM/e306aW5pdENsb25lT2JqZWN0KHZhbHVlKTtpZighaXNEZWVwKXtyZXR1cm4gaXNGbGF0P2NvcHlTeW1ib2xzSW4odmFsdWUsYmFzZUFzc2lnbkluKHJlc3VsdCx2YWx1ZSkpOmNvcHlTeW1ib2xzKHZhbHVlLGJhc2VBc3NpZ24ocmVzdWx0LHZhbHVlKSl9fWVsc2V7aWYoIWNsb25lYWJsZVRhZ3NbdGFnXSl7cmV0dXJuIG9iamVjdD92YWx1ZTp7fX1yZXN1bHQ9aW5pdENsb25lQnlUYWcodmFsdWUsdGFnLGlzRGVlcCl9fQovLyBDaGVjayBmb3IgY2lyY3VsYXIgcmVmZXJlbmNlcyBhbmQgcmV0dXJuIGl0cyBjb3JyZXNwb25kaW5nIGNsb25lLgpzdGFja3x8KHN0YWNrPW5ldyBTdGFjayk7dmFyIHN0YWNrZWQ9c3RhY2suZ2V0KHZhbHVlKTtpZihzdGFja2VkKXtyZXR1cm4gc3RhY2tlZH1zdGFjay5zZXQodmFsdWUscmVzdWx0KTtpZihpc1NldCh2YWx1ZSkpe3ZhbHVlLmZvckVhY2goZnVuY3Rpb24oc3ViVmFsdWUpe3Jlc3VsdC5hZGQoYmFzZUNsb25lKHN1YlZhbHVlLGJpdG1hc2ssY3VzdG9taXplcixzdWJWYWx1ZSx2YWx1ZSxzdGFjaykpfSl9ZWxzZSBpZihpc01hcCh2YWx1ZSkpe3ZhbHVlLmZvckVhY2goZnVuY3Rpb24oc3ViVmFsdWUsa2V5KXtyZXN1bHQuc2V0KGtleSxiYXNlQ2xvbmUoc3ViVmFsdWUsYml0bWFzayxjdXN0b21pemVyLGtleSx2YWx1ZSxzdGFjaykpfSl9dmFyIGtleXNGdW5jPWlzRnVsbD9pc0ZsYXQ/Z2V0QWxsS2V5c0luOmdldEFsbEtleXM6aXNGbGF0P2tleXNJbjprZXlzO3ZhciBwcm9wcz1pc0Fycj91bmRlZmluZWQ6a2V5c0Z1bmModmFsdWUpO2FycmF5RWFjaChwcm9wc3x8dmFsdWUsZnVuY3Rpb24oc3ViVmFsdWUsa2V5KXtpZihwcm9wcyl7a2V5PXN1YlZhbHVlO3N1YlZhbHVlPXZhbHVlW2tleV19Ci8vIFJlY3Vyc2l2ZWx5IHBvcHVsYXRlIGNsb25lIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuCmFzc2lnblZhbHVlKHJlc3VsdCxrZXksYmFzZUNsb25lKHN1YlZhbHVlLGJpdG1hc2ssY3VzdG9taXplcixrZXksdmFsdWUsc3RhY2spKX0pO3JldHVybiByZXN1bHR9bW9kdWxlLmV4cG9ydHM9YmFzZUNsb25lfSx7Ii4vX1N0YWNrIjoxMTksIi4vX2FycmF5RWFjaCI6MTI0LCIuL19hc3NpZ25WYWx1ZSI6MTM1LCIuL19iYXNlQXNzaWduIjoxMzcsIi4vX2Jhc2VBc3NpZ25JbiI6MTM4LCIuL19jbG9uZUJ1ZmZlciI6MTk1LCIuL19jb3B5QXJyYXkiOjIwMiwiLi9fY29weVN5bWJvbHMiOjIwNCwiLi9fY29weVN5bWJvbHNJbiI6MjA1LCIuL19nZXRBbGxLZXlzIjoyMTksIi4vX2dldEFsbEtleXNJbiI6MjIwLCIuL19nZXRUYWciOjIyOCwiLi9faW5pdENsb25lQXJyYXkiOjIzNywiLi9faW5pdENsb25lQnlUYWciOjIzOCwiLi9faW5pdENsb25lT2JqZWN0IjoyMzksIi4vaXNBcnJheSI6MzAzLCIuL2lzQnVmZmVyIjozMDYsIi4vaXNNYXAiOjMxMCwiLi9pc09iamVjdCI6MzExLCIuL2lzU2V0IjozMTQsIi4va2V5cyI6MzE5fV0sMTQxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgaXNPYmplY3Q9cmVxdWlyZSgiLi9pc09iamVjdCIpOwovKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi92YXIgb2JqZWN0Q3JlYXRlPU9iamVjdC5jcmVhdGU7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5jcmVhdGVgIHdpdGhvdXQgc3VwcG9ydCBmb3IgYXNzaWduaW5nCiAqIHByb3BlcnRpZXMgdG8gdGhlIGNyZWF0ZWQgb2JqZWN0LgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gcHJvdG8gVGhlIG9iamVjdCB0byBpbmhlcml0IGZyb20uCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBvYmplY3QuCiAqL3ZhciBiYXNlQ3JlYXRlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gb2JqZWN0KCl7fXJldHVybiBmdW5jdGlvbihwcm90byl7aWYoIWlzT2JqZWN0KHByb3RvKSl7cmV0dXJue319aWYob2JqZWN0Q3JlYXRlKXtyZXR1cm4gb2JqZWN0Q3JlYXRlKHByb3RvKX1vYmplY3QucHJvdG90eXBlPXByb3RvO3ZhciByZXN1bHQ9bmV3IG9iamVjdDtvYmplY3QucHJvdG90eXBlPXVuZGVmaW5lZDtyZXR1cm4gcmVzdWx0fX0oKTttb2R1bGUuZXhwb3J0cz1iYXNlQ3JlYXRlfSx7Ii4vaXNPYmplY3QiOjMxMX1dLDE0MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VGb3JPd249cmVxdWlyZSgiLi9fYmFzZUZvck93biIpLGNyZWF0ZUJhc2VFYWNoPXJlcXVpcmUoIi4vX2NyZWF0ZUJhc2VFYWNoIik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5mb3JFYWNoYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci4KICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi4KICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuCiAqL3ZhciBiYXNlRWFjaD1jcmVhdGVCYXNlRWFjaChiYXNlRm9yT3duKTttb2R1bGUuZXhwb3J0cz1iYXNlRWFjaH0seyIuL19iYXNlRm9yT3duIjoxNDgsIi4vX2NyZWF0ZUJhc2VFYWNoIjoyMDh9XSwxNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpc1N5bWJvbD1yZXF1aXJlKCIuL2lzU3ltYm9sIik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBtZXRob2RzIGxpa2UgYF8ubWF4YCBhbmQgYF8ubWluYCB3aGljaCBhY2NlcHRzIGEKICogYGNvbXBhcmF0b3JgIHRvIGRldGVybWluZSB0aGUgZXh0cmVtdW0gdmFsdWUuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBpdGVyYXRlZSBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEBwYXJhbSB7RnVuY3Rpb259IGNvbXBhcmF0b3IgVGhlIGNvbXBhcmF0b3IgdXNlZCB0byBjb21wYXJlIHZhbHVlcy4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGV4dHJlbXVtIHZhbHVlLgogKi9mdW5jdGlvbiBiYXNlRXh0cmVtdW0oYXJyYXksaXRlcmF0ZWUsY29tcGFyYXRvcil7dmFyIGluZGV4PS0xLGxlbmd0aD1hcnJheS5sZW5ndGg7d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciB2YWx1ZT1hcnJheVtpbmRleF0sY3VycmVudD1pdGVyYXRlZSh2YWx1ZSk7aWYoY3VycmVudCE9bnVsbCYmKGNvbXB1dGVkPT09dW5kZWZpbmVkP2N1cnJlbnQ9PT1jdXJyZW50JiYhaXNTeW1ib2woY3VycmVudCk6Y29tcGFyYXRvcihjdXJyZW50LGNvbXB1dGVkKSkpe3ZhciBjb21wdXRlZD1jdXJyZW50LHJlc3VsdD12YWx1ZX19cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlRXh0cmVtdW19LHsiLi9pc1N5bWJvbCI6MzE2fV0sMTQ0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUVhY2g9cmVxdWlyZSgiLi9fYmFzZUVhY2giKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZpbHRlcmAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmaWx0ZXJlZCBhcnJheS4KICovZnVuY3Rpb24gYmFzZUZpbHRlcihjb2xsZWN0aW9uLHByZWRpY2F0ZSl7dmFyIHJlc3VsdD1bXTtiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pe2lmKHByZWRpY2F0ZSh2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKSl7cmVzdWx0LnB1c2godmFsdWUpfX0pO3JldHVybiByZXN1bHR9bW9kdWxlLmV4cG9ydHM9YmFzZUZpbHRlcn0seyIuL19iYXNlRWFjaCI6MTQyfV0sMTQ1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZpbmRJbmRleGAgYW5kIGBfLmZpbmRMYXN0SW5kZXhgIHdpdGhvdXQKICogc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcGFyYW0ge251bWJlcn0gZnJvbUluZGV4IFRoZSBpbmRleCB0byBzZWFyY2ggZnJvbS4KICogQHBhcmFtIHtib29sZWFufSBbZnJvbVJpZ2h0XSBTcGVjaWZ5IGl0ZXJhdGluZyBmcm9tIHJpZ2h0IHRvIGxlZnQuCiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuCiAqLwpmdW5jdGlvbiBiYXNlRmluZEluZGV4KGFycmF5LHByZWRpY2F0ZSxmcm9tSW5kZXgsZnJvbVJpZ2h0KXt2YXIgbGVuZ3RoPWFycmF5Lmxlbmd0aCxpbmRleD1mcm9tSW5kZXgrKGZyb21SaWdodD8xOi0xKTt3aGlsZShmcm9tUmlnaHQ/aW5kZXgtLTorK2luZGV4PGxlbmd0aCl7aWYocHJlZGljYXRlKGFycmF5W2luZGV4XSxpbmRleCxhcnJheSkpe3JldHVybiBpbmRleH19cmV0dXJuLTF9bW9kdWxlLmV4cG9ydHM9YmFzZUZpbmRJbmRleH0se31dLDE0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFycmF5UHVzaD1yZXF1aXJlKCIuL19hcnJheVB1c2giKSxpc0ZsYXR0ZW5hYmxlPXJlcXVpcmUoIi4vX2lzRmxhdHRlbmFibGUiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZsYXR0ZW5gIHdpdGggc3VwcG9ydCBmb3IgcmVzdHJpY3RpbmcgZmxhdHRlbmluZy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGZsYXR0ZW4uCiAqIEBwYXJhbSB7bnVtYmVyfSBkZXB0aCBUaGUgbWF4aW11bSByZWN1cnNpb24gZGVwdGguCiAqIEBwYXJhbSB7Ym9vbGVhbn0gW3ByZWRpY2F0ZT1pc0ZsYXR0ZW5hYmxlXSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcGFyYW0ge2Jvb2xlYW59IFtpc1N0cmljdF0gUmVzdHJpY3QgdG8gdmFsdWVzIHRoYXQgcGFzcyBgcHJlZGljYXRlYCBjaGVja3MuCiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHQ9W11dIFRoZSBpbml0aWFsIHJlc3VsdCB2YWx1ZS4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmxhdHRlbmVkIGFycmF5LgogKi9mdW5jdGlvbiBiYXNlRmxhdHRlbihhcnJheSxkZXB0aCxwcmVkaWNhdGUsaXNTdHJpY3QscmVzdWx0KXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWFycmF5Lmxlbmd0aDtwcmVkaWNhdGV8fChwcmVkaWNhdGU9aXNGbGF0dGVuYWJsZSk7cmVzdWx0fHwocmVzdWx0PVtdKTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7dmFyIHZhbHVlPWFycmF5W2luZGV4XTtpZihkZXB0aD4wJiZwcmVkaWNhdGUodmFsdWUpKXtpZihkZXB0aD4xKXsKLy8gUmVjdXJzaXZlbHkgZmxhdHRlbiBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS4KYmFzZUZsYXR0ZW4odmFsdWUsZGVwdGgtMSxwcmVkaWNhdGUsaXNTdHJpY3QscmVzdWx0KX1lbHNle2FycmF5UHVzaChyZXN1bHQsdmFsdWUpfX1lbHNlIGlmKCFpc1N0cmljdCl7cmVzdWx0W3Jlc3VsdC5sZW5ndGhdPXZhbHVlfX1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWJhc2VGbGF0dGVufSx7Ii4vX2FycmF5UHVzaCI6MTMwLCIuL19pc0ZsYXR0ZW5hYmxlIjoyNDB9XSwxNDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBjcmVhdGVCYXNlRm9yPXJlcXVpcmUoIi4vX2NyZWF0ZUJhc2VGb3IiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBiYXNlRm9yT3duYCB3aGljaCBpdGVyYXRlcyBvdmVyIGBvYmplY3RgCiAqIHByb3BlcnRpZXMgcmV0dXJuZWQgYnkgYGtleXNGdW5jYCBhbmQgaW52b2tlcyBgaXRlcmF0ZWVgIGZvciBlYWNoIHByb3BlcnR5LgogKiBJdGVyYXRlZSBmdW5jdGlvbnMgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5IGV4cGxpY2l0bHkgcmV0dXJuaW5nIGBmYWxzZWAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEBwYXJhbSB7RnVuY3Rpb259IGtleXNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIGtleXMgb2YgYG9iamVjdGAuCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuCiAqL3ZhciBiYXNlRm9yPWNyZWF0ZUJhc2VGb3IoKTttb2R1bGUuZXhwb3J0cz1iYXNlRm9yfSx7Ii4vX2NyZWF0ZUJhc2VGb3IiOjIwOX1dLDE0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VGb3I9cmVxdWlyZSgiLi9fYmFzZUZvciIpLGtleXM9cmVxdWlyZSgiLi9rZXlzIik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5mb3JPd25gIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci4KICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC4KICovZnVuY3Rpb24gYmFzZUZvck93bihvYmplY3QsaXRlcmF0ZWUpe3JldHVybiBvYmplY3QmJmJhc2VGb3Iob2JqZWN0LGl0ZXJhdGVlLGtleXMpfW1vZHVsZS5leHBvcnRzPWJhc2VGb3JPd259LHsiLi9fYmFzZUZvciI6MTQ3LCIuL2tleXMiOjMxOX1dLDE0OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGNhc3RQYXRoPXJlcXVpcmUoIi4vX2Nhc3RQYXRoIiksdG9LZXk9cmVxdWlyZSgiLi9fdG9LZXkiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmdldGAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWZhdWx0IHZhbHVlcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LgogKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzb2x2ZWQgdmFsdWUuCiAqL2Z1bmN0aW9uIGJhc2VHZXQob2JqZWN0LHBhdGgpe3BhdGg9Y2FzdFBhdGgocGF0aCxvYmplY3QpO3ZhciBpbmRleD0wLGxlbmd0aD1wYXRoLmxlbmd0aDt3aGlsZShvYmplY3QhPW51bGwmJmluZGV4PGxlbmd0aCl7b2JqZWN0PW9iamVjdFt0b0tleShwYXRoW2luZGV4KytdKV19cmV0dXJuIGluZGV4JiZpbmRleD09bGVuZ3RoP29iamVjdDp1bmRlZmluZWR9bW9kdWxlLmV4cG9ydHM9YmFzZUdldH0seyIuL19jYXN0UGF0aCI6MTkzLCIuL190b0tleSI6MjgzfV0sMTUwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYXJyYXlQdXNoPXJlcXVpcmUoIi4vX2FycmF5UHVzaCIpLGlzQXJyYXk9cmVxdWlyZSgiLi9pc0FycmF5Iik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0QWxsS2V5c2AgYW5kIGBnZXRBbGxLZXlzSW5gIHdoaWNoIHVzZXMKICogYGtleXNGdW5jYCBhbmQgYHN5bWJvbHNGdW5jYCB0byBnZXQgdGhlIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgYW5kCiAqIHN5bWJvbHMgb2YgYG9iamVjdGAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS4KICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC4KICogQHBhcmFtIHtGdW5jdGlvbn0gc3ltYm9sc0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUgc3ltYm9scyBvZiBgb2JqZWN0YC4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy4KICovZnVuY3Rpb24gYmFzZUdldEFsbEtleXMob2JqZWN0LGtleXNGdW5jLHN5bWJvbHNGdW5jKXt2YXIgcmVzdWx0PWtleXNGdW5jKG9iamVjdCk7cmV0dXJuIGlzQXJyYXkob2JqZWN0KT9yZXN1bHQ6YXJyYXlQdXNoKHJlc3VsdCxzeW1ib2xzRnVuYyhvYmplY3QpKX1tb2R1bGUuZXhwb3J0cz1iYXNlR2V0QWxsS2V5c30seyIuL19hcnJheVB1c2giOjEzMCwiLi9pc0FycmF5IjozMDN9XSwxNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBTeW1ib2w9cmVxdWlyZSgiLi9fU3ltYm9sIiksZ2V0UmF3VGFnPXJlcXVpcmUoIi4vX2dldFJhd1RhZyIpLG9iamVjdFRvU3RyaW5nPXJlcXVpcmUoIi4vX29iamVjdFRvU3RyaW5nIik7Ci8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi92YXIgbnVsbFRhZz0iW29iamVjdCBOdWxsXSIsdW5kZWZpbmVkVGFnPSJbb2JqZWN0IFVuZGVmaW5lZF0iOwovKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi92YXIgc3ltVG9TdHJpbmdUYWc9U3ltYm9sP1N5bWJvbC50b1N0cmluZ1RhZzp1bmRlZmluZWQ7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0VGFnYCB3aXRob3V0IGZhbGxiYWNrcyBmb3IgYnVnZ3kgZW52aXJvbm1lbnRzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS4KICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC4KICovZnVuY3Rpb24gYmFzZUdldFRhZyh2YWx1ZSl7aWYodmFsdWU9PW51bGwpe3JldHVybiB2YWx1ZT09PXVuZGVmaW5lZD91bmRlZmluZWRUYWc6bnVsbFRhZ31yZXR1cm4gc3ltVG9TdHJpbmdUYWcmJnN5bVRvU3RyaW5nVGFnIGluIE9iamVjdCh2YWx1ZSk/Z2V0UmF3VGFnKHZhbHVlKTpvYmplY3RUb1N0cmluZyh2YWx1ZSl9bW9kdWxlLmV4cG9ydHM9YmFzZUdldFRhZ30seyIuL19TeW1ib2wiOjEyMCwiLi9fZ2V0UmF3VGFnIjoyMjUsIi4vX29iamVjdFRvU3RyaW5nIjoyNjV9XSwxNTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ3RgIHdoaWNoIGRvZXNuJ3QgY29lcmNlIGFyZ3VtZW50cy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS4KICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZ3JlYXRlciB0aGFuIGBvdGhlcmAsCiAqICBlbHNlIGBmYWxzZWAuCiAqLwpmdW5jdGlvbiBiYXNlR3QodmFsdWUsb3RoZXIpe3JldHVybiB2YWx1ZT5vdGhlcn1tb2R1bGUuZXhwb3J0cz1iYXNlR3R9LHt9XSwxNTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovCnZhciBvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi92YXIgaGFzT3duUHJvcGVydHk9b2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5oYXNgIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVlcCBwYXRocy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBrZXkgVGhlIGtleSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBiYXNlSGFzKG9iamVjdCxrZXkpe3JldHVybiBvYmplY3QhPW51bGwmJmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LGtleSl9bW9kdWxlLmV4cG9ydHM9YmFzZUhhc30se31dLDE1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5oYXNJbmAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeS4KICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IGtleSBUaGUga2V5IHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuCiAqLwpmdW5jdGlvbiBiYXNlSGFzSW4ob2JqZWN0LGtleSl7cmV0dXJuIG9iamVjdCE9bnVsbCYma2V5IGluIE9iamVjdChvYmplY3QpfW1vZHVsZS5leHBvcnRzPWJhc2VIYXNJbn0se31dLDE1NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VGaW5kSW5kZXg9cmVxdWlyZSgiLi9fYmFzZUZpbmRJbmRleCIpLGJhc2VJc05hTj1yZXF1aXJlKCIuL19iYXNlSXNOYU4iKSxzdHJpY3RJbmRleE9mPXJlcXVpcmUoIi4vX3N0cmljdEluZGV4T2YiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmluZGV4T2ZgIHdpdGhvdXQgYGZyb21JbmRleGAgYm91bmRzIGNoZWNrcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuCiAqIEBwYXJhbSB7bnVtYmVyfSBmcm9tSW5kZXggVGhlIGluZGV4IHRvIHNlYXJjaCBmcm9tLgogKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLgogKi9mdW5jdGlvbiBiYXNlSW5kZXhPZihhcnJheSx2YWx1ZSxmcm9tSW5kZXgpe3JldHVybiB2YWx1ZT09PXZhbHVlP3N0cmljdEluZGV4T2YoYXJyYXksdmFsdWUsZnJvbUluZGV4KTpiYXNlRmluZEluZGV4KGFycmF5LGJhc2VJc05hTixmcm9tSW5kZXgpfW1vZHVsZS5leHBvcnRzPWJhc2VJbmRleE9mfSx7Ii4vX2Jhc2VGaW5kSW5kZXgiOjE0NSwiLi9fYmFzZUlzTmFOIjoxNjEsIi4vX3N0cmljdEluZGV4T2YiOjI4MH1dLDE1NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VHZXRUYWc9cmVxdWlyZSgiLi9fYmFzZUdldFRhZyIpLGlzT2JqZWN0TGlrZT1yZXF1aXJlKCIuL2lzT2JqZWN0TGlrZSIpOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIGFyZ3NUYWc9IltvYmplY3QgQXJndW1lbnRzXSI7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0FyZ3VtZW50c2AuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsCiAqL2Z1bmN0aW9uIGJhc2VJc0FyZ3VtZW50cyh2YWx1ZSl7cmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkmJmJhc2VHZXRUYWcodmFsdWUpPT1hcmdzVGFnfW1vZHVsZS5leHBvcnRzPWJhc2VJc0FyZ3VtZW50c30seyIuL19iYXNlR2V0VGFnIjoxNTEsIi4vaXNPYmplY3RMaWtlIjozMTJ9XSwxNTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlSXNFcXVhbERlZXA9cmVxdWlyZSgiLi9fYmFzZUlzRXF1YWxEZWVwIiksaXNPYmplY3RMaWtlPXJlcXVpcmUoIi4vaXNPYmplY3RMaWtlIik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0VxdWFsYCB3aGljaCBzdXBwb3J0cyBwYXJ0aWFsIGNvbXBhcmlzb25zCiAqIGFuZCB0cmFja3MgdHJhdmVyc2VkIG9iamVjdHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuCiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuCiAqIEBwYXJhbSB7Ym9vbGVhbn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4KICogIDEgLSBVbm9yZGVyZWQgY29tcGFyaXNvbgogKiAgMiAtIFBhcnRpYWwgY29tcGFyaXNvbgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy4KICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBgdmFsdWVgIGFuZCBgb3RoZXJgIG9iamVjdHMuCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuCiAqL2Z1bmN0aW9uIGJhc2VJc0VxdWFsKHZhbHVlLG90aGVyLGJpdG1hc2ssY3VzdG9taXplcixzdGFjayl7aWYodmFsdWU9PT1vdGhlcil7cmV0dXJuIHRydWV9aWYodmFsdWU9PW51bGx8fG90aGVyPT1udWxsfHwhaXNPYmplY3RMaWtlKHZhbHVlKSYmIWlzT2JqZWN0TGlrZShvdGhlcikpe3JldHVybiB2YWx1ZSE9PXZhbHVlJiZvdGhlciE9PW90aGVyfXJldHVybiBiYXNlSXNFcXVhbERlZXAodmFsdWUsb3RoZXIsYml0bWFzayxjdXN0b21pemVyLGJhc2VJc0VxdWFsLHN0YWNrKX1tb2R1bGUuZXhwb3J0cz1iYXNlSXNFcXVhbH0seyIuL19iYXNlSXNFcXVhbERlZXAiOjE1OCwiLi9pc09iamVjdExpa2UiOjMxMn1dLDE1ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIFN0YWNrPXJlcXVpcmUoIi4vX1N0YWNrIiksZXF1YWxBcnJheXM9cmVxdWlyZSgiLi9fZXF1YWxBcnJheXMiKSxlcXVhbEJ5VGFnPXJlcXVpcmUoIi4vX2VxdWFsQnlUYWciKSxlcXVhbE9iamVjdHM9cmVxdWlyZSgiLi9fZXF1YWxPYmplY3RzIiksZ2V0VGFnPXJlcXVpcmUoIi4vX2dldFRhZyIpLGlzQXJyYXk9cmVxdWlyZSgiLi9pc0FycmF5IiksaXNCdWZmZXI9cmVxdWlyZSgiLi9pc0J1ZmZlciIpLGlzVHlwZWRBcnJheT1yZXF1aXJlKCIuL2lzVHlwZWRBcnJheSIpOwovKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi92YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUc9MTsKLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL3ZhciBhcmdzVGFnPSJbb2JqZWN0IEFyZ3VtZW50c10iLGFycmF5VGFnPSJbb2JqZWN0IEFycmF5XSIsb2JqZWN0VGFnPSJbb2JqZWN0IE9iamVjdF0iOwovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovdmFyIG9iamVjdFByb3RvPU9iamVjdC5wcm90b3R5cGU7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxgIGZvciBhcnJheXMgYW5kIG9iamVjdHMgd2hpY2ggcGVyZm9ybXMKICogZGVlcCBjb21wYXJpc29ucyBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGVuYWJsaW5nIG9iamVjdHMgd2l0aCBjaXJjdWxhcgogKiByZWZlcmVuY2VzIHRvIGJlIGNvbXBhcmVkLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy4KICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLgogKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBiYXNlSXNFcXVhbERlZXAob2JqZWN0LG90aGVyLGJpdG1hc2ssY3VzdG9taXplcixlcXVhbEZ1bmMsc3RhY2spe3ZhciBvYmpJc0Fycj1pc0FycmF5KG9iamVjdCksb3RoSXNBcnI9aXNBcnJheShvdGhlciksb2JqVGFnPW9iaklzQXJyP2FycmF5VGFnOmdldFRhZyhvYmplY3QpLG90aFRhZz1vdGhJc0Fycj9hcnJheVRhZzpnZXRUYWcob3RoZXIpO29ialRhZz1vYmpUYWc9PWFyZ3NUYWc/b2JqZWN0VGFnOm9ialRhZztvdGhUYWc9b3RoVGFnPT1hcmdzVGFnP29iamVjdFRhZzpvdGhUYWc7dmFyIG9iaklzT2JqPW9ialRhZz09b2JqZWN0VGFnLG90aElzT2JqPW90aFRhZz09b2JqZWN0VGFnLGlzU2FtZVRhZz1vYmpUYWc9PW90aFRhZztpZihpc1NhbWVUYWcmJmlzQnVmZmVyKG9iamVjdCkpe2lmKCFpc0J1ZmZlcihvdGhlcikpe3JldHVybiBmYWxzZX1vYmpJc0Fycj10cnVlO29iaklzT2JqPWZhbHNlfWlmKGlzU2FtZVRhZyYmIW9iaklzT2JqKXtzdGFja3x8KHN0YWNrPW5ldyBTdGFjayk7cmV0dXJuIG9iaklzQXJyfHxpc1R5cGVkQXJyYXkob2JqZWN0KT9lcXVhbEFycmF5cyhvYmplY3Qsb3RoZXIsYml0bWFzayxjdXN0b21pemVyLGVxdWFsRnVuYyxzdGFjayk6ZXF1YWxCeVRhZyhvYmplY3Qsb3RoZXIsb2JqVGFnLGJpdG1hc2ssY3VzdG9taXplcixlcXVhbEZ1bmMsc3RhY2spfWlmKCEoYml0bWFzayZDT01QQVJFX1BBUlRJQUxfRkxBRykpe3ZhciBvYmpJc1dyYXBwZWQ9b2JqSXNPYmomJmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCJfX3dyYXBwZWRfXyIpLG90aElzV3JhcHBlZD1vdGhJc09iaiYmaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwiX193cmFwcGVkX18iKTtpZihvYmpJc1dyYXBwZWR8fG90aElzV3JhcHBlZCl7dmFyIG9ialVud3JhcHBlZD1vYmpJc1dyYXBwZWQ/b2JqZWN0LnZhbHVlKCk6b2JqZWN0LG90aFVud3JhcHBlZD1vdGhJc1dyYXBwZWQ/b3RoZXIudmFsdWUoKTpvdGhlcjtzdGFja3x8KHN0YWNrPW5ldyBTdGFjayk7cmV0dXJuIGVxdWFsRnVuYyhvYmpVbndyYXBwZWQsb3RoVW53cmFwcGVkLGJpdG1hc2ssY3VzdG9taXplcixzdGFjayl9fWlmKCFpc1NhbWVUYWcpe3JldHVybiBmYWxzZX1zdGFja3x8KHN0YWNrPW5ldyBTdGFjayk7cmV0dXJuIGVxdWFsT2JqZWN0cyhvYmplY3Qsb3RoZXIsYml0bWFzayxjdXN0b21pemVyLGVxdWFsRnVuYyxzdGFjayl9bW9kdWxlLmV4cG9ydHM9YmFzZUlzRXF1YWxEZWVwfSx7Ii4vX1N0YWNrIjoxMTksIi4vX2VxdWFsQXJyYXlzIjoyMTQsIi4vX2VxdWFsQnlUYWciOjIxNSwiLi9fZXF1YWxPYmplY3RzIjoyMTYsIi4vX2dldFRhZyI6MjI4LCIuL2lzQXJyYXkiOjMwMywiLi9pc0J1ZmZlciI6MzA2LCIuL2lzVHlwZWRBcnJheSI6MzE3fV0sMTU5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZ2V0VGFnPXJlcXVpcmUoIi4vX2dldFRhZyIpLGlzT2JqZWN0TGlrZT1yZXF1aXJlKCIuL2lzT2JqZWN0TGlrZSIpOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIG1hcFRhZz0iW29iamVjdCBNYXBdIjsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTWFwYCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgbWFwLCBlbHNlIGBmYWxzZWAuCiAqL2Z1bmN0aW9uIGJhc2VJc01hcCh2YWx1ZSl7cmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkmJmdldFRhZyh2YWx1ZSk9PW1hcFRhZ31tb2R1bGUuZXhwb3J0cz1iYXNlSXNNYXB9LHsiLi9fZ2V0VGFnIjoyMjgsIi4vaXNPYmplY3RMaWtlIjozMTJ9XSwxNjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBTdGFjaz1yZXF1aXJlKCIuL19TdGFjayIpLGJhc2VJc0VxdWFsPXJlcXVpcmUoIi4vX2Jhc2VJc0VxdWFsIik7Ci8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL3ZhciBDT01QQVJFX1BBUlRJQUxfRkxBRz0xLENPTVBBUkVfVU5PUkRFUkVEX0ZMQUc9MjsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTWF0Y2hgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guCiAqIEBwYXJhbSB7QXJyYXl9IG1hdGNoRGF0YSBUaGUgcHJvcGVydHkgbmFtZXMsIHZhbHVlcywgYW5kIGNvbXBhcmUgZmxhZ3MgdG8gbWF0Y2guCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYG9iamVjdGAgaXMgYSBtYXRjaCwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBiYXNlSXNNYXRjaChvYmplY3Qsc291cmNlLG1hdGNoRGF0YSxjdXN0b21pemVyKXt2YXIgaW5kZXg9bWF0Y2hEYXRhLmxlbmd0aCxsZW5ndGg9aW5kZXgsbm9DdXN0b21pemVyPSFjdXN0b21pemVyO2lmKG9iamVjdD09bnVsbCl7cmV0dXJuIWxlbmd0aH1vYmplY3Q9T2JqZWN0KG9iamVjdCk7d2hpbGUoaW5kZXgtLSl7dmFyIGRhdGE9bWF0Y2hEYXRhW2luZGV4XTtpZihub0N1c3RvbWl6ZXImJmRhdGFbMl0/ZGF0YVsxXSE9PW9iamVjdFtkYXRhWzBdXTohKGRhdGFbMF1pbiBvYmplY3QpKXtyZXR1cm4gZmFsc2V9fXdoaWxlKCsraW5kZXg8bGVuZ3RoKXtkYXRhPW1hdGNoRGF0YVtpbmRleF07dmFyIGtleT1kYXRhWzBdLG9ialZhbHVlPW9iamVjdFtrZXldLHNyY1ZhbHVlPWRhdGFbMV07aWYobm9DdXN0b21pemVyJiZkYXRhWzJdKXtpZihvYmpWYWx1ZT09PXVuZGVmaW5lZCYmIShrZXkgaW4gb2JqZWN0KSl7cmV0dXJuIGZhbHNlfX1lbHNle3ZhciBzdGFjaz1uZXcgU3RhY2s7aWYoY3VzdG9taXplcil7dmFyIHJlc3VsdD1jdXN0b21pemVyKG9ialZhbHVlLHNyY1ZhbHVlLGtleSxvYmplY3Qsc291cmNlLHN0YWNrKX1pZighKHJlc3VsdD09PXVuZGVmaW5lZD9iYXNlSXNFcXVhbChzcmNWYWx1ZSxvYmpWYWx1ZSxDT01QQVJFX1BBUlRJQUxfRkxBR3xDT01QQVJFX1VOT1JERVJFRF9GTEFHLGN1c3RvbWl6ZXIsc3RhY2spOnJlc3VsdCkpe3JldHVybiBmYWxzZX19fXJldHVybiB0cnVlfW1vZHVsZS5leHBvcnRzPWJhc2VJc01hdGNofSx7Ii4vX1N0YWNrIjoxMTksIi4vX2Jhc2VJc0VxdWFsIjoxNTd9XSwxNjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNOYU5gIHdpdGhvdXQgc3VwcG9ydCBmb3IgbnVtYmVyIG9iamVjdHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBgTmFOYCwgZWxzZSBgZmFsc2VgLgogKi8KZnVuY3Rpb24gYmFzZUlzTmFOKHZhbHVlKXtyZXR1cm4gdmFsdWUhPT12YWx1ZX1tb2R1bGUuZXhwb3J0cz1iYXNlSXNOYU59LHt9XSwxNjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpc0Z1bmN0aW9uPXJlcXVpcmUoIi4vaXNGdW5jdGlvbiIpLGlzTWFza2VkPXJlcXVpcmUoIi4vX2lzTWFza2VkIiksaXNPYmplY3Q9cmVxdWlyZSgiLi9pc09iamVjdCIpLHRvU291cmNlPXJlcXVpcmUoIi4vX3RvU291cmNlIik7Ci8qKgogKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgCiAqIFtzeW50YXggY2hhcmFjdGVyc10oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcGF0dGVybnMpLgogKi92YXIgcmVSZWdFeHBDaGFyPS9bXFxeJC4qKz8oKVtcXXt9fF0vZzsKLyoqIFVzZWQgdG8gZGV0ZWN0IGhvc3QgY29uc3RydWN0b3JzIChTYWZhcmkpLiAqL3ZhciByZUlzSG9zdEN0b3I9L15cW29iamVjdCAuKz9Db25zdHJ1Y3RvclxdJC87Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi92YXIgZnVuY1Byb3RvPUZ1bmN0aW9uLnByb3RvdHlwZSxvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovdmFyIGZ1bmNUb1N0cmluZz1mdW5jUHJvdG8udG9TdHJpbmc7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqIFVzZWQgdG8gZGV0ZWN0IGlmIGEgbWV0aG9kIGlzIG5hdGl2ZS4gKi92YXIgcmVJc05hdGl2ZT1SZWdFeHAoIl4iK2Z1bmNUb1N0cmluZy5jYWxsKGhhc093blByb3BlcnR5KS5yZXBsYWNlKHJlUmVnRXhwQ2hhciwiXFwkJiIpLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFwoKXwgZm9yIC4rPyg/PVxcXF0pL2csIiQxLio/IikrIiQiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTmF0aXZlYCB3aXRob3V0IGJhZCBzaGltIGNoZWNrcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgbmF0aXZlIGZ1bmN0aW9uLAogKiAgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpe2lmKCFpc09iamVjdCh2YWx1ZSl8fGlzTWFza2VkKHZhbHVlKSl7cmV0dXJuIGZhbHNlfXZhciBwYXR0ZXJuPWlzRnVuY3Rpb24odmFsdWUpP3JlSXNOYXRpdmU6cmVJc0hvc3RDdG9yO3JldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKX1tb2R1bGUuZXhwb3J0cz1iYXNlSXNOYXRpdmV9LHsiLi9faXNNYXNrZWQiOjI0NSwiLi9fdG9Tb3VyY2UiOjI4NCwiLi9pc0Z1bmN0aW9uIjozMDgsIi4vaXNPYmplY3QiOjMxMX1dLDE2MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGdldFRhZz1yZXF1aXJlKCIuL19nZXRUYWciKSxpc09iamVjdExpa2U9cmVxdWlyZSgiLi9pc09iamVjdExpa2UiKTsKLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL3ZhciBzZXRUYWc9IltvYmplY3QgU2V0XSI7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc1NldGAgd2l0aG91dCBOb2RlLmpzIG9wdGltaXphdGlvbnMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHNldCwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBiYXNlSXNTZXQodmFsdWUpe3JldHVybiBpc09iamVjdExpa2UodmFsdWUpJiZnZXRUYWcodmFsdWUpPT1zZXRUYWd9bW9kdWxlLmV4cG9ydHM9YmFzZUlzU2V0fSx7Ii4vX2dldFRhZyI6MjI4LCIuL2lzT2JqZWN0TGlrZSI6MzEyfV0sMTY0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUdldFRhZz1yZXF1aXJlKCIuL19iYXNlR2V0VGFnIiksaXNMZW5ndGg9cmVxdWlyZSgiLi9pc0xlbmd0aCIpLGlzT2JqZWN0TGlrZT1yZXF1aXJlKCIuL2lzT2JqZWN0TGlrZSIpOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIGFyZ3NUYWc9IltvYmplY3QgQXJndW1lbnRzXSIsYXJyYXlUYWc9IltvYmplY3QgQXJyYXldIixib29sVGFnPSJbb2JqZWN0IEJvb2xlYW5dIixkYXRlVGFnPSJbb2JqZWN0IERhdGVdIixlcnJvclRhZz0iW29iamVjdCBFcnJvcl0iLGZ1bmNUYWc9IltvYmplY3QgRnVuY3Rpb25dIixtYXBUYWc9IltvYmplY3QgTWFwXSIsbnVtYmVyVGFnPSJbb2JqZWN0IE51bWJlcl0iLG9iamVjdFRhZz0iW29iamVjdCBPYmplY3RdIixyZWdleHBUYWc9IltvYmplY3QgUmVnRXhwXSIsc2V0VGFnPSJbb2JqZWN0IFNldF0iLHN0cmluZ1RhZz0iW29iamVjdCBTdHJpbmddIix3ZWFrTWFwVGFnPSJbb2JqZWN0IFdlYWtNYXBdIjt2YXIgYXJyYXlCdWZmZXJUYWc9IltvYmplY3QgQXJyYXlCdWZmZXJdIixkYXRhVmlld1RhZz0iW29iamVjdCBEYXRhVmlld10iLGZsb2F0MzJUYWc9IltvYmplY3QgRmxvYXQzMkFycmF5XSIsZmxvYXQ2NFRhZz0iW29iamVjdCBGbG9hdDY0QXJyYXldIixpbnQ4VGFnPSJbb2JqZWN0IEludDhBcnJheV0iLGludDE2VGFnPSJbb2JqZWN0IEludDE2QXJyYXldIixpbnQzMlRhZz0iW29iamVjdCBJbnQzMkFycmF5XSIsdWludDhUYWc9IltvYmplY3QgVWludDhBcnJheV0iLHVpbnQ4Q2xhbXBlZFRhZz0iW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0iLHVpbnQxNlRhZz0iW29iamVjdCBVaW50MTZBcnJheV0iLHVpbnQzMlRhZz0iW29iamVjdCBVaW50MzJBcnJheV0iOwovKiogVXNlZCB0byBpZGVudGlmeSBgdG9TdHJpbmdUYWdgIHZhbHVlcyBvZiB0eXBlZCBhcnJheXMuICovdmFyIHR5cGVkQXJyYXlUYWdzPXt9O3R5cGVkQXJyYXlUYWdzW2Zsb2F0MzJUYWddPXR5cGVkQXJyYXlUYWdzW2Zsb2F0NjRUYWddPXR5cGVkQXJyYXlUYWdzW2ludDhUYWddPXR5cGVkQXJyYXlUYWdzW2ludDE2VGFnXT10eXBlZEFycmF5VGFnc1tpbnQzMlRhZ109dHlwZWRBcnJheVRhZ3NbdWludDhUYWddPXR5cGVkQXJyYXlUYWdzW3VpbnQ4Q2xhbXBlZFRhZ109dHlwZWRBcnJheVRhZ3NbdWludDE2VGFnXT10eXBlZEFycmF5VGFnc1t1aW50MzJUYWddPXRydWU7dHlwZWRBcnJheVRhZ3NbYXJnc1RhZ109dHlwZWRBcnJheVRhZ3NbYXJyYXlUYWddPXR5cGVkQXJyYXlUYWdzW2FycmF5QnVmZmVyVGFnXT10eXBlZEFycmF5VGFnc1tib29sVGFnXT10eXBlZEFycmF5VGFnc1tkYXRhVmlld1RhZ109dHlwZWRBcnJheVRhZ3NbZGF0ZVRhZ109dHlwZWRBcnJheVRhZ3NbZXJyb3JUYWddPXR5cGVkQXJyYXlUYWdzW2Z1bmNUYWddPXR5cGVkQXJyYXlUYWdzW21hcFRhZ109dHlwZWRBcnJheVRhZ3NbbnVtYmVyVGFnXT10eXBlZEFycmF5VGFnc1tvYmplY3RUYWddPXR5cGVkQXJyYXlUYWdzW3JlZ2V4cFRhZ109dHlwZWRBcnJheVRhZ3Nbc2V0VGFnXT10eXBlZEFycmF5VGFnc1tzdHJpbmdUYWddPXR5cGVkQXJyYXlUYWdzW3dlYWtNYXBUYWddPWZhbHNlOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNUeXBlZEFycmF5YCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gYmFzZUlzVHlwZWRBcnJheSh2YWx1ZSl7cmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkmJmlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkmJiEhdHlwZWRBcnJheVRhZ3NbYmFzZUdldFRhZyh2YWx1ZSldfW1vZHVsZS5leHBvcnRzPWJhc2VJc1R5cGVkQXJyYXl9LHsiLi9fYmFzZUdldFRhZyI6MTUxLCIuL2lzTGVuZ3RoIjozMDksIi4vaXNPYmplY3RMaWtlIjozMTJ9XSwxNjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlTWF0Y2hlcz1yZXF1aXJlKCIuL19iYXNlTWF0Y2hlcyIpLGJhc2VNYXRjaGVzUHJvcGVydHk9cmVxdWlyZSgiLi9fYmFzZU1hdGNoZXNQcm9wZXJ0eSIpLGlkZW50aXR5PXJlcXVpcmUoIi4vaWRlbnRpdHkiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpLHByb3BlcnR5PXJlcXVpcmUoIi4vcHJvcGVydHkiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLml0ZXJhdGVlYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSBbdmFsdWU9Xy5pZGVudGl0eV0gVGhlIHZhbHVlIHRvIGNvbnZlcnQgdG8gYW4gaXRlcmF0ZWUuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgaXRlcmF0ZWUuCiAqL2Z1bmN0aW9uIGJhc2VJdGVyYXRlZSh2YWx1ZSl7Ci8vIERvbid0IHN0b3JlIHRoZSBgdHlwZW9mYCByZXN1bHQgaW4gYSB2YXJpYWJsZSB0byBhdm9pZCBhIEpJVCBidWcgaW4gU2FmYXJpIDkuCi8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU2MDM0IGZvciBtb3JlIGRldGFpbHMuCmlmKHR5cGVvZiB2YWx1ZT09ImZ1bmN0aW9uIil7cmV0dXJuIHZhbHVlfWlmKHZhbHVlPT1udWxsKXtyZXR1cm4gaWRlbnRpdHl9aWYodHlwZW9mIHZhbHVlPT0ib2JqZWN0Iil7cmV0dXJuIGlzQXJyYXkodmFsdWUpP2Jhc2VNYXRjaGVzUHJvcGVydHkodmFsdWVbMF0sdmFsdWVbMV0pOmJhc2VNYXRjaGVzKHZhbHVlKX1yZXR1cm4gcHJvcGVydHkodmFsdWUpfW1vZHVsZS5leHBvcnRzPWJhc2VJdGVyYXRlZX0seyIuL19iYXNlTWF0Y2hlcyI6MTcwLCIuL19iYXNlTWF0Y2hlc1Byb3BlcnR5IjoxNzEsIi4vaWRlbnRpdHkiOjMwMSwiLi9pc0FycmF5IjozMDMsIi4vcHJvcGVydHkiOjMzMn1dLDE2NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGlzUHJvdG90eXBlPXJlcXVpcmUoIi4vX2lzUHJvdG90eXBlIiksbmF0aXZlS2V5cz1yZXF1aXJlKCIuL19uYXRpdmVLZXlzIik7Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi92YXIgb2JqZWN0UHJvdG89T2JqZWN0LnByb3RvdHlwZTsKLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovdmFyIGhhc093blByb3BlcnR5PW9iamVjdFByb3RvLmhhc093blByb3BlcnR5OwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ua2V5c2Agd2hpY2ggZG9lc24ndCB0cmVhdCBzcGFyc2UgYXJyYXlzIGFzIGRlbnNlLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuCiAqL2Z1bmN0aW9uIGJhc2VLZXlzKG9iamVjdCl7aWYoIWlzUHJvdG90eXBlKG9iamVjdCkpe3JldHVybiBuYXRpdmVLZXlzKG9iamVjdCl9dmFyIHJlc3VsdD1bXTtmb3IodmFyIGtleSBpbiBPYmplY3Qob2JqZWN0KSl7aWYoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3Qsa2V5KSYma2V5IT0iY29uc3RydWN0b3IiKXtyZXN1bHQucHVzaChrZXkpfX1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWJhc2VLZXlzfSx7Ii4vX2lzUHJvdG90eXBlIjoyNDYsIi4vX25hdGl2ZUtleXMiOjI2Mn1dLDE2NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGlzT2JqZWN0PXJlcXVpcmUoIi4vaXNPYmplY3QiKSxpc1Byb3RvdHlwZT1yZXF1aXJlKCIuL19pc1Byb3RvdHlwZSIpLG5hdGl2ZUtleXNJbj1yZXF1aXJlKCIuL19uYXRpdmVLZXlzSW4iKTsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL3ZhciBvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi92YXIgaGFzT3duUHJvcGVydHk9b2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5rZXlzSW5gIHdoaWNoIGRvZXNuJ3QgdHJlYXQgc3BhcnNlIGFycmF5cyBhcyBkZW5zZS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLgogKi9mdW5jdGlvbiBiYXNlS2V5c0luKG9iamVjdCl7aWYoIWlzT2JqZWN0KG9iamVjdCkpe3JldHVybiBuYXRpdmVLZXlzSW4ob2JqZWN0KX12YXIgaXNQcm90bz1pc1Byb3RvdHlwZShvYmplY3QpLHJlc3VsdD1bXTtmb3IodmFyIGtleSBpbiBvYmplY3Qpe2lmKCEoa2V5PT0iY29uc3RydWN0b3IiJiYoaXNQcm90b3x8IWhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LGtleSkpKSl7cmVzdWx0LnB1c2goa2V5KX19cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlS2V5c0lufSx7Ii4vX2lzUHJvdG90eXBlIjoyNDYsIi4vX25hdGl2ZUtleXNJbiI6MjYzLCIuL2lzT2JqZWN0IjozMTF9XSwxNjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ubHRgIHdoaWNoIGRvZXNuJ3QgY29lcmNlIGFyZ3VtZW50cy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS4KICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgbGVzcyB0aGFuIGBvdGhlcmAsCiAqICBlbHNlIGBmYWxzZWAuCiAqLwpmdW5jdGlvbiBiYXNlTHQodmFsdWUsb3RoZXIpe3JldHVybiB2YWx1ZTxvdGhlcn1tb2R1bGUuZXhwb3J0cz1iYXNlTHR9LHt9XSwxNjk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlRWFjaD1yZXF1aXJlKCIuL19iYXNlRWFjaCIpLGlzQXJyYXlMaWtlPXJlcXVpcmUoIi4vaXNBcnJheUxpa2UiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hcGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBhcnJheS4KICovZnVuY3Rpb24gYmFzZU1hcChjb2xsZWN0aW9uLGl0ZXJhdGVlKXt2YXIgaW5kZXg9LTEscmVzdWx0PWlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pP0FycmF5KGNvbGxlY3Rpb24ubGVuZ3RoKTpbXTtiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGtleSxjb2xsZWN0aW9uKXtyZXN1bHRbKytpbmRleF09aXRlcmF0ZWUodmFsdWUsa2V5LGNvbGxlY3Rpb24pfSk7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlTWFwfSx7Ii4vX2Jhc2VFYWNoIjoxNDIsIi4vaXNBcnJheUxpa2UiOjMwNH1dLDE3MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VJc01hdGNoPXJlcXVpcmUoIi4vX2Jhc2VJc01hdGNoIiksZ2V0TWF0Y2hEYXRhPXJlcXVpcmUoIi4vX2dldE1hdGNoRGF0YSIpLG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlPXJlcXVpcmUoIi4vX21hdGNoZXNTdHJpY3RDb21wYXJhYmxlIik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXRjaGVzYCB3aGljaCBkb2Vzbid0IGNsb25lIGBzb3VyY2VgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3Qgb2YgcHJvcGVydHkgdmFsdWVzIHRvIG1hdGNoLgogKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzcGVjIGZ1bmN0aW9uLgogKi9mdW5jdGlvbiBiYXNlTWF0Y2hlcyhzb3VyY2Upe3ZhciBtYXRjaERhdGE9Z2V0TWF0Y2hEYXRhKHNvdXJjZSk7aWYobWF0Y2hEYXRhLmxlbmd0aD09MSYmbWF0Y2hEYXRhWzBdWzJdKXtyZXR1cm4gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUobWF0Y2hEYXRhWzBdWzBdLG1hdGNoRGF0YVswXVsxXSl9cmV0dXJuIGZ1bmN0aW9uKG9iamVjdCl7cmV0dXJuIG9iamVjdD09PXNvdXJjZXx8YmFzZUlzTWF0Y2gob2JqZWN0LHNvdXJjZSxtYXRjaERhdGEpfX1tb2R1bGUuZXhwb3J0cz1iYXNlTWF0Y2hlc30seyIuL19iYXNlSXNNYXRjaCI6MTYwLCIuL19nZXRNYXRjaERhdGEiOjIyMiwiLi9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUiOjI1OX1dLDE3MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VJc0VxdWFsPXJlcXVpcmUoIi4vX2Jhc2VJc0VxdWFsIiksZ2V0PXJlcXVpcmUoIi4vZ2V0IiksaGFzSW49cmVxdWlyZSgiLi9oYXNJbiIpLGlzS2V5PXJlcXVpcmUoIi4vX2lzS2V5IiksaXNTdHJpY3RDb21wYXJhYmxlPXJlcXVpcmUoIi4vX2lzU3RyaWN0Q29tcGFyYWJsZSIpLG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlPXJlcXVpcmUoIi4vX21hdGNoZXNTdHJpY3RDb21wYXJhYmxlIiksdG9LZXk9cmVxdWlyZSgiLi9fdG9LZXkiKTsKLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovdmFyIENPTVBBUkVfUEFSVElBTF9GTEFHPTEsQ09NUEFSRV9VTk9SREVSRURfRkxBRz0yOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ubWF0Y2hlc1Byb3BlcnR5YCB3aGljaCBkb2Vzbid0IGNsb25lIGBzcmNWYWx1ZWAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuCiAqIEBwYXJhbSB7Kn0gc3JjVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLgogKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzcGVjIGZ1bmN0aW9uLgogKi9mdW5jdGlvbiBiYXNlTWF0Y2hlc1Byb3BlcnR5KHBhdGgsc3JjVmFsdWUpe2lmKGlzS2V5KHBhdGgpJiZpc1N0cmljdENvbXBhcmFibGUoc3JjVmFsdWUpKXtyZXR1cm4gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUodG9LZXkocGF0aCksc3JjVmFsdWUpfXJldHVybiBmdW5jdGlvbihvYmplY3Qpe3ZhciBvYmpWYWx1ZT1nZXQob2JqZWN0LHBhdGgpO3JldHVybiBvYmpWYWx1ZT09PXVuZGVmaW5lZCYmb2JqVmFsdWU9PT1zcmNWYWx1ZT9oYXNJbihvYmplY3QscGF0aCk6YmFzZUlzRXF1YWwoc3JjVmFsdWUsb2JqVmFsdWUsQ09NUEFSRV9QQVJUSUFMX0ZMQUd8Q09NUEFSRV9VTk9SREVSRURfRkxBRyl9fW1vZHVsZS5leHBvcnRzPWJhc2VNYXRjaGVzUHJvcGVydHl9LHsiLi9fYmFzZUlzRXF1YWwiOjE1NywiLi9faXNLZXkiOjI0MywiLi9faXNTdHJpY3RDb21wYXJhYmxlIjoyNDcsIi4vX21hdGNoZXNTdHJpY3RDb21wYXJhYmxlIjoyNTksIi4vX3RvS2V5IjoyODMsIi4vZ2V0IjoyOTgsIi4vaGFzSW4iOjMwMH1dLDE3MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIFN0YWNrPXJlcXVpcmUoIi4vX1N0YWNrIiksYXNzaWduTWVyZ2VWYWx1ZT1yZXF1aXJlKCIuL19hc3NpZ25NZXJnZVZhbHVlIiksYmFzZUZvcj1yZXF1aXJlKCIuL19iYXNlRm9yIiksYmFzZU1lcmdlRGVlcD1yZXF1aXJlKCIuL19iYXNlTWVyZ2VEZWVwIiksaXNPYmplY3Q9cmVxdWlyZSgiLi9pc09iamVjdCIpLGtleXNJbj1yZXF1aXJlKCIuL2tleXNJbiIpLHNhZmVHZXQ9cmVxdWlyZSgiLi9fc2FmZUdldCIpOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ubWVyZ2VgIHdpdGhvdXQgc3VwcG9ydCBmb3IgbXVsdGlwbGUgc291cmNlcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LgogKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LgogKiBAcGFyYW0ge251bWJlcn0gc3JjSW5kZXggVGhlIGluZGV4IG9mIGBzb3VyY2VgLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBtZXJnZWQgdmFsdWVzLgogKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIHNvdXJjZSB2YWx1ZXMgYW5kIHRoZWlyIG1lcmdlZAogKiAgY291bnRlcnBhcnRzLgogKi9mdW5jdGlvbiBiYXNlTWVyZ2Uob2JqZWN0LHNvdXJjZSxzcmNJbmRleCxjdXN0b21pemVyLHN0YWNrKXtpZihvYmplY3Q9PT1zb3VyY2Upe3JldHVybn1iYXNlRm9yKHNvdXJjZSxmdW5jdGlvbihzcmNWYWx1ZSxrZXkpe3N0YWNrfHwoc3RhY2s9bmV3IFN0YWNrKTtpZihpc09iamVjdChzcmNWYWx1ZSkpe2Jhc2VNZXJnZURlZXAob2JqZWN0LHNvdXJjZSxrZXksc3JjSW5kZXgsYmFzZU1lcmdlLGN1c3RvbWl6ZXIsc3RhY2spfWVsc2V7dmFyIG5ld1ZhbHVlPWN1c3RvbWl6ZXI/Y3VzdG9taXplcihzYWZlR2V0KG9iamVjdCxrZXkpLHNyY1ZhbHVlLGtleSsiIixvYmplY3Qsc291cmNlLHN0YWNrKTp1bmRlZmluZWQ7aWYobmV3VmFsdWU9PT11bmRlZmluZWQpe25ld1ZhbHVlPXNyY1ZhbHVlfWFzc2lnbk1lcmdlVmFsdWUob2JqZWN0LGtleSxuZXdWYWx1ZSl9fSxrZXlzSW4pfW1vZHVsZS5leHBvcnRzPWJhc2VNZXJnZX0seyIuL19TdGFjayI6MTE5LCIuL19hc3NpZ25NZXJnZVZhbHVlIjoxMzQsIi4vX2Jhc2VGb3IiOjE0NywiLi9fYmFzZU1lcmdlRGVlcCI6MTczLCIuL19zYWZlR2V0IjoyNjksIi4vaXNPYmplY3QiOjMxMSwiLi9rZXlzSW4iOjMyMH1dLDE3MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFzc2lnbk1lcmdlVmFsdWU9cmVxdWlyZSgiLi9fYXNzaWduTWVyZ2VWYWx1ZSIpLGNsb25lQnVmZmVyPXJlcXVpcmUoIi4vX2Nsb25lQnVmZmVyIiksY2xvbmVUeXBlZEFycmF5PXJlcXVpcmUoIi4vX2Nsb25lVHlwZWRBcnJheSIpLGNvcHlBcnJheT1yZXF1aXJlKCIuL19jb3B5QXJyYXkiKSxpbml0Q2xvbmVPYmplY3Q9cmVxdWlyZSgiLi9faW5pdENsb25lT2JqZWN0IiksaXNBcmd1bWVudHM9cmVxdWlyZSgiLi9pc0FyZ3VtZW50cyIpLGlzQXJyYXk9cmVxdWlyZSgiLi9pc0FycmF5IiksaXNBcnJheUxpa2VPYmplY3Q9cmVxdWlyZSgiLi9pc0FycmF5TGlrZU9iamVjdCIpLGlzQnVmZmVyPXJlcXVpcmUoIi4vaXNCdWZmZXIiKSxpc0Z1bmN0aW9uPXJlcXVpcmUoIi4vaXNGdW5jdGlvbiIpLGlzT2JqZWN0PXJlcXVpcmUoIi4vaXNPYmplY3QiKSxpc1BsYWluT2JqZWN0PXJlcXVpcmUoIi4vaXNQbGFpbk9iamVjdCIpLGlzVHlwZWRBcnJheT1yZXF1aXJlKCIuL2lzVHlwZWRBcnJheSIpLHNhZmVHZXQ9cmVxdWlyZSgiLi9fc2FmZUdldCIpLHRvUGxhaW5PYmplY3Q9cmVxdWlyZSgiLi90b1BsYWluT2JqZWN0Iik7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VNZXJnZWAgZm9yIGFycmF5cyBhbmQgb2JqZWN0cyB3aGljaCBwZXJmb3JtcwogKiBkZWVwIG1lcmdlcyBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGVuYWJsaW5nIG9iamVjdHMgd2l0aCBjaXJjdWxhcgogKiByZWZlcmVuY2VzIHRvIGJlIG1lcmdlZC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LgogKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIG1lcmdlLgogKiBAcGFyYW0ge251bWJlcn0gc3JjSW5kZXggVGhlIGluZGV4IG9mIGBzb3VyY2VgLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBtZXJnZUZ1bmMgVGhlIGZ1bmN0aW9uIHRvIG1lcmdlIHZhbHVlcy4KICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgYXNzaWduZWQgdmFsdWVzLgogKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIHNvdXJjZSB2YWx1ZXMgYW5kIHRoZWlyIG1lcmdlZAogKiAgY291bnRlcnBhcnRzLgogKi9mdW5jdGlvbiBiYXNlTWVyZ2VEZWVwKG9iamVjdCxzb3VyY2Usa2V5LHNyY0luZGV4LG1lcmdlRnVuYyxjdXN0b21pemVyLHN0YWNrKXt2YXIgb2JqVmFsdWU9c2FmZUdldChvYmplY3Qsa2V5KSxzcmNWYWx1ZT1zYWZlR2V0KHNvdXJjZSxrZXkpLHN0YWNrZWQ9c3RhY2suZ2V0KHNyY1ZhbHVlKTtpZihzdGFja2VkKXthc3NpZ25NZXJnZVZhbHVlKG9iamVjdCxrZXksc3RhY2tlZCk7cmV0dXJufXZhciBuZXdWYWx1ZT1jdXN0b21pemVyP2N1c3RvbWl6ZXIob2JqVmFsdWUsc3JjVmFsdWUsa2V5KyIiLG9iamVjdCxzb3VyY2Usc3RhY2spOnVuZGVmaW5lZDt2YXIgaXNDb21tb249bmV3VmFsdWU9PT11bmRlZmluZWQ7aWYoaXNDb21tb24pe3ZhciBpc0Fycj1pc0FycmF5KHNyY1ZhbHVlKSxpc0J1ZmY9IWlzQXJyJiZpc0J1ZmZlcihzcmNWYWx1ZSksaXNUeXBlZD0haXNBcnImJiFpc0J1ZmYmJmlzVHlwZWRBcnJheShzcmNWYWx1ZSk7bmV3VmFsdWU9c3JjVmFsdWU7aWYoaXNBcnJ8fGlzQnVmZnx8aXNUeXBlZCl7aWYoaXNBcnJheShvYmpWYWx1ZSkpe25ld1ZhbHVlPW9ialZhbHVlfWVsc2UgaWYoaXNBcnJheUxpa2VPYmplY3Qob2JqVmFsdWUpKXtuZXdWYWx1ZT1jb3B5QXJyYXkob2JqVmFsdWUpfWVsc2UgaWYoaXNCdWZmKXtpc0NvbW1vbj1mYWxzZTtuZXdWYWx1ZT1jbG9uZUJ1ZmZlcihzcmNWYWx1ZSx0cnVlKX1lbHNlIGlmKGlzVHlwZWQpe2lzQ29tbW9uPWZhbHNlO25ld1ZhbHVlPWNsb25lVHlwZWRBcnJheShzcmNWYWx1ZSx0cnVlKX1lbHNle25ld1ZhbHVlPVtdfX1lbHNlIGlmKGlzUGxhaW5PYmplY3Qoc3JjVmFsdWUpfHxpc0FyZ3VtZW50cyhzcmNWYWx1ZSkpe25ld1ZhbHVlPW9ialZhbHVlO2lmKGlzQXJndW1lbnRzKG9ialZhbHVlKSl7bmV3VmFsdWU9dG9QbGFpbk9iamVjdChvYmpWYWx1ZSl9ZWxzZSBpZighaXNPYmplY3Qob2JqVmFsdWUpfHxpc0Z1bmN0aW9uKG9ialZhbHVlKSl7bmV3VmFsdWU9aW5pdENsb25lT2JqZWN0KHNyY1ZhbHVlKX19ZWxzZXtpc0NvbW1vbj1mYWxzZX19aWYoaXNDb21tb24pewovLyBSZWN1cnNpdmVseSBtZXJnZSBvYmplY3RzIGFuZCBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS4Kc3RhY2suc2V0KHNyY1ZhbHVlLG5ld1ZhbHVlKTttZXJnZUZ1bmMobmV3VmFsdWUsc3JjVmFsdWUsc3JjSW5kZXgsY3VzdG9taXplcixzdGFjayk7c3RhY2tbImRlbGV0ZSJdKHNyY1ZhbHVlKX1hc3NpZ25NZXJnZVZhbHVlKG9iamVjdCxrZXksbmV3VmFsdWUpfW1vZHVsZS5leHBvcnRzPWJhc2VNZXJnZURlZXB9LHsiLi9fYXNzaWduTWVyZ2VWYWx1ZSI6MTM0LCIuL19jbG9uZUJ1ZmZlciI6MTk1LCIuL19jbG9uZVR5cGVkQXJyYXkiOjE5OSwiLi9fY29weUFycmF5IjoyMDIsIi4vX2luaXRDbG9uZU9iamVjdCI6MjM5LCIuL19zYWZlR2V0IjoyNjksIi4vaXNBcmd1bWVudHMiOjMwMiwiLi9pc0FycmF5IjozMDMsIi4vaXNBcnJheUxpa2VPYmplY3QiOjMwNSwiLi9pc0J1ZmZlciI6MzA2LCIuL2lzRnVuY3Rpb24iOjMwOCwiLi9pc09iamVjdCI6MzExLCIuL2lzUGxhaW5PYmplY3QiOjMxMywiLi9pc1R5cGVkQXJyYXkiOjMxNywiLi90b1BsYWluT2JqZWN0IjozNDJ9XSwxNzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheU1hcD1yZXF1aXJlKCIuL19hcnJheU1hcCIpLGJhc2VJdGVyYXRlZT1yZXF1aXJlKCIuL19iYXNlSXRlcmF0ZWUiKSxiYXNlTWFwPXJlcXVpcmUoIi4vX2Jhc2VNYXAiKSxiYXNlU29ydEJ5PXJlcXVpcmUoIi4vX2Jhc2VTb3J0QnkiKSxiYXNlVW5hcnk9cmVxdWlyZSgiLi9fYmFzZVVuYXJ5IiksY29tcGFyZU11bHRpcGxlPXJlcXVpcmUoIi4vX2NvbXBhcmVNdWx0aXBsZSIpLGlkZW50aXR5PXJlcXVpcmUoIi4vaWRlbnRpdHkiKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm9yZGVyQnlgIHdpdGhvdXQgcGFyYW0gZ3VhcmRzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb25bXXxPYmplY3RbXXxzdHJpbmdbXX0gaXRlcmF0ZWVzIFRoZSBpdGVyYXRlZXMgdG8gc29ydCBieS4KICogQHBhcmFtIHtzdHJpbmdbXX0gb3JkZXJzIFRoZSBzb3J0IG9yZGVycyBvZiBgaXRlcmF0ZWVzYC4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgc29ydGVkIGFycmF5LgogKi9mdW5jdGlvbiBiYXNlT3JkZXJCeShjb2xsZWN0aW9uLGl0ZXJhdGVlcyxvcmRlcnMpe3ZhciBpbmRleD0tMTtpdGVyYXRlZXM9YXJyYXlNYXAoaXRlcmF0ZWVzLmxlbmd0aD9pdGVyYXRlZXM6W2lkZW50aXR5XSxiYXNlVW5hcnkoYmFzZUl0ZXJhdGVlKSk7dmFyIHJlc3VsdD1iYXNlTWFwKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUsa2V5LGNvbGxlY3Rpb24pe3ZhciBjcml0ZXJpYT1hcnJheU1hcChpdGVyYXRlZXMsZnVuY3Rpb24oaXRlcmF0ZWUpe3JldHVybiBpdGVyYXRlZSh2YWx1ZSl9KTtyZXR1cm57Y3JpdGVyaWE6Y3JpdGVyaWEsaW5kZXg6KytpbmRleCx2YWx1ZTp2YWx1ZX19KTtyZXR1cm4gYmFzZVNvcnRCeShyZXN1bHQsZnVuY3Rpb24ob2JqZWN0LG90aGVyKXtyZXR1cm4gY29tcGFyZU11bHRpcGxlKG9iamVjdCxvdGhlcixvcmRlcnMpfSl9bW9kdWxlLmV4cG9ydHM9YmFzZU9yZGVyQnl9LHsiLi9fYXJyYXlNYXAiOjEyOSwiLi9fYmFzZUl0ZXJhdGVlIjoxNjUsIi4vX2Jhc2VNYXAiOjE2OSwiLi9fYmFzZVNvcnRCeSI6MTg0LCIuL19iYXNlVW5hcnkiOjE4NywiLi9fY29tcGFyZU11bHRpcGxlIjoyMDEsIi4vaWRlbnRpdHkiOjMwMX1dLDE3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VQaWNrQnk9cmVxdWlyZSgiLi9fYmFzZVBpY2tCeSIpLGhhc0luPXJlcXVpcmUoIi4vaGFzSW4iKTsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnBpY2tgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaW5kaXZpZHVhbAogKiBwcm9wZXJ0eSBpZGVudGlmaWVycy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgc291cmNlIG9iamVjdC4KICogQHBhcmFtIHtzdHJpbmdbXX0gcGF0aHMgVGhlIHByb3BlcnR5IHBhdGhzIHRvIHBpY2suCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBvYmplY3QuCiAqL2Z1bmN0aW9uIGJhc2VQaWNrKG9iamVjdCxwYXRocyl7cmV0dXJuIGJhc2VQaWNrQnkob2JqZWN0LHBhdGhzLGZ1bmN0aW9uKHZhbHVlLHBhdGgpe3JldHVybiBoYXNJbihvYmplY3QscGF0aCl9KX1tb2R1bGUuZXhwb3J0cz1iYXNlUGlja30seyIuL19iYXNlUGlja0J5IjoxNzYsIi4vaGFzSW4iOjMwMH1dLDE3NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VHZXQ9cmVxdWlyZSgiLi9fYmFzZUdldCIpLGJhc2VTZXQ9cmVxdWlyZSgiLi9fYmFzZVNldCIpLGNhc3RQYXRoPXJlcXVpcmUoIi4vX2Nhc3RQYXRoIik7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiAgYF8ucGlja0J5YCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIHNvdXJjZSBvYmplY3QuCiAqIEBwYXJhbSB7c3RyaW5nW119IHBhdGhzIFRoZSBwcm9wZXJ0eSBwYXRocyB0byBwaWNrLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIHByb3BlcnR5LgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LgogKi9mdW5jdGlvbiBiYXNlUGlja0J5KG9iamVjdCxwYXRocyxwcmVkaWNhdGUpe3ZhciBpbmRleD0tMSxsZW5ndGg9cGF0aHMubGVuZ3RoLHJlc3VsdD17fTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7dmFyIHBhdGg9cGF0aHNbaW5kZXhdLHZhbHVlPWJhc2VHZXQob2JqZWN0LHBhdGgpO2lmKHByZWRpY2F0ZSh2YWx1ZSxwYXRoKSl7YmFzZVNldChyZXN1bHQsY2FzdFBhdGgocGF0aCxvYmplY3QpLHZhbHVlKX19cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlUGlja0J5fSx7Ii4vX2Jhc2VHZXQiOjE0OSwiLi9fYmFzZVNldCI6MTgyLCIuL19jYXN0UGF0aCI6MTkzfV0sMTc3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnByb3BlcnR5YCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZXAgcGF0aHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LgogKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi4KICovCmZ1bmN0aW9uIGJhc2VQcm9wZXJ0eShrZXkpe3JldHVybiBmdW5jdGlvbihvYmplY3Qpe3JldHVybiBvYmplY3Q9PW51bGw/dW5kZWZpbmVkOm9iamVjdFtrZXldfX1tb2R1bGUuZXhwb3J0cz1iYXNlUHJvcGVydHl9LHt9XSwxNzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlR2V0PXJlcXVpcmUoIi4vX2Jhc2VHZXQiKTsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZVByb3BlcnR5YCB3aGljaCBzdXBwb3J0cyBkZWVwIHBhdGhzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LgogKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi4KICovZnVuY3Rpb24gYmFzZVByb3BlcnR5RGVlcChwYXRoKXtyZXR1cm4gZnVuY3Rpb24ob2JqZWN0KXtyZXR1cm4gYmFzZUdldChvYmplY3QscGF0aCl9fW1vZHVsZS5leHBvcnRzPWJhc2VQcm9wZXJ0eURlZXB9LHsiLi9fYmFzZUdldCI6MTQ5fV0sMTc5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqLwp2YXIgbmF0aXZlQ2VpbD1NYXRoLmNlaWwsbmF0aXZlTWF4PU1hdGgubWF4OwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ucmFuZ2VgIGFuZCBgXy5yYW5nZVJpZ2h0YCB3aGljaCBkb2Vzbid0CiAqIGNvZXJjZSBhcmd1bWVudHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydCBUaGUgc3RhcnQgb2YgdGhlIHJhbmdlLgogKiBAcGFyYW0ge251bWJlcn0gZW5kIFRoZSBlbmQgb2YgdGhlIHJhbmdlLgogKiBAcGFyYW0ge251bWJlcn0gc3RlcCBUaGUgdmFsdWUgdG8gaW5jcmVtZW50IG9yIGRlY3JlbWVudCBieS4KICogQHBhcmFtIHtib29sZWFufSBbZnJvbVJpZ2h0XSBTcGVjaWZ5IGl0ZXJhdGluZyBmcm9tIHJpZ2h0IHRvIGxlZnQuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgcmFuZ2Ugb2YgbnVtYmVycy4KICovZnVuY3Rpb24gYmFzZVJhbmdlKHN0YXJ0LGVuZCxzdGVwLGZyb21SaWdodCl7dmFyIGluZGV4PS0xLGxlbmd0aD1uYXRpdmVNYXgobmF0aXZlQ2VpbCgoZW5kLXN0YXJ0KS8oc3RlcHx8MSkpLDApLHJlc3VsdD1BcnJheShsZW5ndGgpO3doaWxlKGxlbmd0aC0tKXtyZXN1bHRbZnJvbVJpZ2h0P2xlbmd0aDorK2luZGV4XT1zdGFydDtzdGFydCs9c3RlcH1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWJhc2VSYW5nZX0se31dLDE4MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5yZWR1Y2VgIGFuZCBgXy5yZWR1Y2VSaWdodGAsIHdpdGhvdXQgc3VwcG9ydAogKiBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcywgd2hpY2ggaXRlcmF0ZXMgb3ZlciBgY29sbGVjdGlvbmAgdXNpbmcgYGVhY2hGdW5jYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcGFyYW0geyp9IGFjY3VtdWxhdG9yIFRoZSBpbml0aWFsIHZhbHVlLgogKiBAcGFyYW0ge2Jvb2xlYW59IGluaXRBY2N1bSBTcGVjaWZ5IHVzaW5nIHRoZSBmaXJzdCBvciBsYXN0IGVsZW1lbnQgb2YKICogIGBjb2xsZWN0aW9uYCBhcyB0aGUgaW5pdGlhbCB2YWx1ZS4KICogQHBhcmFtIHtGdW5jdGlvbn0gZWFjaEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGl0ZXJhdGUgb3ZlciBgY29sbGVjdGlvbmAuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBhY2N1bXVsYXRlZCB2YWx1ZS4KICovCmZ1bmN0aW9uIGJhc2VSZWR1Y2UoY29sbGVjdGlvbixpdGVyYXRlZSxhY2N1bXVsYXRvcixpbml0QWNjdW0sZWFjaEZ1bmMpe2VhY2hGdW5jKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUsaW5kZXgsY29sbGVjdGlvbil7YWNjdW11bGF0b3I9aW5pdEFjY3VtPyhpbml0QWNjdW09ZmFsc2UsdmFsdWUpOml0ZXJhdGVlKGFjY3VtdWxhdG9yLHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pfSk7cmV0dXJuIGFjY3VtdWxhdG9yfW1vZHVsZS5leHBvcnRzPWJhc2VSZWR1Y2V9LHt9XSwxODE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpZGVudGl0eT1yZXF1aXJlKCIuL2lkZW50aXR5Iiksb3ZlclJlc3Q9cmVxdWlyZSgiLi9fb3ZlclJlc3QiKSxzZXRUb1N0cmluZz1yZXF1aXJlKCIuL19zZXRUb1N0cmluZyIpOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ucmVzdGAgd2hpY2ggZG9lc24ndCB2YWxpZGF0ZSBvciBjb2VyY2UgYXJndW1lbnRzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBhcHBseSBhIHJlc3QgcGFyYW1ldGVyIHRvLgogKiBAcGFyYW0ge251bWJlcn0gW3N0YXJ0PWZ1bmMubGVuZ3RoLTFdIFRoZSBzdGFydCBwb3NpdGlvbiBvZiB0aGUgcmVzdCBwYXJhbWV0ZXIuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLgogKi9mdW5jdGlvbiBiYXNlUmVzdChmdW5jLHN0YXJ0KXtyZXR1cm4gc2V0VG9TdHJpbmcob3ZlclJlc3QoZnVuYyxzdGFydCxpZGVudGl0eSksZnVuYysiIil9bW9kdWxlLmV4cG9ydHM9YmFzZVJlc3R9LHsiLi9fb3ZlclJlc3QiOjI2NywiLi9fc2V0VG9TdHJpbmciOjI3MywiLi9pZGVudGl0eSI6MzAxfV0sMTgyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYXNzaWduVmFsdWU9cmVxdWlyZSgiLi9fYXNzaWduVmFsdWUiKSxjYXN0UGF0aD1yZXF1aXJlKCIuL19jYXN0UGF0aCIpLGlzSW5kZXg9cmVxdWlyZSgiLi9faXNJbmRleCIpLGlzT2JqZWN0PXJlcXVpcmUoIi4vaXNPYmplY3QiKSx0b0tleT1yZXF1aXJlKCIuL190b0tleSIpOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uc2V0YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIG1vZGlmeS4KICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIHNldC4KICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBwYXRoIGNyZWF0aW9uLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLgogKi9mdW5jdGlvbiBiYXNlU2V0KG9iamVjdCxwYXRoLHZhbHVlLGN1c3RvbWl6ZXIpe2lmKCFpc09iamVjdChvYmplY3QpKXtyZXR1cm4gb2JqZWN0fXBhdGg9Y2FzdFBhdGgocGF0aCxvYmplY3QpO3ZhciBpbmRleD0tMSxsZW5ndGg9cGF0aC5sZW5ndGgsbGFzdEluZGV4PWxlbmd0aC0xLG5lc3RlZD1vYmplY3Q7d2hpbGUobmVzdGVkIT1udWxsJiYrK2luZGV4PGxlbmd0aCl7dmFyIGtleT10b0tleShwYXRoW2luZGV4XSksbmV3VmFsdWU9dmFsdWU7aWYoaW5kZXghPWxhc3RJbmRleCl7dmFyIG9ialZhbHVlPW5lc3RlZFtrZXldO25ld1ZhbHVlPWN1c3RvbWl6ZXI/Y3VzdG9taXplcihvYmpWYWx1ZSxrZXksbmVzdGVkKTp1bmRlZmluZWQ7aWYobmV3VmFsdWU9PT11bmRlZmluZWQpe25ld1ZhbHVlPWlzT2JqZWN0KG9ialZhbHVlKT9vYmpWYWx1ZTppc0luZGV4KHBhdGhbaW5kZXgrMV0pP1tdOnt9fX1hc3NpZ25WYWx1ZShuZXN0ZWQsa2V5LG5ld1ZhbHVlKTtuZXN0ZWQ9bmVzdGVkW2tleV19cmV0dXJuIG9iamVjdH1tb2R1bGUuZXhwb3J0cz1iYXNlU2V0fSx7Ii4vX2Fzc2lnblZhbHVlIjoxMzUsIi4vX2Nhc3RQYXRoIjoxOTMsIi4vX2lzSW5kZXgiOjI0MSwiLi9fdG9LZXkiOjI4MywiLi9pc09iamVjdCI6MzExfV0sMTgzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgY29uc3RhbnQ9cmVxdWlyZSgiLi9jb25zdGFudCIpLGRlZmluZVByb3BlcnR5PXJlcXVpcmUoIi4vX2RlZmluZVByb3BlcnR5IiksaWRlbnRpdHk9cmVxdWlyZSgiLi9pZGVudGl0eSIpOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYHNldFRvU3RyaW5nYCB3aXRob3V0IHN1cHBvcnQgZm9yIGhvdCBsb29wIHNob3J0aW5nLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBtb2RpZnkuCiAqIEBwYXJhbSB7RnVuY3Rpb259IHN0cmluZyBUaGUgYHRvU3RyaW5nYCByZXN1bHQuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyBgZnVuY2AuCiAqL3ZhciBiYXNlU2V0VG9TdHJpbmc9IWRlZmluZVByb3BlcnR5P2lkZW50aXR5OmZ1bmN0aW9uKGZ1bmMsc3RyaW5nKXtyZXR1cm4gZGVmaW5lUHJvcGVydHkoZnVuYywidG9TdHJpbmciLHtjb25maWd1cmFibGU6dHJ1ZSxlbnVtZXJhYmxlOmZhbHNlLHZhbHVlOmNvbnN0YW50KHN0cmluZyksd3JpdGFibGU6dHJ1ZX0pfTttb2R1bGUuZXhwb3J0cz1iYXNlU2V0VG9TdHJpbmd9LHsiLi9fZGVmaW5lUHJvcGVydHkiOjIxMywiLi9jb25zdGFudCI6Mjg4LCIuL2lkZW50aXR5IjozMDF9XSwxODQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uc29ydEJ5YCB3aGljaCB1c2VzIGBjb21wYXJlcmAgdG8gZGVmaW5lIHRoZQogKiBzb3J0IG9yZGVyIG9mIGBhcnJheWAgYW5kIHJlcGxhY2VzIGNyaXRlcmlhIG9iamVjdHMgd2l0aCB0aGVpciBjb3JyZXNwb25kaW5nCiAqIHZhbHVlcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHNvcnQuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGNvbXBhcmVyIFRoZSBmdW5jdGlvbiB0byBkZWZpbmUgc29ydCBvcmRlci4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuCiAqLwpmdW5jdGlvbiBiYXNlU29ydEJ5KGFycmF5LGNvbXBhcmVyKXt2YXIgbGVuZ3RoPWFycmF5Lmxlbmd0aDthcnJheS5zb3J0KGNvbXBhcmVyKTt3aGlsZShsZW5ndGgtLSl7YXJyYXlbbGVuZ3RoXT1hcnJheVtsZW5ndGhdLnZhbHVlfXJldHVybiBhcnJheX1tb2R1bGUuZXhwb3J0cz1iYXNlU29ydEJ5fSx7fV0sMTg1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRpbWVzYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMKICogb3IgbWF4IGFycmF5IGxlbmd0aCBjaGVja3MuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgdGltZXMgdG8gaW52b2tlIGBpdGVyYXRlZWAuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcmVzdWx0cy4KICovCmZ1bmN0aW9uIGJhc2VUaW1lcyhuLGl0ZXJhdGVlKXt2YXIgaW5kZXg9LTEscmVzdWx0PUFycmF5KG4pO3doaWxlKCsraW5kZXg8bil7cmVzdWx0W2luZGV4XT1pdGVyYXRlZShpbmRleCl9cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlVGltZXN9LHt9XSwxODY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBTeW1ib2w9cmVxdWlyZSgiLi9fU3ltYm9sIiksYXJyYXlNYXA9cmVxdWlyZSgiLi9fYXJyYXlNYXAiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpLGlzU3ltYm9sPXJlcXVpcmUoIi4vaXNTeW1ib2wiKTsKLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovdmFyIElORklOSVRZPTEvMDsKLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovdmFyIHN5bWJvbFByb3RvPVN5bWJvbD9TeW1ib2wucHJvdG90eXBlOnVuZGVmaW5lZCxzeW1ib2xUb1N0cmluZz1zeW1ib2xQcm90bz9zeW1ib2xQcm90by50b1N0cmluZzp1bmRlZmluZWQ7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50b1N0cmluZ2Agd2hpY2ggZG9lc24ndCBjb252ZXJ0IG51bGxpc2gKICogdmFsdWVzIHRvIGVtcHR5IHN0cmluZ3MuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb2Nlc3MuCiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHN0cmluZy4KICovZnVuY3Rpb24gYmFzZVRvU3RyaW5nKHZhbHVlKXsKLy8gRXhpdCBlYXJseSBmb3Igc3RyaW5ncyB0byBhdm9pZCBhIHBlcmZvcm1hbmNlIGhpdCBpbiBzb21lIGVudmlyb25tZW50cy4KaWYodHlwZW9mIHZhbHVlPT0ic3RyaW5nIil7cmV0dXJuIHZhbHVlfWlmKGlzQXJyYXkodmFsdWUpKXsKLy8gUmVjdXJzaXZlbHkgY29udmVydCB2YWx1ZXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS4KcmV0dXJuIGFycmF5TWFwKHZhbHVlLGJhc2VUb1N0cmluZykrIiJ9aWYoaXNTeW1ib2wodmFsdWUpKXtyZXR1cm4gc3ltYm9sVG9TdHJpbmc/c3ltYm9sVG9TdHJpbmcuY2FsbCh2YWx1ZSk6IiJ9dmFyIHJlc3VsdD12YWx1ZSsiIjtyZXR1cm4gcmVzdWx0PT0iMCImJjEvdmFsdWU9PS1JTkZJTklUWT8iLTAiOnJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlVG9TdHJpbmd9LHsiLi9fU3ltYm9sIjoxMjAsIi4vX2FycmF5TWFwIjoxMjksIi4vaXNBcnJheSI6MzAzLCIuL2lzU3ltYm9sIjozMTZ9XSwxODc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udW5hcnlgIHdpdGhvdXQgc3VwcG9ydCBmb3Igc3RvcmluZyBtZXRhZGF0YS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2FwIGFyZ3VtZW50cyBmb3IuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGNhcHBlZCBmdW5jdGlvbi4KICovCmZ1bmN0aW9uIGJhc2VVbmFyeShmdW5jKXtyZXR1cm4gZnVuY3Rpb24odmFsdWUpe3JldHVybiBmdW5jKHZhbHVlKX19bW9kdWxlLmV4cG9ydHM9YmFzZVVuYXJ5fSx7fV0sMTg4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgU2V0Q2FjaGU9cmVxdWlyZSgiLi9fU2V0Q2FjaGUiKSxhcnJheUluY2x1ZGVzPXJlcXVpcmUoIi4vX2FycmF5SW5jbHVkZXMiKSxhcnJheUluY2x1ZGVzV2l0aD1yZXF1aXJlKCIuL19hcnJheUluY2x1ZGVzV2l0aCIpLGNhY2hlSGFzPXJlcXVpcmUoIi4vX2NhY2hlSGFzIiksY3JlYXRlU2V0PXJlcXVpcmUoIi4vX2NyZWF0ZVNldCIpLHNldFRvQXJyYXk9cmVxdWlyZSgiLi9fc2V0VG9BcnJheSIpOwovKiogVXNlZCBhcyB0aGUgc2l6ZSB0byBlbmFibGUgbGFyZ2UgYXJyYXkgb3B0aW1pemF0aW9ucy4gKi92YXIgTEFSR0VfQVJSQVlfU0laRT0yMDA7Ci8qKgogKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy51bmlxQnlgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZV0gVGhlIGl0ZXJhdGVlIGludm9rZWQgcGVyIGVsZW1lbnQuCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjb21wYXJhdG9yXSBUaGUgY29tcGFyYXRvciBpbnZva2VkIHBlciBlbGVtZW50LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBkdXBsaWNhdGUgZnJlZSBhcnJheS4KICovZnVuY3Rpb24gYmFzZVVuaXEoYXJyYXksaXRlcmF0ZWUsY29tcGFyYXRvcil7dmFyIGluZGV4PS0xLGluY2x1ZGVzPWFycmF5SW5jbHVkZXMsbGVuZ3RoPWFycmF5Lmxlbmd0aCxpc0NvbW1vbj10cnVlLHJlc3VsdD1bXSxzZWVuPXJlc3VsdDtpZihjb21wYXJhdG9yKXtpc0NvbW1vbj1mYWxzZTtpbmNsdWRlcz1hcnJheUluY2x1ZGVzV2l0aH1lbHNlIGlmKGxlbmd0aD49TEFSR0VfQVJSQVlfU0laRSl7dmFyIHNldD1pdGVyYXRlZT9udWxsOmNyZWF0ZVNldChhcnJheSk7aWYoc2V0KXtyZXR1cm4gc2V0VG9BcnJheShzZXQpfWlzQ29tbW9uPWZhbHNlO2luY2x1ZGVzPWNhY2hlSGFzO3NlZW49bmV3IFNldENhY2hlfWVsc2V7c2Vlbj1pdGVyYXRlZT9bXTpyZXN1bHR9b3V0ZXI6d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciB2YWx1ZT1hcnJheVtpbmRleF0sY29tcHV0ZWQ9aXRlcmF0ZWU/aXRlcmF0ZWUodmFsdWUpOnZhbHVlO3ZhbHVlPWNvbXBhcmF0b3J8fHZhbHVlIT09MD92YWx1ZTowO2lmKGlzQ29tbW9uJiZjb21wdXRlZD09PWNvbXB1dGVkKXt2YXIgc2VlbkluZGV4PXNlZW4ubGVuZ3RoO3doaWxlKHNlZW5JbmRleC0tKXtpZihzZWVuW3NlZW5JbmRleF09PT1jb21wdXRlZCl7Y29udGludWUgb3V0ZXJ9fWlmKGl0ZXJhdGVlKXtzZWVuLnB1c2goY29tcHV0ZWQpfXJlc3VsdC5wdXNoKHZhbHVlKX1lbHNlIGlmKCFpbmNsdWRlcyhzZWVuLGNvbXB1dGVkLGNvbXBhcmF0b3IpKXtpZihzZWVuIT09cmVzdWx0KXtzZWVuLnB1c2goY29tcHV0ZWQpfXJlc3VsdC5wdXNoKHZhbHVlKX19cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1iYXNlVW5pcX0seyIuL19TZXRDYWNoZSI6MTE4LCIuL19hcnJheUluY2x1ZGVzIjoxMjYsIi4vX2FycmF5SW5jbHVkZXNXaXRoIjoxMjcsIi4vX2NhY2hlSGFzIjoxOTEsIi4vX2NyZWF0ZVNldCI6MjEyLCIuL19zZXRUb0FycmF5IjoyNzJ9XSwxODk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheU1hcD1yZXF1aXJlKCIuL19hcnJheU1hcCIpOwovKioKICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udmFsdWVzYCBhbmQgYF8udmFsdWVzSW5gIHdoaWNoIGNyZWF0ZXMgYW4KICogYXJyYXkgb2YgYG9iamVjdGAgcHJvcGVydHkgdmFsdWVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHByb3BlcnR5IG5hbWVzCiAqIG9mIGBwcm9wc2AuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS4KICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IG5hbWVzIHRvIGdldCB2YWx1ZXMgZm9yLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSB2YWx1ZXMuCiAqL2Z1bmN0aW9uIGJhc2VWYWx1ZXMob2JqZWN0LHByb3BzKXtyZXR1cm4gYXJyYXlNYXAocHJvcHMsZnVuY3Rpb24oa2V5KXtyZXR1cm4gb2JqZWN0W2tleV19KX1tb2R1bGUuZXhwb3J0cz1iYXNlVmFsdWVzfSx7Ii4vX2FycmF5TWFwIjoxMjl9XSwxOTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhpcyBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnppcE9iamVjdGAgd2hpY2ggYXNzaWducyB2YWx1ZXMgdXNpbmcgYGFzc2lnbkZ1bmNgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSBwcm9wcyBUaGUgcHJvcGVydHkgaWRlbnRpZmllcnMuCiAqIEBwYXJhbSB7QXJyYXl9IHZhbHVlcyBUaGUgcHJvcGVydHkgdmFsdWVzLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBhc3NpZ25GdW5jIFRoZSBmdW5jdGlvbiB0byBhc3NpZ24gdmFsdWVzLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LgogKi8KZnVuY3Rpb24gYmFzZVppcE9iamVjdChwcm9wcyx2YWx1ZXMsYXNzaWduRnVuYyl7dmFyIGluZGV4PS0xLGxlbmd0aD1wcm9wcy5sZW5ndGgsdmFsc0xlbmd0aD12YWx1ZXMubGVuZ3RoLHJlc3VsdD17fTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7dmFyIHZhbHVlPWluZGV4PHZhbHNMZW5ndGg/dmFsdWVzW2luZGV4XTp1bmRlZmluZWQ7YXNzaWduRnVuYyhyZXN1bHQscHJvcHNbaW5kZXhdLHZhbHVlKX1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWJhc2VaaXBPYmplY3R9LHt9XSwxOTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ2hlY2tzIGlmIGEgYGNhY2hlYCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gY2FjaGUgVGhlIGNhY2hlIHRvIHF1ZXJ5LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLgogKi8KZnVuY3Rpb24gY2FjaGVIYXMoY2FjaGUsa2V5KXtyZXR1cm4gY2FjaGUuaGFzKGtleSl9bW9kdWxlLmV4cG9ydHM9Y2FjaGVIYXN9LHt9XSwxOTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpZGVudGl0eT1yZXF1aXJlKCIuL2lkZW50aXR5Iik7Ci8qKgogKiBDYXN0cyBgdmFsdWVgIHRvIGBpZGVudGl0eWAgaWYgaXQncyBub3QgYSBmdW5jdGlvbi4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC4KICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIGNhc3QgZnVuY3Rpb24uCiAqL2Z1bmN0aW9uIGNhc3RGdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHR5cGVvZiB2YWx1ZT09ImZ1bmN0aW9uIj92YWx1ZTppZGVudGl0eX1tb2R1bGUuZXhwb3J0cz1jYXN0RnVuY3Rpb259LHsiLi9pZGVudGl0eSI6MzAxfV0sMTkzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgaXNBcnJheT1yZXF1aXJlKCIuL2lzQXJyYXkiKSxpc0tleT1yZXF1aXJlKCIuL19pc0tleSIpLHN0cmluZ1RvUGF0aD1yZXF1aXJlKCIuL19zdHJpbmdUb1BhdGgiKSx0b1N0cmluZz1yZXF1aXJlKCIuL3RvU3RyaW5nIik7Ci8qKgogKiBDYXN0cyBgdmFsdWVgIHRvIGEgcGF0aCBhcnJheSBpZiBpdCdzIG5vdCBvbmUuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGluc3BlY3QuCiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5IGtleXMgb24uCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgY2FzdCBwcm9wZXJ0eSBwYXRoIGFycmF5LgogKi9mdW5jdGlvbiBjYXN0UGF0aCh2YWx1ZSxvYmplY3Qpe2lmKGlzQXJyYXkodmFsdWUpKXtyZXR1cm4gdmFsdWV9cmV0dXJuIGlzS2V5KHZhbHVlLG9iamVjdCk/W3ZhbHVlXTpzdHJpbmdUb1BhdGgodG9TdHJpbmcodmFsdWUpKX1tb2R1bGUuZXhwb3J0cz1jYXN0UGF0aH0seyIuL19pc0tleSI6MjQzLCIuL19zdHJpbmdUb1BhdGgiOjI4MiwiLi9pc0FycmF5IjozMDMsIi4vdG9TdHJpbmciOjM0M31dLDE5NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIFVpbnQ4QXJyYXk9cmVxdWlyZSgiLi9fVWludDhBcnJheSIpOwovKioKICogQ3JlYXRlcyBhIGNsb25lIG9mIGBhcnJheUJ1ZmZlcmAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGFycmF5QnVmZmVyIFRoZSBhcnJheSBidWZmZXIgdG8gY2xvbmUuCiAqIEByZXR1cm5zIHtBcnJheUJ1ZmZlcn0gUmV0dXJucyB0aGUgY2xvbmVkIGFycmF5IGJ1ZmZlci4KICovZnVuY3Rpb24gY2xvbmVBcnJheUJ1ZmZlcihhcnJheUJ1ZmZlcil7dmFyIHJlc3VsdD1uZXcgYXJyYXlCdWZmZXIuY29uc3RydWN0b3IoYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aCk7bmV3IFVpbnQ4QXJyYXkocmVzdWx0KS5zZXQobmV3IFVpbnQ4QXJyYXkoYXJyYXlCdWZmZXIpKTtyZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWNsb25lQXJyYXlCdWZmZXJ9LHsiLi9fVWludDhBcnJheSI6MTIxfV0sMTk1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgcm9vdD1yZXF1aXJlKCIuL19yb290Iik7Ci8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZXhwb3J0c2AuICovdmFyIGZyZWVFeHBvcnRzPXR5cGVvZiBleHBvcnRzPT0ib2JqZWN0IiYmZXhwb3J0cyYmIWV4cG9ydHMubm9kZVR5cGUmJmV4cG9ydHM7Ci8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgbW9kdWxlYC4gKi92YXIgZnJlZU1vZHVsZT1mcmVlRXhwb3J0cyYmdHlwZW9mIG1vZHVsZT09Im9iamVjdCImJm1vZHVsZSYmIW1vZHVsZS5ub2RlVHlwZSYmbW9kdWxlOwovKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL3ZhciBtb2R1bGVFeHBvcnRzPWZyZWVNb2R1bGUmJmZyZWVNb2R1bGUuZXhwb3J0cz09PWZyZWVFeHBvcnRzOwovKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi92YXIgQnVmZmVyPW1vZHVsZUV4cG9ydHM/cm9vdC5CdWZmZXI6dW5kZWZpbmVkLGFsbG9jVW5zYWZlPUJ1ZmZlcj9CdWZmZXIuYWxsb2NVbnNhZmU6dW5kZWZpbmVkOwovKioKICogQ3JlYXRlcyBhIGNsb25lIG9mICBgYnVmZmVyYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZmZlciBUaGUgYnVmZmVyIHRvIGNsb25lLgogKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLgogKiBAcmV0dXJucyB7QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYnVmZmVyLgogKi9mdW5jdGlvbiBjbG9uZUJ1ZmZlcihidWZmZXIsaXNEZWVwKXtpZihpc0RlZXApe3JldHVybiBidWZmZXIuc2xpY2UoKX12YXIgbGVuZ3RoPWJ1ZmZlci5sZW5ndGgscmVzdWx0PWFsbG9jVW5zYWZlP2FsbG9jVW5zYWZlKGxlbmd0aCk6bmV3IGJ1ZmZlci5jb25zdHJ1Y3RvcihsZW5ndGgpO2J1ZmZlci5jb3B5KHJlc3VsdCk7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1jbG9uZUJ1ZmZlcn0seyIuL19yb290IjoyNjh9XSwxOTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBjbG9uZUFycmF5QnVmZmVyPXJlcXVpcmUoIi4vX2Nsb25lQXJyYXlCdWZmZXIiKTsKLyoqCiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgZGF0YVZpZXdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gZGF0YVZpZXcgVGhlIGRhdGEgdmlldyB0byBjbG9uZS4KICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2xvbmVkIGRhdGEgdmlldy4KICovZnVuY3Rpb24gY2xvbmVEYXRhVmlldyhkYXRhVmlldyxpc0RlZXApe3ZhciBidWZmZXI9aXNEZWVwP2Nsb25lQXJyYXlCdWZmZXIoZGF0YVZpZXcuYnVmZmVyKTpkYXRhVmlldy5idWZmZXI7cmV0dXJuIG5ldyBkYXRhVmlldy5jb25zdHJ1Y3RvcihidWZmZXIsZGF0YVZpZXcuYnl0ZU9mZnNldCxkYXRhVmlldy5ieXRlTGVuZ3RoKX1tb2R1bGUuZXhwb3J0cz1jbG9uZURhdGFWaWV3fSx7Ii4vX2Nsb25lQXJyYXlCdWZmZXIiOjE5NH1dLDE5NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgIGZsYWdzIGZyb20gdGhlaXIgY29lcmNlZCBzdHJpbmcgdmFsdWVzLiAqLwp2YXIgcmVGbGFncz0vXHcqJC87Ci8qKgogKiBDcmVhdGVzIGEgY2xvbmUgb2YgYHJlZ2V4cGAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSByZWdleHAgVGhlIHJlZ2V4cCB0byBjbG9uZS4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2xvbmVkIHJlZ2V4cC4KICovZnVuY3Rpb24gY2xvbmVSZWdFeHAocmVnZXhwKXt2YXIgcmVzdWx0PW5ldyByZWdleHAuY29uc3RydWN0b3IocmVnZXhwLnNvdXJjZSxyZUZsYWdzLmV4ZWMocmVnZXhwKSk7cmVzdWx0Lmxhc3RJbmRleD1yZWdleHAubGFzdEluZGV4O3JldHVybiByZXN1bHR9bW9kdWxlLmV4cG9ydHM9Y2xvbmVSZWdFeHB9LHt9XSwxOTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBTeW1ib2w9cmVxdWlyZSgiLi9fU3ltYm9sIik7Ci8qKiBVc2VkIHRvIGNvbnZlcnQgc3ltYm9scyB0byBwcmltaXRpdmVzIGFuZCBzdHJpbmdzLiAqL3ZhciBzeW1ib2xQcm90bz1TeW1ib2w/U3ltYm9sLnByb3RvdHlwZTp1bmRlZmluZWQsc3ltYm9sVmFsdWVPZj1zeW1ib2xQcm90bz9zeW1ib2xQcm90by52YWx1ZU9mOnVuZGVmaW5lZDsKLyoqCiAqIENyZWF0ZXMgYSBjbG9uZSBvZiB0aGUgYHN5bWJvbGAgb2JqZWN0LgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gc3ltYm9sIFRoZSBzeW1ib2wgb2JqZWN0IHRvIGNsb25lLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgc3ltYm9sIG9iamVjdC4KICovZnVuY3Rpb24gY2xvbmVTeW1ib2woc3ltYm9sKXtyZXR1cm4gc3ltYm9sVmFsdWVPZj9PYmplY3Qoc3ltYm9sVmFsdWVPZi5jYWxsKHN5bWJvbCkpOnt9fW1vZHVsZS5leHBvcnRzPWNsb25lU3ltYm9sfSx7Ii4vX1N5bWJvbCI6MTIwfV0sMTk5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgY2xvbmVBcnJheUJ1ZmZlcj1yZXF1aXJlKCIuL19jbG9uZUFycmF5QnVmZmVyIik7Ci8qKgogKiBDcmVhdGVzIGEgY2xvbmUgb2YgYHR5cGVkQXJyYXlgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gdHlwZWRBcnJheSBUaGUgdHlwZWQgYXJyYXkgdG8gY2xvbmUuCiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNsb25lZCB0eXBlZCBhcnJheS4KICovZnVuY3Rpb24gY2xvbmVUeXBlZEFycmF5KHR5cGVkQXJyYXksaXNEZWVwKXt2YXIgYnVmZmVyPWlzRGVlcD9jbG9uZUFycmF5QnVmZmVyKHR5cGVkQXJyYXkuYnVmZmVyKTp0eXBlZEFycmF5LmJ1ZmZlcjtyZXR1cm4gbmV3IHR5cGVkQXJyYXkuY29uc3RydWN0b3IoYnVmZmVyLHR5cGVkQXJyYXkuYnl0ZU9mZnNldCx0eXBlZEFycmF5Lmxlbmd0aCl9bW9kdWxlLmV4cG9ydHM9Y2xvbmVUeXBlZEFycmF5fSx7Ii4vX2Nsb25lQXJyYXlCdWZmZXIiOjE5NH1dLDIwMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGlzU3ltYm9sPXJlcXVpcmUoIi4vaXNTeW1ib2wiKTsKLyoqCiAqIENvbXBhcmVzIHZhbHVlcyB0byBzb3J0IHRoZW0gaW4gYXNjZW5kaW5nIG9yZGVyLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLgogKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLgogKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYHZhbHVlYC4KICovZnVuY3Rpb24gY29tcGFyZUFzY2VuZGluZyh2YWx1ZSxvdGhlcil7aWYodmFsdWUhPT1vdGhlcil7dmFyIHZhbElzRGVmaW5lZD12YWx1ZSE9PXVuZGVmaW5lZCx2YWxJc051bGw9dmFsdWU9PT1udWxsLHZhbElzUmVmbGV4aXZlPXZhbHVlPT09dmFsdWUsdmFsSXNTeW1ib2w9aXNTeW1ib2wodmFsdWUpO3ZhciBvdGhJc0RlZmluZWQ9b3RoZXIhPT11bmRlZmluZWQsb3RoSXNOdWxsPW90aGVyPT09bnVsbCxvdGhJc1JlZmxleGl2ZT1vdGhlcj09PW90aGVyLG90aElzU3ltYm9sPWlzU3ltYm9sKG90aGVyKTtpZighb3RoSXNOdWxsJiYhb3RoSXNTeW1ib2wmJiF2YWxJc1N5bWJvbCYmdmFsdWU+b3RoZXJ8fHZhbElzU3ltYm9sJiZvdGhJc0RlZmluZWQmJm90aElzUmVmbGV4aXZlJiYhb3RoSXNOdWxsJiYhb3RoSXNTeW1ib2x8fHZhbElzTnVsbCYmb3RoSXNEZWZpbmVkJiZvdGhJc1JlZmxleGl2ZXx8IXZhbElzRGVmaW5lZCYmb3RoSXNSZWZsZXhpdmV8fCF2YWxJc1JlZmxleGl2ZSl7cmV0dXJuIDF9aWYoIXZhbElzTnVsbCYmIXZhbElzU3ltYm9sJiYhb3RoSXNTeW1ib2wmJnZhbHVlPG90aGVyfHxvdGhJc1N5bWJvbCYmdmFsSXNEZWZpbmVkJiZ2YWxJc1JlZmxleGl2ZSYmIXZhbElzTnVsbCYmIXZhbElzU3ltYm9sfHxvdGhJc051bGwmJnZhbElzRGVmaW5lZCYmdmFsSXNSZWZsZXhpdmV8fCFvdGhJc0RlZmluZWQmJnZhbElzUmVmbGV4aXZlfHwhb3RoSXNSZWZsZXhpdmUpe3JldHVybi0xfX1yZXR1cm4gMH1tb2R1bGUuZXhwb3J0cz1jb21wYXJlQXNjZW5kaW5nfSx7Ii4vaXNTeW1ib2wiOjMxNn1dLDIwMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGNvbXBhcmVBc2NlbmRpbmc9cmVxdWlyZSgiLi9fY29tcGFyZUFzY2VuZGluZyIpOwovKioKICogVXNlZCBieSBgXy5vcmRlckJ5YCB0byBjb21wYXJlIG11bHRpcGxlIHByb3BlcnRpZXMgb2YgYSB2YWx1ZSB0byBhbm90aGVyCiAqIGFuZCBzdGFibGUgc29ydCB0aGVtLgogKgogKiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlcyBhcmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlci4gT3RoZXJ3aXNlLAogKiBzcGVjaWZ5IGFuIG9yZGVyIG9mICJkZXNjIiBmb3IgZGVzY2VuZGluZyBvciAiYXNjIiBmb3IgYXNjZW5kaW5nIHNvcnQgb3JkZXIKICogb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLgogKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLgogKiBAcGFyYW0ge2Jvb2xlYW5bXXxzdHJpbmdbXX0gb3JkZXJzIFRoZSBvcmRlciB0byBzb3J0IGJ5IGZvciBlYWNoIHByb3BlcnR5LgogKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYG9iamVjdGAuCiAqL2Z1bmN0aW9uIGNvbXBhcmVNdWx0aXBsZShvYmplY3Qsb3RoZXIsb3JkZXJzKXt2YXIgaW5kZXg9LTEsb2JqQ3JpdGVyaWE9b2JqZWN0LmNyaXRlcmlhLG90aENyaXRlcmlhPW90aGVyLmNyaXRlcmlhLGxlbmd0aD1vYmpDcml0ZXJpYS5sZW5ndGgsb3JkZXJzTGVuZ3RoPW9yZGVycy5sZW5ndGg7d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciByZXN1bHQ9Y29tcGFyZUFzY2VuZGluZyhvYmpDcml0ZXJpYVtpbmRleF0sb3RoQ3JpdGVyaWFbaW5kZXhdKTtpZihyZXN1bHQpe2lmKGluZGV4Pj1vcmRlcnNMZW5ndGgpe3JldHVybiByZXN1bHR9dmFyIG9yZGVyPW9yZGVyc1tpbmRleF07cmV0dXJuIHJlc3VsdCoob3JkZXI9PSJkZXNjIj8tMToxKX19Ci8vIEZpeGVzIGFuIGBBcnJheSNzb3J0YCBidWcgaW4gdGhlIEpTIGVuZ2luZSBlbWJlZGRlZCBpbiBBZG9iZSBhcHBsaWNhdGlvbnMKLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcHJvdmlkZSB0aGUgc2FtZSB2YWx1ZSBmb3IKLy8gYG9iamVjdGAgYW5kIGBvdGhlcmAuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUvcHVsbC8xMjQ3Ci8vIGZvciBtb3JlIGRldGFpbHMuCi8vCi8vIFRoaXMgYWxzbyBlbnN1cmVzIGEgc3RhYmxlIHNvcnQgaW4gVjggYW5kIG90aGVyIGVuZ2luZXMuCi8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD05MCBmb3IgbW9yZSBkZXRhaWxzLgpyZXR1cm4gb2JqZWN0LmluZGV4LW90aGVyLmluZGV4fW1vZHVsZS5leHBvcnRzPWNvbXBhcmVNdWx0aXBsZX0seyIuL19jb21wYXJlQXNjZW5kaW5nIjoyMDB9XSwyMDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ29waWVzIHRoZSB2YWx1ZXMgb2YgYHNvdXJjZWAgdG8gYGFycmF5YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheX0gc291cmNlIFRoZSBhcnJheSB0byBjb3B5IHZhbHVlcyBmcm9tLgogKiBAcGFyYW0ge0FycmF5fSBbYXJyYXk9W11dIFRoZSBhcnJheSB0byBjb3B5IHZhbHVlcyB0by4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuCiAqLwpmdW5jdGlvbiBjb3B5QXJyYXkoc291cmNlLGFycmF5KXt2YXIgaW5kZXg9LTEsbGVuZ3RoPXNvdXJjZS5sZW5ndGg7YXJyYXl8fChhcnJheT1BcnJheShsZW5ndGgpKTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7YXJyYXlbaW5kZXhdPXNvdXJjZVtpbmRleF19cmV0dXJuIGFycmF5fW1vZHVsZS5leHBvcnRzPWNvcHlBcnJheX0se31dLDIwMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFzc2lnblZhbHVlPXJlcXVpcmUoIi4vX2Fzc2lnblZhbHVlIiksYmFzZUFzc2lnblZhbHVlPXJlcXVpcmUoIi4vX2Jhc2VBc3NpZ25WYWx1ZSIpOwovKioKICogQ29waWVzIHByb3BlcnRpZXMgb2YgYHNvdXJjZWAgdG8gYG9iamVjdGAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgZnJvbS4KICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IGlkZW50aWZpZXJzIHRvIGNvcHkuCiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0PXt9XSBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyB0by4KICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29waWVkIHZhbHVlcy4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC4KICovZnVuY3Rpb24gY29weU9iamVjdChzb3VyY2UscHJvcHMsb2JqZWN0LGN1c3RvbWl6ZXIpe3ZhciBpc05ldz0hb2JqZWN0O29iamVjdHx8KG9iamVjdD17fSk7dmFyIGluZGV4PS0xLGxlbmd0aD1wcm9wcy5sZW5ndGg7d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciBrZXk9cHJvcHNbaW5kZXhdO3ZhciBuZXdWYWx1ZT1jdXN0b21pemVyP2N1c3RvbWl6ZXIob2JqZWN0W2tleV0sc291cmNlW2tleV0sa2V5LG9iamVjdCxzb3VyY2UpOnVuZGVmaW5lZDtpZihuZXdWYWx1ZT09PXVuZGVmaW5lZCl7bmV3VmFsdWU9c291cmNlW2tleV19aWYoaXNOZXcpe2Jhc2VBc3NpZ25WYWx1ZShvYmplY3Qsa2V5LG5ld1ZhbHVlKX1lbHNle2Fzc2lnblZhbHVlKG9iamVjdCxrZXksbmV3VmFsdWUpfX1yZXR1cm4gb2JqZWN0fW1vZHVsZS5leHBvcnRzPWNvcHlPYmplY3R9LHsiLi9fYXNzaWduVmFsdWUiOjEzNSwiLi9fYmFzZUFzc2lnblZhbHVlIjoxMzl9XSwyMDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBjb3B5T2JqZWN0PXJlcXVpcmUoIi4vX2NvcHlPYmplY3QiKSxnZXRTeW1ib2xzPXJlcXVpcmUoIi4vX2dldFN5bWJvbHMiKTsKLyoqCiAqIENvcGllcyBvd24gc3ltYm9scyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyBmcm9tLgogKiBAcGFyYW0ge09iamVjdH0gW29iamVjdD17fV0gVGhlIG9iamVjdCB0byBjb3B5IHN5bWJvbHMgdG8uCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuCiAqL2Z1bmN0aW9uIGNvcHlTeW1ib2xzKHNvdXJjZSxvYmplY3Qpe3JldHVybiBjb3B5T2JqZWN0KHNvdXJjZSxnZXRTeW1ib2xzKHNvdXJjZSksb2JqZWN0KX1tb2R1bGUuZXhwb3J0cz1jb3B5U3ltYm9sc30seyIuL19jb3B5T2JqZWN0IjoyMDMsIi4vX2dldFN5bWJvbHMiOjIyNn1dLDIwNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGNvcHlPYmplY3Q9cmVxdWlyZSgiLi9fY29weU9iamVjdCIpLGdldFN5bWJvbHNJbj1yZXF1aXJlKCIuL19nZXRTeW1ib2xzSW4iKTsKLyoqCiAqIENvcGllcyBvd24gYW5kIGluaGVyaXRlZCBzeW1ib2xzIG9mIGBzb3VyY2VgIHRvIGBvYmplY3RgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3QgdG8gY29weSBzeW1ib2xzIGZyb20uCiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0PXt9XSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyB0by4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC4KICovZnVuY3Rpb24gY29weVN5bWJvbHNJbihzb3VyY2Usb2JqZWN0KXtyZXR1cm4gY29weU9iamVjdChzb3VyY2UsZ2V0U3ltYm9sc0luKHNvdXJjZSksb2JqZWN0KX1tb2R1bGUuZXhwb3J0cz1jb3B5U3ltYm9sc0lufSx7Ii4vX2NvcHlPYmplY3QiOjIwMywiLi9fZ2V0U3ltYm9sc0luIjoyMjd9XSwyMDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciByb290PXJlcXVpcmUoIi4vX3Jvb3QiKTsKLyoqIFVzZWQgdG8gZGV0ZWN0IG92ZXJyZWFjaGluZyBjb3JlLWpzIHNoaW1zLiAqL3ZhciBjb3JlSnNEYXRhPXJvb3RbIl9fY29yZS1qc19zaGFyZWRfXyJdO21vZHVsZS5leHBvcnRzPWNvcmVKc0RhdGF9LHsiLi9fcm9vdCI6MjY4fV0sMjA3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVJlc3Q9cmVxdWlyZSgiLi9fYmFzZVJlc3QiKSxpc0l0ZXJhdGVlQ2FsbD1yZXF1aXJlKCIuL19pc0l0ZXJhdGVlQ2FsbCIpOwovKioKICogQ3JlYXRlcyBhIGZ1bmN0aW9uIGxpa2UgYF8uYXNzaWduYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gYXNzaWduZXIgVGhlIGZ1bmN0aW9uIHRvIGFzc2lnbiB2YWx1ZXMuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFzc2lnbmVyIGZ1bmN0aW9uLgogKi9mdW5jdGlvbiBjcmVhdGVBc3NpZ25lcihhc3NpZ25lcil7cmV0dXJuIGJhc2VSZXN0KGZ1bmN0aW9uKG9iamVjdCxzb3VyY2VzKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPXNvdXJjZXMubGVuZ3RoLGN1c3RvbWl6ZXI9bGVuZ3RoPjE/c291cmNlc1tsZW5ndGgtMV06dW5kZWZpbmVkLGd1YXJkPWxlbmd0aD4yP3NvdXJjZXNbMl06dW5kZWZpbmVkO2N1c3RvbWl6ZXI9YXNzaWduZXIubGVuZ3RoPjMmJnR5cGVvZiBjdXN0b21pemVyPT0iZnVuY3Rpb24iPyhsZW5ndGgtLSxjdXN0b21pemVyKTp1bmRlZmluZWQ7aWYoZ3VhcmQmJmlzSXRlcmF0ZWVDYWxsKHNvdXJjZXNbMF0sc291cmNlc1sxXSxndWFyZCkpe2N1c3RvbWl6ZXI9bGVuZ3RoPDM/dW5kZWZpbmVkOmN1c3RvbWl6ZXI7bGVuZ3RoPTF9b2JqZWN0PU9iamVjdChvYmplY3QpO3doaWxlKCsraW5kZXg8bGVuZ3RoKXt2YXIgc291cmNlPXNvdXJjZXNbaW5kZXhdO2lmKHNvdXJjZSl7YXNzaWduZXIob2JqZWN0LHNvdXJjZSxpbmRleCxjdXN0b21pemVyKX19cmV0dXJuIG9iamVjdH0pfW1vZHVsZS5leHBvcnRzPWNyZWF0ZUFzc2lnbmVyfSx7Ii4vX2Jhc2VSZXN0IjoxODEsIi4vX2lzSXRlcmF0ZWVDYWxsIjoyNDJ9XSwyMDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpc0FycmF5TGlrZT1yZXF1aXJlKCIuL2lzQXJyYXlMaWtlIik7Ci8qKgogKiBDcmVhdGVzIGEgYGJhc2VFYWNoYCBvciBgYmFzZUVhY2hSaWdodGAgZnVuY3Rpb24uCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7RnVuY3Rpb259IGVhY2hGdW5jIFRoZSBmdW5jdGlvbiB0byBpdGVyYXRlIG92ZXIgYSBjb2xsZWN0aW9uLgogKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC4KICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi4KICovZnVuY3Rpb24gY3JlYXRlQmFzZUVhY2goZWFjaEZ1bmMsZnJvbVJpZ2h0KXtyZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbixpdGVyYXRlZSl7aWYoY29sbGVjdGlvbj09bnVsbCl7cmV0dXJuIGNvbGxlY3Rpb259aWYoIWlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pKXtyZXR1cm4gZWFjaEZ1bmMoY29sbGVjdGlvbixpdGVyYXRlZSl9dmFyIGxlbmd0aD1jb2xsZWN0aW9uLmxlbmd0aCxpbmRleD1mcm9tUmlnaHQ/bGVuZ3RoOi0xLGl0ZXJhYmxlPU9iamVjdChjb2xsZWN0aW9uKTt3aGlsZShmcm9tUmlnaHQ/aW5kZXgtLTorK2luZGV4PGxlbmd0aCl7aWYoaXRlcmF0ZWUoaXRlcmFibGVbaW5kZXhdLGluZGV4LGl0ZXJhYmxlKT09PWZhbHNlKXticmVha319cmV0dXJuIGNvbGxlY3Rpb259fW1vZHVsZS5leHBvcnRzPWNyZWF0ZUJhc2VFYWNofSx7Ii4vaXNBcnJheUxpa2UiOjMwNH1dLDIwOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBDcmVhdGVzIGEgYmFzZSBmdW5jdGlvbiBmb3IgbWV0aG9kcyBsaWtlIGBfLmZvckluYCBhbmQgYF8uZm9yT3duYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtib29sZWFufSBbZnJvbVJpZ2h0XSBTcGVjaWZ5IGl0ZXJhdGluZyBmcm9tIHJpZ2h0IHRvIGxlZnQuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uCiAqLwpmdW5jdGlvbiBjcmVhdGVCYXNlRm9yKGZyb21SaWdodCl7cmV0dXJuIGZ1bmN0aW9uKG9iamVjdCxpdGVyYXRlZSxrZXlzRnVuYyl7dmFyIGluZGV4PS0xLGl0ZXJhYmxlPU9iamVjdChvYmplY3QpLHByb3BzPWtleXNGdW5jKG9iamVjdCksbGVuZ3RoPXByb3BzLmxlbmd0aDt3aGlsZShsZW5ndGgtLSl7dmFyIGtleT1wcm9wc1tmcm9tUmlnaHQ/bGVuZ3RoOisraW5kZXhdO2lmKGl0ZXJhdGVlKGl0ZXJhYmxlW2tleV0sa2V5LGl0ZXJhYmxlKT09PWZhbHNlKXticmVha319cmV0dXJuIG9iamVjdH19bW9kdWxlLmV4cG9ydHM9Y3JlYXRlQmFzZUZvcn0se31dLDIxMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VJdGVyYXRlZT1yZXF1aXJlKCIuL19iYXNlSXRlcmF0ZWUiKSxpc0FycmF5TGlrZT1yZXF1aXJlKCIuL2lzQXJyYXlMaWtlIiksa2V5cz1yZXF1aXJlKCIuL2tleXMiKTsKLyoqCiAqIENyZWF0ZXMgYSBgXy5maW5kYCBvciBgXy5maW5kTGFzdGAgZnVuY3Rpb24uCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7RnVuY3Rpb259IGZpbmRJbmRleEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGZpbmQgdGhlIGNvbGxlY3Rpb24gaW5kZXguCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZpbmQgZnVuY3Rpb24uCiAqL2Z1bmN0aW9uIGNyZWF0ZUZpbmQoZmluZEluZGV4RnVuYyl7cmV0dXJuIGZ1bmN0aW9uKGNvbGxlY3Rpb24scHJlZGljYXRlLGZyb21JbmRleCl7dmFyIGl0ZXJhYmxlPU9iamVjdChjb2xsZWN0aW9uKTtpZighaXNBcnJheUxpa2UoY29sbGVjdGlvbikpe3ZhciBpdGVyYXRlZT1iYXNlSXRlcmF0ZWUocHJlZGljYXRlLDMpO2NvbGxlY3Rpb249a2V5cyhjb2xsZWN0aW9uKTtwcmVkaWNhdGU9ZnVuY3Rpb24oa2V5KXtyZXR1cm4gaXRlcmF0ZWUoaXRlcmFibGVba2V5XSxrZXksaXRlcmFibGUpfX12YXIgaW5kZXg9ZmluZEluZGV4RnVuYyhjb2xsZWN0aW9uLHByZWRpY2F0ZSxmcm9tSW5kZXgpO3JldHVybiBpbmRleD4tMT9pdGVyYWJsZVtpdGVyYXRlZT9jb2xsZWN0aW9uW2luZGV4XTppbmRleF06dW5kZWZpbmVkfX1tb2R1bGUuZXhwb3J0cz1jcmVhdGVGaW5kfSx7Ii4vX2Jhc2VJdGVyYXRlZSI6MTY1LCIuL2lzQXJyYXlMaWtlIjozMDQsIi4va2V5cyI6MzE5fV0sMjExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVJhbmdlPXJlcXVpcmUoIi4vX2Jhc2VSYW5nZSIpLGlzSXRlcmF0ZWVDYWxsPXJlcXVpcmUoIi4vX2lzSXRlcmF0ZWVDYWxsIiksdG9GaW5pdGU9cmVxdWlyZSgiLi90b0Zpbml0ZSIpOwovKioKICogQ3JlYXRlcyBhIGBfLnJhbmdlYCBvciBgXy5yYW5nZVJpZ2h0YCBmdW5jdGlvbi4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtib29sZWFufSBbZnJvbVJpZ2h0XSBTcGVjaWZ5IGl0ZXJhdGluZyBmcm9tIHJpZ2h0IHRvIGxlZnQuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHJhbmdlIGZ1bmN0aW9uLgogKi9mdW5jdGlvbiBjcmVhdGVSYW5nZShmcm9tUmlnaHQpe3JldHVybiBmdW5jdGlvbihzdGFydCxlbmQsc3RlcCl7aWYoc3RlcCYmdHlwZW9mIHN0ZXAhPSJudW1iZXIiJiZpc0l0ZXJhdGVlQ2FsbChzdGFydCxlbmQsc3RlcCkpe2VuZD1zdGVwPXVuZGVmaW5lZH0KLy8gRW5zdXJlIHRoZSBzaWduIG9mIGAtMGAgaXMgcHJlc2VydmVkLgpzdGFydD10b0Zpbml0ZShzdGFydCk7aWYoZW5kPT09dW5kZWZpbmVkKXtlbmQ9c3RhcnQ7c3RhcnQ9MH1lbHNle2VuZD10b0Zpbml0ZShlbmQpfXN0ZXA9c3RlcD09PXVuZGVmaW5lZD9zdGFydDxlbmQ/MTotMTp0b0Zpbml0ZShzdGVwKTtyZXR1cm4gYmFzZVJhbmdlKHN0YXJ0LGVuZCxzdGVwLGZyb21SaWdodCl9fW1vZHVsZS5leHBvcnRzPWNyZWF0ZVJhbmdlfSx7Ii4vX2Jhc2VSYW5nZSI6MTc5LCIuL19pc0l0ZXJhdGVlQ2FsbCI6MjQyLCIuL3RvRmluaXRlIjozMzl9XSwyMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBTZXQ9cmVxdWlyZSgiLi9fU2V0Iiksbm9vcD1yZXF1aXJlKCIuL25vb3AiKSxzZXRUb0FycmF5PXJlcXVpcmUoIi4vX3NldFRvQXJyYXkiKTsKLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovdmFyIElORklOSVRZPTEvMDsKLyoqCiAqIENyZWF0ZXMgYSBzZXQgb2JqZWN0IG9mIGB2YWx1ZXNgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhZGQgdG8gdGhlIHNldC4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IHNldC4KICovdmFyIGNyZWF0ZVNldD0hKFNldCYmMS9zZXRUb0FycmF5KG5ldyBTZXQoWywtMF0pKVsxXT09SU5GSU5JVFkpP25vb3A6ZnVuY3Rpb24odmFsdWVzKXtyZXR1cm4gbmV3IFNldCh2YWx1ZXMpfTttb2R1bGUuZXhwb3J0cz1jcmVhdGVTZXR9LHsiLi9fU2V0IjoxMTcsIi4vX3NldFRvQXJyYXkiOjI3MiwiLi9ub29wIjozMjl9XSwyMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBnZXROYXRpdmU9cmVxdWlyZSgiLi9fZ2V0TmF0aXZlIik7dmFyIGRlZmluZVByb3BlcnR5PWZ1bmN0aW9uKCl7dHJ5e3ZhciBmdW5jPWdldE5hdGl2ZShPYmplY3QsImRlZmluZVByb3BlcnR5Iik7ZnVuYyh7fSwiIix7fSk7cmV0dXJuIGZ1bmN9Y2F0Y2goZSl7fX0oKTttb2R1bGUuZXhwb3J0cz1kZWZpbmVQcm9wZXJ0eX0seyIuL19nZXROYXRpdmUiOjIyM31dLDIxNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIFNldENhY2hlPXJlcXVpcmUoIi4vX1NldENhY2hlIiksYXJyYXlTb21lPXJlcXVpcmUoIi4vX2FycmF5U29tZSIpLGNhY2hlSGFzPXJlcXVpcmUoIi4vX2NhY2hlSGFzIik7Ci8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL3ZhciBDT01QQVJFX1BBUlRJQUxfRkxBRz0xLENPTVBBUkVfVU5PUkRFUkVEX0ZMQUc9MjsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3IgYXJyYXlzIHdpdGggc3VwcG9ydCBmb3IKICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gY29tcGFyZS4KICogQHBhcmFtIHtBcnJheX0gb3RoZXIgVGhlIG90aGVyIGFycmF5IHRvIGNvbXBhcmUuCiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy4KICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYGFycmF5YCBhbmQgYG90aGVyYCBvYmplY3RzLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGFycmF5cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBlcXVhbEFycmF5cyhhcnJheSxvdGhlcixiaXRtYXNrLGN1c3RvbWl6ZXIsZXF1YWxGdW5jLHN0YWNrKXt2YXIgaXNQYXJ0aWFsPWJpdG1hc2smQ09NUEFSRV9QQVJUSUFMX0ZMQUcsYXJyTGVuZ3RoPWFycmF5Lmxlbmd0aCxvdGhMZW5ndGg9b3RoZXIubGVuZ3RoO2lmKGFyckxlbmd0aCE9b3RoTGVuZ3RoJiYhKGlzUGFydGlhbCYmb3RoTGVuZ3RoPmFyckxlbmd0aCkpe3JldHVybiBmYWxzZX0KLy8gQXNzdW1lIGN5Y2xpYyB2YWx1ZXMgYXJlIGVxdWFsLgp2YXIgc3RhY2tlZD1zdGFjay5nZXQoYXJyYXkpO2lmKHN0YWNrZWQmJnN0YWNrLmdldChvdGhlcikpe3JldHVybiBzdGFja2VkPT1vdGhlcn12YXIgaW5kZXg9LTEscmVzdWx0PXRydWUsc2Vlbj1iaXRtYXNrJkNPTVBBUkVfVU5PUkRFUkVEX0ZMQUc/bmV3IFNldENhY2hlOnVuZGVmaW5lZDtzdGFjay5zZXQoYXJyYXksb3RoZXIpO3N0YWNrLnNldChvdGhlcixhcnJheSk7Ci8vIElnbm9yZSBub24taW5kZXggcHJvcGVydGllcy4Kd2hpbGUoKytpbmRleDxhcnJMZW5ndGgpe3ZhciBhcnJWYWx1ZT1hcnJheVtpbmRleF0sb3RoVmFsdWU9b3RoZXJbaW5kZXhdO2lmKGN1c3RvbWl6ZXIpe3ZhciBjb21wYXJlZD1pc1BhcnRpYWw/Y3VzdG9taXplcihvdGhWYWx1ZSxhcnJWYWx1ZSxpbmRleCxvdGhlcixhcnJheSxzdGFjayk6Y3VzdG9taXplcihhcnJWYWx1ZSxvdGhWYWx1ZSxpbmRleCxhcnJheSxvdGhlcixzdGFjayl9aWYoY29tcGFyZWQhPT11bmRlZmluZWQpe2lmKGNvbXBhcmVkKXtjb250aW51ZX1yZXN1bHQ9ZmFsc2U7YnJlYWt9Ci8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgYXJyYXlzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuCmlmKHNlZW4pe2lmKCFhcnJheVNvbWUob3RoZXIsZnVuY3Rpb24ob3RoVmFsdWUsb3RoSW5kZXgpe2lmKCFjYWNoZUhhcyhzZWVuLG90aEluZGV4KSYmKGFyclZhbHVlPT09b3RoVmFsdWV8fGVxdWFsRnVuYyhhcnJWYWx1ZSxvdGhWYWx1ZSxiaXRtYXNrLGN1c3RvbWl6ZXIsc3RhY2spKSl7cmV0dXJuIHNlZW4ucHVzaChvdGhJbmRleCl9fSkpe3Jlc3VsdD1mYWxzZTticmVha319ZWxzZSBpZighKGFyclZhbHVlPT09b3RoVmFsdWV8fGVxdWFsRnVuYyhhcnJWYWx1ZSxvdGhWYWx1ZSxiaXRtYXNrLGN1c3RvbWl6ZXIsc3RhY2spKSl7cmVzdWx0PWZhbHNlO2JyZWFrfX1zdGFja1siZGVsZXRlIl0oYXJyYXkpO3N0YWNrWyJkZWxldGUiXShvdGhlcik7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1lcXVhbEFycmF5c30seyIuL19TZXRDYWNoZSI6MTE4LCIuL19hcnJheVNvbWUiOjEzMiwiLi9fY2FjaGVIYXMiOjE5MX1dLDIxNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIFN5bWJvbD1yZXF1aXJlKCIuL19TeW1ib2wiKSxVaW50OEFycmF5PXJlcXVpcmUoIi4vX1VpbnQ4QXJyYXkiKSxlcT1yZXF1aXJlKCIuL2VxIiksZXF1YWxBcnJheXM9cmVxdWlyZSgiLi9fZXF1YWxBcnJheXMiKSxtYXBUb0FycmF5PXJlcXVpcmUoIi4vX21hcFRvQXJyYXkiKSxzZXRUb0FycmF5PXJlcXVpcmUoIi4vX3NldFRvQXJyYXkiKTsKLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovdmFyIENPTVBBUkVfUEFSVElBTF9GTEFHPTEsQ09NUEFSRV9VTk9SREVSRURfRkxBRz0yOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIGJvb2xUYWc9IltvYmplY3QgQm9vbGVhbl0iLGRhdGVUYWc9IltvYmplY3QgRGF0ZV0iLGVycm9yVGFnPSJbb2JqZWN0IEVycm9yXSIsbWFwVGFnPSJbb2JqZWN0IE1hcF0iLG51bWJlclRhZz0iW29iamVjdCBOdW1iZXJdIixyZWdleHBUYWc9IltvYmplY3QgUmVnRXhwXSIsc2V0VGFnPSJbb2JqZWN0IFNldF0iLHN0cmluZ1RhZz0iW29iamVjdCBTdHJpbmddIixzeW1ib2xUYWc9IltvYmplY3QgU3ltYm9sXSI7dmFyIGFycmF5QnVmZmVyVGFnPSJbb2JqZWN0IEFycmF5QnVmZmVyXSIsZGF0YVZpZXdUYWc9IltvYmplY3QgRGF0YVZpZXddIjsKLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovdmFyIHN5bWJvbFByb3RvPVN5bWJvbD9TeW1ib2wucHJvdG90eXBlOnVuZGVmaW5lZCxzeW1ib2xWYWx1ZU9mPXN5bWJvbFByb3RvP3N5bWJvbFByb3RvLnZhbHVlT2Y6dW5kZWZpbmVkOwovKioKICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBjb21wYXJpbmcgb2JqZWN0cyBvZgogKiB0aGUgc2FtZSBgdG9TdHJpbmdUYWdgLgogKgogKiAqKk5vdGU6KiogVGhpcyBmdW5jdGlvbiBvbmx5IHN1cHBvcnRzIGNvbXBhcmluZyB2YWx1ZXMgd2l0aCB0YWdzIG9mCiAqIGBCb29sZWFuYCwgYERhdGVgLCBgRXJyb3JgLCBgTnVtYmVyYCwgYFJlZ0V4cGAsIG9yIGBTdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtzdHJpbmd9IHRhZyBUaGUgYHRvU3RyaW5nVGFnYCBvZiB0aGUgb2JqZWN0cyB0byBjb21wYXJlLgogKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy4KICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuCiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBlcXVhbEJ5VGFnKG9iamVjdCxvdGhlcix0YWcsYml0bWFzayxjdXN0b21pemVyLGVxdWFsRnVuYyxzdGFjayl7c3dpdGNoKHRhZyl7Y2FzZSBkYXRhVmlld1RhZzppZihvYmplY3QuYnl0ZUxlbmd0aCE9b3RoZXIuYnl0ZUxlbmd0aHx8b2JqZWN0LmJ5dGVPZmZzZXQhPW90aGVyLmJ5dGVPZmZzZXQpe3JldHVybiBmYWxzZX1vYmplY3Q9b2JqZWN0LmJ1ZmZlcjtvdGhlcj1vdGhlci5idWZmZXI7Y2FzZSBhcnJheUJ1ZmZlclRhZzppZihvYmplY3QuYnl0ZUxlbmd0aCE9b3RoZXIuYnl0ZUxlbmd0aHx8IWVxdWFsRnVuYyhuZXcgVWludDhBcnJheShvYmplY3QpLG5ldyBVaW50OEFycmF5KG90aGVyKSkpe3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZTtjYXNlIGJvb2xUYWc6Y2FzZSBkYXRlVGFnOmNhc2UgbnVtYmVyVGFnOgovLyBDb2VyY2UgYm9vbGVhbnMgdG8gYDFgIG9yIGAwYCBhbmQgZGF0ZXMgdG8gbWlsbGlzZWNvbmRzLgovLyBJbnZhbGlkIGRhdGVzIGFyZSBjb2VyY2VkIHRvIGBOYU5gLgpyZXR1cm4gZXEoK29iamVjdCwrb3RoZXIpO2Nhc2UgZXJyb3JUYWc6cmV0dXJuIG9iamVjdC5uYW1lPT1vdGhlci5uYW1lJiZvYmplY3QubWVzc2FnZT09b3RoZXIubWVzc2FnZTtjYXNlIHJlZ2V4cFRhZzpjYXNlIHN0cmluZ1RhZzoKLy8gQ29lcmNlIHJlZ2V4ZXMgdG8gc3RyaW5ncyBhbmQgdHJlYXQgc3RyaW5ncywgcHJpbWl0aXZlcyBhbmQgb2JqZWN0cywKLy8gYXMgZXF1YWwuIFNlZSBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZwovLyBmb3IgbW9yZSBkZXRhaWxzLgpyZXR1cm4gb2JqZWN0PT1vdGhlcisiIjtjYXNlIG1hcFRhZzp2YXIgY29udmVydD1tYXBUb0FycmF5O2Nhc2Ugc2V0VGFnOnZhciBpc1BhcnRpYWw9Yml0bWFzayZDT01QQVJFX1BBUlRJQUxfRkxBRztjb252ZXJ0fHwoY29udmVydD1zZXRUb0FycmF5KTtpZihvYmplY3Quc2l6ZSE9b3RoZXIuc2l6ZSYmIWlzUGFydGlhbCl7cmV0dXJuIGZhbHNlfQovLyBBc3N1bWUgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuCnZhciBzdGFja2VkPXN0YWNrLmdldChvYmplY3QpO2lmKHN0YWNrZWQpe3JldHVybiBzdGFja2VkPT1vdGhlcn1iaXRtYXNrfD1DT01QQVJFX1VOT1JERVJFRF9GTEFHOwovLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS4Kc3RhY2suc2V0KG9iamVjdCxvdGhlcik7dmFyIHJlc3VsdD1lcXVhbEFycmF5cyhjb252ZXJ0KG9iamVjdCksY29udmVydChvdGhlciksYml0bWFzayxjdXN0b21pemVyLGVxdWFsRnVuYyxzdGFjayk7c3RhY2tbImRlbGV0ZSJdKG9iamVjdCk7cmV0dXJuIHJlc3VsdDtjYXNlIHN5bWJvbFRhZzppZihzeW1ib2xWYWx1ZU9mKXtyZXR1cm4gc3ltYm9sVmFsdWVPZi5jYWxsKG9iamVjdCk9PXN5bWJvbFZhbHVlT2YuY2FsbChvdGhlcil9fXJldHVybiBmYWxzZX1tb2R1bGUuZXhwb3J0cz1lcXVhbEJ5VGFnfSx7Ii4vX1N5bWJvbCI6MTIwLCIuL19VaW50OEFycmF5IjoxMjEsIi4vX2VxdWFsQXJyYXlzIjoyMTQsIi4vX21hcFRvQXJyYXkiOjI1OCwiLi9fc2V0VG9BcnJheSI6MjcyLCIuL2VxIjoyOTF9XSwyMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBnZXRBbGxLZXlzPXJlcXVpcmUoIi4vX2dldEFsbEtleXMiKTsKLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovdmFyIENPTVBBUkVfUEFSVElBTF9GTEFHPTE7Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi92YXIgb2JqZWN0UHJvdG89T2JqZWN0LnByb3RvdHlwZTsKLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovdmFyIGhhc093blByb3BlcnR5PW9iamVjdFByb3RvLmhhc093blByb3BlcnR5OwovKioKICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBvYmplY3RzIHdpdGggc3VwcG9ydCBmb3IKICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy4KICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLgogKiBAcGFyYW0ge09iamVjdH0gc3RhY2sgVHJhY2tzIHRyYXZlcnNlZCBgb2JqZWN0YCBhbmQgYG90aGVyYCBvYmplY3RzLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gZXF1YWxPYmplY3RzKG9iamVjdCxvdGhlcixiaXRtYXNrLGN1c3RvbWl6ZXIsZXF1YWxGdW5jLHN0YWNrKXt2YXIgaXNQYXJ0aWFsPWJpdG1hc2smQ09NUEFSRV9QQVJUSUFMX0ZMQUcsb2JqUHJvcHM9Z2V0QWxsS2V5cyhvYmplY3QpLG9iakxlbmd0aD1vYmpQcm9wcy5sZW5ndGgsb3RoUHJvcHM9Z2V0QWxsS2V5cyhvdGhlciksb3RoTGVuZ3RoPW90aFByb3BzLmxlbmd0aDtpZihvYmpMZW5ndGghPW90aExlbmd0aCYmIWlzUGFydGlhbCl7cmV0dXJuIGZhbHNlfXZhciBpbmRleD1vYmpMZW5ndGg7d2hpbGUoaW5kZXgtLSl7dmFyIGtleT1vYmpQcm9wc1tpbmRleF07aWYoIShpc1BhcnRpYWw/a2V5IGluIG90aGVyOmhhc093blByb3BlcnR5LmNhbGwob3RoZXIsa2V5KSkpe3JldHVybiBmYWxzZX19Ci8vIEFzc3VtZSBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC4KdmFyIHN0YWNrZWQ9c3RhY2suZ2V0KG9iamVjdCk7aWYoc3RhY2tlZCYmc3RhY2suZ2V0KG90aGVyKSl7cmV0dXJuIHN0YWNrZWQ9PW90aGVyfXZhciByZXN1bHQ9dHJ1ZTtzdGFjay5zZXQob2JqZWN0LG90aGVyKTtzdGFjay5zZXQob3RoZXIsb2JqZWN0KTt2YXIgc2tpcEN0b3I9aXNQYXJ0aWFsO3doaWxlKCsraW5kZXg8b2JqTGVuZ3RoKXtrZXk9b2JqUHJvcHNbaW5kZXhdO3ZhciBvYmpWYWx1ZT1vYmplY3Rba2V5XSxvdGhWYWx1ZT1vdGhlcltrZXldO2lmKGN1c3RvbWl6ZXIpe3ZhciBjb21wYXJlZD1pc1BhcnRpYWw/Y3VzdG9taXplcihvdGhWYWx1ZSxvYmpWYWx1ZSxrZXksb3RoZXIsb2JqZWN0LHN0YWNrKTpjdXN0b21pemVyKG9ialZhbHVlLG90aFZhbHVlLGtleSxvYmplY3Qsb3RoZXIsc3RhY2spfQovLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS4KaWYoIShjb21wYXJlZD09PXVuZGVmaW5lZD9vYmpWYWx1ZT09PW90aFZhbHVlfHxlcXVhbEZ1bmMob2JqVmFsdWUsb3RoVmFsdWUsYml0bWFzayxjdXN0b21pemVyLHN0YWNrKTpjb21wYXJlZCkpe3Jlc3VsdD1mYWxzZTticmVha31za2lwQ3Rvcnx8KHNraXBDdG9yPWtleT09ImNvbnN0cnVjdG9yIil9aWYocmVzdWx0JiYhc2tpcEN0b3Ipe3ZhciBvYmpDdG9yPW9iamVjdC5jb25zdHJ1Y3RvcixvdGhDdG9yPW90aGVyLmNvbnN0cnVjdG9yOwovLyBOb24gYE9iamVjdGAgb2JqZWN0IGluc3RhbmNlcyB3aXRoIGRpZmZlcmVudCBjb25zdHJ1Y3RvcnMgYXJlIG5vdCBlcXVhbC4KaWYob2JqQ3RvciE9b3RoQ3RvciYmKCJjb25zdHJ1Y3RvciJpbiBvYmplY3QmJiJjb25zdHJ1Y3RvciJpbiBvdGhlcikmJiEodHlwZW9mIG9iakN0b3I9PSJmdW5jdGlvbiImJm9iakN0b3IgaW5zdGFuY2VvZiBvYmpDdG9yJiZ0eXBlb2Ygb3RoQ3Rvcj09ImZ1bmN0aW9uIiYmb3RoQ3RvciBpbnN0YW5jZW9mIG90aEN0b3IpKXtyZXN1bHQ9ZmFsc2V9fXN0YWNrWyJkZWxldGUiXShvYmplY3QpO3N0YWNrWyJkZWxldGUiXShvdGhlcik7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1lcXVhbE9iamVjdHN9LHsiLi9fZ2V0QWxsS2V5cyI6MjE5fV0sMjE3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZmxhdHRlbj1yZXF1aXJlKCIuL2ZsYXR0ZW4iKSxvdmVyUmVzdD1yZXF1aXJlKCIuL19vdmVyUmVzdCIpLHNldFRvU3RyaW5nPXJlcXVpcmUoIi4vX3NldFRvU3RyaW5nIik7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VSZXN0YCB3aGljaCBmbGF0dGVucyB0aGUgcmVzdCBhcnJheS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by4KICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uCiAqL2Z1bmN0aW9uIGZsYXRSZXN0KGZ1bmMpe3JldHVybiBzZXRUb1N0cmluZyhvdmVyUmVzdChmdW5jLHVuZGVmaW5lZCxmbGF0dGVuKSxmdW5jKyIiKX1tb2R1bGUuZXhwb3J0cz1mbGF0UmVzdH0seyIuL19vdmVyUmVzdCI6MjY3LCIuL19zZXRUb1N0cmluZyI6MjczLCIuL2ZsYXR0ZW4iOjI5NX1dLDIxODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7KGZ1bmN0aW9uKGdsb2JhbCl7Ci8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovCnZhciBmcmVlR2xvYmFsPXR5cGVvZiBnbG9iYWw9PSJvYmplY3QiJiZnbG9iYWwmJmdsb2JhbC5PYmplY3Q9PT1PYmplY3QmJmdsb2JhbDttb2R1bGUuZXhwb3J0cz1mcmVlR2xvYmFsfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwhPT0idW5kZWZpbmVkIj9nbG9iYWw6dHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIj9zZWxmOnR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIj93aW5kb3c6e30pfSx7fV0sMjE5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUdldEFsbEtleXM9cmVxdWlyZSgiLi9fYmFzZUdldEFsbEtleXMiKSxnZXRTeW1ib2xzPXJlcXVpcmUoIi4vX2dldFN5bWJvbHMiKSxrZXlzPXJlcXVpcmUoIi4va2V5cyIpOwovKioKICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scyBvZiBgb2JqZWN0YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLgogKi9mdW5jdGlvbiBnZXRBbGxLZXlzKG9iamVjdCl7cmV0dXJuIGJhc2VHZXRBbGxLZXlzKG9iamVjdCxrZXlzLGdldFN5bWJvbHMpfW1vZHVsZS5leHBvcnRzPWdldEFsbEtleXN9LHsiLi9fYmFzZUdldEFsbEtleXMiOjE1MCwiLi9fZ2V0U3ltYm9scyI6MjI2LCIuL2tleXMiOjMxOX1dLDIyMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VHZXRBbGxLZXlzPXJlcXVpcmUoIi4vX2Jhc2VHZXRBbGxLZXlzIiksZ2V0U3ltYm9sc0luPXJlcXVpcmUoIi4vX2dldFN5bWJvbHNJbiIpLGtleXNJbj1yZXF1aXJlKCIuL2tleXNJbiIpOwovKioKICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZAogKiBzeW1ib2xzIG9mIGBvYmplY3RgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMuCiAqL2Z1bmN0aW9uIGdldEFsbEtleXNJbihvYmplY3Qpe3JldHVybiBiYXNlR2V0QWxsS2V5cyhvYmplY3Qsa2V5c0luLGdldFN5bWJvbHNJbil9bW9kdWxlLmV4cG9ydHM9Z2V0QWxsS2V5c0lufSx7Ii4vX2Jhc2VHZXRBbGxLZXlzIjoxNTAsIi4vX2dldFN5bWJvbHNJbiI6MjI3LCIuL2tleXNJbiI6MzIwfV0sMjIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgaXNLZXlhYmxlPXJlcXVpcmUoIi4vX2lzS2V5YWJsZSIpOwovKioKICogR2V0cyB0aGUgZGF0YSBmb3IgYG1hcGAuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBxdWVyeS4KICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgcmVmZXJlbmNlIGtleS4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hcCBkYXRhLgogKi9mdW5jdGlvbiBnZXRNYXBEYXRhKG1hcCxrZXkpe3ZhciBkYXRhPW1hcC5fX2RhdGFfXztyZXR1cm4gaXNLZXlhYmxlKGtleSk/ZGF0YVt0eXBlb2Yga2V5PT0ic3RyaW5nIj8ic3RyaW5nIjoiaGFzaCJdOmRhdGEubWFwfW1vZHVsZS5leHBvcnRzPWdldE1hcERhdGF9LHsiLi9faXNLZXlhYmxlIjoyNDR9XSwyMjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpc1N0cmljdENvbXBhcmFibGU9cmVxdWlyZSgiLi9faXNTdHJpY3RDb21wYXJhYmxlIiksa2V5cz1yZXF1aXJlKCIuL2tleXMiKTsKLyoqCiAqIEdldHMgdGhlIHByb3BlcnR5IG5hbWVzLCB2YWx1ZXMsIGFuZCBjb21wYXJlIGZsYWdzIG9mIGBvYmplY3RgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbWF0Y2ggZGF0YSBvZiBgb2JqZWN0YC4KICovZnVuY3Rpb24gZ2V0TWF0Y2hEYXRhKG9iamVjdCl7dmFyIHJlc3VsdD1rZXlzKG9iamVjdCksbGVuZ3RoPXJlc3VsdC5sZW5ndGg7d2hpbGUobGVuZ3RoLS0pe3ZhciBrZXk9cmVzdWx0W2xlbmd0aF0sdmFsdWU9b2JqZWN0W2tleV07cmVzdWx0W2xlbmd0aF09W2tleSx2YWx1ZSxpc1N0cmljdENvbXBhcmFibGUodmFsdWUpXX1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWdldE1hdGNoRGF0YX0seyIuL19pc1N0cmljdENvbXBhcmFibGUiOjI0NywiLi9rZXlzIjozMTl9XSwyMjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlSXNOYXRpdmU9cmVxdWlyZSgiLi9fYmFzZUlzTmF0aXZlIiksZ2V0VmFsdWU9cmVxdWlyZSgiLi9fZ2V0VmFsdWUiKTsKLyoqCiAqIEdldHMgdGhlIG5hdGl2ZSBmdW5jdGlvbiBhdCBga2V5YCBvZiBgb2JqZWN0YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIG1ldGhvZCB0byBnZXQuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmdW5jdGlvbiBpZiBpdCdzIG5hdGl2ZSwgZWxzZSBgdW5kZWZpbmVkYC4KICovZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCxrZXkpe3ZhciB2YWx1ZT1nZXRWYWx1ZShvYmplY3Qsa2V5KTtyZXR1cm4gYmFzZUlzTmF0aXZlKHZhbHVlKT92YWx1ZTp1bmRlZmluZWR9bW9kdWxlLmV4cG9ydHM9Z2V0TmF0aXZlfSx7Ii4vX2Jhc2VJc05hdGl2ZSI6MTYyLCIuL19nZXRWYWx1ZSI6MjI5fV0sMjI0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgb3ZlckFyZz1yZXF1aXJlKCIuL19vdmVyQXJnIik7Ci8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL3ZhciBnZXRQcm90b3R5cGU9b3ZlckFyZyhPYmplY3QuZ2V0UHJvdG90eXBlT2YsT2JqZWN0KTttb2R1bGUuZXhwb3J0cz1nZXRQcm90b3R5cGV9LHsiLi9fb3ZlckFyZyI6MjY2fV0sMjI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgU3ltYm9sPXJlcXVpcmUoIi4vX1N5bWJvbCIpOwovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovdmFyIG9iamVjdFByb3RvPU9iamVjdC5wcm90b3R5cGU7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqCiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGUKICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpCiAqIG9mIHZhbHVlcy4KICovdmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nPW9iamVjdFByb3RvLnRvU3RyaW5nOwovKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi92YXIgc3ltVG9TdHJpbmdUYWc9U3ltYm9sP1N5bWJvbC50b1N0cmluZ1RhZzp1bmRlZmluZWQ7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS4KICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgcmF3IGB0b1N0cmluZ1RhZ2AuCiAqL2Z1bmN0aW9uIGdldFJhd1RhZyh2YWx1ZSl7dmFyIGlzT3duPWhhc093blByb3BlcnR5LmNhbGwodmFsdWUsc3ltVG9TdHJpbmdUYWcpLHRhZz12YWx1ZVtzeW1Ub1N0cmluZ1RhZ107dHJ5e3ZhbHVlW3N5bVRvU3RyaW5nVGFnXT11bmRlZmluZWQ7dmFyIHVubWFza2VkPXRydWV9Y2F0Y2goZSl7fXZhciByZXN1bHQ9bmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7aWYodW5tYXNrZWQpe2lmKGlzT3duKXt2YWx1ZVtzeW1Ub1N0cmluZ1RhZ109dGFnfWVsc2V7ZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXX19cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1nZXRSYXdUYWd9LHsiLi9fU3ltYm9sIjoxMjB9XSwyMjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheUZpbHRlcj1yZXF1aXJlKCIuL19hcnJheUZpbHRlciIpLHN0dWJBcnJheT1yZXF1aXJlKCIuL3N0dWJBcnJheSIpOwovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovdmFyIG9iamVjdFByb3RvPU9iamVjdC5wcm90b3R5cGU7Ci8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL3ZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZT1vYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL3ZhciBuYXRpdmVHZXRTeW1ib2xzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7Ci8qKgogKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBzeW1ib2xzIG9mIGBvYmplY3RgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2Ygc3ltYm9scy4KICovdmFyIGdldFN5bWJvbHM9IW5hdGl2ZUdldFN5bWJvbHM/c3R1YkFycmF5OmZ1bmN0aW9uKG9iamVjdCl7aWYob2JqZWN0PT1udWxsKXtyZXR1cm5bXX1vYmplY3Q9T2JqZWN0KG9iamVjdCk7cmV0dXJuIGFycmF5RmlsdGVyKG5hdGl2ZUdldFN5bWJvbHMob2JqZWN0KSxmdW5jdGlvbihzeW1ib2wpe3JldHVybiBwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iamVjdCxzeW1ib2wpfSl9O21vZHVsZS5leHBvcnRzPWdldFN5bWJvbHN9LHsiLi9fYXJyYXlGaWx0ZXIiOjEyNSwiLi9zdHViQXJyYXkiOjMzN31dLDIyNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFycmF5UHVzaD1yZXF1aXJlKCIuL19hcnJheVB1c2giKSxnZXRQcm90b3R5cGU9cmVxdWlyZSgiLi9fZ2V0UHJvdG90eXBlIiksZ2V0U3ltYm9scz1yZXF1aXJlKCIuL19nZXRTeW1ib2xzIiksc3R1YkFycmF5PXJlcXVpcmUoIi4vc3R1YkFycmF5Iik7Ci8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi92YXIgbmF0aXZlR2V0U3ltYm9scz1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzOwovKioKICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGFuZCBpbmhlcml0ZWQgZW51bWVyYWJsZSBzeW1ib2xzIG9mIGBvYmplY3RgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2Ygc3ltYm9scy4KICovdmFyIGdldFN5bWJvbHNJbj0hbmF0aXZlR2V0U3ltYm9scz9zdHViQXJyYXk6ZnVuY3Rpb24ob2JqZWN0KXt2YXIgcmVzdWx0PVtdO3doaWxlKG9iamVjdCl7YXJyYXlQdXNoKHJlc3VsdCxnZXRTeW1ib2xzKG9iamVjdCkpO29iamVjdD1nZXRQcm90b3R5cGUob2JqZWN0KX1yZXR1cm4gcmVzdWx0fTttb2R1bGUuZXhwb3J0cz1nZXRTeW1ib2xzSW59LHsiLi9fYXJyYXlQdXNoIjoxMzAsIi4vX2dldFByb3RvdHlwZSI6MjI0LCIuL19nZXRTeW1ib2xzIjoyMjYsIi4vc3R1YkFycmF5IjozMzd9XSwyMjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBEYXRhVmlldz1yZXF1aXJlKCIuL19EYXRhVmlldyIpLE1hcD1yZXF1aXJlKCIuL19NYXAiKSxQcm9taXNlPXJlcXVpcmUoIi4vX1Byb21pc2UiKSxTZXQ9cmVxdWlyZSgiLi9fU2V0IiksV2Vha01hcD1yZXF1aXJlKCIuL19XZWFrTWFwIiksYmFzZUdldFRhZz1yZXF1aXJlKCIuL19iYXNlR2V0VGFnIiksdG9Tb3VyY2U9cmVxdWlyZSgiLi9fdG9Tb3VyY2UiKTsKLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL3ZhciBtYXBUYWc9IltvYmplY3QgTWFwXSIsb2JqZWN0VGFnPSJbb2JqZWN0IE9iamVjdF0iLHByb21pc2VUYWc9IltvYmplY3QgUHJvbWlzZV0iLHNldFRhZz0iW29iamVjdCBTZXRdIix3ZWFrTWFwVGFnPSJbb2JqZWN0IFdlYWtNYXBdIjt2YXIgZGF0YVZpZXdUYWc9IltvYmplY3QgRGF0YVZpZXddIjsKLyoqIFVzZWQgdG8gZGV0ZWN0IG1hcHMsIHNldHMsIGFuZCB3ZWFrbWFwcy4gKi92YXIgZGF0YVZpZXdDdG9yU3RyaW5nPXRvU291cmNlKERhdGFWaWV3KSxtYXBDdG9yU3RyaW5nPXRvU291cmNlKE1hcCkscHJvbWlzZUN0b3JTdHJpbmc9dG9Tb3VyY2UoUHJvbWlzZSksc2V0Q3RvclN0cmluZz10b1NvdXJjZShTZXQpLHdlYWtNYXBDdG9yU3RyaW5nPXRvU291cmNlKFdlYWtNYXApOwovKioKICogR2V0cyB0aGUgYHRvU3RyaW5nVGFnYCBvZiBgdmFsdWVgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS4KICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC4KICovdmFyIGdldFRhZz1iYXNlR2V0VGFnOwovLyBGYWxsYmFjayBmb3IgZGF0YSB2aWV3cywgbWFwcywgc2V0cywgYW5kIHdlYWsgbWFwcyBpbiBJRSAxMSBhbmQgcHJvbWlzZXMgaW4gTm9kZS5qcyA8IDYuCmlmKERhdGFWaWV3JiZnZXRUYWcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSkpIT1kYXRhVmlld1RhZ3x8TWFwJiZnZXRUYWcobmV3IE1hcCkhPW1hcFRhZ3x8UHJvbWlzZSYmZ2V0VGFnKFByb21pc2UucmVzb2x2ZSgpKSE9cHJvbWlzZVRhZ3x8U2V0JiZnZXRUYWcobmV3IFNldCkhPXNldFRhZ3x8V2Vha01hcCYmZ2V0VGFnKG5ldyBXZWFrTWFwKSE9d2Vha01hcFRhZyl7Z2V0VGFnPWZ1bmN0aW9uKHZhbHVlKXt2YXIgcmVzdWx0PWJhc2VHZXRUYWcodmFsdWUpLEN0b3I9cmVzdWx0PT1vYmplY3RUYWc/dmFsdWUuY29uc3RydWN0b3I6dW5kZWZpbmVkLGN0b3JTdHJpbmc9Q3Rvcj90b1NvdXJjZShDdG9yKToiIjtpZihjdG9yU3RyaW5nKXtzd2l0Y2goY3RvclN0cmluZyl7Y2FzZSBkYXRhVmlld0N0b3JTdHJpbmc6cmV0dXJuIGRhdGFWaWV3VGFnO2Nhc2UgbWFwQ3RvclN0cmluZzpyZXR1cm4gbWFwVGFnO2Nhc2UgcHJvbWlzZUN0b3JTdHJpbmc6cmV0dXJuIHByb21pc2VUYWc7Y2FzZSBzZXRDdG9yU3RyaW5nOnJldHVybiBzZXRUYWc7Y2FzZSB3ZWFrTWFwQ3RvclN0cmluZzpyZXR1cm4gd2Vha01hcFRhZ319cmV0dXJuIHJlc3VsdH19bW9kdWxlLmV4cG9ydHM9Z2V0VGFnfSx7Ii4vX0RhdGFWaWV3IjoxMTEsIi4vX01hcCI6MTE0LCIuL19Qcm9taXNlIjoxMTYsIi4vX1NldCI6MTE3LCIuL19XZWFrTWFwIjoxMjIsIi4vX2Jhc2VHZXRUYWciOjE1MSwiLi9fdG9Tb3VyY2UiOjI4NH1dLDIyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBHZXRzIHRoZSB2YWx1ZSBhdCBga2V5YCBvZiBgb2JqZWN0YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LgogKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuCiAqLwpmdW5jdGlvbiBnZXRWYWx1ZShvYmplY3Qsa2V5KXtyZXR1cm4gb2JqZWN0PT1udWxsP3VuZGVmaW5lZDpvYmplY3Rba2V5XX1tb2R1bGUuZXhwb3J0cz1nZXRWYWx1ZX0se31dLDIzMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGNhc3RQYXRoPXJlcXVpcmUoIi4vX2Nhc3RQYXRoIiksaXNBcmd1bWVudHM9cmVxdWlyZSgiLi9pc0FyZ3VtZW50cyIpLGlzQXJyYXk9cmVxdWlyZSgiLi9pc0FycmF5IiksaXNJbmRleD1yZXF1aXJlKCIuL19pc0luZGV4IiksaXNMZW5ndGg9cmVxdWlyZSgiLi9pc0xlbmd0aCIpLHRvS2V5PXJlcXVpcmUoIi4vX3RvS2V5Iik7Ci8qKgogKiBDaGVja3MgaWYgYHBhdGhgIGV4aXN0cyBvbiBgb2JqZWN0YC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay4KICogQHBhcmFtIHtGdW5jdGlvbn0gaGFzRnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2sgcHJvcGVydGllcy4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBwYXRoYCBleGlzdHMsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gaGFzUGF0aChvYmplY3QscGF0aCxoYXNGdW5jKXtwYXRoPWNhc3RQYXRoKHBhdGgsb2JqZWN0KTt2YXIgaW5kZXg9LTEsbGVuZ3RoPXBhdGgubGVuZ3RoLHJlc3VsdD1mYWxzZTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7dmFyIGtleT10b0tleShwYXRoW2luZGV4XSk7aWYoIShyZXN1bHQ9b2JqZWN0IT1udWxsJiZoYXNGdW5jKG9iamVjdCxrZXkpKSl7YnJlYWt9b2JqZWN0PW9iamVjdFtrZXldfWlmKHJlc3VsdHx8KytpbmRleCE9bGVuZ3RoKXtyZXR1cm4gcmVzdWx0fWxlbmd0aD1vYmplY3Q9PW51bGw/MDpvYmplY3QubGVuZ3RoO3JldHVybiEhbGVuZ3RoJiZpc0xlbmd0aChsZW5ndGgpJiZpc0luZGV4KGtleSxsZW5ndGgpJiYoaXNBcnJheShvYmplY3QpfHxpc0FyZ3VtZW50cyhvYmplY3QpKX1tb2R1bGUuZXhwb3J0cz1oYXNQYXRofSx7Ii4vX2Nhc3RQYXRoIjoxOTMsIi4vX2lzSW5kZXgiOjI0MSwiLi9fdG9LZXkiOjI4MywiLi9pc0FyZ3VtZW50cyI6MzAyLCIuL2lzQXJyYXkiOjMwMywiLi9pc0xlbmd0aCI6MzA5fV0sMjMxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqIFVzZWQgdG8gY29tcG9zZSB1bmljb2RlIGNoYXJhY3RlciBjbGFzc2VzLiAqLwp2YXIgcnNBc3RyYWxSYW5nZT0iXFx1ZDgwMC1cXHVkZmZmIixyc0NvbWJvTWFya3NSYW5nZT0iXFx1MDMwMC1cXHUwMzZmIixyZUNvbWJvSGFsZk1hcmtzUmFuZ2U9IlxcdWZlMjAtXFx1ZmUyZiIscnNDb21ib1N5bWJvbHNSYW5nZT0iXFx1MjBkMC1cXHUyMGZmIixyc0NvbWJvUmFuZ2U9cnNDb21ib01hcmtzUmFuZ2UrcmVDb21ib0hhbGZNYXJrc1JhbmdlK3JzQ29tYm9TeW1ib2xzUmFuZ2UscnNWYXJSYW5nZT0iXFx1ZmUwZVxcdWZlMGYiOwovKiogVXNlZCB0byBjb21wb3NlIHVuaWNvZGUgY2FwdHVyZSBncm91cHMuICovdmFyIHJzWldKPSJcXHUyMDBkIjsKLyoqIFVzZWQgdG8gZGV0ZWN0IHN0cmluZ3Mgd2l0aCBbemVyby13aWR0aCBqb2luZXJzIG9yIGNvZGUgcG9pbnRzIGZyb20gdGhlIGFzdHJhbCBwbGFuZXNdKGh0dHA6Ly9lZXYuZWUvYmxvZy8yMDE1LzA5LzEyL2RhcmstY29ybmVycy1vZi11bmljb2RlLykuICovdmFyIHJlSGFzVW5pY29kZT1SZWdFeHAoIlsiK3JzWldKK3JzQXN0cmFsUmFuZ2UrcnNDb21ib1JhbmdlK3JzVmFyUmFuZ2UrIl0iKTsKLyoqCiAqIENoZWNrcyBpZiBgc3RyaW5nYCBjb250YWlucyBVbmljb2RlIHN5bWJvbHMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBpbnNwZWN0LgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYSBzeW1ib2wgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gaGFzVW5pY29kZShzdHJpbmcpe3JldHVybiByZUhhc1VuaWNvZGUudGVzdChzdHJpbmcpfW1vZHVsZS5leHBvcnRzPWhhc1VuaWNvZGV9LHt9XSwyMzI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBuYXRpdmVDcmVhdGU9cmVxdWlyZSgiLi9fbmF0aXZlQ3JlYXRlIik7Ci8qKgogKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBoYXNoLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBjbGVhcgogKiBAbWVtYmVyT2YgSGFzaAogKi9mdW5jdGlvbiBoYXNoQ2xlYXIoKXt0aGlzLl9fZGF0YV9fPW5hdGl2ZUNyZWF0ZT9uYXRpdmVDcmVhdGUobnVsbCk6e307dGhpcy5zaXplPTB9bW9kdWxlLmV4cG9ydHM9aGFzaENsZWFyfSx7Ii4vX25hdGl2ZUNyZWF0ZSI6MjYxfV0sMjMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBoYXNoLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBkZWxldGUKICogQG1lbWJlck9mIEhhc2gKICogQHBhcmFtIHtPYmplY3R9IGhhc2ggVGhlIGhhc2ggdG8gbW9kaWZ5LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLgogKi8KZnVuY3Rpb24gaGFzaERlbGV0ZShrZXkpe3ZhciByZXN1bHQ9dGhpcy5oYXMoa2V5KSYmZGVsZXRlIHRoaXMuX19kYXRhX19ba2V5XTt0aGlzLnNpemUtPXJlc3VsdD8xOjA7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1oYXNoRGVsZXRlfSx7fV0sMjM0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgbmF0aXZlQ3JlYXRlPXJlcXVpcmUoIi4vX25hdGl2ZUNyZWF0ZSIpOwovKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovdmFyIEhBU0hfVU5ERUZJTkVEPSJfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fIjsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL3ZhciBvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi92YXIgaGFzT3duUHJvcGVydHk9b2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7Ci8qKgogKiBHZXRzIHRoZSBoYXNoIHZhbHVlIGZvciBga2V5YC4KICoKICogQHByaXZhdGUKICogQG5hbWUgZ2V0CiAqIEBtZW1iZXJPZiBIYXNoCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LgogKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuCiAqL2Z1bmN0aW9uIGhhc2hHZXQoa2V5KXt2YXIgZGF0YT10aGlzLl9fZGF0YV9fO2lmKG5hdGl2ZUNyZWF0ZSl7dmFyIHJlc3VsdD1kYXRhW2tleV07cmV0dXJuIHJlc3VsdD09PUhBU0hfVU5ERUZJTkVEP3VuZGVmaW5lZDpyZXN1bHR9cmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoZGF0YSxrZXkpP2RhdGFba2V5XTp1bmRlZmluZWR9bW9kdWxlLmV4cG9ydHM9aGFzaEdldH0seyIuL19uYXRpdmVDcmVhdGUiOjI2MX1dLDIzNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIG5hdGl2ZUNyZWF0ZT1yZXF1aXJlKCIuL19uYXRpdmVDcmVhdGUiKTsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL3ZhciBvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi92YXIgaGFzT3duUHJvcGVydHk9b2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7Ci8qKgogKiBDaGVja3MgaWYgYSBoYXNoIHZhbHVlIGZvciBga2V5YCBleGlzdHMuCiAqCiAqIEBwcml2YXRlCiAqIEBuYW1lIGhhcwogKiBAbWVtYmVyT2YgSGFzaAogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBoYXNoSGFzKGtleSl7dmFyIGRhdGE9dGhpcy5fX2RhdGFfXztyZXR1cm4gbmF0aXZlQ3JlYXRlP2RhdGFba2V5XSE9PXVuZGVmaW5lZDpoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsa2V5KX1tb2R1bGUuZXhwb3J0cz1oYXNoSGFzfSx7Ii4vX25hdGl2ZUNyZWF0ZSI6MjYxfV0sMjM2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgbmF0aXZlQ3JlYXRlPXJlcXVpcmUoIi4vX25hdGl2ZUNyZWF0ZSIpOwovKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovdmFyIEhBU0hfVU5ERUZJTkVEPSJfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fIjsKLyoqCiAqIFNldHMgdGhlIGhhc2ggYGtleWAgdG8gYHZhbHVlYC4KICoKICogQHByaXZhdGUKICogQG5hbWUgc2V0CiAqIEBtZW1iZXJPZiBIYXNoCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LgogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuCiAqL2Z1bmN0aW9uIGhhc2hTZXQoa2V5LHZhbHVlKXt2YXIgZGF0YT10aGlzLl9fZGF0YV9fO3RoaXMuc2l6ZSs9dGhpcy5oYXMoa2V5KT8wOjE7ZGF0YVtrZXldPW5hdGl2ZUNyZWF0ZSYmdmFsdWU9PT11bmRlZmluZWQ/SEFTSF9VTkRFRklORUQ6dmFsdWU7cmV0dXJuIHRoaXN9bW9kdWxlLmV4cG9ydHM9aGFzaFNldH0seyIuL19uYXRpdmVDcmVhdGUiOjI2MX1dLDIzNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi8KdmFyIG9iamVjdFByb3RvPU9iamVjdC5wcm90b3R5cGU7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqCiAqIEluaXRpYWxpemVzIGFuIGFycmF5IGNsb25lLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gY2xvbmUuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY2xvbmUuCiAqL2Z1bmN0aW9uIGluaXRDbG9uZUFycmF5KGFycmF5KXt2YXIgbGVuZ3RoPWFycmF5Lmxlbmd0aCxyZXN1bHQ9bmV3IGFycmF5LmNvbnN0cnVjdG9yKGxlbmd0aCk7Ci8vIEFkZCBwcm9wZXJ0aWVzIGFzc2lnbmVkIGJ5IGBSZWdFeHAjZXhlY2AuCmlmKGxlbmd0aCYmdHlwZW9mIGFycmF5WzBdPT0ic3RyaW5nIiYmaGFzT3duUHJvcGVydHkuY2FsbChhcnJheSwiaW5kZXgiKSl7cmVzdWx0LmluZGV4PWFycmF5LmluZGV4O3Jlc3VsdC5pbnB1dD1hcnJheS5pbnB1dH1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPWluaXRDbG9uZUFycmF5fSx7fV0sMjM4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgY2xvbmVBcnJheUJ1ZmZlcj1yZXF1aXJlKCIuL19jbG9uZUFycmF5QnVmZmVyIiksY2xvbmVEYXRhVmlldz1yZXF1aXJlKCIuL19jbG9uZURhdGFWaWV3IiksY2xvbmVSZWdFeHA9cmVxdWlyZSgiLi9fY2xvbmVSZWdFeHAiKSxjbG9uZVN5bWJvbD1yZXF1aXJlKCIuL19jbG9uZVN5bWJvbCIpLGNsb25lVHlwZWRBcnJheT1yZXF1aXJlKCIuL19jbG9uZVR5cGVkQXJyYXkiKTsKLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL3ZhciBib29sVGFnPSJbb2JqZWN0IEJvb2xlYW5dIixkYXRlVGFnPSJbb2JqZWN0IERhdGVdIixtYXBUYWc9IltvYmplY3QgTWFwXSIsbnVtYmVyVGFnPSJbb2JqZWN0IE51bWJlcl0iLHJlZ2V4cFRhZz0iW29iamVjdCBSZWdFeHBdIixzZXRUYWc9IltvYmplY3QgU2V0XSIsc3RyaW5nVGFnPSJbb2JqZWN0IFN0cmluZ10iLHN5bWJvbFRhZz0iW29iamVjdCBTeW1ib2xdIjt2YXIgYXJyYXlCdWZmZXJUYWc9IltvYmplY3QgQXJyYXlCdWZmZXJdIixkYXRhVmlld1RhZz0iW29iamVjdCBEYXRhVmlld10iLGZsb2F0MzJUYWc9IltvYmplY3QgRmxvYXQzMkFycmF5XSIsZmxvYXQ2NFRhZz0iW29iamVjdCBGbG9hdDY0QXJyYXldIixpbnQ4VGFnPSJbb2JqZWN0IEludDhBcnJheV0iLGludDE2VGFnPSJbb2JqZWN0IEludDE2QXJyYXldIixpbnQzMlRhZz0iW29iamVjdCBJbnQzMkFycmF5XSIsdWludDhUYWc9IltvYmplY3QgVWludDhBcnJheV0iLHVpbnQ4Q2xhbXBlZFRhZz0iW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0iLHVpbnQxNlRhZz0iW29iamVjdCBVaW50MTZBcnJheV0iLHVpbnQzMlRhZz0iW29iamVjdCBVaW50MzJBcnJheV0iOwovKioKICogSW5pdGlhbGl6ZXMgYW4gb2JqZWN0IGNsb25lIGJhc2VkIG9uIGl0cyBgdG9TdHJpbmdUYWdgLgogKgogKiAqKk5vdGU6KiogVGhpcyBmdW5jdGlvbiBvbmx5IHN1cHBvcnRzIGNsb25pbmcgdmFsdWVzIHdpdGggdGFncyBvZgogKiBgQm9vbGVhbmAsIGBEYXRlYCwgYEVycm9yYCwgYE1hcGAsIGBOdW1iZXJgLCBgUmVnRXhwYCwgYFNldGAsIG9yIGBTdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2xvbmUuCiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGhlIGB0b1N0cmluZ1RhZ2Agb2YgdGhlIG9iamVjdCB0byBjbG9uZS4KICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY2xvbmUuCiAqL2Z1bmN0aW9uIGluaXRDbG9uZUJ5VGFnKG9iamVjdCx0YWcsaXNEZWVwKXt2YXIgQ3Rvcj1vYmplY3QuY29uc3RydWN0b3I7c3dpdGNoKHRhZyl7Y2FzZSBhcnJheUJ1ZmZlclRhZzpyZXR1cm4gY2xvbmVBcnJheUJ1ZmZlcihvYmplY3QpO2Nhc2UgYm9vbFRhZzpjYXNlIGRhdGVUYWc6cmV0dXJuIG5ldyBDdG9yKCtvYmplY3QpO2Nhc2UgZGF0YVZpZXdUYWc6cmV0dXJuIGNsb25lRGF0YVZpZXcob2JqZWN0LGlzRGVlcCk7Y2FzZSBmbG9hdDMyVGFnOmNhc2UgZmxvYXQ2NFRhZzpjYXNlIGludDhUYWc6Y2FzZSBpbnQxNlRhZzpjYXNlIGludDMyVGFnOmNhc2UgdWludDhUYWc6Y2FzZSB1aW50OENsYW1wZWRUYWc6Y2FzZSB1aW50MTZUYWc6Y2FzZSB1aW50MzJUYWc6cmV0dXJuIGNsb25lVHlwZWRBcnJheShvYmplY3QsaXNEZWVwKTtjYXNlIG1hcFRhZzpyZXR1cm4gbmV3IEN0b3I7Y2FzZSBudW1iZXJUYWc6Y2FzZSBzdHJpbmdUYWc6cmV0dXJuIG5ldyBDdG9yKG9iamVjdCk7Y2FzZSByZWdleHBUYWc6cmV0dXJuIGNsb25lUmVnRXhwKG9iamVjdCk7Y2FzZSBzZXRUYWc6cmV0dXJuIG5ldyBDdG9yO2Nhc2Ugc3ltYm9sVGFnOnJldHVybiBjbG9uZVN5bWJvbChvYmplY3QpfX1tb2R1bGUuZXhwb3J0cz1pbml0Q2xvbmVCeVRhZ30seyIuL19jbG9uZUFycmF5QnVmZmVyIjoxOTQsIi4vX2Nsb25lRGF0YVZpZXciOjE5NiwiLi9fY2xvbmVSZWdFeHAiOjE5NywiLi9fY2xvbmVTeW1ib2wiOjE5OCwiLi9fY2xvbmVUeXBlZEFycmF5IjoxOTl9XSwyMzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlQ3JlYXRlPXJlcXVpcmUoIi4vX2Jhc2VDcmVhdGUiKSxnZXRQcm90b3R5cGU9cmVxdWlyZSgiLi9fZ2V0UHJvdG90eXBlIiksaXNQcm90b3R5cGU9cmVxdWlyZSgiLi9faXNQcm90b3R5cGUiKTsKLyoqCiAqIEluaXRpYWxpemVzIGFuIG9iamVjdCBjbG9uZS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNsb25lLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBpbml0aWFsaXplZCBjbG9uZS4KICovZnVuY3Rpb24gaW5pdENsb25lT2JqZWN0KG9iamVjdCl7cmV0dXJuIHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3I9PSJmdW5jdGlvbiImJiFpc1Byb3RvdHlwZShvYmplY3QpP2Jhc2VDcmVhdGUoZ2V0UHJvdG90eXBlKG9iamVjdCkpOnt9fW1vZHVsZS5leHBvcnRzPWluaXRDbG9uZU9iamVjdH0seyIuL19iYXNlQ3JlYXRlIjoxNDEsIi4vX2dldFByb3RvdHlwZSI6MjI0LCIuL19pc1Byb3RvdHlwZSI6MjQ2fV0sMjQwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgU3ltYm9sPXJlcXVpcmUoIi4vX1N5bWJvbCIpLGlzQXJndW1lbnRzPXJlcXVpcmUoIi4vaXNBcmd1bWVudHMiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpOwovKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi92YXIgc3ByZWFkYWJsZVN5bWJvbD1TeW1ib2w/U3ltYm9sLmlzQ29uY2F0U3ByZWFkYWJsZTp1bmRlZmluZWQ7Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGZsYXR0ZW5hYmxlIGBhcmd1bWVudHNgIG9iamVjdCBvciBhcnJheS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGZsYXR0ZW5hYmxlLCBlbHNlIGBmYWxzZWAuCiAqL2Z1bmN0aW9uIGlzRmxhdHRlbmFibGUodmFsdWUpe3JldHVybiBpc0FycmF5KHZhbHVlKXx8aXNBcmd1bWVudHModmFsdWUpfHwhIShzcHJlYWRhYmxlU3ltYm9sJiZ2YWx1ZSYmdmFsdWVbc3ByZWFkYWJsZVN5bWJvbF0pfW1vZHVsZS5leHBvcnRzPWlzRmxhdHRlbmFibGV9LHsiLi9fU3ltYm9sIjoxMjAsIi4vaXNBcmd1bWVudHMiOjMwMiwiLi9pc0FycmF5IjozMDN9XSwyNDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi8KdmFyIE1BWF9TQUZFX0lOVEVHRVI9OTAwNzE5OTI1NDc0MDk5MTsKLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL3ZhciByZUlzVWludD0vXig/OjB8WzEtOV1cZCopJC87Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcGFyYW0ge251bWJlcn0gW2xlbmd0aD1NQVhfU0FGRV9JTlRFR0VSXSBUaGUgdXBwZXIgYm91bmRzIG9mIGEgdmFsaWQgaW5kZXguCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgaW5kZXgsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gaXNJbmRleCh2YWx1ZSxsZW5ndGgpe3ZhciB0eXBlPXR5cGVvZiB2YWx1ZTtsZW5ndGg9bGVuZ3RoPT1udWxsP01BWF9TQUZFX0lOVEVHRVI6bGVuZ3RoO3JldHVybiEhbGVuZ3RoJiYodHlwZT09Im51bWJlciJ8fHR5cGUhPSJzeW1ib2wiJiZyZUlzVWludC50ZXN0KHZhbHVlKSkmJih2YWx1ZT4tMSYmdmFsdWUlMT09MCYmdmFsdWU8bGVuZ3RoKX1tb2R1bGUuZXhwb3J0cz1pc0luZGV4fSx7fV0sMjQyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZXE9cmVxdWlyZSgiLi9lcSIpLGlzQXJyYXlMaWtlPXJlcXVpcmUoIi4vaXNBcnJheUxpa2UiKSxpc0luZGV4PXJlcXVpcmUoIi4vX2lzSW5kZXgiKSxpc09iamVjdD1yZXF1aXJlKCIuL2lzT2JqZWN0Iik7Ci8qKgogKiBDaGVja3MgaWYgdGhlIGdpdmVuIGFyZ3VtZW50cyBhcmUgZnJvbSBhbiBpdGVyYXRlZSBjYWxsLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgdmFsdWUgYXJndW1lbnQuCiAqIEBwYXJhbSB7Kn0gaW5kZXggVGhlIHBvdGVudGlhbCBpdGVyYXRlZSBpbmRleCBvciBrZXkgYXJndW1lbnQuCiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgb2JqZWN0IGFyZ3VtZW50LgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGFyZ3VtZW50cyBhcmUgZnJvbSBhbiBpdGVyYXRlZSBjYWxsLAogKiAgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBpc0l0ZXJhdGVlQ2FsbCh2YWx1ZSxpbmRleCxvYmplY3Qpe2lmKCFpc09iamVjdChvYmplY3QpKXtyZXR1cm4gZmFsc2V9dmFyIHR5cGU9dHlwZW9mIGluZGV4O2lmKHR5cGU9PSJudW1iZXIiP2lzQXJyYXlMaWtlKG9iamVjdCkmJmlzSW5kZXgoaW5kZXgsb2JqZWN0Lmxlbmd0aCk6dHlwZT09InN0cmluZyImJmluZGV4IGluIG9iamVjdCl7cmV0dXJuIGVxKG9iamVjdFtpbmRleF0sdmFsdWUpfXJldHVybiBmYWxzZX1tb2R1bGUuZXhwb3J0cz1pc0l0ZXJhdGVlQ2FsbH0seyIuL19pc0luZGV4IjoyNDEsIi4vZXEiOjI5MSwiLi9pc0FycmF5TGlrZSI6MzA0LCIuL2lzT2JqZWN0IjozMTF9XSwyNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpLGlzU3ltYm9sPXJlcXVpcmUoIi4vaXNTeW1ib2wiKTsKLyoqIFVzZWQgdG8gbWF0Y2ggcHJvcGVydHkgbmFtZXMgd2l0aGluIHByb3BlcnR5IHBhdGhzLiAqL3ZhciByZUlzRGVlcFByb3A9L1wufFxbKD86W15bXF1dKnwoWyInXSkoPzooPyFcMSlbXlxcXXxcXC4pKj9cMSlcXS8scmVJc1BsYWluUHJvcD0vXlx3KiQvOwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwcm9wZXJ0eSBuYW1lIGFuZCBub3QgYSBwcm9wZXJ0eSBwYXRoLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkga2V5cyBvbi4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBwcm9wZXJ0eSBuYW1lLCBlbHNlIGBmYWxzZWAuCiAqL2Z1bmN0aW9uIGlzS2V5KHZhbHVlLG9iamVjdCl7aWYoaXNBcnJheSh2YWx1ZSkpe3JldHVybiBmYWxzZX12YXIgdHlwZT10eXBlb2YgdmFsdWU7aWYodHlwZT09Im51bWJlciJ8fHR5cGU9PSJzeW1ib2wifHx0eXBlPT0iYm9vbGVhbiJ8fHZhbHVlPT1udWxsfHxpc1N5bWJvbCh2YWx1ZSkpe3JldHVybiB0cnVlfXJldHVybiByZUlzUGxhaW5Qcm9wLnRlc3QodmFsdWUpfHwhcmVJc0RlZXBQcm9wLnRlc3QodmFsdWUpfHxvYmplY3QhPW51bGwmJnZhbHVlIGluIE9iamVjdChvYmplY3QpfW1vZHVsZS5leHBvcnRzPWlzS2V5fSx7Ii4vaXNBcnJheSI6MzAzLCIuL2lzU3ltYm9sIjozMTZ9XSwyNDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHVzZSBhcyB1bmlxdWUgb2JqZWN0IGtleS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlLCBlbHNlIGBmYWxzZWAuCiAqLwpmdW5jdGlvbiBpc0tleWFibGUodmFsdWUpe3ZhciB0eXBlPXR5cGVvZiB2YWx1ZTtyZXR1cm4gdHlwZT09InN0cmluZyJ8fHR5cGU9PSJudW1iZXIifHx0eXBlPT0ic3ltYm9sInx8dHlwZT09ImJvb2xlYW4iP3ZhbHVlIT09Il9fcHJvdG9fXyI6dmFsdWU9PT1udWxsfW1vZHVsZS5leHBvcnRzPWlzS2V5YWJsZX0se31dLDI0NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGNvcmVKc0RhdGE9cmVxdWlyZSgiLi9fY29yZUpzRGF0YSIpOwovKiogVXNlZCB0byBkZXRlY3QgbWV0aG9kcyBtYXNxdWVyYWRpbmcgYXMgbmF0aXZlLiAqL3ZhciBtYXNrU3JjS2V5PWZ1bmN0aW9uKCl7dmFyIHVpZD0vW14uXSskLy5leGVjKGNvcmVKc0RhdGEmJmNvcmVKc0RhdGEua2V5cyYmY29yZUpzRGF0YS5rZXlzLklFX1BST1RPfHwiIik7cmV0dXJuIHVpZD8iU3ltYm9sKHNyYylfMS4iK3VpZDoiIn0oKTsKLyoqCiAqIENoZWNrcyBpZiBgZnVuY2AgaGFzIGl0cyBzb3VyY2UgbWFza2VkLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBmdW5jYCBpcyBtYXNrZWQsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gaXNNYXNrZWQoZnVuYyl7cmV0dXJuISFtYXNrU3JjS2V5JiZtYXNrU3JjS2V5IGluIGZ1bmN9bW9kdWxlLmV4cG9ydHM9aXNNYXNrZWR9LHsiLi9fY29yZUpzRGF0YSI6MjA2fV0sMjQ2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqLwp2YXIgb2JqZWN0UHJvdG89T2JqZWN0LnByb3RvdHlwZTsKLyoqCiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGxpa2VseSBhIHByb3RvdHlwZSBvYmplY3QuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSl7dmFyIEN0b3I9dmFsdWUmJnZhbHVlLmNvbnN0cnVjdG9yLHByb3RvPXR5cGVvZiBDdG9yPT0iZnVuY3Rpb24iJiZDdG9yLnByb3RvdHlwZXx8b2JqZWN0UHJvdG87cmV0dXJuIHZhbHVlPT09cHJvdG99bW9kdWxlLmV4cG9ydHM9aXNQcm90b3R5cGV9LHt9XSwyNDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBpc09iamVjdD1yZXF1aXJlKCIuL2lzT2JqZWN0Iik7Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaWYgc3VpdGFibGUgZm9yIHN0cmljdAogKiAgZXF1YWxpdHkgY29tcGFyaXNvbnMsIGVsc2UgYGZhbHNlYC4KICovZnVuY3Rpb24gaXNTdHJpY3RDb21wYXJhYmxlKHZhbHVlKXtyZXR1cm4gdmFsdWU9PT12YWx1ZSYmIWlzT2JqZWN0KHZhbHVlKX1tb2R1bGUuZXhwb3J0cz1pc1N0cmljdENvbXBhcmFibGV9LHsiLi9pc09iamVjdCI6MzExfV0sMjQ4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGxpc3QgY2FjaGUuCiAqCiAqIEBwcml2YXRlCiAqIEBuYW1lIGNsZWFyCiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGUKICovCmZ1bmN0aW9uIGxpc3RDYWNoZUNsZWFyKCl7dGhpcy5fX2RhdGFfXz1bXTt0aGlzLnNpemU9MH1tb2R1bGUuZXhwb3J0cz1saXN0Q2FjaGVDbGVhcn0se31dLDI0OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFzc29jSW5kZXhPZj1yZXF1aXJlKCIuL19hc3NvY0luZGV4T2YiKTsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL3ZhciBhcnJheVByb3RvPUFycmF5LnByb3RvdHlwZTsKLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovdmFyIHNwbGljZT1hcnJheVByb3RvLnNwbGljZTsKLyoqCiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBsaXN0IGNhY2hlLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBkZWxldGUKICogQG1lbWJlck9mIExpc3RDYWNoZQogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBsaXN0Q2FjaGVEZWxldGUoa2V5KXt2YXIgZGF0YT10aGlzLl9fZGF0YV9fLGluZGV4PWFzc29jSW5kZXhPZihkYXRhLGtleSk7aWYoaW5kZXg8MCl7cmV0dXJuIGZhbHNlfXZhciBsYXN0SW5kZXg9ZGF0YS5sZW5ndGgtMTtpZihpbmRleD09bGFzdEluZGV4KXtkYXRhLnBvcCgpfWVsc2V7c3BsaWNlLmNhbGwoZGF0YSxpbmRleCwxKX0tLXRoaXMuc2l6ZTtyZXR1cm4gdHJ1ZX1tb2R1bGUuZXhwb3J0cz1saXN0Q2FjaGVEZWxldGV9LHsiLi9fYXNzb2NJbmRleE9mIjoxMzZ9XSwyNTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhc3NvY0luZGV4T2Y9cmVxdWlyZSgiLi9fYXNzb2NJbmRleE9mIik7Ci8qKgogKiBHZXRzIHRoZSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YC4KICoKICogQHByaXZhdGUKICogQG5hbWUgZ2V0CiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGUKICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS4KICovZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSl7dmFyIGRhdGE9dGhpcy5fX2RhdGFfXyxpbmRleD1hc3NvY0luZGV4T2YoZGF0YSxrZXkpO3JldHVybiBpbmRleDwwP3VuZGVmaW5lZDpkYXRhW2luZGV4XVsxXX1tb2R1bGUuZXhwb3J0cz1saXN0Q2FjaGVHZXR9LHsiLi9fYXNzb2NJbmRleE9mIjoxMzZ9XSwyNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhc3NvY0luZGV4T2Y9cmVxdWlyZSgiLi9fYXNzb2NJbmRleE9mIik7Ci8qKgogKiBDaGVja3MgaWYgYSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YCBleGlzdHMuCiAqCiAqIEBwcml2YXRlCiAqIEBuYW1lIGhhcwogKiBAbWVtYmVyT2YgTGlzdENhY2hlCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuCiAqL2Z1bmN0aW9uIGxpc3RDYWNoZUhhcyhrZXkpe3JldHVybiBhc3NvY0luZGV4T2YodGhpcy5fX2RhdGFfXyxrZXkpPi0xfW1vZHVsZS5leHBvcnRzPWxpc3RDYWNoZUhhc30seyIuL19hc3NvY0luZGV4T2YiOjEzNn1dLDI1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFzc29jSW5kZXhPZj1yZXF1aXJlKCIuL19hc3NvY0luZGV4T2YiKTsKLyoqCiAqIFNldHMgdGhlIGxpc3QgY2FjaGUgYGtleWAgdG8gYHZhbHVlYC4KICoKICogQHByaXZhdGUKICogQG5hbWUgc2V0CiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGUKICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbGlzdCBjYWNoZSBpbnN0YW5jZS4KICovZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSx2YWx1ZSl7dmFyIGRhdGE9dGhpcy5fX2RhdGFfXyxpbmRleD1hc3NvY0luZGV4T2YoZGF0YSxrZXkpO2lmKGluZGV4PDApeysrdGhpcy5zaXplO2RhdGEucHVzaChba2V5LHZhbHVlXSl9ZWxzZXtkYXRhW2luZGV4XVsxXT12YWx1ZX1yZXR1cm4gdGhpc31tb2R1bGUuZXhwb3J0cz1saXN0Q2FjaGVTZXR9LHsiLi9fYXNzb2NJbmRleE9mIjoxMzZ9XSwyNTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBIYXNoPXJlcXVpcmUoIi4vX0hhc2giKSxMaXN0Q2FjaGU9cmVxdWlyZSgiLi9fTGlzdENhY2hlIiksTWFwPXJlcXVpcmUoIi4vX01hcCIpOwovKioKICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbWFwLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBjbGVhcgogKiBAbWVtYmVyT2YgTWFwQ2FjaGUKICovZnVuY3Rpb24gbWFwQ2FjaGVDbGVhcigpe3RoaXMuc2l6ZT0wO3RoaXMuX19kYXRhX189e2hhc2g6bmV3IEhhc2gsbWFwOm5ldyhNYXB8fExpc3RDYWNoZSksc3RyaW5nOm5ldyBIYXNofX1tb2R1bGUuZXhwb3J0cz1tYXBDYWNoZUNsZWFyfSx7Ii4vX0hhc2giOjExMiwiLi9fTGlzdENhY2hlIjoxMTMsIi4vX01hcCI6MTE0fV0sMjU0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZ2V0TWFwRGF0YT1yZXF1aXJlKCIuL19nZXRNYXBEYXRhIik7Ci8qKgogKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbWFwLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBkZWxldGUKICogQG1lbWJlck9mIE1hcENhY2hlCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuCiAqL2Z1bmN0aW9uIG1hcENhY2hlRGVsZXRlKGtleSl7dmFyIHJlc3VsdD1nZXRNYXBEYXRhKHRoaXMsa2V5KVsiZGVsZXRlIl0oa2V5KTt0aGlzLnNpemUtPXJlc3VsdD8xOjA7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1tYXBDYWNoZURlbGV0ZX0seyIuL19nZXRNYXBEYXRhIjoyMjF9XSwyNTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBnZXRNYXBEYXRhPXJlcXVpcmUoIi4vX2dldE1hcERhdGEiKTsKLyoqCiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuCiAqCiAqIEBwcml2YXRlCiAqIEBuYW1lIGdldAogKiBAbWVtYmVyT2YgTWFwQ2FjaGUKICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS4KICovZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KXtyZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLGtleSkuZ2V0KGtleSl9bW9kdWxlLmV4cG9ydHM9bWFwQ2FjaGVHZXR9LHsiLi9fZ2V0TWFwRGF0YSI6MjIxfV0sMjU2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZ2V0TWFwRGF0YT1yZXF1aXJlKCIuL19nZXRNYXBEYXRhIik7Ci8qKgogKiBDaGVja3MgaWYgYSBtYXAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy4KICoKICogQHByaXZhdGUKICogQG5hbWUgaGFzCiAqIEBtZW1iZXJPZiBNYXBDYWNoZQogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLgogKi9mdW5jdGlvbiBtYXBDYWNoZUhhcyhrZXkpe3JldHVybiBnZXRNYXBEYXRhKHRoaXMsa2V5KS5oYXMoa2V5KX1tb2R1bGUuZXhwb3J0cz1tYXBDYWNoZUhhc30seyIuL19nZXRNYXBEYXRhIjoyMjF9XSwyNTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBnZXRNYXBEYXRhPXJlcXVpcmUoIi4vX2dldE1hcERhdGEiKTsKLyoqCiAqIFNldHMgdGhlIG1hcCBga2V5YCB0byBgdmFsdWVgLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBzZXQKICogQG1lbWJlck9mIE1hcENhY2hlCiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LgogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG1hcCBjYWNoZSBpbnN0YW5jZS4KICovZnVuY3Rpb24gbWFwQ2FjaGVTZXQoa2V5LHZhbHVlKXt2YXIgZGF0YT1nZXRNYXBEYXRhKHRoaXMsa2V5KSxzaXplPWRhdGEuc2l6ZTtkYXRhLnNldChrZXksdmFsdWUpO3RoaXMuc2l6ZSs9ZGF0YS5zaXplPT1zaXplPzA6MTtyZXR1cm4gdGhpc31tb2R1bGUuZXhwb3J0cz1tYXBDYWNoZVNldH0seyIuL19nZXRNYXBEYXRhIjoyMjF9XSwyNTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ29udmVydHMgYG1hcGAgdG8gaXRzIGtleS12YWx1ZSBwYWlycy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIGNvbnZlcnQuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUga2V5LXZhbHVlIHBhaXJzLgogKi8KZnVuY3Rpb24gbWFwVG9BcnJheShtYXApe3ZhciBpbmRleD0tMSxyZXN1bHQ9QXJyYXkobWFwLnNpemUpO21hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLGtleSl7cmVzdWx0WysraW5kZXhdPVtrZXksdmFsdWVdfSk7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1tYXBUb0FycmF5fSx7fV0sMjU5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgbWF0Y2hlc1Byb3BlcnR5YCBmb3Igc291cmNlIHZhbHVlcyBzdWl0YWJsZQogKiBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC4KICogQHBhcmFtIHsqfSBzcmNWYWx1ZSBUaGUgdmFsdWUgdG8gbWF0Y2guCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNwZWMgZnVuY3Rpb24uCiAqLwpmdW5jdGlvbiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZShrZXksc3JjVmFsdWUpe3JldHVybiBmdW5jdGlvbihvYmplY3Qpe2lmKG9iamVjdD09bnVsbCl7cmV0dXJuIGZhbHNlfXJldHVybiBvYmplY3Rba2V5XT09PXNyY1ZhbHVlJiYoc3JjVmFsdWUhPT11bmRlZmluZWR8fGtleSBpbiBPYmplY3Qob2JqZWN0KSl9fW1vZHVsZS5leHBvcnRzPW1hdGNoZXNTdHJpY3RDb21wYXJhYmxlfSx7fV0sMjYwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgbWVtb2l6ZT1yZXF1aXJlKCIuL21lbW9pemUiKTsKLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqL3ZhciBNQVhfTUVNT0laRV9TSVpFPTUwMDsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5tZW1vaXplYCB3aGljaCBjbGVhcnMgdGhlIG1lbW9pemVkIGZ1bmN0aW9uJ3MKICogY2FjaGUgd2hlbiBpdCBleGNlZWRzIGBNQVhfTUVNT0laRV9TSVpFYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLgogKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi4KICovZnVuY3Rpb24gbWVtb2l6ZUNhcHBlZChmdW5jKXt2YXIgcmVzdWx0PW1lbW9pemUoZnVuYyxmdW5jdGlvbihrZXkpe2lmKGNhY2hlLnNpemU9PT1NQVhfTUVNT0laRV9TSVpFKXtjYWNoZS5jbGVhcigpfXJldHVybiBrZXl9KTt2YXIgY2FjaGU9cmVzdWx0LmNhY2hlO3JldHVybiByZXN1bHR9bW9kdWxlLmV4cG9ydHM9bWVtb2l6ZUNhcHBlZH0seyIuL21lbW9pemUiOjMyNX1dLDI2MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGdldE5hdGl2ZT1yZXF1aXJlKCIuL19nZXROYXRpdmUiKTsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL3ZhciBuYXRpdmVDcmVhdGU9Z2V0TmF0aXZlKE9iamVjdCwiY3JlYXRlIik7bW9kdWxlLmV4cG9ydHM9bmF0aXZlQ3JlYXRlfSx7Ii4vX2dldE5hdGl2ZSI6MjIzfV0sMjYyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgb3ZlckFyZz1yZXF1aXJlKCIuL19vdmVyQXJnIik7Ci8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi92YXIgbmF0aXZlS2V5cz1vdmVyQXJnKE9iamVjdC5rZXlzLE9iamVjdCk7bW9kdWxlLmV4cG9ydHM9bmF0aXZlS2V5c30seyIuL19vdmVyQXJnIjoyNjZ9XSwyNjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhpcyBmdW5jdGlvbiBpcyBsaWtlCiAqIFtgT2JqZWN0LmtleXNgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cykKICogZXhjZXB0IHRoYXQgaXQgaW5jbHVkZXMgaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydGllcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLgogKi8KZnVuY3Rpb24gbmF0aXZlS2V5c0luKG9iamVjdCl7dmFyIHJlc3VsdD1bXTtpZihvYmplY3QhPW51bGwpe2Zvcih2YXIga2V5IGluIE9iamVjdChvYmplY3QpKXtyZXN1bHQucHVzaChrZXkpfX1yZXR1cm4gcmVzdWx0fW1vZHVsZS5leHBvcnRzPW5hdGl2ZUtleXNJbn0se31dLDI2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGZyZWVHbG9iYWw9cmVxdWlyZSgiLi9fZnJlZUdsb2JhbCIpOwovKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL3ZhciBmcmVlRXhwb3J0cz10eXBlb2YgZXhwb3J0cz09Im9iamVjdCImJmV4cG9ydHMmJiFleHBvcnRzLm5vZGVUeXBlJiZleHBvcnRzOwovKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovdmFyIGZyZWVNb2R1bGU9ZnJlZUV4cG9ydHMmJnR5cGVvZiBtb2R1bGU9PSJvYmplY3QiJiZtb2R1bGUmJiFtb2R1bGUubm9kZVR5cGUmJm1vZHVsZTsKLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi92YXIgbW9kdWxlRXhwb3J0cz1mcmVlTW9kdWxlJiZmcmVlTW9kdWxlLmV4cG9ydHM9PT1mcmVlRXhwb3J0czsKLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBwcm9jZXNzYCBmcm9tIE5vZGUuanMuICovdmFyIGZyZWVQcm9jZXNzPW1vZHVsZUV4cG9ydHMmJmZyZWVHbG9iYWwucHJvY2VzczsKLyoqIFVzZWQgdG8gYWNjZXNzIGZhc3RlciBOb2RlLmpzIGhlbHBlcnMuICovdmFyIG5vZGVVdGlsPWZ1bmN0aW9uKCl7dHJ5ewovLyBVc2UgYHV0aWwudHlwZXNgIGZvciBOb2RlLmpzIDEwKy4KdmFyIHR5cGVzPWZyZWVNb2R1bGUmJmZyZWVNb2R1bGUucmVxdWlyZSYmZnJlZU1vZHVsZS5yZXF1aXJlKCJ1dGlsIikudHlwZXM7aWYodHlwZXMpe3JldHVybiB0eXBlc30KLy8gTGVnYWN5IGBwcm9jZXNzLmJpbmRpbmcoJ3V0aWwnKWAgZm9yIE5vZGUuanMgPCAxMC4KcmV0dXJuIGZyZWVQcm9jZXNzJiZmcmVlUHJvY2Vzcy5iaW5kaW5nJiZmcmVlUHJvY2Vzcy5iaW5kaW5nKCJ1dGlsIil9Y2F0Y2goZSl7fX0oKTttb2R1bGUuZXhwb3J0cz1ub2RlVXRpbH0seyIuL19mcmVlR2xvYmFsIjoyMTh9XSwyNjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovCnZhciBvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKioKICogVXNlZCB0byByZXNvbHZlIHRoZQogKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZykKICogb2YgdmFsdWVzLgogKi92YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmc9b2JqZWN0UHJvdG8udG9TdHJpbmc7Ci8qKgogKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIHVzaW5nIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC4KICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy4KICovZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpe3JldHVybiBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKX1tb2R1bGUuZXhwb3J0cz1vYmplY3RUb1N0cmluZ30se31dLDI2NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBDcmVhdGVzIGEgdW5hcnkgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCB3aXRoIGl0cyBhcmd1bWVudCB0cmFuc2Zvcm1lZC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gd3JhcC4KICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtIFRoZSBhcmd1bWVudCB0cmFuc2Zvcm0uCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLgogKi8KZnVuY3Rpb24gb3ZlckFyZyhmdW5jLHRyYW5zZm9ybSl7cmV0dXJuIGZ1bmN0aW9uKGFyZyl7cmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpfX1tb2R1bGUuZXhwb3J0cz1vdmVyQXJnfSx7fV0sMjY3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYXBwbHk9cmVxdWlyZSgiLi9fYXBwbHkiKTsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL3ZhciBuYXRpdmVNYXg9TWF0aC5tYXg7Ci8qKgogKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VSZXN0YCB3aGljaCB0cmFuc2Zvcm1zIHRoZSByZXN0IGFycmF5LgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBhcHBseSBhIHJlc3QgcGFyYW1ldGVyIHRvLgogKiBAcGFyYW0ge251bWJlcn0gW3N0YXJ0PWZ1bmMubGVuZ3RoLTFdIFRoZSBzdGFydCBwb3NpdGlvbiBvZiB0aGUgcmVzdCBwYXJhbWV0ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgcmVzdCBhcnJheSB0cmFuc2Zvcm0uCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLgogKi9mdW5jdGlvbiBvdmVyUmVzdChmdW5jLHN0YXJ0LHRyYW5zZm9ybSl7c3RhcnQ9bmF0aXZlTWF4KHN0YXJ0PT09dW5kZWZpbmVkP2Z1bmMubGVuZ3RoLTE6c3RhcnQsMCk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGFyZ3M9YXJndW1lbnRzLGluZGV4PS0xLGxlbmd0aD1uYXRpdmVNYXgoYXJncy5sZW5ndGgtc3RhcnQsMCksYXJyYXk9QXJyYXkobGVuZ3RoKTt3aGlsZSgrK2luZGV4PGxlbmd0aCl7YXJyYXlbaW5kZXhdPWFyZ3Nbc3RhcnQraW5kZXhdfWluZGV4PS0xO3ZhciBvdGhlckFyZ3M9QXJyYXkoc3RhcnQrMSk7d2hpbGUoKytpbmRleDxzdGFydCl7b3RoZXJBcmdzW2luZGV4XT1hcmdzW2luZGV4XX1vdGhlckFyZ3Nbc3RhcnRdPXRyYW5zZm9ybShhcnJheSk7cmV0dXJuIGFwcGx5KGZ1bmMsdGhpcyxvdGhlckFyZ3MpfX1tb2R1bGUuZXhwb3J0cz1vdmVyUmVzdH0seyIuL19hcHBseSI6MTIzfV0sMjY4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgZnJlZUdsb2JhbD1yZXF1aXJlKCIuL19mcmVlR2xvYmFsIik7Ci8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovdmFyIGZyZWVTZWxmPXR5cGVvZiBzZWxmPT0ib2JqZWN0IiYmc2VsZiYmc2VsZi5PYmplY3Q9PT1PYmplY3QmJnNlbGY7Ci8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0LiAqL3ZhciByb290PWZyZWVHbG9iYWx8fGZyZWVTZWxmfHxGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpO21vZHVsZS5leHBvcnRzPXJvb3R9LHsiLi9fZnJlZUdsb2JhbCI6MjE4fV0sMjY5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIEdldHMgdGhlIHZhbHVlIGF0IGBrZXlgLCB1bmxlc3MgYGtleWAgaXMgIl9fcHJvdG9fXyIgb3IgImNvbnN0cnVjdG9yIi4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHByb3BlcnR5IHZhbHVlLgogKi8KZnVuY3Rpb24gc2FmZUdldChvYmplY3Qsa2V5KXtpZihrZXk9PT0iY29uc3RydWN0b3IiJiZ0eXBlb2Ygb2JqZWN0W2tleV09PT0iZnVuY3Rpb24iKXtyZXR1cm59aWYoa2V5PT0iX19wcm90b19fIil7cmV0dXJufXJldHVybiBvYmplY3Rba2V5XX1tb2R1bGUuZXhwb3J0cz1zYWZlR2V0fSx7fV0sMjcwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqLwp2YXIgSEFTSF9VTkRFRklORUQ9Il9fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18iOwovKioKICogQWRkcyBgdmFsdWVgIHRvIHRoZSBhcnJheSBjYWNoZS4KICoKICogQHByaXZhdGUKICogQG5hbWUgYWRkCiAqIEBtZW1iZXJPZiBTZXRDYWNoZQogKiBAYWxpYXMgcHVzaAogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjYWNoZS4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2FjaGUgaW5zdGFuY2UuCiAqL2Z1bmN0aW9uIHNldENhY2hlQWRkKHZhbHVlKXt0aGlzLl9fZGF0YV9fLnNldCh2YWx1ZSxIQVNIX1VOREVGSU5FRCk7cmV0dXJuIHRoaXN9bW9kdWxlLmV4cG9ydHM9c2V0Q2FjaGVBZGR9LHt9XSwyNzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgaW4gdGhlIGFycmF5IGNhY2hlLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBoYXMKICogQG1lbWJlck9mIFNldENhY2hlCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuCiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC4KICovCmZ1bmN0aW9uIHNldENhY2hlSGFzKHZhbHVlKXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXModmFsdWUpfW1vZHVsZS5leHBvcnRzPXNldENhY2hlSGFzfSx7fV0sMjcyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIENvbnZlcnRzIGBzZXRgIHRvIGFuIGFycmF5IG9mIGl0cyB2YWx1ZXMuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBzZXQgVGhlIHNldCB0byBjb252ZXJ0LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHZhbHVlcy4KICovCmZ1bmN0aW9uIHNldFRvQXJyYXkoc2V0KXt2YXIgaW5kZXg9LTEscmVzdWx0PUFycmF5KHNldC5zaXplKTtzZXQuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSl7cmVzdWx0WysraW5kZXhdPXZhbHVlfSk7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1zZXRUb0FycmF5fSx7fV0sMjczOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVNldFRvU3RyaW5nPXJlcXVpcmUoIi4vX2Jhc2VTZXRUb1N0cmluZyIpLHNob3J0T3V0PXJlcXVpcmUoIi4vX3Nob3J0T3V0Iik7Ci8qKgogKiBTZXRzIHRoZSBgdG9TdHJpbmdgIG1ldGhvZCBvZiBgZnVuY2AgdG8gcmV0dXJuIGBzdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBtb2RpZnkuCiAqIEBwYXJhbSB7RnVuY3Rpb259IHN0cmluZyBUaGUgYHRvU3RyaW5nYCByZXN1bHQuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyBgZnVuY2AuCiAqL3ZhciBzZXRUb1N0cmluZz1zaG9ydE91dChiYXNlU2V0VG9TdHJpbmcpO21vZHVsZS5leHBvcnRzPXNldFRvU3RyaW5nfSx7Ii4vX2Jhc2VTZXRUb1N0cmluZyI6MTgzLCIuL19zaG9ydE91dCI6Mjc0fV0sMjc0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqIFVzZWQgdG8gZGV0ZWN0IGhvdCBmdW5jdGlvbnMgYnkgbnVtYmVyIG9mIGNhbGxzIHdpdGhpbiBhIHNwYW4gb2YgbWlsbGlzZWNvbmRzLiAqLwp2YXIgSE9UX0NPVU5UPTgwMCxIT1RfU1BBTj0xNjsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL3ZhciBuYXRpdmVOb3c9RGF0ZS5ub3c7Ci8qKgogKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCdsbCBzaG9ydCBvdXQgYW5kIGludm9rZSBgaWRlbnRpdHlgIGluc3RlYWQKICogb2YgYGZ1bmNgIHdoZW4gaXQncyBjYWxsZWQgYEhPVF9DT1VOVGAgb3IgbW9yZSB0aW1lcyBpbiBgSE9UX1NQQU5gCiAqIG1pbGxpc2Vjb25kcy4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gcmVzdHJpY3QuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNob3J0YWJsZSBmdW5jdGlvbi4KICovZnVuY3Rpb24gc2hvcnRPdXQoZnVuYyl7dmFyIGNvdW50PTAsbGFzdENhbGxlZD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBzdGFtcD1uYXRpdmVOb3coKSxyZW1haW5pbmc9SE9UX1NQQU4tKHN0YW1wLWxhc3RDYWxsZWQpO2xhc3RDYWxsZWQ9c3RhbXA7aWYocmVtYWluaW5nPjApe2lmKCsrY291bnQ+PUhPVF9DT1VOVCl7cmV0dXJuIGFyZ3VtZW50c1swXX19ZWxzZXtjb3VudD0wfXJldHVybiBmdW5jLmFwcGx5KHVuZGVmaW5lZCxhcmd1bWVudHMpfX1tb2R1bGUuZXhwb3J0cz1zaG9ydE91dH0se31dLDI3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIExpc3RDYWNoZT1yZXF1aXJlKCIuL19MaXN0Q2FjaGUiKTsKLyoqCiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIHN0YWNrLgogKgogKiBAcHJpdmF0ZQogKiBAbmFtZSBjbGVhcgogKiBAbWVtYmVyT2YgU3RhY2sKICovZnVuY3Rpb24gc3RhY2tDbGVhcigpe3RoaXMuX19kYXRhX189bmV3IExpc3RDYWNoZTt0aGlzLnNpemU9MH1tb2R1bGUuZXhwb3J0cz1zdGFja0NsZWFyfSx7Ii4vX0xpc3RDYWNoZSI6MTEzfV0sMjc2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBzdGFjay4KICoKICogQHByaXZhdGUKICogQG5hbWUgZGVsZXRlCiAqIEBtZW1iZXJPZiBTdGFjawogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLgogKi8KZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KXt2YXIgZGF0YT10aGlzLl9fZGF0YV9fLHJlc3VsdD1kYXRhWyJkZWxldGUiXShrZXkpO3RoaXMuc2l6ZT1kYXRhLnNpemU7cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz1zdGFja0RlbGV0ZX0se31dLDI3NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBHZXRzIHRoZSBzdGFjayB2YWx1ZSBmb3IgYGtleWAuCiAqCiAqIEBwcml2YXRlCiAqIEBuYW1lIGdldAogKiBAbWVtYmVyT2YgU3RhY2sKICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS4KICovCmZ1bmN0aW9uIHN0YWNrR2V0KGtleSl7cmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSl9bW9kdWxlLmV4cG9ydHM9c3RhY2tHZXR9LHt9XSwyNzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ2hlY2tzIGlmIGEgc3RhY2sgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy4KICoKICogQHByaXZhdGUKICogQG5hbWUgaGFzCiAqIEBtZW1iZXJPZiBTdGFjawogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLgogKi8KZnVuY3Rpb24gc3RhY2tIYXMoa2V5KXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXMoa2V5KX1tb2R1bGUuZXhwb3J0cz1zdGFja0hhc30se31dLDI3OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIExpc3RDYWNoZT1yZXF1aXJlKCIuL19MaXN0Q2FjaGUiKSxNYXA9cmVxdWlyZSgiLi9fTWFwIiksTWFwQ2FjaGU9cmVxdWlyZSgiLi9fTWFwQ2FjaGUiKTsKLyoqIFVzZWQgYXMgdGhlIHNpemUgdG8gZW5hYmxlIGxhcmdlIGFycmF5IG9wdGltaXphdGlvbnMuICovdmFyIExBUkdFX0FSUkFZX1NJWkU9MjAwOwovKioKICogU2V0cyB0aGUgc3RhY2sgYGtleWAgdG8gYHZhbHVlYC4KICoKICogQHByaXZhdGUKICogQG5hbWUgc2V0CiAqIEBtZW1iZXJPZiBTdGFjawogKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC4KICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBzdGFjayBjYWNoZSBpbnN0YW5jZS4KICovZnVuY3Rpb24gc3RhY2tTZXQoa2V5LHZhbHVlKXt2YXIgZGF0YT10aGlzLl9fZGF0YV9fO2lmKGRhdGEgaW5zdGFuY2VvZiBMaXN0Q2FjaGUpe3ZhciBwYWlycz1kYXRhLl9fZGF0YV9fO2lmKCFNYXB8fHBhaXJzLmxlbmd0aDxMQVJHRV9BUlJBWV9TSVpFLTEpe3BhaXJzLnB1c2goW2tleSx2YWx1ZV0pO3RoaXMuc2l6ZT0rK2RhdGEuc2l6ZTtyZXR1cm4gdGhpc31kYXRhPXRoaXMuX19kYXRhX189bmV3IE1hcENhY2hlKHBhaXJzKX1kYXRhLnNldChrZXksdmFsdWUpO3RoaXMuc2l6ZT1kYXRhLnNpemU7cmV0dXJuIHRoaXN9bW9kdWxlLmV4cG9ydHM9c3RhY2tTZXR9LHsiLi9fTGlzdENhY2hlIjoxMTMsIi4vX01hcCI6MTE0LCIuL19NYXBDYWNoZSI6MTE1fV0sMjgwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5pbmRleE9mYCB3aGljaCBwZXJmb3JtcyBzdHJpY3QgZXF1YWxpdHkKICogY29tcGFyaXNvbnMgb2YgdmFsdWVzLCBpLmUuIGA9PT1gLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC4KICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci4KICogQHBhcmFtIHtudW1iZXJ9IGZyb21JbmRleCBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uCiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuCiAqLwpmdW5jdGlvbiBzdHJpY3RJbmRleE9mKGFycmF5LHZhbHVlLGZyb21JbmRleCl7dmFyIGluZGV4PWZyb21JbmRleC0xLGxlbmd0aD1hcnJheS5sZW5ndGg7d2hpbGUoKytpbmRleDxsZW5ndGgpe2lmKGFycmF5W2luZGV4XT09PXZhbHVlKXtyZXR1cm4gaW5kZXh9fXJldHVybi0xfW1vZHVsZS5leHBvcnRzPXN0cmljdEluZGV4T2Z9LHt9XSwyODE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhc2NpaVNpemU9cmVxdWlyZSgiLi9fYXNjaWlTaXplIiksaGFzVW5pY29kZT1yZXF1aXJlKCIuL19oYXNVbmljb2RlIiksdW5pY29kZVNpemU9cmVxdWlyZSgiLi9fdW5pY29kZVNpemUiKTsKLyoqCiAqIEdldHMgdGhlIG51bWJlciBvZiBzeW1ib2xzIGluIGBzdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gaW5zcGVjdC4KICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc3RyaW5nIHNpemUuCiAqL2Z1bmN0aW9uIHN0cmluZ1NpemUoc3RyaW5nKXtyZXR1cm4gaGFzVW5pY29kZShzdHJpbmcpP3VuaWNvZGVTaXplKHN0cmluZyk6YXNjaWlTaXplKHN0cmluZyl9bW9kdWxlLmV4cG9ydHM9c3RyaW5nU2l6ZX0seyIuL19hc2NpaVNpemUiOjEzMywiLi9faGFzVW5pY29kZSI6MjMxLCIuL191bmljb2RlU2l6ZSI6Mjg1fV0sMjgyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgbWVtb2l6ZUNhcHBlZD1yZXF1aXJlKCIuL19tZW1vaXplQ2FwcGVkIik7Ci8qKiBVc2VkIHRvIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBwcm9wZXJ0eSBwYXRocy4gKi92YXIgcmVQcm9wTmFtZT0vW14uW1xdXSt8XFsoPzooLT9cZCsoPzpcLlxkKyk/KXwoWyInXSkoKD86KD8hXDIpW15cXF18XFwuKSo/KVwyKVxdfCg/PSg/OlwufFxbXF0pKD86XC58XFtcXXwkKSkvZzsKLyoqIFVzZWQgdG8gbWF0Y2ggYmFja3NsYXNoZXMgaW4gcHJvcGVydHkgcGF0aHMuICovdmFyIHJlRXNjYXBlQ2hhcj0vXFwoXFwpPy9nOwovKioKICogQ29udmVydHMgYHN0cmluZ2AgdG8gYSBwcm9wZXJ0eSBwYXRoIGFycmF5LgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gY29udmVydC4KICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBwcm9wZXJ0eSBwYXRoIGFycmF5LgogKi92YXIgc3RyaW5nVG9QYXRoPW1lbW9pemVDYXBwZWQoZnVuY3Rpb24oc3RyaW5nKXt2YXIgcmVzdWx0PVtdO2lmKHN0cmluZy5jaGFyQ29kZUF0KDApPT09NDYvKiAuICovKXtyZXN1bHQucHVzaCgiIil9c3RyaW5nLnJlcGxhY2UocmVQcm9wTmFtZSxmdW5jdGlvbihtYXRjaCxudW1iZXIscXVvdGUsc3ViU3RyaW5nKXtyZXN1bHQucHVzaChxdW90ZT9zdWJTdHJpbmcucmVwbGFjZShyZUVzY2FwZUNoYXIsIiQxIik6bnVtYmVyfHxtYXRjaCl9KTtyZXR1cm4gcmVzdWx0fSk7bW9kdWxlLmV4cG9ydHM9c3RyaW5nVG9QYXRofSx7Ii4vX21lbW9pemVDYXBwZWQiOjI2MH1dLDI4MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGlzU3ltYm9sPXJlcXVpcmUoIi4vaXNTeW1ib2wiKTsKLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovdmFyIElORklOSVRZPTEvMDsKLyoqCiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcga2V5IGlmIGl0J3Mgbm90IGEgc3RyaW5nIG9yIHN5bWJvbC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC4KICogQHJldHVybnMge3N0cmluZ3xzeW1ib2x9IFJldHVybnMgdGhlIGtleS4KICovZnVuY3Rpb24gdG9LZXkodmFsdWUpe2lmKHR5cGVvZiB2YWx1ZT09InN0cmluZyJ8fGlzU3ltYm9sKHZhbHVlKSl7cmV0dXJuIHZhbHVlfXZhciByZXN1bHQ9dmFsdWUrIiI7cmV0dXJuIHJlc3VsdD09IjAiJiYxL3ZhbHVlPT0tSU5GSU5JVFk/Ii0wIjpyZXN1bHR9bW9kdWxlLmV4cG9ydHM9dG9LZXl9LHsiLi9pc1N5bWJvbCI6MzE2fV0sMjg0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqLwp2YXIgZnVuY1Byb3RvPUZ1bmN0aW9uLnByb3RvdHlwZTsKLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL3ZhciBmdW5jVG9TdHJpbmc9ZnVuY1Byb3RvLnRvU3RyaW5nOwovKioKICogQ29udmVydHMgYGZ1bmNgIHRvIGl0cyBzb3VyY2UgY29kZS4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY29udmVydC4KICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuCiAqL2Z1bmN0aW9uIHRvU291cmNlKGZ1bmMpe2lmKGZ1bmMhPW51bGwpe3RyeXtyZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyl9Y2F0Y2goZSl7fXRyeXtyZXR1cm4gZnVuYysiIn1jYXRjaChlKXt9fXJldHVybiIifW1vZHVsZS5leHBvcnRzPXRvU291cmNlfSx7fV0sMjg1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqIFVzZWQgdG8gY29tcG9zZSB1bmljb2RlIGNoYXJhY3RlciBjbGFzc2VzLiAqLwp2YXIgcnNBc3RyYWxSYW5nZT0iXFx1ZDgwMC1cXHVkZmZmIixyc0NvbWJvTWFya3NSYW5nZT0iXFx1MDMwMC1cXHUwMzZmIixyZUNvbWJvSGFsZk1hcmtzUmFuZ2U9IlxcdWZlMjAtXFx1ZmUyZiIscnNDb21ib1N5bWJvbHNSYW5nZT0iXFx1MjBkMC1cXHUyMGZmIixyc0NvbWJvUmFuZ2U9cnNDb21ib01hcmtzUmFuZ2UrcmVDb21ib0hhbGZNYXJrc1JhbmdlK3JzQ29tYm9TeW1ib2xzUmFuZ2UscnNWYXJSYW5nZT0iXFx1ZmUwZVxcdWZlMGYiOwovKiogVXNlZCB0byBjb21wb3NlIHVuaWNvZGUgY2FwdHVyZSBncm91cHMuICovdmFyIHJzQXN0cmFsPSJbIityc0FzdHJhbFJhbmdlKyJdIixyc0NvbWJvPSJbIityc0NvbWJvUmFuZ2UrIl0iLHJzRml0ej0iXFx1ZDgzY1tcXHVkZmZiLVxcdWRmZmZdIixyc01vZGlmaWVyPSIoPzoiK3JzQ29tYm8rInwiK3JzRml0eisiKSIscnNOb25Bc3RyYWw9IlteIityc0FzdHJhbFJhbmdlKyJdIixyc1JlZ2lvbmFsPSIoPzpcXHVkODNjW1xcdWRkZTYtXFx1ZGRmZl0pezJ9Iixyc1N1cnJQYWlyPSJbXFx1ZDgwMC1cXHVkYmZmXVtcXHVkYzAwLVxcdWRmZmZdIixyc1pXSj0iXFx1MjAwZCI7Ci8qKiBVc2VkIHRvIGNvbXBvc2UgdW5pY29kZSByZWdleGVzLiAqL3ZhciByZU9wdE1vZD1yc01vZGlmaWVyKyI/Iixyc09wdFZhcj0iWyIrcnNWYXJSYW5nZSsiXT8iLHJzT3B0Sm9pbj0iKD86Iityc1pXSisiKD86IitbcnNOb25Bc3RyYWwscnNSZWdpb25hbCxyc1N1cnJQYWlyXS5qb2luKCJ8IikrIikiK3JzT3B0VmFyK3JlT3B0TW9kKyIpKiIscnNTZXE9cnNPcHRWYXIrcmVPcHRNb2QrcnNPcHRKb2luLHJzU3ltYm9sPSIoPzoiK1tyc05vbkFzdHJhbCtyc0NvbWJvKyI/Iixyc0NvbWJvLHJzUmVnaW9uYWwscnNTdXJyUGFpcixyc0FzdHJhbF0uam9pbigifCIpKyIpIjsKLyoqIFVzZWQgdG8gbWF0Y2ggW3N0cmluZyBzeW1ib2xzXShodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC11bmljb2RlKS4gKi92YXIgcmVVbmljb2RlPVJlZ0V4cChyc0ZpdHorIig/PSIrcnNGaXR6KyIpfCIrcnNTeW1ib2wrcnNTZXEsImciKTsKLyoqCiAqIEdldHMgdGhlIHNpemUgb2YgYSBVbmljb2RlIGBzdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgaW5zcGVjdC4KICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc3RyaW5nIHNpemUuCiAqL2Z1bmN0aW9uIHVuaWNvZGVTaXplKHN0cmluZyl7dmFyIHJlc3VsdD1yZVVuaWNvZGUubGFzdEluZGV4PTA7d2hpbGUocmVVbmljb2RlLnRlc3Qoc3RyaW5nKSl7KytyZXN1bHR9cmV0dXJuIHJlc3VsdH1tb2R1bGUuZXhwb3J0cz11bmljb2RlU2l6ZX0se31dLDI4NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VDbG9uZT1yZXF1aXJlKCIuL19iYXNlQ2xvbmUiKTsKLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgY2xvbmluZy4gKi92YXIgQ0xPTkVfU1lNQk9MU19GTEFHPTQ7Ci8qKgogKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiBgdmFsdWVgLgogKgogKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgbG9vc2VseSBiYXNlZCBvbiB0aGUKICogW3N0cnVjdHVyZWQgY2xvbmUgYWxnb3JpdGhtXShodHRwczovL21kbi5pby9TdHJ1Y3R1cmVkX2Nsb25lX2FsZ29yaXRobSkKICogYW5kIHN1cHBvcnRzIGNsb25pbmcgYXJyYXlzLCBhcnJheSBidWZmZXJzLCBib29sZWFucywgZGF0ZSBvYmplY3RzLCBtYXBzLAogKiBudW1iZXJzLCBgT2JqZWN0YCBvYmplY3RzLCByZWdleGVzLCBzZXRzLCBzdHJpbmdzLCBzeW1ib2xzLCBhbmQgdHlwZWQKICogYXJyYXlzLiBUaGUgb3duIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiBgYXJndW1lbnRzYCBvYmplY3RzIGFyZSBjbG9uZWQKICogYXMgcGxhaW4gb2JqZWN0cy4gQW4gZW1wdHkgb2JqZWN0IGlzIHJldHVybmVkIGZvciB1bmNsb25lYWJsZSB2YWx1ZXMgc3VjaAogKiBhcyBlcnJvciBvYmplY3RzLCBmdW5jdGlvbnMsIERPTSBub2RlcywgYW5kIFdlYWtNYXBzLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjbG9uZS4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGNsb25lZCB2YWx1ZS4KICogQHNlZSBfLmNsb25lRGVlcAogKiBAZXhhbXBsZQogKgogKiB2YXIgb2JqZWN0cyA9IFt7ICdhJzogMSB9LCB7ICdiJzogMiB9XTsKICoKICogdmFyIHNoYWxsb3cgPSBfLmNsb25lKG9iamVjdHMpOwogKiBjb25zb2xlLmxvZyhzaGFsbG93WzBdID09PSBvYmplY3RzWzBdKTsKICogLy8gPT4gdHJ1ZQogKi9mdW5jdGlvbiBjbG9uZSh2YWx1ZSl7cmV0dXJuIGJhc2VDbG9uZSh2YWx1ZSxDTE9ORV9TWU1CT0xTX0ZMQUcpfW1vZHVsZS5leHBvcnRzPWNsb25lfSx7Ii4vX2Jhc2VDbG9uZSI6MTQwfV0sMjg3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUNsb25lPXJlcXVpcmUoIi4vX2Jhc2VDbG9uZSIpOwovKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciBjbG9uaW5nLiAqL3ZhciBDTE9ORV9ERUVQX0ZMQUc9MSxDTE9ORV9TWU1CT0xTX0ZMQUc9NDsKLyoqCiAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8uY2xvbmVgIGV4Y2VwdCB0aGF0IGl0IHJlY3Vyc2l2ZWx5IGNsb25lcyBgdmFsdWVgLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAxLjAuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byByZWN1cnNpdmVseSBjbG9uZS4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGRlZXAgY2xvbmVkIHZhbHVlLgogKiBAc2VlIF8uY2xvbmUKICogQGV4YW1wbGUKICoKICogdmFyIG9iamVjdHMgPSBbeyAnYSc6IDEgfSwgeyAnYic6IDIgfV07CiAqCiAqIHZhciBkZWVwID0gXy5jbG9uZURlZXAob2JqZWN0cyk7CiAqIGNvbnNvbGUubG9nKGRlZXBbMF0gPT09IG9iamVjdHNbMF0pOwogKiAvLyA9PiBmYWxzZQogKi9mdW5jdGlvbiBjbG9uZURlZXAodmFsdWUpe3JldHVybiBiYXNlQ2xvbmUodmFsdWUsQ0xPTkVfREVFUF9GTEFHfENMT05FX1NZTUJPTFNfRkxBRyl9bW9kdWxlLmV4cG9ydHM9Y2xvbmVEZWVwfSx7Ii4vX2Jhc2VDbG9uZSI6MTQwfV0sMjg4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYHZhbHVlYC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMi40LjAKICogQGNhdGVnb3J5IFV0aWwKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcmV0dXJuIGZyb20gdGhlIG5ldyBmdW5jdGlvbi4KICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY29uc3RhbnQgZnVuY3Rpb24uCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3RzID0gXy50aW1lcygyLCBfLmNvbnN0YW50KHsgJ2EnOiAxIH0pKTsKICoKICogY29uc29sZS5sb2cob2JqZWN0cyk7CiAqIC8vID0+IFt7ICdhJzogMSB9LCB7ICdhJzogMSB9XQogKgogKiBjb25zb2xlLmxvZyhvYmplY3RzWzBdID09PSBvYmplY3RzWzFdKTsKICogLy8gPT4gdHJ1ZQogKi8KZnVuY3Rpb24gY29uc3RhbnQodmFsdWUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB2YWx1ZX19bW9kdWxlLmV4cG9ydHM9Y29uc3RhbnR9LHt9XSwyODk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlUmVzdD1yZXF1aXJlKCIuL19iYXNlUmVzdCIpLGVxPXJlcXVpcmUoIi4vZXEiKSxpc0l0ZXJhdGVlQ2FsbD1yZXF1aXJlKCIuL19pc0l0ZXJhdGVlQ2FsbCIpLGtleXNJbj1yZXF1aXJlKCIuL2tleXNJbiIpOwovKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovdmFyIG9iamVjdFByb3RvPU9iamVjdC5wcm90b3R5cGU7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqCiAqIEFzc2lnbnMgb3duIGFuZCBpbmhlcml0ZWQgZW51bWVyYWJsZSBzdHJpbmcga2V5ZWQgcHJvcGVydGllcyBvZiBzb3VyY2UKICogb2JqZWN0cyB0byB0aGUgZGVzdGluYXRpb24gb2JqZWN0IGZvciBhbGwgZGVzdGluYXRpb24gcHJvcGVydGllcyB0aGF0CiAqIHJlc29sdmUgdG8gYHVuZGVmaW5lZGAuIFNvdXJjZSBvYmplY3RzIGFyZSBhcHBsaWVkIGZyb20gbGVmdCB0byByaWdodC4KICogT25jZSBhIHByb3BlcnR5IGlzIHNldCwgYWRkaXRpb25hbCB2YWx1ZXMgb2YgdGhlIHNhbWUgcHJvcGVydHkgYXJlIGlnbm9yZWQuCiAqCiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBtdXRhdGVzIGBvYmplY3RgLgogKgogKiBAc3RhdGljCiAqIEBzaW5jZSAwLjEuMAogKiBAbWVtYmVyT2YgXwogKiBAY2F0ZWdvcnkgT2JqZWN0CiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIGRlc3RpbmF0aW9uIG9iamVjdC4KICogQHBhcmFtIHsuLi5PYmplY3R9IFtzb3VyY2VzXSBUaGUgc291cmNlIG9iamVjdHMuCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuCiAqIEBzZWUgXy5kZWZhdWx0c0RlZXAKICogQGV4YW1wbGUKICoKICogXy5kZWZhdWx0cyh7ICdhJzogMSB9LCB7ICdiJzogMiB9LCB7ICdhJzogMyB9KTsKICogLy8gPT4geyAnYSc6IDEsICdiJzogMiB9CiAqL3ZhciBkZWZhdWx0cz1iYXNlUmVzdChmdW5jdGlvbihvYmplY3Qsc291cmNlcyl7b2JqZWN0PU9iamVjdChvYmplY3QpO3ZhciBpbmRleD0tMTt2YXIgbGVuZ3RoPXNvdXJjZXMubGVuZ3RoO3ZhciBndWFyZD1sZW5ndGg+Mj9zb3VyY2VzWzJdOnVuZGVmaW5lZDtpZihndWFyZCYmaXNJdGVyYXRlZUNhbGwoc291cmNlc1swXSxzb3VyY2VzWzFdLGd1YXJkKSl7bGVuZ3RoPTF9d2hpbGUoKytpbmRleDxsZW5ndGgpe3ZhciBzb3VyY2U9c291cmNlc1tpbmRleF07dmFyIHByb3BzPWtleXNJbihzb3VyY2UpO3ZhciBwcm9wc0luZGV4PS0xO3ZhciBwcm9wc0xlbmd0aD1wcm9wcy5sZW5ndGg7d2hpbGUoKytwcm9wc0luZGV4PHByb3BzTGVuZ3RoKXt2YXIga2V5PXByb3BzW3Byb3BzSW5kZXhdO3ZhciB2YWx1ZT1vYmplY3Rba2V5XTtpZih2YWx1ZT09PXVuZGVmaW5lZHx8ZXEodmFsdWUsb2JqZWN0UHJvdG9ba2V5XSkmJiFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCxrZXkpKXtvYmplY3Rba2V5XT1zb3VyY2Vba2V5XX19fXJldHVybiBvYmplY3R9KTttb2R1bGUuZXhwb3J0cz1kZWZhdWx0c30seyIuL19iYXNlUmVzdCI6MTgxLCIuL19pc0l0ZXJhdGVlQ2FsbCI6MjQyLCIuL2VxIjoyOTEsIi4va2V5c0luIjozMjB9XSwyOTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoIi4vZm9yRWFjaCIpfSx7Ii4vZm9yRWFjaCI6Mjk2fV0sMjkxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFBlcmZvcm1zIGEKICogW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybykKICogY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMC4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuCiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9OwogKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9OwogKgogKiBfLmVxKG9iamVjdCwgb2JqZWN0KTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmVxKG9iamVjdCwgb3RoZXIpOwogKiAvLyA9PiBmYWxzZQogKgogKiBfLmVxKCdhJywgJ2EnKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmVxKCdhJywgT2JqZWN0KCdhJykpOwogKiAvLyA9PiBmYWxzZQogKgogKiBfLmVxKE5hTiwgTmFOKTsKICogLy8gPT4gdHJ1ZQogKi8KZnVuY3Rpb24gZXEodmFsdWUsb3RoZXIpe3JldHVybiB2YWx1ZT09PW90aGVyfHx2YWx1ZSE9PXZhbHVlJiZvdGhlciE9PW90aGVyfW1vZHVsZS5leHBvcnRzPWVxfSx7fV0sMjkyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYXJyYXlGaWx0ZXI9cmVxdWlyZSgiLi9fYXJyYXlGaWx0ZXIiKSxiYXNlRmlsdGVyPXJlcXVpcmUoIi4vX2Jhc2VGaWx0ZXIiKSxiYXNlSXRlcmF0ZWU9cmVxdWlyZSgiLi9fYmFzZUl0ZXJhdGVlIiksaXNBcnJheT1yZXF1aXJlKCIuL2lzQXJyYXkiKTsKLyoqCiAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYGNvbGxlY3Rpb25gLCByZXR1cm5pbmcgYW4gYXJyYXkgb2YgYWxsIGVsZW1lbnRzCiAqIGBwcmVkaWNhdGVgIHJldHVybnMgdHJ1dGh5IGZvci4gVGhlIHByZWRpY2F0ZSBpcyBpbnZva2VkIHdpdGggdGhyZWUKICogYXJndW1lbnRzOiAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuCiAqCiAqICoqTm90ZToqKiBVbmxpa2UgYF8ucmVtb3ZlYCwgdGhpcyBtZXRob2QgcmV0dXJucyBhIG5ldyBhcnJheS4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC4xLjAKICogQGNhdGVnb3J5IENvbGxlY3Rpb24KICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcHJlZGljYXRlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZpbHRlcmVkIGFycmF5LgogKiBAc2VlIF8ucmVqZWN0CiAqIEBleGFtcGxlCiAqCiAqIHZhciB1c2VycyA9IFsKICogICB7ICd1c2VyJzogJ2Jhcm5leScsICdhZ2UnOiAzNiwgJ2FjdGl2ZSc6IHRydWUgfSwKICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCwgJ2FjdGl2ZSc6IGZhbHNlIH0KICogXTsKICoKICogXy5maWx0ZXIodXNlcnMsIGZ1bmN0aW9uKG8pIHsgcmV0dXJuICFvLmFjdGl2ZTsgfSk7CiAqIC8vID0+IG9iamVjdHMgZm9yIFsnZnJlZCddCiAqCiAqIC8vIFRoZSBgXy5tYXRjaGVzYCBpdGVyYXRlZSBzaG9ydGhhbmQuCiAqIF8uZmlsdGVyKHVzZXJzLCB7ICdhZ2UnOiAzNiwgJ2FjdGl2ZSc6IHRydWUgfSk7CiAqIC8vID0+IG9iamVjdHMgZm9yIFsnYmFybmV5J10KICoKICogLy8gVGhlIGBfLm1hdGNoZXNQcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLmZpbHRlcih1c2VycywgWydhY3RpdmUnLCBmYWxzZV0pOwogKiAvLyA9PiBvYmplY3RzIGZvciBbJ2ZyZWQnXQogKgogKiAvLyBUaGUgYF8ucHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC4KICogXy5maWx0ZXIodXNlcnMsICdhY3RpdmUnKTsKICogLy8gPT4gb2JqZWN0cyBmb3IgWydiYXJuZXknXQogKi9mdW5jdGlvbiBmaWx0ZXIoY29sbGVjdGlvbixwcmVkaWNhdGUpe3ZhciBmdW5jPWlzQXJyYXkoY29sbGVjdGlvbik/YXJyYXlGaWx0ZXI6YmFzZUZpbHRlcjtyZXR1cm4gZnVuYyhjb2xsZWN0aW9uLGJhc2VJdGVyYXRlZShwcmVkaWNhdGUsMykpfW1vZHVsZS5leHBvcnRzPWZpbHRlcn0seyIuL19hcnJheUZpbHRlciI6MTI1LCIuL19iYXNlRmlsdGVyIjoxNDQsIi4vX2Jhc2VJdGVyYXRlZSI6MTY1LCIuL2lzQXJyYXkiOjMwM31dLDI5MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGNyZWF0ZUZpbmQ9cmVxdWlyZSgiLi9fY3JlYXRlRmluZCIpLGZpbmRJbmRleD1yZXF1aXJlKCIuL2ZpbmRJbmRleCIpOwovKioKICogSXRlcmF0ZXMgb3ZlciBlbGVtZW50cyBvZiBgY29sbGVjdGlvbmAsIHJldHVybmluZyB0aGUgZmlyc3QgZWxlbWVudAogKiBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IuIFRoZSBwcmVkaWNhdGUgaXMgaW52b2tlZCB3aXRoIHRocmVlCiAqIGFyZ3VtZW50czogKHZhbHVlLCBpbmRleHxrZXksIGNvbGxlY3Rpb24pLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbgogKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpbnNwZWN0LgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcHJlZGljYXRlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEBwYXJhbSB7bnVtYmVyfSBbZnJvbUluZGV4PTBdIFRoZSBpbmRleCB0byBzZWFyY2ggZnJvbS4KICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hdGNoZWQgZWxlbWVudCwgZWxzZSBgdW5kZWZpbmVkYC4KICogQGV4YW1wbGUKICoKICogdmFyIHVzZXJzID0gWwogKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgICdhZ2UnOiAzNiwgJ2FjdGl2ZSc6IHRydWUgfSwKICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICAnYWdlJzogNDAsICdhY3RpdmUnOiBmYWxzZSB9LAogKiAgIHsgJ3VzZXInOiAncGViYmxlcycsICdhZ2UnOiAxLCAgJ2FjdGl2ZSc6IHRydWUgfQogKiBdOwogKgogKiBfLmZpbmQodXNlcnMsIGZ1bmN0aW9uKG8pIHsgcmV0dXJuIG8uYWdlIDwgNDA7IH0pOwogKiAvLyA9PiBvYmplY3QgZm9yICdiYXJuZXknCiAqCiAqIC8vIFRoZSBgXy5tYXRjaGVzYCBpdGVyYXRlZSBzaG9ydGhhbmQuCiAqIF8uZmluZCh1c2VycywgeyAnYWdlJzogMSwgJ2FjdGl2ZSc6IHRydWUgfSk7CiAqIC8vID0+IG9iamVjdCBmb3IgJ3BlYmJsZXMnCiAqCiAqIC8vIFRoZSBgXy5tYXRjaGVzUHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC4KICogXy5maW5kKHVzZXJzLCBbJ2FjdGl2ZScsIGZhbHNlXSk7CiAqIC8vID0+IG9iamVjdCBmb3IgJ2ZyZWQnCiAqCiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLmZpbmQodXNlcnMsICdhY3RpdmUnKTsKICogLy8gPT4gb2JqZWN0IGZvciAnYmFybmV5JwogKi92YXIgZmluZD1jcmVhdGVGaW5kKGZpbmRJbmRleCk7bW9kdWxlLmV4cG9ydHM9ZmluZH0seyIuL19jcmVhdGVGaW5kIjoyMTAsIi4vZmluZEluZGV4IjoyOTR9XSwyOTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlRmluZEluZGV4PXJlcXVpcmUoIi4vX2Jhc2VGaW5kSW5kZXgiKSxiYXNlSXRlcmF0ZWU9cmVxdWlyZSgiLi9fYmFzZUl0ZXJhdGVlIiksdG9JbnRlZ2VyPXJlcXVpcmUoIi4vdG9JbnRlZ2VyIik7Ci8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi92YXIgbmF0aXZlTWF4PU1hdGgubWF4OwovKioKICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5maW5kYCBleGNlcHQgdGhhdCBpdCByZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QKICogZWxlbWVudCBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IgaW5zdGVhZCBvZiB0aGUgZWxlbWVudCBpdHNlbGYuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDEuMS4wCiAqIEBjYXRlZ29yeSBBcnJheQogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC4KICogQHBhcmFtIHtGdW5jdGlvbn0gW3ByZWRpY2F0ZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcGFyYW0ge251bWJlcn0gW2Zyb21JbmRleD0wXSBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uCiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBmb3VuZCBlbGVtZW50LCBlbHNlIGAtMWAuCiAqIEBleGFtcGxlCiAqCiAqIHZhciB1c2VycyA9IFsKICogICB7ICd1c2VyJzogJ2Jhcm5leScsICAnYWN0aXZlJzogZmFsc2UgfSwKICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICAnYWN0aXZlJzogZmFsc2UgfSwKICogICB7ICd1c2VyJzogJ3BlYmJsZXMnLCAnYWN0aXZlJzogdHJ1ZSB9CiAqIF07CiAqCiAqIF8uZmluZEluZGV4KHVzZXJzLCBmdW5jdGlvbihvKSB7IHJldHVybiBvLnVzZXIgPT0gJ2Jhcm5leSc7IH0pOwogKiAvLyA9PiAwCiAqCiAqIC8vIFRoZSBgXy5tYXRjaGVzYCBpdGVyYXRlZSBzaG9ydGhhbmQuCiAqIF8uZmluZEluZGV4KHVzZXJzLCB7ICd1c2VyJzogJ2ZyZWQnLCAnYWN0aXZlJzogZmFsc2UgfSk7CiAqIC8vID0+IDEKICoKICogLy8gVGhlIGBfLm1hdGNoZXNQcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLmZpbmRJbmRleCh1c2VycywgWydhY3RpdmUnLCBmYWxzZV0pOwogKiAvLyA9PiAwCiAqCiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLmZpbmRJbmRleCh1c2VycywgJ2FjdGl2ZScpOwogKiAvLyA9PiAyCiAqL2Z1bmN0aW9uIGZpbmRJbmRleChhcnJheSxwcmVkaWNhdGUsZnJvbUluZGV4KXt2YXIgbGVuZ3RoPWFycmF5PT1udWxsPzA6YXJyYXkubGVuZ3RoO2lmKCFsZW5ndGgpe3JldHVybi0xfXZhciBpbmRleD1mcm9tSW5kZXg9PW51bGw/MDp0b0ludGVnZXIoZnJvbUluZGV4KTtpZihpbmRleDwwKXtpbmRleD1uYXRpdmVNYXgobGVuZ3RoK2luZGV4LDApfXJldHVybiBiYXNlRmluZEluZGV4KGFycmF5LGJhc2VJdGVyYXRlZShwcmVkaWNhdGUsMyksaW5kZXgpfW1vZHVsZS5leHBvcnRzPWZpbmRJbmRleH0seyIuL19iYXNlRmluZEluZGV4IjoxNDUsIi4vX2Jhc2VJdGVyYXRlZSI6MTY1LCIuL3RvSW50ZWdlciI6MzQwfV0sMjk1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUZsYXR0ZW49cmVxdWlyZSgiLi9fYmFzZUZsYXR0ZW4iKTsKLyoqCiAqIEZsYXR0ZW5zIGBhcnJheWAgYSBzaW5nbGUgbGV2ZWwgZGVlcC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC4xLjAKICogQGNhdGVnb3J5IEFycmF5CiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBmbGF0dGVuLgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmbGF0dGVuZWQgYXJyYXkuCiAqIEBleGFtcGxlCiAqCiAqIF8uZmxhdHRlbihbMSwgWzIsIFszLCBbNF1dLCA1XV0pOwogKiAvLyA9PiBbMSwgMiwgWzMsIFs0XV0sIDVdCiAqL2Z1bmN0aW9uIGZsYXR0ZW4oYXJyYXkpe3ZhciBsZW5ndGg9YXJyYXk9PW51bGw/MDphcnJheS5sZW5ndGg7cmV0dXJuIGxlbmd0aD9iYXNlRmxhdHRlbihhcnJheSwxKTpbXX1tb2R1bGUuZXhwb3J0cz1mbGF0dGVufSx7Ii4vX2Jhc2VGbGF0dGVuIjoxNDZ9XSwyOTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheUVhY2g9cmVxdWlyZSgiLi9fYXJyYXlFYWNoIiksYmFzZUVhY2g9cmVxdWlyZSgiLi9fYmFzZUVhY2giKSxjYXN0RnVuY3Rpb249cmVxdWlyZSgiLi9fY2FzdEZ1bmN0aW9uIiksaXNBcnJheT1yZXF1aXJlKCIuL2lzQXJyYXkiKTsKLyoqCiAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYGNvbGxlY3Rpb25gIGFuZCBpbnZva2VzIGBpdGVyYXRlZWAgZm9yIGVhY2ggZWxlbWVudC4KICogVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM6ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS4KICogSXRlcmF0ZWUgZnVuY3Rpb25zIG1heSBleGl0IGl0ZXJhdGlvbiBlYXJseSBieSBleHBsaWNpdGx5IHJldHVybmluZyBgZmFsc2VgLgogKgogKiAqKk5vdGU6KiogQXMgd2l0aCBvdGhlciAiQ29sbGVjdGlvbnMiIG1ldGhvZHMsIG9iamVjdHMgd2l0aCBhICJsZW5ndGgiCiAqIHByb3BlcnR5IGFyZSBpdGVyYXRlZCBsaWtlIGFycmF5cy4gVG8gYXZvaWQgdGhpcyBiZWhhdmlvciB1c2UgYF8uZm9ySW5gCiAqIG9yIGBfLmZvck93bmAgZm9yIG9iamVjdCBpdGVyYXRpb24uCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDAuMS4wCiAqIEBhbGlhcyBlYWNoCiAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uCiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci4KICogQHBhcmFtIHtGdW5jdGlvbn0gW2l0ZXJhdGVlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEByZXR1cm5zIHtBcnJheXxPYmplY3R9IFJldHVybnMgYGNvbGxlY3Rpb25gLgogKiBAc2VlIF8uZm9yRWFjaFJpZ2h0CiAqIEBleGFtcGxlCiAqCiAqIF8uZm9yRWFjaChbMSwgMl0sIGZ1bmN0aW9uKHZhbHVlKSB7CiAqICAgY29uc29sZS5sb2codmFsdWUpOwogKiB9KTsKICogLy8gPT4gTG9ncyBgMWAgdGhlbiBgMmAuCiAqCiAqIF8uZm9yRWFjaCh7ICdhJzogMSwgJ2InOiAyIH0sIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHsKICogICBjb25zb2xlLmxvZyhrZXkpOwogKiB9KTsKICogLy8gPT4gTG9ncyAnYScgdGhlbiAnYicgKGl0ZXJhdGlvbiBvcmRlciBpcyBub3QgZ3VhcmFudGVlZCkuCiAqL2Z1bmN0aW9uIGZvckVhY2goY29sbGVjdGlvbixpdGVyYXRlZSl7dmFyIGZ1bmM9aXNBcnJheShjb2xsZWN0aW9uKT9hcnJheUVhY2g6YmFzZUVhY2g7cmV0dXJuIGZ1bmMoY29sbGVjdGlvbixjYXN0RnVuY3Rpb24oaXRlcmF0ZWUpKX1tb2R1bGUuZXhwb3J0cz1mb3JFYWNofSx7Ii4vX2FycmF5RWFjaCI6MTI0LCIuL19iYXNlRWFjaCI6MTQyLCIuL19jYXN0RnVuY3Rpb24iOjE5MiwiLi9pc0FycmF5IjozMDN9XSwyOTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlRm9yPXJlcXVpcmUoIi4vX2Jhc2VGb3IiKSxjYXN0RnVuY3Rpb249cmVxdWlyZSgiLi9fY2FzdEZ1bmN0aW9uIiksa2V5c0luPXJlcXVpcmUoIi4va2V5c0luIik7Ci8qKgogKiBJdGVyYXRlcyBvdmVyIG93biBhbmQgaW5oZXJpdGVkIGVudW1lcmFibGUgc3RyaW5nIGtleWVkIHByb3BlcnRpZXMgb2YgYW4KICogb2JqZWN0IGFuZCBpbnZva2VzIGBpdGVyYXRlZWAgZm9yIGVhY2ggcHJvcGVydHkuIFRoZSBpdGVyYXRlZSBpcyBpbnZva2VkCiAqIHdpdGggdGhyZWUgYXJndW1lbnRzOiAodmFsdWUsIGtleSwgb2JqZWN0KS4gSXRlcmF0ZWUgZnVuY3Rpb25zIG1heSBleGl0CiAqIGl0ZXJhdGlvbiBlYXJseSBieSBleHBsaWNpdGx5IHJldHVybmluZyBgZmFsc2VgLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjMuMAogKiBAY2F0ZWdvcnkgT2JqZWN0CiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLgogKiBAc2VlIF8uZm9ySW5SaWdodAogKiBAZXhhbXBsZQogKgogKiBmdW5jdGlvbiBGb28oKSB7CiAqICAgdGhpcy5hID0gMTsKICogICB0aGlzLmIgPSAyOwogKiB9CiAqCiAqIEZvby5wcm90b3R5cGUuYyA9IDM7CiAqCiAqIF8uZm9ySW4obmV3IEZvbywgZnVuY3Rpb24odmFsdWUsIGtleSkgewogKiAgIGNvbnNvbGUubG9nKGtleSk7CiAqIH0pOwogKiAvLyA9PiBMb2dzICdhJywgJ2InLCB0aGVuICdjJyAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKS4KICovZnVuY3Rpb24gZm9ySW4ob2JqZWN0LGl0ZXJhdGVlKXtyZXR1cm4gb2JqZWN0PT1udWxsP29iamVjdDpiYXNlRm9yKG9iamVjdCxjYXN0RnVuY3Rpb24oaXRlcmF0ZWUpLGtleXNJbil9bW9kdWxlLmV4cG9ydHM9Zm9ySW59LHsiLi9fYmFzZUZvciI6MTQ3LCIuL19jYXN0RnVuY3Rpb24iOjE5MiwiLi9rZXlzSW4iOjMyMH1dLDI5ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VHZXQ9cmVxdWlyZSgiLi9fYmFzZUdldCIpOwovKioKICogR2V0cyB0aGUgdmFsdWUgYXQgYHBhdGhgIG9mIGBvYmplY3RgLiBJZiB0aGUgcmVzb2x2ZWQgdmFsdWUgaXMKICogYHVuZGVmaW5lZGAsIHRoZSBgZGVmYXVsdFZhbHVlYCBpcyByZXR1cm5lZCBpbiBpdHMgcGxhY2UuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDMuNy4wCiAqIEBjYXRlZ29yeSBPYmplY3QKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LgogKiBAcGFyYW0geyp9IFtkZWZhdWx0VmFsdWVdIFRoZSB2YWx1ZSByZXR1cm5lZCBmb3IgYHVuZGVmaW5lZGAgcmVzb2x2ZWQgdmFsdWVzLgogKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzb2x2ZWQgdmFsdWUuCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3QgPSB7ICdhJzogW3sgJ2InOiB7ICdjJzogMyB9IH1dIH07CiAqCiAqIF8uZ2V0KG9iamVjdCwgJ2FbMF0uYi5jJyk7CiAqIC8vID0+IDMKICoKICogXy5nZXQob2JqZWN0LCBbJ2EnLCAnMCcsICdiJywgJ2MnXSk7CiAqIC8vID0+IDMKICoKICogXy5nZXQob2JqZWN0LCAnYS5iLmMnLCAnZGVmYXVsdCcpOwogKiAvLyA9PiAnZGVmYXVsdCcKICovZnVuY3Rpb24gZ2V0KG9iamVjdCxwYXRoLGRlZmF1bHRWYWx1ZSl7dmFyIHJlc3VsdD1vYmplY3Q9PW51bGw/dW5kZWZpbmVkOmJhc2VHZXQob2JqZWN0LHBhdGgpO3JldHVybiByZXN1bHQ9PT11bmRlZmluZWQ/ZGVmYXVsdFZhbHVlOnJlc3VsdH1tb2R1bGUuZXhwb3J0cz1nZXR9LHsiLi9fYmFzZUdldCI6MTQ5fV0sMjk5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUhhcz1yZXF1aXJlKCIuL19iYXNlSGFzIiksaGFzUGF0aD1yZXF1aXJlKCIuL19oYXNQYXRoIik7Ci8qKgogKiBDaGVja3MgaWYgYHBhdGhgIGlzIGEgZGlyZWN0IHByb3BlcnR5IG9mIGBvYmplY3RgLgogKgogKiBAc3RhdGljCiAqIEBzaW5jZSAwLjEuMAogKiBAbWVtYmVyT2YgXwogKiBAY2F0ZWdvcnkgT2JqZWN0CiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS4KICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgcGF0aGAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3QgPSB7ICdhJzogeyAnYic6IDIgfSB9OwogKiB2YXIgb3RoZXIgPSBfLmNyZWF0ZSh7ICdhJzogXy5jcmVhdGUoeyAnYic6IDIgfSkgfSk7CiAqCiAqIF8uaGFzKG9iamVjdCwgJ2EnKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmhhcyhvYmplY3QsICdhLmInKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmhhcyhvYmplY3QsIFsnYScsICdiJ10pOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaGFzKG90aGVyLCAnYScpOwogKiAvLyA9PiBmYWxzZQogKi9mdW5jdGlvbiBoYXMob2JqZWN0LHBhdGgpe3JldHVybiBvYmplY3QhPW51bGwmJmhhc1BhdGgob2JqZWN0LHBhdGgsYmFzZUhhcyl9bW9kdWxlLmV4cG9ydHM9aGFzfSx7Ii4vX2Jhc2VIYXMiOjE1MywiLi9faGFzUGF0aCI6MjMwfV0sMzAwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUhhc0luPXJlcXVpcmUoIi4vX2Jhc2VIYXNJbiIpLGhhc1BhdGg9cmVxdWlyZSgiLi9faGFzUGF0aCIpOwovKioKICogQ2hlY2tzIGlmIGBwYXRoYCBpcyBhIGRpcmVjdCBvciBpbmhlcml0ZWQgcHJvcGVydHkgb2YgYG9iamVjdGAuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMC4wCiAqIEBjYXRlZ29yeSBPYmplY3QKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBwYXRoYCBleGlzdHMsIGVsc2UgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogdmFyIG9iamVjdCA9IF8uY3JlYXRlKHsgJ2EnOiBfLmNyZWF0ZSh7ICdiJzogMiB9KSB9KTsKICoKICogXy5oYXNJbihvYmplY3QsICdhJyk7CiAqIC8vID0+IHRydWUKICoKICogXy5oYXNJbihvYmplY3QsICdhLmInKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmhhc0luKG9iamVjdCwgWydhJywgJ2InXSk7CiAqIC8vID0+IHRydWUKICoKICogXy5oYXNJbihvYmplY3QsICdiJyk7CiAqIC8vID0+IGZhbHNlCiAqL2Z1bmN0aW9uIGhhc0luKG9iamVjdCxwYXRoKXtyZXR1cm4gb2JqZWN0IT1udWxsJiZoYXNQYXRoKG9iamVjdCxwYXRoLGJhc2VIYXNJbil9bW9kdWxlLmV4cG9ydHM9aGFzSW59LHsiLi9fYmFzZUhhc0luIjoxNTQsIi4vX2hhc1BhdGgiOjIzMH1dLDMwMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSBmaXJzdCBhcmd1bWVudCBpdCByZWNlaXZlcy4KICoKICogQHN0YXRpYwogKiBAc2luY2UgMC4xLjAKICogQG1lbWJlck9mIF8KICogQGNhdGVnb3J5IFV0aWwKICogQHBhcmFtIHsqfSB2YWx1ZSBBbnkgdmFsdWUuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIGB2YWx1ZWAuCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9OwogKgogKiBjb25zb2xlLmxvZyhfLmlkZW50aXR5KG9iamVjdCkgPT09IG9iamVjdCk7CiAqIC8vID0+IHRydWUKICovCmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKXtyZXR1cm4gdmFsdWV9bW9kdWxlLmV4cG9ydHM9aWRlbnRpdHl9LHt9XSwzMDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlSXNBcmd1bWVudHM9cmVxdWlyZSgiLi9fYmFzZUlzQXJndW1lbnRzIiksaXNPYmplY3RMaWtlPXJlcXVpcmUoIi4vaXNPYmplY3RMaWtlIik7Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi92YXIgb2JqZWN0UHJvdG89T2JqZWN0LnByb3RvdHlwZTsKLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovdmFyIGhhc093blByb3BlcnR5PW9iamVjdFByb3RvLmhhc093blByb3BlcnR5OwovKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi92YXIgcHJvcGVydHlJc0VudW1lcmFibGU9b2JqZWN0UHJvdG8ucHJvcGVydHlJc0VudW1lcmFibGU7Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LAogKiAgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNBcmd1bWVudHMoWzEsIDIsIDNdKTsKICogLy8gPT4gZmFsc2UKICovdmFyIGlzQXJndW1lbnRzPWJhc2VJc0FyZ3VtZW50cyhmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpP2Jhc2VJc0FyZ3VtZW50czpmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkmJmhhc093blByb3BlcnR5LmNhbGwodmFsdWUsImNhbGxlZSIpJiYhcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh2YWx1ZSwiY2FsbGVlIil9O21vZHVsZS5leHBvcnRzPWlzQXJndW1lbnRzfSx7Ii4vX2Jhc2VJc0FyZ3VtZW50cyI6MTU2LCIuL2lzT2JqZWN0TGlrZSI6MzEyfV0sMzAzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYW4gYEFycmF5YCBvYmplY3QuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDAuMS4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheSwgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzQXJyYXkoWzEsIDIsIDNdKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzQXJyYXkoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7CiAqIC8vID0+IGZhbHNlCiAqCiAqIF8uaXNBcnJheSgnYWJjJyk7CiAqIC8vID0+IGZhbHNlCiAqCiAqIF8uaXNBcnJheShfLm5vb3ApOwogKiAvLyA9PiBmYWxzZQogKi8KdmFyIGlzQXJyYXk9QXJyYXkuaXNBcnJheTttb2R1bGUuZXhwb3J0cz1pc0FycmF5fSx7fV0sMzA0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgaXNGdW5jdGlvbj1yZXF1aXJlKCIuL2lzRnVuY3Rpb24iKSxpc0xlbmd0aD1yZXF1aXJlKCIuL2lzTGVuZ3RoIik7Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLiBBIHZhbHVlIGlzIGNvbnNpZGVyZWQgYXJyYXktbGlrZSBpZiBpdCdzCiAqIG5vdCBhIGZ1bmN0aW9uIGFuZCBoYXMgYSBgdmFsdWUubGVuZ3RoYCB0aGF0J3MgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gb3IKICogZXF1YWwgdG8gYDBgIGFuZCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gYE51bWJlci5NQVhfU0FGRV9JTlRFR0VSYC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgNC4wLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UsIGVsc2UgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogXy5pc0FycmF5TGlrZShbMSwgMiwgM10pOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNBcnJheUxpa2UoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7CiAqIC8vID0+IHRydWUKICoKICogXy5pc0FycmF5TGlrZSgnYWJjJyk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc0FycmF5TGlrZShfLm5vb3ApOwogKiAvLyA9PiBmYWxzZQogKi9mdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSl7cmV0dXJuIHZhbHVlIT1udWxsJiZpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpJiYhaXNGdW5jdGlvbih2YWx1ZSl9bW9kdWxlLmV4cG9ydHM9aXNBcnJheUxpa2V9LHsiLi9pc0Z1bmN0aW9uIjozMDgsIi4vaXNMZW5ndGgiOjMwOX1dLDMwNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGlzQXJyYXlMaWtlPXJlcXVpcmUoIi4vaXNBcnJheUxpa2UiKSxpc09iamVjdExpa2U9cmVxdWlyZSgiLi9pc09iamVjdExpa2UiKTsKLyoqCiAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8uaXNBcnJheUxpa2VgIGV4Y2VwdCB0aGF0IGl0IGFsc28gY2hlY2tzIGlmIGB2YWx1ZWAKICogaXMgYW4gb2JqZWN0LgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSA0LjAuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYXJyYXktbGlrZSBvYmplY3QsCiAqICBlbHNlIGBmYWxzZWAuCiAqIEBleGFtcGxlCiAqCiAqIF8uaXNBcnJheUxpa2VPYmplY3QoWzEsIDIsIDNdKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzQXJyYXlMaWtlT2JqZWN0KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNBcnJheUxpa2VPYmplY3QoJ2FiYycpOwogKiAvLyA9PiBmYWxzZQogKgogKiBfLmlzQXJyYXlMaWtlT2JqZWN0KF8ubm9vcCk7CiAqIC8vID0+IGZhbHNlCiAqL2Z1bmN0aW9uIGlzQXJyYXlMaWtlT2JqZWN0KHZhbHVlKXtyZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSYmaXNBcnJheUxpa2UodmFsdWUpfW1vZHVsZS5leHBvcnRzPWlzQXJyYXlMaWtlT2JqZWN0fSx7Ii4vaXNBcnJheUxpa2UiOjMwNCwiLi9pc09iamVjdExpa2UiOjMxMn1dLDMwNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHJvb3Q9cmVxdWlyZSgiLi9fcm9vdCIpLHN0dWJGYWxzZT1yZXF1aXJlKCIuL3N0dWJGYWxzZSIpOwovKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL3ZhciBmcmVlRXhwb3J0cz10eXBlb2YgZXhwb3J0cz09Im9iamVjdCImJmV4cG9ydHMmJiFleHBvcnRzLm5vZGVUeXBlJiZleHBvcnRzOwovKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovdmFyIGZyZWVNb2R1bGU9ZnJlZUV4cG9ydHMmJnR5cGVvZiBtb2R1bGU9PSJvYmplY3QiJiZtb2R1bGUmJiFtb2R1bGUubm9kZVR5cGUmJm1vZHVsZTsKLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi92YXIgbW9kdWxlRXhwb3J0cz1mcmVlTW9kdWxlJiZmcmVlTW9kdWxlLmV4cG9ydHM9PT1mcmVlRXhwb3J0czsKLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovdmFyIEJ1ZmZlcj1tb2R1bGVFeHBvcnRzP3Jvb3QuQnVmZmVyOnVuZGVmaW5lZDsKLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL3ZhciBuYXRpdmVJc0J1ZmZlcj1CdWZmZXI/QnVmZmVyLmlzQnVmZmVyOnVuZGVmaW5lZDsKLyoqCiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgYnVmZmVyLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSA0LjMuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIsIGVsc2UgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogXy5pc0J1ZmZlcihuZXcgQnVmZmVyKDIpKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzQnVmZmVyKG5ldyBVaW50OEFycmF5KDIpKTsKICogLy8gPT4gZmFsc2UKICovdmFyIGlzQnVmZmVyPW5hdGl2ZUlzQnVmZmVyfHxzdHViRmFsc2U7bW9kdWxlLmV4cG9ydHM9aXNCdWZmZXJ9LHsiLi9fcm9vdCI6MjY4LCIuL3N0dWJGYWxzZSI6MzM4fV0sMzA3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUtleXM9cmVxdWlyZSgiLi9fYmFzZUtleXMiKSxnZXRUYWc9cmVxdWlyZSgiLi9fZ2V0VGFnIiksaXNBcmd1bWVudHM9cmVxdWlyZSgiLi9pc0FyZ3VtZW50cyIpLGlzQXJyYXk9cmVxdWlyZSgiLi9pc0FycmF5IiksaXNBcnJheUxpa2U9cmVxdWlyZSgiLi9pc0FycmF5TGlrZSIpLGlzQnVmZmVyPXJlcXVpcmUoIi4vaXNCdWZmZXIiKSxpc1Byb3RvdHlwZT1yZXF1aXJlKCIuL19pc1Byb3RvdHlwZSIpLGlzVHlwZWRBcnJheT1yZXF1aXJlKCIuL2lzVHlwZWRBcnJheSIpOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIG1hcFRhZz0iW29iamVjdCBNYXBdIixzZXRUYWc9IltvYmplY3QgU2V0XSI7Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi92YXIgb2JqZWN0UHJvdG89T2JqZWN0LnByb3RvdHlwZTsKLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovdmFyIGhhc093blByb3BlcnR5PW9iamVjdFByb3RvLmhhc093blByb3BlcnR5OwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYW4gZW1wdHkgb2JqZWN0LCBjb2xsZWN0aW9uLCBtYXAsIG9yIHNldC4KICoKICogT2JqZWN0cyBhcmUgY29uc2lkZXJlZCBlbXB0eSBpZiB0aGV5IGhhdmUgbm8gb3duIGVudW1lcmFibGUgc3RyaW5nIGtleWVkCiAqIHByb3BlcnRpZXMuCiAqCiAqIEFycmF5LWxpa2UgdmFsdWVzIHN1Y2ggYXMgYGFyZ3VtZW50c2Agb2JqZWN0cywgYXJyYXlzLCBidWZmZXJzLCBzdHJpbmdzLCBvcgogKiBqUXVlcnktbGlrZSBjb2xsZWN0aW9ucyBhcmUgY29uc2lkZXJlZCBlbXB0eSBpZiB0aGV5IGhhdmUgYSBgbGVuZ3RoYCBvZiBgMGAuCiAqIFNpbWlsYXJseSwgbWFwcyBhbmQgc2V0cyBhcmUgY29uc2lkZXJlZCBlbXB0eSBpZiB0aGV5IGhhdmUgYSBgc2l6ZWAgb2YgYDBgLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZW1wdHksIGVsc2UgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogXy5pc0VtcHR5KG51bGwpOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNFbXB0eSh0cnVlKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzRW1wdHkoMSk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc0VtcHR5KFsxLCAyLCAzXSk7CiAqIC8vID0+IGZhbHNlCiAqCiAqIF8uaXNFbXB0eSh7ICdhJzogMSB9KTsKICogLy8gPT4gZmFsc2UKICovZnVuY3Rpb24gaXNFbXB0eSh2YWx1ZSl7aWYodmFsdWU9PW51bGwpe3JldHVybiB0cnVlfWlmKGlzQXJyYXlMaWtlKHZhbHVlKSYmKGlzQXJyYXkodmFsdWUpfHx0eXBlb2YgdmFsdWU9PSJzdHJpbmcifHx0eXBlb2YgdmFsdWUuc3BsaWNlPT0iZnVuY3Rpb24ifHxpc0J1ZmZlcih2YWx1ZSl8fGlzVHlwZWRBcnJheSh2YWx1ZSl8fGlzQXJndW1lbnRzKHZhbHVlKSkpe3JldHVybiF2YWx1ZS5sZW5ndGh9dmFyIHRhZz1nZXRUYWcodmFsdWUpO2lmKHRhZz09bWFwVGFnfHx0YWc9PXNldFRhZyl7cmV0dXJuIXZhbHVlLnNpemV9aWYoaXNQcm90b3R5cGUodmFsdWUpKXtyZXR1cm4hYmFzZUtleXModmFsdWUpLmxlbmd0aH1mb3IodmFyIGtleSBpbiB2YWx1ZSl7aWYoaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSxrZXkpKXtyZXR1cm4gZmFsc2V9fXJldHVybiB0cnVlfW1vZHVsZS5leHBvcnRzPWlzRW1wdHl9LHsiLi9fYmFzZUtleXMiOjE2NiwiLi9fZ2V0VGFnIjoyMjgsIi4vX2lzUHJvdG90eXBlIjoyNDYsIi4vaXNBcmd1bWVudHMiOjMwMiwiLi9pc0FycmF5IjozMDMsIi4vaXNBcnJheUxpa2UiOjMwNCwiLi9pc0J1ZmZlciI6MzA2LCIuL2lzVHlwZWRBcnJheSI6MzE3fV0sMzA4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUdldFRhZz1yZXF1aXJlKCIuL19iYXNlR2V0VGFnIiksaXNPYmplY3Q9cmVxdWlyZSgiLi9pc09iamVjdCIpOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIGFzeW5jVGFnPSJbb2JqZWN0IEFzeW5jRnVuY3Rpb25dIixmdW5jVGFnPSJbb2JqZWN0IEZ1bmN0aW9uXSIsZ2VuVGFnPSJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXSIscHJveHlUYWc9IltvYmplY3QgUHJveHldIjsKLyoqCiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC4xLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgZnVuY3Rpb24sIGVsc2UgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogXy5pc0Z1bmN0aW9uKF8pOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNGdW5jdGlvbigvYWJjLyk7CiAqIC8vID0+IGZhbHNlCiAqL2Z1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpe2lmKCFpc09iamVjdCh2YWx1ZSkpe3JldHVybiBmYWxzZX0KLy8gVGhlIHVzZSBvZiBgT2JqZWN0I3RvU3RyaW5nYCBhdm9pZHMgaXNzdWVzIHdpdGggdGhlIGB0eXBlb2ZgIG9wZXJhdG9yCi8vIGluIFNhZmFyaSA5IHdoaWNoIHJldHVybnMgJ29iamVjdCcgZm9yIHR5cGVkIGFycmF5cyBhbmQgb3RoZXIgY29uc3RydWN0b3JzLgp2YXIgdGFnPWJhc2VHZXRUYWcodmFsdWUpO3JldHVybiB0YWc9PWZ1bmNUYWd8fHRhZz09Z2VuVGFnfHx0YWc9PWFzeW5jVGFnfHx0YWc9PXByb3h5VGFnfW1vZHVsZS5leHBvcnRzPWlzRnVuY3Rpb259LHsiLi9fYmFzZUdldFRhZyI6MTUxLCIuL2lzT2JqZWN0IjozMTF9XSwzMDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi8KdmFyIE1BWF9TQUZFX0lOVEVHRVI9OTAwNzE5OTI1NDc0MDk5MTsKLyoqCiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguCiAqCiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uCiAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMC4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzTGVuZ3RoKDMpOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7CiAqIC8vID0+IGZhbHNlCiAqCiAqIF8uaXNMZW5ndGgoSW5maW5pdHkpOwogKiAvLyA9PiBmYWxzZQogKgogKiBfLmlzTGVuZ3RoKCczJyk7CiAqIC8vID0+IGZhbHNlCiAqL2Z1bmN0aW9uIGlzTGVuZ3RoKHZhbHVlKXtyZXR1cm4gdHlwZW9mIHZhbHVlPT0ibnVtYmVyIiYmdmFsdWU+LTEmJnZhbHVlJTE9PTAmJnZhbHVlPD1NQVhfU0FGRV9JTlRFR0VSfW1vZHVsZS5leHBvcnRzPWlzTGVuZ3RofSx7fV0sMzEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUlzTWFwPXJlcXVpcmUoIi4vX2Jhc2VJc01hcCIpLGJhc2VVbmFyeT1yZXF1aXJlKCIuL19iYXNlVW5hcnkiKSxub2RlVXRpbD1yZXF1aXJlKCIuL19ub2RlVXRpbCIpOwovKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL3ZhciBub2RlSXNNYXA9bm9kZVV0aWwmJm5vZGVVdGlsLmlzTWFwOwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBNYXBgIG9iamVjdC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgNC4zLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgbWFwLCBlbHNlIGBmYWxzZWAuCiAqIEBleGFtcGxlCiAqCiAqIF8uaXNNYXAobmV3IE1hcCk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc01hcChuZXcgV2Vha01hcCk7CiAqIC8vID0+IGZhbHNlCiAqL3ZhciBpc01hcD1ub2RlSXNNYXA/YmFzZVVuYXJ5KG5vZGVJc01hcCk6YmFzZUlzTWFwO21vZHVsZS5leHBvcnRzPWlzTWFwfSx7Ii4vX2Jhc2VJc01hcCI6MTU5LCIuL19iYXNlVW5hcnkiOjE4NywiLi9fbm9kZVV0aWwiOjI2NH1dLDMxMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyB0aGUKICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKQogKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDAuMS4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBvYmplY3QsIGVsc2UgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogXy5pc09iamVjdCh7fSk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc09iamVjdChbMSwgMiwgM10pOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNPYmplY3QoXy5ub29wKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzT2JqZWN0KG51bGwpOwogKiAvLyA9PiBmYWxzZQogKi8KZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpe3ZhciB0eXBlPXR5cGVvZiB2YWx1ZTtyZXR1cm4gdmFsdWUhPW51bGwmJih0eXBlPT0ib2JqZWN0Inx8dHlwZT09ImZ1bmN0aW9uIil9bW9kdWxlLmV4cG9ydHM9aXNPYmplY3R9LHt9XSwzMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgCiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgIm9iamVjdCIuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMC4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzT2JqZWN0TGlrZSh7fSk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApOwogKiAvLyA9PiBmYWxzZQogKgogKiBfLmlzT2JqZWN0TGlrZShudWxsKTsKICogLy8gPT4gZmFsc2UKICovCmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSl7cmV0dXJuIHZhbHVlIT1udWxsJiZ0eXBlb2YgdmFsdWU9PSJvYmplY3QifW1vZHVsZS5leHBvcnRzPWlzT2JqZWN0TGlrZX0se31dLDMxMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VHZXRUYWc9cmVxdWlyZSgiLi9fYmFzZUdldFRhZyIpLGdldFByb3RvdHlwZT1yZXF1aXJlKCIuL19nZXRQcm90b3R5cGUiKSxpc09iamVjdExpa2U9cmVxdWlyZSgiLi9pc09iamVjdExpa2UiKTsKLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL3ZhciBvYmplY3RUYWc9IltvYmplY3QgT2JqZWN0XSI7Ci8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi92YXIgZnVuY1Byb3RvPUZ1bmN0aW9uLnByb3RvdHlwZSxvYmplY3RQcm90bz1PYmplY3QucHJvdG90eXBlOwovKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovdmFyIGZ1bmNUb1N0cmluZz1mdW5jUHJvdG8udG9TdHJpbmc7Ci8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL3ZhciBoYXNPd25Qcm9wZXJ0eT1vYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTsKLyoqIFVzZWQgdG8gaW5mZXIgdGhlIGBPYmplY3RgIGNvbnN0cnVjdG9yLiAqL3ZhciBvYmplY3RDdG9yU3RyaW5nPWZ1bmNUb1N0cmluZy5jYWxsKE9iamVjdCk7Ci8qKgogKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHBsYWluIG9iamVjdCwgdGhhdCBpcywgYW4gb2JqZWN0IGNyZWF0ZWQgYnkgdGhlCiAqIGBPYmplY3RgIGNvbnN0cnVjdG9yIG9yIG9uZSB3aXRoIGEgYFtbUHJvdG90eXBlXV1gIG9mIGBudWxsYC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC44LjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuCiAqIEBleGFtcGxlCiAqCiAqIGZ1bmN0aW9uIEZvbygpIHsKICogICB0aGlzLmEgPSAxOwogKiB9CiAqCiAqIF8uaXNQbGFpbk9iamVjdChuZXcgRm9vKTsKICogLy8gPT4gZmFsc2UKICoKICogXy5pc1BsYWluT2JqZWN0KFsxLCAyLCAzXSk7CiAqIC8vID0+IGZhbHNlCiAqCiAqIF8uaXNQbGFpbk9iamVjdCh7ICd4JzogMCwgJ3knOiAwIH0pOwogKiAvLyA9PiB0cnVlCiAqCiAqIF8uaXNQbGFpbk9iamVjdChPYmplY3QuY3JlYXRlKG51bGwpKTsKICogLy8gPT4gdHJ1ZQogKi9mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKXtpZighaXNPYmplY3RMaWtlKHZhbHVlKXx8YmFzZUdldFRhZyh2YWx1ZSkhPW9iamVjdFRhZyl7cmV0dXJuIGZhbHNlfXZhciBwcm90bz1nZXRQcm90b3R5cGUodmFsdWUpO2lmKHByb3RvPT09bnVsbCl7cmV0dXJuIHRydWV9dmFyIEN0b3I9aGFzT3duUHJvcGVydHkuY2FsbChwcm90bywiY29uc3RydWN0b3IiKSYmcHJvdG8uY29uc3RydWN0b3I7cmV0dXJuIHR5cGVvZiBDdG9yPT0iZnVuY3Rpb24iJiZDdG9yIGluc3RhbmNlb2YgQ3RvciYmZnVuY1RvU3RyaW5nLmNhbGwoQ3Rvcik9PW9iamVjdEN0b3JTdHJpbmd9bW9kdWxlLmV4cG9ydHM9aXNQbGFpbk9iamVjdH0seyIuL19iYXNlR2V0VGFnIjoxNTEsIi4vX2dldFByb3RvdHlwZSI6MjI0LCIuL2lzT2JqZWN0TGlrZSI6MzEyfV0sMzE0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUlzU2V0PXJlcXVpcmUoIi4vX2Jhc2VJc1NldCIpLGJhc2VVbmFyeT1yZXF1aXJlKCIuL19iYXNlVW5hcnkiKSxub2RlVXRpbD1yZXF1aXJlKCIuL19ub2RlVXRpbCIpOwovKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL3ZhciBub2RlSXNTZXQ9bm9kZVV0aWwmJm5vZGVVdGlsLmlzU2V0OwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTZXRgIG9iamVjdC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgNC4zLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgc2V0LCBlbHNlIGBmYWxzZWAuCiAqIEBleGFtcGxlCiAqCiAqIF8uaXNTZXQobmV3IFNldCk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc1NldChuZXcgV2Vha1NldCk7CiAqIC8vID0+IGZhbHNlCiAqL3ZhciBpc1NldD1ub2RlSXNTZXQ/YmFzZVVuYXJ5KG5vZGVJc1NldCk6YmFzZUlzU2V0O21vZHVsZS5leHBvcnRzPWlzU2V0fSx7Ii4vX2Jhc2VJc1NldCI6MTYzLCIuL19iYXNlVW5hcnkiOjE4NywiLi9fbm9kZVV0aWwiOjI2NH1dLDMxNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VHZXRUYWc9cmVxdWlyZSgiLi9fYmFzZUdldFRhZyIpLGlzQXJyYXk9cmVxdWlyZSgiLi9pc0FycmF5IiksaXNPYmplY3RMaWtlPXJlcXVpcmUoIi4vaXNPYmplY3RMaWtlIik7Ci8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi92YXIgc3RyaW5nVGFnPSJbb2JqZWN0IFN0cmluZ10iOwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTdHJpbmdgIHByaW1pdGl2ZSBvciBvYmplY3QuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN0cmluZywgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzU3RyaW5nKCdhYmMnKTsKICogLy8gPT4gdHJ1ZQogKgogKiBfLmlzU3RyaW5nKDEpOwogKiAvLyA9PiBmYWxzZQogKi9mdW5jdGlvbiBpc1N0cmluZyh2YWx1ZSl7cmV0dXJuIHR5cGVvZiB2YWx1ZT09InN0cmluZyJ8fCFpc0FycmF5KHZhbHVlKSYmaXNPYmplY3RMaWtlKHZhbHVlKSYmYmFzZUdldFRhZyh2YWx1ZSk9PXN0cmluZ1RhZ31tb2R1bGUuZXhwb3J0cz1pc1N0cmluZ30seyIuL19iYXNlR2V0VGFnIjoxNTEsIi4vaXNBcnJheSI6MzAzLCIuL2lzT2JqZWN0TGlrZSI6MzEyfV0sMzE2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUdldFRhZz1yZXF1aXJlKCIuL19iYXNlR2V0VGFnIiksaXNPYmplY3RMaWtlPXJlcXVpcmUoIi4vaXNPYmplY3RMaWtlIik7Ci8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi92YXIgc3ltYm9sVGFnPSJbb2JqZWN0IFN5bWJvbF0iOwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMC4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7CiAqIC8vID0+IHRydWUKICoKICogXy5pc1N5bWJvbCgnYWJjJyk7CiAqIC8vID0+IGZhbHNlCiAqL2Z1bmN0aW9uIGlzU3ltYm9sKHZhbHVlKXtyZXR1cm4gdHlwZW9mIHZhbHVlPT0ic3ltYm9sInx8aXNPYmplY3RMaWtlKHZhbHVlKSYmYmFzZUdldFRhZyh2YWx1ZSk9PXN5bWJvbFRhZ31tb2R1bGUuZXhwb3J0cz1pc1N5bWJvbH0seyIuL19iYXNlR2V0VGFnIjoxNTEsIi4vaXNPYmplY3RMaWtlIjozMTJ9XSwzMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlSXNUeXBlZEFycmF5PXJlcXVpcmUoIi4vX2Jhc2VJc1R5cGVkQXJyYXkiKSxiYXNlVW5hcnk9cmVxdWlyZSgiLi9fYmFzZVVuYXJ5Iiksbm9kZVV0aWw9cmVxdWlyZSgiLi9fbm9kZVV0aWwiKTsKLyogTm9kZS5qcyBoZWxwZXIgcmVmZXJlbmNlcy4gKi92YXIgbm9kZUlzVHlwZWRBcnJheT1ub2RlVXRpbCYmbm9kZVV0aWwuaXNUeXBlZEFycmF5OwovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAzLjAuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay4KICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzVHlwZWRBcnJheShuZXcgVWludDhBcnJheSk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc1R5cGVkQXJyYXkoW10pOwogKiAvLyA9PiBmYWxzZQogKi92YXIgaXNUeXBlZEFycmF5PW5vZGVJc1R5cGVkQXJyYXk/YmFzZVVuYXJ5KG5vZGVJc1R5cGVkQXJyYXkpOmJhc2VJc1R5cGVkQXJyYXk7bW9kdWxlLmV4cG9ydHM9aXNUeXBlZEFycmF5fSx7Ii4vX2Jhc2VJc1R5cGVkQXJyYXkiOjE2NCwiLi9fYmFzZVVuYXJ5IjoxODcsIi4vX25vZGVVdGlsIjoyNjR9XSwzMTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYHVuZGVmaW5lZGAuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLgogKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBgdW5kZWZpbmVkYCwgZWxzZSBgZmFsc2VgLgogKiBAZXhhbXBsZQogKgogKiBfLmlzVW5kZWZpbmVkKHZvaWQgMCk7CiAqIC8vID0+IHRydWUKICoKICogXy5pc1VuZGVmaW5lZChudWxsKTsKICogLy8gPT4gZmFsc2UKICovCmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbHVlKXtyZXR1cm4gdmFsdWU9PT11bmRlZmluZWR9bW9kdWxlLmV4cG9ydHM9aXNVbmRlZmluZWR9LHt9XSwzMTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheUxpa2VLZXlzPXJlcXVpcmUoIi4vX2FycmF5TGlrZUtleXMiKSxiYXNlS2V5cz1yZXF1aXJlKCIuL19iYXNlS2V5cyIpLGlzQXJyYXlMaWtlPXJlcXVpcmUoIi4vaXNBcnJheUxpa2UiKTsKLyoqCiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIG93biBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIGBvYmplY3RgLgogKgogKiAqKk5vdGU6KiogTm9uLW9iamVjdCB2YWx1ZXMgYXJlIGNvZXJjZWQgdG8gb2JqZWN0cy4gU2VlIHRoZQogKiBbRVMgc3BlY10oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LmtleXMpCiAqIGZvciBtb3JlIGRldGFpbHMuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBPYmplY3QKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLgogKiBAZXhhbXBsZQogKgogKiBmdW5jdGlvbiBGb28oKSB7CiAqICAgdGhpcy5hID0gMTsKICogICB0aGlzLmIgPSAyOwogKiB9CiAqCiAqIEZvby5wcm90b3R5cGUuYyA9IDM7CiAqCiAqIF8ua2V5cyhuZXcgRm9vKTsKICogLy8gPT4gWydhJywgJ2InXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKQogKgogKiBfLmtleXMoJ2hpJyk7CiAqIC8vID0+IFsnMCcsICcxJ10KICovZnVuY3Rpb24ga2V5cyhvYmplY3Qpe3JldHVybiBpc0FycmF5TGlrZShvYmplY3QpP2FycmF5TGlrZUtleXMob2JqZWN0KTpiYXNlS2V5cyhvYmplY3QpfW1vZHVsZS5leHBvcnRzPWtleXN9LHsiLi9fYXJyYXlMaWtlS2V5cyI6MTI4LCIuL19iYXNlS2V5cyI6MTY2LCIuL2lzQXJyYXlMaWtlIjozMDR9XSwzMjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheUxpa2VLZXlzPXJlcXVpcmUoIi4vX2FycmF5TGlrZUtleXMiKSxiYXNlS2V5c0luPXJlcXVpcmUoIi4vX2Jhc2VLZXlzSW4iKSxpc0FycmF5TGlrZT1yZXF1aXJlKCIuL2lzQXJyYXlMaWtlIik7Ci8qKgogKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIGBvYmplY3RgLgogKgogKiAqKk5vdGU6KiogTm9uLW9iamVjdCB2YWx1ZXMgYXJlIGNvZXJjZWQgdG8gb2JqZWN0cy4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMy4wLjAKICogQGNhdGVnb3J5IE9iamVjdAogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuCiAqIEBleGFtcGxlCiAqCiAqIGZ1bmN0aW9uIEZvbygpIHsKICogICB0aGlzLmEgPSAxOwogKiAgIHRoaXMuYiA9IDI7CiAqIH0KICoKICogRm9vLnByb3RvdHlwZS5jID0gMzsKICoKICogXy5rZXlzSW4obmV3IEZvbyk7CiAqIC8vID0+IFsnYScsICdiJywgJ2MnXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKQogKi9mdW5jdGlvbiBrZXlzSW4ob2JqZWN0KXtyZXR1cm4gaXNBcnJheUxpa2Uob2JqZWN0KT9hcnJheUxpa2VLZXlzKG9iamVjdCx0cnVlKTpiYXNlS2V5c0luKG9iamVjdCl9bW9kdWxlLmV4cG9ydHM9a2V5c0lufSx7Ii4vX2FycmF5TGlrZUtleXMiOjEyOCwiLi9fYmFzZUtleXNJbiI6MTY3LCIuL2lzQXJyYXlMaWtlIjozMDR9XSwzMjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogR2V0cyB0aGUgbGFzdCBlbGVtZW50IG9mIGBhcnJheWAuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDAuMS4wCiAqIEBjYXRlZ29yeSBBcnJheQogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gcXVlcnkuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBsYXN0IGVsZW1lbnQgb2YgYGFycmF5YC4KICogQGV4YW1wbGUKICoKICogXy5sYXN0KFsxLCAyLCAzXSk7CiAqIC8vID0+IDMKICovCmZ1bmN0aW9uIGxhc3QoYXJyYXkpe3ZhciBsZW5ndGg9YXJyYXk9PW51bGw/MDphcnJheS5sZW5ndGg7cmV0dXJuIGxlbmd0aD9hcnJheVtsZW5ndGgtMV06dW5kZWZpbmVkfW1vZHVsZS5leHBvcnRzPWxhc3R9LHt9XSwzMjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheU1hcD1yZXF1aXJlKCIuL19hcnJheU1hcCIpLGJhc2VJdGVyYXRlZT1yZXF1aXJlKCIuL19iYXNlSXRlcmF0ZWUiKSxiYXNlTWFwPXJlcXVpcmUoIi4vX2Jhc2VNYXAiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpOwovKioKICogQ3JlYXRlcyBhbiBhcnJheSBvZiB2YWx1ZXMgYnkgcnVubmluZyBlYWNoIGVsZW1lbnQgaW4gYGNvbGxlY3Rpb25gIHRocnUKICogYGl0ZXJhdGVlYC4gVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM6CiAqICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS4KICoKICogTWFueSBsb2Rhc2ggbWV0aG9kcyBhcmUgZ3VhcmRlZCB0byB3b3JrIGFzIGl0ZXJhdGVlcyBmb3IgbWV0aG9kcyBsaWtlCiAqIGBfLmV2ZXJ5YCwgYF8uZmlsdGVyYCwgYF8ubWFwYCwgYF8ubWFwVmFsdWVzYCwgYF8ucmVqZWN0YCwgYW5kIGBfLnNvbWVgLgogKgogKiBUaGUgZ3VhcmRlZCBtZXRob2RzIGFyZToKICogYGFyeWAsIGBjaHVua2AsIGBjdXJyeWAsIGBjdXJyeVJpZ2h0YCwgYGRyb3BgLCBgZHJvcFJpZ2h0YCwgYGV2ZXJ5YCwKICogYGZpbGxgLCBgaW52ZXJ0YCwgYHBhcnNlSW50YCwgYHJhbmRvbWAsIGByYW5nZWAsIGByYW5nZVJpZ2h0YCwgYHJlcGVhdGAsCiAqIGBzYW1wbGVTaXplYCwgYHNsaWNlYCwgYHNvbWVgLCBgc29ydEJ5YCwgYHNwbGl0YCwgYHRha2VgLCBgdGFrZVJpZ2h0YCwKICogYHRlbXBsYXRlYCwgYHRyaW1gLCBgdHJpbUVuZGAsIGB0cmltU3RhcnRgLCBhbmQgYHdvcmRzYAogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbgogKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuCiAqIEBleGFtcGxlCiAqCiAqIGZ1bmN0aW9uIHNxdWFyZShuKSB7CiAqICAgcmV0dXJuIG4gKiBuOwogKiB9CiAqCiAqIF8ubWFwKFs0LCA4XSwgc3F1YXJlKTsKICogLy8gPT4gWzE2LCA2NF0KICoKICogXy5tYXAoeyAnYSc6IDQsICdiJzogOCB9LCBzcXVhcmUpOwogKiAvLyA9PiBbMTYsIDY0XSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKQogKgogKiB2YXIgdXNlcnMgPSBbCiAqICAgeyAndXNlcic6ICdiYXJuZXknIH0sCiAqICAgeyAndXNlcic6ICdmcmVkJyB9CiAqIF07CiAqCiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLm1hcCh1c2VycywgJ3VzZXInKTsKICogLy8gPT4gWydiYXJuZXknLCAnZnJlZCddCiAqL2Z1bmN0aW9uIG1hcChjb2xsZWN0aW9uLGl0ZXJhdGVlKXt2YXIgZnVuYz1pc0FycmF5KGNvbGxlY3Rpb24pP2FycmF5TWFwOmJhc2VNYXA7cmV0dXJuIGZ1bmMoY29sbGVjdGlvbixiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUsMykpfW1vZHVsZS5leHBvcnRzPW1hcH0seyIuL19hcnJheU1hcCI6MTI5LCIuL19iYXNlSXRlcmF0ZWUiOjE2NSwiLi9fYmFzZU1hcCI6MTY5LCIuL2lzQXJyYXkiOjMwM31dLDMyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VBc3NpZ25WYWx1ZT1yZXF1aXJlKCIuL19iYXNlQXNzaWduVmFsdWUiKSxiYXNlRm9yT3duPXJlcXVpcmUoIi4vX2Jhc2VGb3JPd24iKSxiYXNlSXRlcmF0ZWU9cmVxdWlyZSgiLi9fYmFzZUl0ZXJhdGVlIik7Ci8qKgogKiBDcmVhdGVzIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIGtleXMgYXMgYG9iamVjdGAgYW5kIHZhbHVlcyBnZW5lcmF0ZWQKICogYnkgcnVubmluZyBlYWNoIG93biBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBwcm9wZXJ0eSBvZiBgb2JqZWN0YCB0aHJ1CiAqIGBpdGVyYXRlZWAuIFRoZSBpdGVyYXRlZSBpcyBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOgogKiAodmFsdWUsIGtleSwgb2JqZWN0KS4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMi40LjAKICogQGNhdGVnb3J5IE9iamVjdAogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbaXRlcmF0ZWU9Xy5pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi4KICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBvYmplY3QuCiAqIEBzZWUgXy5tYXBLZXlzCiAqIEBleGFtcGxlCiAqCiAqIHZhciB1c2VycyA9IHsKICogICAnZnJlZCc6ICAgIHsgJ3VzZXInOiAnZnJlZCcsICAgICdhZ2UnOiA0MCB9LAogKiAgICdwZWJibGVzJzogeyAndXNlcic6ICdwZWJibGVzJywgJ2FnZSc6IDEgfQogKiB9OwogKgogKiBfLm1hcFZhbHVlcyh1c2VycywgZnVuY3Rpb24obykgeyByZXR1cm4gby5hZ2U7IH0pOwogKiAvLyA9PiB7ICdmcmVkJzogNDAsICdwZWJibGVzJzogMSB9IChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpCiAqCiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLm1hcFZhbHVlcyh1c2VycywgJ2FnZScpOwogKiAvLyA9PiB7ICdmcmVkJzogNDAsICdwZWJibGVzJzogMSB9IChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpCiAqL2Z1bmN0aW9uIG1hcFZhbHVlcyhvYmplY3QsaXRlcmF0ZWUpe3ZhciByZXN1bHQ9e307aXRlcmF0ZWU9YmFzZUl0ZXJhdGVlKGl0ZXJhdGVlLDMpO2Jhc2VGb3JPd24ob2JqZWN0LGZ1bmN0aW9uKHZhbHVlLGtleSxvYmplY3Qpe2Jhc2VBc3NpZ25WYWx1ZShyZXN1bHQsa2V5LGl0ZXJhdGVlKHZhbHVlLGtleSxvYmplY3QpKX0pO3JldHVybiByZXN1bHR9bW9kdWxlLmV4cG9ydHM9bWFwVmFsdWVzfSx7Ii4vX2Jhc2VBc3NpZ25WYWx1ZSI6MTM5LCIuL19iYXNlRm9yT3duIjoxNDgsIi4vX2Jhc2VJdGVyYXRlZSI6MTY1fV0sMzI0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUV4dHJlbXVtPXJlcXVpcmUoIi4vX2Jhc2VFeHRyZW11bSIpLGJhc2VHdD1yZXF1aXJlKCIuL19iYXNlR3QiKSxpZGVudGl0eT1yZXF1aXJlKCIuL2lkZW50aXR5Iik7Ci8qKgogKiBDb21wdXRlcyB0aGUgbWF4aW11bSB2YWx1ZSBvZiBgYXJyYXlgLiBJZiBgYXJyYXlgIGlzIGVtcHR5IG9yIGZhbHNleSwKICogYHVuZGVmaW5lZGAgaXMgcmV0dXJuZWQuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBNYXRoCiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXhpbXVtIHZhbHVlLgogKiBAZXhhbXBsZQogKgogKiBfLm1heChbNCwgMiwgOCwgNl0pOwogKiAvLyA9PiA4CiAqCiAqIF8ubWF4KFtdKTsKICogLy8gPT4gdW5kZWZpbmVkCiAqL2Z1bmN0aW9uIG1heChhcnJheSl7cmV0dXJuIGFycmF5JiZhcnJheS5sZW5ndGg/YmFzZUV4dHJlbXVtKGFycmF5LGlkZW50aXR5LGJhc2VHdCk6dW5kZWZpbmVkfW1vZHVsZS5leHBvcnRzPW1heH0seyIuL19iYXNlRXh0cmVtdW0iOjE0MywiLi9fYmFzZUd0IjoxNTIsIi4vaWRlbnRpdHkiOjMwMX1dLDMyNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIE1hcENhY2hlPXJlcXVpcmUoIi4vX01hcENhY2hlIik7Ci8qKiBFcnJvciBtZXNzYWdlIGNvbnN0YW50cy4gKi92YXIgRlVOQ19FUlJPUl9URVhUPSJFeHBlY3RlZCBhIGZ1bmN0aW9uIjsKLyoqCiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG1lbW9pemVzIHRoZSByZXN1bHQgb2YgYGZ1bmNgLiBJZiBgcmVzb2x2ZXJgIGlzCiAqIHByb3ZpZGVkLCBpdCBkZXRlcm1pbmVzIHRoZSBjYWNoZSBrZXkgZm9yIHN0b3JpbmcgdGhlIHJlc3VsdCBiYXNlZCBvbiB0aGUKICogYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbi4gQnkgZGVmYXVsdCwgdGhlIGZpcnN0IGFyZ3VtZW50CiAqIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBtYXAgY2FjaGUga2V5LiBUaGUgYGZ1bmNgCiAqIGlzIGludm9rZWQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIG1lbW9pemVkIGZ1bmN0aW9uLgogKgogKiAqKk5vdGU6KiogVGhlIGNhY2hlIGlzIGV4cG9zZWQgYXMgdGhlIGBjYWNoZWAgcHJvcGVydHkgb24gdGhlIG1lbW9pemVkCiAqIGZ1bmN0aW9uLiBJdHMgY3JlYXRpb24gbWF5IGJlIGN1c3RvbWl6ZWQgYnkgcmVwbGFjaW5nIHRoZSBgXy5tZW1vaXplLkNhY2hlYAogKiBjb25zdHJ1Y3RvciB3aXRoIG9uZSB3aG9zZSBpbnN0YW5jZXMgaW1wbGVtZW50IHRoZQogKiBbYE1hcGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXByb3BlcnRpZXMtb2YtdGhlLW1hcC1wcm90b3R5cGUtb2JqZWN0KQogKiBtZXRob2QgaW50ZXJmYWNlIG9mIGBjbGVhcmAsIGBkZWxldGVgLCBgZ2V0YCwgYGhhc2AsIGFuZCBgc2V0YC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC4xLjAKICogQGNhdGVnb3J5IEZ1bmN0aW9uCiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGhhdmUgaXRzIG91dHB1dCBtZW1vaXplZC4KICogQHBhcmFtIHtGdW5jdGlvbn0gW3Jlc29sdmVyXSBUaGUgZnVuY3Rpb24gdG8gcmVzb2x2ZSB0aGUgY2FjaGUga2V5LgogKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi4KICogQGV4YW1wbGUKICoKICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6IDIgfTsKICogdmFyIG90aGVyID0geyAnYyc6IDMsICdkJzogNCB9OwogKgogKiB2YXIgdmFsdWVzID0gXy5tZW1vaXplKF8udmFsdWVzKTsKICogdmFsdWVzKG9iamVjdCk7CiAqIC8vID0+IFsxLCAyXQogKgogKiB2YWx1ZXMob3RoZXIpOwogKiAvLyA9PiBbMywgNF0KICoKICogb2JqZWN0LmEgPSAyOwogKiB2YWx1ZXMob2JqZWN0KTsKICogLy8gPT4gWzEsIDJdCiAqCiAqIC8vIE1vZGlmeSB0aGUgcmVzdWx0IGNhY2hlLgogKiB2YWx1ZXMuY2FjaGUuc2V0KG9iamVjdCwgWydhJywgJ2InXSk7CiAqIHZhbHVlcyhvYmplY3QpOwogKiAvLyA9PiBbJ2EnLCAnYiddCiAqCiAqIC8vIFJlcGxhY2UgYF8ubWVtb2l6ZS5DYWNoZWAuCiAqIF8ubWVtb2l6ZS5DYWNoZSA9IFdlYWtNYXA7CiAqL2Z1bmN0aW9uIG1lbW9pemUoZnVuYyxyZXNvbHZlcil7aWYodHlwZW9mIGZ1bmMhPSJmdW5jdGlvbiJ8fHJlc29sdmVyIT1udWxsJiZ0eXBlb2YgcmVzb2x2ZXIhPSJmdW5jdGlvbiIpe3Rocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKX12YXIgbWVtb2l6ZWQ9ZnVuY3Rpb24oKXt2YXIgYXJncz1hcmd1bWVudHMsa2V5PXJlc29sdmVyP3Jlc29sdmVyLmFwcGx5KHRoaXMsYXJncyk6YXJnc1swXSxjYWNoZT1tZW1vaXplZC5jYWNoZTtpZihjYWNoZS5oYXMoa2V5KSl7cmV0dXJuIGNhY2hlLmdldChrZXkpfXZhciByZXN1bHQ9ZnVuYy5hcHBseSh0aGlzLGFyZ3MpO21lbW9pemVkLmNhY2hlPWNhY2hlLnNldChrZXkscmVzdWx0KXx8Y2FjaGU7cmV0dXJuIHJlc3VsdH07bWVtb2l6ZWQuY2FjaGU9bmV3KG1lbW9pemUuQ2FjaGV8fE1hcENhY2hlKTtyZXR1cm4gbWVtb2l6ZWR9Ci8vIEV4cG9zZSBgTWFwQ2FjaGVgLgptZW1vaXplLkNhY2hlPU1hcENhY2hlO21vZHVsZS5leHBvcnRzPW1lbW9pemV9LHsiLi9fTWFwQ2FjaGUiOjExNX1dLDMyNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VNZXJnZT1yZXF1aXJlKCIuL19iYXNlTWVyZ2UiKSxjcmVhdGVBc3NpZ25lcj1yZXF1aXJlKCIuL19jcmVhdGVBc3NpZ25lciIpOwovKioKICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5hc3NpZ25gIGV4Y2VwdCB0aGF0IGl0IHJlY3Vyc2l2ZWx5IG1lcmdlcyBvd24gYW5kCiAqIGluaGVyaXRlZCBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBwcm9wZXJ0aWVzIG9mIHNvdXJjZSBvYmplY3RzIGludG8gdGhlCiAqIGRlc3RpbmF0aW9uIG9iamVjdC4gU291cmNlIHByb3BlcnRpZXMgdGhhdCByZXNvbHZlIHRvIGB1bmRlZmluZWRgIGFyZQogKiBza2lwcGVkIGlmIGEgZGVzdGluYXRpb24gdmFsdWUgZXhpc3RzLiBBcnJheSBhbmQgcGxhaW4gb2JqZWN0IHByb3BlcnRpZXMKICogYXJlIG1lcmdlZCByZWN1cnNpdmVseS4gT3RoZXIgb2JqZWN0cyBhbmQgdmFsdWUgdHlwZXMgYXJlIG92ZXJyaWRkZW4gYnkKICogYXNzaWdubWVudC4gU291cmNlIG9iamVjdHMgYXJlIGFwcGxpZWQgZnJvbSBsZWZ0IHRvIHJpZ2h0LiBTdWJzZXF1ZW50CiAqIHNvdXJjZXMgb3ZlcndyaXRlIHByb3BlcnR5IGFzc2lnbm1lbnRzIG9mIHByZXZpb3VzIHNvdXJjZXMuCiAqCiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBtdXRhdGVzIGBvYmplY3RgLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjUuMAogKiBAY2F0ZWdvcnkgT2JqZWN0CiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIGRlc3RpbmF0aW9uIG9iamVjdC4KICogQHBhcmFtIHsuLi5PYmplY3R9IFtzb3VyY2VzXSBUaGUgc291cmNlIG9iamVjdHMuCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3QgPSB7CiAqICAgJ2EnOiBbeyAnYic6IDIgfSwgeyAnZCc6IDQgfV0KICogfTsKICoKICogdmFyIG90aGVyID0gewogKiAgICdhJzogW3sgJ2MnOiAzIH0sIHsgJ2UnOiA1IH1dCiAqIH07CiAqCiAqIF8ubWVyZ2Uob2JqZWN0LCBvdGhlcik7CiAqIC8vID0+IHsgJ2EnOiBbeyAnYic6IDIsICdjJzogMyB9LCB7ICdkJzogNCwgJ2UnOiA1IH1dIH0KICovdmFyIG1lcmdlPWNyZWF0ZUFzc2lnbmVyKGZ1bmN0aW9uKG9iamVjdCxzb3VyY2Usc3JjSW5kZXgpe2Jhc2VNZXJnZShvYmplY3Qsc291cmNlLHNyY0luZGV4KX0pO21vZHVsZS5leHBvcnRzPW1lcmdlfSx7Ii4vX2Jhc2VNZXJnZSI6MTcyLCIuL19jcmVhdGVBc3NpZ25lciI6MjA3fV0sMzI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZUV4dHJlbXVtPXJlcXVpcmUoIi4vX2Jhc2VFeHRyZW11bSIpLGJhc2VMdD1yZXF1aXJlKCIuL19iYXNlTHQiKSxpZGVudGl0eT1yZXF1aXJlKCIuL2lkZW50aXR5Iik7Ci8qKgogKiBDb21wdXRlcyB0aGUgbWluaW11bSB2YWx1ZSBvZiBgYXJyYXlgLiBJZiBgYXJyYXlgIGlzIGVtcHR5IG9yIGZhbHNleSwKICogYHVuZGVmaW5lZGAgaXMgcmV0dXJuZWQuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBNYXRoCiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtaW5pbXVtIHZhbHVlLgogKiBAZXhhbXBsZQogKgogKiBfLm1pbihbNCwgMiwgOCwgNl0pOwogKiAvLyA9PiAyCiAqCiAqIF8ubWluKFtdKTsKICogLy8gPT4gdW5kZWZpbmVkCiAqL2Z1bmN0aW9uIG1pbihhcnJheSl7cmV0dXJuIGFycmF5JiZhcnJheS5sZW5ndGg/YmFzZUV4dHJlbXVtKGFycmF5LGlkZW50aXR5LGJhc2VMdCk6dW5kZWZpbmVkfW1vZHVsZS5leHBvcnRzPW1pbn0seyIuL19iYXNlRXh0cmVtdW0iOjE0MywiLi9fYmFzZUx0IjoxNjgsIi4vaWRlbnRpdHkiOjMwMX1dLDMyODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VFeHRyZW11bT1yZXF1aXJlKCIuL19iYXNlRXh0cmVtdW0iKSxiYXNlSXRlcmF0ZWU9cmVxdWlyZSgiLi9fYmFzZUl0ZXJhdGVlIiksYmFzZUx0PXJlcXVpcmUoIi4vX2Jhc2VMdCIpOwovKioKICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5taW5gIGV4Y2VwdCB0aGF0IGl0IGFjY2VwdHMgYGl0ZXJhdGVlYCB3aGljaCBpcwogKiBpbnZva2VkIGZvciBlYWNoIGVsZW1lbnQgaW4gYGFycmF5YCB0byBnZW5lcmF0ZSB0aGUgY3JpdGVyaW9uIGJ5IHdoaWNoCiAqIHRoZSB2YWx1ZSBpcyByYW5rZWQuIFRoZSBpdGVyYXRlZSBpcyBpbnZva2VkIHdpdGggb25lIGFyZ3VtZW50OiAodmFsdWUpLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSA0LjAuMAogKiBAY2F0ZWdvcnkgTWF0aAogKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbaXRlcmF0ZWU9Xy5pZGVudGl0eV0gVGhlIGl0ZXJhdGVlIGludm9rZWQgcGVyIGVsZW1lbnQuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtaW5pbXVtIHZhbHVlLgogKiBAZXhhbXBsZQogKgogKiB2YXIgb2JqZWN0cyA9IFt7ICduJzogMSB9LCB7ICduJzogMiB9XTsKICoKICogXy5taW5CeShvYmplY3RzLCBmdW5jdGlvbihvKSB7IHJldHVybiBvLm47IH0pOwogKiAvLyA9PiB7ICduJzogMSB9CiAqCiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLgogKiBfLm1pbkJ5KG9iamVjdHMsICduJyk7CiAqIC8vID0+IHsgJ24nOiAxIH0KICovZnVuY3Rpb24gbWluQnkoYXJyYXksaXRlcmF0ZWUpe3JldHVybiBhcnJheSYmYXJyYXkubGVuZ3RoP2Jhc2VFeHRyZW11bShhcnJheSxiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUsMiksYmFzZUx0KTp1bmRlZmluZWR9bW9kdWxlLmV4cG9ydHM9bWluQnl9LHsiLi9fYmFzZUV4dHJlbXVtIjoxNDMsIi4vX2Jhc2VJdGVyYXRlZSI6MTY1LCIuL19iYXNlTHQiOjE2OH1dLDMyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qKgogKiBUaGlzIG1ldGhvZCByZXR1cm5zIGB1bmRlZmluZWRgLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAyLjMuMAogKiBAY2F0ZWdvcnkgVXRpbAogKiBAZXhhbXBsZQogKgogKiBfLnRpbWVzKDIsIF8ubm9vcCk7CiAqIC8vID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZF0KICovCmZ1bmN0aW9uIG5vb3AoKXsKLy8gTm8gb3BlcmF0aW9uIHBlcmZvcm1lZC4KfW1vZHVsZS5leHBvcnRzPW5vb3B9LHt9XSwzMzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciByb290PXJlcXVpcmUoIi4vX3Jvb3QiKTsKLyoqCiAqIEdldHMgdGhlIHRpbWVzdGFtcCBvZiB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0aGF0IGhhdmUgZWxhcHNlZCBzaW5jZQogKiB0aGUgVW5peCBlcG9jaCAoMSBKYW51YXJ5IDE5NzAgMDA6MDA6MDAgVVRDKS4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMi40LjAKICogQGNhdGVnb3J5IERhdGUKICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgdGltZXN0YW1wLgogKiBAZXhhbXBsZQogKgogKiBfLmRlZmVyKGZ1bmN0aW9uKHN0YW1wKSB7CiAqICAgY29uc29sZS5sb2coXy5ub3coKSAtIHN0YW1wKTsKICogfSwgXy5ub3coKSk7CiAqIC8vID0+IExvZ3MgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdG9vayBmb3IgdGhlIGRlZmVycmVkIGludm9jYXRpb24uCiAqL3ZhciBub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcm9vdC5EYXRlLm5vdygpfTttb2R1bGUuZXhwb3J0cz1ub3d9LHsiLi9fcm9vdCI6MjY4fV0sMzMxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVBpY2s9cmVxdWlyZSgiLi9fYmFzZVBpY2siKSxmbGF0UmVzdD1yZXF1aXJlKCIuL19mbGF0UmVzdCIpOwovKioKICogQ3JlYXRlcyBhbiBvYmplY3QgY29tcG9zZWQgb2YgdGhlIHBpY2tlZCBgb2JqZWN0YCBwcm9wZXJ0aWVzLgogKgogKiBAc3RhdGljCiAqIEBzaW5jZSAwLjEuMAogKiBAbWVtYmVyT2YgXwogKiBAY2F0ZWdvcnkgT2JqZWN0CiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIHNvdXJjZSBvYmplY3QuCiAqIEBwYXJhbSB7Li4uKHN0cmluZ3xzdHJpbmdbXSl9IFtwYXRoc10gVGhlIHByb3BlcnR5IHBhdGhzIHRvIHBpY2suCiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBvYmplY3QuCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSwgJ2InOiAnMicsICdjJzogMyB9OwogKgogKiBfLnBpY2sob2JqZWN0LCBbJ2EnLCAnYyddKTsKICogLy8gPT4geyAnYSc6IDEsICdjJzogMyB9CiAqL3ZhciBwaWNrPWZsYXRSZXN0KGZ1bmN0aW9uKG9iamVjdCxwYXRocyl7cmV0dXJuIG9iamVjdD09bnVsbD97fTpiYXNlUGljayhvYmplY3QscGF0aHMpfSk7bW9kdWxlLmV4cG9ydHM9cGlja30seyIuL19iYXNlUGljayI6MTc1LCIuL19mbGF0UmVzdCI6MjE3fV0sMzMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVByb3BlcnR5PXJlcXVpcmUoIi4vX2Jhc2VQcm9wZXJ0eSIpLGJhc2VQcm9wZXJ0eURlZXA9cmVxdWlyZSgiLi9fYmFzZVByb3BlcnR5RGVlcCIpLGlzS2V5PXJlcXVpcmUoIi4vX2lzS2V5IiksdG9LZXk9cmVxdWlyZSgiLi9fdG9LZXkiKTsKLyoqCiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIHZhbHVlIGF0IGBwYXRoYCBvZiBhIGdpdmVuIG9iamVjdC4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMi40LjAKICogQGNhdGVnb3J5IFV0aWwKICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC4KICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb24uCiAqIEBleGFtcGxlCiAqCiAqIHZhciBvYmplY3RzID0gWwogKiAgIHsgJ2EnOiB7ICdiJzogMiB9IH0sCiAqICAgeyAnYSc6IHsgJ2InOiAxIH0gfQogKiBdOwogKgogKiBfLm1hcChvYmplY3RzLCBfLnByb3BlcnR5KCdhLmInKSk7CiAqIC8vID0+IFsyLCAxXQogKgogKiBfLm1hcChfLnNvcnRCeShvYmplY3RzLCBfLnByb3BlcnR5KFsnYScsICdiJ10pKSwgJ2EuYicpOwogKiAvLyA9PiBbMSwgMl0KICovZnVuY3Rpb24gcHJvcGVydHkocGF0aCl7cmV0dXJuIGlzS2V5KHBhdGgpP2Jhc2VQcm9wZXJ0eSh0b0tleShwYXRoKSk6YmFzZVByb3BlcnR5RGVlcChwYXRoKX1tb2R1bGUuZXhwb3J0cz1wcm9wZXJ0eX0seyIuL19iYXNlUHJvcGVydHkiOjE3NywiLi9fYmFzZVByb3BlcnR5RGVlcCI6MTc4LCIuL19pc0tleSI6MjQzLCIuL190b0tleSI6MjgzfV0sMzMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgY3JlYXRlUmFuZ2U9cmVxdWlyZSgiLi9fY3JlYXRlUmFuZ2UiKTsKLyoqCiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgbnVtYmVycyAocG9zaXRpdmUgYW5kL29yIG5lZ2F0aXZlKSBwcm9ncmVzc2luZyBmcm9tCiAqIGBzdGFydGAgdXAgdG8sIGJ1dCBub3QgaW5jbHVkaW5nLCBgZW5kYC4gQSBzdGVwIG9mIGAtMWAgaXMgdXNlZCBpZiBhIG5lZ2F0aXZlCiAqIGBzdGFydGAgaXMgc3BlY2lmaWVkIHdpdGhvdXQgYW4gYGVuZGAgb3IgYHN0ZXBgLiBJZiBgZW5kYCBpcyBub3Qgc3BlY2lmaWVkLAogKiBpdCdzIHNldCB0byBgc3RhcnRgIHdpdGggYHN0YXJ0YCB0aGVuIHNldCB0byBgMGAuCiAqCiAqICoqTm90ZToqKiBKYXZhU2NyaXB0IGZvbGxvd3MgdGhlIElFRUUtNzU0IHN0YW5kYXJkIGZvciByZXNvbHZpbmcKICogZmxvYXRpbmctcG9pbnQgdmFsdWVzIHdoaWNoIGNhbiBwcm9kdWNlIHVuZXhwZWN0ZWQgcmVzdWx0cy4KICoKICogQHN0YXRpYwogKiBAc2luY2UgMC4xLjAKICogQG1lbWJlck9mIF8KICogQGNhdGVnb3J5IFV0aWwKICogQHBhcmFtIHtudW1iZXJ9IFtzdGFydD0wXSBUaGUgc3RhcnQgb2YgdGhlIHJhbmdlLgogKiBAcGFyYW0ge251bWJlcn0gZW5kIFRoZSBlbmQgb2YgdGhlIHJhbmdlLgogKiBAcGFyYW0ge251bWJlcn0gW3N0ZXA9MV0gVGhlIHZhbHVlIHRvIGluY3JlbWVudCBvciBkZWNyZW1lbnQgYnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgcmFuZ2Ugb2YgbnVtYmVycy4KICogQHNlZSBfLmluUmFuZ2UsIF8ucmFuZ2VSaWdodAogKiBAZXhhbXBsZQogKgogKiBfLnJhbmdlKDQpOwogKiAvLyA9PiBbMCwgMSwgMiwgM10KICoKICogXy5yYW5nZSgtNCk7CiAqIC8vID0+IFswLCAtMSwgLTIsIC0zXQogKgogKiBfLnJhbmdlKDEsIDUpOwogKiAvLyA9PiBbMSwgMiwgMywgNF0KICoKICogXy5yYW5nZSgwLCAyMCwgNSk7CiAqIC8vID0+IFswLCA1LCAxMCwgMTVdCiAqCiAqIF8ucmFuZ2UoMCwgLTQsIC0xKTsKICogLy8gPT4gWzAsIC0xLCAtMiwgLTNdCiAqCiAqIF8ucmFuZ2UoMSwgNCwgMCk7CiAqIC8vID0+IFsxLCAxLCAxXQogKgogKiBfLnJhbmdlKDApOwogKiAvLyA9PiBbXQogKi92YXIgcmFuZ2U9Y3JlYXRlUmFuZ2UoKTttb2R1bGUuZXhwb3J0cz1yYW5nZX0seyIuL19jcmVhdGVSYW5nZSI6MjExfV0sMzM0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYXJyYXlSZWR1Y2U9cmVxdWlyZSgiLi9fYXJyYXlSZWR1Y2UiKSxiYXNlRWFjaD1yZXF1aXJlKCIuL19iYXNlRWFjaCIpLGJhc2VJdGVyYXRlZT1yZXF1aXJlKCIuL19iYXNlSXRlcmF0ZWUiKSxiYXNlUmVkdWNlPXJlcXVpcmUoIi4vX2Jhc2VSZWR1Y2UiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpOwovKioKICogUmVkdWNlcyBgY29sbGVjdGlvbmAgdG8gYSB2YWx1ZSB3aGljaCBpcyB0aGUgYWNjdW11bGF0ZWQgcmVzdWx0IG9mIHJ1bm5pbmcKICogZWFjaCBlbGVtZW50IGluIGBjb2xsZWN0aW9uYCB0aHJ1IGBpdGVyYXRlZWAsIHdoZXJlIGVhY2ggc3VjY2Vzc2l2ZQogKiBpbnZvY2F0aW9uIGlzIHN1cHBsaWVkIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIHByZXZpb3VzLiBJZiBgYWNjdW11bGF0b3JgCiAqIGlzIG5vdCBnaXZlbiwgdGhlIGZpcnN0IGVsZW1lbnQgb2YgYGNvbGxlY3Rpb25gIGlzIHVzZWQgYXMgdGhlIGluaXRpYWwKICogdmFsdWUuIFRoZSBpdGVyYXRlZSBpcyBpbnZva2VkIHdpdGggZm91ciBhcmd1bWVudHM6CiAqIChhY2N1bXVsYXRvciwgdmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuCiAqCiAqIE1hbnkgbG9kYXNoIG1ldGhvZHMgYXJlIGd1YXJkZWQgdG8gd29yayBhcyBpdGVyYXRlZXMgZm9yIG1ldGhvZHMgbGlrZQogKiBgXy5yZWR1Y2VgLCBgXy5yZWR1Y2VSaWdodGAsIGFuZCBgXy50cmFuc2Zvcm1gLgogKgogKiBUaGUgZ3VhcmRlZCBtZXRob2RzIGFyZToKICogYGFzc2lnbmAsIGBkZWZhdWx0c2AsIGBkZWZhdWx0c0RlZXBgLCBgaW5jbHVkZXNgLCBgbWVyZ2VgLCBgb3JkZXJCeWAsCiAqIGFuZCBgc29ydEJ5YAogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbgogKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuCiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZT1fLmlkZW50aXR5XSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLgogKiBAcGFyYW0geyp9IFthY2N1bXVsYXRvcl0gVGhlIGluaXRpYWwgdmFsdWUuCiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBhY2N1bXVsYXRlZCB2YWx1ZS4KICogQHNlZSBfLnJlZHVjZVJpZ2h0CiAqIEBleGFtcGxlCiAqCiAqIF8ucmVkdWNlKFsxLCAyXSwgZnVuY3Rpb24oc3VtLCBuKSB7CiAqICAgcmV0dXJuIHN1bSArIG47CiAqIH0sIDApOwogKiAvLyA9PiAzCiAqCiAqIF8ucmVkdWNlKHsgJ2EnOiAxLCAnYic6IDIsICdjJzogMSB9LCBmdW5jdGlvbihyZXN1bHQsIHZhbHVlLCBrZXkpIHsKICogICAocmVzdWx0W3ZhbHVlXSB8fCAocmVzdWx0W3ZhbHVlXSA9IFtdKSkucHVzaChrZXkpOwogKiAgIHJldHVybiByZXN1bHQ7CiAqIH0sIHt9KTsKICogLy8gPT4geyAnMSc6IFsnYScsICdjJ10sICcyJzogWydiJ10gfSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKQogKi9mdW5jdGlvbiByZWR1Y2UoY29sbGVjdGlvbixpdGVyYXRlZSxhY2N1bXVsYXRvcil7dmFyIGZ1bmM9aXNBcnJheShjb2xsZWN0aW9uKT9hcnJheVJlZHVjZTpiYXNlUmVkdWNlLGluaXRBY2N1bT1hcmd1bWVudHMubGVuZ3RoPDM7cmV0dXJuIGZ1bmMoY29sbGVjdGlvbixiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUsNCksYWNjdW11bGF0b3IsaW5pdEFjY3VtLGJhc2VFYWNoKX1tb2R1bGUuZXhwb3J0cz1yZWR1Y2V9LHsiLi9fYXJyYXlSZWR1Y2UiOjEzMSwiLi9fYmFzZUVhY2giOjE0MiwiLi9fYmFzZUl0ZXJhdGVlIjoxNjUsIi4vX2Jhc2VSZWR1Y2UiOjE4MCwiLi9pc0FycmF5IjozMDN9XSwzMzU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlS2V5cz1yZXF1aXJlKCIuL19iYXNlS2V5cyIpLGdldFRhZz1yZXF1aXJlKCIuL19nZXRUYWciKSxpc0FycmF5TGlrZT1yZXF1aXJlKCIuL2lzQXJyYXlMaWtlIiksaXNTdHJpbmc9cmVxdWlyZSgiLi9pc1N0cmluZyIpLHN0cmluZ1NpemU9cmVxdWlyZSgiLi9fc3RyaW5nU2l6ZSIpOwovKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovdmFyIG1hcFRhZz0iW29iamVjdCBNYXBdIixzZXRUYWc9IltvYmplY3QgU2V0XSI7Ci8qKgogKiBHZXRzIHRoZSBzaXplIG9mIGBjb2xsZWN0aW9uYCBieSByZXR1cm5pbmcgaXRzIGxlbmd0aCBmb3IgYXJyYXktbGlrZQogKiB2YWx1ZXMgb3IgdGhlIG51bWJlciBvZiBvd24gZW51bWVyYWJsZSBzdHJpbmcga2V5ZWQgcHJvcGVydGllcyBmb3Igb2JqZWN0cy4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC4xLjAKICogQGNhdGVnb3J5IENvbGxlY3Rpb24KICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGluc3BlY3QuCiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGNvbGxlY3Rpb24gc2l6ZS4KICogQGV4YW1wbGUKICoKICogXy5zaXplKFsxLCAyLCAzXSk7CiAqIC8vID0+IDMKICoKICogXy5zaXplKHsgJ2EnOiAxLCAnYic6IDIgfSk7CiAqIC8vID0+IDIKICoKICogXy5zaXplKCdwZWJibGVzJyk7CiAqIC8vID0+IDcKICovZnVuY3Rpb24gc2l6ZShjb2xsZWN0aW9uKXtpZihjb2xsZWN0aW9uPT1udWxsKXtyZXR1cm4gMH1pZihpc0FycmF5TGlrZShjb2xsZWN0aW9uKSl7cmV0dXJuIGlzU3RyaW5nKGNvbGxlY3Rpb24pP3N0cmluZ1NpemUoY29sbGVjdGlvbik6Y29sbGVjdGlvbi5sZW5ndGh9dmFyIHRhZz1nZXRUYWcoY29sbGVjdGlvbik7aWYodGFnPT1tYXBUYWd8fHRhZz09c2V0VGFnKXtyZXR1cm4gY29sbGVjdGlvbi5zaXplfXJldHVybiBiYXNlS2V5cyhjb2xsZWN0aW9uKS5sZW5ndGh9bW9kdWxlLmV4cG9ydHM9c2l6ZX0seyIuL19iYXNlS2V5cyI6MTY2LCIuL19nZXRUYWciOjIyOCwiLi9fc3RyaW5nU2l6ZSI6MjgxLCIuL2lzQXJyYXlMaWtlIjozMDQsIi4vaXNTdHJpbmciOjMxNX1dLDMzNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJhc2VGbGF0dGVuPXJlcXVpcmUoIi4vX2Jhc2VGbGF0dGVuIiksYmFzZU9yZGVyQnk9cmVxdWlyZSgiLi9fYmFzZU9yZGVyQnkiKSxiYXNlUmVzdD1yZXF1aXJlKCIuL19iYXNlUmVzdCIpLGlzSXRlcmF0ZWVDYWxsPXJlcXVpcmUoIi4vX2lzSXRlcmF0ZWVDYWxsIik7Ci8qKgogKiBDcmVhdGVzIGFuIGFycmF5IG9mIGVsZW1lbnRzLCBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyIGJ5IHRoZSByZXN1bHRzIG9mCiAqIHJ1bm5pbmcgZWFjaCBlbGVtZW50IGluIGEgY29sbGVjdGlvbiB0aHJ1IGVhY2ggaXRlcmF0ZWUuIFRoaXMgbWV0aG9kCiAqIHBlcmZvcm1zIGEgc3RhYmxlIHNvcnQsIHRoYXQgaXMsIGl0IHByZXNlcnZlcyB0aGUgb3JpZ2luYWwgc29ydCBvcmRlciBvZgogKiBlcXVhbCBlbGVtZW50cy4gVGhlIGl0ZXJhdGVlcyBhcmUgaW52b2tlZCB3aXRoIG9uZSBhcmd1bWVudDogKHZhbHVlKS4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC4xLjAKICogQGNhdGVnb3J5IENvbGxlY3Rpb24KICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLgogKiBAcGFyYW0gey4uLihGdW5jdGlvbnxGdW5jdGlvbltdKX0gW2l0ZXJhdGVlcz1bXy5pZGVudGl0eV1dCiAqICBUaGUgaXRlcmF0ZWVzIHRvIHNvcnQgYnkuCiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IHNvcnRlZCBhcnJheS4KICogQGV4YW1wbGUKICoKICogdmFyIHVzZXJzID0gWwogKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQ4IH0sCiAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWdlJzogMzYgfSwKICogICB7ICd1c2VyJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCB9LAogKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM0IH0KICogXTsKICoKICogXy5zb3J0QnkodXNlcnMsIFtmdW5jdGlvbihvKSB7IHJldHVybiBvLnVzZXI7IH1dKTsKICogLy8gPT4gb2JqZWN0cyBmb3IgW1snYmFybmV5JywgMzZdLCBbJ2Jhcm5leScsIDM0XSwgWydmcmVkJywgNDhdLCBbJ2ZyZWQnLCA0MF1dCiAqCiAqIF8uc29ydEJ5KHVzZXJzLCBbJ3VzZXInLCAnYWdlJ10pOwogKiAvLyA9PiBvYmplY3RzIGZvciBbWydiYXJuZXknLCAzNF0sIFsnYmFybmV5JywgMzZdLCBbJ2ZyZWQnLCA0MF0sIFsnZnJlZCcsIDQ4XV0KICovdmFyIHNvcnRCeT1iYXNlUmVzdChmdW5jdGlvbihjb2xsZWN0aW9uLGl0ZXJhdGVlcyl7aWYoY29sbGVjdGlvbj09bnVsbCl7cmV0dXJuW119dmFyIGxlbmd0aD1pdGVyYXRlZXMubGVuZ3RoO2lmKGxlbmd0aD4xJiZpc0l0ZXJhdGVlQ2FsbChjb2xsZWN0aW9uLGl0ZXJhdGVlc1swXSxpdGVyYXRlZXNbMV0pKXtpdGVyYXRlZXM9W119ZWxzZSBpZihsZW5ndGg+MiYmaXNJdGVyYXRlZUNhbGwoaXRlcmF0ZWVzWzBdLGl0ZXJhdGVlc1sxXSxpdGVyYXRlZXNbMl0pKXtpdGVyYXRlZXM9W2l0ZXJhdGVlc1swXV19cmV0dXJuIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sYmFzZUZsYXR0ZW4oaXRlcmF0ZWVzLDEpLFtdKX0pO21vZHVsZS5leHBvcnRzPXNvcnRCeX0seyIuL19iYXNlRmxhdHRlbiI6MTQ2LCIuL19iYXNlT3JkZXJCeSI6MTc0LCIuL19iYXNlUmVzdCI6MTgxLCIuL19pc0l0ZXJhdGVlQ2FsbCI6MjQyfV0sMzM3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyoqCiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgZW1wdHkgYXJyYXkuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMTMuMAogKiBAY2F0ZWdvcnkgVXRpbAogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBlbXB0eSBhcnJheS4KICogQGV4YW1wbGUKICoKICogdmFyIGFycmF5cyA9IF8udGltZXMoMiwgXy5zdHViQXJyYXkpOwogKgogKiBjb25zb2xlLmxvZyhhcnJheXMpOwogKiAvLyA9PiBbW10sIFtdXQogKgogKiBjb25zb2xlLmxvZyhhcnJheXNbMF0gPT09IGFycmF5c1sxXSk7CiAqIC8vID0+IGZhbHNlCiAqLwpmdW5jdGlvbiBzdHViQXJyYXkoKXtyZXR1cm5bXX1tb2R1bGUuZXhwb3J0cz1zdHViQXJyYXl9LHt9XSwzMzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKioKICogVGhpcyBtZXRob2QgcmV0dXJucyBgZmFsc2VgLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSA0LjEzLjAKICogQGNhdGVnb3J5IFV0aWwKICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYGZhbHNlYC4KICogQGV4YW1wbGUKICoKICogXy50aW1lcygyLCBfLnN0dWJGYWxzZSk7CiAqIC8vID0+IFtmYWxzZSwgZmFsc2VdCiAqLwpmdW5jdGlvbiBzdHViRmFsc2UoKXtyZXR1cm4gZmFsc2V9bW9kdWxlLmV4cG9ydHM9c3R1YkZhbHNlfSx7fV0sMzM5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgdG9OdW1iZXI9cmVxdWlyZSgiLi90b051bWJlciIpOwovKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi92YXIgSU5GSU5JVFk9MS8wLE1BWF9JTlRFR0VSPTE3OTc2OTMxMzQ4NjIzMTU3ZTI5MjsKLyoqCiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBmaW5pdGUgbnVtYmVyLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSA0LjEyLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC4KICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgY29udmVydGVkIG51bWJlci4KICogQGV4YW1wbGUKICoKICogXy50b0Zpbml0ZSgzLjIpOwogKiAvLyA9PiAzLjIKICoKICogXy50b0Zpbml0ZShOdW1iZXIuTUlOX1ZBTFVFKTsKICogLy8gPT4gNWUtMzI0CiAqCiAqIF8udG9GaW5pdGUoSW5maW5pdHkpOwogKiAvLyA9PiAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOAogKgogKiBfLnRvRmluaXRlKCczLjInKTsKICogLy8gPT4gMy4yCiAqL2Z1bmN0aW9uIHRvRmluaXRlKHZhbHVlKXtpZighdmFsdWUpe3JldHVybiB2YWx1ZT09PTA/dmFsdWU6MH12YWx1ZT10b051bWJlcih2YWx1ZSk7aWYodmFsdWU9PT1JTkZJTklUWXx8dmFsdWU9PT0tSU5GSU5JVFkpe3ZhciBzaWduPXZhbHVlPDA/LTE6MTtyZXR1cm4gc2lnbipNQVhfSU5URUdFUn1yZXR1cm4gdmFsdWU9PT12YWx1ZT92YWx1ZTowfW1vZHVsZS5leHBvcnRzPXRvRmluaXRlfSx7Ii4vdG9OdW1iZXIiOjM0MX1dLDM0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHRvRmluaXRlPXJlcXVpcmUoIi4vdG9GaW5pdGUiKTsKLyoqCiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYW4gaW50ZWdlci4KICoKICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb24KICogW2BUb0ludGVnZXJgXShodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtdG9pbnRlZ2VyKS4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgNC4wLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC4KICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgY29udmVydGVkIGludGVnZXIuCiAqIEBleGFtcGxlCiAqCiAqIF8udG9JbnRlZ2VyKDMuMik7CiAqIC8vID0+IDMKICoKICogXy50b0ludGVnZXIoTnVtYmVyLk1JTl9WQUxVRSk7CiAqIC8vID0+IDAKICoKICogXy50b0ludGVnZXIoSW5maW5pdHkpOwogKiAvLyA9PiAxLjc5NzY5MzEzNDg2MjMxNTdlKzMwOAogKgogKiBfLnRvSW50ZWdlcignMy4yJyk7CiAqIC8vID0+IDMKICovZnVuY3Rpb24gdG9JbnRlZ2VyKHZhbHVlKXt2YXIgcmVzdWx0PXRvRmluaXRlKHZhbHVlKSxyZW1haW5kZXI9cmVzdWx0JTE7cmV0dXJuIHJlc3VsdD09PXJlc3VsdD9yZW1haW5kZXI/cmVzdWx0LXJlbWFpbmRlcjpyZXN1bHQ6MH1tb2R1bGUuZXhwb3J0cz10b0ludGVnZXJ9LHsiLi90b0Zpbml0ZSI6MzM5fV0sMzQxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgaXNPYmplY3Q9cmVxdWlyZSgiLi9pc09iamVjdCIpLGlzU3ltYm9sPXJlcXVpcmUoIi4vaXNTeW1ib2wiKTsKLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovdmFyIE5BTj0wLzA7Ci8qKiBVc2VkIHRvIG1hdGNoIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UuICovdmFyIHJlVHJpbT0vXlxzK3xccyskL2c7Ci8qKiBVc2VkIHRvIGRldGVjdCBiYWQgc2lnbmVkIGhleGFkZWNpbWFsIHN0cmluZyB2YWx1ZXMuICovdmFyIHJlSXNCYWRIZXg9L15bLStdMHhbMC05YS1mXSskL2k7Ci8qKiBVc2VkIHRvIGRldGVjdCBiaW5hcnkgc3RyaW5nIHZhbHVlcy4gKi92YXIgcmVJc0JpbmFyeT0vXjBiWzAxXSskL2k7Ci8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL3ZhciByZUlzT2N0YWw9L14wb1swLTddKyQvaTsKLyoqIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHdpdGhvdXQgYSBkZXBlbmRlbmN5IG9uIGByb290YC4gKi92YXIgZnJlZVBhcnNlSW50PXBhcnNlSW50OwovKioKICogQ29udmVydHMgYHZhbHVlYCB0byBhIG51bWJlci4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgNC4wLjAKICogQGNhdGVnb3J5IExhbmcKICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvY2Vzcy4KICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLgogKiBAZXhhbXBsZQogKgogKiBfLnRvTnVtYmVyKDMuMik7CiAqIC8vID0+IDMuMgogKgogKiBfLnRvTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpOwogKiAvLyA9PiA1ZS0zMjQKICoKICogXy50b051bWJlcihJbmZpbml0eSk7CiAqIC8vID0+IEluZmluaXR5CiAqCiAqIF8udG9OdW1iZXIoJzMuMicpOwogKiAvLyA9PiAzLjIKICovZnVuY3Rpb24gdG9OdW1iZXIodmFsdWUpe2lmKHR5cGVvZiB2YWx1ZT09Im51bWJlciIpe3JldHVybiB2YWx1ZX1pZihpc1N5bWJvbCh2YWx1ZSkpe3JldHVybiBOQU59aWYoaXNPYmplY3QodmFsdWUpKXt2YXIgb3RoZXI9dHlwZW9mIHZhbHVlLnZhbHVlT2Y9PSJmdW5jdGlvbiI/dmFsdWUudmFsdWVPZigpOnZhbHVlO3ZhbHVlPWlzT2JqZWN0KG90aGVyKT9vdGhlcisiIjpvdGhlcn1pZih0eXBlb2YgdmFsdWUhPSJzdHJpbmciKXtyZXR1cm4gdmFsdWU9PT0wP3ZhbHVlOit2YWx1ZX12YWx1ZT12YWx1ZS5yZXBsYWNlKHJlVHJpbSwiIik7dmFyIGlzQmluYXJ5PXJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7cmV0dXJuIGlzQmluYXJ5fHxyZUlzT2N0YWwudGVzdCh2YWx1ZSk/ZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLGlzQmluYXJ5PzI6OCk6cmVJc0JhZEhleC50ZXN0KHZhbHVlKT9OQU46K3ZhbHVlfW1vZHVsZS5leHBvcnRzPXRvTnVtYmVyfSx7Ii4vaXNPYmplY3QiOjMxMSwiLi9pc1N5bWJvbCI6MzE2fV0sMzQyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgY29weU9iamVjdD1yZXF1aXJlKCIuL19jb3B5T2JqZWN0Iiksa2V5c0luPXJlcXVpcmUoIi4va2V5c0luIik7Ci8qKgogKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgcGxhaW4gb2JqZWN0IGZsYXR0ZW5pbmcgaW5oZXJpdGVkIGVudW1lcmFibGUgc3RyaW5nCiAqIGtleWVkIHByb3BlcnRpZXMgb2YgYHZhbHVlYCB0byBvd24gcHJvcGVydGllcyBvZiB0aGUgcGxhaW4gb2JqZWN0LgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAzLjAuMAogKiBAY2F0ZWdvcnkgTGFuZwogKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgcGxhaW4gb2JqZWN0LgogKiBAZXhhbXBsZQogKgogKiBmdW5jdGlvbiBGb28oKSB7CiAqICAgdGhpcy5iID0gMjsKICogfQogKgogKiBGb28ucHJvdG90eXBlLmMgPSAzOwogKgogKiBfLmFzc2lnbih7ICdhJzogMSB9LCBuZXcgRm9vKTsKICogLy8gPT4geyAnYSc6IDEsICdiJzogMiB9CiAqCiAqIF8uYXNzaWduKHsgJ2EnOiAxIH0sIF8udG9QbGFpbk9iamVjdChuZXcgRm9vKSk7CiAqIC8vID0+IHsgJ2EnOiAxLCAnYic6IDIsICdjJzogMyB9CiAqL2Z1bmN0aW9uIHRvUGxhaW5PYmplY3QodmFsdWUpe3JldHVybiBjb3B5T2JqZWN0KHZhbHVlLGtleXNJbih2YWx1ZSkpfW1vZHVsZS5leHBvcnRzPXRvUGxhaW5PYmplY3R9LHsiLi9fY29weU9iamVjdCI6MjAzLCIuL2tleXNJbiI6MzIwfV0sMzQzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgYmFzZVRvU3RyaW5nPXJlcXVpcmUoIi4vX2Jhc2VUb1N0cmluZyIpOwovKioKICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZy4gQW4gZW1wdHkgc3RyaW5nIGlzIHJldHVybmVkIGZvciBgbnVsbGAKICogYW5kIGB1bmRlZmluZWRgIHZhbHVlcy4gVGhlIHNpZ24gb2YgYC0wYCBpcyBwcmVzZXJ2ZWQuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDQuMC4wCiAqIEBjYXRlZ29yeSBMYW5nCiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuCiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuCiAqIEBleGFtcGxlCiAqCiAqIF8udG9TdHJpbmcobnVsbCk7CiAqIC8vID0+ICcnCiAqCiAqIF8udG9TdHJpbmcoLTApOwogKiAvLyA9PiAnLTAnCiAqCiAqIF8udG9TdHJpbmcoWzEsIDIsIDNdKTsKICogLy8gPT4gJzEsMiwzJwogKi9mdW5jdGlvbiB0b1N0cmluZyh2YWx1ZSl7cmV0dXJuIHZhbHVlPT1udWxsPyIiOmJhc2VUb1N0cmluZyh2YWx1ZSl9bW9kdWxlLmV4cG9ydHM9dG9TdHJpbmd9LHsiLi9fYmFzZVRvU3RyaW5nIjoxODZ9XSwzNDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBhcnJheUVhY2g9cmVxdWlyZSgiLi9fYXJyYXlFYWNoIiksYmFzZUNyZWF0ZT1yZXF1aXJlKCIuL19iYXNlQ3JlYXRlIiksYmFzZUZvck93bj1yZXF1aXJlKCIuL19iYXNlRm9yT3duIiksYmFzZUl0ZXJhdGVlPXJlcXVpcmUoIi4vX2Jhc2VJdGVyYXRlZSIpLGdldFByb3RvdHlwZT1yZXF1aXJlKCIuL19nZXRQcm90b3R5cGUiKSxpc0FycmF5PXJlcXVpcmUoIi4vaXNBcnJheSIpLGlzQnVmZmVyPXJlcXVpcmUoIi4vaXNCdWZmZXIiKSxpc0Z1bmN0aW9uPXJlcXVpcmUoIi4vaXNGdW5jdGlvbiIpLGlzT2JqZWN0PXJlcXVpcmUoIi4vaXNPYmplY3QiKSxpc1R5cGVkQXJyYXk9cmVxdWlyZSgiLi9pc1R5cGVkQXJyYXkiKTsKLyoqCiAqIEFuIGFsdGVybmF0aXZlIHRvIGBfLnJlZHVjZWA7IHRoaXMgbWV0aG9kIHRyYW5zZm9ybXMgYG9iamVjdGAgdG8gYSBuZXcKICogYGFjY3VtdWxhdG9yYCBvYmplY3Qgd2hpY2ggaXMgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGVhY2ggb2YgaXRzIG93bgogKiBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBwcm9wZXJ0aWVzIHRocnUgYGl0ZXJhdGVlYCwgd2l0aCBlYWNoIGludm9jYXRpb24KICogcG90ZW50aWFsbHkgbXV0YXRpbmcgdGhlIGBhY2N1bXVsYXRvcmAgb2JqZWN0LiBJZiBgYWNjdW11bGF0b3JgIGlzIG5vdAogKiBwcm92aWRlZCwgYSBuZXcgb2JqZWN0IHdpdGggdGhlIHNhbWUgYFtbUHJvdG90eXBlXV1gIHdpbGwgYmUgdXNlZC4gVGhlCiAqIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCBmb3VyIGFyZ3VtZW50czogKGFjY3VtdWxhdG9yLCB2YWx1ZSwga2V5LCBvYmplY3QpLgogKiBJdGVyYXRlZSBmdW5jdGlvbnMgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5IGV4cGxpY2l0bHkgcmV0dXJuaW5nIGBmYWxzZWAuCiAqCiAqIEBzdGF0aWMKICogQG1lbWJlck9mIF8KICogQHNpbmNlIDEuMy4wCiAqIEBjYXRlZ29yeSBPYmplY3QKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci4KICogQHBhcmFtIHtGdW5jdGlvbn0gW2l0ZXJhdGVlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uCiAqIEBwYXJhbSB7Kn0gW2FjY3VtdWxhdG9yXSBUaGUgY3VzdG9tIGFjY3VtdWxhdG9yIHZhbHVlLgogKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgYWNjdW11bGF0ZWQgdmFsdWUuCiAqIEBleGFtcGxlCiAqCiAqIF8udHJhbnNmb3JtKFsyLCAzLCA0XSwgZnVuY3Rpb24ocmVzdWx0LCBuKSB7CiAqICAgcmVzdWx0LnB1c2gobiAqPSBuKTsKICogICByZXR1cm4gbiAlIDIgPT0gMDsKICogfSwgW10pOwogKiAvLyA9PiBbNCwgOV0KICoKICogXy50cmFuc2Zvcm0oeyAnYSc6IDEsICdiJzogMiwgJ2MnOiAxIH0sIGZ1bmN0aW9uKHJlc3VsdCwgdmFsdWUsIGtleSkgewogKiAgIChyZXN1bHRbdmFsdWVdIHx8IChyZXN1bHRbdmFsdWVdID0gW10pKS5wdXNoKGtleSk7CiAqIH0sIHt9KTsKICogLy8gPT4geyAnMSc6IFsnYScsICdjJ10sICcyJzogWydiJ10gfQogKi9mdW5jdGlvbiB0cmFuc2Zvcm0ob2JqZWN0LGl0ZXJhdGVlLGFjY3VtdWxhdG9yKXt2YXIgaXNBcnI9aXNBcnJheShvYmplY3QpLGlzQXJyTGlrZT1pc0Fycnx8aXNCdWZmZXIob2JqZWN0KXx8aXNUeXBlZEFycmF5KG9iamVjdCk7aXRlcmF0ZWU9YmFzZUl0ZXJhdGVlKGl0ZXJhdGVlLDQpO2lmKGFjY3VtdWxhdG9yPT1udWxsKXt2YXIgQ3Rvcj1vYmplY3QmJm9iamVjdC5jb25zdHJ1Y3RvcjtpZihpc0Fyckxpa2Upe2FjY3VtdWxhdG9yPWlzQXJyP25ldyBDdG9yOltdfWVsc2UgaWYoaXNPYmplY3Qob2JqZWN0KSl7YWNjdW11bGF0b3I9aXNGdW5jdGlvbihDdG9yKT9iYXNlQ3JlYXRlKGdldFByb3RvdHlwZShvYmplY3QpKTp7fX1lbHNle2FjY3VtdWxhdG9yPXt9fX0oaXNBcnJMaWtlP2FycmF5RWFjaDpiYXNlRm9yT3duKShvYmplY3QsZnVuY3Rpb24odmFsdWUsaW5kZXgsb2JqZWN0KXtyZXR1cm4gaXRlcmF0ZWUoYWNjdW11bGF0b3IsdmFsdWUsaW5kZXgsb2JqZWN0KX0pO3JldHVybiBhY2N1bXVsYXRvcn1tb2R1bGUuZXhwb3J0cz10cmFuc2Zvcm19LHsiLi9fYXJyYXlFYWNoIjoxMjQsIi4vX2Jhc2VDcmVhdGUiOjE0MSwiLi9fYmFzZUZvck93biI6MTQ4LCIuL19iYXNlSXRlcmF0ZWUiOjE2NSwiLi9fZ2V0UHJvdG90eXBlIjoyMjQsIi4vaXNBcnJheSI6MzAzLCIuL2lzQnVmZmVyIjozMDYsIi4vaXNGdW5jdGlvbiI6MzA4LCIuL2lzT2JqZWN0IjozMTEsIi4vaXNUeXBlZEFycmF5IjozMTd9XSwzNDU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlRmxhdHRlbj1yZXF1aXJlKCIuL19iYXNlRmxhdHRlbiIpLGJhc2VSZXN0PXJlcXVpcmUoIi4vX2Jhc2VSZXN0IiksYmFzZVVuaXE9cmVxdWlyZSgiLi9fYmFzZVVuaXEiKSxpc0FycmF5TGlrZU9iamVjdD1yZXF1aXJlKCIuL2lzQXJyYXlMaWtlT2JqZWN0Iik7Ci8qKgogKiBDcmVhdGVzIGFuIGFycmF5IG9mIHVuaXF1ZSB2YWx1ZXMsIGluIG9yZGVyLCBmcm9tIGFsbCBnaXZlbiBhcnJheXMgdXNpbmcKICogW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybykKICogZm9yIGVxdWFsaXR5IGNvbXBhcmlzb25zLgogKgogKiBAc3RhdGljCiAqIEBtZW1iZXJPZiBfCiAqIEBzaW5jZSAwLjEuMAogKiBAY2F0ZWdvcnkgQXJyYXkKICogQHBhcmFtIHsuLi5BcnJheX0gW2FycmF5c10gVGhlIGFycmF5cyB0byBpbnNwZWN0LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBhcnJheSBvZiBjb21iaW5lZCB2YWx1ZXMuCiAqIEBleGFtcGxlCiAqCiAqIF8udW5pb24oWzJdLCBbMSwgMl0pOwogKiAvLyA9PiBbMiwgMV0KICovdmFyIHVuaW9uPWJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5cyl7cmV0dXJuIGJhc2VVbmlxKGJhc2VGbGF0dGVuKGFycmF5cywxLGlzQXJyYXlMaWtlT2JqZWN0LHRydWUpKX0pO21vZHVsZS5leHBvcnRzPXVuaW9ufSx7Ii4vX2Jhc2VGbGF0dGVuIjoxNDYsIi4vX2Jhc2VSZXN0IjoxODEsIi4vX2Jhc2VVbmlxIjoxODgsIi4vaXNBcnJheUxpa2VPYmplY3QiOjMwNX1dLDM0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHRvU3RyaW5nPXJlcXVpcmUoIi4vdG9TdHJpbmciKTsKLyoqIFVzZWQgdG8gZ2VuZXJhdGUgdW5pcXVlIElEcy4gKi92YXIgaWRDb3VudGVyPTA7Ci8qKgogKiBHZW5lcmF0ZXMgYSB1bmlxdWUgSUQuIElmIGBwcmVmaXhgIGlzIGdpdmVuLCB0aGUgSUQgaXMgYXBwZW5kZWQgdG8gaXQuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBVdGlsCiAqIEBwYXJhbSB7c3RyaW5nfSBbcHJlZml4PScnXSBUaGUgdmFsdWUgdG8gcHJlZml4IHRoZSBJRCB3aXRoLgogKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSB1bmlxdWUgSUQuCiAqIEBleGFtcGxlCiAqCiAqIF8udW5pcXVlSWQoJ2NvbnRhY3RfJyk7CiAqIC8vID0+ICdjb250YWN0XzEwNCcKICoKICogXy51bmlxdWVJZCgpOwogKiAvLyA9PiAnMTA1JwogKi9mdW5jdGlvbiB1bmlxdWVJZChwcmVmaXgpe3ZhciBpZD0rK2lkQ291bnRlcjtyZXR1cm4gdG9TdHJpbmcocHJlZml4KStpZH1tb2R1bGUuZXhwb3J0cz11bmlxdWVJZH0seyIuL3RvU3RyaW5nIjozNDN9XSwzNDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBiYXNlVmFsdWVzPXJlcXVpcmUoIi4vX2Jhc2VWYWx1ZXMiKSxrZXlzPXJlcXVpcmUoIi4va2V5cyIpOwovKioKICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgc3RyaW5nIGtleWVkIHByb3BlcnR5IHZhbHVlcyBvZiBgb2JqZWN0YC4KICoKICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuCiAqCiAqIEBzdGF0aWMKICogQHNpbmNlIDAuMS4wCiAqIEBtZW1iZXJPZiBfCiAqIEBjYXRlZ29yeSBPYmplY3QKICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LgogKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IHZhbHVlcy4KICogQGV4YW1wbGUKICoKICogZnVuY3Rpb24gRm9vKCkgewogKiAgIHRoaXMuYSA9IDE7CiAqICAgdGhpcy5iID0gMjsKICogfQogKgogKiBGb28ucHJvdG90eXBlLmMgPSAzOwogKgogKiBfLnZhbHVlcyhuZXcgRm9vKTsKICogLy8gPT4gWzEsIDJdIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpCiAqCiAqIF8udmFsdWVzKCdoaScpOwogKiAvLyA9PiBbJ2gnLCAnaSddCiAqL2Z1bmN0aW9uIHZhbHVlcyhvYmplY3Qpe3JldHVybiBvYmplY3Q9PW51bGw/W106YmFzZVZhbHVlcyhvYmplY3Qsa2V5cyhvYmplY3QpKX1tb2R1bGUuZXhwb3J0cz12YWx1ZXN9LHsiLi9fYmFzZVZhbHVlcyI6MTg5LCIuL2tleXMiOjMxOX1dLDM0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGFzc2lnblZhbHVlPXJlcXVpcmUoIi4vX2Fzc2lnblZhbHVlIiksYmFzZVppcE9iamVjdD1yZXF1aXJlKCIuL19iYXNlWmlwT2JqZWN0Iik7Ci8qKgogKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmZyb21QYWlyc2AgZXhjZXB0IHRoYXQgaXQgYWNjZXB0cyB0d28gYXJyYXlzLAogKiBvbmUgb2YgcHJvcGVydHkgaWRlbnRpZmllcnMgYW5kIG9uZSBvZiBjb3JyZXNwb25kaW5nIHZhbHVlcy4KICoKICogQHN0YXRpYwogKiBAbWVtYmVyT2YgXwogKiBAc2luY2UgMC40LjAKICogQGNhdGVnb3J5IEFycmF5CiAqIEBwYXJhbSB7QXJyYXl9IFtwcm9wcz1bXV0gVGhlIHByb3BlcnR5IGlkZW50aWZpZXJzLgogKiBAcGFyYW0ge0FycmF5fSBbdmFsdWVzPVtdXSBUaGUgcHJvcGVydHkgdmFsdWVzLgogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LgogKiBAZXhhbXBsZQogKgogKiBfLnppcE9iamVjdChbJ2EnLCAnYiddLCBbMSwgMl0pOwogKiAvLyA9PiB7ICdhJzogMSwgJ2InOiAyIH0KICovZnVuY3Rpb24gemlwT2JqZWN0KHByb3BzLHZhbHVlcyl7cmV0dXJuIGJhc2VaaXBPYmplY3QocHJvcHN8fFtdLHZhbHVlc3x8W10sYXNzaWduVmFsdWUpfW1vZHVsZS5leHBvcnRzPXppcE9iamVjdH0seyIuL19hc3NpZ25WYWx1ZSI6MTM1LCIuL19iYXNlWmlwT2JqZWN0IjoxOTB9XX0se30sWzFdKSgxKX0pOwovLyBUaGlzIGZpbGUgaXMgcGFydCBvZiBDUEFjaGVja2VyLAovLyBhIHRvb2wgZm9yIGNvbmZpZ3VyYWJsZSBzb2Z0d2FyZSB2ZXJpZmljYXRpb246Ci8vIGh0dHBzOi8vY3BhY2hlY2tlci5zb3N5LWxhYi5vcmcKLy8KLy8gU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMCBEaXJrIEJleWVyIDxodHRwczovL3d3dy5zb3N5LWxhYi5vcmc+Ci8vCi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCgovKioKICogVGhlIENGQSBXb3JrZXIuIENvbnRhaW5zIHRoZSBsb2dpYyBmb3IgYnVpbGRpbmcgYSBzaW5nbGUgb3IgYSBtdWx0aSBDRkEgZ3JhcGguCiAqIFRoZSBncmFwaChzKSBpcy9hcmUgcmV0dXJuZWQgdG8gdGhlIG1haW4gc2NyaXB0IG9uY2UgY3JlYXRlZAogKiovCmxldCBqc29uOwpsZXQgbm9kZXM7CmxldCBtYWluTm9kZXM7CmxldCBlZGdlczsKbGV0IGZ1bmN0aW9uczsKbGV0IGNvbWJpbmVkTm9kZXM7CmxldCBjb21iaW5lZE5vZGVzTGFiZWxzOwpsZXQgbWVyZ2VkTm9kZXM7CmxldCBmdW5jdGlvbkNhbGxFZGdlczsKbGV0IGVycm9yUGF0aDsKbGV0IGdyYXBoU3BsaXRUaHJlc2hvbGQgPSA3MDA7CmxldCBncmFwaE1hcCA9IFtdOwpsZXQgZ3JhcGhDb3VudGVyID0gMDsKCm9ubWVzc2FnZSA9IChtc2cpID0+IHsKICBjb25zdCBkYXRhID0gbXNnLmRhdGE7CiAgY29uc3QgY2ZhU3BsaXQgPSBkYXRhLmNmYVNwbGl0OwogIGNvbnN0IGFyZ1RhYkRpc2FibGVkID0gZGF0YS5hcmdUYWJEaXNhYmxlZDsKICBsZXQgd29ya2VyUmVzdWx0ID0ge307CgogIGlmIChkYXRhLmpzb24gIT09IHVuZGVmaW5lZCkgewogICAganNvbiA9IEpTT04ucGFyc2UoZGF0YS5qc29uKTsKICAgIGV4dHJhY3RsZXRpYWJsZXMoKTsKICAgIGJ1aWxkR3JhcGhzQW5kUG9zdFJlc3VsdHMoKTsKICB9IGVsc2UgaWYgKGRhdGEucmVuZGVyZXIgIT09IHVuZGVmaW5lZCkgewogICAgaWYgKGdyYXBoTWFwW2dyYXBoQ291bnRlcl0gIT09IHVuZGVmaW5lZCkgewogICAgICBjb25zdCBub2RlID0gbm9kZXMuZmluZChmdW5jdGlvbiAobikgewogICAgICAgIHJldHVybiBuLmluZGV4ID09PSBwYXJzZUludChncmFwaE1hcFtncmFwaENvdW50ZXJdLm5vZGVzKClbMF0pOwogICAgICB9KTsKICAgICAgd29ya2VyUmVzdWx0ID0gewogICAgICAgIGdyYXBoOiBKU09OLnN0cmluZ2lmeShncmFwaE1hcFtncmFwaENvdW50ZXJdKSwKICAgICAgICBpZDogbm9kZS5mdW5jICsgZ3JhcGhDb3VudGVyLAogICAgICAgIGZ1bmM6IG5vZGUuZnVuYywKICAgICAgICBjZmFTcGxpdDogY2ZhU3BsaXQsCiAgICAgICAgYXJnVGFiRGlzYWJsZWQ6IGFyZ1RhYkRpc2FibGVkLAogICAgICB9OwoKICAgICAgZ3JhcGhDb3VudGVyKys7CiAgICB9IGVsc2UgewogICAgICB3b3JrZXJSZXN1bHQgPSB7CiAgICAgICAgc3RhdHVzOiAiZG9uZSIsCiAgICAgICAgY2ZhU3BsaXQ6IGNmYVNwbGl0LAogICAgICAgIGFyZ1RhYkRpc2FibGVkOiBhcmdUYWJEaXNhYmxlZCwKICAgICAgfTsKICAgICAgZ3JhcGhNYXAgPSBbXTsKICAgICAgZ3JhcGhDb3VudGVyID0gMDsKICAgIH0KICB9IGVsc2UgaWYgKGRhdGEudG9TcGxpdCAhPT0gdW5kZWZpbmVkKSB7CiAgICBncmFwaFNwbGl0VGhyZXNob2xkID0gZGF0YS50b1NwbGl0OwogICAgYnVpbGRHcmFwaHNBbmRQb3N0UmVzdWx0cygpOwogIH0KCiAgcG9zdE1lc3NhZ2Uod29ya2VyUmVzdWx0KTsKCiAgLyogIyMjIyMjIyMjIyMjIyMjIyMjIEhlbHBlciBmdW5jdGlvbnMgIyMjIyMjIyMjIyMjIyMjIyMjICovCgogIC8vIEV4dHJhY3QgaW5mb3JtYXRpb24gZnJvbSB0aGUgY2ZhSnNvbgogIGZ1bmN0aW9uIGV4dHJhY3RsZXRpYWJsZXMoKSB7CiAgICBub2RlcyA9IGpzb24ubm9kZXM7CiAgICBmdW5jdGlvbnMgPSBqc29uLmZ1bmN0aW9uTmFtZXM7CiAgICBtYWluTm9kZXMgPSBub2Rlcy5maWx0ZXIoZnVuY3Rpb24gKG4pIHsKICAgICAgcmV0dXJuIG4uZnVuYyA9PT0gZnVuY3Rpb25zWzBdOwogICAgfSk7CiAgICBlZGdlcyA9IGpzb24uZWRnZXM7CiAgICBjb21iaW5lZE5vZGVzID0ganNvbi5jb21iaW5lZE5vZGVzOwogICAgY29tYmluZWROb2Rlc0xhYmVscyA9IGpzb24uY29tYmluZWROb2Rlc0xhYmVsczsKICAgIG1lcmdlZE5vZGVzID0ganNvbi5tZXJnZWROb2RlczsKICAgIGZ1bmN0aW9uQ2FsbEVkZ2VzID0ganNvbi5mdW5jdGlvbkNhbGxFZGdlczsKICAgIGlmIChqc29uLmhhc093blByb3BlcnR5KCJlcnJvclBhdGgiKSkgewogICAgICBlcnJvclBhdGggPSBbXTsKICAgICAgcHJlcGFyZUNmYUVycm9yUGF0aCgpOwogICAgfQogIH0KCiAgLy8gUHJlcGFyZSBFcnJvciBQYXRoIGFycmF5IHRvIGJlIHVzZWQgaW4gZWRnZSBjbGFzcyBkZWNpZGVyCiAgZnVuY3Rpb24gcHJlcGFyZUNmYUVycm9yUGF0aCgpIHsKICAgIGNvbnN0IHJldHVybmVkRWRnZXMgPSB7fTsKICAgIGZvciAoa2V5IGluIGZ1bmN0aW9uQ2FsbEVkZ2VzKSB7CiAgICAgIHJldHVybmVkRWRnZXNbZnVuY3Rpb25DYWxsRWRnZXNba2V5XVsxXV0gPSBmdW5jdGlvbkNhbGxFZGdlc1trZXldWzBdOwogICAgfQogICAganNvbi5lcnJvclBhdGguZm9yRWFjaChmdW5jdGlvbiAoZXJyUGF0aEVsZW0pIHsKICAgICAgaWYgKGVyclBhdGhFbGVtLnNvdXJjZSBpbiBmdW5jdGlvbkNhbGxFZGdlcykgewogICAgICAgIGVyclBhdGhFbGVtLnRhcmdldCA9IGZ1bmN0aW9uQ2FsbEVkZ2VzW2VyclBhdGhFbGVtLnNvdXJjZV1bMF07CiAgICAgIH0KICAgICAgaWYgKGVyclBhdGhFbGVtLnRhcmdldCBpbiByZXR1cm5lZEVkZ2VzKSB7CiAgICAgICAgZXJyb3JQYXRoLnB1c2goewogICAgICAgICAgc291cmNlOiByZXR1cm5lZEVkZ2VzW2VyclBhdGhFbGVtLnRhcmdldF0sCiAgICAgICAgICB0YXJnZXQ6IGVyclBhdGhFbGVtLnRhcmdldCwKICAgICAgICB9KTsKICAgICAgfQogICAgICBlcnJvclBhdGgucHVzaChlcnJQYXRoRWxlbSk7CiAgICB9KTsKICB9CgogIGZ1bmN0aW9uIGJ1aWxkR3JhcGhzQW5kUG9zdFJlc3VsdHMoKSB7CiAgICBpZiAobWFpbk5vZGVzLmxlbmd0aCA+IGdyYXBoU3BsaXRUaHJlc2hvbGQpIHsKICAgICAgYnVpbGRNdWx0aXBsZUdyYXBocyhtYWluTm9kZXMsIGZ1bmN0aW9uc1swXSk7CiAgICB9IGVsc2UgewogICAgICBidWlsZFNpbmdsZUdyYXBoKG1haW5Ob2RlcywgZnVuY3Rpb25zWzBdKTsKICAgIH0KICAgIGlmIChmdW5jdGlvbnMubGVuZ3RoID4gMSkgewogICAgICBjb25zdCBmdW5jdGlvbnNUb1Byb2Nlc3MgPSBmdW5jdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChmKSB7CiAgICAgICAgcmV0dXJuIGYgIT09IGZ1bmN0aW9uc1swXTsKICAgICAgfSk7CiAgICAgIGZ1bmN0aW9uc1RvUHJvY2Vzcy5mb3JFYWNoKGZ1bmN0aW9uIChmdW5jKSB7CiAgICAgICAgY29uc3QgZnVuY05vZGVzID0gbm9kZXMuZmlsdGVyKGZ1bmN0aW9uIChuKSB7CiAgICAgICAgICByZXR1cm4gbi5mdW5jID09PSBmdW5jOwogICAgICAgIH0pOwogICAgICAgIGlmIChmdW5jTm9kZXMubGVuZ3RoID4gZ3JhcGhTcGxpdFRocmVzaG9sZCkgewogICAgICAgICAgYnVpbGRNdWx0aXBsZUdyYXBocyhmdW5jTm9kZXMsIGZ1bmMpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBidWlsZFNpbmdsZUdyYXBoKGZ1bmNOb2RlcywgZnVuYyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGJ1aWxkU2luZ2xlR3JhcGgobm9kZXNUb1NldCwgZnVuY05hbWUpIHsKICAgIGNvbnN0IGcgPSBjcmVhdGVHcmFwaCgpOwogICAgc2V0R3JhcGhOb2RlcyhnLCBub2Rlc1RvU2V0KTsKICAgIHJvdW5kTm9kZUNvcm5lcnMoZyk7CiAgICBjb25zdCBub2Rlc0luZGljZXMgPSBbXTsKICAgIG5vZGVzVG9TZXQuZm9yRWFjaChmdW5jdGlvbiAobikgewogICAgICBub2Rlc0luZGljZXMucHVzaChuLmluZGV4KTsKICAgIH0pOwogICAgY29uc3QgZWRnZXNUb1NldCA9IGVkZ2VzLmZpbHRlcihmdW5jdGlvbiAoZSkgewogICAgICByZXR1cm4gbm9kZXNJbmRpY2VzLmluY2x1ZGVzKGUuc291cmNlKSAmJiBub2Rlc0luZGljZXMuaW5jbHVkZXMoZS50YXJnZXQpOwogICAgfSk7CiAgICBzZXRHcmFwaEVkZ2VzKGcsIGVkZ2VzVG9TZXQsIGZhbHNlKTsKICAgIGlmIChmdW5jTmFtZSA9PT0gZnVuY3Rpb25zWzBdKSB7CiAgICAgIHdvcmtlclJlc3VsdCA9IHsKICAgICAgICBncmFwaDogSlNPTi5zdHJpbmdpZnkoZyksCiAgICAgICAgaWQ6IGZ1bmNOYW1lICsgZ3JhcGhDb3VudGVyLAogICAgICAgIGZ1bmM6IGZ1bmNOYW1lLAogICAgICAgIGNmYVNwbGl0OiBjZmFTcGxpdCwKICAgICAgICBhcmdUYWJEaXNhYmxlZDogYXJnVGFiRGlzYWJsZWQsCiAgICAgIH07CiAgICAgIGdyYXBoTWFwLnB1c2goZyk7CiAgICB9IGVsc2UgewogICAgICBncmFwaE1hcC5wdXNoKGcpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gYnVpbGRNdWx0aXBsZUdyYXBocyhub2Rlc1RvU2V0LCBmdW5jTmFtZSkgewogICAgY29uc3QgcmVxdWlyZWRHcmFwaHMgPSBNYXRoLmNlaWwobm9kZXNUb1NldC5sZW5ndGggLyBncmFwaFNwbGl0VGhyZXNob2xkKTsKICAgIGxldCBmaXJzdEdyYXBoQnVpbGQgPSBmYWxzZTsKICAgIGxldCBub2Rlc1BlckdyYXBoID0gW107CiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSByZXF1aXJlZEdyYXBoczsgaSsrKSB7CiAgICAgIGlmICghZmlyc3RHcmFwaEJ1aWxkKSB7CiAgICAgICAgbm9kZXNQZXJHcmFwaCA9IG5vZGVzVG9TZXQuc2xpY2UoMCwgZ3JhcGhTcGxpdFRocmVzaG9sZCk7CiAgICAgICAgZmlyc3RHcmFwaEJ1aWxkID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAobm9kZXNUb1NldFtncmFwaFNwbGl0VGhyZXNob2xkICogaSAtIDFdICE9PSB1bmRlZmluZWQpCiAgICAgICAgICBub2Rlc1BlckdyYXBoID0gbm9kZXNUb1NldC5zbGljZSgKICAgICAgICAgICAgZ3JhcGhTcGxpdFRocmVzaG9sZCAqIChpIC0gMSksCiAgICAgICAgICAgIGdyYXBoU3BsaXRUaHJlc2hvbGQgKiBpCiAgICAgICAgICApOwogICAgICAgIGVsc2Ugbm9kZXNQZXJHcmFwaCA9IG5vZGVzVG9TZXQuc2xpY2UoZ3JhcGhTcGxpdFRocmVzaG9sZCAqIChpIC0gMSkpOwogICAgICB9CiAgICAgIGNvbnN0IGdyYXBoID0gY3JlYXRlR3JhcGgoKTsKICAgICAgc2V0R3JhcGhOb2RlcyhncmFwaCwgbm9kZXNQZXJHcmFwaCk7CiAgICAgIGlmIChncmFwaC5ub2RlcygpLmxlbmd0aCA+IDApIHsKICAgICAgICBncmFwaE1hcC5wdXNoKGdyYXBoKTsKICAgICAgICByb3VuZE5vZGVDb3JuZXJzKGdyYXBoKTsKICAgICAgICBjb25zdCBncmFwaEVkZ2VzID0gZWRnZXMuZmlsdGVyKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIG5vZGVzUGVyR3JhcGhbMF0uaW5kZXggPD0gZS5zb3VyY2UgJiYKICAgICAgICAgICAgZS5zb3VyY2UgPD0gbm9kZXNQZXJHcmFwaFtub2Rlc1BlckdyYXBoLmxlbmd0aCAtIDFdLmluZGV4ICYmCiAgICAgICAgICAgIG5vZGVzUGVyR3JhcGhbMF0uaW5kZXggPD0gZS50YXJnZXQgJiYKICAgICAgICAgICAgZS50YXJnZXQgPD0gbm9kZXNQZXJHcmFwaFtub2Rlc1BlckdyYXBoLmxlbmd0aCAtIDFdLmluZGV4CiAgICAgICAgICApIHsKICAgICAgICAgICAgcmV0dXJuIGU7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgc2V0R3JhcGhFZGdlcyhncmFwaCwgZ3JhcGhFZGdlcywgdHJ1ZSk7CiAgICAgIH0KICAgIH0KICAgIGJ1aWxkQ3Jvc3NncmFwaEVkZ2VzKG5vZGVzVG9TZXQpOwogICAgaWYgKGZ1bmNOYW1lID09PSBmdW5jdGlvbnNbMF0pIHsKICAgICAgd29ya2VyUmVzdWx0ID0gewogICAgICAgIGdyYXBoOiBKU09OLnN0cmluZ2lmeShncmFwaE1hcFtncmFwaENvdW50ZXJdKSwKICAgICAgICBpZDogZnVuY05hbWUgKyBncmFwaENvdW50ZXIsCiAgICAgICAgZnVuYzogZnVuY05hbWUsCiAgICAgICAgY2ZhU3BsaXQ6IGNmYVNwbGl0LAogICAgICAgIGFyZ1RhYkRpc2FibGVkOiBhcmdUYWJEaXNhYmxlZCwKICAgICAgfTsKICAgICAgZ3JhcGhDb3VudGVyKys7CiAgICB9CiAgfQoKICAvLyBIYW5kbGUgRWRnZXMgdGhhdCBjb25uZWN0IEdyYXBocwogIGZ1bmN0aW9uIGJ1aWxkQ3Jvc3NncmFwaEVkZ2VzKGNyb3NzR3JhcGhOb2RlcykgewogICAgY29uc3Qgbm9kZXNJbmRpY2VzID0gW107CiAgICBjcm9zc0dyYXBoTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobikgewogICAgICBub2Rlc0luZGljZXMucHVzaChuLmluZGV4KTsKICAgIH0pOwogICAgY29uc3QgZWRnZXNUb0NvbnNpZGVyID0gZWRnZXMuZmlsdGVyKGZ1bmN0aW9uIChlKSB7CiAgICAgIHJldHVybiBub2Rlc0luZGljZXMuaW5jbHVkZXMoZS5zb3VyY2UpICYmIG5vZGVzSW5kaWNlcy5pbmNsdWRlcyhlLnRhcmdldCk7CiAgICB9KTsKICAgIGVkZ2VzVG9Db25zaWRlci5mb3JFYWNoKGZ1bmN0aW9uIChlZGdlKSB7CiAgICAgIGNvbnN0IHNvdXJjZSA9IGVkZ2Uuc291cmNlOwogICAgICBjb25zdCB0YXJnZXQgPSBlZGdlLnRhcmdldDsKICAgICAgaWYgKG1lcmdlZE5vZGVzLmluY2x1ZGVzKHNvdXJjZSkgJiYgbWVyZ2VkTm9kZXMuaW5jbHVkZXModGFyZ2V0KSkgcmV0dXJuOwogICAgICBpZiAobWVyZ2VkTm9kZXMuaW5jbHVkZXMoc291cmNlKSkgc291cmNlID0gZ2V0TWVyZ2luZ05vZGUoc291cmNlKTsKICAgICAgaWYgKG1lcmdlZE5vZGVzLmluY2x1ZGVzKHRhcmdldCkpIHRhcmdldCA9IGdldE1lcmdpbmdOb2RlKHRhcmdldCk7CiAgICAgIGNvbnN0IHNvdXJjZUdyYXBoID0gZ2V0R3JhcGhGb3JOb2RlKHNvdXJjZSk7CiAgICAgIGNvbnN0IHRhcmdldEdyYXBoID0gZ2V0R3JhcGhGb3JOb2RlKHRhcmdldCk7CiAgICAgIGlmIChzb3VyY2VHcmFwaCA8IHRhcmdldEdyYXBoKSB7CiAgICAgICAgaWYgKE9iamVjdC5rZXlzKGZ1bmN0aW9uQ2FsbEVkZ2VzKS5pbmNsdWRlcygiIiArIHNvdXJjZSkpIHsKICAgICAgICAgIGNvbnN0IGZ1bmNDYWxsTm9kZUlkID0gZnVuY3Rpb25DYWxsRWRnZXNbIiIgKyBzb3VyY2VdWzBdOwogICAgICAgICAgZ3JhcGhNYXBbc291cmNlR3JhcGhdLnNldE5vZGUoZnVuY0NhbGxOb2RlSWQsIHsKICAgICAgICAgICAgbGFiZWw6IGdldE5vZGVMYWJlbEZDYWxsKGVkZ2Uuc3RtdCksCiAgICAgICAgICAgIGNsYXNzOiAiY2ZhLW5vZGUgZmNhbGwiLAogICAgICAgICAgICBpZDogImNmYS1ub2RlIiArIGZ1bmNDYWxsTm9kZUlkLAogICAgICAgICAgICBzaGFwZTogInJlY3QiLAogICAgICAgICAgfSk7CiAgICAgICAgICBncmFwaE1hcFtzb3VyY2VHcmFwaF0uc2V0RWRnZShzb3VyY2UsIGZ1bmNDYWxsTm9kZUlkLCB7CiAgICAgICAgICAgIGxhYmVsOiBlZGdlLnN0bXQsCiAgICAgICAgICAgIGxhYmVsU3R5bGU6IGxhYmVsU3R5bGVEZWNpZGVyKGVkZ2UsIHNvdXJjZSwgZnVuY0NhbGxOb2RlSWQpLAogICAgICAgICAgICBjbGFzczogZWRnZUNsYXNzRGVjaWRlcihlZGdlLCBzb3VyY2UsIGZ1bmNDYWxsTm9kZUlkKSwKICAgICAgICAgICAgaWQ6ICJjZmEtZWRnZV8iICsgc291cmNlICsgIi0iICsgZnVuY0NhbGxOb2RlSWQsCiAgICAgICAgICB9KTsKICAgICAgICAgIGdyYXBoTWFwW3NvdXJjZUdyYXBoXS5zZXROb2RlKCIiICsgc291cmNlICsgdGFyZ2V0ICsgc291cmNlR3JhcGgsIHsKICAgICAgICAgICAgbGFiZWw6ICIiLAogICAgICAgICAgICBjbGFzczogImNmYS1kdW1teSIsCiAgICAgICAgICAgIGlkOiAiZHVtbXktIiArIHRhcmdldCwKICAgICAgICAgICAgc2hhcGU6ICJyZWN0IiwKICAgICAgICAgIH0pOwogICAgICAgICAgZ3JhcGhNYXBbc291cmNlR3JhcGhdLnNldEVkZ2UoCiAgICAgICAgICAgIGZ1bmNDYWxsTm9kZUlkLAogICAgICAgICAgICAiIiArIHNvdXJjZSArIHRhcmdldCArIHNvdXJjZUdyYXBoLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbGFiZWw6IHNvdXJjZSArICItPiIgKyB0YXJnZXQsCiAgICAgICAgICAgICAgc3R5bGU6ICJzdHJva2UtZGFzaGFycmF5OiA1LCA1OyIsCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGdyYXBoTWFwW3NvdXJjZUdyYXBoXS5zZXROb2RlKCIiICsgc291cmNlICsgdGFyZ2V0ICsgc291cmNlR3JhcGgsIHsKICAgICAgICAgICAgbGFiZWw6ICIiLAogICAgICAgICAgICBjbGFzczogImNmYS1kdW1teSIsCiAgICAgICAgICAgIGlkOiAiZHVtbXktIiArIHRhcmdldCwKICAgICAgICAgICAgc2hhcGU6ICJyZWN0IiwKICAgICAgICAgIH0pOwogICAgICAgICAgZ3JhcGhNYXBbc291cmNlR3JhcGhdLnNldEVkZ2UoCiAgICAgICAgICAgIHNvdXJjZSwKICAgICAgICAgICAgIiIgKyBzb3VyY2UgKyB0YXJnZXQgKyBzb3VyY2VHcmFwaCwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGxhYmVsOiBlZGdlLnN0bXQsCiAgICAgICAgICAgICAgbGFiZWxTdHlsZTogbGFiZWxTdHlsZURlY2lkZXIoCiAgICAgICAgICAgICAgICBlZGdlLAogICAgICAgICAgICAgICAgc291cmNlLAogICAgICAgICAgICAgICAgIiIgKyBzb3VyY2UgKyB0YXJnZXQgKyBzb3VyY2VHcmFwaAogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgaWQ6ICJjZmEtZWRnZV8iICsgc291cmNlICsgIi0iICsgdGFyZ2V0LAogICAgICAgICAgICAgIGNsYXNzOiBlZGdlQ2xhc3NEZWNpZGVyKAogICAgICAgICAgICAgICAgZWRnZSwKICAgICAgICAgICAgICAgIHNvdXJjZSwKICAgICAgICAgICAgICAgICIiICsgc291cmNlICsgdGFyZ2V0ICsgc291cmNlR3JhcGgKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIHN0eWxlOiAic3Ryb2tlLWRhc2hhcnJheTogNSwgNTsiLAogICAgICAgICAgICB9CiAgICAgICAgICApOwogICAgICAgIH0KICAgICAgICBncmFwaE1hcFt0YXJnZXRHcmFwaF0uc2V0Tm9kZSgiIiArIHRhcmdldCArIHNvdXJjZSArIHRhcmdldEdyYXBoLCB7CiAgICAgICAgICBsYWJlbDogIiIsCiAgICAgICAgICBjbGFzczogImR1bW15IiwKICAgICAgICB9KTsKICAgICAgICBncmFwaE1hcFt0YXJnZXRHcmFwaF0uc2V0RWRnZSgKICAgICAgICAgICIiICsgdGFyZ2V0ICsgc291cmNlICsgdGFyZ2V0R3JhcGgsCiAgICAgICAgICB0YXJnZXQsCiAgICAgICAgICB7CiAgICAgICAgICAgIGxhYmVsOiAiIiwKICAgICAgICAgICAgbGFiZWxTdHlsZTogImZvbnQtc2l6ZTogMTJweDsiLAogICAgICAgICAgICBpZDogImNmYS1zcGxpdC1lZGdlXyIgKyBzb3VyY2UgKyAiLSIgKyB0YXJnZXQsCiAgICAgICAgICAgIGNsYXNzOiAiY2ZhLXNwbGl0LWVkZ2UiLAogICAgICAgICAgICBzdHlsZTogInN0cm9rZS1kYXNoYXJyYXk6IDUsIDU7IiwKICAgICAgICAgIH0KICAgICAgICApOwogICAgICB9IGVsc2UgaWYgKHNvdXJjZUdyYXBoID4gdGFyZ2V0R3JhcGgpIHsKICAgICAgICBncmFwaE1hcFtzb3VyY2VHcmFwaF0uc2V0Tm9kZSgiIiArIHNvdXJjZSArIHRhcmdldCArIHNvdXJjZUdyYXBoLCB7CiAgICAgICAgICBsYWJlbDogIiIsCiAgICAgICAgICBjbGFzczogImNmYS1kdW1teSIsCiAgICAgICAgICBpZDogImR1bW15LSIgKyB0YXJnZXQsCiAgICAgICAgfSk7CiAgICAgICAgZ3JhcGhNYXBbc291cmNlR3JhcGhdLnNldEVkZ2UoCiAgICAgICAgICBzb3VyY2UsCiAgICAgICAgICAiIiArIHNvdXJjZSArIHRhcmdldCArIHNvdXJjZUdyYXBoLAogICAgICAgICAgewogICAgICAgICAgICBsYWJlbDogZWRnZS5zdG10LAogICAgICAgICAgICBsYWJlbFN0eWxlOiBsYWJlbFN0eWxlRGVjaWRlcigKICAgICAgICAgICAgICBlZGdlLAogICAgICAgICAgICAgICIiICsgc291cmNlICsgdGFyZ2V0ICsgc291cmNlR3JhcGgsCiAgICAgICAgICAgICAgc291cmNlCiAgICAgICAgICAgICksCiAgICAgICAgICAgIGlkOiAiY2ZhLWVkZ2VfIiArIHNvdXJjZSArICItIiArIHRhcmdldCwKICAgICAgICAgICAgY2xhc3M6IGVkZ2VDbGFzc0RlY2lkZXIoCiAgICAgICAgICAgICAgZWRnZSwKICAgICAgICAgICAgICAiIiArIHNvdXJjZSArIHRhcmdldCArIHNvdXJjZUdyYXBoLAogICAgICAgICAgICAgIHNvdXJjZQogICAgICAgICAgICApLAogICAgICAgICAgICBhcnJvd2hlYWQ6ICJ1bmRpcmVjdGVkIiwKICAgICAgICAgICAgc3R5bGU6ICJzdHJva2UtZGFzaGFycmF5OiA1LCA1OyIsCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBncmFwaE1hcFt0YXJnZXRHcmFwaF0uc2V0Tm9kZSgiIiArIHRhcmdldCArIHNvdXJjZSArIHRhcmdldEdyYXBoLCB7CiAgICAgICAgICBsYWJlbDogIiIsCiAgICAgICAgICBjbGFzczogImR1bW15IiwKICAgICAgICAgIGlkOiAibm9kZSIgKyBzb3VyY2UsCiAgICAgICAgfSk7CiAgICAgICAgZ3JhcGhNYXBbdGFyZ2V0R3JhcGhdLnNldEVkZ2UoCiAgICAgICAgICAiIiArIHRhcmdldCArIHNvdXJjZSArIHRhcmdldEdyYXBoLAogICAgICAgICAgdGFyZ2V0LAogICAgICAgICAgewogICAgICAgICAgICBsYWJlbDogIiIsCiAgICAgICAgICAgIGxhYmVsU3R5bGU6ICJmb250LXNpemU6IDEycHg7IiwKICAgICAgICAgICAgaWQ6ICJjZmEtc3BsaXQtZWRnZV8iICsgc291cmNlICsgIi0iICsgdGFyZ2V0LAogICAgICAgICAgICBjbGFzczogImNmYS1zcGxpdC1lZGdlIiwKICAgICAgICAgICAgYXJyb3doZWFkOiAidW5kaXJlY3RlZCIsCiAgICAgICAgICAgIHN0eWxlOiAic3Ryb2tlLWRhc2hhcnJheTogNSwgNTsiLAogICAgICAgICAgfQogICAgICAgICk7CiAgICAgIH0KICAgIH0pOwogIH0KCiAgLy8gUmV0dXJuIHRoZSBncmFwaCBpbiB3aGljaCB0aGUgbm9kZU51bWJlciBpcyBwcmVzZW50CiAgZnVuY3Rpb24gZ2V0R3JhcGhGb3JOb2RlKG5vZGVOdW1iZXIpIHsKICAgIHJldHVybiBncmFwaE1hcC5maW5kSW5kZXgoZnVuY3Rpb24gKGdyYXBoKSB7CiAgICAgIHJldHVybiBncmFwaC5ub2RlcygpLmluY2x1ZGVzKCIiICsgbm9kZU51bWJlcik7CiAgICB9KTsKICB9CgogIC8vIGNyZWF0ZSBhbmQgcmV0dXJuIGEgZ3JhcGggZWxlbWVudCB3aXRoIGEgc2V0IHRyYW5zaXRpb24KICBmdW5jdGlvbiBjcmVhdGVHcmFwaCgpIHsKICAgIHJldHVybiBuZXcgZGFncmVEMy5ncmFwaGxpYi5HcmFwaCgpCiAgICAgIC5zZXRHcmFwaCh7fSkKICAgICAgLnNldERlZmF1bHRFZGdlTGFiZWwoKCkgPT4ge30pOwogIH0KCiAgLy8gU2V0IG5vZGVzIGZvciB0aGUgZ3JhcGggY29udGFpbmVkIGluIHRoZSBqc29uIG5vZGVzCiAgZnVuY3Rpb24gc2V0R3JhcGhOb2RlcyhncmFwaCwgbm9kZXNUb1NldCkgewogICAgbm9kZXNUb1NldC5mb3JFYWNoKGZ1bmN0aW9uIChuKSB7CiAgICAgIGlmICghbWVyZ2VkTm9kZXMuaW5jbHVkZXMobi5pbmRleCkpIHsKICAgICAgICBncmFwaC5zZXROb2RlKG4uaW5kZXgsIHsKICAgICAgICAgIGxhYmVsOiBzZXROb2RlTGFiZWwobiksCiAgICAgICAgICBsYWJlbFN0eWxlOiAiZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZSIsCiAgICAgICAgICBjbGFzczogImNmYS1ub2RlIiwKICAgICAgICAgIGlkOiAiY2ZhLW5vZGUiICsgbi5pbmRleCwKICAgICAgICAgIHNoYXBlOiBub2RlU2hhcGVEZWNpZGVyKG4pLAogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKICB9CgogIC8vIE5vZGUgbGFiZWwsIHRoZSBsYWJlbCBmcm9tIGNvbWJpbmVkIG5vZGVzIG9yIGEgc2ltcGxlIGxhYmVsCiAgZnVuY3Rpb24gc2V0Tm9kZUxhYmVsKG5vZGUpIHsKICAgIGNvbnN0IG5vZGVJbmRleCA9ICIiICsgbm9kZS5pbmRleDsKICAgIGlmIChPYmplY3Qua2V5cyhjb21iaW5lZE5vZGVzTGFiZWxzKS5pbmNsdWRlcyhub2RlSW5kZXgpKQogICAgICByZXR1cm4gY29tYmluZWROb2Rlc0xhYmVsc1tub2RlSW5kZXhdOwogICAgZWxzZSByZXR1cm4gIk4iICsgbm9kZUluZGV4OwogIH0KCiAgLy8gRGVjaWRlIHRoZSBzaGFwZSBvZiB0aGUgbm9kZXMgYmFzZWQgb24gdHlwZQogIGZ1bmN0aW9uIG5vZGVTaGFwZURlY2lkZXIobikgewogICAgaWYgKG4ubG9vcCkgewogICAgICByZXR1cm4gImRpYW1vbmQiOwogICAgfSBlbHNlIGlmIChPYmplY3Qua2V5cyhjb21iaW5lZE5vZGVzKS5pbmNsdWRlcygiIiArIG4uaW5kZXgpKSB7CiAgICAgIHJldHVybiAicmVjdCI7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gImNpcmNsZSI7CiAgICB9CiAgfQoKICAvLyBSb3VuZCB0aGUgY29ybmVycyBvZiByZWN0YW5nbGUgc2hhcGVkIG5vZGVzCiAgZnVuY3Rpb24gcm91bmROb2RlQ29ybmVycyhncmFwaCkgewogICAgZ3JhcGgubm9kZXMoKS5mb3JFYWNoKGZ1bmN0aW9uIChpdCkgewogICAgICBjb25zdCBpdGVtID0gZ3JhcGgubm9kZShpdCk7CiAgICAgIGl0ZW0ucnggPSBpdGVtLnJ5ID0gNTsKICAgIH0pOwogIH0KCiAgLy8gU2V0IHRoZSBlZGdlcyBmb3IgYSBzaW5nbGUgZ3JhcGggd2hpbGUgY29uc2lkZXJpbmcgbWVyZ2VkIG5vZGVzIGFuZCBlZGdlcyBiZXR3ZWVuIHRoZW0KICBmdW5jdGlvbiBzZXRHcmFwaEVkZ2VzKGdyYXBoLCBlZGdlc1RvU2V0LCBtdWx0aWdyYXBoKSB7CiAgICBlZGdlc1RvU2V0LmZvckVhY2goZnVuY3Rpb24gKGUpIHsKICAgICAgbGV0IHNvdXJjZTsKICAgICAgbGV0IHRhcmdldDsKICAgICAgaWYgKCFtZXJnZWROb2Rlcy5pbmNsdWRlcyhlLnNvdXJjZSkgJiYgIW1lcmdlZE5vZGVzLmluY2x1ZGVzKGUudGFyZ2V0KSkgewogICAgICAgIHNvdXJjZSA9IGUuc291cmNlOwogICAgICAgIHRhcmdldCA9IGUudGFyZ2V0OwogICAgICB9IGVsc2UgaWYgKAogICAgICAgICFtZXJnZWROb2Rlcy5pbmNsdWRlcyhlLnNvdXJjZSkgJiYKICAgICAgICBtZXJnZWROb2Rlcy5pbmNsdWRlcyhlLnRhcmdldCkKICAgICAgKSB7CiAgICAgICAgc291cmNlID0gZS5zb3VyY2U7CiAgICAgICAgdGFyZ2V0ID0gZ2V0TWVyZ2luZ05vZGUoZS50YXJnZXQpOwogICAgICB9IGVsc2UgaWYgKAogICAgICAgIG1lcmdlZE5vZGVzLmluY2x1ZGVzKGUuc291cmNlKSAmJgogICAgICAgICFtZXJnZWROb2Rlcy5pbmNsdWRlcyhlLnRhcmdldCkKICAgICAgKSB7CiAgICAgICAgc291cmNlID0gZ2V0TWVyZ2luZ05vZGUoZS5zb3VyY2UpOwogICAgICAgIHRhcmdldCA9IGUudGFyZ2V0OwogICAgICB9CiAgICAgIGlmICgKICAgICAgICBtdWx0aWdyYXBoICYmCiAgICAgICAgKCFncmFwaC5ub2RlcygpLmluY2x1ZGVzKCIiICsgc291cmNlKSB8fAogICAgICAgICAgIWdyYXBoLm5vZGVzKCkuaW5jbHVkZXMoIiIgKyB0YXJnZXQpKQogICAgICApCiAgICAgICAgc291cmNlID0gdW5kZWZpbmVkOwogICAgICBpZiAoCiAgICAgICAgc291cmNlICE9PSB1bmRlZmluZWQgJiYKICAgICAgICB0YXJnZXQgIT09IHVuZGVmaW5lZCAmJgogICAgICAgIGNoZWNrRWxpZ2libGVFZGdlKHNvdXJjZSwgdGFyZ2V0KQogICAgICApIHsKICAgICAgICBpZiAoT2JqZWN0LmtleXMoZnVuY3Rpb25DYWxsRWRnZXMpLmluY2x1ZGVzKCIiICsgc291cmNlKSkgewogICAgICAgICAgY29uc3QgZnVuY0NhbGxOb2RlSWQgPSBmdW5jdGlvbkNhbGxFZGdlc1siIiArIHNvdXJjZV1bMF07CiAgICAgICAgICBncmFwaC5zZXROb2RlKGZ1bmNDYWxsTm9kZUlkLCB7CiAgICAgICAgICAgIGxhYmVsOiBnZXROb2RlTGFiZWxGQ2FsbChlLnN0bXQpLAogICAgICAgICAgICBjbGFzczogImNmYS1ub2RlIGZjYWxsIiwKICAgICAgICAgICAgaWQ6ICJjZmEtbm9kZSIgKyBmdW5jQ2FsbE5vZGVJZCwKICAgICAgICAgICAgc2hhcGU6ICJyZWN0IiwKICAgICAgICAgIH0pOwogICAgICAgICAgZ3JhcGguc2V0RWRnZShzb3VyY2UsIGZ1bmNDYWxsTm9kZUlkLCB7CiAgICAgICAgICAgIGxhYmVsOiBlLnN0bXQsCiAgICAgICAgICAgIGxhYmVsU3R5bGU6IGxhYmVsU3R5bGVEZWNpZGVyKGUsIHNvdXJjZSwgZnVuY0NhbGxOb2RlSWQpLAogICAgICAgICAgICBjbGFzczogZWRnZUNsYXNzRGVjaWRlcihlLCBzb3VyY2UsIGZ1bmNDYWxsTm9kZUlkKSwKICAgICAgICAgICAgaWQ6ICJjZmEtZWRnZV8iICsgc291cmNlICsgIi0iICsgZnVuY0NhbGxOb2RlSWQsCiAgICAgICAgICAgIHdlaWdodDogZWRnZVdlaWdodERlY2lkZXIoc291cmNlLCB0YXJnZXQpLAogICAgICAgICAgfSk7CiAgICAgICAgICBncmFwaC5zZXRFZGdlKGZ1bmNDYWxsTm9kZUlkLCB0YXJnZXQsIHsKICAgICAgICAgICAgbGFiZWw6ICIiLAogICAgICAgICAgICBsYWJlbFN0eWxlOiBsYWJlbFN0eWxlRGVjaWRlcihlLCBmdW5jQ2FsbE5vZGVJZCwgdGFyZ2V0KSwKICAgICAgICAgICAgY2xhc3M6IGVkZ2VDbGFzc0RlY2lkZXIoZSwgZnVuY0NhbGxOb2RlSWQsIHRhcmdldCksCiAgICAgICAgICAgIGlkOiAiY2ZhLWVkZ2VfIiArIGZ1bmNDYWxsTm9kZUlkICsgIi0iICsgdGFyZ2V0LAogICAgICAgICAgICB3ZWlnaHQ6IGVkZ2VXZWlnaHREZWNpZGVyKHNvdXJjZSwgdGFyZ2V0KSwKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBncmFwaC5zZXRFZGdlKHNvdXJjZSwgdGFyZ2V0LCB7CiAgICAgICAgICAgIGxhYmVsOiBlLnN0bXQsCiAgICAgICAgICAgIGxhYmVsU3R5bGU6IGxhYmVsU3R5bGVEZWNpZGVyKGUsIHNvdXJjZSwgdGFyZ2V0KSwKICAgICAgICAgICAgbGluZUludGVycG9sYXRlOiAiYmFzaXMiLAogICAgICAgICAgICBjbGFzczogZWRnZUNsYXNzRGVjaWRlcihlLCBzb3VyY2UsIHRhcmdldCksCiAgICAgICAgICAgIGlkOiAiY2ZhLWVkZ2VfIiArIHNvdXJjZSArICItIiArIHRhcmdldCwKICAgICAgICAgICAgd2VpZ2h0OiBlZGdlV2VpZ2h0RGVjaWRlcihzb3VyY2UsIHRhcmdldCksCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KCiAgLy8gSWYgZWRnZSBpcyBwYXJ0IG9mIGVycm9yIHBhdGgsIGdpdmUgaXQgYSByZXByZXNlbnRhdGl2ZSBjbGFzcwogIGZ1bmN0aW9uIGVkZ2VDbGFzc0RlY2lkZXIoZWRnZSwgc291cmNlLCB0YXJnZXQpIHsKICAgIGlmIChlcnJvclBhdGggPT09IHVuZGVmaW5lZCkgewogICAgICByZXR1cm4gImNmYS1lZGdlIjsKICAgIH0KICAgIGNvbnN0IG1lcmdlZE1hdGNoID0gZXJyb3JQYXRoLmZpbmQoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgIHJldHVybiBlbnRyeS5zb3VyY2UgPT09IHNvdXJjZSAmJiBlbnRyeS50YXJnZXQgPT09IHRhcmdldDsKICAgIH0pOwogICAgY29uc3QgaW5pdGlhbE1hdGNoID0gZXJyb3JQYXRoLmZpbmQoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgIHJldHVybiBlbnRyeS5zb3VyY2UgPT09IGVkZ2Uuc291cmNlICYmIGVudHJ5LnRhcmdldCA9PT0gZWRnZS50YXJnZXQ7CiAgICB9KTsKICAgIGlmIChtZXJnZWRNYXRjaCAhPT0gdW5kZWZpbmVkIHx8IGluaXRpYWxNYXRjaCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIHJldHVybiAiY2ZhLWVkZ2UgZXJyb3ItZWRnZSI7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gImNmYS1lZGdlIjsKICAgIH0KICB9CgogIC8vIElmIGVkZ2UgaXMgcGFydCBvZiBlcnJvciBwYXRoLCBnaXZlIGl0cyBsYWJlbCBhIHJlcHJlc2VudGF0aXZlIGNsYXNzCiAgZnVuY3Rpb24gbGFiZWxTdHlsZURlY2lkZXIoZWRnZSwgc291cmNlLCB0YXJnZXQpIHsKICAgIGNvbnN0IGVkZ2VDbGFzcyA9IGVkZ2VDbGFzc0RlY2lkZXIoZWRnZSwgc291cmNlLCB0YXJnZXQpOwogICAgaWYgKGVkZ2VDbGFzcy5pbmRleE9mKCJlcnJvciIpICE9PSAtMSkgewogICAgICByZXR1cm4gImZvbnQtc2l6ZTogMTJweDsgZmlsbDogcmVkIjsKICAgIH0KICAgIHJldHVybiAiZm9udC1zaXplOiAxMnB4IjsKICB9CgogIC8vIENoZWNrIGlmIGVkZ2UgaXMgZWxpZ2libGUgdG8gcGxhY2UgaW4gZ3JhcGguIFNhbWUgbm9kZSBlZGdlIG9ubHkgaWYgaXQgaXMgbm90IGNvbWJpbmVkIG5vZGUKICBmdW5jdGlvbiBjaGVja0VsaWdpYmxlRWRnZShzb3VyY2UsIHRhcmdldCkgewogICAgaWYgKG1lcmdlZE5vZGVzLmluY2x1ZGVzKHNvdXJjZSkgJiYgbWVyZ2VkTm9kZXMuaW5jbHVkZXModGFyZ2V0KSkKICAgICAgcmV0dXJuIGZhbHNlOwogICAgaWYgKAogICAgICBtZXJnZWROb2Rlcy5pbmNsdWRlcyhzb3VyY2UpICYmCiAgICAgIE9iamVjdC5rZXlzKGNvbWJpbmVkTm9kZXMpLmluY2x1ZGVzKCIiICsgdGFyZ2V0KQogICAgKSB7CiAgICAgIGlmIChjb21iaW5lZE5vZGVzWyIiICsgdGFyZ2V0XS5pbmNsdWRlcyhzb3VyY2UpKSByZXR1cm4gZmFsc2U7CiAgICAgIGVsc2UgcmV0dXJuIHRydWU7CiAgICB9CiAgICBpZiAoCiAgICAgIE9iamVjdC5rZXlzKGNvbWJpbmVkTm9kZXMpLmluY2x1ZGVzKCIiICsgc291cmNlKSAmJgogICAgICBtZXJnZWROb2Rlcy5pbmNsdWRlcyh0YXJnZXQpCiAgICApIHsKICAgICAgaWYgKGNvbWJpbmVkTm9kZXNbIiIgKyBzb3VyY2VdLmluY2x1ZGVzKHRhcmdldCkpIHJldHVybiBmYWxzZTsKICAgICAgZWxzZSByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGlmICgKICAgICAgT2JqZWN0LmtleXMoY29tYmluZWROb2RlcykuaW5jbHVkZXMoIiIgKyBzb3VyY2UpICYmCiAgICAgIE9iamVjdC5rZXlzKGNvbWJpbmVkTm9kZXMpLmluY2x1ZGVzKCIiICsgdGFyZ2V0KSAmJgogICAgICBzb3VyY2UgPT0gdGFyZ2V0CiAgICApCiAgICAgIHJldHVybiBmYWxzZTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgLy8gUmV0cmlldmUgdGhlIG5vZGUgaW4gd2hpY2ggdGhpcyBub2RlIHdhcyBtZXJnZWQKICBmdW5jdGlvbiBnZXRNZXJnaW5nTm9kZShpbmRleCkgewogICAgbGV0IHJlc3VsdCA9ICIiOwogICAgT2JqZWN0LmtleXMoY29tYmluZWROb2Rlcykuc29tZShmdW5jdGlvbiAoa2V5KSB7CiAgICAgIGlmIChjb21iaW5lZE5vZGVzW2tleV0uaW5jbHVkZXMoaW5kZXgpKSB7CiAgICAgICAgcmVzdWx0ID0ga2V5OwogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIHBhcnNlSW50KHJlc3VsdCk7CiAgfQoKICAvLyBEZWNpZGUgdGhlIHdlaWdodCBmb3IgdGhlIGVkZ2VzIGJhc2VkIG9uIHR5cGUKICBmdW5jdGlvbiBlZGdlV2VpZ2h0RGVjaWRlcihzb3VyY2UsIHRhcmdldCkgewogICAgY29uc3Qgc291cmNlTm9kZSA9IG5vZGVzLmZpbmQoZnVuY3Rpb24gKGl0KSB7CiAgICAgIHJldHVybiBpdC5pbmRleCA9PT0gc291cmNlOwogICAgfSk7CiAgICBjb25zdCB0YXJnZXROb2RlID0gbm9kZXMuZmluZChmdW5jdGlvbiAoaXQpIHsKICAgICAgcmV0dXJuIGl0LmluZGV4ID09PSB0YXJnZXQ7CiAgICB9KTsKICAgIGlmIChzb3VyY2UgPT09IHRhcmdldCkgewogICAgICByZXR1cm4gMjsKICAgIH0gZWxzZSBpZiAoc291cmNlTm9kZS5ycGlkIDwgdGFyZ2V0Tm9kZS5ycGlkKSB7CiAgICAgIHJldHVybiAwOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIDE7CiAgICB9CiAgfQoKICAvLyBHZXQgbm9kZSBsYWJlbCBmb3IgZnVuY3Rpb25DYWxsIG5vZGUgYnkgcHJvdmlkaW5nIHRoZSBlZGdlIHN0YXRlbWVudAogIGZ1bmN0aW9uIGdldE5vZGVMYWJlbEZDYWxsKHN0bXQpIHsKICAgIGxldCByZXN1bHQgPSAiIjsKICAgIGlmIChzdG10LmluY2x1ZGVzKCI9IikpIHsKICAgICAgcmVzdWx0ID0gc3RtdC5zcGxpdCgiPSIpWzFdLnNwbGl0KCIoIilbMF0udHJpbSgpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gc3RtdC5zcGxpdCgiKCIpWzBdLnRyaW0oKTsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7CiAgfQp9Owo=");W.workerName="cfaWorker",W.onmessage=l=>m(l.data,W,W.callback),W.onerror=l=>m(l.message,W,W.onErrorCallback);const i={argWorker:G,cfaWorker:W},X=[],n=l=>{delete l.callback,delete l.onErrorCallback},u=()=>{const l=X.shift();if(l){const Z=(l=>{const Z=i[l];if(!Z.busy)return Z.busy=!0,Z})(l.workerName);Z?(Z.callback=l.callback,Z.onErrorCallback=l.onErrorCallback,Z.postMessage(l.data)):X.unshift(l),setTimeout(u,0)}},a=async(l,Z)=>new Promise((b,d)=>{X.push({workerName:l,data:Z,callback:b,onErrorCallback:d}),setTimeout(u,0)}),V=b(17),h=b(18);function t(l){V.selectAll(l).each((function(l,Z){const b=V.select(this),d=V.select(this.firstChild),c=V.zoom().on("zoom",(function(l,Z){d.attr("transform",l.transform)}));b.call(c),b.on("zoom",null).on("wheel.zoom",null).on("dblclick.zoom",null).on("touchstart.zoom",null)}))}function y(){return(new h.graphlib.Graph).setGraph({}).setDefaultEdgeLabel((function(){return{}}))}function Y(l,Z){const b=l.pageX,d=l.pageY;V.select("#boxContent").html("<p>"+Z+"</p>"),V.select("#infoBox").style("left",(function(){return b+20+"px"})).style("top",(function(){return d+0+"px"})).style("visibility","visible")}function e(){V.select("#infoBox").style("visibility","hidden")}const p=b(17),o=new(b(18).render);function s(){t(".arg-svg"),p.selectAll(".arg-node").on("mouseover",(function(l,Z){const b=Array.prototype.concat(argJson.nodes,void 0===argJson.relevantnodes?[]:argJson.relevantnodes,void 0===argJson.reducednodes?[]:argJson.reducednodes).find((function(l){return l.index===parseInt(Z)}));let d='<span class=" bold ">function</span>: '+b.func+"<br>";b.type&&(d+='<span class=" bold ">type</span>: '+b.type+"<br>"),d+='<span class=" bold ">dblclick</span>: jump to CFA node',Y(l,d)})).on("mouseout",(function(){e()})).on("dblclick",(function(){c()("#set-tab-1").click(),p.select(".marked-cfa-node").empty()||p.select(".marked-cfa-node").classed("marked-cfa-node",!1);const l=p.select(this).select("tspan").text().split("N")[1];cfaJson.mergedNodes.includes(parseInt(l))&&(l=getMergingNode(parseInt(l)));const Z=p.select("#cfa-node"+l);Z.classed("marked-cfa-node",!0);const b=Z.node().getBoundingClientRect();c()("#cfa-container").scrollTop(b.top+c()("#cfa-container").scrollTop()-300).scrollLeft(b.left+c()("#cfa-container").scrollLeft()-c()("#errorpath_section").width()-2*b.width)})),p.selectAll(".arg-dummy").on("mouseover",(function(l){Y(l,'<span class=" bold ">type</span>: placeholder <br> <span class=" bold ">dblclick</span>: jump to Target node')})).on("mouseout",(function(){e()})).on("dblclick",(function(){p.select(".marked-arg-node").empty()||p.select(".marked-arg-node").classed("marked-arg-node",!1);const l=p.select("#arg-node"+p.select(this).attr("id").split("-")[1]);l.classed("marked-arg-node",!0);const Z=l.node().getBoundingClientRect();c()("#arg-container").scrollTop(Z.top+c()("#arg-container").scrollTop()-300).scrollLeft(Z.left+c()("#arg-container").scrollLeft()-c()("#errorpath_section").width()-2*Z.width)})),p.selectAll(".arg-edge").on("mouseover",(function(l,Z){p.select(this).select("path").style("stroke-width","3px");const b=Array.prototype.concat(argJson.edges,void 0===argJson.relevantedges?[]:argJson.relevantedges,void 0===argJson.reducededges?[]:argJson.reducededges).find((function(l){return l.source===parseInt(Z.v)&&l.target===parseInt(Z.w)}));let d="";Object.keys(b).forEach((function(l,Z){-1==c.a.inArray(l,["target","source","label","line"])&&(d+='<span class=" bold ">'+l+"<span>: "+b[l]+"<br>")})),Y(l,b?d:'<span class=" bold ">type</span>: graph connecting edge')})).on("mouseout",(function(){p.select(this).select("path").style("stroke-width","1.5px"),e()})),p.selectAll(".arg-split-edge").on("mouseover",(function(l){p.select(this).select("path").style("stroke-width","3px"),Y(l,'<span class=" bold ">type</span>: place holder <br> <span class=" bold ">dblclick</span>: jump to Original edge')})).on("mouseout",(function(){p.select(this).select("path").style("stroke-width","1.5px"),e()})).on("dblclick",(function(){const l=p.select(this).attr("id").split("_")[1];p.select(".marked-arg-edge").empty()||p.select(".marked-arg-edge").classed("marked-arg-edge",!1);const Z=p.select("#arg-edge"+l.split("-")[0]+l.split("-")[1]);Z.classed("marked-arg-edge",!0);const b=Z.node().getBoundingClientRect();c()("#arg-container").scrollTop(b.top+c()("#arg-container").scrollTop()-300).scrollLeft(b.left+c()("#arg-container").scrollLeft()-c()("#errorpath_section").width()-2*b.width)}))}const I=l=>{if(void 0!==l.graph){let Z="arg-graph"+l.id,b="arg-graph";void 0!==l.errorGraph&&(Z="arg-error-graph"+l.id,b="arg-error-graph",p.select("#arg-modal-error").style("display","inline"),c()("#renderStateModal").modal("show")),void 0!==l.simplifiedGraph&&(Z="arg-simplified-graph"+l.id,b="arg-simplified-graph"),void 0!==l.reducedGraph&&(Z="arg-reduced-graph"+l.id,b="arg-reduced-graph");let d=y();d=Object.assign(d,JSON.parse(l.graph)),p.select("#arg-container").append("div").attr("id",Z).attr("class",b);const m=p.select("#"+Z).append("svg").attr("id","arg-svg"+Z).attr("class","arg-svg"),G=m.append("g");o(p.select("#arg-svg"+Z+" g"),d),m.attr("height",d.graph().height+40),m.attr("width",d.graph().width+200),G.attr("transform","translate(40, 20)"),p.selectAll(".arg-node tspan").each((function(l,Z){const b=p.select(this.parentNode.parentNode).attr("transform");p.select(this).attr("dx",Math.abs(function(l){const Z=document.createElementNS("http://www.w3.org/2000/svg","g");Z.setAttributeNS(null,"transform",l);const b=Z.transform.baseVal.consolidate().matrix;let d,c,m,{a:G,b:W,c:i,d:X,e:n,f:u}=b;return(d=Math.sqrt(G*G+W*W))&&(G/=d,W/=d),(m=G*i+W*X)&&(i-=G*m,X-=W*m),(c=Math.sqrt(i*i+X*X))&&(i/=c,X/=c,m/=c),G*X<W*i&&(G=-G,W=-W,m=-m,d=-d),{translateX:n,translateY:u,rotate:180*Math.atan2(W,G)/Math.PI,skewX:180*Math.atan(m)/Math.PI,scaleX:d,scaleY:c}}(b).translateX))})),void 0!==l.errorGraph?(s(),c()("#renderStateModal").hide(),c()(".modal-backdrop").hide(),a("argWorker",{errorGraph:!0}).then(l=>I(l),l=>R(l))):(c()("#arg-modal").text(parseInt(c()("#arg-modal").text().split("/")[0])+1+"/"+c()("#arg-modal").text().split("/")[1]),a("argWorker",{renderer:"ready"}).then(l=>I(l),l=>R(l)))}else void 0!==l.status&&(2===angular.element(c()("#report-controller")).scope().getTabSet()&&(p.select("#arg-toolbar").style("visibility","visible"),p.select("#arg-container").classed("arg-content",!0),p.selectAll(".arg-graph").style("visibility","visible"),c()("#arg-container").scrollLeft(p.select(".arg-svg").attr("width")/4)),s(),void 0!==l.errorPath&&(p.selectAll("td.disabled").classed("disabled",!1),p.select(".make-pretty").classed("prettyprint")||(p.selectAll(".make-pretty").classed("prettyprint",!0),PR.prettyPrint())),c()("#renderStateModal").hide(),c()(".modal-backdrop").hide())},R=l=>{alert("ARG Worker failed with message "+l)},g=b(17),K=new(b(18).render);const N=l=>{if(void 0!==l.graph){if(!g.select("#cfa-graph-"+l.id).empty())return void a("cfaWorker",{renderer:"ready",cfaSplit:l.cfaSplit,argTabDisabled:l.argTabDisabled}).then(l=>N(l),l=>H(l));const Z=l.id;g.select("#cfa-container").append("div").attr("id","cfa-graph-"+Z).attr("class","cfa-graph");let b=y();b=Object.assign(b,JSON.parse(l.graph));const d=g.select("#cfa-graph-"+Z).append("svg").attr("id","cfa-svg-"+Z).attr("class","cfa-svg cfa-svg-"+l.func),m=d.append("g");K(g.select("#cfa-svg-"+Z+" g"),b),d.attr("height",b.graph().height+40),d.attr("width",b.graph().width+200),m.attr("transform","translate(40, 20)"),c()("#cfa-modal").text(parseInt(c()("#cfa-modal").text().split("/")[0])+1+"/"+c()("#cfa-modal").text().split("/")[1]),a("cfaWorker",{renderer:"ready",cfaSplit:l.cfaSplit,argTabDisabled:l.argTabDisabled}).then(l=>N(l),l=>H(l))}else void 0!==l.status&&(t(".cfa-svg"),g.selectAll(".cfa-node").on("mouseover",(function(l,Z){let b;if(parseInt(Z)>1e5)b='<span class=" bold ">type</span>: function call node <br><span class=" bold ">dblclick</span>: Select function';else{const l=cfaJson.nodes.find((function(l){return l.index===parseInt(Z)}));b='<span class=" bold ">function</span>: '+l.func,Z in cfaJson.combinedNodes&&(b+='<br><span class=" bold ">combines nodes</span> : '+Math.min.apply(null,cfaJson.combinedNodes[Z])+"-"+Math.max.apply(null,cfaJson.combinedNodes[Z])),b+='<br> <span class=" bold ">reverse postorder Id</span>: '+l.rpid}Y(l,b)})).on("mouseout",(function(){e()})),g.selectAll(".fcall").on("dblclick",(function(l,Z){angular.element(c()("#cfa-toolbar")).scope().selectedCFAFunction=g.select("#cfa-node"+Z+" text").text(),angular.element(c()("#cfa-toolbar").scope()).setCFAFunction()})),g.selectAll(".cfa-dummy").on("mouseover",(function(l){Y(l,'<span class=" bold ">type</span>: placeholder <br> <span class=" bold ">dblclick</span>: jump to Target node')})).on("mouseout",(function(){e()})).on("dblclick",(function(){g.select(".marked-cfa-node").empty()||g.select(".marked-cfa-node").classed("marked-cfa-node",!1);const l=g.select("#cfa-node"+g.select(this).attr("id").split("-")[1]);l.classed("marked-cfa-node",!0);const Z=l.node().getBoundingClientRect();c()("#cfa-container").scrollTop(Z.top+c()("#cfa-container").scrollTop()-300).scrollLeft(Z.left+c()("#cfa-container").scrollLeft()-c()("#errorpath_section").width()-2*Z.width)})),g.selectAll(".cfa-edge").on("mouseover",(function(l){g.select(this).select("path").style("stroke-width","3px"),Y(l,'<span class=" bold ">dblclick</span>: jump to Source line')})).on("mouseout",(function(){g.select(this).select("path").style("stroke-width","1.5px"),e()})).on("dblclick",(function(l,Z){const b=findCfaEdge(Z);if(void 0===b){const l=g.select(this).attr("id").split("_")[1];b=findCfaEdge({v:l.split("-")[0],w:l.split("-")[1]})}c()("#set-tab-3").click();const d=b.line;0===d&&(d=1),g.select(".marked-source-line").empty()||g.select(".marked-source-line").classed("marked-source-line",!1);const m=g.select("#source-"+d+" td pre.prettyprint");m.classed("marked-source-line",!0),c()(".sourceContent").scrollTop(m.node().getBoundingClientRect().top+c()(".sourceContent").scrollTop()-200)})),g.selectAll(".cfa-split-edge").on("mouseover",(function(l){g.select(this).select("path").style("stroke-width","3px"),Y(l,'<span class=" bold ">type</span>: place holder <br> <span class=" bold ">dblclick</span>: jump to Original edge')})).on("mouseout",(function(){g.select(this).select("path").style("stroke-width","1.5px"),e()})).on("dblclick",(function(){const l=g.select(this).attr("id").split("_")[1];g.select(".marked-cfa-edge").empty()||g.select(".marked-cfa-edge").classed("marked-cfa-edge",!1);const Z=g.select("#cfa-edge_"+l.split("-")[0]+"-"+l.split("-")[1]);Z.classed("marked-cfa-edge",!0);const b=Z.node().getBoundingClientRect();c()("#cfa-container").scrollTop(b.top+c()("#cfa-container").scrollTop()-300).scrollLeft(b.left+c()("#cfa-container").scrollLeft()-c()("#errorpath_section").width()-2*b.width)})),g.select("#cfa-toolbar").style("visibility","visible"),g.select("#cfa-container").classed("cfa-content",!0),g.selectAll(".cfa-svg").each((function(l,Z){g.select(this).attr("width",Math.max(g.select(this).attr("width"),g.select(this.parentNode).style("width").split("px")[0]))})),g.selectAll(".cfa-graph").style("visibility","visible"),l.cfaSplit||l.argTabDisabled?(c()("#renderStateModal").hide(),c()(".modal-backdrop").hide()):a("argWorker",{renderer:"ready"}).then(l=>I(l),l=>R(l)))},H=l=>{alert("CFA Worker failed with message "+l)},x=b(17);const J=window.argJson,L=window.sourceFiles,F=window.cfaJson,C=b(20);var S=F.functionNames;F.functionCallEdges;let B;F.hasOwnProperty("errorPath")&&(z=F.errorPath),J.hasOwnProperty("relevantedges")&&(M=J.relevantedges),J.hasOwnProperty("reducededges")&&(B=J.reducededges);let k=!1,v=!1;!function(){c()((function(){let l;c()('[data-toggle="popover"]').popover({html:!0}),c()("[data-toggle=tooltip]").tooltip({trigger:"hover"}),c()(document).on("hover","[data-toggle=tooltip]",()=>c()(event.currentTarget).tooltip("show")),c()(document).on("shown.bs.tooltip",(function(Z){l&&clearTimeout(l),l=setTimeout((function(){c()(Z.target).tooltip("hide")}),5e3)})),c()(document).ready((function(){c()("#statistics_table").DataTable({order:[],aLengthMenu:[[25,50,100,200,-1],[25,50,100,200,"All"]],iDisplayLength:-1,columnDefs:[{orderable:!1,targets:0},{orderable:!1,targets:1},{orderable:!1,targets:2}]})})),c()(document).ready((function(){PR.prettyPrint()})),c()(document).ready((function(){c()("#config_table").DataTable({order:[[1,"asc"]],aLengthMenu:[[25,50,100,200,-1],[25,50,100,200,"All"]],iDisplayLength:-1})})),c()(document).ready((function(){c()("#log_table").DataTable({order:[[0,"asc"]],autoWidth:!1,aoColumns:[{sWidth:"12%"},{sWidth:"10%"},{sWidth:"10%"},{sWidth:"25%"},{sWidth:"43%"}],aLengthMenu:[[25,50,100,200,-1],[25,50,100,200,"All"]],iDisplayLength:-1})})),c()((function(){c()("#errorpath_section").resizable({autoHide:!0,handles:"e",resize:function(l,Z){const b=Z.element.parent(),d=b.width()-Z.element.outerWidth(),c=Z.element.next(),m=(d-(c.outerWidth()-c.width()))/b.width()*100+"%";c.width(m)},stop:function(l,Z){const b=Z.element.parent();Z.element.css({width:Z.element.width()/b.width()*100+"%"})}})}))}));const l=angular.module("report",["ngSanitize"]);l.controller("ReportController",["$rootScope","$scope",function(l,Z){Z.logo="https://cpachecker.sosy-lab.org/logo.svg",Z.help_content='<div class="container " style="font-family: Arial"><p><b>CFA</b> (Control Flow Automaton) shows the control flow of the program. <br> For each function in the source code one CFA graph is created. <br>Initially all CFA\'s are displayed below one another beginning with the CFA for the program entry function.</p><p> If an error path is detected by the analysis the edges leading to it will appear red.</p><p>&#9675; &nbsp; normal element</p><p>&#9634; &nbsp; combined normal elements</p><p>&#9645; &nbsp; function node</p><p>&#9671; &nbsp; loop head</p><p>- doubleclick on a function node to select the CFA for this function</p><p>- doubleclick on edges to jump to the relating line in the Source tab</p><p>- use the Displayed CFA select box to display only the CFA for the desired function </p><p>- use the Mouse Wheel Zoom checkbox to alter between scroll and zoom behaviour on mouse wheel</p><p>- use Split Threshold and \'Refresh button\' to redraw the graph (values between 500 and 900)</p><p><b>ARG</b> (Abstract Reachability Graph) shows the explored abstract state space</p><p> If an error path is detected by the analysis the edges leading to it will appear red.</p><p><span style="background-color:green;">&#9645;</span> covered state</p><p><span style="background-color:orange;">&#9645;</span> not yet processed state</p><p><span style="background-color:cornflowerblue;">&#9645;</span> important state (depending on used analysis)</p><p><span style="background-color:red;">&#9645;</span> target state</p><p>- doubleclick on node to jump to relating node in CFA</p><p>- use the Displayed ARG select box to select between the complete ARG and ARG containing only the error path (only in case an error was found) </p><p>- use the Mouse Wheel Zoom checkbox to alter between scroll and zoom behaviour on mouse wheel</p><p>- use Split Threshold and \'Refresh button\' to redraw the graph (values between 500 and 900)</p><p><b>In case of split graph (applies to both CFA and ARG)</b><br> -- doubleclick on labelless node to jump to target node<br> -- doubleclick on \'split edge\' to jump to initial edge </p></div>',Z.help_errorpath="<div style=\"font-family: Arial\"><p>The errorpath leads to the error 'edge by edge' (CFA) or 'node by node' (ARG) or 'line by line' (Source)</p><p><b>-V- (Value Assignments)</b> Click to show all initialized variables and their values at that point in the programm.</p><p><b>Edge-Description (Source-Code-View)</b> Click to jump to the relating edge in the CFA / node in the ARG / line in Source (depending on active tab).\n If non of the mentioned tabs is currently set, the ARG tab will be selected.</p><p><b>Buttons (Prev, Start, Next)</b> Click to navigate through the errorpath and jump to the relating position in the active tab</p><p><b>Search</b>\n - You can search for words or numbers in the edge-descriptions (matches appear blue)\n- You can search for value-assignments (variable names or their value) - it will highlight only where a variable has been initialized or where it has changed its value (matches appear green)\n- An 'exact matches' search will look for a variable declarator matching exactly the provided text considering both, edge descriptions and value assignments</p></div>",Z.tab=1,Z.$on("ChangeTab",(function(l,b){Z.setTab(b)})),Z.toggleErrorPathSection=function(l){c()("#toggle_error_path").on("change",(function(){c()(event.currentTarget).is(":checked")?(x.select("#errorpath_section").style("display","inline"),x.select("#errorpath_section").style("width","25%"),x.select("#externalFiles_section").style("width","75%"),x.select("#cfa-toolbar").style("width","auto")):(x.select("#errorpath_section").style("display","none"),x.select("#externalFiles_section").style("width","100%"),x.select("#cfa-toolbar").style("width","95%"))}))},c()("#full_screen_mode").click((function(){c()(event.currentTarget).find("i").toggleClass("fa-compress fa-expand")})),Z.makeFullScreen=function(){document.fullScreenElement&&null!==document.fullScreenElement||!document.mozFullScreen&&!document.webkitIsFullScreen?document.documentElement.requestFullScreen?document.documentElement.requestFullScreen():document.documentElement.mozRequestFullScreen?document.documentElement.mozRequestFullScreen():document.documentElement.webkitRequestFullScreen&&document.documentElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT):document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen()},Z.setTab=function(b){if(1===b)"hidden"!==x.select("#arg-toolbar").style("visibility")&&(x.select("#arg-toolbar").style("visibility","hidden"),x.selectAll(".arg-graph").style("visibility","hidden"),x.selectAll(".arg-simplified-graph").style("visibility","hidden"),x.selectAll(".arg-reduced-graph").style("visibility","hidden"),x.selectAll(".arg-error-graph").style("visibility","hidden"),x.select("#arg-container").classed("arg-content")&&x.select("#arg-container").classed("arg-content",!1)),x.select("#cfa-toolbar").style("visibility","visible"),x.select("#cfa-container").classed("cfa-content")||x.select("#cfa-container").classed("cfa-content",!0),x.selectAll(".cfa-graph").style("visibility","visible");else if(2===b){if(v)return;if("hidden"!==x.select("#cfa-toolbar").style("visibility")&&(x.select("#cfa-toolbar").style("visibility","hidden"),x.selectAll(".cfa-graph").style("visibility","hidden"),x.select("#cfa-container").classed("cfa-content")&&x.select("#cfa-container").classed("cfa-content",!1)),x.select("#arg-toolbar").style("visibility","visible"),x.select("#arg-container").classed("arg-content")||x.select("#arg-container").classed("arg-content",!0),x.selectAll(".arg-simplified-graph").style("display","none"),x.selectAll(".arg-reduced-graph").style("display","none"),-1!==l.displayedARG.indexOf("error"))x.selectAll(".arg-error-graph").style("visibility","visible"),0===c()("#arg-container").scrollTop()&&c()("#arg-container").scrollTop(200).scrollLeft(0);else if(x.selectAll(".arg-graph").style("visibility","visible"),0===c()("#arg-container").scrollTop()){const l=x.select(".arg-node").node().getBoundingClientRect();c()("#arg-container").scrollTop(l.top+c()("#arg-container").scrollTop()-300).scrollLeft(l.left+c()("#arg-container").scrollLeft()-500)}}else"hidden"!==x.select("#cfa-toolbar").style("visibility")&&(x.select("#cfa-toolbar").style("visibility","hidden"),x.selectAll(".cfa-graph").style("visibility","hidden"),x.select("#cfa-container").classed("cfa-content")&&x.select("#cfa-container").classed("cfa-content",!1)),"hidden"!==x.select("#arg-toolbar").style("visibility")&&(x.select("#arg-toolbar").style("visibility","hidden"),x.selectAll(".arg-graph").style("visibility","hidden"),x.selectAll(".arg-simplified-graph").style("visibility","hidden"),x.selectAll(".arg-reduced-graph").style("visibility","hidden"),x.selectAll(".arg-error-graph").style("visibility","hidden"),x.select("#arg-container").classed("arg-content")&&x.select("#arg-container").classed("arg-content",!1));Z.tab=b},Z.tabIsSet=function(l){return Z.tab===l},Z.getTabSet=function(){return Z.tab}}]),l.controller("ErrorpathController",["$rootScope","$scope",function(l,Z){function b(Z){const b={};for(let d=0;d<Z.errPathIds.length;d++){const c=Z.errPathIds[d],m=l.errorPath[c],G={line:m.line,desc:m.desc};b[G.line+G.desc]=G}return Object.values(b)}function d(l,Z){const b={};if(""!=l){const d=l.split("\n");for(let l=0;l<d.length-1;l++)Object.keys(Z).includes(d[l].split("==")[0].trim())?Z[d[l].split("==")[0].trim()]!==d[l].split("==")[1].trim().slice(0,-1)&&(b[d[l].split("==")[0].trim()]=d[l].split("==")[1].trim().slice(0,-1)):b[d[l].split("==")[0].trim()]=d[l].split("==")[1].trim().slice(0,-1)}return b}l.errorPath=[];const m=[];let G=-1;const W=[];if(void 0!==z){let Z=0;for(var i=0;i<z.length;i++){const b=z[i];if(-1===b.desc.indexOf("Return edge from")&&"Function start dummy edge"!=b.desc&&""!=b.desc){G+=1;let m={};b.valDict={},b.valString="",i>0&&(c.a.extend(b.valDict,l.errorPath[l.errorPath.length-1].valDict),m=l.errorPath[l.errorPath.length-1].valDict);const W=d(b.val,m);b.newValDict=W,c.a.isEmptyObject(W)||c.a.extend(b.valDict,W);for(const l in b.valDict)b.valString+=l+":  "+b.valDict[l]+"\n";for(var X=1;X<=Z;X++)b.desc="   "+b.desc;l.errorPath.push(b)}else-1!==b.desc.indexOf("Return edge from")?Z-=1:-1!==b.desc.indexOf("Function start dummy")&&(Z+=1);void 0!==b.faults&&b.faults.length>0&&(b.importantindex=G,b.bestrank=F.faults[b.faults[0]].rank,b.bestreason=F.faults[b.faults[0]].reason,void 0!==b.additional&&""!==b.additional&&(b.bestreason=b.bestreason+b.additional),W.push(b)),1==b.importance&&m.push(G)}angular.element(document).ready((function(){!function(l){for(let Z=0;Z<l.length;Z++)x.selectAll("#errpath-"+l[Z]+" td pre").classed("important",!0)}(m),function(){if(void 0!==W&&W.length>0){for(let l=0;l<W.length;l++)x.selectAll("#errpath-"+W[l].importantindex+" td pre").classed("fault",!0);x.selectAll("#errpath-header td pre").classed("tableheader",!0)}}()}))}if(l.faults=[],l.precondition=void 0===F.precondition?"":F.precondition["fl-precondition"],l.hasPrecondition=""!==l.precondition,void 0!==F.faults)for(i=0;i<F.faults.length;i++){const Z=F.faults[i],d=Object.assign({},Z);d.errPathIds=[];for(X=0;X<l.errorPath.length;X++){const Z=l.errorPath[X];Z.faults.includes(i)&&(d.errPathIds.push(X),d.valDict=Z.valDict),d.lines=b(d)}l.faults.push(d)}function n(Z){const b=angular.element(c()("#report-controller")).scope().getTabSet();Array.isArray(Z)||(Z=[Z]),["marked-cfa-edge","marked-cfa-node","marked-cfa-node-label","marked-arg-node","marked-source-line"].forEach((function(l){x.selectAll("."+l).classed(l,!1)}));for(let d=0;d<Z.length;d++){const c=Z[d];if(void 0===l.errorPath[c])return;u.bind(this)(b,c)}}function u(Z,b){a.bind(this)(l.errorPath[b]),function(l){if(void 0===l.argelem)return;let Z;Z="none"!==x.select("#arg-graph0").style("display")?"#arg-node":"#arg-error-node";const b=x.select(Z+l.argelem);b.classed("marked-arg-node",!0);const d=b.node().getBoundingClientRect();c()("#arg-container").scrollTop(d.top+c()("#arg-container").scrollTop()-300).scrollLeft(d.left-x.select("#arg-container").style("width").split("px")[0]-c()("#arg-container"))}(l.errorPath[b]),function(l){0===l.line&&(l.line=1);const Z=x.select("#source-"+l.line+" td pre.prettyprint");Z.classed("marked-source-line",!0),c()(".sourceContent").scrollTop(Z.node().getBoundingClientRect().top+c()(".sourceContent").scrollTop()-200)}(l.errorPath[b]),[1,2,3].includes(Z)||angular.element(c()("#report-controller")).scope().setTab(2)}function a(l){const Z=function(l){const Z={};if(F.mergedNodes.includes(l.source)&&F.mergedNodes.includes(l.target))return Z.source=V(l.source),Z;if(l.source in F.combinedNodes)return Z.source=l.source,Z;F.mergedNodes.includes(l.source)||F.mergedNodes.includes(l.target)?!F.mergedNodes.includes(l.source)&&F.mergedNodes.includes(l.target)?(Z.source=l.source,Z.target=V(l.target)):F.mergedNodes.includes(l.source)&&!F.mergedNodes.includes(l.target)&&(Z.source=V(l.source),Z.target=l.target):(Z.source=l.source,Z.target=l.target);Object.keys(F.functionCallEdges).includes(""+Z.source)&&(Z.target=F.functionCallEdges[""+Z.source][0]);Z.source===Z.target&&(delete Z.source,delete Z.target);return Z}(l);if(!c.a.isEmptyObject(Z)){if(void 0===Z.target){(d=x.select("#cfa-node"+Z.source)).classed("marked-cfa-node",!0);var b=d.node().getBoundingClientRect();return c()("#cfa-container").scrollTop(b.top+c()("#cfa-container").scrollTop()-300).scrollLeft(b.left-x.select("#cfa-container").style("width").split("px")[0]-c()("#cfa-container")),void(Z.source in F.combinedNodes&&d.selectAll("tspan").each((function(Z){x.select(this).html().includes(l.source)&&x.select(this).classed("marked-cfa-node-label",!0)})))}var d;(d=x.select("#cfa-edge_"+Z.source+"-"+Z.target)).classed("marked-cfa-edge",!0);b=d.node().getBoundingClientRect();c()("#cfa-container").scrollTop(b.top+c()("#cfa-container").scrollTop()-300).scrollLeft(b.left-x.select("#cfa-container").style("width").split("px")[0]-c()("#cfa-container"))}}function V(l){let Z="";return Object.keys(F.combinedNodes).some((function(b){if(F.combinedNodes[b].includes(l))return Z=b,Z})),Z}Z.hideFaults=null==l.faults||0==l.faults.length,Z.faultClicked=function(){Z.hideErrorTable=!Z.hideErrorTable},Z.clickedFaultLocElement=function(Z){x.selectAll(".clickedFaultLocElement").classed("clickedFaultLocElement",!1);const b=x.select(Z.currentTarget);b.classed("clickedFaultLocElement",!0);const d=b.attr("id").substring("fault-".length),c=l.faults[d];n.bind(this)(c.errPathIds)},Z.errPathPrevClicked=function(l){const Z=x.select("tr.clickedErrPathElement");if(!Z.empty()){const l=parseInt(Z.attr("id").substring("errpath-".length))-1;Z.classed("clickedErrPathElement",!1),x.select("#errpath-"+l).classed("clickedErrPathElement",!0),c()("#value-assignment").scrollTop(c()("#value-assignment").scrollTop()-18),n.bind(this)(l)}},Z.errPathStartClicked=function(){x.select("tr.clickedErrPathElement").classed("clickedErrPathElement",!1),x.select("#errpath-0").classed("clickedErrPathElement",!0),c()("#value-assignment").scrollTop(0),n.bind(this)(0)},Z.errPathNextClicked=function(l){const Z=x.select("tr.clickedErrPathElement");if(!Z.empty()){const l=parseInt(Z.attr("id").substring("errpath-".length))+1;Z.classed("clickedErrPathElement",!1),x.select("#errpath-"+l).classed("clickedErrPathElement",!0),c()("#value-assignment").scrollTop(c()("#value-assignment").scrollTop()+18),n.bind(this)(l)}},Z.clickedErrpathElement=function(l){x.select("tr.clickedErrPathElement").classed("clickedErrPathElement",!1);const Z=x.select(l.currentTarget.parentNode);Z.classed("clickedErrPathElement",!0),n.bind(this)(Z.attr("id").substring("errpath-".length))}}]),l.controller("SearchController",["$rootScope","$scope",function(l,Z){function b(l,Z){const b=l.split(" ");for(let l=0;l<b.length;l++)if(b[l].replace(/[^\w.]/g,"")===Z)return!0;return!1}function d(l,Z,b){if(c.a.isEmptyObject(l))return!1;let d;return d=b?Object.keys(l).find((function(l){return l===Z})):Object.keys(l).find((function(l){return-1!==l.indexOf(Z)})),!!d}Z.numOfValueMatches=0,Z.numOfDescriptionMatches=0,Z.checkIfEnter=function(l){13==l.keyCode&&Z.searchFor()},Z.searchFor=function(){Z.numOfValueMatches=0,Z.numOfDescriptionMatches=0,"none"===x.select("#matches").style("display")&&x.select("#matches").style("display","inline"),x.selectAll(".markedValueDescElement").classed("markedValueDescElement",!1),x.selectAll(".markedValueElement").classed("markedValueElement",!1),x.selectAll(".markedDescElement").classed("markedDescElement",!1);const m=c()(".search-input").val().trim();""!=m&&(c()("#optionExactMatch").prop("checked")?l.errorPath.forEach((function(l,G){const W=d(l.newValDict,m,!0);W&&b(l.desc.trim(),m)?(Z.numOfValueMatches++,Z.numOfDescriptionMatches++,c()("#errpath-"+G+" td")[1].classList.add("markedValueDescElement")):W?(Z.numOfValueMatches++,c()("#errpath-"+G+" td")[1].classList.add("markedValueElement")):b(l.desc.trim(),m)&&(Z.numOfDescriptionMatches++,c()("#errpath-"+G+" td")[1].classList.add("markedDescElement"))})):l.errorPath.forEach((function(l,b){const G=d(l.newValDict,m,!1);G&&-1!==l.desc.indexOf(m)?(Z.numOfValueMatches++,Z.numOfDescriptionMatches++,c()("#errpath-"+b+" td")[1].classList.add("markedValueDescElement")):G?(Z.numOfValueMatches++,c()("#errpath-"+b+" td")[1].classList.add("markedValueElement")):-1!==l.desc.indexOf(m)&&(Z.numOfDescriptionMatches++,c()("#errpath-"+b+" td")[1].classList.add("markedDescElement"))})))}}]),l.controller("ValueAssignmentsController",["$rootScope","$sce","$scope",function(l,Z,b){b.showValues=function(l){const Z=l.currentTarget;Z.classList.contains("markedTableElement")?Z.classList.remove("markedTableElement"):Z.classList.add("markedTableElement")},b.htmlTrusted=function(l){return Z.trustAsHtml(l)}}]),l.controller("CFAToolbarController",["$scope",function(l){S&&(S.length>1?l.functions=["all"].concat(S):l.functions=S,l.selectedCFAFunction=l.functions[0],l.zoomEnabled=!1),l.setCFAFunction=function(){if(l.zoomEnabled&&l.zoomControl(),x.selectAll("#cfa-toolbar option").attr("selected",null).attr("disabled",null),x.select("#cfa-toolbar [label="+l.selectedCFAFunction+"]").attr("selected","selected").attr("disabled",!0),"all"===l.selectedCFAFunction)S.forEach((function(l){x.selectAll(".cfa-svg-"+l).attr("display","inline-block")}));else{l.functions.filter((function(Z){return Z!==l.selectedCFAFunction&&"all"!==Z})).forEach((function(l){x.selectAll(".cfa-svg-"+l).attr("display","none")})),x.selectAll(".cfa-svg-"+l.selectedCFAFunction).attr("display","inline-block")}const Z=x.select("[display=inline-block] .cfa-node:nth-child(2)").node().getBoundingClientRect();"none"!==x.select("#errorpath_section").style("display")?c()("#cfa-container").scrollTop(Z.top+c()("#cfa-container").scrollTop()-300).scrollLeft(Z.left-c()("#cfa-container").scrollLeft()-x.select("#externalFiles_section").style("width")):c()("#cfa-container").scrollTop(Z.top+c()("#cfa-container").scrollTop()-300).scrollLeft(Z.left-c()("#cfa-container"))},l.cfaFunctionIsSet=function(Z){return Z===l.selectedCFAFunction},l.zoomControl=function(){l.zoomEnabled?(l.zoomEnabled=!1,x.select("#cfa-zoom-button").html("<i class='far fa-square'></i>"),x.selectAll(".cfa-svg").each((function(l){x.select(this).on("zoom",null).on("wheel.zoom",null).on("dblclick.zoom",null).on("touchstart.zoom",null)}))):(l.zoomEnabled=!0,x.select("#cfa-zoom-button").html("<i class='far fa-check-square'></i>"),x.selectAll(".cfa-svg").each((function(l){const Z=x.select(this),b=x.select(this.firstChild),d=x.zoom().on("zoom",(function(l){b.attr("transform",l.transform)}));Z.call(d),Z.on("dblclick.zoom",null).on("touchstart.zoom",null)})))},l.redraw=function(){const Z=c()("#cfa-split-threshold").val();if(!l.validateInput(Z))return void alert("Invalid input!");x.selectAll(".cfa-graph").remove(),l.zoomEnabled&&l.zoomControl(),l.selectedCFAFunction=l.functions[0],k=!0;let b=0;F.functionNames.forEach((function(l){const d=F.nodes.filter((function(Z){return Z.func===l}));b+=Math.ceil(d.length/Z)})),c()("#cfa-modal").text("0/"+b),b=null,c()("#renderStateModal").modal("show"),a("cfaWorker",{toSplit:Z,cfaSplit:k,argTabDisabled:v}).then(l=>N(l),l=>H(l)),a("cfaWorker",{rendered:"ready",cfaSplit:k,argTabDisabled:v}).then(l=>N(l),l=>H(l))},l.validateInput=function(l){return l%1==0&&!(l<500||l>900)}}]),l.controller("ARGToolbarController",["$rootScope","$scope",function(l,Z){Z.zoomEnabled=!1,Z.argSelections=["complete"],void 0!==z&&Z.argSelections.push("error path"),void 0!==M&&Z.argSelections.push("simplified"),void 0!==B&&Z.argSelections.push("witness"),l.displayedARG=Z.argSelections[0],Z.displayARG=function(){Z.argSelections.length>1&&(-1!==l.displayedARG.indexOf("error")?(x.selectAll(".arg-graph").style("display","none"),x.select(".arg-simplified-graph").empty()||x.selectAll(".arg-simplified-graph").style("display","none"),x.select(".arg-reduced-graph").empty()||x.selectAll(".arg-reduced-graph").style("display","none"),c()("#arg-container").scrollTop(0).scrollLeft(0),x.select(".arg-error-graph").empty()?a("argWorker",{errorGraph:!0}).then(l=>I(l),l=>R(l)):x.selectAll(".arg-error-graph").style("display","inline-block").style("visibility","visible")):-1!==l.displayedARG.indexOf("simplified")?(x.selectAll(".arg-graph").style("display","none"),x.selectAll(".arg-reduced-graph").style("display","none"),c()("#arg-container").scrollTop(0).scrollLeft(0),x.select(".arg-error-graph").empty()||x.selectAll(".arg-error-graph").style("display","none"),x.select(".arg-simplified-graph").empty()?a("argWorker",{simplifiedGraph:!0}).then(l=>I(l),l=>R(l)):x.selectAll(".arg-simplified-graph").style("display","inline-block").style("visibility","visible")):-1!==l.displayedARG.indexOf("witness")?(x.selectAll(".arg-graph").style("display","none"),x.selectAll(".arg-simplified-graph").style("display","none"),c()("#arg-container").scrollTop(0).scrollLeft(0),x.select(".arg-error-graph").empty()||x.selectAll(".arg-error-graph").style("display","none"),x.select(".arg-reduced-graph").empty()?a("argWorker",{reducedGraph:!0}).then(l=>I(l),l=>R(l)):x.selectAll(".arg-reduced-graph").style("display","inline-block").style("visibility","visible")):(x.select(".arg-error-graph").empty()||x.selectAll(".arg-error-graph").style("display","none"),x.select(".arg-simplified-graph").empty()||x.selectAll(".arg-simplified-graph").style("display","none"),x.select(".arg-reduced-graph").empty()||x.selectAll(".arg-reduced-graph").style("display","none"),x.selectAll(".arg-graph").style("display","inline-block").style("visibility","visible"),c()("#arg-container").scrollLeft(x.select(".arg-svg").attr("width")/4)))},Z.argZoomControl=function(){Z.zoomEnabled?(Z.zoomEnabled=!1,x.select("#arg-zoom-button").html("<i class='far fa-square'></i>"),x.selectAll(".arg-svg").each((function(l){x.select(this).on("zoom",null).on("wheel.zoom",null).on("dblclick.zoom",null).on("touchstart.zoom",null)}))):(Z.zoomEnabled=!0,x.select("#arg-zoom-button").html("<i class='far fa-check-square'></i>"),x.selectAll(".arg-svg").each((function(l){const Z=x.select(this),b=x.select(this.firstChild),d=x.zoom().on("zoom",(function(l){b.attr("transform",l.transform)}));Z.call(d),Z.on("dblclick.zoom",null).on("touchstart.zoom",null)})))},Z.argRedraw=function(){const l=c()("#arg-split-threshold").val();if(!Z.validateInput(l))return void alert("Invalid input!");x.selectAll(".arg-graph").remove(),x.selectAll(".arg-simplified-graph").remove(),x.selectAll(".arg-reduced-graph").remove(),x.selectAll(".arg-error-graph").remove(),Z.zoomEnabled&&Z.argZoomControl();let b=Math.ceil(J.nodes.length/l);c()("#arg-modal").text("0/"+b),b=null,c()("#renderStateModal").modal("show"),a("argWorker",{toSplit:l}).then(l=>I(l),l=>R(l)),a("argWorker",{renderer:"ready"}).then(l=>I(l),l=>R(l))},Z.validateInput=function(l){return l%1==0&&!(l<500||l>900)}}]),l.controller("SourceController",["$rootScope","$scope","$location","$anchorScroll",function(l,Z,b,d){Z.sourceFiles=L,Z.selectedSourceFile=0,Z.setSourceFile=function(l){Z.selectedSourceFile=l},Z.sourceFileIsSet=function(l){return l===Z.selectedSourceFile}}]),l.controller("AboutController",["$rootScope","$scope",function(l,Z,b,d){Z.dependencies=C,Z.knownLicenses=["0BSD","Apache-2.0","BSD-2-Clause","BSD-3-Clause","CC0-1.0","CC-BY-3.0","CC-BY-4.0","ISC","MIT","OFL-1.1"],Z.linkifyLicenses=l=>l.split(/([A-Za-z0-9.-]+)/).filter(l=>l).map(l=>Z.knownLicenses.includes(l)?Z.linkifyLicense(l):l),Z.linkifyLicense=l=>`<a href="https://spdx.org/licenses/${l}" target="_blank" rel="noopener noreferrer">${l}</a>`}])}();var z,M;S=F.functionNames,F.functionCallEdges;F.hasOwnProperty("errorPath")&&(z=F.errorPath),J.hasOwnProperty("relevantedges")&&(M=J.relevantedges),window.init=()=>{let l;J.nodes?(l=Math.ceil(J.nodes.length/700),c()("#arg-modal").text("0/"+l)):(c()("#arg-modal").text("0/0"),c()("#set-tab-2").addClass("disabled-btn"),v=!0,angular.element(document).ready((function(){c()("#set-tab-2").parent().attr("data-original-title","ARG not available for this configuration of CPAchecker"),c()("#set-tab-2").attr("data-toggle","")})));let Z=0;F.functionNames.forEach((function(l){const b=F.nodes.filter((function(Z){return Z.func===l}));Z+=Math.ceil(b.length/700)})),c()("#cfa-modal").text("0/"+Z),Z=null,c()("#renderStateModal").modal("show"),void 0===z?(x.select("#errorpath_section").style("display","none"),c()("#toggle_button_error_path").hide(),c()("#toggle_button_error_path_placeholder").hide()):(x.select("#externalFiles_section").style("width","75%"),x.select("#cfa-toolbar").style("width","auto")),a("cfaWorker",{json:JSON.stringify(F),cfaSplit:k,argTabDisabled:v}).then(l=>N(l),l=>H(l)),J.nodes&&(void 0!==z&&a("argWorker",{errorPath:JSON.stringify(z)}).then(l=>I(l),l=>R(l)),a("argWorker",{json:JSON.stringify(J)}).then(l=>I(l),l=>R(l)))}}});