# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# analysis.algorithm.analysisWithEnabler = true
cpa.composite.inCPAEnabledAnalysis=true

analysis.checkCounterexamples = false
counterexample.export.enabled = false

analysis.initialStatesFor = TARGET, EXIT
analysis.partitionInitialStates = true

analysis.algorithm.CEGAR = true
cegar.refiner = cpa.predicate.PredicateRefiner
cpa.predicate.refinement.performInitialStaticRefinement = false

cpa.predicate.handlePointerAliasing = false
cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = true
cpa.composite.aggregateBasicBlocks = false

cpa = cpa.backward.BackwardCPA
BackwardCPA.cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.predicate.PredicateCPA

specification = ../specification/default.spc
backwardSpecification = ../specification/MainEntry.spc

#include resource-limits.properties

[analysis.traversal]
order = bfs
useReversePostorder = false
usePostorder = true
useCallstack = true
