analysis.checkCounterexamples = false
counterexample.export.exportAsSource=false

analysis.initialStatesFor = TARGET
analysis.partitionInitialStates = true

analysis.algorithm.CEGAR = true
cegar.refiner = cpa.predicate.PredicateRefiner
cpa.predicate.refinement.performInitialStaticRefinement = false

# predicate analysis does not yet support pointer handling backwards
cpa.predicate.handlePointerAliasing = false

# cpa.predicate.abstractionType = FORMULA
# cpa.predicate.blk.threshold = 1
cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = true
cpa.composite.aggregateBasicBlocks = false

cpa = cpa.backward.BackwardCPA
BackwardCPA.cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA,cpa.predicate.PredicateCPA

specification = specification/default.spc
backwardSpecification = specification/MainEntry.spc

counterexample.export.allowImpreciseCounterexamples=true

#include includes/resource-limits.properties

[analysis.traversal]
order = bfs
useReversePostorder = false
usePostorder = true
useCallstack = true
